	.include "defines.s"
	.include "ram.s"
	.include "macros.s"

	.global RomBase
	.text

RomBase:
    .include "rom_header.s"
	.include "crt0.s"

	thumb_func_start _entryPoint
_entryPoint: @ 080001d8
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	add		r6, r0, #0x0
	mov		r5, #0x0
_080001e0:
	lsl		r0, r5, #0x2
	add		r0, r0, r5
	lsl		r0, r0, #0x2
	add		r0, #0x38
	add		r4, r6, r0
	ldr		r0, [r4, #0xc]
	cmp		r0, #0x7
	bls		_080001f2
	b		_080002e0
_080001f2:
	lsl		r0, r0, #0x2
	ldr		r1, _080001fc
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_080001fc:	.4byte 0x08000200
_08000200:	.4byte 0x080002e0

.incbin "base.gba", 0x204, 0x1C
	thumb_func_end _entryPoint


.incbin "base.gba", 0x220, 0xC0

_080002e0:

.incbin "base.gba", 0x2E0, 0x8
_080002e8:

.incbin "base.gba", 0x2E8, 0x4
_080002ec:

.incbin "base.gba", 0x2EC, 0x24
_08000310:	.4byte 0x080f4444

_08000314:

.incbin "base.gba", 0x314, 0x4
_08000318:

.incbin "base.gba", 0x318, 0x28
_08000340:

.incbin "base.gba", 0x340, 0x10
	thumb_func_start sub_08000350
sub_08000350:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	add		r6, r0, #0x0
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r2, #0x92
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	ldr		r2, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	cmp		r2, r0
	beq		_080003b4
	cmp		r2, #0x0
	beq		_08000388
	mov		r0, #0x9a
	lsl		r0, r0, #0x1
	add		r2, r6, r0
	add		r0, #0x4
	add		r1, r6, r0
	mov		r0, #0x9c
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	b		_080003a4
_08000388:
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r3, r6, r1
	mov		r0, #0x9c
	lsl		r0, r0, #0x1
	add		r2, r6, r0
	sub		r1, #0x18
	add		r0, r6, r1
	ldr		r1, [r0, #0x0]
	lsl		r1, r1, #0x4
	mov		r0, #0x9c
	sub		r0, r0, r1
	str		r0, [r2, #0x0]
	str		r0, [r3, #0x0]
_080003a4:
	mov		r2, #0x98
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	add		r2, #0xc
	add		r0, r6, r2
	str		r1, [r0, #0x0]
_080003b4:
	mov		r0, #0x92
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	sub		r0, #0x4
	add		r2, r6, r0
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	mov		r1, #0x98
	lsl		r1, r1, #0x1
	add		r3, r6, r1
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x1
	beq		_080003d8
	cmp		r0, #0x1
	ble		_0800048c
	cmp		r0, #0x2
	beq		_080003f6
	b		_0800048c
_080003d8:
	mov		r2, #0x9c
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	sub		r2, #0x4
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0x2
	str		r0, [r3, #0x0]
	mov		r0, #0x9e
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	b		_0800048c
_080003f6:
	mov		r0, #0x9e
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x8
	bgt		_0800045c
	mov		r1, #0x9c
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r4, [r0, #0x0]
	sub		r1, #0x10
	add		r0, r6, r1
	ldr		r1, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_0800041e
	lsl		r1, r1, #0x4
	b		_08000422
_0800041e:
	mov		r0, #0xd
	mul		r1, r0
_08000422:
	mov		r0, #0x9c
	sub		r3, r0, r1
	mov		r2, #0x9e
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	ldr		r1, _08000458
	lsl		r0, r0, #0x1b
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0800043a
	add		r0, #0x3f
_0800043a:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	mov		r0, #0x9a
	lsl		r0, r0, #0x1
	add		r2, r6, r0
	sub		r0, r3, r4
	mul		r0, r1
	asr		r0, r0, #0xf
	add		r0, r4, r0
	str		r0, [r2, #0x0]
	b		_0800048c

.incbin "base.gba", 0x456, 0x2

_08000458:	.4byte 0x08101068

_0800045c:
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r3, r6, r1
	sub		r1, #0xc
	add		r0, r6, r1
	ldr		r1, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_08000472
	lsl		r1, r1, #0x4
	b		_08000476
_08000472:
	mov		r0, #0xd
	mul		r1, r0
_08000476:
	mov		r0, #0x9c
	sub		r0, r0, r1
	str		r0, [r3, #0x0]
	mov		r2, #0x98
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	add		r2, #0xc
	add		r0, r6, r2
	str		r1, [r0, #0x0]
_0800048c:
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0800049a
	b		_0800065e
_0800049a:
	mov		r2, #0x90
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080004b8
	add		r0, r6, #0x0
	add		r0, #0xc4
	ldrb	r0, [r0, #0x0]
	mov		r8, r0
	mov		r0, #0x74
	add		r0, r0, r6
	mov		r10, r0
	mov		r1, #0x10
	b		_080004ca
_080004b8:
	mov		r2, #0x8c
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	ldrb	r0, [r0, #0x0]
	mov		r8, r0
	mov		r0, #0xc8
	add		r0, r0, r6
	mov		r10, r0
	mov		r1, #0xd
_080004ca:
	str		r1, [sp, #0x18]
	mov		r2, r8
	cmp		r2, #0x1
	ble		_080005a2
	mov		r1, #0xe4
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x2f
	and		r0, r1
	cmp		r0, #0x1f
	bhi		_080005a2
	ldr		r4, _08000538
	and		r7, r4
	mov		r0, #0x78
	orr		r7, r0
	ldr		r5, _0800053c
	and		r7, r5
	mov		r0, #0x84
	lsl		r0, r0, #0x10
	orr		r7, r0
	lsl		r3, r7, #0x10
	lsr		r3, r3, #0x10
	ldr		r0, [sp, #0xC]
	and		r0, r4
	orr		r0, r3
	asr		r2, r7, #0x10
	sub		r1, r2, #0x6
	lsl		r1, r1, #0x10
	and		r0, r5
	orr		r0, r1
	str		r0, [sp, #0xC]
	ldr		r0, [sp, #0x8]
	and		r0, r4
	orr		r0, r3
	add		r2, #0x10
	lsl		r2, r2, #0x10
	and		r0, r5
	orr		r0, r2
	str		r0, [sp, #0x8]
	mov		r2, r8
	cmp		r2, #0x2
	bne		_08000544
	mov		r1, #0x94
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_08000568
	ldr		r0, _08000540
	str		r1, [sp, #0x0]
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	mov		r2, #0x0
	b		_08000572

_08000538:	.4byte 0xffff0000
_0800053c:	.4byte 0x0000FFFF
_08000540:	.4byte 0x080f41f0

_08000544:
	mov		r2, #0x94
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_08000560
	ldr		r0, _0800055c
	str		r1, [sp, #0x0]
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	mov		r2, #0x0
	b		_08000572

_0800055c:	.4byte 0x080f41f0

_08000560:
	mov		r0, r8
	sub		r0, #0x1
	cmp		r1, r0
	bne		_08000580
_08000568:
	ldr		r0, _0800057c
	add		r1, sp, #0xc
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
_08000572:
	mov		r3, #0x0
	bl		sub_0802951c
	b		_080005a2

.incbin "base.gba", 0x57A, 0x2

_0800057c:	.4byte 0x080f41f8

_08000580:
	ldr		r0, _080005c8
	add		r1, sp, #0xc
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	str		r4, [sp, #0x4]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	ldr		r0, _080005cc
	str		r4, [sp, #0x0]
	str		r4, [sp, #0x4]
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
_080005a2:
	mov		r5, #0x0
	add		r0, sp, #0x14
	mov		r9, r0
	cmp		r5, r8
	bge		_0800061e
	mov		r7, #0x0
	mov		r4, r10
_080005b0:
	ldrb	r2, [r4, #0x0]
	mov		r1, #0x94
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	blt		_080005c2
	cmp		r5, r0
	ble		_080005d4
_080005c2:
	ldr		r1, _080005d0
	b		_080005e6

.incbin "base.gba", 0x5C6, 0x2

_080005c8:	.4byte 0x080f41f8
_080005cc:	.4byte 0x080f41f0
_080005d0:	.4byte 0x080f4498

_080005d4:
	ldr		r0, [r4, #0x4]
	cmp		r0, #0x0
	bne		_080005e4
	ldr		r1, _080005e0
	b		_080005e6

.incbin "base.gba", 0x5DE, 0x2

_080005e0:	.4byte 0x080f4480

_080005e4:
	ldr		r1, _08000640
_080005e6:
	lsl		r0, r2, #0x2
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	add		r0, r0, r7
	sub		r0, #0x18
	lsl		r0, r0, #0x10
	mov		r1, #0x78
	orr		r1, r0
	str		r1, [sp, #0x10]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x4]
	add		r0, r2, #0x0
	add		r1, sp, #0x10
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	ldr		r2, [sp, #0x18]
	add		r7, r7, r2
	add		r4, #0x8
	add		r5, #0x1
	cmp		r5, r8
	blt		_080005b0
_0800061e:
	ldr		r0, _08000644
	str		r0, [sp, #0x14]
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_0800064c
	ldr		r0, _08000648
	str		r1, [sp, #0x0]
	str		r1, [sp, #0x4]
	mov		r1, r9
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	b		_0800065e

_08000640:	.4byte 0x080f4468
_08000644:	.4byte 0x00840078
_08000648:	.4byte 0x080f4160

_0800064c:
	ldr		r0, _0800068c
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r1, [sp, #0x4]
	mov		r1, r9
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
_0800065e:
	mov		r2, #0xe4
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	lsr		r0, r0, #0x2
	mov		r7, #0x3
	bic		r7, r0
	mov		r5, #0x0
	ldr		r0, _08000690
	mov		r8, r0
	sub		r4, r7, #0x4
_08000674:
	mov		r0, #0x1
	bl		sub_08028130
	mov		r1, #0xaf
	sub		r1, r1, r5
	lsl		r1, r1, #0x1
	add		r1, r1, r0
	add		r0, r5, r7
	cmp		r0, #0x3
	bgt		_08000694
	lsl		r0, r0, #0x1
	b		_08000696

_0800068c:	.4byte 0x080f4290
_08000690:	.4byte 0x080e5f00

_08000694:
	lsl		r0, r4, #0x1
_08000696:
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r4, #0x1
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_08000674
	mov		r0, #0x1
	bl		sub_08028168
	mov		r2, #0xe2
	lsl		r2, r2, #0x2
	add		r1, r6, r2
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x5
	ble		_080006f8
	mov		r2, #0x0
	str		r2, [r1, #0x0]
	mov		r0, #0xe3
	lsl		r0, r0, #0x2
	add		r4, r6, r0
	ldr		r0, [r4, #0x0]
	add		r0, #0x1
	str		r0, [r4, #0x0]
	cmp		r0, #0xf
	ble		_080006d0
	str		r2, [r4, #0x0]
_080006d0:
	ldr		r4, [r4, #0x0]
	lsl		r4, r4, #0x5
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r4, r4, r1
	add		r4, r6, r4
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r2, #0x98
	lsl		r2, r2, #0x1
	add		r1, r1, r2
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
_080006f8:
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08000350

	thumb_func_start sub_08000708
sub_08000708:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x8
	add		r5, r0, #0x0
	mov		r0, #0xaa
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x8
	ble		_08000734
	mov		r2, #0x0
	str		r2, [r1, #0x0]
	mov		r3, #0xa8
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x7
	ble		_08000734
	str		r2, [r1, #0x0]
_08000734:
	mov		r4, #0xa8
	lsl		r4, r4, #0x1
	add		r0, r5, r4
	ldr		r4, [r0, #0x0]
	lsl		r4, r4, #0x5
	ldr		r0, _08000770
	add		r4, r4, r0
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xf4
	add		r0, r4, #0x0
	mov		r2, #0x4
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	mov		r0, #0xac
	lsl		r0, r0, #0x1
	add		r6, r5, r0
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x1
	beq		_080007a4
	cmp		r0, #0x1
	bgt		_08000774
	cmp		r0, #0x0
	beq		_0800077a
	b		_08000874

_08000770:	.4byte 0x080f1320

_08000774:
	cmp		r0, #0x2
	beq		_080007e0
	b		_08000874
_0800077a:
	mov		r1, #0xa6
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08000874
	mov		r2, #0xb4
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r3, #0xb6
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	ldr		r1, [r1, #0x0]
	cmp		r0, r1
	ble		_08000874
	mov		r0, #0x1
	str		r0, [r6, #0x0]
	b		_08000874
_080007a4:
	mov		r4, #0xb4
	lsl		r4, r4, #0x1
	add		r0, r5, r4
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	mov		r0, #0xae
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x3c
	strh	r0, [r1, #0x0]
	mov		r3, #0xaf
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	ldr		r0, _080007dc
	strh	r0, [r1, #0x0]
	sub		r4, #0x8
	add		r1, r5, r4
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	str		r0, [r1, #0x0]
	mov		r1, #0xb2
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	str		r2, [r0, #0x0]
	mov		r0, #0x2
	str		r0, [r6, #0x0]
	b		_08000874

.incbin "base.gba", 0x7DA, 0x2

_080007dc:	.4byte 0x0000FFF6

_080007e0:
	mov		r3, #0xb4
	lsl		r3, r3, #0x1
	add		r2, r5, r3
	ldr		r0, [r2, #0x0]
	add		r1, r0, #0x1
	str		r1, [r2, #0x0]
	cmp		r1, #0x20
	bgt		_0800085c
	mov		r0, #0x20
	sub		r0, r0, r1
	add		r2, r0, #0x0
	mul		r2, r0
	lsl		r0, r2, #0x1
	add		r0, r0, r2
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	lsl		r0, r0, #0x1
	neg		r0, r0
	cmp		r0, #0x0
	bge		_0800080c
	ldr		r4, _08000854
	add		r0, r0, r4
_0800080c:
	asr		r1, r0, #0xa
	mov		r0, #0xa
	sub		r0, r0, r1
	mov		r3, #0xae
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	strh	r0, [r1, #0x0]
	lsl		r0, r2, #0x4
	sub		r0, r0, r2
	lsl		r0, r0, #0x2
	cmp		r0, #0x0
	bge		_08000828
	ldr		r4, _08000854
	add		r0, r0, r4
_08000828:
	asr		r1, r0, #0xa
	mov		r0, #0x32
	sub		r0, r0, r1
	mov		r1, #0xaf
	lsl		r1, r1, #0x1
	add		r2, r5, r1
	strh	r0, [r2, #0x0]
	mov		r2, #0xb0
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldr		r0, [r1, #0x0]
	sub		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r3, #0xb2
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	ldr		r0, [r1, #0x0]
	ldr		r4, _08000858
	add		r0, r0, r4
	str		r0, [r1, #0x0]
	b		_08000874

.incbin "base.gba", 0x852, 0x2

_08000854:	.4byte 0x000003FF
_08000858:	.4byte 0xFFFFF000

_0800085c:
	mov		r4, #0x0
	str		r4, [r2, #0x0]
	bl		sub_080270d0
	mov		r1, #0xb6
	lsl		r1, r1, #0x1
	add		r2, r5, r1
	mov		r1, #0xff
	and		r1, r0
	add		r1, #0xff
	str		r1, [r2, #0x0]
	str		r4, [r6, #0x0]
_08000874:
	mov		r2, #0xac
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	ble		_080008a2
	ldr		r0, _080008ac
	mov		r3, #0xae
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	mov		r4, #0xb0
	lsl		r4, r4, #0x1
	add		r2, r5, r4
	ldr		r3, [r2, #0x0]
	add		r4, #0x4
	add		r2, r5, r4
	ldr		r2, [r2, #0x0]
	str		r2, [sp, #0x0]
	mov		r2, #0x0
	str		r2, [sp, #0x4]
	add		r2, r3, #0x0
	bl		sub_0802951c
_080008a2:
	add		sp, #0x8
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8AA, 0x2

_080008ac:	.4byte 0x080f41e8
	thumb_func_end sub_08000708

	thumb_func_start sub_080008b0
sub_080008b0:
	push	{ r4, lr }
	sub		sp, #0x8
	add		r3, r0, #0x0
	mov		r1, #0xa6
	lsl		r1, r1, #0x1
	add		r0, r3, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08000990
	mov		r2, #0xb8
	lsl		r2, r2, #0x1
	add		r4, r3, r2
	ldr		r2, [r4, #0x0]
	cmp		r2, #0x1
	beq		_080008fc
	cmp		r2, #0x1
	bgt		_080008d8
	cmp		r2, #0x0
	beq		_080008de
	b		_08000960
_080008d8:
	cmp		r2, #0x2
	beq		_0800091c
	b		_08000960
_080008de:
	mov		r0, #0xbc
	lsl		r0, r0, #0x1
	add		r1, r3, r0
	ldr		r0, _080008f8
	str		r0, [r1, #0x0]
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r3, r1
	str		r2, [r0, #0x0]
	mov		r0, #0x1
	str		r0, [r4, #0x0]
	b		_08000960

.incbin "base.gba", 0x8F6, 0x2

_080008f8:	.4byte 0xFFE00000

_080008fc:
	mov		r0, #0xba
	lsl		r0, r0, #0x1
	add		r2, r3, r0
	ldr		r0, [r2, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	ldr		r1, _08000918
	cmp		r0, r1
	ble		_08000960
	mov		r0, #0x0
	str		r0, [r2, #0x0]
	mov		r0, #0x2
	str		r0, [r4, #0x0]
	b		_08000960

_08000918:	.4byte 0x00000257

_0800091c:
	mov		r2, #0xba
	lsl		r2, r2, #0x1
	add		r1, r3, r2
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r4, #0xbc
	lsl		r4, r4, #0x1
	add		r2, r3, r4
	ldr		r0, [r2, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0x6
	add		r0, r0, r4
	str		r0, [r2, #0x0]
	ldrb	r0, [r1, #0x0]
	ldr		r1, _08000998
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08000946
	add		r0, #0x3f
_08000946:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r2, #0xbe
	lsl		r2, r2, #0x1
	add		r1, r3, r2
	lsl		r0, r0, #0x3
	mov		r4, #0x80
	lsl		r4, r4, #0xe
	add		r0, r0, r4
	str		r0, [r1, #0x0]
_08000960:
	mov		r1, #0xbc
	lsl		r1, r1, #0x1
	add		r0, r3, r1
	mov		r2, #0x2
	ldrsh	r0, [r0, r2]
	mov		r4, #0xc0
	lsl		r4, r4, #0x1
	add		r1, r3, r4
	mov		r2, #0x0
	strh	r0, [r1, #0x0]
	sub		r4, #0x4
	add		r0, r3, r4
	mov		r4, #0x2
	ldrsh	r0, [r0, r4]
	mov		r4, #0xc1
	lsl		r4, r4, #0x1
	add		r3, r3, r4
	strh	r0, [r3, #0x0]
	ldr		r0, _0800099c
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
_08000990:
	add		sp, #0x8
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08000998:	.4byte 0x08101068
_0800099c:	.4byte 0x080f4428
	ldr		r0, _08000a30
	ldr		r2, [r0, #0x0]
	ldr		r1, _08000a34
	ldrh	r0, [r2, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x2]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x4]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x6]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x8]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0xa]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0xc]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0xe]
	strh	r0, [r1, #0x0]
	add		r1, #0x32
	ldrh	r0, [r2, #0x10]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x12]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x14]
	strh	r0, [r1, #0x0]
	sub		r1, #0x14
	ldrh	r0, [r2, #0x16]
	strh	r0, [r1, #0x0]
	add		r1, #0x4
	ldrh	r0, [r2, #0x18]
	strh	r0, [r1, #0x0]
	sub		r1, #0x2
	ldrh	r0, [r2, #0x1a]
	strh	r0, [r1, #0x0]
	add		r1, #0x4
	ldrh	r0, [r2, #0x1c]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x1e]
	strh	r0, [r1, #0x0]
	ldr		r3, _08000a38
	ldrh	r0, [r2, #0x20]
	mov		r1, #0x10
	orr		r0, r1
	strh	r0, [r3, #0x0]
	ldr		r1, _08000a3c
	ldrh	r0, [r2, #0x22]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x24]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x26]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x28]
	strh	r0, [r1, #0x0]
	sub		r1, #0xe
	ldrh	r0, [r2, #0x2a]
	strh	r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0xA2E, 0x2

_08000a30:	.4byte 0x03000000
_08000a34:	.4byte BG0X_Offset
_08000a38:	.4byte InsideofOBJWindow_OutsideofWindows
_08000a3c:	.4byte BG0Control
	thumb_func_end sub_080008b0

	thumb_func_start sub_08000a40
sub_08000a40:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r0, _08000a64
	ldr		r7, [r0, #0x0]
	ldr		r1, _08000a68
	mov		r0, #0x0
	bl		sub_080281c4
	mov		r1, #0xa4
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08000a70
	ldr		r4, _08000a6c
	b		_08000a7e

.incbin "base.gba", 0xA62, 0x2

_08000a64:	.4byte 0x03000000
_08000a68:	.4byte 0x06001000
_08000a6c:	.4byte 0x080e8ee0

_08000a70:
	mov		r2, #0xc2
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08000a94
	ldr		r4, _08000a90
_08000a7e:
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	b		_08000aa4

.incbin "base.gba", 0xA8E, 0x2

_08000a90:	.4byte 0x080e8e4c

_08000a94:
	ldr		r4, _08000aec
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
_08000aa4:
	bl		_DrawFrameRunAudio
	mov		r1, #0xc2
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08000afc
	ldr		r4, _08000af0
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x80
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r4, _08000af4
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x80
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r4, _08000af8
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	b		_08000b0e

_08000aec:	.4byte 0x080e8db8
_08000af0:	.4byte 0x080e8c78
_08000af4:	.4byte 0x080e8d70
_08000af8:	.4byte 0x080e8d98

_08000afc:
	ldr		r4, _08000da8
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x80
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
_08000b0e:
	mov		r0, #0x1
	bl		sub_08028168
	bl		_DrawFrameRunAudio
	ldr		r0, _08000dac
	ldr		r4, _08000db0
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08000db4
	ldr		r3, _08000db8
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08000dbc
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08000dc0
	ldr		r5, _08000dc4
	add		r1, r4, #0x0
	add		r3, r5, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08000dc8
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08000dcc
	add		r1, r4, #0x0
	add		r3, r5, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r5, _08000dd0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x1
	bl		sub_080281fc
	bl		_DrawFrameRunAudio
	ldr		r0, _08000dd4
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08000dd8
	ldr		r6, _08000ddc
	add		r1, r4, #0x0
	add		r3, r6, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08000de0
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08000de4
	ldr		r3, _08000de8
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08000dec
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08000df0
	mov		r8, r2
	add		r1, r4, #0x0
	add		r3, r6, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r5, _08000df4
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x1
	bl		sub_08028168
	bl		_DrawFrameRunAudio
	ldr		r0, _08000df8
	mov		r2, #0xc4
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	ldr		r0, _08000dfc
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08000e00
	ldr		r5, _08000e04
	add		r1, r4, #0x0
	add		r3, r5, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08000e08
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08000e0c
	add		r1, r4, #0x0
	add		r3, r5, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08000e10
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08000e14
	add		r1, r4, #0x0
	add		r3, r5, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08000e18
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08000e1c
	add		r1, r4, #0x0
	add		r3, r5, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08000e20
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08000e24
	ldr		r3, _08000e28
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08000e2c
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08000e30
	add		r1, r4, #0x0
	add		r3, r6, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08000e34
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08000e38
	ldr		r3, _08000e3c
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08000e40
	ldr		r4, _08000e44
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	ldr		r0, _08000e48
	mov		r2, #0xb0
	lsl		r2, r2, #0x5
	add		r1, r4, r2
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	ldr		r0, _08000e4c
	mov		r2, #0xb0
	lsl		r2, r2, #0x6
	add		r1, r4, r2
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	ldr		r0, _08000e50
	mov		r1, #0x84
	lsl		r1, r1, #0x7
	add		r4, r4, r1
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	ldr		r0, _08000e54
	ldr		r1, _08000e58
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	mov		r2, #0xa4
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08000d4a
	ldr		r0, _08000e5c
	mov		r1, r8
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r4, _08000e60
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x80
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	ldr		r4, _08000e64
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
_08000d4a:
	bl		_DrawFrameRunAudio
	ldrh	r0, [r7, #0x22]
	mov		r1, #0x0
	ldr		r0, _08000e68
	strh	r0, [r7, #0x22]
	ldrh	r0, [r7, #0x24]
	ldr		r0, _08000e6c
	strh	r0, [r7, #0x24]
	ldrh	r0, [r7, #0x26]
	ldr		r0, _08000e70
	strh	r0, [r7, #0x26]
	ldrh	r0, [r7, #0x28]
	ldr		r0, _08000e74
	strh	r0, [r7, #0x28]
	ldrh	r0, [r7, #0x10]
	mov		r0, #0xbf
	strh	r0, [r7, #0x10]
	ldrh	r0, [r7, #0x14]
	mov		r0, #0x10
	strh	r0, [r7, #0x14]
	ldrh	r0, [r7, #0x2a]
	mov		r0, #0xe2
	lsl		r0, r0, #0x5
	strh	r0, [r7, #0x2a]
	ldrh	r0, [r7, #0x0]
	strh	r1, [r7, #0x0]
	ldrh	r0, [r7, #0x2]
	strh	r1, [r7, #0x2]
	ldrh	r0, [r7, #0x4]
	strh	r1, [r7, #0x4]
	ldrh	r0, [r7, #0x6]
	mov		r0, #0x20
	strh	r0, [r7, #0x6]
	ldrh	r0, [r7, #0x8]
	strh	r1, [r7, #0x8]
	ldrh	r0, [r7, #0xa]
	strh	r1, [r7, #0xa]
	ldrh	r0, [r7, #0xc]
	strh	r1, [r7, #0xc]
	ldrh	r0, [r7, #0xe]
	strh	r1, [r7, #0xe]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08000da8:	.4byte 0x080e8c78
_08000dac:	.4byte 0x080e8f74
_08000db0:	.4byte 0x02025400
_08000db4:	.4byte 0x06004000
_08000db8:	.4byte 0x80001400
_08000dbc:	.4byte 0x080ea1cc
_08000dc0:	.4byte 0x06008000
_08000dc4:	.4byte 0x80001300
_08000dc8:	.4byte 0x080eb678
_08000dcc:	.4byte 0x0600A600
_08000dd0:	.4byte 0x080efdac
_08000dd4:	.4byte 0x080efb74
_08000dd8:	.4byte 0x06002000
_08000ddc:	.4byte 0x80000400
_08000de0:	.4byte 0x080f0048
_08000de4:	.4byte 0x06002800
_08000de8:	.4byte 0x80000800
_08000dec:	.4byte 0x080f045c
_08000df0:	.4byte 0x06003800
_08000df4:	.4byte 0x080e5cfc
_08000df8:	.4byte 0x080e5e54
_08000dfc:	.4byte 0x080e5f08
_08000e00:	.4byte 0x06011400
_08000e04:	.4byte 0x80000A80
_08000e08:	.4byte 0x080e6904
_08000e0c:	.4byte 0x06012900
_08000e10:	.4byte 0x080e6e54
_08000e14:	.4byte 0x06013E00
_08000e18:	.4byte 0x080e75b8
_08000e1c:	.4byte 0x06015300
_08000e20:	.4byte 0x080e7a94
_08000e24:	.4byte 0x06016800
_08000e28:	.4byte 0x80000200
_08000e2c:	.4byte 0x080e8038
_08000e30:	.4byte 0x06016C00
_08000e34:	.4byte 0x080e7c40
_08000e38:	.4byte 0x06017400
_08000e3c:	.4byte 0x80000260
_08000e40:	.4byte 0x080ec3f8
_08000e44:	.4byte 0x02010400
_08000e48:	.4byte 0x080ed338
_08000e4c:	.4byte 0x080ee1c0
_08000e50:	.4byte 0x080ef0a8
_08000e54:	.4byte 0x080f0f44
_08000e58:	.4byte 0x02004400
_08000e5c:	.4byte 0x080f0a24
_08000e60:	.4byte 0x080f12ec
_08000e64:	.4byte 0x080f130c
_08000e68:	.4byte 0x00004204
_08000e6c:	.4byte 0x00000405
_08000e70:	.4byte 0x0000850A
_08000e74:	.4byte 0x0000070B
	thumb_func_end sub_08000a40

	thumb_func_start sub_08000e78
sub_08000e78:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	mov		r0, #0x1
	mov		r9, r0
	mov		r1, #0x0
	mov		r10, r1
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	mov		r3, #0x0
	str		r3, [sp, #0x4]
	mov		r0, #0x0
	str		r0, [sp, #0x8]
	str		r1, [sp, #0xC]
	ldr		r0, _08001094
	strh		r2, [r0, #0x16]
	bl		sub_08027744
	ldr		r4, _08001098
	ldr		r3, _0800109c
	add		r4, r4, r3
	ldr		r1, _080010a0
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	add		r0, r4, #0x0
	bl		sub_08027188
	ldr		r5, _080010a4
	mov		r2, #0xe5
	lsl		r2, r2, #0x2
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_080271b8
	str		r0, [r5, #0x0]
	add		r6, r0, #0x0
	mov		r2, #0xa0
	lsl		r2, r2, #0x5
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_080271b8
	str		r0, [r6, #0x34]
	mov		r1, #0xc2
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r2, r9
	str		r2, [r0, #0x0]
	add		r3, r6, #0x0
	add		r3, #0xc4
	str		r3, [sp, #0x10]
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	add		r0, r6, r0
	str		r0, [sp, #0x14]
	mov		r1, #0x4
	str		r1, [sp, #0x18]
	mov		r2, #0xc2
	lsl		r2, r2, #0x1
	add		r2, r2, r6
	mov		r8, r2
	mov		r7, #0x0
	mov		r5, #0x4
_08000efc:
	mov		r4, #0x0
_08000efe:
	bl		sub_08057370
	add		r1, r4, r7
	add		r0, #0x28
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	beq		_08000f18
	mov		r0, #0x0
	mov		r3, r8
	str		r0, [r3, #0x0]
_08000f18:
	add		r4, #0x1
	cmp		r4, #0x2
	ble		_08000efe
	add		r7, #0x3
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08000efc
	mov		r0, #0xa4
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r5, #0x0
	mov		r1, #0xa4
	lsl		r1, r1, #0x1
	add		r1, r1, r6
	mov		r8, r1
	mov		r7, #0x0
_08000f3c:
	mov		r4, #0x0
_08000f3e:
	bl		sub_08057370
	add		r1, r4, r7
	add		r0, #0x46
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08000f54
	mov		r0, #0x0
	mov		r2, r8
	str		r0, [r2, #0x0]
_08000f54:
	add		r4, #0x1
	cmp		r4, #0x2
	ble		_08000f3e
	add		r7, #0x3
	add		r5, #0x1
	cmp		r5, #0x4
	ble		_08000f3c
	mov		r0, #0x0
	str		r0, [r6, #0x2c]
	str		r0, [r6, #0x30]
	ldr		r2, [sp, #0x10]
	mov		r0, #0x3
	strb	r0, [r2, #0x0]
	mov		r5, #0x0
	ldr		r4, _080010a8
	mov		r3, #0x0
	add		r1, r6, #0x0
	add		r1, #0x74
_08000f78:
	add		r0, r5, r4
	ldrb	r0, [r0, #0x0]
	strb	r0, [r1, #0x0]
	str		r3, [r1, #0x4]
	add		r1, #0x8
	add		r5, #0x1
	ldrb	r0, [r2, #0x0]
	cmp		r5, r0
	blt		_08000f78
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	mov		r2, #0x90
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	mov		r3, #0x92
	lsl		r3, r3, #0x1
	add		r0, r6, r3
	str		r1, [r0, #0x0]
	add		r2, #0x8
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	add		r3, #0x8
	add		r0, r6, r3
	str		r1, [r0, #0x0]
	add		r2, #0x8
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	add		r3, #0x8
	add		r0, r6, r3
	mov		r2, #0x9c
	str		r2, [r0, #0x0]
	add		r3, #0x4
	add		r0, r6, r3
	str		r2, [r0, #0x0]
	add		r2, #0xa0
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	add		r3, #0x8
	add		r0, r6, r3
	str		r1, [r0, #0x0]
	mov		r2, #0xe2
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	mov		r3, #0xe3
	lsl		r3, r3, #0x2
	add		r0, r6, r3
	str		r1, [r0, #0x0]
	mov		r2, #0xa6
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	mov		r3, #0xb0
	lsl		r3, r3, #0x1
	add		r0, r6, r3
	str		r1, [r0, #0x0]
	add		r2, #0x18
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	add		r3, #0x8
	add		r0, r6, r3
	str		r1, [r0, #0x0]
	add		r2, #0x8
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	add		r3, #0x8
	add		r0, r6, r3
	str		r1, [r0, #0x0]
	mov		r1, #0x2
	add		r0, r6, #0x0
_0800100c:
	str		r1, [r0, #0x44]
	sub		r0, #0x14
	cmp		r0, r6
	bge		_0800100c
	mov		r1, #0x5
	add		r0, r6, #0x0
	add		r0, #0x14
	mov		r5, #0x1
_0800101c:
	str		r1, [r0, #0x44]
	add		r0, #0x14
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0800101c
	bl		sub_08070870
	bl		sub_080297c8
	ldrh	r0, [r6, #0x2a]
	mov		r0, #0x0
	strh	r0, [r6, #0x2a]
	ldrh	r0, [r6, #0x10]
	mov		r0, #0xbf
	strh	r0, [r6, #0x10]
	ldrh	r0, [r6, #0x14]
	mov		r0, #0x10
	strh	r0, [r6, #0x14]
	ldr		r5, _080010ac
	ldr		r4, _08001098
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	str		r5, [r4, #0xc]
	mov		r0, #0x2
	ldr		r1, _080010b0
	bl		sub_0807df78
	bl		sub_08000a40
	ldr		r1, _080010b4
	mov		r0, #0x46
	bl		sub_08029fcc
	mov		r0, #0x2
	mov		r1, #0x4
	bl		sub_0807df78
	thumb_func_end sub_08000e78

	thumb_func_start sub_0800106c
sub_0800106c:
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	mov		r1, #0xe4
	lsl		r1, r1, #0x2
	add		r0, r6, r1
	ldr		r1, [r0, #0x0]
	add		r1, #0x1
	str		r1, [r0, #0x0]
	ldr		r2, [sp, #0x14]
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_080010b8
	ldr		r3, [sp, #0x10]
	ldrb	r5, [r3, #0x0]
	add		r3, r6, #0x0
	add		r3, #0x74
	b		_080010c4

.incbin "base.gba", 0x1092, 0x2

_08001094:	.4byte 0x03003000
_08001098:	.4byte RunGameLogic_CallBack
_0800109c:	.4byte 0x00000704
_080010a0:	.4byte 0x0202A400
_080010a4:	.4byte 0x03000000
_080010a8:	.4byte 0x080f44b0
_080010ac:	.4byte 0x080009a1
_080010b0:	.4byte 0x00010001
_080010b4:	.4byte 0x080018ed

_080010b8:
	mov		r1, #0x8c
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldrb	r5, [r0, #0x0]
	add		r3, r6, #0x0
	add		r3, #0xc8
_080010c4:
	mov		r4, #0x0
	cmp		r4, r5
	bge		_08001108
_080010ca:
	lsl		r1, r4, #0x3
	add		r0, r1, r3
	ldrb	r0, [r0, #0x0]
	add		r2, r1, #0x0
	cmp		r0, #0x5
	bhi		_08001102
	lsl		r0, r0, #0x2
	ldr		r1, _080010e0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_080010e0:	.4byte 0x080010e4
_080010e4:	.4byte 0x080010fc

.incbin "base.gba", 0x10E8, 0x14
	thumb_func_end sub_0800106c


.incbin "base.gba", 0x10FC, 0x6

_08001102:

.incbin "base.gba", 0x1102, 0x6
_08001108:

.incbin "base.gba", 0x1108, 0x8
_08001110:

.incbin "base.gba", 0x1110, 0xC
_0800111c:	.4byte 0x08001120
_08001120:	.4byte 0x08001308
_08001124:	.4byte 0x08001198

.incbin "base.gba", 0x1128, 0x70

_08001198:

.incbin "base.gba", 0x1198, 0x5D8
_08001770:	.4byte 0x08001788

.incbin "base.gba", 0x1774, 0x48

_080017bc:

.incbin "base.gba", 0x17BC, 0xE
_080017ca:

.incbin "base.gba", 0x17CA, 0x4
_080017ce:

.incbin "base.gba", 0x17CE, 0x1A
_080017e8:

.incbin "base.gba", 0x17E8, 0x1A
_08001802:

.incbin "base.gba", 0x1802, 0x1E
_08001820:

.incbin "base.gba", 0x1820, 0x24
_08001844:

.incbin "base.gba", 0x1844, 0x10
_08001854:	.4byte 0x0203EE9C
_08001858:	.4byte 0x06008000
_0800185c:	.4byte 0x81000020
_08001860:	.4byte 0x080f44b8
_08001864:	.4byte 0x06006000
_08001868:	.4byte 0x80000A00

_0800186c:

.incbin "base.gba", 0x186C, 0x10
_0800187c:

.incbin "base.gba", 0x187C, 0xA
_08001886:

.incbin "base.gba", 0x1886, 0xA
_08001890:

.incbin "base.gba", 0x1890, 0xA
_0800189a:

.incbin "base.gba", 0x189A, 0x12
_080018ac:

.incbin "base.gba", 0x18AC, 0xE
_080018ba:

.incbin "base.gba", 0x18BA, 0xA
_080018c4:

.incbin "base.gba", 0x18C4, 0x4
_080018c8:

.incbin "base.gba", 0x18C8, 0x30

_080018f8:	.4byte 0x03000000
_080018fc:	.4byte InsideofOBJWindow_OutsideofWindows

	thumb_func_start _ShowMGBIntro
_ShowMGBIntro:
	push	{ r4, r5, r6, lr }
	ldr		r6, _08001a18
	ldr		r0, _08001a1c
	add		r4, r6, r0
	ldr		r1, _08001a20
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	add		r0, r4, #0x0
	bl		sub_08027188
	ldr		r5, _08001a24
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0xc
	bl		sub_080271b8
	str		r0, [r5, #0x0]
	add		r5, r0, #0x0
	ldrh	r0, [r5, #0x8]
	mov		r0, #0x4
	strh	r0, [r5, #0x8]
	ldrh	r0, [r5, #0x6]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	strh	r0, [r5, #0x6]
	ldrh	r0, [r5, #0x0]
	mov		r0, #0xbf
	strh	r0, [r5, #0x0]
	ldrh	r0, [r5, #0x4]
	mov		r0, #0x10
	strh	r0, [r5, #0x4]
	ldr		r4, _08001a28
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	str		r4, [r6, #0xc]
	mov		r0, #0x2
	ldr		r1, _08001a2c
	bl		sub_0807df78
	bl		_DrawFrameRunAudio
	ldr		r0, _08001a30
	ldr		r4, _08001a34
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08001a38
	ldr		r3, _08001a3c
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	mov		r1, #0xc0
	lsl		r1, r1, #0x13
	mov		r0, #0x0
	bl		sub_080281c4
	ldr		r4, _08001a40
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x1
	bl		sub_080281fc
	bl		_DrawFrameRunAudio
	ldr		r4, _08001a44
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	bl		_DrawFrameRunAudio
	mov		r4, #0x0
	mov		r6, #0x10
_080019bc:
	bl		_DrawFrameRunAudio
	sub		r0, r6, r4
	ldrh	r1, [r5, #0x4]
	strh	r0, [r5, #0x4]
	add		r4, #0x1
	cmp		r4, #0xf
	ble		_080019bc
	mov		r4, #0x3b
_080019ce:
	bl		_DrawFrameRunAudio
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080019ce
	mov		r4, #0x0
_080019da:
	bl		_DrawFrameRunAudio
	ldrh	r0, [r5, #0x4]
	strh	r4, [r5, #0x4]
	add		r4, #0x1
	cmp		r4, #0xf
	ble		_080019da
	mov		r5, #0x0
	ldr		r4, _08001a18
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	str		r5, [r4, #0xc]
	mov		r0, #0x2
	ldr		r1, _08001a2c
	bl		sub_0807df78
	ldr		r0, _08001a48
	str		r0, [r4, #0x0]
	ldrb	r0, [r4, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r4, #0x8]
	mov		r0, #0x1
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

	.2byte	0x0
	
_08001a18:	.4byte RunGameLogic_CallBack
_08001a1c:	.4byte 0x00000704
_08001a20:	.4byte 0x0202A400
_08001a24:	.4byte 0x03000004
_08001a28:	.4byte 0x08001a4d
_08001a2c:	.4byte 0x00010001
_08001a30:	.4byte 0x080f3958
_08001a34:	.4byte 0x02010400
_08001a38:	.4byte 0x06004000
_08001a3c:	.4byte 0x80000600
_08001a40:	.4byte 0x080f4000
_08001a44:	.4byte 0x080f3938
_08001a48:	.4byte 0x08000E79

_08001a4c:
	ldr		r0, _08001a70
	ldr		r2, [r0, #0x0]
	ldr		r1, _08001a74
	ldrh	r0, [r2, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x2]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x4]
	strh	r0, [r1, #0x0]
	sub		r1, #0x54
	ldrh	r0, [r2, #0x6]
	strh	r0, [r1, #0x0]
	add		r1, #0x8
	ldrh	r0, [r2, #0x8]
	strh	r0, [r1, #0x0]
	bx		lr

_08001a70:	.4byte 0x03000004
_08001a74:	.4byte ColorSpecialEffectsSElection
	thumb_func_end _ShowMGBIntro

	thumb_func_start sub_08001a78
sub_08001a78:
	push	{ r4, lr }
	ldr		r1, _08001aa8
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	mov		r1, #0x0
	ldr		r4, _08001aac
	mov		r3, #0x0
_08001a86:
	lsl		r0, r1, #0x2
	add		r2, r1, #0x1
	mov		r1, #0x3
	add		r0, r0, r4
	add		r0, #0x3
_08001a90:
	strb	r3, [r0, #0x0]
	sub		r0, #0x1
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08001a90
	add		r1, r2, #0x0
	cmp		r1, #0x3
	ble		_08001a86
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1AA6, 0x2

_08001aa8:	.4byte 0x03002D5C
_08001aac:	.4byte 0x03002FC0

.incbin "base.gba", 0x1AB0, 0xA4
	thumb_func_end sub_08001a78

	thumb_func_start sub_08001b54
sub_08001b54:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r2, r0, #0x0
	ldr		r7, _08001b70
	mov		r1, #0x1
	ldr		r0, _08001b74
	ldrb	r3, [r0, #0x1]
	cmp		r3, #0x1
	bgt		_08001b78
	mov		r3, #0x0
	b		_08001b88

.incbin "base.gba", 0x1B6E, 0x2

_08001b70:	.4byte 0x03000010
_08001b74:	.4byte 0x03003000

_08001b78:
	sub		r3, #0x1
	cmp		r3, #0x0
	beq		_08001b88
	ldr		r4, _08001bf8
	add		r0, r2, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08001b8a
_08001b88:
	mov		r1, #0x0
_08001b8a:
	mov		r0, #0x17
	ldrsb	r0, [r7, r0]
	cmp		r3, r0
	beq		_08001b94
	mov		r1, #0x1
_08001b94:
	ldr		r0, _08001bfc
	mov		r9, r0
	cmp		r1, #0x0
	bne		_08001ba2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08001bea
_08001ba2:
	mov		r1, #0x0
	add		r6, r7, #0x4
	mov		r4, #0xd
	add		r4, r4, r7
	mov		r12, r4
	mov		r0, #0x12
	add		r0, r0, r7
	mov		r8, r0
	mov		r5, #0x0
	add		r2, r7, #0x0
	add		r2, #0x9
	mov		r4, #0x4
_08001bba:
	add		r0, r7, r1
	strb	r5, [r0, #0x0]
	add		r0, r2, r1
	strb	r4, [r0, #0x0]
	add		r1, #0x1
	cmp		r1, #0x3
	ble		_08001bba
	mov		r1, #0x0
	mov		r2, #0x0
	mov		r5, r12
	mov		r4, r8
_08001bd0:
	add		r0, r6, r1
	strb	r2, [r0, #0x0]
	add		r0, r5, r1
	strb	r2, [r0, #0x0]
	add		r0, r4, r1
	strb	r2, [r0, #0x0]
	add		r1, #0x1
	cmp		r1, #0x4
	ble		_08001bd0
	strb	r3, [r7, #0x17]
	mov		r0, #0x1
	mov		r1, r9
	str		r0, [r1, #0x0]
_08001bea:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1BF6, 0x2

_08001bf8:	.4byte 0x00000D84
_08001bfc:	.4byte 0x03000028
	thumb_func_end sub_08001b54

	thumb_func_start sub_08001c00
sub_08001c00:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	ldr		r1, _08001c88
	add		r0, r4, r1
	ldrb	r5, [r0, #0x0]
	add		r1, #0x3
	add		r0, r4, r1
	ldrh	r0, [r0, #0x0]
	mov		r8, r0
	add		r1, #0x2
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	mov		r9, r0
	add		r1, #0x1
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	mov		r10, r0
	mov		r2, #0x0
	cmp		r2, r5
	bge		_08001c4c
	mov		r7, #0x7
	ldr		r0, _08001c8c
	add		r3, r4, r0
	ldr		r6, _08001c90
_08001c38:
	ldmia	r3!, { r0 }
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	add		r0, r7, #0x0
	and		r0, r1
	add		r1, r2, r6
	strb	r0, [r1, #0x0]
	add		r2, #0x1
	cmp		r2, r5
	blt		_08001c38
_08001c4c:
	bl		_DrawFrameRunAudio
	add		r0, r4, #0x0
	bl		sub_08042668
	bl		_DrawFrameRunAudio
	ldr		r1, _08001c88
	add		r0, r4, r1
	strb	r5, [r0, #0x0]
	add		r1, #0x3
	add		r0, r4, r1
	mov		r1, r8
	strh	r1, [r0, #0x0]
	ldr		r1, _08001c94
	add		r0, r4, r1
	mov		r1, r9
	strb	r1, [r0, #0x0]
	ldr		r1, _08001c98
	add		r0, r4, r1
	mov		r1, r10
	strb	r1, [r0, #0x0]
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1C86, 0x2

_08001c88:	.4byte 0x000007D7
_08001c8c:	.4byte 0x000007F4
_08001c90:	.4byte 0x0300002C
_08001c94:	.4byte 0x000007DC
_08001c98:	.4byte 0x000007DD
	thumb_func_end sub_08001c00

	thumb_func_start sub_08001c9c
sub_08001c9c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x20
	add		r5, r0, #0x0
	ldr		r1, _08001d20
	add		r0, r5, r1
	ldrb	r7, [r0, #0x0]
	ldr		r2, _08001d24
	add		r0, r5, r2
	ldrh	r6, [r0, #0x0]
	add		r1, #0x5
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	mov		r8, r0
	cmp		r7, #0x0
	beq		_08001cdc
	mov		r2, #0x7
	mov		r12, r2
	mov		r3, sp
	ldr		r0, _08001d28
	add		r2, r5, r0
	add		r4, r7, #0x0
_08001cca:
	ldmia	r2!, { r0 }
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, r12
	and		r0, r1
	stmia	r3!, { r0 }
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08001cca
_08001cdc:
	add		r0, r5, #0x0
	bl		sub_08042668
	ldr		r1, _08001d20
	add		r0, r5, r1
	strb	r7, [r0, #0x0]
	mov		r2, #0x81
	neg		r2, r2
	add		r0, r2, #0x0
	and		r6, r0
	add		r1, #0x3
	add		r0, r5, r1
	strh	r6, [r0, #0x0]
	ldr		r2, _08001d2c
	add		r0, r5, r2
	mov		r1, r8
	strb	r1, [r0, #0x0]
	ldr		r4, _08001d30
	ldr		r0, [r4, #0x0]
	add		r0, #0x1
	str		r0, [r4, #0x0]
	mov		r2, #0xaf
	lsl		r2, r2, #0x3
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0xc]
	bl		sub_0802c6c8
	cmp		r0, #0x0
	beq		_08001d34
	ldr		r0, [r4, #0x0]
	bl		sub_0802d6a0
	b		_08001d3a

_08001d20:	.4byte 0x000007D7
_08001d24:	.4byte 0x000007DA
_08001d28:	.4byte 0x000007F4
_08001d2c:	.4byte 0x000007DC
_08001d30:	.4byte 0x03000008

_08001d34:
	ldr		r0, [r4, #0x0]
	bl		sub_0802d690
_08001d3a:
	ldr		r2, _08001d64
	add		r1, r5, r2
	strb	r0, [r1, #0x0]
	cmp		r7, #0x0
	beq		_08001d58
	mov		r6, sp
	add		r4, r7, #0x0
_08001d48:
	ldmia	r6!, { r1 }
	add		r0, r5, #0x0
	mov		r2, #0x1
	bl		sub_08044818
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08001d48
_08001d58:
	add		sp, #0x20
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08001d64:	.4byte 0x000007DD
	thumb_func_end sub_08001c9c

	thumb_func_start sub_08001d68
sub_08001d68:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_08001c00
	ldr		r0, _08001dc0
	add		r2, r4, r0
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08001d94
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r3, #0x82
	lsl		r3, r3, #0x8
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
_08001d94:
	ldr		r1, _08001dc0
	add		r0, r4, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08001da6
	ldr		r0, _08001dc4
	strh	r0, [r2, #0x0]
_08001da6:
	ldr		r0, _08001dc8
	ldrb	r1, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r2, #0x1
	bl		sub_08044818
	ldr		r1, _08001dcc
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1DBE, 0x2

_08001dc0:	.4byte 0x000007DA
_08001dc4:	.4byte 0x00008110
_08001dc8:	.4byte 0x0300002C
_08001dcc:	.4byte 0x0203EEA0
	thumb_func_end sub_08001d68

	thumb_func_start sub_08001dd0
sub_08001dd0:
	push	{ r4, lr }
	ldr		r0, _08001dec
	ldr		r4, [r0, #0x0]
	ldr		r1, _08001df0
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_08001e20
	cmp		r0, #0x1
	bgt		_08001df4
	cmp		r0, #0x0
	beq		_08001dfe
	b		_08001e86

.incbin "base.gba", 0x1DEA, 0x2

_08001dec:	.4byte 0x0203EEA4
_08001df0:	.4byte 0x000011F8

_08001df4:
	cmp		r0, #0x2
	beq		_08001e44
	cmp		r0, #0x3
	beq		_08001e68
	b		_08001e86
_08001dfe:
	ldr		r3, _08001e18
	add		r2, r4, r3
	ldr		r0, [r2, #0x0]
	asr		r0, r0, #0x2
	add		r3, #0xc
	add		r1, r4, r3
	ldrh	r3, [r1, #0x0]
	strh	r0, [r1, #0x0]
	ldr		r0, [r2, #0x0]
	neg		r0, r0
	asr		r0, r0, #0x2
	ldr		r2, _08001e1c
	b		_08001e80

_08001e18:	.4byte 0x000011F4
_08001e1c:	.4byte 0x00001202

_08001e20:
	ldr		r3, _08001e3c
	add		r2, r4, r3
	ldr		r0, [r2, #0x0]
	asr		r0, r0, #0x2
	add		r3, #0x12
	add		r1, r4, r3
	ldrh	r3, [r1, #0x0]
	strh	r0, [r1, #0x0]
	ldr		r0, [r2, #0x0]
	neg		r0, r0
	asr		r0, r0, #0x2
	ldr		r2, _08001e40
	b		_08001e80

.incbin "base.gba", 0x1E3A, 0x2

_08001e3c:	.4byte 0x000011F4
_08001e40:	.4byte 0x00001208

_08001e44:
	ldr		r3, _08001e60
	add		r2, r4, r3
	ldr		r0, [r2, #0x0]
	asr		r0, r0, #0x2
	add		r3, #0x18
	add		r1, r4, r3
	ldrh	r3, [r1, #0x0]
	strh	r0, [r1, #0x0]
	ldr		r0, [r2, #0x0]
	neg		r0, r0
	asr		r0, r0, #0x2
	ldr		r2, _08001e64
	b		_08001e80

.incbin "base.gba", 0x1E5E, 0x2

_08001e60:	.4byte 0x000011F4
_08001e64:	.4byte 0x0000120E

_08001e68:
	ldr		r3, _08001f9c
	add		r2, r4, r3
	ldr		r0, [r2, #0x0]
	asr		r0, r0, #0x2
	add		r3, #0x1e
	add		r1, r4, r3
	ldrh	r3, [r1, #0x0]
	strh	r0, [r1, #0x0]
	ldr		r0, [r2, #0x0]
	neg		r0, r0
	asr		r0, r0, #0x2
	ldr		r2, _08001fa0
_08001e80:
	add		r1, r4, r2
	ldrh	r2, [r1, #0x0]
	strh	r0, [r1, #0x0]
_08001e86:
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0x7
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r3, _08001fa4
	add		r0, r4, r3
	ldrh	r1, [r0, #0x0]
	ldr		r0, _08001fa8
	and		r0, r1
	ldrh	r1, [r2, #0x0]
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r1, _08001fac
	ldr		r2, _08001fb0
	add		r0, r4, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x8
	add		r3, #0x4
	add		r0, r4, r3
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	add		r2, #0x4
	add		r0, r4, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	sub		r1, #0x8
	add		r3, #0x4
	add		r0, r4, r3
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0xa
	add		r2, #0x4
	add		r0, r4, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	add		r3, #0x4
	add		r0, r4, r3
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	sub		r1, #0xa
	add		r2, #0x4
	add		r0, r4, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0xc
	add		r3, #0x4
	add		r0, r4, r3
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	add		r2, #0x4
	add		r0, r4, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	sub		r1, #0xc
	add		r3, #0x4
	add		r0, r4, r3
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0xe
	add		r2, #0x4
	add		r0, r4, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	add		r3, #0x4
	add		r0, r4, r3
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x32
	add		r2, #0x4
	add		r0, r4, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	add		r3, #0x4
	add		r0, r4, r3
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	add		r2, #0x4
	add		r0, r4, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	sub		r1, #0x34
	add		r3, #0x4
	add		r0, r4, r3
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	add		r2, #0x4
	add		r0, r4, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	add		r3, #0x4
	add		r0, r4, r3
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	add		r2, #0x4
	add		r0, r4, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	add		r3, #0x4
	add		r0, r4, r3
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	add		r2, #0x4
	add		r0, r4, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	add		r3, #0x4
	add		r0, r4, r3
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	add		r2, #0x4
	add		r0, r4, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x1e
	add		r3, #0x4
	add		r0, r4, r3
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1F9A, 0x2

_08001f9c:	.4byte 0x000011F4
_08001fa0:	.4byte 0x00001214
_08001fa4:	.4byte 0x000011FC
_08001fa8:	.4byte 0x00009FFF
_08001fac:	.4byte BG0Control
_08001fb0:	.4byte 0x000011FE
	thumb_func_end sub_08001dd0

	thumb_func_start sub_08001fb4
sub_08001fb4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r9, r0
	mov		r4, #0x0
	mov		r1, #0x0
	ldr		r2, _080020ac
	add		r2, r9
_08001fc6:
	lsl		r0, r4, #0x1
	add		r7, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	mov		r6, #0x2
_08001fd2:
	str		r1, [r0, #0x0]
	str		r1, [r0, #0x3c]
	add		r0, #0x4
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_08001fd2
	add		r4, r7, #0x0
	cmp		r4, #0x4
	ble		_08001fc6
	mov		r1, r9
	ldr		r0, [r1, #0x8]
	cmp		r0, #0x0
	bne		_080020c0
	mov		r6, #0x0
	ldr		r4, _080020b0
	add		r4, r9
_08001ff2:
	lsl		r0, r6, #0x18
	lsr		r0, r0, #0x18
	bl		sub_08057828
	stmia	r4!, { r0 }
	add		r6, #0x1
	cmp		r6, #0x2
	ble		_08001ff2
	ldr		r1, _080020b4
	add		r1, r9
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r6, #0x0
	ldr		r4, _080020b4
	add		r4, r9
_08002010:
	lsl		r0, r6, #0x18
	lsr		r0, r0, #0x18
	bl		sub_08057828
	cmp		r0, #0x0
	bne		_0800201e
	str		r0, [r4, #0x0]
_0800201e:
	add		r6, #0x1
	cmp		r6, #0x2
	ble		_08002010
	mov		r2, r9
	ldr		r0, [r2, #0x10]
	cmp		r0, #0x0
	blt		_0800207e
	cmp		r0, #0x1
	ble		_08002034
	cmp		r0, #0x5
	bne		_0800207e
_08002034:
	mov		r6, #0x0
	ldr		r4, _080020b8
	add		r4, r9
_0800203a:
	lsl		r0, r6, #0x18
	lsr		r0, r0, #0x18
	bl		sub_08057828
	stmia	r4!, { r0 }
	add		r6, #0x1
	cmp		r6, #0x2
	ble		_0800203a
	mov		r4, #0x0
	mov		r0, #0x87
	lsl		r0, r0, #0x5
	add		r0, r9
	mov		r8, r0
_08002054:
	mov		r6, #0x0
	lsl		r0, r4, #0x1
	add		r7, r4, #0x1
	lsl		r5, r4, #0x18
	add		r0, r0, r4
	lsl		r4, r0, #0x2
_08002060:
	lsl		r1, r6, #0x18
	lsr		r1, r1, #0x18
	lsr		r0, r5, #0x18
	bl		sub_080577f8
	mov		r2, r8
	add		r1, r2, r4
	str		r0, [r1, #0x0]
	add		r4, #0x4
	add		r6, #0x1
	cmp		r6, #0x2
	ble		_08002060
	add		r4, r7, #0x0
	cmp		r4, #0x4
	ble		_08002054
_0800207e:
	mov		r6, #0x0
_08002080:
	lsl		r0, r6, #0x18
	lsr		r0, r0, #0x18
	bl		sub_08057828
	cmp		r0, #0x0
	beq		_080020a2
	lsl		r0, r6, #0x2
	mov		r1, #0x1
	mov		r4, #0x4
	add		r0, r9
	ldr		r2, _080020bc
	add		r0, r0, r2
_08002098:
	str		r1, [r0, #0x0]
	sub		r0, #0xc
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08002098
_080020a2:
	add		r6, #0x1
	cmp		r6, #0x2
	ble		_08002080
	b		_0800216c

.incbin "base.gba", 0x20AA, 0x2

_080020ac:	.4byte 0x000010A4
_080020b0:	.4byte 0x0000111C
_080020b4:	.4byte 0x00001128
_080020b8:	.4byte 0x000010D4
_080020bc:	.4byte 0x00001110

_080020c0:
	mov		r6, #0x0
	ldr		r4, _080021ac
	add		r4, r9
_080020c6:
	add		r0, r6, #0x0
	bl		sub_080139bc
	stmia	r4!, { r0 }
	add		r6, #0x1
	cmp		r6, #0x2
	ble		_080020c6
	ldr		r1, _080021b0
	add		r1, r9
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r6, #0x0
	ldr		r4, _080021b0
	add		r4, r9
_080020e2:
	add		r0, r6, #0x0
	bl		sub_080139bc
	cmp		r0, #0x0
	bne		_080020ee
	str		r0, [r4, #0x0]
_080020ee:
	add		r6, #0x1
	cmp		r6, #0x2
	ble		_080020e2
	mov		r1, r9
	ldr		r0, [r1, #0x10]
	cmp		r0, #0x0
	beq		_08002100
	cmp		r0, #0x2
	bne		_08002144
_08002100:
	mov		r6, #0x0
	ldr		r4, _080021b4
	add		r4, r9
_08002106:
	add		r0, r6, #0x0
	bl		sub_080139bc
	stmia	r4!, { r0 }
	add		r6, #0x1
	cmp		r6, #0x2
	ble		_08002106
	mov		r4, #0x0
	mov		r2, #0x87
	lsl		r2, r2, #0x5
	add		r2, r9
	mov		r8, r2
_0800211e:
	mov		r6, #0x0
	lsl		r0, r4, #0x1
	add		r7, r4, #0x1
	add		r0, r0, r4
	lsl		r5, r0, #0x2
_08002128:
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_08013a0c
	mov		r2, r8
	add		r1, r2, r5
	str		r0, [r1, #0x0]
	add		r5, #0x4
	add		r6, #0x1
	cmp		r6, #0x2
	ble		_08002128
	add		r4, r7, #0x0
	cmp		r4, #0x4
	ble		_0800211e
_08002144:
	mov		r6, #0x0
_08002146:
	add		r0, r6, #0x0
	bl		sub_080139bc
	cmp		r0, #0x0
	beq		_08002166
	lsl		r0, r6, #0x2
	mov		r1, #0x1
	mov		r4, #0x4
	add		r0, r9
	ldr		r2, _080021b8
	add		r0, r0, r2
_0800215c:
	str		r1, [r0, #0x0]
	sub		r0, #0xc
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0800215c
_08002166:
	add		r6, #0x1
	cmp		r6, #0x2
	ble		_08002146
_0800216c:
	ldr		r1, _080021bc
	add		r1, r9
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r4, #0x0
	mov		r5, #0x87
	lsl		r5, r5, #0x5
	add		r5, r9
	mov		r3, #0x1
_0800217e:
	lsl		r0, r4, #0x1
	add		r7, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0x2
	add		r2, r0, r5
	mov		r6, #0x2
_0800218a:
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_08002192
	str		r3, [r1, #0x0]
_08002192:
	add		r2, #0x4
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0800218a
	add		r4, r7, #0x0
	cmp		r4, #0x4
	ble		_0800217e
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080021ac:	.4byte 0x0000111C
_080021b0:	.4byte 0x00001128
_080021b4:	.4byte 0x000010D4
_080021b8:	.4byte 0x00001110
_080021bc:	.4byte 0x0000112C
	thumb_func_end sub_08001fb4

	thumb_func_start sub_080021c0
sub_080021c0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x20
	mov		r7, #0x0
	ldr		r4, _08002208
	ldr		r0, _0800220c
	add		r4, r4, r0
	ldr		r1, _08002210
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	add		r0, r4, #0x0
	bl		sub_08027188
	ldr		r5, _08002214
	ldr		r2, _08002218
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_080271b8
	add		r6, r0, #0x0
	str		r6, [r5, #0x0]
	bl		sub_080297c8
	ldr		r2, _0800221c
	ldr		r1, _08002220
	add		r0, r6, r1
	ldrb	r1, [r2, #0x1]
	str		r1, [r0, #0x0]
	cmp		r1, #0x1
	bgt		_08002224
	str		r7, [r6, #0x8]
	str		r7, [r6, #0xc]
	b		_0800222e

_08002208:	.4byte RunGameLogic_CallBack
_0800220c:	.4byte 0x00000704
_08002210:	.4byte 0x0202A400
_08002214:	.4byte 0x0203EEA4
_08002218:	.4byte 0x00001230
_0800221c:	.4byte 0x03003000
_08002220:	.4byte 0x00001088

_08002224:
	sub		r0, r1, #0x1
	str		r0, [r6, #0x8]
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	str		r0, [r6, #0xc]
_0800222e:
	ldr		r2, _080023c4
	add		r0, r6, r2
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	mov		r3, #0x85
	lsl		r3, r3, #0x5
	add		r0, r6, r3
	str		r1, [r0, #0x0]
	mov		r0, #0x24
	add		r0, r0, r6
	mov		r9, r0
	add		r5, sp, #0x10
	mov		r1, r9
	mov		r2, #0x1
	neg		r2, r2
	add		r0, r6, #0x0
	add		r0, #0x30
_08002250:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	cmp		r0, r1
	bge		_08002250
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r6, #0x4]
	str		r0, [r6, #0x10]
	str		r0, [r6, #0x14]
	str		r0, [r6, #0x18]
	str		r0, [r6, #0x1c]
	str		r0, [r6, #0x20]
	ldr		r2, _080023c8
	add		r1, r6, r2
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r4, #0x0
	str		r4, [r6, #0x0]
	str		r4, [r6, #0x50]
	ldr		r3, _080023cc
	add		r0, r6, r3
	str		r4, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	ldr		r0, _080023d0
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r0, _080023d4
	mov		r2, #0xf0
	strh	r2, [r0, #0x0]
	add		r0, #0x4
	mov		r1, #0xa0
	strh	r1, [r0, #0x0]
	sub		r0, #0x2
	strh	r2, [r0, #0x0]
	add		r0, #0x4
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	ldr		r2, _080023d8
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	bl		_DrawFrameRunAudio
	strh	r4, [r5, #0x0]
	ldr		r1, _080023dc
	ldr		r2, _080023e0
	add		r0, r5, #0x0
	bl		sub_08071b6c
	ldr		r0, [r6, #0x8]
	cmp		r0, #0x0
	beq		_080022c0
	b		_08002432
_080022c0:
	mov		r1, #0x0
	mov		r5, #0x13
	ldr		r3, _080023e4
	add		r0, r6, r3
_080022c8:
	str		r1, [r0, #0x0]
	sub		r0, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_080022c8
	ldr		r0, _080023e8
	add		r1, r6, r0
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	mov		r5, #0x0
_080022dc:
	add		r0, r5, #0x0
	bl		sub_0802d690
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	bl		sub_080567ec
	lsl		r0, r0, #0x18
	asr		r4, r0, #0x18
	mov		r0, #0x1
	neg		r0, r0
	cmp		r4, r0
	beq		_08002330
	lsl		r1, r5, #0x2
	ldr		r2, _080023ec
	add		r0, r6, r2
	add		r0, r0, r1
	mov		r1, #0x1
	str		r1, [r0, #0x0]
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	add		r0, r4, #0x0
	bl		sub_08057850
	mov		r3, #0x8c
	lsl		r3, r3, #0x5
	add		r1, r6, r3
	add		r1, r1, r5
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	bl		sub_08057878
	lsl		r2, r5, #0x1
	ldr		r3, _080023f0
	add		r1, r6, r3
	add		r1, r1, r2
	strh	r0, [r1, #0x0]
	ldr		r0, _080023e8
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
_08002330:
	add		r5, #0x1
	cmp		r5, #0x13
	ble		_080022dc
	mov		r1, #0x0
	mov		r5, #0x1
	ldr		r2, _080023f4
	add		r0, r6, r2
_0800233e:
	str		r1, [r0, #0x0]
	sub		r0, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0800233e
	ldr		r3, _080023f8
	add		r1, r6, r3
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	mov		r5, #0x0
_08002352:
	lsl		r0, r5, #0x18
	lsr		r0, r0, #0x18
	bl		sub_080575e8
	lsl		r0, r0, #0x18
	asr		r4, r0, #0x18
	mov		r0, #0x1
	neg		r0, r0
	add		r7, r5, #0x1
	cmp		r4, r0
	beq		_0800242c
	lsl		r1, r5, #0x2
	mov		r2, #0x8e
	lsl		r2, r2, #0x5
	add		r0, r6, r2
	add		r0, r0, r1
	mov		r1, #0x1
	str		r1, [r0, #0x0]
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	add		r0, r4, #0x0
	bl		sub_08057850
	ldr		r3, _080023fc
	add		r1, r6, r3
	add		r1, r1, r5
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	bl		sub_08057878
	lsl		r2, r5, #0x1
	ldr		r3, _08002400
	add		r1, r6, r3
	add		r1, r1, r2
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	bl		sub_080578d8
	ldr		r2, _08002404
	add		r1, r6, r2
	add		r1, r1, r5
	strb	r0, [r1, #0x0]
	lsl		r1, r5, #0x3
	ldr		r3, _08002408
	add		r1, r1, r3
	add		r1, r6, r1
	add		r0, r4, #0x0
	bl		sub_080578a0
	ldr		r0, _080023f8
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	mov		r4, #0x0
	b		_0800240e

.incbin "base.gba", 0x23C2, 0x2

_080023c4:	.4byte 0x0000109C
_080023c8:	.4byte 0x00000D84
_080023cc:	.4byte 0x000011E4
_080023d0:	.4byte 0x00009FFF
_080023d4:	.4byte Window0HorizontalDimensions
_080023d8:	.4byte 0x00003F3F
_080023dc:	.4byte 0x02020400
_080023e0:	.4byte 0x01000800
_080023e4:	.4byte 0x0000117C
_080023e8:	.4byte 0x000011BC
_080023ec:	.4byte 0x00001130
_080023f0:	.4byte 0x00001194
_080023f4:	.4byte 0x000011C4
_080023f8:	.4byte 0x000011E2
_080023fc:	.4byte 0x000011CA
_08002400:	.4byte 0x000011CC
_08002404:	.4byte 0x000011D0
_08002408:	.4byte 0x000011D2

_0800240c:
	add		r4, #0x1
_0800240e:
	cmp		r4, #0x13
	bgt		_08002424
	add		r0, r4, #0x0
	bl		sub_0802d690
	ldr		r2, _08002484
	add		r1, r6, r2
	add		r1, r1, r5
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bne		_0800240c
_08002424:
	ldr		r3, _08002488
	add		r0, r6, r3
	add		r0, r0, r5
	strb	r4, [r0, #0x0]
_0800242c:
	add		r5, r7, #0x0
	cmp		r5, #0x1
	ble		_08002352
_08002432:
	bl		_DrawFrameRunAudio
	ldr		r4, _0800248c
	ldr		r5, _08002490
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	str		r4, [r5, #0xc]
	mov		r0, #0x2
	ldr		r1, _08002494
	bl		sub_0807df78
	mov		r1, #0x3
	neg		r1, r1
	mov		r0, #0x1
	bl		sub_0807df78
	ldr		r1, _08002498
	mov		r0, #0x1
	bl		sub_0807df68
	ldr		r1, _0800249c
	mov		r0, #0x4f
	bl		sub_08029fcc
	mov		r0, #0x24
	add		r0, r0, r5
	mov		r8, r0
	ldr		r0, _080024a0
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x66
	bne		_08002478
	b		_080025c0
_08002478:
	cmp		r0, #0x66
	bgt		_080024a4
	cmp		r0, #0x65
	beq		_080024b2
	b		_080026e2

.incbin "base.gba", 0x2482, 0x2

_08002484:	.4byte 0x000011D0
_08002488:	.4byte 0x000011C8
_0800248c:	.4byte 0x08001DD1
_08002490:	.4byte RunGameLogic_CallBack
_08002494:	.4byte 0x00010001
_08002498:	.4byte 0x080270F1
_0800249c:	.4byte 0x0800c621
_080024a0:	.4byte 0x0203EEA0

_080024a4:
	cmp		r0, #0x67
	bne		_080024aa
	b		_080026a0
_080024aa:
	cmp		r0, #0x69
	bne		_080024b0
	b		_080026b4
_080024b0:
	b		_080026e2
_080024b2:
	ldr		r0, [r6, #0x8]
	str		r0, [r6, #0x4]
	ldr		r1, _080024d8
	add		r0, r5, r1
	ldrh	r2, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	beq		_080024fe
	cmp		r1, r0
	bgt		_080024dc
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_080024ee
	b		_0800250a

_080024d8:	.4byte 0x000007FE

_080024dc:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_08002502
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_08002506
	b		_0800250a
_080024ee:
	mov		r0, #0x10
	and		r0, r2
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_08002508
	mov		r0, #0x5
	b		_08002508
_080024fe:
	mov		r0, #0x1
	b		_08002508
_08002502:
	mov		r0, #0x2
	b		_08002508
_08002506:
	mov		r0, #0x3
_08002508:
	str		r0, [r6, #0x10]
_0800250a:
	ldr		r0, _0800252c
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	beq		_08002556
	cmp		r1, r0
	bgt		_08002530
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_08002538
	b		_0800255a

_0800252c:	.4byte 0x000007DA

_08002530:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	bne		_0800255a
_08002538:
	ldr		r0, _0800254c
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_08002558
	cmp		r0, #0x1
	bgt		_08002550
	cmp		r0, #0x0
	beq		_08002558
	b		_0800255a

_0800254c:	.4byte 0x000007DC

_08002550:
	cmp		r0, #0x2
	bne		_0800255a
	b		_08002558
_08002556:
	mov		r0, #0x0
_08002558:
	str		r0, [r6, #0x14]
_0800255a:
	ldr		r4, _08002598
	ldr		r0, [r6, #0xc]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	bl		sub_0800ebfc
	str		r0, [r6, #0x18]
	mov		r5, #0x0
	add		r7, r4, #0x0
	mov		r4, r9
_0800256e:
	add		r0, r5, r7
	ldrb	r0, [r0, #0x0]
	bl		sub_0800ebfc
	stmia	r4!, { r0 }
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_0800256e
	ldr		r0, _0800259c
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	bl		sub_0802d6d0
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_080025a4
	ldr		r2, _080025a0
	add		r1, r6, r2
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	b		_080025aa

_08002598:	.4byte 0x0300002C
_0800259c:	.4byte 0x000007DD
_080025a0:	.4byte 0x000011E4

_080025a4:
	ldr		r3, _080025b8
	add		r0, r6, r3
	str		r1, [r0, #0x0]
_080025aa:
	ldr		r1, _080025bc
	add		r0, r6, r1
	mov		r1, #0x1
	str		r1, [r0, #0x0]
	mov		r0, #0x2
	b		_080026d0

.incbin "base.gba", 0x25B6, 0x2

_080025b8:	.4byte 0x000011E4
_080025bc:	.4byte 0x00000D84

_080025c0:
	ldr		r0, [r6, #0x8]
	str		r0, [r6, #0x4]
	ldr		r2, _080025e8
	add		r0, r5, r2
	ldrh	r2, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	beq		_0800260e
	cmp		r1, r0
	bgt		_080025ec
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_080025fe
	b		_0800261a

.incbin "base.gba", 0x25E6, 0x2

_080025e8:	.4byte 0x000007FE

_080025ec:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_08002612
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_08002616
	b		_0800261a
_080025fe:
	mov		r0, #0x10
	and		r0, r2
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_08002618
	mov		r0, #0x5
	b		_08002618
_0800260e:
	mov		r0, #0x1
	b		_08002618
_08002612:
	mov		r0, #0x2
	b		_08002618
_08002616:
	mov		r0, #0x3
_08002618:
	str		r0, [r6, #0x10]
_0800261a:
	ldr		r0, _0800263c
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	beq		_08002666
	cmp		r1, r0
	bgt		_08002640
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_08002648
	b		_0800266a

_0800263c:	.4byte 0x000007DA

_08002640:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	bne		_0800266a
_08002648:
	ldr		r0, _0800265c
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_08002668
	cmp		r0, #0x1
	bgt		_08002660
	cmp		r0, #0x0
	beq		_08002668
	b		_0800266a

_0800265c:	.4byte 0x000007DC

_08002660:
	cmp		r0, #0x2
	bne		_0800266a
	b		_08002668
_08002666:
	mov		r0, #0x0
_08002668:
	str		r0, [r6, #0x14]
_0800266a:
	ldr		r4, _08002698
	ldr		r0, [r6, #0xc]
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	bl		sub_0800ebfc
	str		r0, [r6, #0x18]
	mov		r5, #0x0
	add		r7, r4, #0x0
	mov		r4, r9
_0800267e:
	add		r0, r5, r7
	ldrb	r0, [r0, #0x0]
	bl		sub_0800ebfc
	stmia	r4!, { r0 }
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_0800267e
	ldr		r3, _0800269c
	add		r1, r6, r3
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	b		_080026d0

_08002698:	.4byte 0x0300002C
_0800269c:	.4byte 0x00000D84

_080026a0:
	ldr		r0, [r6, #0x8]
	str		r0, [r6, #0x4]
	ldr		r0, _080026b0
	add		r1, r6, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	b		_080026ea

_080026b0:	.4byte 0x00000D84

_080026b4:
	ldr		r0, [r6, #0x8]
	str		r0, [r6, #0x4]
	mov		r1, #0x1
	str		r1, [r6, #0x10]
	mov		r0, #0x0
	str		r0, [r6, #0x14]
	mov		r0, #0x10
	str		r0, [r6, #0x40]
	str		r0, [r6, #0x3c]
	str		r0, [r6, #0x38]
	ldr		r2, _080026d8
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	mov		r0, #0x3
_080026d0:
	str		r0, [r6, #0x0]
	mov		r4, #0x1
	b		_080026ee

.incbin "base.gba", 0x26D6, 0x2

_080026d8:	.4byte 0x00000D84

_080026dc:
	mov		r0, #0x5
	str		r0, [r6, #0x0]
	b		_08002804
_080026e2:
	ldr		r3, _08002740
	add		r1, r6, r3
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_080026ea:
	str		r0, [r6, #0x0]
	mov		r4, #0x0
_080026ee:
	ldr		r1, _08002744
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	bl		sub_08001b54
	mov		r0, #0x2
	bl		sub_0807073c
	ldr		r1, _08002740
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800272c
	ldr		r0, _08002748
	ldrb	r1, [r0, #0x1]
	cmp		r1, #0x1
	bgt		_08002714
	mov		r1, #0x1
_08002714:
	ldr		r0, _0800274c
	ldr		r2, _08002750
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, r1
	beq		_0800272c
	ldr		r3, _08002754
	add		r0, r6, r3
	mov		r1, #0x1
	str		r1, [r0, #0x0]
	mov		r0, #0x5
	str		r0, [r6, #0x0]
_0800272c:
	mov		r7, #0x0
_0800272e:
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x5
	bhi		_080027f0
	lsl		r0, r0, #0x2
	ldr		r1, _08002758
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x273E, 0x2

_08002740:	.4byte 0x00000D84
_08002744:	.4byte 0x0203EEA0
_08002748:	.4byte 0x03003000
_0800274c:	.4byte RunGameLogic_CallBack
_08002750:	.4byte 0x000007FB
_08002754:	.4byte 0x0000109C
_08002758:	.4byte 0x0800275c
_0800275c:	.4byte 0x08002774

.incbin "base.gba", 0x2760, 0x14
	thumb_func_end sub_080021c0


.incbin "base.gba", 0x2774, 0x7C

_080027f0:

.incbin "base.gba", 0x27F0, 0x10
_08002800:

.incbin "base.gba", 0x2800, 0x4
_08002804:

.incbin "base.gba", 0x2804, 0x1A
_0800281e:

.incbin "base.gba", 0x281E, 0xE
_0800282c:

.incbin "base.gba", 0x282C, 0x12
_0800283e:

.incbin "base.gba", 0x283E, 0x52
_08002890:

.incbin "base.gba", 0x2890, 0x50
_080028e0:

.incbin "base.gba", 0x28E0, 0x10
_080028f0:	.4byte 0x0000109C
_080028f4:	.4byte 0x08124544
_080028f8:	.4byte 0x081245c8
_080028fc:	.4byte 0x0000000B
_08002900:	.4byte RunGameLogic_CallBack
_08002904:	.4byte 0x00010001
_08002908:	.4byte 0x080270F1
_0800290c:	.4byte 0x000011E4
_08002910:	.4byte 0x0300000C

_08002914:

.incbin "base.gba", 0x2914, 0xA
_0800291e:

.incbin "base.gba", 0x291E, 0xA
_08002928:	.4byte 0x000007FB

_0800292c:

.incbin "base.gba", 0x292C, 0xC
_08002938:	.4byte 0x000007FB

_0800293c:

.incbin "base.gba", 0x293C, 0xC
_08002948:	.4byte 0x000007FB

_0800294c:

.incbin "base.gba", 0x294C, 0xA
_08002956:

.incbin "base.gba", 0x2956, 0x12
_08002968:	.4byte 0x000007FB
_0800296c:	.4byte 0x08002970
_08002970:	.4byte 0x08002988

.incbin "base.gba", 0x2974, 0x6E

_080029e2:

.incbin "base.gba", 0x29E2, 0x16
_080029f8:

.incbin "base.gba", 0x29F8, 0x6
_080029fe:

.incbin "base.gba", 0x29FE, 0xE
_08002a0c:

.incbin "base.gba", 0x2A0C, 0x6
_08002a12:

.incbin "base.gba", 0x2A12, 0x6
_08002a18:	.4byte 0x000007DC

_08002a1c:

.incbin "base.gba", 0x2A1C, 0x8
_08002a24:	.4byte 0x000007DC

_08002a28:

.incbin "base.gba", 0x2A28, 0x4
_08002a2c:

.incbin "base.gba", 0x2A2C, 0x2
_08002a2e:

.incbin "base.gba", 0x2A2E, 0x16
_08002a44:	.4byte 0x000007DC

_08002a48:

.incbin "base.gba", 0x2A48, 0x8
_08002a50:

.incbin "base.gba", 0x2A50, 0x16
_08002a66:

.incbin "base.gba", 0x2A66, 0x10
_08002a76:

.incbin "base.gba", 0x2A76, 0x16
_08002a8c:	.4byte 0x000007DD
_08002a90:	.4byte 0x03000008

_08002a94:

.incbin "base.gba", 0x2A94, 0x12
_08002aa6:

.incbin "base.gba", 0x2AA6, 0xA
_08002ab0:

.incbin "base.gba", 0x2AB0, 0xC
_08002abc:	.4byte 0x000007DD
_08002ac0:	.4byte 0x03000008

_08002ac4:

.incbin "base.gba", 0x2AC4, 0x14
_08002ad8:

.incbin "base.gba", 0x2AD8, 0xC
_08002ae4:

.incbin "base.gba", 0x2AE4, 0xE
_08002af2:

.incbin "base.gba", 0x2AF2, 0x14
_08002b06:

.incbin "base.gba", 0x2B06, 0x6
_08002b0c:

.incbin "base.gba", 0x2B0C, 0xC
_08002b18:	.4byte 0x000007DD
_08002b1c:	.4byte 0x03000008
_08002b20:	.4byte 0x000007DA
_08002b24:	.4byte 0x08000E79

_08002b28:

.incbin "base.gba", 0x2B28, 0x4
_08002b2c:	.4byte 0x0804B035

_08002b30:

.incbin "base.gba", 0x2B30, 0x2
_08002b32:

.incbin "base.gba", 0x2B32, 0x22
_08002b54:	.4byte 0x080165D9
_08002b58:	.4byte RunGameLogic_CallBack
	thumb_func_start sub_08002b5c
sub_08002b5c:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	bl		sub_08001c00
	ldr		r1, _08002b84
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08002b8c
	ldr		r0, _08002b88
	ldrb	r1, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r2, #0x1
	bl		sub_08044818
	b		_08002bb0

.incbin "base.gba", 0x2B82, 0x2

_08002b84:	.4byte 0x000007DA
_08002b88:	.4byte 0x0300002C

_08002b8c:
	mov		r4, #0x0
	ldr		r1, _08002bbc
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	bge		_08002bb0
	ldr		r7, _08002bc0
	add		r6, r5, r1
_08002b9c:
	add		r0, r4, r7
	ldrb	r1, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r2, #0x1
	bl		sub_08044818
	add		r4, #0x1
	ldrb	r0, [r6, #0x0]
	cmp		r4, r0
	blt		_08002b9c
_08002bb0:
	ldr		r1, _08002bc4
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08002bbc:	.4byte 0x000007D7
_08002bc0:	.4byte 0x0300002C
_08002bc4:	.4byte 0x0203EEA0

.incbin "base.gba", 0x2BC8, 0x50
	thumb_func_end sub_08002b5c

	thumb_func_start sub_08002c18
sub_08002c18:
	ldr		r0, _08002c20
	ldr		r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x2C1E, 0x2

_08002c20:	.4byte 0x03000008
	thumb_func_end sub_08002c18

	thumb_func_start sub_08002c24
sub_08002c24:
	ldr		r1, _08002c2c
	str		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x2C2A, 0x2

_08002c2c:	.4byte 0x03000008
	thumb_func_end sub_08002c24

	thumb_func_start sub_08002c30
sub_08002c30:
	ldr		r0, _08002c38
	ldrb	r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x2C36, 0x2

_08002c38:	.4byte 0x0300000C

.incbin "base.gba", 0x2C3C, 0x20
	thumb_func_end sub_08002c30

	thumb_func_start sub_08002c5c
sub_08002c5c:
	ldr		r1, _08002c64
	str		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x2C62, 0x2

_08002c64:	.4byte 0x0203EEA4
	thumb_func_end sub_08002c5c

	thumb_func_start sub_08002c68
sub_08002c68:
	ldr		r0, _08002c78
	mov		r1, #0x17
	ldrsb	r1, [r0, r1]
	add		r1, r1, r0
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	bx		lr

.incbin "base.gba", 0x2C76, 0x2

_08002c78:	.4byte 0x03000010
	thumb_func_end sub_08002c68

	thumb_func_start sub_08002c7c
sub_08002c7c:
	ldr		r2, _08002c90
	ldr		r0, [r0, #0x10]
	cmp		r0, #0x5
	bhi		_08002cce
	lsl		r0, r0, #0x2
	ldr		r1, _08002c94
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x2C8E, 0x2

_08002c90:	.4byte 0x03000010
_08002c94:	.4byte 0x08002c98
_08002c98:	.4byte 0x08002cb0

.incbin "base.gba", 0x2C9C, 0x14
	thumb_func_end sub_08002c7c


.incbin "base.gba", 0x2CB0, 0x1E

_08002cce:

.incbin "base.gba", 0x2CCE, 0x6
	thumb_func_start sub_08002cd4
sub_08002cd4:
	ldr		r0, _08002ce0
	add		r0, #0x9
	add		r1, r1, r0
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	bx		lr

_08002ce0:	.4byte 0x03000010
	thumb_func_end sub_08002cd4

	thumb_func_start sub_08002ce4
sub_08002ce4:
	ldr		r2, _08002cf8
	ldr		r0, [r0, #0x10]
	cmp		r0, #0x5
	bhi		_08002d36
	lsl		r0, r0, #0x2
	ldr		r1, _08002cfc
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x2CF6, 0x2

_08002cf8:	.4byte 0x03000010
_08002cfc:	.4byte 0x08002d00
_08002d00:	.4byte 0x08002d18

.incbin "base.gba", 0x2D04, 0x14
	thumb_func_end sub_08002ce4


.incbin "base.gba", 0x2D18, 0x1E

_08002d36:

.incbin "base.gba", 0x2D36, 0x6
	thumb_func_start sub_08002d3c
sub_08002d3c:
	ldr		r2, _08002d50
	ldr		r0, [r0, #0x10]
	cmp		r0, #0x5
	bhi		_08002d8e
	lsl		r0, r0, #0x2
	ldr		r1, _08002d54
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x2D4E, 0x2

_08002d50:	.4byte 0x03000010
_08002d54:	.4byte 0x08002d58
_08002d58:	.4byte 0x08002d70

.incbin "base.gba", 0x2D5C, 0x14
	thumb_func_end sub_08002d3c


.incbin "base.gba", 0x2D70, 0x1E

_08002d8e:

.incbin "base.gba", 0x2D8E, 0x32
_08002dc0:	.4byte 0x08002dd8

.incbin "base.gba", 0x2DC4, 0x38
	thumb_func_start sub_08002dfc
sub_08002dfc:
	add		r2, r1, #0x0
	ldr		r3, _08002e10
	ldr		r0, [r0, #0x10]
	cmp		r0, #0x5
	bhi		_08002e42
	lsl		r0, r0, #0x2
	ldr		r1, _08002e14
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08002e10:	.4byte 0x03000010
_08002e14:	.4byte 0x08002e18
_08002e18:	.4byte 0x08002e30

.incbin "base.gba", 0x2E1C, 0x14
	thumb_func_end sub_08002dfc


.incbin "base.gba", 0x2E30, 0x12

_08002e42:

.incbin "base.gba", 0x2E42, 0x2
	thumb_func_start sub_08002e44
sub_08002e44:
	add		r2, r1, #0x0
	ldr		r3, _08002e58
	ldr		r0, [r0, #0x10]
	cmp		r0, #0x5
	bhi		_08002e8a
	lsl		r0, r0, #0x2
	ldr		r1, _08002e5c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08002e58:	.4byte 0x03000010
_08002e5c:	.4byte 0x08002e60
_08002e60:	.4byte 0x08002e78

.incbin "base.gba", 0x2E64, 0x14
	thumb_func_end sub_08002e44


.incbin "base.gba", 0x2E78, 0x12

_08002e8a:

.incbin "base.gba", 0x2E8A, 0x2
	thumb_func_start sub_08002e8c
sub_08002e8c:
	ldr		r1, _08002e94
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	bx		lr

_08002e94:	.4byte 0x0300000C
	thumb_func_end sub_08002e8c

	thumb_func_start sub_08002e98
sub_08002e98:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	ldr		r4, _0800302c
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x60
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	add		r0, r6, #0x0
	bl		sub_080038ac
	bl		_DrawFrameRunAudio
	ldr		r0, [r6, #0xc]
	mov		r7, #0x1
	neg		r7, r7
	cmp		r0, r7
	beq		_08002f1e
	ldr		r0, _08003030
	ldr		r4, _08003034
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r5, _08003038
	ldr		r0, [r6, #0xc]
	lsl		r0, r0, #0x3
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _0800303c
	mov		r1, #0xc0
	lsl		r1, r1, #0x2
	add		r4, r4, r1
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, [r6, #0xc]
	lsl		r0, r0, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r4, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x40
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	bl		_DrawFrameRunAudio
_08002f1e:
	ldr		r0, [r6, #0x8]
	cmp		r0, r7
	beq		_08002f76
	ldr		r0, _08003040
	ldr		r4, _08003044
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r5, _08003048
	ldr		r0, [r6, #0x8]
	lsl		r0, r0, #0x3
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x80
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _0800304c
	mov		r2, #0xc0
	lsl		r2, r2, #0x1
	add		r4, r4, r2
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, [r6, #0x8]
	lsl		r0, r0, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r4, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x80
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	bl		_DrawFrameRunAudio
_08002f76:
	ldr		r0, [r6, #0x10]
	cmp		r0, r7
	beq		_08002fce
	ldr		r0, _08003040
	ldr		r4, _08003050
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r5, _08003054
	ldr		r0, [r6, #0x10]
	lsl		r0, r0, #0x3
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x80
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _0800304c
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	add		r4, r4, r1
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, [r6, #0x10]
	lsl		r0, r0, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r4, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xa0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	bl		_DrawFrameRunAudio
_08002fce:
	ldr		r0, [r6, #0x14]
	cmp		r0, r7
	beq		_080030b2
	ldr		r0, [r6, #0x10]
	cmp		r0, #0x1
	bne		_08003060
	ldr		r0, _08003040
	ldr		r4, _08003058
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r5, _0800305c
	ldr		r0, [r6, #0x14]
	lsl		r0, r0, #0x3
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x80
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _0800304c
	mov		r2, #0xc0
	lsl		r2, r2, #0x1
	add		r4, r4, r2
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, [r6, #0x14]
	lsl		r0, r0, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r4, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xc0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	b		_080030ae

.incbin "base.gba", 0x302A, 0x2

_0800302c:	.4byte 0x080d34dc
_08003030:	.4byte 0x080d3c5c
_08003034:	.4byte 0x02012800
_08003038:	.4byte 0x080f44e8
_0800303c:	.4byte 0x080d3c9c
_08003040:	.4byte 0x080d33c0
_08003044:	.4byte 0x02013400
_08003048:	.4byte 0x080f4508
_0800304c:	.4byte 0x080d33f0
_08003050:	.4byte 0x02013600
_08003054:	.4byte 0x080f4528
_08003058:	.4byte 0x02013800
_0800305c:	.4byte 0x080f4570

_08003060:
	ldr		r0, _08003134
	ldr		r4, _08003138
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r5, _0800313c
	ldr		r0, [r6, #0x14]
	lsl		r0, r0, #0x3
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x80
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _08003140
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	add		r4, r4, r1
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, [r6, #0x14]
	lsl		r0, r0, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r4, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xc0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
_080030ae:
	bl		_DrawFrameRunAudio
_080030b2:
	ldr		r1, [r6, #0x18]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_080030fa
	mov		r4, #0x3
	cmp		r1, #0x2
	beq		_080030ca
	mov		r4, #0x2
	cmp		r1, #0x3
	beq		_080030ca
	add		r4, r1, #0x0
_080030ca:
	bl		sub_08029f34
	lsl		r1, r4, #0x7
	ldr		r2, _08003144
	add		r1, r1, r2
	ldr		r2, _08003148
	ldr		r3, _0800314c
	bl		sub_08029ee4
	ldr		r4, _08003150
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x60
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	bl		_DrawFrameRunAudio
_080030fa:
	ldr		r0, _08003154
	ldr		r4, _08003158
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	ldr		r0, _0800315c
	ldr		r2, _08003160
	add		r1, r4, r2
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	bl		sub_08029f34
	ldr		r1, _08003164
	add		r4, r4, r1
	ldr		r2, _08003168
	ldr		r3, _0800316c
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3132, 0x2

_08003134:	.4byte 0x080d33c0
_08003138:	.4byte 0x02013800
_0800313c:	.4byte 0x080f4558
_08003140:	.4byte 0x080d33f0
_08003144:	.4byte 0x0807f190
_08003148:	.4byte 0x02013000
_0800314c:	.4byte 0x80000040
_08003150:	.4byte 0x0807e130
_08003154:	.4byte 0x080d4390
_08003158:	.4byte 0x02013A00
_0800315c:	.4byte 0x080d4200
_08003160:	.4byte 0xFFFFF200
_08003164:	.4byte 0xFFFFEE00
_08003168:	.4byte 0x06012400
_0800316c:	.4byte 0x80000C00
	thumb_func_end sub_08002e98

	thumb_func_start sub_08003170
sub_08003170:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x1c
	add		r6, r0, #0x0
	mov		r7, #0x0
	mov		r0, #0x0
	mov		r8, r0
	mov		r1, #0x85
	lsl		r1, r1, #0x5
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08003194
	add		r0, r6, #0x0
	bl		sub_080036d8
_08003194:
	ldr		r1, [r6, #0xc]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_08003214
	ldr		r0, [r6, #0x34]
	cmp		r0, #0x1
	bne		_080031f8
	ldr		r0, _08003204
	ldr		r4, _08003208
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r5, _0800320c
	ldr		r0, [r6, #0xc]
	lsl		r0, r0, #0x3
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _08003210
	mov		r1, #0xc0
	lsl		r1, r1, #0x2
	add		r4, r4, r1
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r2, #0x1
	mov		r8, r2
	ldr		r0, [r6, #0xc]
	lsl		r0, r0, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r4, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x40
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
_080031f8:
	ldr		r0, [r6, #0x34]
	cmp		r0, #0x1f
	bgt		_0800321e
	add		r0, #0x1
	b		_0800321c

.incbin "base.gba", 0x3202, 0x2

_08003204:	.4byte 0x080d3c5c
_08003208:	.4byte 0x02012800
_0800320c:	.4byte 0x080f44e8
_08003210:	.4byte 0x080d3c9c

_08003214:
	ldr		r0, [r6, #0x34]
	cmp		r0, #0x0
	ble		_0800321e
	sub		r0, #0x1
_0800321c:
	str		r0, [r6, #0x34]
_0800321e:
	ldr		r2, [r6, #0x34]
	cmp		r2, #0x0
	beq		_08003252
	mov		r0, #0x88
	lsl		r0, r0, #0x1
	mov		r1, #0xa
	str		r1, [sp, #0x0]
	mov		r1, #0x20
	mov		r3, #0x20
	bl		sub_0800e77c
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r1, #0x90
	lsl		r1, r1, #0x10
	orr		r0, r1
	str		r0, [sp, #0x8]
	ldr		r0, _080032c0
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
_08003252:
	ldr		r1, [r6, #0x4]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_080032d4
	ldr		r0, [r6, #0x38]
	cmp		r0, #0x1
	bne		_080032b4
	ldr		r0, _080032c4
	ldr		r4, _080032c8
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r5, _080032cc
	ldr		r0, [r6, #0x8]
	lsl		r0, r0, #0x3
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x80
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _080032d0
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	add		r4, r4, r1
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r2, #0x1
	mov		r8, r2
	ldr		r0, [r6, #0x8]
	lsl		r0, r0, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r4, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x80
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
_080032b4:
	ldr		r0, [r6, #0x38]
	cmp		r0, #0xf
	bgt		_080032de
	add		r0, #0x1
	b		_080032dc

.incbin "base.gba", 0x32BE, 0x2

_080032c0:	.4byte 0x080e3a24
_080032c4:	.4byte 0x080d33c0
_080032c8:	.4byte 0x02013400
_080032cc:	.4byte 0x080f4508
_080032d0:	.4byte 0x080d33f0

_080032d4:
	ldr		r0, [r6, #0x38]
	cmp		r0, #0x0
	ble		_080032de
	sub		r0, #0x1
_080032dc:
	str		r0, [r6, #0x38]
_080032de:
	ldr		r0, [r6, #0x38]
	cmp		r0, #0x0
	beq		_0800333e
	ldr		r1, _080033bc
	lsl		r0, r0, #0x1a
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_080032f0
	add		r0, #0x3f
_080032f0:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r3, _080033c0
	lsl		r1, r7, #0x2
	add		r1, r1, r3
	lsl		r0, r0, #0x5
	asr		r0, r0, #0xf
	sub		r0, #0x20
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r2, _080033c4
	ldr		r1, [sp, #0xC]
	and		r1, r2
	orr		r1, r0
	str		r1, [sp, #0xC]
	lsl		r0, r7, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x1
	add		r0, r0, r3
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	ldr		r2, _080033c8
	and		r1, r2
	orr		r1, r0
	str		r1, [sp, #0xC]
	ldr		r0, _080033cc
	add		r1, sp, #0xc
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
	add		r7, #0x1
_0800333e:
	ldr		r0, _080033d0
	mov		r9, r0
	ldr		r1, [r6, #0x10]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_080033e8
	ldr		r0, [r6, #0x3c]
	cmp		r0, #0x1
	bne		_080033a4
	ldr		r0, _080033d4
	ldr		r4, _080033d8
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r5, _080033dc
	ldr		r0, [r6, #0x10]
	lsl		r0, r0, #0x3
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x80
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _080033e0
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	add		r4, r4, r1
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r2, #0x1
	mov		r8, r2
	ldr		r0, [r6, #0x10]
	lsl		r0, r0, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r4, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xa0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
_080033a4:
	ldr		r0, [r6, #0x3c]
	cmp		r0, #0xf
	bgt		_080033f2
	add		r0, #0x1
	str		r0, [r6, #0x3c]
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_080033f2
	ldr		r0, _080033e4
	mov		r9, r0
	b		_080033f2

.incbin "base.gba", 0x33BA, 0x2

_080033bc:	.4byte 0x08101068
_080033c0:	.4byte 0x080f44d4
_080033c4:	.4byte 0xffff0000
_080033c8:	.4byte 0x0000FFFF
_080033cc:	.4byte 0x080e3a34
_080033d0:	.4byte 0x080e3a3c
_080033d4:	.4byte 0x080d33c0
_080033d8:	.4byte 0x02013600
_080033dc:	.4byte 0x080f4528
_080033e0:	.4byte 0x080d33f0
_080033e4:	.4byte 0x080f44cc

_080033e8:
	ldr		r0, [r6, #0x3c]
	cmp		r0, #0x0
	ble		_080033f2
	sub		r0, #0x1
	str		r0, [r6, #0x3c]
_080033f2:
	ldr		r0, [r6, #0x3c]
	cmp		r0, #0x0
	beq		_08003454
	ldr		r1, _080034c4
	lsl		r0, r0, #0x1a
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08003404
	add		r0, #0x3f
_08003404:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r3, _080034c8
	lsl		r1, r7, #0x2
	add		r1, r1, r3
	lsl		r0, r0, #0x5
	asr		r0, r0, #0xf
	sub		r0, #0x20
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r2, _080034cc
	ldr		r1, [sp, #0x10]
	and		r1, r2
	orr		r1, r0
	str		r1, [sp, #0x10]
	lsl		r0, r7, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x1
	add		r0, r0, r3
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	ldr		r2, _080034d0
	and		r1, r2
	orr		r1, r0
	str		r1, [sp, #0x10]
	add		r1, sp, #0x10
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x4]
	mov		r0, r9
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	add		r7, #0x1
_08003454:
	ldr		r1, _080034d4
	mov		r9, r1
	ldr		r1, [r6, #0x14]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_08003464
	b		_08003564
_08003464:
	ldr		r0, [r6, #0x40]
	cmp		r0, #0x1
	bne		_0800353a
	ldr		r0, [r6, #0x10]
	cmp		r0, #0x1
	bne		_080034e8
	ldr		r0, _080034d8
	ldr		r4, _080034dc
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r5, _080034e0
	ldr		r0, [r6, #0x14]
	lsl		r0, r0, #0x3
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x80
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _080034e4
	mov		r2, #0xc0
	lsl		r2, r2, #0x1
	add		r4, r4, r2
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x1
	mov		r8, r0
	ldr		r0, [r6, #0x14]
	lsl		r0, r0, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r4, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xc0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	b		_0800353a

_080034c4:	.4byte 0x08101068
_080034c8:	.4byte 0x080f44d4
_080034cc:	.4byte 0xffff0000
_080034d0:	.4byte 0x0000FFFF
_080034d4:	.4byte 0x080e3a44
_080034d8:	.4byte 0x080d33c0
_080034dc:	.4byte 0x02013800
_080034e0:	.4byte 0x080f4570
_080034e4:	.4byte 0x080d33f0

_080034e8:
	ldr		r0, _08003550
	ldr		r4, _08003554
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r5, _08003558
	ldr		r0, [r6, #0x14]
	lsl		r0, r0, #0x3
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x80
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _0800355c
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	add		r4, r4, r1
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r2, #0x1
	mov		r8, r2
	ldr		r0, [r6, #0x14]
	lsl		r0, r0, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r4, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xc0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
_0800353a:
	ldr		r0, [r6, #0x40]
	cmp		r0, #0xf
	bgt		_0800356e
	add		r0, #0x1
	str		r0, [r6, #0x40]
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_0800356e
	ldr		r0, _08003560
	mov		r9, r0
	b		_0800356e

_08003550:	.4byte 0x080d33c0
_08003554:	.4byte 0x02013800
_08003558:	.4byte 0x080f4558
_0800355c:	.4byte 0x080d33f0
_08003560:	.4byte 0x080f44cc

_08003564:
	ldr		r0, [r6, #0x40]
	cmp		r0, #0x0
	ble		_0800356e
	sub		r0, #0x1
	str		r0, [r6, #0x40]
_0800356e:
	ldr		r0, [r6, #0x40]
	cmp		r0, #0x0
	beq		_080035d0
	ldr		r1, _08003628
	lsl		r0, r0, #0x1a
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08003580
	add		r0, #0x3f
_08003580:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r3, _0800362c
	lsl		r1, r7, #0x2
	add		r1, r1, r3
	lsl		r0, r0, #0x5
	asr		r0, r0, #0xf
	sub		r0, #0x20
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r2, _08003630
	ldr		r1, [sp, #0x14]
	and		r1, r2
	orr		r1, r0
	str		r1, [sp, #0x14]
	lsl		r0, r7, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x1
	add		r0, r0, r3
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	ldr		r2, _08003634
	and		r1, r2
	orr		r1, r0
	str		r1, [sp, #0x14]
	add		r1, sp, #0x14
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x4]
	mov		r0, r9
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	add		r7, #0x1
_080035d0:
	ldr		r1, [r6, #0x18]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_08003648
	ldr		r0, [r6, #0x44]
	cmp		r0, #0x1
	bne		_0800361e
	mov		r4, #0x3
	cmp		r1, #0x2
	beq		_080035ee
	mov		r4, #0x2
	cmp		r1, #0x3
	beq		_080035ee
	add		r4, r1, #0x0
_080035ee:
	bl		sub_08029f34
	lsl		r1, r4, #0x7
	ldr		r2, _08003638
	add		r1, r1, r2
	ldr		r2, _0800363c
	ldr		r3, _08003640
	bl		sub_08029ee4
	mov		r1, #0x1
	mov		r8, r1
	ldr		r4, _08003644
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x60
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
_0800361e:
	ldr		r0, [r6, #0x44]
	cmp		r0, #0xf
	bgt		_08003652
	add		r0, #0x1
	b		_08003650

_08003628:	.4byte 0x08101068
_0800362c:	.4byte 0x080f44d4
_08003630:	.4byte 0xffff0000
_08003634:	.4byte 0x0000FFFF
_08003638:	.4byte 0x0807f190
_0800363c:	.4byte 0x02013000
_08003640:	.4byte 0x80000040
_08003644:	.4byte 0x0807e130

_08003648:
	ldr		r0, [r6, #0x44]
	cmp		r0, #0x0
	ble		_08003652
	sub		r0, #0x1
_08003650:
	str		r0, [r6, #0x44]
_08003652:
	ldr		r0, [r6, #0x44]
	cmp		r0, #0x0
	beq		_080036b2
	ldr		r1, _080036c4
	lsl		r0, r0, #0x1a
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08003664
	add		r0, #0x3f
_08003664:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r3, _080036c8
	lsl		r1, r7, #0x2
	add		r1, r1, r3
	lsl		r0, r0, #0x5
	asr		r0, r0, #0xf
	sub		r0, #0x20
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r2, _080036cc
	ldr		r1, [sp, #0x18]
	and		r1, r2
	orr		r1, r0
	str		r1, [sp, #0x18]
	lsl		r0, r7, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x1
	add		r0, r0, r3
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	ldr		r2, _080036d0
	and		r1, r2
	orr		r1, r0
	str		r1, [sp, #0x18]
	ldr		r0, _080036d4
	add		r1, sp, #0x18
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
	add		r7, #0x1
_080036b2:
	str		r7, [r6, #0x48]
	mov		r0, r8
	add		sp, #0x1c
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_080036c4:	.4byte 0x08101068
_080036c8:	.4byte 0x080f44d4
_080036cc:	.4byte 0xffff0000
_080036d0:	.4byte 0x0000FFFF
_080036d4:	.4byte 0x080e3a4c
	thumb_func_end sub_08003170

	thumb_func_start sub_080036d8
sub_080036d8:
	push	{ r4, r5, lr }
	sub		sp, #0x8
	add		r5, r0, #0x0
	ldr		r1, _080036fc
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	add		r1, #0x1
	str		r1, [r0, #0x0]
	ldr		r2, _08003700
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x4
	bhi		_080037cc
	lsl		r0, r0, #0x2
	ldr		r1, _08003704
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_080036fc:	.4byte 0x00001094
_08003700:	.4byte 0x0000108C
_08003704:	.4byte 0x08003708
_08003708:	.4byte 0x0800371c

.incbin "base.gba", 0x370C, 0x10
	thumb_func_end sub_080036d8


.incbin "base.gba", 0x371C, 0xB0

_080037cc:

.incbin "base.gba", 0x37CC, 0x38
_08003804:	.4byte 0x0000108C
_08003808:	.4byte 0x080e5ec0
_0800380c:	.4byte 0x00001094

_08003810:

.incbin "base.gba", 0x3810, 0x2
_08003812:

.incbin "base.gba", 0x3812, 0x14
_08003826:

.incbin "base.gba", 0x3826, 0x14
_0800383a:

.incbin "base.gba", 0x383A, 0x1E
_08003858:

.incbin "base.gba", 0x3858, 0x16
_0800386e:

.incbin "base.gba", 0x386E, 0x1C
_0800388a:

.incbin "base.gba", 0x388A, 0xA
_08003894:	.4byte 0x080e5ec2
_08003898:	.4byte 0x0000108C
_0800389c:	.4byte 0x03003000
_080038a0:	.4byte 0x080f4580
_080038a4:	.4byte 0x00001098
_080038a8:	.4byte 0x080e3a64
	thumb_func_start sub_080038ac
sub_080038ac:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r0, _08003908
	ldr		r4, _0800390c
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08003910
	ldr		r3, _08003914
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	mov		r1, #0x85
	lsl		r1, r1, #0x5
	add		r0, r5, r1
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	ldr		r2, _08003918
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080038e4
	cmp		r0, #0x4
	ble		_08003902
_080038e4:
	ldr		r2, _0800391c
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	sub		r2, #0x4
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	ldr		r0, _08003920
	add		r1, r5, r0
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x0]
	add		r2, #0xa
	add		r1, r5, r2
	mov		r0, #0x94
	strh	r0, [r1, #0x0]
_08003902:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08003908:	.4byte 0x080e7a94
_0800390c:	.4byte 0x02016C00
_08003910:	.4byte 0x06016800
_08003914:	.4byte 0x80000200
_08003918:	.4byte 0x0000108C
_0800391c:	.4byte 0x00001094
_08003920:	.4byte 0x00001098
	thumb_func_end sub_080038ac

	thumb_func_start sub_08003924
sub_08003924:
	mov		r1, #0x0
	ldr		r2, _08003938
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x3
	ble		_08003932
	mov		r1, #0x1
_08003932:
	add		r0, r1, #0x0
	bx		lr

.incbin "base.gba", 0x3936, 0x2

_08003938:	.4byte 0x0000108C
	thumb_func_end sub_08003924

	thumb_func_start sub_0800393c
sub_0800393c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	mov		r9, r0
	ldr		r0, _08003b60
	add		r0, r9
	mov		r10, r0
	ldr		r0, [r0, #0x0]
	ldr		r1, _08003b64
	add		r0, r0, r1
	mov		r2, r10
	str		r0, [r2, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08003964
	add		r0, #0x3f
_08003964:
	asr		r0, r0, #0x6
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	mov		r8, r6
	sub		r0, r6, r0
	ldr		r3, _08003b68
	and		r0, r3
	lsl		r0, r0, #0x2
	ldr		r1, _08003b6c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r5, #0xd5
	mul		r0, r5
	cmp		r0, #0x0
	bge		_08003986
	ldr		r2, _08003b70
	add		r0, r0, r2
_08003986:
	asr		r0, r0, #0xf
	ldr		r4, _08003b74
	add		r4, r9
	ldrh	r1, [r4, #0x0]
	strh	r0, [r4, #0x0]
	mov		r6, r10
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp		r0, #0x0
	bge		_0800399c
	add		r0, #0x3f
_0800399c:
	asr		r0, r0, #0x6
	and		r0, r3
	lsl		r0, r0, #0x2
	ldr		r2, _08003b6c
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	mul		r0, r5
	cmp		r0, #0x0
	bge		_080039b2
	ldr		r6, _08003b70
	add		r0, r0, r6
_080039b2:
	asr		r0, r0, #0xf
	ldr		r2, _08003b78
	add		r2, r9
	ldrh	r1, [r2, #0x0]
	strh	r0, [r2, #0x0]
	mov		r1, r10
	mov		r6, #0x0
	ldrsh	r0, [r1, r6]
	cmp		r0, #0x0
	bge		_080039c8
	add		r0, #0x3f
_080039c8:
	asr		r0, r0, #0x6
	and		r0, r3
	lsl		r0, r0, #0x2
	ldr		r1, _08003b6c
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	sub		r0, r0, r1
	lsl		r1, r0, #0x2
	sub		r0, r0, r1
	cmp		r0, #0x0
	bge		_080039e8
	ldr		r6, _08003b70
	add		r0, r0, r6
_080039e8:
	asr		r0, r0, #0xf
	mov		r7, #0x91
	lsl		r7, r7, #0x5
	add		r7, r9
	ldrh	r1, [r7, #0x0]
	strh	r0, [r7, #0x0]
	mov		r1, r10
	mov		r6, #0x0
	ldrsh	r0, [r1, r6]
	cmp		r0, #0x0
	bge		_08003a00
	add		r0, #0x3f
_08003a00:
	asr		r0, r0, #0x6
	mov		r1, r8
	sub		r0, r1, r0
	and		r0, r3
	lsl		r0, r0, #0x2
	ldr		r6, _08003b6c
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	mul		r0, r5
	cmp		r0, #0x0
	bge		_08003a1a
	ldr		r1, _08003b70
	add		r0, r0, r1
_08003a1a:
	asr		r0, r0, #0xf
	ldr		r3, _08003b7c
	add		r3, r9
	ldrh	r1, [r3, #0x0]
	strh	r0, [r3, #0x0]
	ldrh	r0, [r4, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	ldr		r6, _08003b80
	add		r6, r9
	mov		r8, r6
	ldr		r5, [r6, #0x0]
	add		r1, r0, #0x0
	mul		r1, r5
	ldrh	r0, [r2, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	ldr		r6, _08003b84
	add		r6, r9
	ldr		r4, [r6, #0x0]
	mul		r0, r4
	add		r1, r1, r0
	mov		r2, #0xc0
	lsl		r2, r2, #0x7
	sub		r2, r2, r1
	ldrh	r0, [r7, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	add		r1, r0, #0x0
	mul		r1, r5
	ldrh	r0, [r3, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mul		r0, r4
	add		r1, r1, r0
	mov		r0, #0xe0
	lsl		r0, r0, #0x7
	sub		r0, r0, r1
	ldr		r1, _08003b88
	add		r1, r9
	ldrh	r3, [r1, #0x0]
	strh	r2, [r1, #0x0]
	ldr		r3, _08003b8c
	and		r2, r3
	asr		r2, r2, #0x10
	ldr		r1, _08003b90
	add		r1, r9
	ldrh	r4, [r1, #0x0]
	strh	r2, [r1, #0x0]
	ldr		r1, _08003b94
	add		r1, r9
	ldrh	r2, [r1, #0x0]
	strh	r0, [r1, #0x0]
	and		r0, r3
	asr		r0, r0, #0x10
	ldr		r1, _08003b98
	add		r1, r9
	ldrh	r2, [r1, #0x0]
	strh	r0, [r1, #0x0]
	ldrh	r1, [r6, #0x0]
	lsl		r1, r1, #0x10
	mov		r2, r8
	ldrh	r0, [r2, #0x0]
	orr		r0, r1
	str		r0, [sp, #0x8]
	ldr		r0, _08003b9c
	mov		r6, r10
	ldr		r1, [r6, #0x0]
	str		r1, [sp, #0x0]
	mov		r1, #0x0
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	mov		r2, #0xd5
	mov		r3, #0xd5
	bl		sub_0802951c
	mov		r0, #0x0
	mov		r10, r0
	mov		r1, sp
	add		r1, #0xc
	str		r1, [sp, #0x14]
	ldr		r2, _08003b60
	add		r2, r9
	str		r2, [sp, #0x10]
_08003ac2:
	mov		r6, r10
	lsl		r0, r6, #0xd
	ldr		r1, [sp, #0x10]
	ldr		r1, [r1, #0x0]
	mov		r8, r1
	add		r0, r8
	lsl		r0, r0, #0x10
	asr		r4, r0, #0x10
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_08003ada
	add		r0, #0x3f
_08003ada:
	asr		r5, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r5
	ldr		r6, _08003b68
	and		r0, r6
	lsl		r0, r0, #0x2
	ldr		r2, _08003b6c
	add		r0, r0, r2
	ldr		r2, [r0, #0x0]
	ldr		r0, _08003b80
	add		r0, r9
	ldr		r1, [r0, #0x0]
	mov		r7, #0x26
	add		r0, r2, #0x0
	mul		r0, r7
	asr		r0, r0, #0xf
	add		r1, r1, r0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	ldr		r0, _08003ba0
	ldr		r3, [sp, #0xC]
	and		r3, r0
	orr		r3, r1
	str		r3, [sp, #0xC]
	add		r0, r5, #0x0
	and		r0, r6
	lsl		r0, r0, #0x2
	ldr		r6, _08003b6c
	add		r0, r0, r6
	ldr		r2, [r0, #0x0]
	ldr		r0, _08003b84
	add		r0, r9
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	mul		r0, r7
	asr		r0, r0, #0xf
	add		r1, r1, r0
	lsl		r1, r1, #0x10
	ldr		r0, _08003ba4
	and		r3, r0
	orr		r3, r1
	str		r3, [sp, #0xC]
	mov		r1, r8
	neg		r0, r1
	str		r0, [sp, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x4]
	ldr		r0, _08003ba8
	ldr		r1, [sp, #0x14]
	mov		r2, #0xd5
	mov		r3, #0xd5
	bl		sub_0802951c
	mov		r2, #0x1
	add		r10, r2
	mov		r6, r10
	cmp		r6, #0x7
	ble		_08003ac2
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08003b60:	.4byte 0x000011F0
_08003b64:	.4byte 0xFFFFFF00
_08003b68:	.4byte 0x000003FF
_08003b6c:	.4byte 0x08101068
_08003b70:	.4byte 0x00007FFF
_08003b74:	.4byte 0x0000121C
_08003b78:	.4byte 0x0000121E
_08003b7c:	.4byte 0x00001222
_08003b80:	.4byte 0x000011E8
_08003b84:	.4byte 0x000011EC
_08003b88:	.4byte 0x00001224
_08003b8c:	.4byte 0x0FFF0000
_08003b90:	.4byte 0x00001226
_08003b94:	.4byte 0x00001228
_08003b98:	.4byte 0x0000122A
_08003b9c:	.4byte 0x080e39fc
_08003ba0:	.4byte 0xffff0000
_08003ba4:	.4byte 0x0000FFFF
_08003ba8:	.4byte 0x080e3a04
	thumb_func_end sub_0800393c

	thumb_func_start sub_08003bac
sub_08003bac:
	push	{ r4, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	mov		r0, #0xe
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x14
	bls		_08003bbc
	b		_08003fbc
_08003bbc:
	lsl		r0, r0, #0x2
	ldr		r1, _08003bc8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x3BC6, 0x2

_08003bc8:	.4byte 0x08003bcc
_08003bcc:	.4byte 0x08003fbc

.incbin "base.gba", 0x3BD0, 0x50
	thumb_func_end sub_08003bac


.incbin "base.gba", 0x3C20, 0x39C

_08003fbc:

.incbin "base.gba", 0x3FBC, 0x8
	thumb_func_start sub_08003fc4
sub_08003fc4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	add		r4, r2, #0x0
	mov		r10, r3
	ldr		r6, [r3, #0x0]
	ldrh	r5, [r6, #0x0]
	mov		r0, #0x0
	mov		r12, r0
	cmp		r12, r5
	bge		_08004080
_08003fe4:
	mov		r1, r12
	lsl		r0, r1, #0x2
	add		r0, r10
	ldr		r0, [r0, #0x4]
	str		r0, [r4, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	strh	r0, [r4, #0x4]
	sub		r0, r5, r1
	sub		r1, r0, #0x1
	ldrh	r2, [r6, #0x0]
	add		r3, r6, #0x2
	add		r7, r0, #0x0
	cmp		r2, r1
	bgt		_08004004
	sub		r1, r2, #0x1
_08004004:
	mov		r0, #0x18
	add		r0, r0, r4
	mov		r8, r0
	mov		r0, #0x1
	add		r0, r12
	mov		r9, r0
	cmp		r1, #0x0
	ble		_0800401e
	add		r0, r1, #0x0
_08004016:
	add		r3, #0x6
	sub		r0, #0x1
	cmp		r0, #0x0
	bne		_08004016
_0800401e:
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	ldr		r1, [sp, #0x4]
	add		r0, r1, r0
	strh	r0, [r4, #0x6]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	strh	r0, [r4, #0xa]
	add		r1, r0, #0x0
	strh	r1, [r4, #0x8]
	mov		r0, #0x0
	strh	r0, [r4, #0xc]
	mov		r0, #0x1
	strb	r0, [r4, #0xe]
	mov		r1, #0x0
	strh	r1, [r4, #0x10]
	add		r1, r6, #0x0
	sub		r0, r7, #0x1
	ldrh	r2, [r1, #0x0]
	add		r1, #0x2
	cmp		r2, r0
	bgt		_0800404c
	sub		r0, r2, #0x1
_0800404c:
	cmp		r0, #0x0
	ble		_08004058
_08004050:
	add		r1, #0x6
	sub		r0, #0x1
	cmp		r0, #0x0
	bne		_08004050
_08004058:
	ldrh	r0, [r1, #0x2]
	ldr		r2, _08004090
	add		r1, r2, #0x0
	and		r1, r0
	add		r0, r1, #0x0
	cmp		r0, #0xff
	bls		_0800406c
	add		r0, r1, #0x0
	eor		r0, r2
	neg		r0, r0
_0800406c:
	ldr		r1, [sp, #0x0]
	add		r0, r1, r0
	strh	r0, [r4, #0x12]
	mov		r0, r12
	strb	r0, [r4, #0x16]
	strb	r5, [r4, #0x17]
	mov		r4, r8
	mov		r12, r9
	cmp		r12, r5
	blt		_08003fe4
_08004080:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08004090:	.4byte 0x000001FF
	thumb_func_end sub_08003fc4

	thumb_func_start sub_08004094
sub_08004094:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x10
	add		r4, r0, #0x0
	add		r7, r4, #0x0
	add		r7, #0x54
	bl		sub_08027788
	cmp		r0, #0x0
	beq		_080040c8
	bl		sub_080277b4
	cmp		r0, #0x0
	beq		_080040c8
	ldr		r0, [r4, #0x4c]
	mov		r1, #0x2f
	and		r0, r1
	cmp		r0, #0xf
	bgt		_080040c8
	ldr		r0, _0800416c
	ldr		r1, _08004170
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
_080040c8:
	ldr		r1, [r7, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r0, #0x18
	add		r4, r7, r0
	ldr		r5, [r4, #0x0]
	cmp		r5, #0x0
	beq		_0800410e
	mov		r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	beq		_0800410e
	mov		r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	beq		_0800410e
	ldrh	r1, [r4, #0x6]
	lsl		r1, r1, #0x10
	ldrh	r0, [r4, #0x4]
	orr		r0, r1
	str		r0, [sp, #0x8]
	mov		r0, #0x8
	ldrsh	r2, [r4, r0]
	mov		r1, #0xa
	ldrsh	r3, [r4, r1]
	mov		r1, #0xc
	ldrsh	r0, [r4, r1]
	str		r0, [sp, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x4]
	add		r0, r5, #0x0
	add		r1, sp, #0x8
	bl		sub_0802951c
_0800410e:
	mov		r6, #0x0
	ldr		r0, [r7, #0x14]
	cmp		r6, r0
	bge		_08004164
	add		r4, r7, #0x0
	add		r4, #0x18
_0800411a:
	ldr		r0, [r7, #0x0]
	cmp		r6, r0
	beq		_0800415a
	ldr		r5, [r4, #0x0]
	cmp		r5, #0x0
	beq		_0800415a
	mov		r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	beq		_0800415a
	mov		r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	beq		_0800415a
	ldrh	r1, [r4, #0x6]
	lsl		r1, r1, #0x10
	ldrh	r0, [r4, #0x4]
	orr		r0, r1
	str		r0, [sp, #0xC]
	mov		r0, #0x8
	ldrsh	r2, [r4, r0]
	mov		r1, #0xa
	ldrsh	r3, [r4, r1]
	mov		r1, #0xc
	ldrsh	r0, [r4, r1]
	str		r0, [sp, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x4]
	add		r0, r5, #0x0
	add		r1, sp, #0xc
	bl		sub_0802951c
_0800415a:
	add		r4, #0x18
	add		r6, #0x1
	ldr		r0, [r7, #0x14]
	cmp		r6, r0
	blt		_0800411a
_08004164:
	add		sp, #0x10
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800416c:	.4byte 0x080e3a2c
_08004170:	.4byte 0x080f4764
	thumb_func_end sub_08004094

	thumb_func_start sub_08004174
sub_08004174:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	add		r6, #0x54
	ldr		r1, [r0, #0x8]
	cmp		r1, #0x1
	beq		_080041a8
	cmp		r1, #0x1
	bgt		_08004194
	cmp		r1, #0x0
	beq		_0800419e
	b		_080041d0
_08004194:
	cmp		r1, #0x2
	beq		_080041b8
	cmp		r1, #0x3
	beq		_080041c4
	b		_080041d0
_0800419e:
	str		r1, [r6, #0xc]
	ldr		r0, _080041a4
	b		_080041ca

_080041a4:	.4byte 0x080f45e0

_080041a8:
	mov		r0, #0x0
	str		r0, [r6, #0xc]
	ldr		r0, _080041b4
	str		r0, [r6, #0x10]
	str		r1, [r6, #0x14]
	b		_080041d0

_080041b4:	.4byte 0x080f45f4

_080041b8:
	mov		r0, #0x0
	str		r0, [r6, #0xc]
	ldr		r0, _080041c0
	b		_080041ca

_080041c0:	.4byte 0x080f4608

_080041c4:
	mov		r0, #0x0
	str		r0, [r6, #0xc]
	ldr		r0, _080042a8
_080041ca:
	str		r0, [r6, #0x10]
	mov		r0, #0x1
	str		r0, [r6, #0x14]
_080041d0:
	mov		r7, #0x0
	ldr		r0, [r6, #0x14]
	mov		r1, #0x84
	add		r1, r1, r6
	mov		r10, r1
	add		r2, r6, #0x0
	add		r2, #0x18
	str		r2, [sp, #0x0]
	cmp		r7, r0
	bge		_08004246
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	mov		r9, r0
	mov		r1, #0x0
	mov		r8, r1
_080041ee:
	ldr		r0, [r6, #0x10]
	add		r0, r8
	ldr		r5, [r0, #0x4]
	lsl		r1, r7, #0xb
	ldr		r0, _080042ac
	add		r4, r1, r0
	mov		r2, r9
	add		r1, r4, r2
	add		r0, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _080042b0
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0xe0
	lsl		r0, r0, #0x3
	add		r1, r4, r0
	ldr		r0, _080042b4
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, [r6, #0x10]
	add		r0, r8
	ldr		r5, [r0, #0x8]
	mov		r0, #0x1
	bl		sub_08028130
	lsl		r1, r7, #0x5
	add		r1, r9
	add		r4, r0, r1
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	mov		r1, #0x14
	add		r8, r1
	add		r7, #0x1
	ldr		r0, [r6, #0x14]
	cmp		r7, r0
	blt		_080041ee
_08004246:
	mov		r0, #0x1
	mov		r2, r10
	str		r0, [r2, #0x0]
	mov		r7, #0x0
	ldr		r0, [r6, #0x14]
	cmp		r7, r0
	bge		_08004286
	mov		r5, #0x0
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r2, r6, #0x0
	add		r2, #0x18
	mov		r3, #0x0
_08004260:
	ldr		r1, [r6, #0x10]
	add		r1, r3, r1
	ldr		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	ldrh	r0, [r1, #0xc]
	strh	r0, [r2, #0x4]
	ldr		r0, [r6, #0x10]
	add		r0, r3, r0
	ldrh	r0, [r0, #0xe]
	strh	r0, [r2, #0x6]
	strh	r4, [r2, #0xa]
	strh	r4, [r2, #0x8]
	strh	r5, [r2, #0xc]
	add		r2, #0x18
	add		r3, #0x14
	add		r7, #0x1
	ldr		r0, [r6, #0x14]
	cmp		r7, r0
	blt		_08004260
_08004286:
	mov		r1, #0x0
	str		r1, [r6, #0x0]
	mov		r0, #0xc0
	ldr		r2, [sp, #0x0]
	strh	r0, [r2, #0xa]
	strh	r0, [r2, #0x8]
	str		r1, [r6, #0x4]
	mov		r0, #0x4
	str		r0, [r6, #0x8]
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080042a8:	.4byte 0x080f461c
_080042ac:	.4byte 0x02014000
_080042b0:	.4byte 0x080d2848
_080042b4:	.4byte 0x080d28b8
	thumb_func_end sub_08004174

	thumb_func_start sub_080042b8
sub_080042b8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r10, r0
	mov		r6, r10
	add		r6, #0x54
	mov		r1, r10
	ldr		r0, [r1, #0x8]
	cmp		r0, #0x1
	beq		_08004304
	cmp		r0, #0x1
	bgt		_080042dc
	cmp		r0, #0x0
	beq		_080042f4
	b		_08004310
_080042dc:
	cmp		r0, #0x3
	bgt		_08004310
	ldr		r0, _080042ec
	str		r0, [r6, #0xc]
	ldr		r0, _080042f0
	str		r0, [r6, #0x10]
	mov		r0, #0x2
	b		_0800430e

_080042ec:	.4byte 0x080f45c8
_080042f0:	.4byte 0x080f46a8

_080042f4:
	ldr		r0, _080042fc
	str		r0, [r6, #0xc]
	ldr		r0, _08004300
	b		_0800430a

_080042fc:	.4byte 0x080f45b0
_08004300:	.4byte 0x080f4630

_08004304:
	ldr		r0, _080043fc
	str		r0, [r6, #0xc]
	ldr		r0, _08004400
_0800430a:
	str		r0, [r6, #0x10]
	mov		r0, #0x3
_0800430e:
	str		r0, [r6, #0x14]
_08004310:
	mov		r7, #0x0
	ldr		r0, [r6, #0x14]
	add		r1, r6, #0x0
	add		r1, #0x84
	str		r1, [sp, #0x0]
	cmp		r7, r0
	bge		_08004380
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	mov		r9, r0
	mov		r1, #0x0
	mov		r8, r1
_08004328:
	ldr		r0, [r6, #0x10]
	add		r0, r8
	ldr		r5, [r0, #0x4]
	lsl		r1, r7, #0xb
	ldr		r0, _08004404
	add		r4, r1, r0
	mov		r0, r9
	add		r1, r4, r0
	add		r0, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _08004408
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0xe0
	lsl		r0, r0, #0x3
	add		r1, r4, r0
	ldr		r0, _0800440c
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, [r6, #0x10]
	add		r0, r8
	ldr		r5, [r0, #0x8]
	mov		r0, #0x1
	bl		sub_08028130
	lsl		r1, r7, #0x5
	add		r1, r9
	add		r4, r0, r1
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	mov		r1, #0x14
	add		r8, r1
	add		r7, #0x1
	ldr		r0, [r6, #0x14]
	cmp		r7, r0
	blt		_08004328
_08004380:
	mov		r0, #0x1
	ldr		r1, [sp, #0x0]
	str		r0, [r1, #0x0]
	mov		r7, #0x0
	ldr		r0, [r6, #0x14]
	cmp		r7, r0
	bge		_080043c2
	mov		r5, #0x0
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r2, r6, #0x0
	add		r2, #0x18
	mov		r3, #0x0
_0800439a:
	ldr		r1, [r6, #0x10]
	add		r1, r3, r1
	ldr		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	ldrh	r0, [r1, #0xc]
	add		r0, #0xf0
	strh	r0, [r2, #0x4]
	ldr		r0, [r6, #0x10]
	add		r0, r3, r0
	ldrh	r0, [r0, #0xe]
	strh	r0, [r2, #0x6]
	strh	r4, [r2, #0xa]
	strh	r4, [r2, #0x8]
	strh	r5, [r2, #0xc]
	add		r2, #0x18
	add		r3, #0x14
	add		r7, #0x1
	ldr		r0, [r6, #0x14]
	cmp		r7, r0
	blt		_0800439a
_080043c2:
	mov		r0, r10
	bl		sub_08002c68
	str		r0, [r6, #0x0]
	mov		r0, #0x1
	neg		r0, r0
	mov		r1, r10
	str		r0, [r1, #0x10]
	ldr		r1, [r6, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r0, r0, r6
	add		r0, #0x18
	mov		r2, #0x0
	mov		r1, #0xc0
	strh	r1, [r0, #0xa]
	strh	r1, [r0, #0x8]
	str		r2, [r6, #0x4]
	mov		r0, #0x4
	str		r0, [r6, #0x8]
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080043fc:	.4byte 0x080f45b0
_08004400:	.4byte 0x080f466c
_08004404:	.4byte 0x02014000
_08004408:	.4byte 0x080d2848
_0800440c:	.4byte 0x080d28b8
	thumb_func_end sub_080042b8

	thumb_func_start sub_08004410
sub_08004410:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r10, r0
	mov		r6, r10
	add		r6, #0x54
	mov		r1, r10
	ldr		r0, [r1, #0x10]
	cmp		r0, #0x5
	bhi		_08004478
	lsl		r0, r0, #0x2
	ldr		r1, _08004434
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08004434:	.4byte 0x08004438
_08004438:	.4byte 0x08004450

.incbin "base.gba", 0x443C, 0x14
	thumb_func_end sub_08004410


.incbin "base.gba", 0x4450, 0x28

_08004478:

.incbin "base.gba", 0x4478, 0x18
_08004490:

.incbin "base.gba", 0x4490, 0x58
_080044e8:

.incbin "base.gba", 0x44E8, 0x1A
_08004502:

.incbin "base.gba", 0x4502, 0x28
_0800452a:

.incbin "base.gba", 0x452A, 0x42
_0800456c:	.4byte 0x02014000
_08004570:	.4byte 0x080d2848
_08004574:	.4byte 0x080d28b8
	thumb_func_start sub_08004578
sub_08004578:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	mov		r8, r1
	mov		r5, #0xc0
	lsl		r5, r5, #0x13
	mov		r4, #0x7
_08004588:
	bl		sub_08029f34
	ldr		r1, _0800478c
	add		r2, r5, #0x0
	ldr		r3, _08004790
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	mov		r0, #0xc0
	lsl		r0, r0, #0x5
	add		r5, r5, r0
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08004588
	add		r0, r7, #0x0
	bl		sub_08002e98
	bl		_DrawFrameRunAudio
	ldr		r4, _08004794
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xa0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	ldr		r4, _08004798
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe0
	add		r0, r4, #0x0
	mov		r2, #0x10
	bl		_CallHardwareSetCpuFast
	ldr		r4, _0800479c
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x10
	bl		_CallHardwareSetCpuFast
	ldr		r4, _080047a0
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x60
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	bl		_DrawFrameRunAudio
	ldr		r0, _080047a4
	ldr		r4, _080047a8
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _080047ac
	ldr		r3, _080047b0
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _080047b4
	mov		r2, #0x80
	lsl		r2, r2, #0x7
	add		r1, r4, r2
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	ldr		r0, _080047b8
	mov		r1, #0xc0
	lsl		r1, r1, #0x7
	add		r4, r4, r1
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	mov		r5, #0x0
	ldr		r6, _080047bc
_0800464a:
	lsl		r4, r5, #0xd
	ldr		r0, _080047c0
	add		r4, r4, r0
	bl		sub_08029f34
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	ldr		r3, _080047c4
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	mov		r2, #0x80
	lsl		r2, r2, #0x6
	add		r6, r6, r2
	add		r5, #0x1
	cmp		r5, #0x1
	ble		_0800464a
	ldr		r0, _080047c8
	ldr		r4, _080047cc
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	ldr		r0, _080047d0
	mov		r2, #0xc0
	lsl		r2, r2, #0x4
	add		r1, r4, r2
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _080047d4
	ldr		r3, _080047d8
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _080047dc
	mov		r1, #0xd8
	lsl		r1, r1, #0x7
	add		r4, r4, r1
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _080047e0
	ldr		r3, _080047e4
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	bl		_DrawFrameRunAudio
	ldr		r4, _080047e8
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	add		r4, r0, #0x0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r2, _080047ec
	ldr		r3, _080047f0
	add		r0, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r4, _080047f4
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	ldr		r4, _080047f8
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x3
	bl		sub_080281fc
	bl		_DrawFrameRunAudio
	ldr		r2, _080047fc
	add		r1, r7, r2
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x0
	mov		r0, #0xb
	strh	r0, [r1, #0x0]
	ldr		r0, _08004800
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	ldr		r0, _08004804
	strh	r0, [r1, #0x0]
	ldr		r0, _08004808
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	ldr		r0, _0800480c
	strh	r0, [r1, #0x0]
	ldr		r0, _08004810
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	ldr		r0, _08004814
	strh	r0, [r1, #0x0]
	ldr		r0, _08004818
	add		r1, r7, r0
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r0, _0800481c
	add		r1, r7, r0
	mov		r0, #0x50
	str		r0, [r1, #0x0]
	ldr		r1, _08004820
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	add		r1, #0x8
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	mov		r2, r8
	cmp		r2, #0x0
	bne		_08004780
	ldr		r1, _08004824
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800482c
_08004780:
	ldr		r2, _08004828
	add		r0, r7, r2
	ldrh	r1, [r0, #0x0]
	mov		r1, #0xff
	b		_08004834

.align 2, 0

_0800478c:	.4byte 0x0203EEA8
_08004790:	.4byte 0x81000C00
_08004794:	.4byte 0x080c9d0c
_08004798:	.4byte 0x0809866c
_0800479c:	.4byte 0x080caf90
_080047a0:	.4byte 0x080cafd0
_080047a4:	.4byte 0x08098b0c
_080047a8:	.4byte 0x02008400
_080047ac:	.4byte 0x06008000
_080047b0:	.4byte 0x80000600
_080047b4:	.4byte 0x080c9e50
_080047b8:	.4byte 0x080ca498
_080047bc:	.4byte 0x0600C000
_080047c0:	.4byte 0x0200C400
_080047c4:	.4byte 0x80001000
_080047c8:	.4byte 0x080caff0
_080047cc:	.4byte 0x02010400
_080047d0:	.4byte 0x080d6e20
_080047d4:	.4byte 0x06010000
_080047d8:	.4byte 0x80001200
_080047dc:	.4byte 0x080cb448
_080047e0:	.4byte 0x06016C00
_080047e4:	.4byte 0x80000200
_080047e8:	.4byte 0x080caad4
_080047ec:	.4byte 0x06002000
_080047f0:	.4byte 0x80000400
_080047f4:	.4byte 0x080993b8
_080047f8:	.4byte 0x080994bc
_080047fc:	.4byte 0x000011FE
_08004800:	.4byte 0x00001204
_08004804:	.4byte 0x0000020B
_08004808:	.4byte 0x0000120A
_0800480c:	.4byte 0x0000448E
_08004810:	.4byte 0x000011FC
_08004814:	.4byte 0x00001741
_08004818:	.4byte 0x000011E8
_0800481c:	.4byte 0x000011EC
_08004820:	.4byte 0x000011F0
_08004824:	.4byte 0x00000D84
_08004828:	.4byte 0x00001216

_0800482c:
	ldr		r1, _0800484c
	add		r0, r7, r1
	ldrh	r1, [r0, #0x0]
	mov		r1, #0xbf
_08004834:
	strh	r1, [r0, #0x0]
	ldr		r2, _08004850
	add		r0, r7, r2
	ldrh	r1, [r0, #0x0]
	mov		r1, #0x10
	strh	r1, [r0, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.align 2, 0

_0800484c:	.4byte 0x00001216
_08004850:	.4byte 0x0000121A
	thumb_func_end sub_08004578

	non_word_aligned_thumb_func_start sub_08004854
sub_08004854:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x30
	mov		r8, r0
	add		r4, r1, #0x0
	mov		r7, r8
	add		r7, #0x54
	mov		r0, #0x0
	mov		r10, r0
	mov		r1, #0x0
	str		r1, [sp, #0x1c]
	mov		r2, #0x0
	str		r2, [sp, #0x20]
	mov		r3, r8
	str		r0, [r3, #0x54]
	str		r0, [r7, #0x4]
	str		r0, [r7, #0x8]
	str		r0, [r7, #0xc]
	str		r0, [r7, #0x10]
	str		r0, [r7, #0x14]
	str		r0, [r7, #0x78]
	str		r0, [r7, #0x7c]
	mov		r0, r8
	add		r0, #0xd4
	mov		r6, r10
	str		r6, [r0, #0x0]
	add		r0, #0x4
	str		r6, [r0, #0x0]
	mov		r1, #0xc0
	lsl		r1, r1, #0x13
	mov		r0, #0x0
	bl		sub_080281c4
	ldr		r1, _080048c8
	mov		r0, #0x1
	bl		sub_080281c4
	mov		r0, r8
	add		r1, r4, #0x0
	bl		sub_08004578
	cmp		r4, #0x0
	beq		_080048cc
	mov		r0, #0x1
	str		r0, [r7, #0x78]
	str		r0, [r7, #0x7c]
	mov		r1, r8
	ldr		r0, [r1, #0x10]
	mov		r2, #0xa
	mov		r10, r2
	cmp		r0, #0x3
	bne		_080048e8
	mov		r3, #0x4
	mov		r10, r3
	b		_080048e8

_080048c8:	.4byte 0x06001000

_080048cc:
	mov		r4, r10
	str		r4, [r7, #0x78]
	str		r4, [r7, #0x7c]
	ldr		r0, _08004968 @ [pc, #0x94]
	add		r0, r8
	ldr		r1, [r0, #0x0]
	neg		r0, r1
	orr		r0, r1
	asr		r0, r0, #0x1f
	mov		r10, r0
	mov		r0, #0x4
	mov		r6, r10
	and		r6, r0
	mov		r10, r6
_080048e8:
	ldr		r2, _0800496c
	add		r2, r8
	ldr		r3, _08004970
	mov		r0, #0x88
	mov		r1, #0x20
	bl		sub_08003fc4
	add		r0, r7, #0x0
	add		r0, #0x84
	str		r0, [sp, #0x2c]
	mov		r1, sp
	add		r1, #0x10
	str		r1, [sp, #0x28]
	thumb_func_end sub_08004854

	non_word_aligned_thumb_func_start sub_08004902
sub_08004902:
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	ldr		r1, _08004974
	add		r1, r8
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r2, r8
	ldr		r0, [r2, #0x4c]
	add		r0, #0x1
	str		r0, [r2, #0x4c]
	mov		r0, #0x0
	ldr		r3, [sp, #0x2c]
	str		r0, [r3, #0x0]
	ldr		r0, _08004978
	ldrh	r1, [r0, #0x0]
	add		r0, sp, #0x8
	strh	r1, [r0, #0x0]
	ldr		r0, _0800497c
	ldrh	r0, [r0, #0x0]
	ldr		r4, [sp, #0x28]
	strh	r0, [r4, #0x0]
	ldr		r0, [r2, #0x8]
	mov		r5, r10
	sub		r5, #0x2
	cmp		r0, #0x0
	ble		_08004956
	mov		r3, #0x0
	add		r2, r4, #0x0
	add		r2, #0x2
	mov		r1, sp
	add		r1, #0xa
	add		r4, r0, #0x0
_08004948:
	strh	r3, [r2, #0x0]
	strh	r3, [r1, #0x0]
	add		r2, #0x2
	add		r1, #0x2
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08004948
_08004956:
	mov		r0, r8
	ldr		r6, [r0, #0x50]
	cmp		r5, #0xe
	bhi		_08004a1e
	lsl		r0, r5, #0x2
	ldr		r1, _08004980
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08004968:	.4byte 0x00000D84
_0800496c:	.4byte 0x00000D88
_08004970:	.4byte 0x080f4744
_08004974:	.4byte 0x000011F4
_08004978:	.4byte 0x030052C8
_0800497c:	.4byte 0x03005220
_08004980:	.4byte 0x08004984
_08004984:	.4byte 0x080049c0

.incbin "base.gba", 0x4988, 0x4
_0800498c:	.4byte 0x08004A1E

.incbin "base.gba", 0x4990, 0x30
	thumb_func_end sub_08004902


.incbin "base.gba", 0x49C0, 0x5E

_08004a1e:

.incbin "base.gba", 0x4A1E, 0x24
_08004a42:

.incbin "base.gba", 0x4A42, 0x4
_08004a46:

.incbin "base.gba", 0x4A46, 0xA
_08004a50:

.incbin "base.gba", 0x4A50, 0xC
_08004a5c:	.4byte 0x08004a60
_08004a60:	.4byte 0x08004ac0

.incbin "base.gba", 0x4A64, 0x48
_08004aac:	.4byte 0x080052f2

.incbin "base.gba", 0x4AB0, 0x838

_080052e8:

.incbin "base.gba", 0x52E8, 0xA

_080052f2:

.incbin "base.gba", 0x52F2, 0x36
_08005328:	.4byte 0x00001216
_0800532c:	.4byte 0x0000121A

_08005330:

.incbin "base.gba", 0x5330, 0xE
_0800533e:

.incbin "base.gba", 0x533E, 0x8
_08005346:

.incbin "base.gba", 0x5346, 0x8
_0800534e:

.incbin "base.gba", 0x534E, 0xC
_0800535a:

.incbin "base.gba", 0x535A, 0x14
_0800536e:

.incbin "base.gba", 0x536E, 0x12
_08005380:	.4byte 0x000011E8

.incbin "base.gba", 0x5384, 0x90
	thumb_func_start sub_08005414
sub_08005414:
	mov		r0, r8
	bl		sub_080036d8
	mov		r0, r8
	bl		sub_08004094
	mov		r6, r10
	cmp		r6, #0x7
	beq		_08005432
	cmp		r6, #0x7
	blt		_0800545e
	cmp		r6, #0x17
	bgt		_0800545e
	cmp		r6, #0x15
	blt		_0800545e
_08005432:
	ldr		r0, [r7, #0x0]
	ldr		r2, [r7, #0x10]
	lsl		r1, r0, #0x2
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r2
	mov		r0, #0x10
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x1
	blt		_0800545e
	cmp		r0, #0x2
	ble		_0800544e
	cmp		r0, #0x5
	bne		_0800545e
_0800544e:
	ldr		r0, _0800552c
	ldr		r1, _08005530
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
_0800545e:
	mov		r4, #0x85
	lsl		r4, r4, #0x5
	add		r4, r8
	mov		r0, #0x1
	str		r0, [r4, #0x0]
	mov		r0, r8
	bl		sub_08003170
	cmp		r0, #0x0
	beq		_08005480
	bl		sub_08029f34
	ldr		r1, _08005534
	ldr		r2, _08005538
	ldr		r3, _0800553c
	bl		sub_08029ee4
_08005480:
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	ldr		r0, _08005540
	add		r0, r8
	str		r0, [sp, #0x24]
	mov		r5, #0x0
	add		r1, sp, #0x18
	mov		r9, r1
_08005490:
	add		r5, #0x1
	mov		r2, #0x7
	sub		r0, r2, r5
	lsl		r4, r0, #0x1
	add		r4, r4, r0
	lsl		r4, r4, #0x3
	ldr		r3, [sp, #0x24]
	add		r4, r3, r4
	add		r0, r4, #0x0
	bl		sub_08003bac
	ldrh	r1, [r4, #0x6]
	lsl		r1, r1, #0x10
	ldrh	r0, [r4, #0x4]
	orr		r0, r1
	str		r0, [sp, #0x18]
	ldr		r0, [r4, #0x0]
	mov		r6, #0x8
	ldrsh	r2, [r4, r6]
	mov		r1, #0xa
	ldrsh	r3, [r4, r1]
	mov		r6, #0xc
	ldrsh	r1, [r4, r6]
	str		r1, [sp, #0x0]
	mov		r6, #0x0
	str		r6, [sp, #0x4]
	mov		r1, r9
	bl		sub_0802951c
	cmp		r5, #0x7
	blt		_08005490
	mov		r0, r8
	bl		sub_0800393c
	mov		r0, r8
	bl		sub_08003924
	cmp		r0, #0x0
	beq		_08005554
	ldr		r0, _08005544
	ldr		r4, _08005548
	str		r0, [r4, #0x4]
	ldr		r0, _0800554c
	str		r0, [r4, #0x0]
	str		r6, [r4, #0x8]
	mov		r0, #0x1
	strb	r0, [r4, #0xe]
	bl		sub_0802a130
	mov		r0, #0x0
	bl		sub_08028130
	strh	r6, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	bl		_DrawFrameRunAudio
	ldrb	r1, [r4, #0xc]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800551e
	mov		r5, #0x2
_08005510:
	bl		_DrawFrameRunAudio
	ldrb	r1, [r4, #0xc]
	add		r0, r5, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08005510
_0800551e:
	ldr		r1, _08005550
	add		r1, r8
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	b		_08005580

.incbin "base.gba", 0x552A, 0x2

_0800552c:	.4byte 0x080e3b1c
_08005530:	.4byte 0x080f4768
_08005534:	.4byte 0x02013000
_08005538:	.4byte 0x06012C00
_0800553c:	.4byte 0x80000800
_08005540:	.4byte 0x00000D88
_08005544:	.4byte 0x0802A1FD
_08005548:	.4byte 0x030052F0
_0800554c:	.4byte 0x0802A239
_08005550:	.4byte 0x0000109C

_08005554:
	ldr		r1, [sp, #0x2c]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08005560
	bl		sub_08004902
_08005560:
	bl		sub_08029f34
	ldr		r1, _08005574
	ldr		r2, _08005578
	ldr		r3, _0800557c
	bl		sub_08029ee4
	bl		sub_08004902
	
	.2byte 	0x0

_08005574:
	and		r0, r0
	lsl		r1, r0, #0x8
_08005578:
	sub		r4, #0x0
	lsl		r1, r0, #0x18
_0800557c:
	asr 	r0, r0, #0x20
	strh	r0, [r0, #0x0]
_08005580:
	add		sp, #0x30
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08005414

	thumb_func_start sub_08005590
sub_08005590:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r9, r0
	mov		r10, r1
	mov		r4, r9
	add		r4, #0x54
	ldr		r0, _080055d8
	add		r0, r9
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	mov		r1, #0x9c
	lsl		r1, r1, #0x3
	add		r1, r9
	mov		r2, #0x0
	str		r2, [r1, #0x0]
	ldr		r2, _080055dc
	add		r2, r9
	mov		r0, #0x0
	str		r0, [r2, #0x0]
	mov		r3, #0x9d
	lsl		r3, r3, #0x3
	add		r3, r9
	str		r0, [r3, #0x0]
	mov		r0, r10
	cmp		r0, #0x2
	beq		_080055f4
	cmp		r0, #0x2
	bgt		_080055e0
	cmp		r0, #0x1
	beq		_080055e8
	b		_0800560a

.incbin "base.gba", 0x55D6, 0x2

_080055d8:	.4byte 0x000004DC
_080055dc:	.4byte 0x000004E4

_080055e0:
	mov		r0, r10
	cmp		r0, #0x5
	beq		_08005600
	b		_0800560a
_080055e8:
	mov		r0, #0x2
	str		r0, [r1, #0x0]
	mov		r0, #0x7
	str		r0, [r2, #0x0]
	mov		r0, #0x9
	b		_08005608
_080055f4:
	mov		r0, #0x4
	str		r0, [r1, #0x0]
	mov		r0, #0x7
	str		r0, [r2, #0x0]
	mov		r0, #0x6
	b		_08005608
_08005600:
	mov		r0, #0x3
	str		r0, [r1, #0x0]
	mov		r0, #0x7
	str		r0, [r2, #0x0]
_08005608:
	str		r0, [r3, #0x0]
_0800560a:
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r4, #0x0
	add		r1, #0x88
	mov		r2, #0x80
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028130
	mov		r2, #0xa2
	lsl		r2, r2, #0x2
	add		r1, r4, r2
	mov		r2, #0x80
	bl		_CallHardwareSetCpuFast
	mov		r7, #0x0
_0800562e:
	mov		r0, #0x0
	bl		sub_08028130
	lsl		r1, r7, #0x5
	add		r0, r0, r1
	cmp		r7, #0xc
	beq		_08005684
	mov		r6, #0x1f
	add		r5, r0, #0x0
	mov		r0, #0xf
	mov		r8, r0
_08005644:
	ldrh	r0, [r5, #0x0]
	mov		r1, #0x1f
	and		r1, r0
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x15
	and		r3, r6
	lsr		r4, r0, #0x1a
	and		r4, r6
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	asr		r2, r0, #0x2
	and		r2, r6
	lsl		r0, r3, #0x1
	add		r0, r0, r3
	asr		r0, r0, #0x2
	and		r0, r6
	lsl		r1, r0, #0x5
	orr		r1, r2
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	asr		r0, r0, #0x2
	and		r0, r6
	lsl		r0, r0, #0xa
	orr		r1, r0
	strh	r1, [r5, #0x0]
	add		r5, #0x2
	mov		r1, #0x1
	neg		r1, r1
	add		r8, r1
	mov		r2, r8
	cmp		r2, #0x0
	bge		_08005644
_08005684:
	add		r7, #0x1
	cmp		r7, #0xf
	ble		_0800562e
	mov		r7, #0x0
_0800568c:
	mov		r0, #0x1
	bl		sub_08028130
	lsl		r1, r7, #0x5
	add		r0, r0, r1
	add		r1, r7, #0x1
	mov		r12, r1
	cmp		r7, #0x3
	beq		_080056e6
	mov		r6, #0x1f
	add		r5, r0, #0x0
	mov		r2, #0xf
	mov		r8, r2
_080056a6:
	ldrh	r0, [r5, #0x0]
	mov		r1, #0x1f
	and		r1, r0
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x15
	and		r3, r6
	lsr		r4, r0, #0x1a
	and		r4, r6
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	asr		r2, r0, #0x2
	and		r2, r6
	lsl		r0, r3, #0x1
	add		r0, r0, r3
	asr		r0, r0, #0x2
	and		r0, r6
	lsl		r1, r0, #0x5
	orr		r1, r2
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	asr		r0, r0, #0x2
	and		r0, r6
	lsl		r0, r0, #0xa
	orr		r1, r0
	strh	r1, [r5, #0x0]
	add		r5, #0x2
	mov		r0, #0x1
	neg		r0, r0
	add		r8, r0
	mov		r1, r8
	cmp		r1, #0x0
	bge		_080056a6
_080056e6:
	mov		r7, r12
	cmp		r7, #0xf
	ble		_0800568c
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r2, _080057d0
	add		r2, r9
	ldrh	r3, [r2, #0x0]
	ldr		r1, _080057d4
	add		r0, r1, #0x0
	and		r0, r3
	mov		r3, #0x4
	ldrh	r4, [r2, #0x0]
	mov		r4, #0x0
	orr		r0, r3
	strh	r0, [r2, #0x0]
	ldr		r2, _080057d8
	add		r2, r9
	ldrh	r0, [r2, #0x0]
	and		r1, r0
	ldrh	r0, [r2, #0x0]
	orr		r1, r3
	strh	r1, [r2, #0x0]
	ldrh	r1, [r2, #0x0]
	ldr		r0, _080057dc
	and		r0, r1
	ldrh	r1, [r2, #0x0]
	strh	r0, [r2, #0x0]
	bl		sub_08029f34
	ldr		r2, _080057e0
	mov		r8, r2
	ldr		r2, _080057e4
	ldr		r3, _080057e8
	mov		r1, r8
	bl		sub_08029ee4
	str		r4, [sp, #0x0]
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r2, _080057ec
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x2
	bl		sub_080281fc
	bl		_DrawFrameRunAudio
	ldr		r4, _080057f0
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r0, #0xfb
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x5
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r0, _080057f4
	ldr		r5, _080057f8
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _080057fc
	ldr		r6, _08005800
	add		r1, r5, #0x0
	add		r3, r6, #0x0
	bl		sub_08029ee4
	ldr		r0, _08005804
	mov		r1, #0xc0
	lsl		r1, r1, #0x5
	add		r4, r5, r1
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08005808
	add		r1, r4, #0x0
	add		r3, r6, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0800580c
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	add		r1, r5, #0x0
	mov		r2, r8
	add		r3, r6, #0x0
	bl		sub_08029ee4
	mov		r2, r10
	cmp		r2, #0x2
	beq		_0800584c
	cmp		r2, #0x2
	bgt		_08005810
	cmp		r2, #0x1
	beq		_08005818
	b		_08005886

_080057d0:	.4byte 0x000011FE
_080057d4:	.4byte 0x0000FFF3
_080057d8:	.4byte 0x00001204
_080057dc:	.4byte 0x0000FFFC
_080057e0:	.4byte 0x06008000
_080057e4:	.4byte 0x06004000
_080057e8:	.4byte 0x80000200
_080057ec:	.4byte 0x01000140
_080057f0:	.4byte 0x080c6a00
_080057f4:	.4byte 0x080c558c
_080057f8:	.4byte 0x0200C400
_080057fc:	.4byte 0x06005000
_08005800:	.4byte 0x80000C00
_08005804:	.4byte 0x080c5bc0
_08005808:	.4byte 0x06006800
_0800580c:	.4byte 0x080c6300

_08005810:
	mov		r0, r10
	cmp		r0, #0x5
	beq		_08005830
	b		_08005886
_08005818:
	mov		r1, #0x0
	cmp		r1, #0x0
	beq		_08005828
	ldr		r4, _08005824
	mov		r0, #0x1
	b		_08005836

_08005824:	.4byte 0x080cb664

_08005828:
	ldr		r4, _0800582c
	b		_08005832

_0800582c:	.4byte 0x080cb894

_08005830:
	ldr		r4, _08005848
_08005832:
	mov		r0, #0x1
	mov		r1, #0x0
_08005836:
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	b		_08005886

.incbin "base.gba", 0x5846, 0x2

_08005848:	.4byte 0x080cb784

_0800584c:
	bl		sub_08029f34
	ldr		r1, _0800589c
	ldr		r2, _080058a0
	ldr		r3, _080058a4
	bl		sub_08029ee4
	ldr		r4, _080058a8
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r4, _080058ac
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r2, #0xc0
	lsl		r2, r2, #0x1
	add		r1, r1, r2
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
_08005886:
	mov		r0, #0x2
	bl		sub_080281fc
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800589c:	.4byte 0x080cb5e4
_080058a0:	.4byte 0x06009200
_080058a4:	.4byte 0x80000040
_080058a8:	.4byte 0x080cb9b0
_080058ac:	.4byte 0x0807e150
	thumb_func_end sub_08005590

	thumb_func_start sub_080058b0
sub_080058b0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0xc
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	mov		r0, #0x54
	add		r0, r0, r6
	mov		r8, r0
	ldr		r0, _08005934
	add		r4, r6, r0
	ldr		r3, [r4, #0x0]
	mov		r1, #0x80
	ldr		r2, _08005938
	ldrh	r0, [r2, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_080058d8
	add		r0, r3, #0x1
	str		r0, [r4, #0x0]
_080058d8:
	mov		r1, #0x40
	ldrh	r0, [r2, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_080058e8
	ldr		r0, [r4, #0x0]
	sub		r0, #0x1
	str		r0, [r4, #0x0]
_080058e8:
	mov		r0, #0x9c
	lsl		r0, r0, #0x3
	add		r2, r6, r0
	ldr		r1, [r4, #0x0]
	ldr		r0, [r2, #0x0]
	cmp		r1, r0
	blt		_080058fa
	mov		r0, #0x0
	str		r0, [r4, #0x0]
_080058fa:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bge		_08005906
	ldr		r0, [r2, #0x0]
	sub		r0, #0x1
	str		r0, [r4, #0x0]
_08005906:
	ldr		r0, [r4, #0x0]
	cmp		r0, r3
	beq		_08005912
	mov		r0, #0x8d
	bl		sub_0807073c
_08005912:
	mov		r0, #0x30
	ldr		r1, _0800593c
	ldrh	r1, [r1, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	bne		_08005920
	b		_08005a30
_08005920:
	mov		r0, #0x8e
	bl		sub_0807073c
	cmp		r5, #0x2
	beq		_0800598c
	cmp		r5, #0x2
	bgt		_08005940
	cmp		r5, #0x1
	beq		_08005946
	b		_08005a42

_08005934:	.4byte 0x000004DC
_08005938:	.4byte 0x030052C8
_0800593c:	.4byte 0x03005220

_08005940:
	cmp		r5, #0x5
	beq		_080059e8
	b		_08005a42
_08005946:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x1
	beq		_0800596c
	cmp		r0, #0x1
	bgt		_08005956
	cmp		r0, #0x0
	beq		_0800595c
	b		_08005a42
_08005956:
	cmp		r0, #0x2
	beq		_0800597c
	b		_08005a42
_0800595c:
	ldr		r0, _08005968
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x1
	eor		r1, r2
	strh	r1, [r0, #0x0]
	b		_08005a42

_08005968:	.4byte 0x03002FE0

_0800596c:
	ldr		r0, _08005978
	ldrh	r1, [r0, #0x2]
	mov		r2, #0x1
	eor		r1, r2
	strh	r1, [r0, #0x2]
	b		_08005a42

_08005978:	.4byte 0x03002FE0

_0800597c:
	ldr		r0, _08005988
	ldrh	r1, [r0, #0x4]
	mov		r2, #0x1
	eor		r1, r2
	strh	r1, [r0, #0x4]
	b		_08005a42

_08005988:	.4byte 0x03002FE0

_0800598c:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x1
	beq		_080059b8
	cmp		r0, #0x1
	bgt		_0800599c
	cmp		r0, #0x0
	beq		_080059a6
	b		_08005a42
_0800599c:
	cmp		r0, #0x2
	beq		_080059c8
	cmp		r0, #0x3
	beq		_080059d8
	b		_08005a42
_080059a6:
	ldr		r0, _080059b4
	ldrh	r1, [r0, #0x6]
	mov		r2, #0x1
	eor		r1, r2
	strh	r1, [r0, #0x6]
	b		_08005a42

.incbin "base.gba", 0x59B2, 0x2

_080059b4:	.4byte 0x03002FE0

_080059b8:
	ldr		r0, _080059c4
	ldrh	r1, [r0, #0x8]
	mov		r2, #0x1
	eor		r1, r2
	strh	r1, [r0, #0x8]
	b		_08005a42

_080059c4:	.4byte 0x03002FE0

_080059c8:
	ldr		r0, _080059d4
	ldrh	r1, [r0, #0xa]
	mov		r2, #0x1
	eor		r1, r2
	strh	r1, [r0, #0xa]
	b		_08005a42

_080059d4:	.4byte 0x03002FE0

_080059d8:
	ldr		r0, _080059e4
	ldrh	r1, [r0, #0xc]
	mov		r2, #0x1
	eor		r1, r2
	strh	r1, [r0, #0xc]
	b		_08005a42

_080059e4:	.4byte 0x03002FE0

_080059e8:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x1
	beq		_08005a10
	cmp		r0, #0x1
	bgt		_080059f8
	cmp		r0, #0x0
	beq		_080059fe
	b		_08005a42
_080059f8:
	cmp		r0, #0x2
	beq		_08005a20
	b		_08005a42
_080059fe:
	ldr		r0, _08005a0c
	ldrh	r1, [r0, #0xe]
	mov		r2, #0x1
	eor		r1, r2
	strh	r1, [r0, #0xe]
	b		_08005a42

.incbin "base.gba", 0x5A0A, 0x2

_08005a0c:	.4byte 0x03002FE0

_08005a10:
	ldr		r0, _08005a1c
	ldrh	r1, [r0, #0x10]
	mov		r2, #0x1
	eor		r1, r2
	strh	r1, [r0, #0x10]
	b		_08005a42

_08005a1c:	.4byte 0x03002FE0

_08005a20:
	ldr		r0, _08005a2c
	ldrh	r1, [r0, #0x12]
	mov		r2, #0x1
	eor		r1, r2
	strh	r1, [r0, #0x12]
	b		_08005a42

_08005a2c:	.4byte 0x03002FE0

_08005a30:
	mov		r0, #0xb
	and		r1, r0
	cmp		r1, #0x0
	beq		_08005a42
	mov		r0, #0x8f
	bl		sub_0807073c
	mov		r0, #0x1
	b		_08005c70
_08005a42:
	ldr		r1, [r6, #0x4c]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	ldr		r1, _08005ab0
	lsl		r0, r0, #0x19
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08005a54
	add		r0, #0x3f
_08005a54:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x92
	lsl		r1, r1, #0x3
	add		r1, r8
	ldr		r2, [r1, #0x0]
	lsl		r2, r2, #0x3
	lsl		r0, r0, #0x1
	asr		r0, r0, #0xf
	add		r0, #0x2
	add		r2, r2, r0
	lsl		r2, r2, #0x10
	ldr		r0, _08005ab4
	add		r0, r8
	ldr		r1, [r0, #0x0]
	lsl		r1, r1, #0x3
	mov		r0, #0x91
	lsl		r0, r0, #0x3
	add		r0, r8
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	add		r0, #0xa
	add		r1, r1, r0
	lsl		r1, r1, #0x10
	lsr		r2, r2, #0x10
	orr		r2, r1
	str		r2, [sp, #0x8]
	ldr		r0, _08005ab8
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	cmp		r5, #0x2
	beq		_08005b54
	cmp		r5, #0x2
	bgt		_08005abc
	cmp		r5, #0x1
	beq		_08005ac4
	b		_08005c6e

_08005ab0:	.4byte 0x08101068
_08005ab4:	.4byte 0x00000494
_08005ab8:	.4byte 0x080e3b64

_08005abc:
	cmp		r5, #0x5
	bne		_08005ac2
	b		_08005bf0
_08005ac2:
	b		_08005c6e
_08005ac4:
	mov		r4, #0x0
	ldr		r0, _08005aec
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	blt		_08005ad2
	b		_08005c6e
_08005ad2:
	mov		r6, #0x92
	lsl		r6, r6, #0x3
	add		r6, r8
	ldr		r7, _08005af0
	add		r5, sp, #0x8
_08005adc:
	cmp		r4, #0x1
	beq		_08005b02
	cmp		r4, #0x1
	bgt		_08005af4
	cmp		r4, #0x0
	beq		_08005afa
	b		_08005b18

.incbin "base.gba", 0x5AEA, 0x2

_08005aec:	.4byte 0x0000048C
_08005af0:	.4byte 0x03002FE0

_08005af4:
	cmp		r4, #0x2
	beq		_08005b0a
	b		_08005b18
_08005afa:
	ldr		r1, [r6, #0x0]
	lsl		r1, r1, #0x3
	ldrh	r0, [r7, #0x0]
	b		_08005b10
_08005b02:
	ldr		r1, [r6, #0x0]
	lsl		r1, r1, #0x3
	ldrh	r0, [r7, #0x2]
	b		_08005b10
_08005b0a:
	ldr		r1, [r6, #0x0]
	lsl		r1, r1, #0x3
	ldrh	r0, [r7, #0x4]
_08005b10:
	lsl		r0, r0, #0x5
	add		r0, #0x48
	add		r1, r1, r0
	strh	r1, [r5, #0x0]
_08005b18:
	ldr		r0, _08005b48
	add		r0, r8
	ldr		r1, [r0, #0x0]
	lsl		r1, r1, #0x3
	lsl		r0, r4, #0x4
	add		r0, #0x8
	add		r1, r1, r0
	mov		r0, #0x0
	strh	r1, [r5, #0x2]
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x4]
	ldr		r0, _08005b4c
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	add		r4, #0x1
	ldr		r0, _08005b50
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	blt		_08005adc
	b		_08005c6e

_08005b48:	.4byte 0x00000494
_08005b4c:	.4byte 0x080e3b48
_08005b50:	.4byte 0x0000048C

_08005b54:
	mov		r4, #0x0
	ldr		r0, _08005b7c
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	blt		_08005b62
	b		_08005c6e
_08005b62:
	mov		r6, #0x92
	lsl		r6, r6, #0x3
	add		r6, r8
	ldr		r7, _08005b80
	add		r5, sp, #0x8
_08005b6c:
	cmp		r4, #0x1
	beq		_08005b96
	cmp		r4, #0x1
	bgt		_08005b84
	cmp		r4, #0x0
	beq		_08005b8e
	b		_08005bb4

.incbin "base.gba", 0x5B7A, 0x2

_08005b7c:	.4byte 0x0000048C
_08005b80:	.4byte 0x03002FE0

_08005b84:
	cmp		r4, #0x2
	beq		_08005b9e
	cmp		r4, #0x3
	beq		_08005ba6
	b		_08005bb4
_08005b8e:
	ldr		r1, [r6, #0x0]
	lsl		r1, r1, #0x3
	ldrh	r0, [r7, #0x6]
	b		_08005bac
_08005b96:
	ldr		r1, [r6, #0x0]
	lsl		r1, r1, #0x3
	ldrh	r0, [r7, #0x8]
	b		_08005bac
_08005b9e:
	ldr		r1, [r6, #0x0]
	lsl		r1, r1, #0x3
	ldrh	r0, [r7, #0xa]
	b		_08005bac
_08005ba6:
	ldr		r1, [r6, #0x0]
	lsl		r1, r1, #0x3
	ldrh	r0, [r7, #0xc]
_08005bac:
	lsl		r0, r0, #0x5
	add		r0, #0x48
	add		r1, r1, r0
	strh	r1, [r5, #0x0]
_08005bb4:
	ldr		r0, _08005be4
	add		r0, r8
	ldr		r1, [r0, #0x0]
	lsl		r1, r1, #0x3
	lsl		r0, r4, #0x4
	add		r0, #0x8
	add		r1, r1, r0
	mov		r0, #0x0
	strh	r1, [r5, #0x2]
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x4]
	ldr		r0, _08005be8
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	add		r4, #0x1
	ldr		r0, _08005bec
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	blt		_08005b6c
	b		_08005c6e

_08005be4:	.4byte 0x00000494
_08005be8:	.4byte 0x080e3b48
_08005bec:	.4byte 0x0000048C

_08005bf0:
	mov		r4, #0x0
	ldr		r0, _08005c14
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bge		_08005c6e
	mov		r6, #0x92
	lsl		r6, r6, #0x3
	add		r6, r8
	ldr		r7, _08005c18
	add		r5, sp, #0x8
_08005c06:
	cmp		r4, #0x1
	beq		_08005c2a
	cmp		r4, #0x1
	bgt		_08005c1c
	cmp		r4, #0x0
	beq		_08005c22
	b		_08005c40

_08005c14:	.4byte 0x0000048C
_08005c18:	.4byte 0x03002FE0

_08005c1c:
	cmp		r4, #0x2
	beq		_08005c32
	b		_08005c40
_08005c22:
	ldr		r1, [r6, #0x0]
	lsl		r1, r1, #0x3
	ldrh	r0, [r7, #0xe]
	b		_08005c38
_08005c2a:
	ldr		r1, [r6, #0x0]
	lsl		r1, r1, #0x3
	ldrh	r0, [r7, #0x10]
	b		_08005c38
_08005c32:
	ldr		r1, [r6, #0x0]
	lsl		r1, r1, #0x3
	ldrh	r0, [r7, #0x12]
_08005c38:
	lsl		r0, r0, #0x5
	add		r0, #0x48
	add		r1, r1, r0
	strh	r1, [r5, #0x0]
_08005c40:
	ldr		r0, _08005c7c
	add		r0, r8
	ldr		r1, [r0, #0x0]
	lsl		r1, r1, #0x3
	lsl		r0, r4, #0x4
	add		r0, #0x8
	add		r1, r1, r0
	mov		r0, #0x0
	strh	r1, [r5, #0x2]
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x4]
	ldr		r0, _08005c80
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	add		r4, #0x1
	ldr		r0, _08005c84
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	blt		_08005c06
_08005c6e:
	mov		r0, #0x0
_08005c70:
	add		sp, #0xc
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08005c7c:	.4byte 0x00000494
_08005c80:	.4byte 0x080e3b48
_08005c84:	.4byte 0x0000048C
	thumb_func_end sub_080058b0

	thumb_func_start sub_08005c88
sub_08005c88:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	ldr		r0, _08005d50
	add		r2, r5, r0
	ldrh	r3, [r2, #0x0]
	ldr		r0, _08005d54
	add		r1, r0, #0x0
	and		r1, r3
	mov		r3, #0x8
	ldrh	r4, [r2, #0x0]
	mov		r4, #0x0
	mov		r6, #0x0
	orr		r1, r3
	strh	r1, [r2, #0x0]
	ldr		r1, _08005d58
	add		r2, r5, r1
	ldrh	r1, [r2, #0x0]
	and		r0, r1
	orr		r0, r3
	ldrh	r1, [r2, #0x0]
	orr		r0, r4
	strh	r0, [r2, #0x0]
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08005d5c
	and		r0, r1
	mov		r1, #0x3
	orr		r0, r1
	ldrh	r1, [r2, #0x0]
	orr		r0, r4
	strh	r0, [r2, #0x0]
	add		r4, r5, #0x0
	add		r4, #0xdc
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x80
	bl		_CallHardwareSetCpuFast
	mov		r0, #0xb7
	lsl		r0, r0, #0x2
	add		r5, r5, r0
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	mov		r2, #0x80
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r0, _08005d60
	ldr		r4, _08005d64
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08005d68
	ldr		r3, _08005d6c
	add		r1, r4, #0x0
	bl		sub_08029ee4
	str		r6, [sp, #0x0]
	ldr		r1, _08005d70
	add		r4, r4, r1
	ldr		r2, _08005d74
	mov		r0, sp
	add		r1, r4, #0x0
	bl		_CallHardwareSetCpuFast
	bl		sub_08029f34
	ldr		r2, _08005d78
	ldr		r3, _08005d7c
	add		r1, r4, #0x0
	bl		sub_08029ee4
	ldr		r4, _08005d80
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x2
	bl		sub_080281fc
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5D4E, 0x2

_08005d50:	.4byte 0x000011FE
_08005d54:	.4byte 0x0000FFF3
_08005d58:	.4byte 0x00001204
_08005d5c:	.4byte 0x0000FFFC
_08005d60:	.4byte 0x08098b0c
_08005d64:	.4byte 0x02008400
_08005d68:	.4byte 0x06008000
_08005d6c:	.4byte 0x80000600
_08005d70:	.4byte 0xFFFFC000
_08005d74:	.4byte 0x01000010
_08005d78:	.4byte 0x06004000
_08005d7c:	.4byte 0x80000020
_08005d80:	.4byte 0x080994bc
	thumb_func_end sub_08005c88

	thumb_func_start sub_08005d84
sub_08005d84:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0xc
	add		r6, r0, #0x0
	mov		r8, r1
	mov		r5, #0x0
	cmp		r5, r6
	bge		_08005dd0
_08005d96:
	add		r5, #0x1
	sub		r0, r6, r5
	lsl		r4, r0, #0x1
	add		r4, r4, r0
	lsl		r4, r4, #0x3
	add		r4, r8
	add		r0, r4, #0x0
	bl		sub_08003bac
	ldrh	r1, [r4, #0x6]
	lsl		r1, r1, #0x10
	ldrh	r0, [r4, #0x4]
	orr		r0, r1
	str		r0, [sp, #0x8]
	ldr		r0, [r4, #0x0]
	mov		r1, #0x8
	ldrsh	r2, [r4, r1]
	mov		r7, #0xa
	ldrsh	r3, [r4, r7]
	mov		r7, #0xc
	ldrsh	r1, [r4, r7]
	str		r1, [sp, #0x0]
	mov		r1, #0x0
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	bl		sub_0802951c
	cmp		r5, r6
	blt		_08005d96
_08005dd0:
	add		sp, #0xc
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08005d84

	thumb_func_start sub_08005ddc
sub_08005ddc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	add		r4, r2, #0x0
	add		r0, r3, #0x0
	ldr		r1, [sp, #0x0+0x28]
	lsl		r0, r0, #0xf
	bl		sub_0807d80c
	ldr		r2, _08005ec8
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08005e04
	add		r0, #0x3f
_08005e04:
	asr		r1, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r1
	ldr		r1, _08005ecc
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	sub		r0, r0, r1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	mov		r9, r0
	mov		r0, #0x1f
	mov		r10, r0
	mov		r6, #0x1f
	mov		r8, r4
	mov		r12, r5
	str		r7, [sp, #0x4]
	mov		r7, #0xf
	str		r7, [sp, #0x0]
_08005e34:
	ldr		r0, [sp, #0x4]
	ldrh	r1, [r0, #0x0]
	add		r2, r1, #0x0
	and		r2, r6
	lsr		r4, r1, #0x5
	mov		r7, r10
	and		r4, r7
	lsr		r1, r1, #0xa
	mov		r0, r10
	and		r1, r0
	mov		r7, r12
	ldrh	r3, [r7, #0x0]
	add		r0, r3, #0x0
	and		r0, r6
	lsr		r5, r3, #0x5
	mov		r7, r10
	and		r5, r7
	lsr		r3, r3, #0xa
	and		r3, r7
	sub		r0, r0, r2
	mov		r7, r9
	mul		r7, r0
	add		r0, r7, #0x0
	asr		r0, r0, #0xf
	add		r2, r2, r0
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	sub		r5, r5, r4
	mov		r0, r9
	mul		r0, r5
	asr		r0, r0, #0xf
	add		r4, r4, r0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	sub		r3, r3, r1
	mov		r0, r9
	mul		r0, r3
	asr		r0, r0, #0xf
	add		r1, r1, r0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	and		r2, r6
	and		r4, r6
	lsl		r4, r4, #0x5
	orr		r2, r4
	and		r1, r6
	lsl		r1, r1, #0xa
	orr		r2, r1
	mov		r0, r8
	strh	r2, [r0, #0x0]
	mov		r7, #0x2
	add		r8, r7
	mov		r0, #0x2
	add		r12, r0
	ldr		r7, [sp, #0x4]
	add		r7, #0x2
	str		r7, [sp, #0x4]
	ldr		r0, [sp, #0x0]
	sub		r0, #0x1
	str		r0, [sp, #0x0]
	cmp		r0, #0x0
	bge		_08005e34
	mov		r0, #0x1
	bl		sub_08028168
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5EC6, 0x2

_08005ec8:	.4byte 0x08101068
_08005ecc:	.4byte 0x000003FF
	thumb_func_end sub_08005ddc

	thumb_func_start sub_08005ed0
sub_08005ed0:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r7, r1, #0x0
	add		r6, r2, #0x0
	cmp		r3, #0x0
	beq		_08005ee8
	ldr		r0, _08005ef8
	mov		r1, #0x1
	neg		r1, r1
	str		r1, [r0, #0x0]
	ldr		r0, _08005efc
	str		r1, [r0, #0x0]
_08005ee8:
	cmp		r7, #0x8
	beq		_08005f84
	cmp		r6, #0x3f
	ble		_08005f00
	mov		r0, #0x7f
	sub		r4, r0, r6
	b		_08005f02

.incbin "base.gba", 0x5EF6, 0x2

_08005ef8:	.4byte 0x03000038
_08005efc:	.4byte 0x0300003C

_08005f00:
	add		r4, r6, #0x0
_08005f02:
	add		r0, r7, #0x0
	bl		sub_0800ebec
	add		r5, r0, #0x0
	ldr		r0, _08005f68
	add		r0, r4, r0
	ldrb	r1, [r0, #0x0]
	lsl		r0, r5, #0x1
	add		r0, r0, r5
	lsl		r0, r0, #0x2
	sub		r0, r0, r5
	lsl		r0, r0, #0xd
	lsl		r1, r1, #0xb
	ldr		r2, _08005f6c
	add		r1, r1, r2
	add		r4, r0, r1
	ldr		r1, _08005f70
	ldr		r0, [r1, #0x0]
	cmp		r0, r6
	beq		_08005f3a
	str		r6, [r1, #0x0]
	bl		sub_08029f34
	ldr		r2, _08005f74
	ldr		r3, _08005f78
	add		r1, r4, #0x0
	bl		sub_08029ee4
_08005f3a:
	ldr		r1, _08005f7c
	ldr		r0, [r1, #0x0]
	cmp		r0, r7
	beq		_08006004
	str		r7, [r1, #0x0]
	lsl		r4, r5, #0x9
	ldr		r0, _08005f80
	add		r4, r4, r0
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	ldr		r2, [sp, #0x0+0x18]
	lsl		r0, r2, #0x5
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	b		_08006004

_08005f68:	.4byte 0x080f4964
_08005f6c:	.4byte 0x08345800
_08005f70:	.4byte 0x0300003C
_08005f74:	.4byte 0x02015400
_08005f78:	.4byte 0x80000400
_08005f7c:	.4byte 0x03000038
_08005f80:	.4byte 0x08344600

_08005f84:
	cmp		r6, #0x3f
	ble		_08005f8e
	mov		r0, #0x7f
	sub		r1, r0, r6
	b		_08005f90
_08005f8e:
	add		r1, r6, #0x0
_08005f90:
	ldr		r0, _08006034
	add		r0, r1, r0
	ldrb	r1, [r0, #0x0]
	ldr		r3, _08006038
	ldr		r2, [r3, #0x0]
	lsl		r0, r2, #0x1
	add		r0, r0, r2
	lsl		r0, r0, #0x2
	sub		r0, r0, r2
	lsl		r0, r0, #0xd
	lsl		r1, r1, #0xb
	ldr		r4, _0800603c
	add		r1, r1, r4
	add		r4, r0, r1
	ldr		r1, _08006040
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x1e
	ble		_08005fc4
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r2, #0x1
	mov		r1, #0x7
	and		r0, r1
	str		r0, [r3, #0x0]
_08005fc4:
	ldr		r1, _08006044
	ldr		r0, [r1, #0x0]
	cmp		r0, r6
	beq		_08005fdc
	str		r6, [r1, #0x0]
	bl		sub_08029f34
	ldr		r2, _08006048
	ldr		r3, _0800604c
	add		r1, r4, #0x0
	bl		sub_08029ee4
_08005fdc:
	ldr		r1, _08006050
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	ldr		r2, [sp, #0x0+0x18]
	lsl		r0, r2, #0x5
	add		r1, r1, r0
	ldr		r2, _08006054
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
_08006004:
	ldr		r4, _08006058
	ldr		r0, [sp, #0x0+0x18]
	lsl		r5, r0, #0xc
	ldr		r3, _0800605c
	add		r2, r4, #0x0
	mov		r1, #0x3
_08006010:
	ldrh	r0, [r3, #0x0]
	strh	r0, [r2, #0x0]
	add		r3, #0x2
	add		r2, #0x2
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08006010
	mov		r0, #0x40
	and		r0, r6
	cmp		r0, #0x0
	beq		_08006060
	ldrh	r1, [r4, #0x4]
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r0, r2, #0x0
	orr		r0, r1
	b		_08006066

.incbin "base.gba", 0x6032, 0x2

_08006034:	.4byte 0x080f4964
_08006038:	.4byte 0x0203EEAC
_0800603c:	.4byte 0x08345800
_08006040:	.4byte 0x0203EEB0
_08006044:	.4byte 0x0300003C
_08006048:	.4byte 0x02015400
_0800604c:	.4byte 0x80000400
_08006050:	.4byte 0x03000038
_08006054:	.4byte 0x01000008
_08006058:	.4byte 0x03000030
_0800605c:	.4byte 0x080e3cb0

_08006060:
	ldrh	r1, [r4, #0x4]
	ldr		r0, _0800607c
	and		r0, r1
_08006066:
	strh	r0, [r4, #0x4]
	ldrh	r1, [r4, #0x6]
	ldr		r0, _08006080
	and		r0, r1
	orr		r0, r5
	strh	r0, [r4, #0x6]
	add		r0, r4, #0x0
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0800607c:	.4byte 0x0000EFFF
_08006080:	.4byte 0x00000FFF
	thumb_func_end sub_08005ed0

	thumb_func_start sub_08006084
sub_08006084:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0xc
	mov		r8, r0
	ldr		r7, _080060ac
	add		r7, r8
	mov		r0, #0xdf
	lsl		r0, r0, #0x3
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0xc
	bls		_080060a0
	b		_080063f6
_080060a0:
	lsl		r0, r0, #0x2
	ldr		r1, _080060b0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x60AA, 0x2

_080060ac:	.4byte 0x000004EC
_080060b0:	.4byte 0x080060b4
_080060b4:	.4byte 0x080063f6

.incbin "base.gba", 0x60B8, 0x30
	thumb_func_end sub_08006084


.incbin "base.gba", 0x60E8, 0x30E

_080063f6:

.incbin "base.gba", 0x63F6, 0x3E
_08006434:

.incbin "base.gba", 0x6434, 0x8
_0800643c:

.incbin "base.gba", 0x643C, 0x10
_0800644c:

.incbin "base.gba", 0x644C, 0x8
_08006454:

.incbin "base.gba", 0x6454, 0x44
_08006498:	.4byte 0x080f476c
_0800649c:	.4byte 0x080f49c0

_080064a0:

.incbin "base.gba", 0x64A0, 0x36
_080064d6:

.incbin "base.gba", 0x64D6, 0xA
_080064e0:

.incbin "base.gba", 0x64E0, 0xC
_080064ec:	.4byte 0x080f49c0
	thumb_func_start sub_080064f0
sub_080064f0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x10
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r7, r2, #0x0
	mov		r8, r3
	ldr		r0, [r4, #0xc]
	cmp		r0, r5
	bne		_0800652e
	lsl		r0, r7, #0x10
	lsl		r1, r3, #0x10
	lsr		r0, r0, #0x10
	orr		r0, r1
	str		r0, [sp, #0x8]
	ldr		r1, _0800658c
	lsl		r0, r5, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	ldr		r0, [r4, #0xc]
	cmp		r0, r5
	beq		_08006580
_0800652e:
	lsl		r6, r5, #0x2
	ldr		r1, _08006590
	add		r0, r4, r1
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	ble		_08006580
	ldr		r4, _08006594
	lsl		r2, r5, #0x1
	add		r0, r2, r4
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r0, r0, r7
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r3, _08006598
	ldr		r1, [sp, #0xC]
	and		r1, r3
	orr		r1, r0
	str		r1, [sp, #0xC]
	add		r2, #0x1
	add		r2, r2, r4
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	add		r0, r8
	lsl		r0, r0, #0x10
	ldr		r2, _0800659c
	and		r1, r2
	orr		r1, r0
	str		r1, [sp, #0xC]
	ldr		r0, _080065a0
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	add		r1, sp, #0xc
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
_08006580:
	add		sp, #0x10
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800658c:	.4byte 0x080f49c8
_08006590:	.4byte 0x000004FC
_08006594:	.4byte 0x080f49e8
_08006598:	.4byte 0xffff0000
_0800659c:	.4byte 0x0000FFFF
_080065a0:	.4byte 0x080f49d8
	thumb_func_end sub_080064f0

	thumb_func_start sub_080065a4
sub_080065a4:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x10
	add		r7, r0, #0x0
	ldr		r0, _080065c8
	add		r5, r7, r0
	mov		r1, #0xe1
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x7
	bls		_080065bc
	b		_080066e2
_080065bc:
	lsl		r0, r0, #0x2
	ldr		r1, _080065cc
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x65C6, 0x2

_080065c8:	.4byte 0x000004EC
_080065cc:	.4byte 0x080065d0
_080065d0:	.4byte 0x080066e2

.incbin "base.gba", 0x65D4, 0x1C
	thumb_func_end sub_080065a4


.incbin "base.gba", 0x65F0, 0xF2

_080066e2:

.incbin "base.gba", 0x66E2, 0x5E
_08006740:

.incbin "base.gba", 0x6740, 0x8
_08006748:	.4byte 0x00300048
_0800674c:	.4byte 0x080e3bf8
_08006750:	.4byte 0x0073003C
_08006754:	.4byte 0x080f476c
_08006758:	.4byte 0x080f4a14
	thumb_func_start sub_0800675c
sub_0800675c:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0xc
	add		r4, r0, #0x0
	ldr		r0, _08006788
	add		r4, r4, r0
	mov		r0, #0x1
	bl		sub_08028130
	add		r6, r0, #0x0
	add		r6, #0x8
	ldrh	r1, [r4, #0x10]
	lsl		r0, r1, #0x10
	asr		r7, r0, #0x12
	mov		r0, #0x1f
	and		r7, r0
	mov		r0, #0x1f
	add		r5, r0, #0x0
	and		r5, r1
	cmp		r5, #0xf
	bgt		_0800678c
	lsl		r0, r5, #0x1
	b		_08006790

_08006788:	.4byte 0x0000056C

_0800678c:
	sub		r0, r0, r5
	lsl		r0, r0, #0x1
_08006790:
	add		r5, r0, #0x0
	mov		r1, sp
	add		r0, #0xf
	mov		r2, #0x1f
	and		r0, r2
	lsl		r0, r0, #0x5
	mov		r3, #0xf8
	lsl		r3, r3, #0x7
	add		r4, r3, #0x0
	orr		r0, r4
	strh	r0, [r1, #0x0]
	mov		r3, sp
	mov		r1, #0x37
	sub		r1, r1, r5
	and		r1, r2
	lsl		r1, r1, #0x5
	add		r0, r1, #0x0
	orr		r0, r2
	strh		r0, [r3, #0x2]
	add		r0, r5, #0x0
	and		r0, r2
	lsl		r0, r0, #0xa
	orr		r1, r0
	strh		r1, [r3, #0x4]
	sub		r1, r2, r5
	and		r1, r2
	add		r0, r1, #0x0
	orr		r0, r4
	strh		r0, [r3, #0x6]
	mov		r2, sp
	mov		r3, #0xb8
	lsl		r3, r3, #0x2
	add		r0, r3, #0x0
	orr		r1, r0
	strh		r1, [r2, #0x8]
	mov		r0, sp
	ldrh	r0, [r0, #0x0]
	strh	r0, [r6, #0x2]
	cmp		r7, #0x7
	bgt		_080067ec
	mov		r0, sp
	ldrh		r0, [r0, #0x8]
	strh	r0, [r6, #0x0]
	mov		r0, sp
	ldrh		r0, [r0, #0x2]
	b		_08006816
_080067ec:
	cmp		r7, #0xf
	bgt		_080067fc
	mov		r0, sp
	ldrh		r0, [r0, #0x2]
	strh	r0, [r6, #0x0]
	mov		r0, sp
	ldrh		r0, [r0, #0x4]
	b		_08006816
_080067fc:
	cmp		r7, #0x17
	bgt		_0800680c
	mov		r0, sp
	ldrh		r0, [r0, #0x4]
	strh	r0, [r6, #0x0]
	mov		r0, sp
	ldrh		r0, [r0, #0x6]
	b		_08006816
_0800680c:
	mov		r0, sp
	ldrh		r0, [r0, #0x6]
	strh	r0, [r6, #0x0]
	mov		r0, sp
	ldrh		r0, [r0, #0x8]
_08006816:
	strh	r0, [r6, #0x4]
	mov		r0, #0x1
	bl		sub_08028168
	add		sp, #0xc
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6826, 0x2
	thumb_func_end sub_0800675c

	thumb_func_start sub_08006828
sub_08006828:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x8
	add		r5, r0, #0x0
	ldr		r0, _08006848
	add		r6, r5, r0
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x1
	beq		_0800684c
	cmp		r0, #0x1
	bgt		_0800683e
	b		_080069f8
_0800683e:
	cmp		r0, #0x2
	bne		_08006844
	b		_08006940
_08006844:
	b		_080069f8

.incbin "base.gba", 0x6846, 0x2

_08006848:	.4byte 0x0000071C

_0800684c:
	mov		r2, #0xe5
	lsl		r2, r2, #0x3
	add		r1, r5, r2
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r0, #0xdb
	lsl		r0, r0, #0x3
	add		r3, r5, r0
	ldr		r0, [r3, #0x0]
	sub		r0, #0x3
	ldr		r1, _0800692c
	mov		r12, r1
	lsl		r0, r0, #0x19
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0800686e
	add		r0, #0x3f
_0800686e:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r1, [r0, #0x0]
	ldr		r2, _08006930
	add		r0, r5, r2
	lsl		r1, r1, #0x2
	asr		r1, r1, #0xf
	ldrh	r0, [r0, #0x0]
	sub		r0, r0, r1
	add		r2, #0x3c
	add		r1, r5, r2
	strh	r0, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	sub		r0, #0x3
	lsl		r0, r0, #0x19
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08006898
	add		r0, #0x3f
_08006898:
	asr		r0, r0, #0x6
	mov		r7, #0x80
	lsl		r7, r7, #0x1
	sub		r0, r7, r0
	ldr		r4, _08006934
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	ldr		r2, _08006938
	add		r1, r5, r2
	lsl		r0, r0, #0x2
	asr		r0, r0, #0xf
	sub		r0, #0x10
	ldrh	r1, [r1, #0x0]
	sub		r1, r1, r0
	add		r2, #0x3c
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	sub		r0, #0x3
	lsl		r0, r0, #0x19
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_080068cc
	add		r0, #0x3f
_080068cc:
	asr		r0, r0, #0x6
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r1, [r0, #0x0]
	ldr		r0, _0800693c
	add		r2, r5, r0
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	asr		r0, r0, #0xf
	str		r0, [r2, #0x0]
	ldr		r0, [r3, #0x0]
	sub		r0, #0x3
	lsl		r0, r0, #0x19
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_080068f2
	add		r0, #0x3f
_080068f2:
	asr		r0, r0, #0x6
	sub		r0, r7, r0
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r1, [r0, #0x0]
	mov		r2, #0xe3
	lsl		r2, r2, #0x3
	add		r4, r5, r2
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	asr		r0, r0, #0xf
	str		r0, [r4, #0x0]
	mov		r1, #0x6
	bl		sub_0807d80c
	str		r0, [r4, #0x0]
	mov		r1, #0xe4
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	str		r7, [r0, #0x0]
	mov		r0, #0x2
	str		r0, [r6, #0x0]
	mov		r0, #0x7b
	bl		sub_0807073c
	b		_080069f8

.incbin "base.gba", 0x692A, 0x2

_0800692c:	.4byte 0x08101068
_08006930:	.4byte 0x000006D4
_08006934:	.4byte 0x000003FF
_08006938:	.4byte 0x000006D6
_0800693c:	.4byte 0x00000714

_08006940:
	mov		r2, #0xe5
	lsl		r2, r2, #0x3
	add		r1, r5, r2
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x10
	bgt		_080069f4
	mov		r0, #0xe2
	lsl		r0, r0, #0x3
	add		r6, r5, r0
	ldr		r1, _080069b8
	add		r3, r5, r1
	ldr		r1, [r3, #0x0]
	ldrh	r0, [r6, #0x0]
	sub		r0, r0, r1
	mov		r2, #0x0
	mov		r12, r2
	strh	r0, [r6, #0x0]
	ldr		r0, _080069bc
	add		r2, r5, r0
	mov		r1, #0xe3
	lsl		r1, r1, #0x3
	add		r7, r5, r1
	ldr		r1, [r7, #0x0]
	ldrh	r0, [r2, #0x0]
	sub		r0, r0, r1
	strh	r0, [r2, #0x0]
	mov		r2, #0xe4
	lsl		r2, r2, #0x3
	add		r4, r5, r2
	ldr		r2, [r4, #0x0]
	ldr		r0, [r3, #0x0]
	sub		r1, r2, #0x4
	cmp		r0, #0x0
	ble		_0800698a
	add		r1, r2, #0x4
_0800698a:
	str		r1, [r4, #0x0]
	ldr		r0, _080069c0
	add		r2, r5, r0
	ldr		r0, [r2, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	cmp		r0, #0x5
	bls		_0800699e
	mov		r1, r12
	str		r1, [r2, #0x0]
_0800699e:
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x0
	ble		_080069cc
	ldr		r1, _080069c4
	ldr		r0, [r2, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r3, [r4, #0x0]
	mov		r2, r12
	str		r2, [sp, #0x0]
	ldr		r1, _080069c8
	b		_080069de

_080069b8:	.4byte 0x00000714
_080069bc:	.4byte 0x00000712
_080069c0:	.4byte 0x00000724
_080069c4:	.4byte 0x080f4a64
_080069c8:	.4byte 0x080f4a5c

_080069cc:
	ldr		r1, _080069ec
	ldr		r0, [r2, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r3, [r4, #0x0]
	mov		r1, r12
	str		r1, [sp, #0x0]
	ldr		r1, _080069f0
_080069de:
	str		r1, [sp, #0x4]
	add		r1, r6, #0x0
	add		r2, r3, #0x0
	bl		sub_0802951c
	b		_080069f8

.incbin "base.gba", 0x69EA, 0x2

_080069ec:	.4byte 0x080f4a64
_080069f0:	.4byte 0x080f4a54

_080069f4:
	mov		r0, #0x0
	str		r0, [r6, #0x0]
_080069f8:
	add		sp, #0x8
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08006828

	thumb_func_start sub_08006a00
sub_08006a00:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	ldr		r1, _08006a34
	add		r1, r1, r0
	mov		r9, r1
	mov		r6, #0x0
_08006a10:
	lsl		r1, r6, #0x1
	add		r0, r1, r6
	lsl		r0, r0, #0x3
	add		r0, #0x20
	mov		r2, r9
	add		r5, r2, r0
	mov		r0, #0xe
	ldrsb	r0, [r5, r0]
	add		r3, r1, #0x0
	add		r7, r6, #0x1
	cmp		r0, #0xa
	bls		_08006a2a
	b		_08006c20
_08006a2a:
	lsl		r0, r0, #0x2
	ldr		r1, _08006a38
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08006a34:	.4byte 0x000004EC
_08006a38:	.4byte 0x08006a3c
_08006a3c:	.4byte 0x08006c20

.incbin "base.gba", 0x6A40, 0x28
	thumb_func_end sub_08006a00


.incbin "base.gba", 0x6A68, 0x1B8

_08006c20:

.incbin "base.gba", 0x6C20, 0x8
_08006c28:

.incbin "base.gba", 0x6C28, 0xC
	thumb_func_start sub_08006c34
sub_08006c34:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0xc
	add		r4, r0, #0x0
	ldr		r0, _08006d28
	add		r7, r4, r0
	ldr		r1, [r4, #0xc]
	lsl		r2, r1, #0x2
	ldr		r3, _08006d2c
	add		r0, r4, r3
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	sub		r0, #0x2
	cmp		r0, #0x5
	bhi		_08006ca0
	ldr		r5, _08006d30
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x3
	add		r0, r0, r5
	mov		r6, #0x0
	ldrsh	r2, [r0, r6]
	mov		r6, #0x2
	ldrsh	r3, [r0, r6]
	add		r0, r4, #0x0
	bl		sub_080064f0
	mov		r6, #0x0
	ldr		r0, [r4, #0x8]
	cmp		r6, r0
	bgt		_08006ca0
	mov		r8, r5
	add		r5, r7, #0x0
_08006c7a:
	ldr		r0, [r4, #0xc]
	cmp		r6, r0
	beq		_08006c96
	ldr		r0, [r5, #0x0]
	lsl		r0, r0, #0x3
	add		r0, r8
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r1, #0x2
	ldrsh	r3, [r0, r1]
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_080064f0
_08006c96:
	add		r5, #0x4
	add		r6, #0x1
	ldr		r0, [r4, #0x8]
	cmp		r6, r0
	ble		_08006c7a
_08006ca0:
	mov		r6, #0x0
	add		r3, sp, #0x8
	mov		r8, r3
	ldr		r0, _08006d34
	mov		r9, r0
_08006caa:
	mov		r1, #0x8
	sub		r1, r1, r6
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r0, #0x20
	add		r4, r7, r0
	ldr		r5, [r4, #0x0]
	cmp		r5, #0x0
	beq		_08006d12
	mov		r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	beq		_08006d12
	mov		r3, #0xa
	ldrsh	r0, [r4, r3]
	cmp		r0, #0x0
	beq		_08006d12
	ldrh	r0, [r4, #0x6]
	lsl		r0, r0, #0x10
	ldrh	r1, [r4, #0x4]
	orr		r1, r0
	str		r1, [sp, #0x8]
	mov		r0, r8
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	mov		r3, r9
	asr		r0, r3, #0x10
	cmp		r2, r0
	blt		_08006d12
	asr		r1, r1, #0x10
	cmp		r1, r0
	blt		_08006d12
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r2, r0
	bgt		_08006d12
	cmp		r1, #0xc0
	bgt		_08006d12
	mov		r0, #0x8
	ldrsh	r2, [r4, r0]
	mov		r1, #0xa
	ldrsh	r3, [r4, r1]
	mov		r1, #0xc
	ldrsh	r0, [r4, r1]
	str		r0, [sp, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x4]
	add		r0, r5, #0x0
	add		r1, sp, #0x8
	bl		sub_0802951c
_08006d12:
	add		r6, #0x1
	cmp		r6, #0x8
	ble		_08006caa
	add		sp, #0xc
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6D26, 0x2

_08006d28:	.4byte 0x000004EC
_08006d2c:	.4byte 0x000004FC
_08006d30:	.4byte 0x080f4894
_08006d34:	.4byte 0xFFE80000
	thumb_func_end sub_08006c34

	thumb_func_start sub_08006d38
sub_08006d38:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	ldr		r1, _08006dd0
	add		r1, r1, r0
	mov		r9, r1
	ldr		r1, _08006dd4
	mov		r2, #0x0
	mov		r10, r2
	mov		r7, #0x0
	ldr		r3, _08006dd8
	add		r6, r0, r3
	add		r2, r1, #0x0
	add		r2, #0xc
	sub		r3, #0xd8
	add		r5, r0, r3
	mov		r8, r1
	mov		r3, #0x8
_08006d62:
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	str		r0, [r5, #0x0]
	ldrh	r0, [r2, #0x0]
	strh	r0, [r5, #0x4]
	ldrh	r0, [r2, #0x2]
	strh	r0, [r5, #0x6]
	strh	r7, [r5, #0xa]
	strh	r7, [r5, #0x8]
	strh	r7, [r5, #0xc]
	mov		r0, #0x1
	strb	r0, [r5, #0xe]
	strh	r7, [r5, #0x10]
	mov		r4, #0x4
	ldrsb	r4, [r2, r4]
	strb	r4, [r6, #0x0]
	mov		r0, r10
	strb	r0, [r6, #0x1]
	strh	r7, [r6, #0x2]
	strh	r7, [r6, #0x6]
	mov		r0, #0x1
	str		r2, [sp, #0x0]
	str		r3, [sp, #0x4]
	bl		sub_08028130
	add		r1, r4, #0x7
	lsl		r1, r1, #0x5
	add		r0, r0, r1
	str		r0, [r6, #0xc]
	lsl		r4, r4, #0x9
	ldr		r0, _08006ddc
	add		r4, r4, r0
	str		r4, [r6, #0x10]
	add		r6, #0x14
	ldr		r2, [sp, #0x0]
	add		r2, #0x14
	add		r5, #0x18
	mov		r1, #0x14
	add		r8, r1
	ldr		r3, [sp, #0x4]
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08006d62
	mov		r1, r9
	add		r1, #0x8e
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08006dd0:	.4byte 0x000004EC
_08006dd4:	.4byte 0x080f476c
_08006dd8:	.4byte 0x000005E4
_08006ddc:	.4byte 0x02014400
	thumb_func_end sub_08006d38

	thumb_func_start sub_08006de0
sub_08006de0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	mov		r8, r1
	cmp		r1, #0x0
	beq		_08006e22
	mov		r5, #0xc0
	lsl		r5, r5, #0x13
	mov		r4, #0x7
_08006df4:
	bl		sub_08029f34
	ldr		r1, _0800704c
	add		r2, r5, #0x0
	ldr		r3, _08007050
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	mov		r0, #0xc0
	lsl		r0, r0, #0x5
	add		r5, r5, r0
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08006df4
	mov		r1, r8
	cmp		r1, #0x0
	beq		_08006e22
	add		r0, r7, #0x0
	bl		sub_08002e98
	bl		_DrawFrameRunAudio
_08006e22:
	ldr		r4, _08007054
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xa0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	ldr		r4, _08007058
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe0
	add		r0, r4, #0x0
	mov		r2, #0x10
	bl		_CallHardwareSetCpuFast
	ldr		r4, _0800705c
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x10
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	add		r0, r7, #0x0
	bl		sub_08003170
	bl		_DrawFrameRunAudio
	mov		r2, r8
	cmp		r2, #0x0
	beq		_08006f04
	ldr		r0, _08007060
	ldr		r4, _08007064
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08007068
	ldr		r3, _0800706c
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08007070
	mov		r2, #0x80
	lsl		r2, r2, #0x7
	add		r1, r4, r2
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	ldr		r0, _08007074
	mov		r1, #0xc0
	lsl		r1, r1, #0x7
	add		r4, r4, r1
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	mov		r5, #0x0
	ldr		r6, _08007078
_08006eb4:
	lsl		r4, r5, #0xd
	ldr		r0, _0800707c
	add		r4, r4, r0
	bl		sub_08029f34
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	ldr		r3, _08007080
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	mov		r2, #0x80
	lsl		r2, r2, #0x6
	add		r6, r6, r2
	add		r5, #0x1
	cmp		r5, #0x1
	ble		_08006eb4
	ldr		r0, _08007084
	ldr		r4, _08007088
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	ldr		r0, _0800708c
	mov		r2, #0xc0
	lsl		r2, r2, #0x4
	add		r1, r4, r2
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08007090
	ldr		r3, _08007094
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
_08006f04:
	ldr		r0, _08007098
	ldr		r4, _0800709c
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _080070a0
	ldr		r3, _080070a4
	add		r1, r4, #0x0
	bl		sub_08029ee4
	ldr		r0, _080070a8
	mov		r1, #0xa0
	lsl		r1, r1, #0x5
	add		r5, r4, r1
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _080070ac
	ldr		r3, _080070b0
	add		r1, r5, #0x0
	bl		sub_08029ee4
	ldr		r0, _080070b4
	mov		r2, #0xc0
	lsl		r2, r2, #0x5
	add		r4, r4, r2
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _080070b8
	ldr		r3, _080070bc
	add		r1, r4, #0x0
	bl		sub_08029ee4
	add		r0, r7, #0x0
	bl		sub_08003170
	bl		_DrawFrameRunAudio
	mov		r0, r8
	cmp		r0, #0x0
	beq		_08006fce
	ldr		r4, _080070c0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	add		r4, r0, #0x0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r2, _080070c4
	ldr		r3, _080070c8
	add		r0, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r4, _080070cc
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	ldr		r4, _080070d0
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x3
	bl		sub_080281fc
	bl		_DrawFrameRunAudio
_08006fce:
	ldr		r2, _080070d4
	add		r1, r7, r2
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x0
	mov		r0, #0xb
	strh	r0, [r1, #0x0]
	ldr		r0, _080070d8
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	ldr		r0, _080070dc
	strh	r0, [r1, #0x0]
	ldr		r0, _080070e0
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	ldr		r0, _080070e4
	strh	r0, [r1, #0x0]
	ldr		r0, _080070e8
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	ldr		r0, _080070ec
	strh	r0, [r1, #0x0]
	ldr		r1, _080070f0
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	mov		r0, r8
	cmp		r0, #0x0
	beq		_08007030
	ldr		r0, _080070f4
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	mov		r0, #0xff
	strh	r0, [r1, #0x0]
	ldr		r0, _080070f8
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	mov		r0, #0x10
	strh	r0, [r1, #0x0]
	ldr		r0, _080070fc
	add		r1, r7, r0
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r0, _08007100
	add		r1, r7, r0
	mov		r0, #0x50
	str		r0, [r1, #0x0]
	ldr		r1, _08007104
	add		r0, r7, r1
	str		r2, [r0, #0x0]
_08007030:
	ldr		r1, _08007108
	add		r0, r7, r1
	ldrh	r1, [r0, #0x0]
	strh	r2, [r0, #0x0]
	ldrh	r1, [r0, #0x0]
	ldr		r2, _0800710c
	add		r0, r7, r2
	ldrh	r2, [r0, #0x0]
	strh	r1, [r0, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800704c:	.4byte 0x0203EEB4
_08007050:	.4byte 0x81000C00
_08007054:	.4byte 0x080c9d0c
_08007058:	.4byte 0x0809866c
_0800705c:	.4byte 0x080caf90
_08007060:	.4byte 0x08098b0c
_08007064:	.4byte 0x02008400
_08007068:	.4byte 0x06008000
_0800706c:	.4byte 0x80000600
_08007070:	.4byte 0x080c9e50
_08007074:	.4byte 0x080ca498
_08007078:	.4byte 0x0600C000
_0800707c:	.4byte 0x0200C400
_08007080:	.4byte 0x80001000
_08007084:	.4byte 0x080caff0
_08007088:	.4byte 0x02010400
_0800708c:	.4byte 0x080d6e20
_08007090:	.4byte 0x06010000
_08007094:	.4byte 0x80001200
_08007098:	.4byte 0x080cbb30
_0800709c:	.4byte 0x02015C00
_080070a0:	.4byte 0x06015800
_080070a4:	.4byte 0x80000500
_080070a8:	.4byte 0x080cc0fc
_080070ac:	.4byte 0x06016C00
_080070b0:	.4byte 0x80000100
_080070b4:	.4byte 0x080cc28c
_080070b8:	.4byte 0x06017000
_080070bc:	.4byte 0x80000110
_080070c0:	.4byte 0x080caad4
_080070c4:	.4byte 0x06002000
_080070c8:	.4byte 0x80000400
_080070cc:	.4byte 0x080993b8
_080070d0:	.4byte 0x080994bc
_080070d4:	.4byte 0x000011FE
_080070d8:	.4byte 0x00001204
_080070dc:	.4byte 0x0000020B
_080070e0:	.4byte 0x0000120A
_080070e4:	.4byte 0x0000448E
_080070e8:	.4byte 0x000011FC
_080070ec:	.4byte 0x00001741
_080070f0:	.4byte 0x000011F8
_080070f4:	.4byte 0x00001216
_080070f8:	.4byte 0x0000121A
_080070fc:	.4byte 0x000011E8
_08007100:	.4byte 0x000011EC
_08007104:	.4byte 0x000011F0
_08007108:	.4byte 0x00001208
_0800710c:	.4byte 0x00001206
	thumb_func_end sub_08006de0

	thumb_func_start sub_08007110
sub_08007110:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x94
	add		r7, r0, #0x0
	str		r1, [sp, #0x6C]
	str		r2, [sp, #0x70]
	ldr		r0, _0800732c
	add		r0, r0, r7
	mov		r8, r0
	mov		r1, #0x0
	str		r1, [sp, #0x74]
	mov		r2, #0x0
	mov		r3, #0x0
	str		r3, [sp, #0x78]
	mov		r4, #0xda
	lsl		r4, r4, #0x3
	add		r0, r7, r4
	str		r2, [r0, #0x0]
	ldr		r6, _08007330
	add		r1, r7, r6
	mov		r0, #0x48
	strh	r0, [r1, #0x0]
	ldr		r0, _08007334
	add		r1, r7, r0
	mov		r0, #0x53
	strh	r0, [r1, #0x0]
	mov		r1, #0xdb
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	ldr		r3, _08007338
	add		r1, r7, r3
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
	add		r4, #0x10
	add		r0, r7, r4
	str		r2, [r0, #0x0]
	add		r6, #0x10
	add		r0, r7, r6
	str		r2, [r0, #0x0]
	mov		r1, #0xdd
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	add		r3, #0x10
	add		r0, r7, r3
	str		r2, [r0, #0x0]
	add		r4, #0x10
	add		r0, r7, r4
	str		r2, [r0, #0x0]
	add		r6, #0x10
	add		r0, r7, r6
	str		r2, [r0, #0x0]
	add		r1, #0x10
	add		r0, r7, r1
	mov		r1, #0x2
	str		r1, [r0, #0x0]
	add		r3, #0x10
	add		r0, r7, r3
	str		r2, [r0, #0x0]
	add		r4, #0x10
	add		r0, r7, r4
	str		r2, [r0, #0x0]
	add		r6, #0x10
	add		r0, r7, r6
	str		r2, [r0, #0x0]
	add		r3, #0xc
	add		r0, r7, r3
	str		r1, [r0, #0x0]
	add		r4, #0xc
	add		r0, r7, r4
	str		r2, [r0, #0x0]
	add		r6, #0xc
	add		r0, r7, r6
	strh	r2, [r0, #0x0]
	ldr		r1, _0800733c
	add		r0, r7, r1
	strh	r2, [r0, #0x0]
	add		r3, #0xc
	add		r0, r7, r3
	str		r2, [r0, #0x0]
	add		r4, #0xc
	add		r0, r7, r4
	str		r2, [r0, #0x0]
	add		r6, #0xc
	add		r0, r7, r6
	str		r2, [r0, #0x0]
	mov		r0, #0xe4
	lsl		r0, r0, #0x3
	add		r1, r7, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r1, _08007340
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	add		r3, #0x14
	add		r0, r7, r3
	str		r2, [r0, #0x0]
	add		r4, #0x14
	add		r0, r7, r4
	str		r2, [r0, #0x0]
	add		r6, #0x14
	add		r1, r7, r6
	mov		r0, #0x3
	str		r0, [r1, #0x0]
	ldr		r1, _08007344
	add		r0, r7, r1
	str		r2, [r0, #0x0]
	mov		r1, #0xc0
	lsl		r1, r1, #0x13
	mov		r0, #0x0
	bl		sub_080281c4
	ldr		r1, _08007348
	mov		r0, #0x1
	bl		sub_080281c4
	add		r0, r7, #0x0
	ldr		r1, [sp, #0x6C]
	bl		sub_08006de0
	add		r0, r7, #0x0
	bl		sub_08003170
	mov		r0, #0xf
	str		r0, [sp, #0x0]
	add		r0, r7, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	mov		r3, #0x1
	bl		sub_08005ed0
	mov		r1, #0x0
	ldr		r2, _0800734c
	add		r2, r7, r2
	str		r2, [sp, #0x80]
	mov		r5, #0x3
	mov		r3, #0xa1
	lsl		r3, r3, #0x3
	add		r0, r7, r3
_08007232:
	str		r1, [r0, #0x0]
	sub		r0, #0x4
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08007232
	mov		r5, #0x0
	mov		r4, r8
_08007240:
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_08002cd4
	stmia	r4!, { r0 }
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_08007240
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r7, #0x18]
	ldr		r2, _08007350
	ldr		r0, [r7, #0xc]
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldrb	r0, [r0, #0x10]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	ldr		r1, _08007354
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, _08007358
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r4, _0800735c
	add		r2, r7, r4
	ldr		r3, _08007360
	mov		r0, #0x88
	mov		r1, #0x20
	bl		sub_08003fc4
	mov		r0, #0x0
	bl		sub_0803d224
	thumb_func_end sub_08007110

	thumb_func_start sub_08007290
sub_08007290:
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	ldr		r6, _08007364
	add		r1, r7, r6
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r0, [r7, #0x4c]
	add		r0, #0x1
	str		r0, [r7, #0x4c]
	bl		sub_0803d234
	mov		r1, #0x92
	lsl		r1, r1, #0x2
	add		r1, r8
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r0, [r7, #0x8]
	cmp		r0, #0x0
	blt		_080072d8
	ldr		r3, _08007368
	add		r2, sp, #0x8
	ldr		r1, _0800736c
	add		r5, r0, #0x1
_080072c4:
	ldrh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	ldrh	r0, [r3, #0x0]
	strh	r0, [r2, #0x10-0x8]
	add		r3, #0x2
	add		r2, #0x2
	add		r1, #0x2
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_080072c4
_080072d8:
	mov		r5, #0x0
	ldr		r0, _08007370
	add		r4, r7, r0
	ldr		r2, [sp, #0x80]
_080072e0:
	ldr		r1, [r2, #0x0]
	cmp		r1, #0x0
	blt		_080073a4
	cmp		r1, #0x1
	ble		_080072f2
	cmp		r1, #0xc
	bgt		_080073a4
	cmp		r1, #0x8
	blt		_080073a4
_080072f2:
	mov		r3, #0x1
	ldr		r6, [sp, #0x6c]
	cmp		r6, #0x0
	beq		_08007306
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08007306
	cmp		r1, #0x7
	bgt		_08007306
	mov		r3, #0x2
_08007306:
	ldr		r0, [r2, #0x0]
	cmp		r0, #0xa
	beq		_08007310
	cmp		r0, #0xc
	bne		_08007312
_08007310:
	mov		r3, #0x2
_08007312:
	add		r0, sp, #0x10
	lsl		r1, r5, #0x1
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	and		r3, r0
	cmp		r3, #0x0
	beq		_080073a4
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x7
	bgt		_08007374
	mov		r0, #0x2
	str		r0, [sp, #0x78]
	b		_08007388

_0800732c:	.4byte 0x000004EC
_08007330:	.4byte 0x000006D4
_08007334:	.4byte 0x000006D6
_08007338:	.4byte 0x000006DC
_0800733c:	.4byte 0x00000712
_08007340:	.4byte 0x00000724
_08007344:	.4byte 0x00000734
_08007348:	.4byte 0x06001000
_0800734c:	.4byte 0x000004FC
_08007350:	.4byte 0x080f476c
_08007354:	.4byte 0x080f49f0
_08007358:	.4byte 0x02014000
_0800735c:	.4byte 0x00000D88
_08007360:	.4byte 0x080f486c
_08007364:	.4byte 0x000011F4
_08007368:	.4byte 0x03005220
_0800736c:	.4byte 0x030052C8
_08007370:	.4byte 0x00000D84

_08007374:
	cmp		r0, #0x9
	ble		_0800737c
	cmp		r0, #0xb
	bne		_08007382
_0800737c:
	mov		r1, #0x64
	str		r1, [sp, #0x78]
	b		_08007388
_08007382:
	mov		r2, #0x1
	neg		r2, r2
	str		r2, [sp, #0x78]
_08007388:
	mov		r2, #0x0
	ldr		r3, [r7, #0x8]
	cmp		r3, #0x0
	blt		_0800739e
	mov		r3, #0xd
	ldr		r1, [sp, #0x80]
_08007394:
	stmia	r1!, {  r3 }
	add		r2, #0x1
	ldr		r0, [r7, #0x8]
	cmp		r2, r0
	ble		_08007394
_0800739e:
	mov		r3, #0x0
	str		r3, [sp, #0x74]
	b		_080073ac
_080073a4:
	add		r2, #0x4
	add		r5, #0x1
	cmp		r5, #0x0
	ble		_080072e0
_080073ac:
	ldr		r0, [r7, #0x50]
	cmp		r0, #0x0
	beq		_080073d0
	mov		r0, #0x0
	str		r0, [r7, #0x50]
	mov		r4, #0x2
	str		r4, [sp, #0x78]
	mov		r2, #0x0
	ldr		r3, [r7, #0x8]
	cmp		r2, r3
	bgt		_080073d0
	mov		r3, #0xe
	ldr		r1, [sp, #0x80]
_080073c6:
	stmia	r1!, {  r3 }
	add		r2, #0x1
	ldr		r0, [r7, #0x8]
	cmp		r2, r0
	ble		_080073c6
_080073d0:
	ldr		r1, [r7, #0xc]
	lsl		r0, r1, #0x2
	ldr		r6, [sp, #0x80]
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	add		r2, r1, #0x0
	cmp		r0, #0xf
	bls		_080073e4
	bl		sub_08008486
_080073e4:
	lsl		r0, r0, #0x2
	ldr		r1, _080073f0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x73EE, 0x2

_080073f0:	.4byte 0x080073f4
_080073f4:	.4byte 0x08007434

.incbin "base.gba", 0x73F8, 0x3C
	thumb_func_end sub_08007290

.incbin "base.gba", 0x7434, 0xF94

_080083c8:
.incbin "base.gba", 0x83C8, 0xBE

	non_word_aligned_thumb_func_start sub_08008486
sub_08008486:
	ldr		r6, _08008574
	add		r1, r7, r6
	mov		r0, #0x9
	bl		sub_08005d84
	add		r0, r7, #0x0
	bl		sub_080036d8
	add		r0, r7, #0x0
	bl		sub_08006a00
	add		r0, r7, #0x0
	bl		sub_08006c34
	mov		r0, #0x85
	lsl		r0, r0, #0x5
	add		r4, r7, r0
	mov		r6, #0x1
	str		r6, [r4, #0x0]
	add		r0, r7, #0x0
	bl		sub_08003170
	cmp		r0, #0x0
	beq		_080084c4
	bl		sub_08029f34
	ldr		r1, _08008578
	ldr		r2, _0800857c
	ldr		r3, _08008580
	bl		sub_08029ee4
_080084c4:
	mov		r5, #0x0
	str		r5, [r4, #0x0]
	add		r0, r7, #0x0
	bl		sub_0800393c
	ldr		r0, [r7, #0xc]
	lsl		r0, r0, #0x2
	ldr		r1, [sp, #0x80]
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	sub		r0, #0x2
	cmp		r0, #0x2
	bhi		_080084f8
	mov		r0, #0x1
	bl		sub_08028130
	add		r2, r0, #0x0
	add		r2, #0x60
	ldr		r0, _08008584
	add		r1, r0, #0x0
	add		r1, #0x20
	ldr		r3, [r7, #0x4c]
	mov		r4, #0x20
	str		r4, [sp, #0x0]
	bl		sub_08005ddc
_080084f8:
	add		r0, r7, #0x0
	bl		sub_080065a4
	add		r0, r7, #0x0
	bl		sub_08006084
	add		r0, r7, #0x0
	bl		sub_08006828
	add		r0, r7, #0x0
	bl		sub_0800675c
	add		r0, r7, #0x0
	bl		sub_08003924
	cmp		r0, #0x0
	beq		_08008598
	ldr		r0, _08008588
	ldr		r4, _0800858c
	str		r0, [r4, #0x4]
	ldr		r0, _08008590
	str		r0, [r4, #0x0]
	str		r5, [r4, #0x8]
	strb	r6, [r4, #0xe]
	bl		sub_0802a130
	mov		r0, #0x0
	bl		sub_08028130
	strh	r5, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	bl		_DrawFrameRunAudio
	ldrb	r1, [r4, #0xc]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08008558
	mov		r5, #0x2
_0800854a:
	bl		_DrawFrameRunAudio
	ldrb	r1, [r4, #0xc]
	add		r0, r5, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_0800854a
_08008558:
	ldr		r2, _08008594
	add		r1, r7, r2
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	b		_080083c8

.incbin "base.gba", 0x8562, 0x12

.align 2, 0
_08008574:	.4byte 0x00000D88
_08008578:	.4byte 0x02013000
_0800857c:	.4byte 0x06012C00
_08008580:	.4byte 0x80000800
_08008584:	.4byte 0x080cbad0
_08008588:	.4byte 0x0802a1fd
_0800858c:	.4byte 0x030052F0
_08008590:	.4byte sub_0802a238
_08008594:	.4byte 0x0000109C

_08008598:
	mov		r0, #0x92
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080085a8
	bl		sub_08007290
_080085a8:
	bl		sub_08029f34
	ldr		r1, _080085bc
	ldr		r2, _080085c0
	ldr		r3, _080085c4
	bl		sub_08029ee4
	bl		sub_08007290
	
	.2byte	0x0
	
_080085bc:
	and		r0, r0
	lsl		r1, r0, #0x8
_080085c0:
	sub		r4, #0x0
	lsl		r1, r0, #0x18
_080085c4:
	lsr		r0, r0, #0x18
	strh	r0, [r0, #0x0]
_080085c8:
	add		sp, #0x94
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08008486

	thumb_func_start sub_080085d8
sub_080085d8:
	ldr		r1, _080085e0
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	bx		lr

_080085e0:	.4byte 0x080f4964
	thumb_func_end sub_080085d8

	thumb_func_start sub_080085e4
sub_080085e4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	ldr		r0, [r7, #0x10]
	cmp		r0, #0x3
	bne		_080085f8
	b		_080086fa
_080085f8:
	mov		r1, #0x2
	cmp		r0, #0x1
	beq		_08008600
	ldr		r1, [r7, #0x14]
_08008600:
	ldr		r2, _08008618
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08008620
	lsl		r0, r1, #0x2
	lsl		r1, r6, #0x1
	add		r1, r1, r6
	lsl		r1, r1, #0x2
	add		r1, r0, r1
	ldr		r3, _0800861c
	b		_0800862e

_08008618:	.4byte 0x000011E4
_0800861c:	.4byte 0x000010A4

_08008620:
	lsl		r0, r1, #0x2
	lsl		r1, r6, #0x1
	add		r1, r1, r6
	lsl		r1, r1, #0x2
	add		r1, r0, r1
	mov		r3, #0x87
	lsl		r3, r3, #0x5
_0800862e:
	add		r2, r7, r3
	add		r2, r2, r1
	ldr		r2, [r2, #0x0]
	mov		r8, r2
	mov		r9, r0
	ldr		r1, _08008664
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0800866c
	lsl		r5, r6, #0x5
	ldr		r4, _08008668
	add		r4, r5, r4
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	b		_0800868a

.incbin "base.gba", 0x8662, 0x2

_08008664:	.4byte 0x000011E4
_08008668:	.4byte 0x080d341c

_0800866c:
	lsl		r5, r6, #0x5
	ldr		r4, _08008708
	add		r4, r5, r4
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
_0800868a:
	mov		r0, r8
	cmp		r0, #0x0
	beq		_080086d2
	mov		r0, #0x1
	bl		sub_08028130
	add		r0, r5, r0
	mov		r3, #0x1f
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r5, r0, r1
	mov		r4, #0xf
_080086a2:
	ldrh	r0, [r5, #0x0]
	asr		r1, r0, #0x5
	asr		r2, r0, #0xa
	and		r0, r3
	asr		r0, r0, #0x1
	and		r1, r3
	asr		r1, r1, #0x1
	and		r2, r3
	asr		r2, r2, #0x1
	and		r0, r3
	and		r1, r3
	lsl		r1, r1, #0x5
	orr		r0, r1
	and		r2, r3
	lsl		r2, r2, #0xa
	orr		r0, r2
	strh	r0, [r5, #0x0]
	add		r5, #0x2
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080086a2
	mov		r0, #0x1
	bl		sub_08028168
_080086d2:
	cmp		r6, #0x4
	bne		_080086fa
	ldr		r2, _0800870c
	add		r0, r7, r2
	add		r0, r9
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080086fa
	ldr		r4, _08008710
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r3, #0xc0
	lsl		r3, r3, #0x1
	add		r1, r1, r3
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
_080086fa:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8706, 0x2

_08008708:	.4byte 0x080d7cf4
_0800870c:	.4byte 0x0000111C
_08008710:	.4byte 0x080cd06c
	thumb_func_end sub_080085e4

	thumb_func_start sub_08008714
sub_08008714:
	push	{ r4, r5, r6, r7, lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldr		r0, [r3, #0x10]
	mov		r1, #0x2
	cmp		r0, #0x1
	beq		_08008724
	ldr		r1, [r3, #0x14]
_08008724:
	ldr		r4, _08008764
	add		r0, r3, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080087ac
	lsl		r0, r2, #0x1
	add		r0, r0, r2
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	ldr		r4, _08008768
	add		r1, r3, r4
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08008774
	lsl		r6, r2, #0x2
	lsl		r0, r2, #0x3
	add		r0, r0, r6
	lsl		r5, r0, #0x8
	ldr		r6, _0800876c
	mov		r4, #0x3
_0800874e:
	add		r1, r5, r6
	ldr		r0, _08008770
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0xc0
	lsl		r0, r0, #0x2
	add		r5, r5, r0
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0800874e
	b		_0800881a

_08008764:	.4byte 0x000011E4
_08008768:	.4byte 0x000010A4
_0800876c:	.4byte 0x02025400
_08008770:	.4byte 0x080be378

_08008774:
	mov		r4, #0x0
	lsl		r6, r2, #0x2
	ldr		r7, _080087a4
	lsl		r0, r2, #0x3
	add		r0, r0, r6
	lsl		r5, r0, #0x8
_08008780:
	add		r0, r6, r4
	bl		sub_0802d690
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x30]
	ldr		r1, _080087a8
	add		r1, r5, r1
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0xc0
	lsl		r0, r0, #0x2
	add		r5, r5, r0
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_08008780
	b		_0800881a

_080087a4:	.4byte 0x08102bf8
_080087a8:	.4byte 0x02025400

_080087ac:
	lsl		r0, r2, #0x1
	add		r0, r0, r2
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	mov		r4, #0x87
	lsl		r4, r4, #0x5
	add		r1, r3, r4
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_080087ec
	lsl		r6, r2, #0x2
	lsl		r0, r2, #0x3
	add		r0, r0, r6
	lsl		r5, r0, #0x8
	ldr		r6, _080087e4
	mov		r4, #0x3
_080087ce:
	add		r1, r5, r6
	ldr		r0, _080087e8
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0xc0
	lsl		r0, r0, #0x2
	add		r5, r5, r0
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_080087ce
	b		_0800881a

_080087e4:	.4byte 0x02025400
_080087e8:	.4byte 0x080c07fc

_080087ec:
	mov		r4, #0x0
	lsl		r6, r2, #0x2
	ldr		r7, _08008820
	lsl		r0, r2, #0x3
	add		r0, r0, r6
	lsl		r5, r0, #0x8
_080087f8:
	add		r0, r6, r4
	bl		sub_0802d6a0
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x30]
	ldr		r1, _08008824
	add		r1, r5, r1
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0xc0
	lsl		r0, r0, #0x2
	add		r5, r5, r0
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_080087f8
_0800881a:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08008820:	.4byte 0x08102bf8
_08008824:	.4byte 0x02025400
	thumb_func_end sub_08008714

	thumb_func_start sub_08008828
sub_08008828:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r2, _08008870
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
	ldr		r1, _08008874
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08008854
	ldr		r0, [r5, #0x10]
	cmp		r0, #0x3
	bne		_08008880
_08008854:
	ldr		r4, _08008878
	mov		r0, #0x0
	mov		r1, #0x12
	mov		r2, #0x2
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _0800887c
	add		r0, r0, r5
	mov		r12, r0
	b		_080088be

_08008870:	.4byte 0x01000080
_08008874:	.4byte 0x000011E4
_08008878:	.4byte 0x080b632c
_0800887c:	.4byte 0x00000C6C

_08008880:
	mov		r0, #0x0
	mov		r1, #0x13
	mov		r2, #0x2
	bl		sub_080281b0
	add		r7, r0, #0x0
	mov		r2, #0x0
	ldr		r1, _080088ec
	add		r1, r1, r5
	mov		r12, r1
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	add		r6, r0, #0x0
_0800889a:
	lsl		r1, r2, #0x6
	lsl		r0, r2, #0x3
	add		r4, r2, #0x1
	add		r2, r0, #0x0
	add		r2, #0x20
	add		r1, r7, r1
	mov		r3, #0x7
_080088a8:
	add		r0, r2, #0x0
	orr		r0, r6
	strh	r0, [r1, #0x0]
	add		r2, #0x1
	add		r1, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_080088a8
	add		r2, r4, #0x0
	cmp		r2, #0x7
	ble		_0800889a
_080088be:
	ldr		r1, _080088f0
	add		r2, r5, r1
	ldrh	r1, [r2, #0x0]
	ldr		r0, _080088f4
	and		r0, r1
	ldrh	r1, [r2, #0x0]
	strh	r0, [r2, #0x0]
	ldr		r1, _080088f8
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080088dc
	ldr		r0, [r5, #0x10]
	cmp		r0, #0x3
	bne		_080088fc
_080088dc:
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x80
	orr		r0, r1
	ldrh	r1, [r2, #0x0]
	mov		r1, #0x0
	orr		r0, r1
	b		_08008900

.incbin "base.gba", 0x88EA, 0x2

_080088ec:	.4byte 0x00000C6C
_080088f0:	.4byte 0x000011FE
_080088f4:	.4byte 0x0000FF7F
_080088f8:	.4byte 0x000011E4

_080088fc:
	ldrh	r0, [r2, #0x0]
	ldrh	r1, [r2, #0x0]
_08008900:
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	mov		r1, r12
	str		r0, [r1, #0x0]
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08008828

	thumb_func_start sub_08008910
sub_08008910:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	ldr		r0, _0800894c
	ldr		r2, [r0, #0x0]
	mov		r1, #0x1
	ldr		r0, _08008950
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_080089c8
	cmp		r0, #0x1
	bgt		_08008928
	b		_08008b16
_08008928:
	cmp		r0, #0x2
	beq		_0800892e
	b		_08008b16
_0800892e:
	ldr		r1, _08008954
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, [r6, #0x10]
	cmp		r0, #0x0
	beq		_0800893e
	cmp		r1, #0x3
	bne		_08008980
_0800893e:
	cmp		r1, #0x3
	beq		_0800895c
	ldr		r4, _08008958
	add		r0, r2, #0x0
	bl		sub_0802d690
	b		_08008966

_0800894c:	.4byte 0x0203EEBC
_08008950:	.4byte 0x0203EEB8
_08008954:	.4byte 0x000011E4
_08008958:	.4byte 0x08102bf8

_0800895c:
	ldr		r4, _08008978
	and		r2, r1
	add		r0, r2, #0x0
	bl		sub_0802d6c0
_08008966:
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	ldr		r2, [r0, #0x0]
	ldr		r0, [r2, #0x24]
	ldr		r1, _0800897c
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	b		_080089a8

.incbin "base.gba", 0x8976, 0x2

_08008978:	.4byte 0x08102bf8
_0800897c:	.4byte 0x02004400

_08008980:
	ldr		r4, _080089b4
	add		r0, r2, #0x0
	bl		sub_0802d6a0
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	ldr		r2, [r0, #0x0]
	ldr		r1, [r2, #0x0]
	lsl		r1, r1, #0x2
	ldr		r0, _080089b8
	add		r1, r1, r0
	ldr		r1, [r1, #0x0]
	add		r0, r1, r0
	ldr		r2, _080089bc
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	add		r0, r0, r1
	ldr		r1, _080089c0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
_080089a8:
	ldr		r1, _080089c4
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r1, #0x0
	b		_08008b16

.incbin "base.gba", 0x89B2, 0x2

_080089b4:	.4byte 0x08102bf8
_080089b8:	.4byte 0x08258000
_080089bc:	.4byte 0x082580c4
_080089c0:	.4byte 0x02004400
_080089c4:	.4byte 0x0203EEB8

_080089c8:
	ldr		r3, _08008a18
	add		r0, r6, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, [r6, #0x10]
	cmp		r0, #0x0
	beq		_080089da
	add		r3, r1, #0x0
	cmp		r3, #0x3
	bne		_08008a4c
_080089da:
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_080089e2
	add		r0, r2, #0x3
_080089e2:
	asr		r5, r0, #0x2
	add		r0, r1, #0x0
	mov		r7, #0x2
	cmp		r0, #0x1
	beq		_080089ee
	ldr		r7, [r6, #0x14]
_080089ee:
	cmp		r0, #0x3
	beq		_08008a24
	ldr		r4, _08008a1c
	add		r0, r2, #0x0
	bl		sub_0802d690
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	ldr		r2, [r0, #0x0]
	lsl		r0, r5, #0x1
	add		r0, r0, r5
	add		r0, r0, r7
	lsl		r0, r0, #0x2
	ldr		r3, _08008a20
	add		r1, r6, r3
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08008a34
	ldr		r4, [r2, #0x2c]
	b		_08008a36

_08008a18:	.4byte 0x000011E4
_08008a1c:	.4byte 0x08102bf8
_08008a20:	.4byte 0x000010A4

_08008a24:
	ldr		r4, _08008a48
	and		r2, r1
	add		r0, r2, #0x0
	bl		sub_0802d6c0
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	ldr		r2, [r0, #0x0]
_08008a34:
	ldr		r4, [r2, #0x28]
_08008a36:
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	b		_08008ac6

.incbin "base.gba", 0x8A46, 0x2

_08008a48:	.4byte 0x08102bf8

_08008a4c:
	add		r0, r2, #0x0
	cmp		r0, #0x0
	bge		_08008a54
	add		r0, #0x3
_08008a54:
	asr		r5, r0, #0x2
	mov		r7, #0x2
	cmp		r3, #0x1
	beq		_08008a5e
	ldr		r7, [r6, #0x14]
_08008a5e:
	ldr		r4, _08008aec
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x20
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	lsl		r0, r5, #0x1
	add		r0, r0, r5
	add		r0, r0, r7
	lsl		r0, r0, #0x2
	mov		r2, #0x87
	lsl		r2, r2, #0x5
	add		r1, r6, r2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08008ac6
	mov		r0, #0x0
	bl		sub_08028130
	mov		r4, #0x1f
	add		r3, r0, #0x0
	add		r3, #0x20
	mov		r5, #0xf
_08008a96:
	ldrh	r0, [r3, #0x0]
	asr		r1, r0, #0x5
	asr		r2, r0, #0xa
	and		r0, r4
	asr		r0, r0, #0x1
	and		r1, r4
	asr		r1, r1, #0x1
	and		r2, r4
	asr		r2, r2, #0x1
	and		r0, r4
	and		r1, r4
	lsl		r1, r1, #0x5
	orr		r0, r1
	and		r2, r4
	lsl		r2, r2, #0xa
	orr		r0, r2
	strh	r0, [r3, #0x0]
	add		r3, #0x2
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08008a96
	mov		r0, #0x1
	bl		sub_08028168
_08008ac6:
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r3, _08008af0
	add		r0, r6, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08008adc
	ldr		r0, [r6, #0x10]
	cmp		r0, #0x3
	bne		_08008b00
_08008adc:
	bl		sub_08029f34
	ldr		r1, _08008af4
	ldr		r2, _08008af8
	ldr		r3, _08008afc
	bl		sub_08029ee4
	b		_08008b0e

_08008aec:	.4byte 0x08082808
_08008af0:	.4byte 0x000011E4
_08008af4:	.4byte 0x02004400
_08008af8:	.4byte 0x06004000
_08008afc:	.4byte 0x80000A20

_08008b00:
	bl		sub_08029f34
	ldr		r1, _08008b20
	ldr		r2, _08008b24
	ldr		r3, _08008b28
	bl		sub_08029ee4
_08008b0e:
	ldr		r1, _08008b2c
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r1, #0x1
_08008b16:
	add		r0, r1, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x8B1E, 0x2

_08008b20:	.4byte 0x02004400
_08008b24:	.4byte 0x06004400
_08008b28:	.4byte 0x80000400
_08008b2c:	.4byte 0x0203EEB8
	thumb_func_end sub_08008910

	thumb_func_start sub_08008b30
sub_08008b30:
	push	{ r4, lr }
	ldr		r0, [r0, #0x10]
	cmp		r0, #0x3
	bne		_08008b3a
	b		_08008c90
_08008b3a:
	cmp		r1, #0x4
	bls		_08008b40
	b		_08008ccc
_08008b40:
	lsl		r0, r1, #0x2
	ldr		r1, _08008b4c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x8B4A, 0x2

_08008b4c:	.4byte 0x08008b50
_08008b50:	.4byte 0x08008b64

.incbin "base.gba", 0x8B54, 0x10
	thumb_func_end sub_08008b30


.incbin "base.gba", 0x8B64, 0x12C

_08008c90:

.incbin "base.gba", 0x8C90, 0x3C
_08008ccc:

.incbin "base.gba", 0x8CCC, 0x14
_08008ce0:	.4byte 0x080c9dac
_08008ce4:	.4byte 0x080c9e28
_08008ce8:	.4byte 0x08099a30
	thumb_func_start sub_08008cec
sub_08008cec:
	push	{ r4, lr }
	add		r3, r0, #0x0
	mov		r0, #0xe7
	lsl		r0, r0, #0x3
	add		r2, r3, r0
	add		r0, #0xbc
	add		r1, r3, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x7
	ble		_08008d1a
	mov		r4, #0x0
	str		r4, [r1, #0x0]
	mov		r0, #0xff
	lsl		r0, r0, #0x3
	add		r1, r3, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x6
	ble		_08008d1a
	str		r4, [r1, #0x0]
_08008d1a:
	ldr		r0, [r3, #0x10]
	cmp		r0, #0x3
	beq		_08008db0
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x4
	bhi		_08008dd2
	lsl		r0, r0, #0x2
	ldr		r1, _08008d30
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08008d30:	.4byte 0x08008d34
_08008d34:	.4byte 0x08008d48

.incbin "base.gba", 0x8D38, 0x10
	thumb_func_end sub_08008cec


.incbin "base.gba", 0x8D48, 0x68

_08008db0:

.incbin "base.gba", 0x8DB0, 0x22
_08008dd2:

.incbin "base.gba", 0x8DD2, 0xE
_08008de0:	.4byte 0x0809894c
	thumb_func_start sub_08008de4
sub_08008de4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x8
	add		r6, r1, #0x0
	cmp		r1, #0x0
	bge		_08008df6
	add		r6, r1, #0x3
_08008df6:
	asr		r6, r6, #0x2
	mov		r4, #0x3
	and		r4, r1
	ldr		r1, _08008eb4
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08008eb8
	bl		sub_08057370
	lsl		r4, r4, #0x5
	lsl		r6, r6, #0x7
	add		r0, r6, r0
	add		r0, r4, r0
	add		r0, #0x64
	ldrb	r7, [r0, #0x0]
	bl		sub_08057370
	add		r0, r6, r0
	add		r0, r4, r0
	add		r0, #0x64
	ldrh	r5, [r0, #0x2]
	mov		r0, #0x0
	mov		r1, #0x5
	mov		r2, #0xb
	bl		sub_080281b0
	add		r1, r0, #0x0
	mov		r0, #0xd0
	lsl		r0, r0, #0x1
	mov		r9, r0
	str		r0, [sp, #0x0]
	mov		r0, #0xf
	mov		r8, r0
	str		r0, [sp, #0x4]
	add		r0, r7, #0x0
	mov		r2, #0xa0
	lsl		r2, r2, #0x1
	mov		r3, #0xc
	bl		sub_0800e5c0
	mov		r0, #0x0
	mov		r1, #0x8
	mov		r2, #0xb
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	mov		r2, #0xb0
	lsl		r2, r2, #0x1
	mov		r3, #0xf
	bl		sub_0800c674
	bl		sub_08057370
	add		r0, r6, r0
	add		r0, r4, r0
	add		r0, #0x78
	ldrb	r7, [r0, #0x0]
	bl		sub_08057370
	add		r6, r6, r0
	add		r4, r4, r6
	add		r4, #0x78
	ldrh	r5, [r4, #0x2]
	mov		r0, #0x0
	mov		r1, #0x5
	mov		r2, #0xe
	bl		sub_080281b0
	add		r1, r0, #0x0
	mov		r0, r9
	str		r0, [sp, #0x0]
	mov		r0, r8
	str		r0, [sp, #0x4]
	add		r0, r7, #0x0
	mov		r2, #0xa0
	lsl		r2, r2, #0x1
	mov		r3, #0xc
	bl		sub_0800e5c0
	add		r4, r5, #0x0
	mov		r0, #0x0
	mov		r1, #0x8
	mov		r2, #0xe
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0xb0
	lsl		r2, r2, #0x1
	mov		r3, #0xf
	bl		sub_0800c674
	b		_08008f6c

_08008eb4:	.4byte 0x000011E4

_08008eb8:
	bl		sub_08057370
	lsl		r4, r4, #0x5
	lsl		r6, r6, #0x7
	add		r0, r6, r0
	add		r0, r4, r0
	mov		r5, #0xb9
	lsl		r5, r5, #0x2
	add		r0, r0, r5
	ldrb	r7, [r0, #0x0]
	bl		sub_08057370
	add		r0, r6, r0
	add		r0, r4, r0
	add		r0, r0, r5
	ldrh	r5, [r0, #0x2]
	mov		r0, #0x0
	mov		r1, #0x5
	mov		r2, #0xb
	bl		sub_080281b0
	add		r1, r0, #0x0
	mov		r0, #0xd0
	lsl		r0, r0, #0x1
	mov		r9, r0
	str		r0, [sp, #0x0]
	mov		r0, #0xf
	mov		r8, r0
	str		r0, [sp, #0x4]
	add		r0, r7, #0x0
	mov		r2, #0xa0
	lsl		r2, r2, #0x1
	mov		r3, #0xc
	bl		sub_0800e5c0
	mov		r0, #0x0
	mov		r1, #0x8
	mov		r2, #0xb
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	mov		r2, #0xb0
	lsl		r2, r2, #0x1
	mov		r3, #0xf
	bl		sub_0800c674
	bl		sub_08057370
	add		r0, r6, r0
	add		r0, r4, r0
	mov		r5, #0xbe
	lsl		r5, r5, #0x2
	add		r0, r0, r5
	ldrb	r7, [r0, #0x0]
	bl		sub_08057370
	add		r6, r6, r0
	add		r4, r4, r6
	add		r4, r4, r5
	ldrh	r5, [r4, #0x2]
	mov		r0, #0x0
	mov		r1, #0x5
	mov		r2, #0xe
	bl		sub_080281b0
	add		r1, r0, #0x0
	mov		r0, r9
	str		r0, [sp, #0x0]
	mov		r0, r8
	str		r0, [sp, #0x4]
	add		r0, r7, #0x0
	mov		r2, #0xa0
	lsl		r2, r2, #0x1
	mov		r3, #0xc
	bl		sub_0800e5c0
	add		r4, r5, #0x0
	mov		r0, #0x0
	mov		r1, #0x8
	mov		r2, #0xe
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0xb0
	lsl		r2, r2, #0x1
	mov		r3, #0xf
	bl		sub_0800c674
_08008f6c:
	add		sp, #0x8
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x8F7A, 0x2
	thumb_func_end sub_08008de4

	thumb_func_start sub_08008f7c
sub_08008f7c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	mov		r9, r1
	mov		r1, #0xe7
	lsl		r1, r1, #0x3
	add		r1, r1, r0
	mov		r8, r1
	mov		r0, #0x10
	sub		r0, r0, r2
	str		r0, [sp, #0xC]
	cmp		r2, #0x1
	bgt		_08008f9e
	mov		r0, #0xe
_08008f9e:
	str		r0, [sp, #0x8]
	cmp		r2, #0x3
	ble		_08008faa
	mov		r0, #0x10
	sub		r0, r0, r2
	b		_08008fac
_08008faa:
	mov		r0, #0xc
_08008fac:
	str		r0, [sp, #0x4]
	mov		r0, #0xa
	str		r0, [sp, #0x0]
	mov		r6, #0x0
	mov		r0, r9
	lsl		r0, r0, #0x1
	mov		r10, r0
	add		r7, sp, #0x10
	mov		r1, r9
	lsl		r1, r1, #0x2
	str		r1, [sp, #0x14]
	ldr		r5, _080090e4
	add		r5, r8
_08008fc6:
	lsl		r0, r6, #0x6
	ldr		r1, _080090e8
	add		r0, r0, r1
	add		r1, r5, #0x0
	mov		r2, #0xc
	bl		sub_08071b6c
	add		r5, #0x18
	add		r6, #0x1
	cmp		r6, #0x7
	ble		_08008fc6
	mov		r1, r8
	ldr		r0, [r1, #0xc]
	cmp		r0, #0x0
	beq		_08009022
	mov		r6, #0x0
	mov		r0, r10
	add		r0, r9
	lsl		r0, r0, #0x4
	ldr		r2, _080090e4
	add		r2, r8
	ldr		r4, _080090ec
	ldr		r1, _080090f0
	add		r5, r1, #0x0
	mov		r1, r10
	add		r1, #0x1
	add		r3, r0, r2
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r2, r0, r2
_08009004:
	ldrh	r1, [r3, #0x0]
	add		r0, r4, #0x0
	and		r0, r1
	orr		r0, r5
	strh	r0, [r3, #0x0]
	ldrh	r1, [r2, #0x0]
	add		r0, r4, #0x0
	and		r0, r1
	orr		r0, r5
	strh	r0, [r2, #0x0]
	add		r3, #0x2
	add		r2, #0x2
	add		r6, #0x1
	cmp		r6, #0xb
	ble		_08009004
_08009022:
	mov		r6, #0x0
	add		r5, r7, #0x0
_08009026:
	mov		r0, #0x0
	strh	r0, [r5, #0x0]
	add		r2, r6, #0x0
	add		r2, #0xa
	mov		r0, #0x0
	mov		r1, #0x11
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	ldr		r2, _080090f4
	bl		sub_08071b6c
	add		r6, #0x1
	cmp		r6, #0x7
	ble		_08009026
	mov		r6, #0x0
	mov		r5, sp
	ldr		r7, _080090f8
	add		r7, r8
	ldr		r4, _080090e4
	add		r4, r8
_08009052:
	cmp		r6, r9
	beq		_08009080
	ldr		r2, [r5, #0x0]
	mov		r0, #0x0
	mov		r1, #0x11
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0xc
	bl		sub_08071b6c
	ldr		r2, [r5, #0x0]
	add		r2, #0x1
	mov		r0, #0x0
	mov		r1, #0x11
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r7, #0x0
	mov		r2, #0xc
	bl		sub_08071b6c
_08009080:
	add		r5, #0x4
	add		r7, #0x30
	add		r4, #0x30
	add		r6, #0x1
	cmp		r6, #0x3
	ble		_08009052
	mov		r4, r10
	add		r4, r9
	lsl		r4, r4, #0x4
	ldr		r1, _080090e4
	add		r5, r4, r1
	add		r5, r8
	ldr		r6, [sp, #0x14]
	add		r6, sp
	ldr		r2, [r6, #0x0]
	mov		r0, #0x0
	mov		r1, #0x11
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	mov		r2, #0xc
	bl		sub_08071b6c
	ldr		r0, _080090f8
	add		r4, r4, r0
	add		r4, r8
	ldr		r2, [r6, #0x0]
	add		r2, #0x1
	mov		r0, #0x0
	mov		r1, #0x11
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0xc
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_080281fc
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x90E2, 0x2

_080090e4:	.4byte 0x0000053C
_080090e8:	.4byte 0x080cce70
_080090ec:	.4byte 0x00000FFF
_080090f0:	.4byte 0xFFFFB000
_080090f4:	.4byte 0x0100000C
_080090f8:	.4byte 0x00000554
	thumb_func_end sub_08008f7c

	thumb_func_start sub_080090fc
sub_080090fc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	mov		r10, r0
	add		r2, r1, #0x0
	mov		r4, #0xe7
	lsl		r4, r4, #0x3
	add		r4, r10
	ldr		r0, _08009148
	add		r0, r10
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08009126
	mov		r1, #0xfd
	lsl		r1, r1, #0x3
	add		r1, r10
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_08009126:
	mov		r0, #0xfd
	lsl		r0, r0, #0x3
	add		r0, r10
	ldr		r0, [r0, #0x0]
	mov		r7, #0xfe
	lsl		r7, r7, #0x3
	add		r7, r10
	ldr		r6, _0800914c
	add		r6, r10
	cmp		r0, #0xa
	bls		_0800913e
	b		_080094f8
_0800913e:
	lsl		r0, r0, #0x2
	ldr		r1, _08009150
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08009148:	.4byte 0x000007E4
_0800914c:	.4byte 0x000007F2
_08009150:	.4byte 0x08009154
_08009154:	.4byte 0x08009180

.incbin "base.gba", 0x9158, 0x28
	thumb_func_end sub_080090fc


.incbin "base.gba", 0x9180, 0xB0
_08009230:	.4byte 0x08009248

.incbin "base.gba", 0x9234, 0x26A
_0800949e:	.4byte 0x5E0A2000
_080094a2:	.4byte 0x1A8020A0
_080094a6:	.4byte 0x13C04358
_080094aa:	.4byte 0x1880880A
_080094ae:	.4byte 0x1C0F8008
_080094b2:	.4byte 0x1068E01F
_080094b6:	.4byte 0x20000810
_080094ba:	.4byte 0x1C216008
_080094be:	.4byte 0x680831B0
_080094c2:	.4byte 0xE0133001

_080094c6:

.incbin "base.gba", 0x94C6, 0x4
_080094ca:

.incbin "base.gba", 0x94CA, 0x4
_080094ce:

.incbin "base.gba", 0x94CE, 0x4
_080094d2:

.incbin "base.gba", 0x94D2, 0x4
_080094d6:	.4byte 0x30016828

.incbin "base.gba", 0x94DA, 0x1E

_080094f8:

.incbin "base.gba", 0x94F8, 0x60
PTR_H_Reset_08009558:	.4byte 0xffff0000
_0800955c:	.4byte 0x0000FFFF
_08009560:	.4byte 0x080e404c
_08009564:	.4byte 0x00001202
	thumb_func_start sub_08009568
sub_08009568:
	push	{ r4, r5, lr }
	sub		sp, #0x8
	add		r4, r0, #0x0
	mov		r0, #0xe7
	lsl		r0, r0, #0x3
	add		r5, r4, r0
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x0
	beq		_0800957c
	b		_0800971e
_0800957c:
	ldr		r1, _08009598
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0800959c
	bl		sub_08057370
	ldr		r2, [r5, #0x0]
	lsl		r1, r2, #0x1
	add		r1, r1, r2
	ldr		r2, [r4, #0x14]
	add		r2, r2, r1
	add		r0, #0x46
	b		_080095ac

_08009598:	.4byte 0x000011E4

_0800959c:
	bl		sub_08057370
	ldr		r2, [r5, #0x0]
	lsl		r1, r2, #0x1
	add		r1, r1, r2
	ldr		r2, [r4, #0x14]
	add		r2, r2, r1
	add		r0, #0x55
_080095ac:
	add		r0, r0, r2
	ldrb	r2, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xf8
	str		r2, [r0, #0x0]
	add		r4, r0, #0x0
	cmp		r2, #0x7
	bls		_080095be
	b		_0800971e
_080095be:
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xfc
	cmp		r0, #0x5
	bls		_080095d0
	b		_08009706
_080095d0:
	lsl		r0, r0, #0x2
	ldr		r1, _080095dc
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x95DA, 0x2

_080095dc:	.4byte 0x080095e0
_080095e0:	.4byte 0x080095f8

.incbin "base.gba", 0x95E4, 0x14
	thumb_func_end sub_08009568


.incbin "base.gba", 0x95F8, 0x10E

_08009706:

.incbin "base.gba", 0x9706, 0x18
_0800971e:

.incbin "base.gba", 0x971E, 0xA
_08009728:	.4byte 0x080e4284
	thumb_func_start sub_0800972c
sub_0800972c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x8
	add		r4, r0, #0x0
	mov		r0, #0xe7
	lsl		r0, r0, #0x3
	add		r5, r4, r0
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x0
	beq		_08009746
	b		_08009952
_08009746:
	ldr		r1, _08009764
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08009768
	bl		sub_08057370
	ldr		r2, [r5, #0x0]
	lsl		r1, r2, #0x1
	add		r1, r1, r2
	ldr		r2, [r4, #0x14]
	add		r2, r2, r1
	add		r0, #0x28
	b		_08009778

.incbin "base.gba", 0x9762, 0x2

_08009764:	.4byte 0x000011E4

_08009768:
	bl		sub_08057370
	ldr		r2, [r5, #0x0]
	lsl		r1, r2, #0x1
	add		r1, r1, r2
	ldr		r2, [r4, #0x14]
	add		r2, r2, r1
	add		r0, #0x37
_08009778:
	add		r0, r0, r2
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	cmp		r1, #0x0
	beq		_0800979e
	cmp		r1, #0x0
	bgt		_08009790
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_0800979e
	b		_08009798
_08009790:
	cmp		r1, #0x1
	beq		_0800979e
	cmp		r1, #0x2
	beq		_0800979e
_08009798:
	add		r7, r5, #0x0
	add		r7, #0xd8
	b		_080097a6
_0800979e:
	add		r0, r5, #0x0
	add		r0, #0xd8
	str		r1, [r0, #0x0]
	add		r7, r0, #0x0
_080097a6:
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x0
	bge		_080097ae
	b		_08009952
_080097ae:
	add		r0, r5, #0x0
	add		r0, #0xec
	ldr		r2, [r0, #0x0]
	add		r3, r0, #0x0
	add		r1, r5, #0x0
	add		r1, #0xe8
	cmp		r2, #0x5
	bls		_080097c0
	b		_080098b8
_080097c0:
	lsl		r0, r2, #0x2
	ldr		r1, _080097cc
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x97CA, 0x2

_080097cc:	.4byte 0x080097d0
_080097d0:	.4byte 0x080097e8

.incbin "base.gba", 0x97D4, 0x14
	thumb_func_end sub_0800972c


.incbin "base.gba", 0x97E8, 0xD0

_080098b8:

.incbin "base.gba", 0x98B8, 0x18
_080098d0:

.incbin "base.gba", 0x98D0, 0x46
_08009916:

.incbin "base.gba", 0x9916, 0x3C
_08009952:

.incbin "base.gba", 0x9952, 0xE
_08009960:	.4byte 0x080e4200
_08009964:	.4byte 0x080f4bfc
PTR_PTR_08009968:	.4byte 0x080f66e0
_0800996c:	.4byte 0x02015E00
	thumb_func_start sub_08009970
sub_08009970:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x8
	mov		r8, r0
	mov		r7, #0xe7
	lsl		r7, r7, #0x3
	add		r7, r8
	ldr		r0, _08009998
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x9
	bls		_0800998c
	b		_08009c12
_0800998c:
	lsl		r0, r0, #0x2
	ldr		r1, _0800999c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x9996, 0x2

_08009998:	.4byte 0x00000C58
_0800999c:	.4byte 0x080099a0
_080099a0:	.4byte 0x08009c12

.incbin "base.gba", 0x99A4, 0x24
	thumb_func_end sub_08009970


.incbin "base.gba", 0x99C8, 0x24A

_08009c12:

.incbin "base.gba", 0x9C12, 0x3A
_08009c4c:

.incbin "base.gba", 0x9C4C, 0xC
_08009c58:	.4byte 0x00000514
	thumb_func_start sub_08009c5c
sub_08009c5c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	mov		r10, r0
	mov		r7, #0xe7
	lsl		r7, r7, #0x3
	add		r7, r10
	ldr		r0, [r0, #0x10]
	cmp		r0, #0x1
	beq		_08009c78
	b		_08009f38
_08009c78:
	ldr		r0, _08009c90
	add		r0, r10
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x6
	bls		_08009c84
	b		_08009e48
_08009c84:
	lsl		r0, r0, #0x2
	ldr		r1, _08009c94
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x9C8E, 0x2

_08009c90:	.4byte 0x00000C44
_08009c94:	.4byte 0x08009c98
_08009c98:	.4byte 0x08009e48

.incbin "base.gba", 0x9C9C, 0x18
	thumb_func_end sub_08009c5c


.incbin "base.gba", 0x9CB4, 0x194

_08009e48:

.incbin "base.gba", 0x9E48, 0x64
_08009eac:

.incbin "base.gba", 0x9EAC, 0x38
_08009ee4:

.incbin "base.gba", 0x9EE4, 0x4
_08009ee8:

.incbin "base.gba", 0x9EE8, 0x32
_08009f1a:

.incbin "base.gba", 0x9F1A, 0x1E
_08009f38:

.incbin "base.gba", 0x9F38, 0x14
_08009f4c:	.4byte 0x080e4208
_08009f50:	.4byte 0x080f4bc8
_08009f54:	.4byte 0x080e421c
_08009f58:	.4byte 0x080f4bcc
_08009f5c:	.4byte 0x000011E4
_08009f60:	.4byte 0x080cdf04
_08009f64:	.4byte 0x080cdf24
_08009f68:	.4byte 0x00001130
_08009f6c:	.4byte 0x080e4254
_08009f70:	.4byte 0x080f4bd0
_08009f74:	.4byte 0x000011C8
_08009f78:	.4byte 0x080e425c
_08009f7c:	.4byte 0x080f4bd4
_08009f80:	.4byte 0x080e4264
	thumb_func_start sub_08009f84
sub_08009f84:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x8
	add		r6, r0, #0x0
	mov		r0, #0xe7
	lsl		r0, r0, #0x3
	add		r5, r6, r0
	ldr		r1, _08009fa8
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x5
	bls		_08009f9c
	b		_0800a0da
_08009f9c:
	lsl		r0, r0, #0x2
	ldr		r1, _08009fac
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x9FA6, 0x2

_08009fa8:	.4byte 0x00000804
_08009fac:	.4byte 0x08009fb0
_08009fb0:	.4byte 0x08009fc8

.incbin "base.gba", 0x9FB4, 0x14
	thumb_func_end sub_08009f84


.incbin "base.gba", 0x9FC8, 0x112

_0800a0da:

.incbin "base.gba", 0xA0DA, 0x3E
_0800a118:

.incbin "base.gba", 0xA118, 0x24
_0800a13c:	.4byte 0x080f4c08
_0800a140:	.4byte 0x02015C00
_0800a144:	.4byte 0x080e403c
_0800a148:	.4byte 0x000011E4
_0800a14c:	.4byte 0x080e4274

_0800a150:

.incbin "base.gba", 0xA150, 0x1A
_0800a16a:

.incbin "base.gba", 0xA16A, 0xA
_0800a174:	.4byte 0x080e4230
_0800a178:	.4byte 0x080f4bd8
	thumb_func_start sub_0800a17c
sub_0800a17c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	mov		r10, r0
	mov		r7, #0xe7
	lsl		r7, r7, #0x3
	add		r7, r10
	mov		r0, #0x0
	mov		r8, r0
	b		_0800a532
_0800a196:
	mov		r1, r8
	lsl		r0, r1, #0x1
	add		r0, r8
	lsl		r0, r0, #0x3
	add		r0, #0x1c
	add		r6, r7, r0
	mov		r2, #0x0
	mov		r9, r2
	mov		r0, #0xe
	ldrsb	r0, [r6, r0]
	cmp		r0, #0x9
	bls		_0800a1b0
	b		_0800a444
_0800a1b0:
	lsl		r0, r0, #0x2
	ldr		r1, _0800a1bc
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0xA1BA, 0x2

_0800a1bc:	.4byte 0x0800a1c0
_0800a1c0:	.4byte 0x0800a444

.incbin "base.gba", 0xA1C4, 0x24
	thumb_func_end sub_0800a17c


.incbin "base.gba", 0xA1E8, 0x25C

_0800a444:

.incbin "base.gba", 0xA444, 0x1C
_0800a460:

.incbin "base.gba", 0xA460, 0x24
_0800a484:	.4byte 0x0000FFFF
_0800a488:	.4byte 0x08101068
_0800a48c:	.4byte 0x000003FF

_0800a490:

.incbin "base.gba", 0xA490, 0x12
_0800a4a2:

.incbin "base.gba", 0xA4A2, 0x1E
_0800a4c0:	.4byte 0x08101068

_0800a4c4:

.incbin "base.gba", 0xA4C4, 0x12
_0800a4d6:

.incbin "base.gba", 0xA4D6, 0x26
_0800a4fc:	.4byte 0x08101068
_0800a500:	.4byte 0x000003FF

_0800a504:

.incbin "base.gba", 0xA504, 0xE
_0800a512:

.incbin "base.gba", 0xA512, 0x1A
_0800a52c:

.incbin "base.gba", 0xA52C, 0x2
_0800a52e:

.incbin "base.gba", 0xA52E, 0x4
_0800a532:

.incbin "base.gba", 0xA532, 0x8
_0800a53a:

.incbin "base.gba", 0xA53A, 0x66
_0800a5a0:

.incbin "base.gba", 0xA5A0, 0x12
_0800a5b2:

.incbin "base.gba", 0xA5B2, 0x5E
_0800a610:

.incbin "base.gba", 0xA610, 0xC
_0800a61c:

.incbin "base.gba", 0xA61C, 0x30
_0800a64c:	.4byte 0x08101068
_0800a650:	.4byte 0xFFE80000
_0800a654:	.4byte 0x080e3a2c
_0800a658:	.4byte 0x080f4c1c

_0800a65c:

.incbin "base.gba", 0xA65C, 0x3E
_0800a69a:

.incbin "base.gba", 0xA69A, 0x16
_0800a6b0:	.4byte 0x00000604

_0800a6b4:

.incbin "base.gba", 0xA6B4, 0x6
_0800a6ba:

.incbin "base.gba", 0xA6BA, 0x1E
_0800a6d8:

.incbin "base.gba", 0xA6D8, 0x34
_0800a70c:	.4byte 0x080f4c20
_0800a710:	.4byte 0x080f4c30

_0800a714:

.incbin "base.gba", 0xA714, 0xA
_0800a71e:

.incbin "base.gba", 0xA71E, 0x2
_0800a720:

.incbin "base.gba", 0xA720, 0x10
_0800a730:	.4byte 0x000005FC
	thumb_func_start sub_0800a734
sub_0800a734:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	mov		r0, #0xe7
	lsl		r0, r0, #0x3
	add		r4, r7, r0
	mov		r0, #0x5
	str		r0, [r4, #0x14]
	mov		r5, #0x0
	mov		r8, r5
	ldr		r1, _0800a76c
	ldr		r3, _0800a770
	add		r2, r7, r3
	mov		r0, #0x88
	lsl		r0, r0, #0x1
	mov		r12, r0
_0800a75e:
	ldr		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	cmp		r6, #0x0
	bne		_0800a774
	ldrh	r0, [r1, #0xc]
	add		r0, #0xf0
	b		_0800a77a

_0800a76c:	.4byte 0x080f4b1c
_0800a770:	.4byte 0x00000754

_0800a774:
	mov		r3, #0x8f
	lsl		r3, r3, #0x1
	add		r0, r3, #0x0
_0800a77a:
	strh	r0, [r2, #0x4]
	cmp		r6, #0x0
	beq		_0800a78c
	ldr		r0, [r7, #0x10]
	mov		r3, #0x50
	cmp		r0, #0x0
	beq		_0800a78e
	mov		r3, #0x3c
	b		_0800a78e
_0800a78c:
	ldrh	r3, [r1, #0xe]
_0800a78e:
	strh	r3, [r2, #0x6]
	mov		r0, r12
	strh	r0, [r2, #0xa]
	strh	r0, [r2, #0x8]
	mov		r3, r8
	strh	r3, [r2, #0xc]
	mov		r0, #0x1
	strb	r0, [r2, #0xe]
	strh	r3, [r2, #0x10]
	add		r1, #0x14
	add		r2, #0x18
	add		r5, #0x1
	ldr		r0, [r4, #0x14]
	cmp		r5, r0
	blt		_0800a75e
	mov		r5, #0x0
	add		r6, r4, #0x0
	add		r6, #0x94
	mov		r1, #0x98
	add		r1, r1, r4
	mov		r8, r1
	mov		r2, #0x9a
	add		r2, r2, r4
	mov		r9, r2
	add		r3, r4, #0x0
	add		r3, #0x9e
	str		r3, [sp, #0x0]
	mov		r1, #0x9c
	add		r1, r1, r4
	mov		r10, r1
	add		r2, r4, #0x0
	add		r2, #0xa0
	str		r2, [sp, #0x4]
	add		r3, #0x4
	str		r3, [sp, #0x8]
	cmp		r5, r0
	bge		_0800a7e8
_0800a7d8:
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_080085e4
	add		r5, #0x1
	ldr		r0, [r4, #0x14]
	cmp		r5, r0
	blt		_0800a7d8
_0800a7e8:
	ldr		r2, _0800a820
	ldr		r0, [r2, #0x0]
	str		r0, [r6, #0x0]
	ldrh	r0, [r2, #0xc]
	mov		r3, #0x0
	mov		r1, #0x0
	mov		r4, r8
	strh	r0, [r4, #0x0]
	ldrh	r0, [r2, #0xe]
	mov		r2, r9
	strh	r0, [r2, #0x0]
	ldr		r4, [sp, #0x0]
	strh	r1, [r4, #0x0]
	mov		r0, r10
	strh	r1, [r0, #0x0]
	ldr		r2, [sp, #0x4]
	strh	r1, [r2, #0x0]
	ldr		r4, [sp, #0x8]
	strb	r3, [r4, #0x0]
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xA81E, 0x2

_0800a820:	.4byte 0x080f4b94
	thumb_func_end sub_0800a734

	thumb_func_start sub_0800a824
sub_0800a824:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r1, #0xe7
	lsl		r1, r1, #0x3
	add		r1, r1, r0
	mov		r12, r1
	mov		r1, #0x1
	mov		r2, r12
	str		r1, [r2, #0x14]
	mov		r4, #0x0
	ldr		r3, _0800a8bc
	mov		r9, r3
	ldr		r1, _0800a8c0
	mov		r6, #0x0
	mov		r5, #0x88
	lsl		r5, r5, #0x1
	add		r3, r1, #0x0
	add		r3, #0xc
	ldr		r7, _0800a8c4
	add		r2, r0, r7
	mov		r0, #0x1
	mov		r8, r0
_0800a854:
	ldr		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	ldrh	r0, [r3, #0x0]
	add		r0, #0xf0
	strh	r0, [r2, #0x4]
	ldrh	r0, [r3, #0x2]
	strh	r0, [r2, #0x6]
	strh	r5, [r2, #0xa]
	strh	r5, [r2, #0x8]
	strh	r6, [r2, #0xc]
	mov		r7, r8
	strb	r7, [r2, #0xe]
	strh	r6, [r2, #0x10]
	add		r3, #0x14
	add		r2, #0x18
	add		r1, #0x14
	add		r4, #0x1
	mov		r7, r12
	ldr		r0, [r7, #0x14]
	cmp		r4, r0
	blt		_0800a854
	mov		r2, #0x0
	mov		r1, r12
	add		r1, #0x94
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	str		r0, [r1, #0x0]
	ldrh	r1, [r3, #0xc]
	mov		r0, r12
	add		r0, #0x98
	mov		r3, #0x0
	strh	r1, [r0, #0x0]
	mov		r7, r9
	ldrh	r0, [r7, #0xe]
	mov		r1, r12
	add		r1, #0x9a
	strh	r0, [r1, #0x0]
	mov		r0, r12
	add		r0, #0x9e
	strh	r2, [r0, #0x0]
	sub		r0, #0x2
	strh	r2, [r0, #0x0]
	add		r0, #0x4
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	strb	r3, [r0, #0x0]
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800a8bc:	.4byte 0x080f4b94
_0800a8c0:	.4byte 0x080f4b80
_0800a8c4:	.4byte 0x00000754
	thumb_func_end sub_0800a824

	thumb_func_start sub_0800a8c8
sub_0800a8c8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r7, r0, #0x0
	mov		r9, r1
	mov		r0, #0xe7
	lsl		r0, r0, #0x3
	add		r0, r0, r7
	mov		r10, r0
	cmp		r1, #0x0
	beq		_0800a918
	mov		r5, #0xc0
	lsl		r5, r5, #0x13
	mov		r4, #0x7
_0800a8ea:
	bl		sub_08029f34
	ldr		r1, _0800a9e4
	add		r2, r5, #0x0
	ldr		r3, _0800a9e8
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	mov		r1, #0xc0
	lsl		r1, r1, #0x5
	add		r5, r5, r1
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0800a8ea
	mov		r2, r9
	cmp		r2, #0x0
	beq		_0800a918
	add		r0, r7, #0x0
	bl		sub_08002e98
	bl		_DrawFrameRunAudio
_0800a918:
	ldr		r4, _0800a9ec
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe0
	add		r0, r4, #0x0
	mov		r2, #0x10
	bl		_CallHardwareSetCpuFast
	ldr		r4, _0800a9f0
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xa0
	add		r0, r4, #0x0
	mov		r2, #0x10
	bl		_CallHardwareSetCpuFast
	ldr		r4, _0800a9f4
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r0, #0xa0
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x10
	bl		_CallHardwareSetCpuFast
	sub		r4, #0x20
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r2, #0xc0
	lsl		r2, r2, #0x1
	add		r1, r1, r2
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	ldr		r4, _0800a9f8
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r0, #0xe0
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x10
	bl		_CallHardwareSetCpuFast
	ldr		r4, _0800a9fc
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x10
	bl		_CallHardwareSetCpuFast
	ldr		r4, _0800aa00
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r4, _0800aa04
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r2, #0xd0
	lsl		r2, r2, #0x1
	add		r1, r1, r2
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, [r7, #0x10]
	cmp		r0, #0x3
	beq		_0800aa30
	ldr		r1, _0800aa08
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0800aa10
	ldr		r4, _0800aa0c
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r1, r2
	b		_0800aa20

_0800a9e4:	.4byte 0x0203EEC0
_0800a9e8:	.4byte 0x81000C00
_0800a9ec:	.4byte 0x0809866c
_0800a9f0:	.4byte 0x080c9d0c
_0800a9f4:	.4byte 0x080ce084
_0800a9f8:	.4byte 0x080c69c0
_0800a9fc:	.4byte 0x080caf90
_0800aa00:	.4byte 0x080cc3c4
_0800aa04:	.4byte 0x080cc4cc
_0800aa08:	.4byte 0x000011E4
_0800aa0c:	.4byte 0x080d341c

_0800aa10:
	ldr		r4, _0800aa2c
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r1, r1, r0
_0800aa20:
	add		r0, r4, #0x0
	mov		r2, #0x28
	bl		_CallHardwareSetCpuFast
	b		_0800aa48

.incbin "base.gba", 0xAA2A, 0x2

_0800aa2c:	.4byte 0x080d7cf4

_0800aa30:
	ldr		r4, _0800ab30
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r1, r2
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
_0800aa48:
	ldr		r1, _0800ab34
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x5
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	add		r0, r7, #0x0
	bl		sub_08003170
	bl		_DrawFrameRunAudio
	mov		r1, r9
	cmp		r1, #0x0
	beq		_0800ab12
	ldr		r0, _0800ab38
	ldr		r4, _0800ab3c
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800ab40
	ldr		r3, _0800ab44
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0800ab48
	mov		r2, #0x80
	lsl		r2, r2, #0x7
	add		r1, r4, r2
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	ldr		r0, _0800ab4c
	mov		r1, #0xc0
	lsl		r1, r1, #0x7
	add		r4, r4, r1
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	mov		r5, #0x0
	ldr		r6, _0800ab50
_0800aac2:
	lsl		r4, r5, #0xd
	ldr		r0, _0800ab54
	add		r4, r4, r0
	bl		sub_08029f34
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	ldr		r3, _0800ab58
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	mov		r2, #0x80
	lsl		r2, r2, #0x6
	add		r6, r6, r2
	add		r5, #0x1
	cmp		r5, #0x1
	ble		_0800aac2
	ldr		r0, _0800ab5c
	ldr		r4, _0800ab60
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	ldr		r0, _0800ab64
	mov		r2, #0xc0
	lsl		r2, r2, #0x4
	add		r1, r4, r2
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800ab68
	ldr		r3, _0800ab6c
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
_0800ab12:
	ldr		r0, [r7, #0x10]
	cmp		r0, #0x3
	beq		_0800ab80
	ldr		r0, _0800ab70
	ldr		r4, _0800ab74
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _0800ab78
	ldr		r1, _0800ab7c
	add		r4, r4, r1
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	b		_0800ab98

_0800ab30:	.4byte 0x080cd320
_0800ab34:	.4byte 0x080f4ac0
_0800ab38:	.4byte 0x08098b0c
_0800ab3c:	.4byte 0x02008400
_0800ab40:	.4byte 0x06008000
_0800ab44:	.4byte 0x80000600
_0800ab48:	.4byte 0x080c9e50
_0800ab4c:	.4byte 0x080ca498
_0800ab50:	.4byte 0x0600C000
_0800ab54:	.4byte 0x0200C400
_0800ab58:	.4byte 0x80001000
_0800ab5c:	.4byte 0x080caff0
_0800ab60:	.4byte 0x02010400
_0800ab64:	.4byte 0x080d6e20
_0800ab68:	.4byte 0x06010000
_0800ab6c:	.4byte 0x80001200
_0800ab70:	.4byte 0x080d357c
_0800ab74:	.4byte 0x02014000
_0800ab78:	.4byte 0x080d5afc
_0800ab7c:	.4byte 0xFFFFFC00

_0800ab80:
	ldr		r0, _0800abdc
	ldr		r4, _0800abe0
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _0800abe4
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	add		r4, r4, r2
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
_0800ab98:
	ldr		r0, _0800abe8
	ldr		r4, _0800abec
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _0800abf0
	mov		r1, #0xc0
	lsl		r1, r1, #0x4
	add		r5, r4, r1
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	add		r1, r4, r2
	ldr		r2, _0800abf4
	ldr		r3, _0800abf8
	bl		sub_08029ee4
	ldr		r1, _0800abfc
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800ac08
	bl		sub_08029f34
	ldr		r2, _0800ac00
	ldr		r3, _0800ac04
	add		r1, r5, #0x0
	bl		sub_08029ee4
	b		_0800ac1a

_0800abdc:	.4byte 0x080d5bb8
_0800abe0:	.4byte 0x02013C00
_0800abe4:	.4byte 0x080cd340
_0800abe8:	.4byte 0x080cecf4
_0800abec:	.4byte 0x02017400
_0800abf0:	.4byte 0x080ce144
_0800abf4:	.4byte 0x06017400
_0800abf8:	.4byte 0x80000400
_0800abfc:	.4byte 0x000011E4
_0800ac00:	.4byte 0x06010A00
_0800ac04:	.4byte 0x80000100

_0800ac08:
	bl		sub_08029f34
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r1, r4, r2
	ldr		r2, _0800ad18
	ldr		r3, _0800ad1c
	bl		sub_08029ee4
_0800ac1a:
	add		r0, r7, #0x0
	bl		sub_08003170
	bl		_DrawFrameRunAudio
	ldr		r0, _0800ad20
	ldr		r5, _0800ad24
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800ad28
	add		r1, r5, r2
	ldr		r2, _0800ad2c
	ldr		r3, _0800ad30
	bl		sub_08029ee4
	ldr		r0, [r7, #0x10]
	cmp		r0, #0x0
	bne		_0800ac74
	ldr		r0, _0800ad34
	mov		r4, #0x84
	lsl		r4, r4, #0x1
	add		r4, r10
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _0800ad38
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _0800ad3c
	ldr		r1, _0800ad40
	add		r4, r5, r1
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800ad44
	ldr		r3, _0800ad48
	add		r1, r4, #0x0
	bl		sub_08029ee4
_0800ac74:
	add		r0, r7, #0x0
	bl		sub_08003170
	bl		_DrawFrameRunAudio
	ldr		r0, _0800ad4c
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r4, r5, r2
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800ad50
	ldr		r3, _0800ad1c
	add		r1, r4, #0x0
	bl		sub_08029ee4
	ldr		r0, _0800ad54
	mov		r1, #0xda
	lsl		r1, r1, #0x5
	add		r4, r5, r1
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800ad58
	ldr		r3, _0800ad5c
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _0800ad60
	ldr		r2, _0800ad64
	ldr		r3, _0800ad68
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _0800ad6c
	ldr		r2, _0800ad70
	ldr		r3, _0800ad74
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _0800ad78
	ldr		r2, _0800ad7c
	ldr		r3, _0800ad80
	bl		sub_08029ee4
	add		r0, r7, #0x0
	bl		sub_08003170
	bl		_DrawFrameRunAudio
	ldr		r0, [r7, #0x10]
	cmp		r0, #0x3
	beq		_0800ad88
	mov		r4, #0x0
	ldr		r2, _0800ad84
	add		r5, r7, r2
_0800acf6:
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_08008714
	add		r0, r7, #0x0
	bl		sub_08003170
	bl		_DrawFrameRunAudio
	ldr		r0, [r5, #0x0]
	add		r0, #0x1
	str		r0, [r5, #0x0]
	add		r4, #0x1
	cmp		r4, #0x4
	ble		_0800acf6
	b		_0800adb0

.incbin "base.gba", 0xAD16, 0x2

_0800ad18:	.4byte 0x06010A00
_0800ad1c:	.4byte 0x80000100
_0800ad20:	.4byte 0x080cc530
_0800ad24:	.4byte 0x02016000
_0800ad28:	.4byte 0xFFFFDC00
_0800ad2c:	.4byte 0x06013800
_0800ad30:	.4byte 0x80001600
_0800ad34:	.4byte 0x080cc828
_0800ad38:	.4byte 0x080ccb84
_0800ad3c:	.4byte 0x080ccb10
_0800ad40:	.4byte 0xFFFFF000
_0800ad44:	.4byte 0x06014C00
_0800ad48:	.4byte 0x80000080
_0800ad4c:	.4byte 0x080d5a38
_0800ad50:	.4byte 0x06016400
_0800ad54:	.4byte 0x080cc7e8
_0800ad58:	.4byte 0x06017740
_0800ad5c:	.4byte 0x80000030
_0800ad60:	.4byte 0x0807f190
_0800ad64:	.4byte 0x06006800
_0800ad68:	.4byte 0x80000200
_0800ad6c:	.4byte 0x080c7bcc
_0800ad70:	.4byte 0x06006C00
_0800ad74:	.4byte 0x80000400
_0800ad78:	.4byte 0x080c87cc
_0800ad7c:	.4byte 0x06007400
_0800ad80:	.4byte 0x80000600
_0800ad84:	.4byte 0x000011F4

_0800ad88:
	ldr		r0, _0800ae54
	mov		r8, r0
	mov		r5, #0x0
	ldr		r6, _0800ae58
	mov		r4, #0x3
_0800ad92:
	ldmia	r6!, { r0 }
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x30]
	ldr		r1, _0800ae5c
	add		r1, r5, r1
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r1, #0xc0
	lsl		r1, r1, #0x2
	add		r5, r5, r1
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0800ad92
_0800adb0:
	add		r0, r7, #0x0
	bl		sub_08003170
	bl		_DrawFrameRunAudio
	mov		r2, r9
	cmp		r2, #0x0
	beq		_0800adf4
	ldr		r4, _0800ae60
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	add		r4, r0, #0x0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r2, _0800ae64
	ldr		r3, _0800ae68
	add		r0, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
_0800adf4:
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r2, _0800ae6c
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
	bl		sub_08029f34
	add		r4, r0, #0x0
	ldr		r5, _0800ae70
	mov		r0, #0x0
	mov		r1, #0xf
	mov		r2, #0xa
	bl		sub_080281b0
	add		r2, r0, #0x0
	ldr		r3, _0800ae74
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08029ee4
	add		r0, r7, #0x0
	bl		sub_08008828
	mov		r0, r10
	ldr		r1, [r0, #0x0]
	add		r0, r7, #0x0
	bl		sub_08008b30
	ldr		r1, _0800ae78
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800ae48
	ldr		r0, [r7, #0x10]
	cmp		r0, #0x3
	bne		_0800ae84
_0800ae48:
	ldr		r2, _0800ae7c
	add		r0, r7, r2
	ldrh	r1, [r0, #0x0]
	ldr		r1, _0800ae80
	b		_0800ae8c

.incbin "base.gba", 0xAE52, 0x2

_0800ae54:	.4byte 0x08102bf8
_0800ae58:	.4byte 0x080f4ab0
_0800ae5c:	.4byte 0x02025400
_0800ae60:	.4byte 0x080caad4
_0800ae64:	.4byte 0x06002000
_0800ae68:	.4byte 0x80000400
_0800ae6c:	.4byte 0x01000140
_0800ae70:	.4byte 0x080cce6c
_0800ae74:	.4byte 0x80000100
_0800ae78:	.4byte 0x000011E4
_0800ae7c:	.4byte 0x000011FE
_0800ae80:	.4byte 0x00004684

_0800ae84:
	ldr		r1, _0800aee4
	add		r0, r7, r1
	ldrh	r1, [r0, #0x0]
	ldr		r1, _0800aee8
_0800ae8c:
	strh	r1, [r0, #0x0]
	ldr		r2, _0800aeec
	add		r1, r7, r2
	ldrh	r0, [r1, #0x0]
	ldr		r0, _0800aef0
	strh	r0, [r1, #0x0]
	ldr		r0, _0800aef4
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	ldr		r0, _0800aef8
	strh	r0, [r1, #0x0]
	sub		r2, #0x8
	add		r1, r7, r2
	ldrh	r0, [r1, #0x0]
	ldr		r0, _0800aefc
	strh	r0, [r1, #0x0]
	mov		r0, r9
	cmp		r0, #0x0
	beq		_0800af08
	add		r2, #0x1a
	add		r1, r7, r2
	ldrh	r0, [r1, #0x0]
	mov		r0, #0xff
	strh	r0, [r1, #0x0]
	ldr		r0, _0800af00
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	mov		r0, #0x10
	strh	r0, [r1, #0x0]
	sub		r2, #0x2e
	add		r1, r7, r2
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r0, _0800af04
	add		r1, r7, r0
	mov		r0, #0x50
	str		r0, [r1, #0x0]
	add		r2, #0x8
	add		r1, r7, r2
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	b		_0800af24

.incbin "base.gba", 0xAEE2, 0x2

_0800aee4:	.4byte 0x000011FE
_0800aee8:	.4byte 0x00004604
_0800aeec:	.4byte 0x00001204
_0800aef0:	.4byte 0x0000020B
_0800aef4:	.4byte 0x0000120A
_0800aef8:	.4byte 0x0000448E
_0800aefc:	.4byte 0x00001741
_0800af00:	.4byte 0x0000121A
_0800af04:	.4byte 0x000011EC

_0800af08:
	ldr		r0, [r7, #0x50]
	cmp		r0, #0x0
	bne		_0800af24
	ldr		r0, _0800af54
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	mov		r0, #0xbd
	lsl		r0, r0, #0x6
	strh	r0, [r1, #0x0]
	ldr		r2, _0800af58
	add		r1, r7, r2
	ldrh	r0, [r1, #0x0]
	ldr		r0, _0800af5c
	strh	r0, [r1, #0x0]
_0800af24:
	ldr		r0, _0800af60
	add		r1, r7, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r2, #0x90
	lsl		r2, r2, #0x5
	add		r1, r7, r2
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x0
	ldr		r0, _0800af64
	strh	r0, [r1, #0x0]
	ldr		r1, _0800af68
	add		r0, r7, r1
	ldrh	r1, [r0, #0x0]
	strh	r2, [r0, #0x0]
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xAF52, 0x2

_0800af54:	.4byte 0x00001216
_0800af58:	.4byte 0x00001218
_0800af5c:	.4byte 0x00000A06
_0800af60:	.4byte 0x000011F8
_0800af64:	.4byte 0x0000FF60
_0800af68:	.4byte 0x00001202
	thumb_func_end sub_0800a8c8

	thumb_func_start sub_0800af6c
sub_0800af6c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x50
	mov		r8, r0
	str		r1, [sp, #0x18]
	mov		r7, #0xe7
	lsl		r7, r7, #0x3
	add		r7, r8
	mov		r0, #0x0
	str		r0, [sp, #0x1c]
	mov		r1, #0x0
	str		r1, [sp, #0x20]
	mov		r2, #0x0
	str		r2, [sp, #0x24]
	str		r1, [r7, #0x0]
	str		r1, [r7, #0x4]
	sub		r0, #0x1
	str		r0, [r7, #0x8]
	str		r1, [r7, #0xc]
	mov		r0, #0x1
	str		r0, [r7, #0x10]
	str		r1, [r7, #0x14]
	str		r1, [r7, #0x18]
	ldr		r0, _0800b000
	add		r0, r8
	str		r1, [r0, #0x0]
	mov		r0, #0xfd
	lsl		r0, r0, #0x3
	add		r0, r8
	str		r1, [r0, #0x0]
	ldr		r0, _0800b004
	add		r0, r8
	str		r1, [r0, #0x0]
	mov		r2, #0xfe
	lsl		r2, r2, #0x3
	add		r2, r8
	mov		r0, #0xa0
	strh	r0, [r2, #0x0]
	ldr		r0, _0800b008
	add		r0, r8
	strh	r1, [r0, #0x0]
	ldr		r0, _0800b00c
	add		r0, r8
	str		r1, [r0, #0x0]
	mov		r0, #0xff
	lsl		r0, r0, #0x3
	add		r0, r8
	str		r1, [r0, #0x0]
	mov		r1, #0x60
	ldr		r3, [sp, #0x18]
	cmp		r3, #0x0
	beq		_0800afdc
	mov		r1, #0x5e
_0800afdc:
	ldr		r0, _0800b010
	add		r0, r8
	strh	r1, [r0, #0x0]
	ldr		r4, [sp, #0x18]
	cmp		r4, #0x0
	beq		_0800b02c
	mov		r6, r8
	ldr		r0, [r6, #0x10]
	cmp		r0, #0x0
	beq		_0800b018
	ldr		r0, _0800b014
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r2, #0x41
	cmp		r0, #0x0
	bne		_0800b02e
	mov		r2, #0x3c
	b		_0800b02e

_0800b000:	.4byte 0x000007E4
_0800b004:	.4byte 0x000007EC
_0800b008:	.4byte 0x000007F2
_0800b00c:	.4byte 0x000007F4
_0800b010:	.4byte 0x000007FC
_0800b014:	.4byte 0x000011E4

_0800b018:
	ldr		r0, _0800b028
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r2, #0x55
	cmp		r0, #0x0
	bne		_0800b02e
	mov		r2, #0x50
	b		_0800b02e

_0800b028:	.4byte 0x000011E4

_0800b02c:
	mov		r2, #0x30
_0800b02e:
	add		r3, r7, #0x0
	add		r3, #0xc6
	mov		r1, #0x0
	strh	r2, [r3, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xc8
	str		r1, [r0, #0x0]
	add		r2, r7, #0x0
	add		r2, #0xcc
	str		r1, [r2, #0x0]
	add		r0, #0x8
	str		r1, [r0, #0x0]
	mov		r1, #0x70
	str		r3, [sp, #0x2c]
	str		r2, [sp, #0x30]
	ldr		r0, [sp, #0x18]
	cmp		r0, #0x0
	beq		_0800b054
	mov		r1, #0x40
_0800b054:
	add		r0, r7, #0x0
	add		r0, #0xd4
	strh	r1, [r0, #0x0]
	str		r0, [sp, #0x34]
	ldr		r1, [sp, #0x18]
	cmp		r1, #0x0
	beq		_0800b078
	ldr		r0, _0800b074
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x6d
	cmp		r0, #0x0
	bne		_0800b07a
	mov		r1, #0x68
	b		_0800b07a

.incbin "base.gba", 0xB072, 0x2

_0800b074:	.4byte 0x000011E4

_0800b078:
	mov		r1, #0x58
_0800b07a:
	add		r3, r7, #0x0
	add		r3, #0xd6
	mov		r2, #0x0
	strh	r1, [r3, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xd8
	str		r2, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xdc
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xe0
	str		r2, [r0, #0x0]
	add		r0, #0x4
	str		r2, [r0, #0x0]
	add		r0, #0x4
	str		r2, [r0, #0x0]
	add		r1, #0x10
	mov		r0, #0x5
	str		r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xf0
	str		r2, [r0, #0x0]
	mov		r2, #0x64
	str		r3, [sp, #0x38]
	str		r1, [sp, #0x3c]
	ldr		r3, [sp, #0x18]
	cmp		r3, #0x0
	beq		_0800b0ba
	mov		r2, #0x68
_0800b0ba:
	add		r0, r7, #0x0
	add		r0, #0xf4
	strh	r2, [r0, #0x0]
	str		r0, [sp, #0x40]
	ldr		r4, [sp, #0x18]
	cmp		r4, #0x0
	beq		_0800b0dc
	ldr		r0, _0800b0d8
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r2, #0x65
	cmp		r0, #0x0
	bne		_0800b0de
	mov		r2, #0x60
	b		_0800b0de

_0800b0d8:	.4byte 0x000011E4

_0800b0dc:
	mov		r2, #0x40
_0800b0de:
	add		r4, r7, #0x0
	add		r4, #0xf6
	mov		r1, #0x0
	strh	r2, [r4, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xf8
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	add		r2, r7, r6
	mov		r0, #0x5
	str		r0, [r2, #0x0]
	mov		r2, #0x82
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	mov		r3, #0xa1
	lsl		r3, r3, #0x3
	add		r0, r7, r3
	str		r1, [r0, #0x0]
	ldr		r6, _0800b1f4
	add		r0, r7, r6
	str		r1, [r0, #0x0]
	mov		r2, #0xa2
	lsl		r2, r2, #0x3
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r3, #0xc
	add		r0, r7, r3
	mov		r2, #0xa0
	lsl		r2, r2, #0x1
	strh	r2, [r0, #0x0]
	add		r6, #0xa
	add		r0, r7, r6
	strh	r2, [r0, #0x0]
	mov		r2, #0xa3
	lsl		r2, r2, #0x3
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r3, #0x8
	add		r0, r7, r3
	str		r1, [r0, #0x0]
	add		r6, #0xa
	add		r0, r7, r6
	str		r1, [r0, #0x0]
	add		r2, #0xc
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r3, #0xc
	add		r0, r7, r3
	str		r1, [r0, #0x0]
	add		r6, #0xdc
	add		r0, r7, r6
	str		r1, [r0, #0x0]
	add		r2, #0xdc
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	add		r3, #0xdc
	add		r0, r7, r3
	str		r1, [r0, #0x0]
	add		r6, #0xc
	add		r0, r7, r6
	str		r1, [r0, #0x0]
	sub		r2, #0xd4
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	sub		r3, #0xd4
	add		r0, r7, r3
	str		r1, [r0, #0x0]
	sub		r6, #0xd4
	add		r0, r7, r6
	str		r1, [r0, #0x0]
	add		r2, #0xc
	add		r0, r7, r2
	str		r1, [r0, #0x0]
	mov		r0, r8
	bl		sub_08001fb4
	ldr		r1, _0800b1f8
	mov		r0, #0x0
	bl		sub_080281c4
	ldr		r1, _0800b1fc
	mov		r0, #0x1
	bl		sub_080281c4
	mov		r0, r8
	bl		sub_08002ce4
	mov		r3, r8
	str		r0, [r3, #0x1c]
	str		r0, [r7, #0x0]
	mov		r0, r8
	bl		sub_08002d3c
	mov		r6, r8
	str		r0, [r6, #0x20]
	str		r0, [r7, #0x4]
	mov		r0, r8
	ldr		r1, [sp, #0x18]
	bl		sub_0800a8c8
	mov		r0, r8
	bl		sub_08003170
	ldr		r1, [r6, #0x18]
	mov		r0, #0x7
	str		r0, [sp, #0x0]
	mov		r0, r8
	mov		r2, #0x0
	mov		r3, #0x1
	bl		sub_08005ed0
	ldr		r1, [r6, #0x10]
	str		r4, [sp, #0x44]
	cmp		r1, #0x3
	beq		_0800b210
	mov		r0, #0x2
	cmp		r1, #0x1
	beq		_0800b1d4
	ldr		r0, [r6, #0x14]
_0800b1d4:
	lsl		r0, r0, #0x2
	ldr		r1, _0800b200
	add		r1, r8
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0800b21e
	bl		sub_08029f34
	ldr		r1, _0800b204
	ldr		r2, _0800b208
	ldr		r3, _0800b20c
	bl		sub_08029ee4
	b		_0800b21e

.incbin "base.gba", 0xB1F2, 0x2

_0800b1f4:	.4byte 0x0000050C
_0800b1f8:	.4byte 0x06003000
_0800b1fc:	.4byte 0x06001000
_0800b200:	.4byte 0x0000111C
_0800b204:	.4byte 0x08098fb8
_0800b208:	.4byte 0x06008660
_0800b20c:	.4byte 0x80000100

_0800b210:
	bl		sub_08029f34
	ldr		r1, _0800b278
	ldr		r2, _0800b27c
	ldr		r3, _0800b280
	bl		sub_08029ee4
_0800b21e:
	ldr		r2, _0800b284
	add		r2, r8
	ldr		r3, _0800b288
	mov		r0, #0x88
	mov		r1, #0x20
	bl		sub_08003fc4
	mov		r0, sp
	add		r0, #0x10
	str		r0, [sp, #0x48]
	thumb_func_end sub_0800af6c

	non_word_aligned_thumb_func_start sub_0800b232
sub_0800b232:
	ldr		r0, _0800b28c
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0800b23e
	bl		sub_0802983c
_0800b23e:
	bl		_DrawFrameRunAudio
	mov		r1, #0xa6
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	ldr		r3, _0800b290
	add		r0, r7, r3
	str		r2, [r0, #0x0]
	mov		r4, #0xa7
	lsl		r4, r4, #0x3
	add		r0, r7, r4
	str		r2, [r0, #0x0]
	ldr		r1, _0800b294
	add		r1, r8
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r6, r8
	ldr		r0, [r6, #0x4c]
	add		r0, #0x1
	str		r0, [r6, #0x4c]
	ldr		r0, [r6, #0x10]
	cmp		r0, #0x0
	bne		_0800b298
	mov		r0, #0x1
	str		r0, [r7, #0xc]
	b		_0800b29a

.align 2, 0
_0800b278:	.4byte 0x080991b8
_0800b27c:	.4byte 0x06008660
_0800b280:	.4byte 0x80000100
_0800b284:	.4byte 0x00000D88
_0800b288:	.4byte 0x080f4ba8
_0800b28c:	.4byte 0x0203EEB8
_0800b290:	.4byte 0x00000534
_0800b294:	.4byte 0x000011F4

_0800b298:
	str		r2, [r7, #0xc]
_0800b29a:
	mov		r0, r8
	bl		sub_08008910
	cmp		r0, #0x0
	bne		_0800b2ac
	mov		r0, r8
	bl		sub_0800393c
	b		sub_0800b232
_0800b2ac:
	ldr		r1, _0800b36c
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800b39c
	ldr		r0, _0800b370
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800b2f6
	ldr		r0, _0800b374
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0800b2d6
	mov		r2, r8
	ldr		r0, [r2, #0x4c]
	mov		r1, #0x2f
	and		r0, r1
	cmp		r0, #0x1f
	bgt		_0800b2e6
_0800b2d6:
	ldr		r0, _0800b378
	ldr		r1, _0800b37c
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
_0800b2e6:
	ldr		r0, _0800b380
	ldr		r1, _0800b384
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
_0800b2f6:
	mov		r0, r8
	bl		sub_08003170
	ldr		r1, _0800b388
	add		r1, r8
	mov		r0, #0x7
	bl		sub_08005d84
	mov		r0, r8
	bl		sub_08009568
	mov		r0, r8
	bl		sub_0800972c
	mov		r0, r8
	bl		sub_0800a17c
	mov		r0, r8
	bl		sub_08009f84
	mov		r0, r8
	ldr		r1, [sp, #0x18]
	bl		sub_080090fc
	mov		r0, r8
	bl		sub_0800393c
	ldr		r3, _0800b38c
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800b33c
	mov		r0, #0x1
	bl		sub_080281fc
_0800b33c:
	mov		r4, #0xa7
	lsl		r4, r4, #0x3
	add		r0, r7, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800b356
	bl		sub_08029f34
	ldr		r1, _0800b390
	ldr		r2, _0800b394
	ldr		r3, _0800b398
	bl		sub_08029ee4
_0800b356:
	add		r0, r7, #0x0
	add		r0, #0xb0
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0800b362
	b		sub_0800b232
_0800b362:
	ldr		r6, _0800b36c
	add		r0, r7, r6
	str		r1, [r0, #0x0]
	b		sub_0800b232

.incbin "base.gba", 0xB36A, 0x2

_0800b36c:	.4byte 0x000005FC
_0800b370:	.4byte 0x0000112C
_0800b374:	.4byte 0x000011E4
_0800b378:	.4byte 0x080e42b0
_0800b37c:	.4byte 0x080f4c34
_0800b380:	.4byte 0x080e42cc
_0800b384:	.4byte 0x080f4c38
_0800b388:	.4byte 0x00000D88
_0800b38c:	.4byte 0x00000534
_0800b390:	.4byte 0x02015400
_0800b394:	.4byte 0x06015000
_0800b398:	.4byte 0x80000600

_0800b39c:
	ldr		r0, _0800b414
	ldrh	r1, [r0, #0x0]
	add		r0, sp, #0x8
	strh	r1, [r0, #0x0]
	ldr		r0, _0800b418
	ldrh	r0, [r0, #0x0]
	ldr		r1, [sp, #0x48]
	strh	r0, [r1, #0x0]
	mov		r2, r8
	ldr		r3, [r2, #0x8]
	ldr		r5, [r2, #0x50]
	cmp		r3, #0x0
	ble		_0800b3ce
	mov		r2, #0x0
	add		r1, #0x2
	mov		r0, sp
	add		r0, #0xa
	add		r4, r3, #0x0
_0800b3c0:
	strh	r2, [r1, #0x0]
	strh	r2, [r0, #0x0]
	add		r1, #0x2
	add		r0, #0x2
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0800b3c0
_0800b3ce:
	ldr		r4, [sp, #0x1c]
	cmp		r4, #0x0
	blt		_0800b444
	cmp		r4, #0x2
	ble		_0800b3e0
	cmp		r4, #0x12
	bgt		_0800b444
	cmp		r4, #0xa
	blt		_0800b444
_0800b3e0:
	mov		r4, #0x0
	cmp		r4, r3
	bgt		_0800b444
	ldr		r2, [sp, #0x48]
_0800b3e8:
	mov		r1, #0x2
	ldr		r6, [sp, #0x1c]
	cmp		r6, #0xd
	bgt		_0800b3f2
	mov		r1, #0x1
_0800b3f2:
	ldrh	r0, [r2, #0x0]
	and		r1, r0
	cmp		r1, #0x0
	beq		_0800b43c
	ldr		r0, [sp, #0x1c]
	cmp		r0, #0x2
	bgt		_0800b422
	mov		r1, r8
	ldr		r0, [r1, #0x10]
	cmp		r0, #0x3
	beq		_0800b40e
	ldr		r2, [sp, #0x18]
	cmp		r2, #0x0
	beq		_0800b41c
_0800b40e:
	mov		r4, #0x5
	str		r4, [sp, #0x24]
	b		_0800b432

_0800b414:	.4byte 0x030052C8
_0800b418:	.4byte 0x03005220

_0800b41c:
	mov		r6, #0x3
	str		r6, [sp, #0x24]
	b		_0800b432
_0800b422:
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [sp, #0x24]
	ldr		r1, [sp, #0x1c]
	cmp		r1, #0xd
	bgt		_0800b432
	mov		r2, #0x64
	str		r2, [sp, #0x24]
_0800b432:
	mov		r4, #0x13
	str		r4, [sp, #0x1c]
	mov		r6, #0x0
	str		r6, [sp, #0x20]
	b		_0800b444
_0800b43c:
	add		r2, #0x2
	add		r4, #0x1
	cmp		r4, r3
	ble		_0800b3e8
_0800b444:
	cmp		r5, #0x0
	beq		_0800b460
	mov		r0, #0x0
	mov		r1, r8
	str		r0, [r1, #0x50]
	ldr		r0, [r1, #0x10]
	mov		r2, #0x3
	str		r2, [sp, #0x24]
	cmp		r0, #0x3
	bne		_0800b45c
	mov		r4, #0x5
	str		r4, [sp, #0x24]
_0800b45c:
	mov		r6, #0x14
	str		r6, [sp, #0x1c]
_0800b460:
	ldr		r0, [sp, #0x1c]
	cmp		r0, #0x15
	bls		_0800b46a
	bl		sub_0800c3c6
_0800b46a:
	lsl		r0, r0, #0x2
	ldr		r1, _0800b474
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0800b474:	.4byte 0x0800b478
_0800b478:	.4byte 0x0800b4d0

.incbin "base.gba", 0xB47C, 0x4C
_0800b4c8:	.4byte 0x0800c1e6

.incbin "base.gba", 0xB4CC, 0x4
	thumb_func_end sub_0800b232


.incbin "base.gba", 0xB4D0, 0xC42

_0800c112:

.incbin "base.gba", 0xC112, 0xD4

_0800c1e6:

.incbin "base.gba", 0xC1E6, 0x24
_0800c20a:

.incbin "base.gba", 0xC20A, 0x6
_0800c210:

.incbin "base.gba", 0xC210, 0x1A
_0800c22a:

.incbin "base.gba", 0xC22A, 0x24
_0800c24e:

.incbin "base.gba", 0xC24E, 0x6
_0800c254:	.4byte 0x00001216
_0800c258:	.4byte 0x0000121A

_0800c25c:

.incbin "base.gba", 0xC25C, 0x24
_0800c280:	.4byte 0x00001216
_0800c284:	.4byte 0x0000121A

_0800c288:

.incbin "base.gba", 0xC288, 0x8
_0800c290:

.incbin "base.gba", 0xC290, 0x20
_0800c2b0:

.incbin "base.gba", 0xC2B0, 0xC
_0800c2bc:	.4byte 0x080f4b1c
_0800c2c0:	.4byte 0x080f4b80

_0800c2c4:

.incbin "base.gba", 0xC2C4, 0xA
_0800c2ce:

.incbin "base.gba", 0xC2CE, 0x10
_0800c2de:

.incbin "base.gba", 0xC2DE, 0x3A
_0800c318:

.incbin "base.gba", 0xC318, 0xC
_0800c324:

.incbin "base.gba", 0xC324, 0xA
_0800c32e:

.incbin "base.gba", 0xC32E, 0x8
_0800c336:

.incbin "base.gba", 0xC336, 0xE
_0800c344:	.4byte 0x0000050C
_0800c348:	.4byte 0x000011E8

.incbin "base.gba", 0xC34C, 0x7A
	non_word_aligned_thumb_func_start sub_0800c3c6 
sub_0800c3c6:
	mov		r0, r8
	bl		sub_08003170
	cmp		r0, #0x0
	beq		_0800c3da
	mov		r0, #0xa7
	lsl		r0, r0, #0x3
	add		r1, r7, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
_0800c3da:
	mov		r0, r8
	bl		sub_08008cec
	ldr		r1, _0800c590
	add		r1, r8
	mov		r0, #0x7
	bl		sub_08005d84
	mov		r0, r8
	bl		sub_08009c5c
	mov		r0, r8
	bl		sub_08009568
	mov		r0, r8
	bl		sub_0800972c
	mov		r0, r8
	bl		sub_0800a17c
	mov		r0, r8
	bl		sub_08009f84
	mov		r0, r8
	ldr		r1, [sp, #0x18]
	bl		sub_080090fc
	mov		r2, #0xe7
	lsl		r2, r2, #0x3
	add		r2, r8
	mov		r1, r8
	ldr		r0, [r1, #0x10]
	cmp		r0, #0x0
	bne		_0800c456
	mov		r0, #0xfd
	lsl		r0, r0, #0x3
	add		r0, r8
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x0
	bne		_0800c456
	mov		r1, #0xc6
	lsl		r1, r1, #0x4
	add		r1, r8
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x40
	ble		_0800c456
	str		r3, [r1, #0x0]
	ldr		r1, [r2, #0x4]
	add		r1, #0x1
	mov		r0, #0x3
	and		r1, r0
	str		r1, [r2, #0x4]
	ldr		r2, [r2, #0x0]
	lsl		r2, r2, #0x2
	add		r2, r2, r1
	ldr		r1, _0800c594
	mov		r0, #0x2
	str		r0, [r1, #0x0]
	ldr		r0, _0800c598
	str		r2, [r0, #0x0]
_0800c456:
	ldr		r0, [r7, #0x8]
	ldr		r2, [r7, #0x4]
	cmp		r0, r2
	bne		_0800c466
	ldr		r1, [r7, #0xc]
	ldr		r0, [r7, #0x10]
	cmp		r1, r0
	beq		_0800c478
_0800c466:
	mov		r0, r8
	add		r1, r2, #0x0
	mov		r2, #0x0
	bl		sub_08008f7c
	ldr		r0, [r7, #0x4]
	str		r0, [r7, #0x8]
	ldr		r0, [r7, #0xc]
	str		r0, [r7, #0x10]
_0800c478:
	mov		r0, #0x0
	bl		sub_08028130
	add		r2, r0, #0x0
	mov		r3, #0xb0
	lsl		r3, r3, #0x1
	add		r2, r2, r3
	ldr		r0, _0800c59c
	add		r1, r0, #0x0
	add		r1, #0x20
	mov		r4, r8
	ldr		r3, [r4, #0x4c]
	mov		r4, #0x10
	str		r4, [sp, #0x0]
	bl		sub_08005ddc
	ldr		r5, _0800c5a0
	add		r5, r8
	ldrh	r0, [r5, #0x0]
	mov		r6, #0x0
	mov		r0, #0x0
	strh	r0, [r5, #0x0]
	ldr		r4, _0800c5a4
	add		r4, r8
	ldrh	r1, [r4, #0x0]
	ldr		r0, _0800c5a8
	and		r0, r1
	ldrh	r1, [r4, #0x0]
	strh	r0, [r4, #0x0]
	mov		r0, r8
	ldr		r3, [r0, #0x10]
	cmp		r3, #0x3
	beq		_0800c4f6
	ldr		r0, _0800c5ac
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0800c4f6
	ldr		r1, [r7, #0x0]
	mov		r2, #0x2
	cmp		r3, #0x1
	beq		_0800c4d0
	mov		r3, r8
	ldr		r2, [r3, #0x14]
_0800c4d0:
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	add		r0, r0, r2
	lsl		r0, r0, #0x2
	ldr		r1, _0800c5b0
	add		r1, r8
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0800c4f6
	ldrh	r0, [r5, #0x0]
	ldr		r0, _0800c5b4
	strh	r0, [r5, #0x0]
	ldrh	r1, [r4, #0x0]
	mov		r0, #0x40
	orr		r1, r0
	ldrh	r0, [r4, #0x0]
	orr		r1, r6
	strh	r1, [r4, #0x0]
_0800c4f6:
	mov		r6, r8
	ldr		r4, [r6, #0x10]
	cmp		r4, #0x1
	bne		_0800c51e
	mov		r1, #0xa6
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800c51e
	ldr		r1, [r7, #0x0]
	lsl		r1, r1, #0x2
	ldr		r0, [r7, #0x4]
	add		r1, r1, r0
	mov		r0, r8
	bl		sub_08008de4
	ldr		r2, _0800c5b8
	add		r0, r7, r2
	str		r4, [r0, #0x0]
_0800c51e:
	mov		r0, r8
	bl		sub_08009970
	mov		r0, r8
	bl		sub_0800393c
	mov		r0, r8
	bl		sub_08003924
	cmp		r0, #0x0
	beq		_0800c5cc
	ldr		r0, _0800c5bc
	ldr		r5, _0800c5c0
	str		r0, [r5, #0x4]
	ldr		r0, _0800c5c4
	str		r0, [r5, #0x0]
	mov		r4, #0x0
	str		r4, [r5, #0x8]
	mov		r0, #0x1
	strb	r0, [r5, #0xe]
	bl		sub_0802a130
	mov		r0, #0x0
	bl		sub_08028130
	strh	r4, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	bl		_DrawFrameRunAudio
	ldrb	r1, [r5, #0xc]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800c578
	add		r4, r5, #0x0
	mov		r5, #0x2
_0800c56a:
	bl		_DrawFrameRunAudio
	ldrb	r1, [r4, #0xc]
	add		r0, r5, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_0800c56a
_0800c578:
	ldr		r1, _0800c5c8
	add		r1, r8
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	b		_0800c24e

.incbin "base.gba", 0xC582, 0xE

.align 2, 0
_0800c590:	.4byte 0x00000D88
_0800c594:	.4byte 0x0203EEB8
_0800c598:	.4byte 0x0203EEBC
_0800c59c:	.4byte 0x080ce084
_0800c5a0:	.4byte 0x0000122C
_0800c5a4:	.4byte 0x000011FE
_0800c5a8:	.4byte 0x0000FFBF
_0800c5ac:	.4byte 0x000011E4
_0800c5b0:	.4byte 0x000010A4
_0800c5b4:	.4byte 0x00002222
_0800c5b8:	.4byte 0x00000534
_0800c5bc:	.4byte 0x0802A1FD
_0800c5c0:	.4byte 0x030052F0
_0800c5c4:	.4byte 0x0802A239
_0800c5c8:	.4byte 0x0000109C

_0800c5cc:
	ldr		r3, _0800c600
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800c5dc
	mov		r0, #0x1
	bl		sub_080281fc
_0800c5dc:
	mov		r4, #0xa7
	lsl		r4, r4, #0x3
	add		r0, r7, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0800c5ec
	bl		sub_0800b232
_0800c5ec:
	bl		sub_08029f34
	ldr		r1, _0800c604
	ldr		r2, _0800c608
	ldr		r3, _0800c60c
	bl		sub_08029ee4
	bl		sub_0800b232
	
	.2byte	0x0
	
_0800c600:
	lsl		r4, r6, #0x14
		
	.2byte	0x0
	
_0800c604:
	strb	r0, [r0, r0]
	lsl		r1, r0, #0x8
_0800c608:
	str		r0, [r0, r0]
	lsl		r1, r0, #0x18
_0800c60c:
	lsl		r0, r0, #0x18
	strh	r0, [r0, #0x0]
_0800c610:
	add		sp, #0x50
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	sub		sp, #0x4
	mov		r1, sp
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r0, sp
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x31
	bhi		_0800c63c
_0800c630:
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x31
	bls		_0800c630
_0800c63c:
	ldr		r2, _0800c664
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0800c668
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	strh	r0, [r2, #0x0]
	ldr		r3, _0800c66c
	ldrh	r1, [r3, #0x0]
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	and		r0, r1
	strh	r0, [r3, #0x0]
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0800c670
	and		r0, r1
	strh	r0, [r2, #0x0]
	add		sp, #0x4
	bx		lr

.incbin "base.gba", 0xC662, 0x2

_0800c664:	.4byte BG0Control
_0800c668:	.4byte 0x0000FF7F
_0800c66c:	.4byte MosaicSize
_0800c670:	.4byte 0x0000FFBF
	thumb_func_end sub_0800c3c6

	thumb_func_start sub_0800c674
sub_0800c674:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	lsl		r7, r3, #0xc
	add		r2, sp, #0x4
	add		r3, sp, #0x8
	mov		r1, sp
	bl		sub_08048958
	ldr		r2, [sp, #0x0]
	mov		r0, #0xf
	mov		r10, r0
	mov		r3, #0xf
	and		r2, r3
	ldr		r0, [sp, #0x4]
	lsr		r1, r0, #0x4
	mov		r5, r10
	and		r1, r5
	and		r0, r3
	mov		r5, #0xb
	add		r5, r5, r4
	mov		r9, r5
	add		r0, r0, r4
	mov		r8, r0
	add		r1, r1, r4
	mov		r12, r1
	add		r5, r4, #0x0
	add		r5, #0xa
	add		r1, r4, r2
	ldr		r0, [sp, #0x8]
	lsr		r2, r0, #0x4
	mov		r0, r10
	and		r2, r0
	ldr		r0, [sp, #0x8]
	and		r3, r0
	str		r3, [sp, #0xC]
	mov		r3, #0x1
	mov		r10, r3
_0800c6ce:
	add		r0, r7, #0x0
	orr		r0, r1
	strh	r0, [r6, #0x0]
	add		r0, r7, #0x0
	orr		r0, r5
	strh	r0, [r6, #0x2]
	add		r0, r7, #0x0
	mov		r3, r12
	orr		r0, r3
	strh	r0, [r6, #0x4]
	add		r0, r7, #0x0
	mov		r3, r8
	orr		r0, r3
	strh	r0, [r6, #0x6]
	add		r0, r7, #0x0
	mov		r3, r9
	orr		r0, r3
	strh	r0, [r6, #0x8]
	add		r0, r4, r2
	orr		r0, r7
	strh	r0, [r6, #0xa]
	ldr		r3, [sp, #0xC]
	add		r0, r4, r3
	orr		r0, r7
	strh	r0, [r6, #0xc]
	mov		r0, #0x20
	add		r9, r0
	add		r8, r0
	add		r12, r0
	add		r5, #0x20
	add		r6, #0x40
	add		r1, #0x20
	add		r4, #0x20
	mov		r3, #0x1
	neg		r3, r3
	add		r10, r3
	mov		r0, r10
	cmp		r0, #0x0
	bge		_0800c6ce
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0800c674

	thumb_func_start sub_0800c72c
sub_0800c72c:
	push	{ r4, r5, r6, lr }
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6 }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _0800c8d4
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r6, _0800c8d8
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	add		r3, r6, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0800c8dc
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	mov		r1, #0xc0
	lsl		r1, r1, #0x5
	add		r2, r5, r1
	add		r1, r4, #0x0
	add		r3, r6, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0800c8e0
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	mov		r3, #0xc0
	lsl		r3, r3, #0x6
	add		r2, r5, r3
	add		r1, r4, #0x0
	add		r3, r6, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	bl		sub_08029f34
	ldr		r1, _0800c8e4
	mov		r3, #0xb0
	lsl		r3, r3, #0x7
	add		r2, r5, r3
	ldr		r3, _0800c8e8
	mov		r9, r3
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _0800c8ec
	mov		r3, #0xc8
	lsl		r3, r3, #0x7
	add		r2, r5, r3
	ldr		r3, _0800c8f0
	mov		r8, r3
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _0800c8f4
	mov		r3, #0xd8
	lsl		r3, r3, #0x7
	add		r2, r5, r3
	ldr		r6, _0800c8f8
	add		r3, r6, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0800c8fc
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	mov		r1, #0xe8
	lsl		r1, r1, #0x7
	add		r2, r5, r1
	add		r1, r4, #0x0
	mov		r3, r9
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _0800c900
	mov		r2, #0xf0
	lsl		r2, r2, #0x7
	add		r5, r5, r2
	ldr		r3, _0800c904
	add		r2, r5, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0800c908
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800c90c
	add		r1, r4, #0x0
	mov		r3, r8
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0800c910
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800c914
	add		r1, r4, #0x0
	add		r3, r6, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0800c918
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800c91c
	add		r1, r4, #0x0
	add		r3, r6, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0800c920
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800c924
	add		r1, r4, #0x0
	add		r3, r6, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0800c928
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800c92c
	ldr		r3, _0800c930
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0800c934
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800c938
	add		r1, r4, #0x0
	add		r3, r6, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0800c93c
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800c940
	add		r1, r4, #0x0
	mov		r3, r9
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	bl		_DrawFrameRunAudio
	ldr		r0, _0800c944
	ldr		r1, _0800c948
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	bl		_DrawFrameRunAudio
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0800c8d4:	.4byte 0x080c558c
_0800c8d8:	.4byte 0x80000C00
_0800c8dc:	.4byte 0x080c5bc0
_0800c8e0:	.4byte 0x080c6300
_0800c8e4:	.4byte 0x080c87cc
_0800c8e8:	.4byte 0x80000600
_0800c8ec:	.4byte 0x080c7bcc
_0800c8f0:	.4byte 0x80000400
_0800c8f4:	.4byte 0x0807f190
_0800c8f8:	.4byte 0x80000200
_0800c8fc:	.4byte 0x0809301c
_0800c900:	.4byte 0x08080968
_0800c904:	.4byte 0x80000120
_0800c908:	.4byte 0x080ce26c
_0800c90c:	.4byte 0x06015C00
_0800c910:	.4byte 0x080ce43c
_0800c914:	.4byte 0x06016400
_0800c918:	.4byte 0x080ce524
_0800c91c:	.4byte 0x06016C00
_0800c920:	.4byte 0x080ce690
_0800c924:	.4byte 0x06017000
_0800c928:	.4byte 0x080ce8a8
_0800c92c:	.4byte 0x06017800
_0800c930:	.4byte 0x80000100
_0800c934:	.4byte 0x080ce918
_0800c938:	.4byte 0x06017C00
_0800c93c:	.4byte 0x080cecf4
_0800c940:	.4byte 0x06015000
_0800c944:	.4byte 0x080cec7c
_0800c948:	.4byte 0x06014C00
	thumb_func_end sub_0800c72c

	thumb_func_start sub_0800c94c
sub_0800c94c:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r0, _0800ca14
	add		r7, r4, r0
	add		r4, r7, #0x0
	ldr		r0, _0800ca18
	ldr		r5, _0800ca1c
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, [r4, #0x24]
	cmp		r0, #0x0
	beq		_0800c98e
	mov		r2, #0x0
	add		r1, r5, #0x0
	add		r6, r1, #0x0
	add		r6, #0x2e
_0800c96e:
	lsl		r0, r2, #0x6
	add		r5, r2, #0x1
	add		r4, r0, r6
	add		r0, r0, r1
	add		r2, r0, #0x0
	add		r2, #0x32
	mov		r3, #0x3
_0800c97c:
	ldrh	r0, [r4, #0x0]
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0800c97c
	add		r2, r5, #0x0
	cmp		r2, #0x1f
	ble		_0800c96e
_0800c98e:
	bl		sub_08029f34
	ldr		r4, _0800ca1c
	add		r1, r4, #0x0
	mov		r2, #0xc0
	lsl		r2, r2, #0x13
	ldr		r3, _0800ca20
	bl		sub_08029ee4
	ldr		r0, [r7, #0x4]
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800ca0e
	mov		r0, #0x0
	add		r6, r4, #0x0
	add		r6, #0x80
_0800c9b0:
	lsl		r1, r0, #0x7
	add		r7, r0, #0x1
	add		r0, r6, r1
	add		r4, r0, #0x0
	add		r4, #0xd8
	add		r3, r0, #0x0
	add		r3, #0x58
	add		r2, r0, #0x0
	add		r2, #0x98
	add		r1, r1, r6
	add		r1, #0x18
	mov		r5, #0x10
_0800c9c8:
	ldrh	r0, [r2, #0x0]
	strh	r0, [r1, #0x0]
	ldrh	r0, [r4, #0x0]
	strh	r0, [r3, #0x0]
	add		r4, #0x2
	add		r3, #0x2
	add		r2, #0x2
	add		r1, #0x2
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0800c9c8
	add		r0, r7, #0x0
	cmp		r0, #0x6
	ble		_0800c9b0
	ldr		r0, _0800ca24
	add		r4, r0, #0x0
	sub		r4, #0xa8
	add		r3, r0, #0x0
	add		r3, #0x58
	add		r2, r0, #0x0
	sub		r2, #0xe8
	add		r1, r0, #0x0
	add		r1, #0x18
	mov		r5, #0x10
_0800c9f8:
	ldrh	r0, [r2, #0x0]
	strh	r0, [r1, #0x0]
	ldrh	r0, [r4, #0x0]
	strh	r0, [r3, #0x0]
	add		r4, #0x2
	add		r3, #0x2
	add		r2, #0x2
	add		r1, #0x2
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0800c9f8
_0800ca0e:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800ca14:	.4byte 0x00000D44
_0800ca18:	.4byte 0x0809583c
_0800ca1c:	.4byte 0x0200EC00
_0800ca20:	.4byte 0x80000400
_0800ca24:	.4byte 0x0200F000
	thumb_func_end sub_0800c94c

	thumb_func_start sub_0800ca28
sub_0800ca28:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	add		r4, r1, #0x0
	lsl		r5, r0, #0x6
	ldr		r6, _0800ca70
	add		r1, r5, r6
	cmp		r4, #0x4
	bgt		_0800ca52
	ldr		r2, _0800ca74
	add		r0, r4, r2
	ldr		r7, _0800ca78
	add		r2, r7, #0x0
	orr		r0, r2
	strh	r0, [r1, #0x0]
	add		r1, #0x40
	ldr		r7, _0800ca7c
	add		r0, r4, r7
	orr		r0, r2
	strh	r0, [r1, #0x0]
_0800ca52:
	add		r0, r6, #0x2
	add		r5, r5, r0
	mov		r6, #0xd8
	lsl		r6, r6, #0x2
	mov		r4, #0xc0
	lsl		r4, r4, #0x8
	mov		r0, #0x10
	and		r0, r3
	cmp		r0, #0x0
	beq		_0800ca80
	mov		r1, #0x0
	sub		r6, #0xa0
	mov		r4, #0xf0
	lsl		r4, r4, #0x8
	b		_0800ca96

_0800ca70:	.4byte 0x0200F402
_0800ca74:	.4byte 0x00000321
_0800ca78:	.4byte 0xFFFFF000
_0800ca7c:	.4byte 0x00000341

_0800ca80:
	mov		r0, #0x7
	and		r0, r3
	bl		sub_0800ebfc
	mov		r1, #0x2
	cmp		r0, #0x3
	beq		_0800ca96
	add		r1, r0, #0x0
	cmp		r1, #0x2
	bne		_0800ca96
	mov		r1, #0x3
_0800ca96:
	lsl		r1, r1, #0x2
	add		r1, r6, r1
	add		r0, r4, #0x0
	orr		r0, r1
	strh	r0, [r5, #0x0]
	add		r0, r1, #0x1
	orr		r0, r4
	strh	r0, [r5, #0x2]
	add		r2, r5, #0x0
	add		r2, #0x40
	add		r0, r1, #0x2
	orr		r0, r4
	strh	r0, [r2, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x42
	add		r1, #0x3
	orr		r4, r1
	strh	r4, [r0, #0x0]
	ldr		r0, [sp, #0x0+0x18]
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r2, r8
	lsl		r1, r2, #0x6
	ldr		r2, _0800cadc
	add		r1, r1, r2
	mov		r2, #0xc8
	lsl		r2, r2, #0x2
	mov		r3, #0xf
	bl		sub_0800c674
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800cadc:	.4byte 0x0200F408
	thumb_func_end sub_0800ca28

	thumb_func_start sub_0800cae0
sub_0800cae0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	ldr		r1, _0800cbf4
	add		r5, r0, r1
	mov		r0, #0x0
	str		r0, [sp, #0x4]
	ldr		r4, _0800cbf8
	ldr		r2, _0800cbfc
	add		r0, sp, #0x4
	add		r1, r4, #0x0
	bl		_CallHardwareSetCpuFast
	mov		r6, #0x0
	ldr		r2, _0800cc00
	add		r7, r2, #0x0
	ldr		r0, _0800cc04
	add		r2, r0, #0x0
	ldr		r1, _0800cc08
	add		r3, r1, #0x0
	add		r1, r4, #0x0
	add		r1, #0x82
	add		r4, #0x42
_0800cb14:
	add		r0, r6, r7
	orr		r0, r2
	strh	r0, [r4, #0x0]
	add		r0, r6, r3
	orr		r0, r2
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	add		r4, #0x2
	add		r6, #0x1
	cmp		r6, #0x6
	ble		_0800cb14
	ldr		r0, _0800cc0c
	mov		r6, #0x0
	ldr		r2, [r5, #0x0]
	mov		r9, r2
	ldr		r2, [r5, #0x4]
	ldr		r5, [r5, #0x24]
	mov		r10, r5
	mov		r7, #0xcd
	lsl		r7, r7, #0x2
	mov		r8, r7
	ldr		r1, _0800cc04
	add		r4, r1, #0x0
	add		r7, #0x20
	add		r5, r7, #0x0
	add		r3, r0, #0x0
	add		r3, #0x40
	add		r1, r0, #0x0
_0800cb4c:
	mov		r7, r8
	add		r0, r6, r7
	orr		r0, r4
	strh	r0, [r1, #0x0]
	add		r0, r6, r5
	orr		r0, r4
	strh	r0, [r3, #0x0]
	add		r3, #0x2
	add		r1, #0x2
	add		r6, #0x1
	cmp		r6, #0x5
	ble		_0800cb4c
	add		r9, r2
	mov		r0, r9
	cmp		r0, #0x0
	bge		_0800cb6e
	add		r0, #0x3
_0800cb6e:
	asr		r1, r0, #0x2
	mov		r0, #0x3
	mov		r2, r9
	and		r0, r2
	mov		r7, r10
	cmp		r7, #0x0
	bne		_0800cc10
	mov		r6, #0x0
	lsl		r0, r0, #0x5
	str		r0, [sp, #0x8]
	lsl		r1, r1, #0x7
	mov		r10, r1
	mov		r8, r0
	mov		r7, r10
	mov		r0, #0x3
	str		r0, [sp, #0x10]
_0800cb8e:
	bl		sub_08057370
	lsl		r4, r6, #0x2
	add		r0, r7, r0
	add		r0, r8
	add		r0, r4, r0
	add		r0, #0x64
	ldrb	r5, [r0, #0x0]
	bl		sub_08057370
	add		r0, r7, r0
	add		r0, r8
	add		r4, r4, r0
	add		r4, #0x64
	ldrh	r0, [r4, #0x2]
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0x10]
	add		r1, r6, #0x0
	mov		r2, r9
	add		r3, r5, #0x0
	bl		sub_0800ca28
	ldr		r1, [sp, #0x10]
	add		r1, #0x2
	str		r1, [sp, #0x10]
	add		r6, #0x1
	cmp		r6, #0x4
	ble		_0800cb8e
	bl		sub_08057370
	add		r0, r10
	ldr		r2, [sp, #0x8]
	add		r0, r2, r0
	add		r0, #0x78
	ldrb	r4, [r0, #0x0]
	bl		sub_08057370
	add		r0, r10
	ldr		r7, [sp, #0x8]
	add		r0, r7, r0
	add		r0, #0x78
	ldrh	r0, [r0, #0x2]
	str		r0, [sp, #0x0]
	mov		r0, #0xf
	mov		r1, #0x5
	mov		r2, r9
	add		r3, r4, #0x0
	bl		sub_0800ca28
	b		_0800cc90

.incbin "base.gba", 0xCBF2, 0x2

_0800cbf4:	.4byte 0x00000D44
_0800cbf8:	.4byte 0x0200F400
_0800cbfc:	.4byte 0x01000200
_0800cc00:	.4byte 0x0000032D
_0800cc04:	.4byte 0xFFFFF000
_0800cc08:	.4byte 0x0000034D
_0800cc0c:	.4byte 0x0200F742

_0800cc10:
	mov		r6, #0x0
	lsl		r0, r0, #0x5
	str		r0, [sp, #0x8]
	lsl		r1, r1, #0x7
	mov		r10, r1
	mov		r8, r0
	mov		r7, r10
	mov		r0, #0x3
	str		r0, [sp, #0xC]
_0800cc22:
	bl		sub_08057370
	lsl		r4, r6, #0x2
	add		r0, r7, r0
	add		r0, r8
	add		r0, r4, r0
	mov		r1, #0xb9
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	ldrb	r5, [r0, #0x0]
	bl		sub_08057370
	add		r0, r7, r0
	add		r0, r8
	add		r4, r4, r0
	mov		r2, #0xb9
	lsl		r2, r2, #0x2
	add		r4, r4, r2
	ldrh	r0, [r4, #0x2]
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0xC]
	add		r1, r6, #0x0
	mov		r2, r9
	add		r3, r5, #0x0
	bl		sub_0800ca28
	ldr		r0, [sp, #0xC]
	add		r0, #0x2
	str		r0, [sp, #0xC]
	add		r6, #0x1
	cmp		r6, #0x4
	ble		_0800cc22
	bl		sub_08057370
	add		r0, r10
	ldr		r1, [sp, #0x8]
	add		r0, r1, r0
	mov		r4, #0xbe
	lsl		r4, r4, #0x2
	add		r0, r0, r4
	ldrb	r5, [r0, #0x0]
	bl		sub_08057370
	add		r0, r10
	ldr		r2, [sp, #0x8]
	add		r0, r2, r0
	add		r0, r0, r4
	ldrh	r0, [r0, #0x2]
	str		r0, [sp, #0x0]
	mov		r0, #0xf
	mov		r1, #0x5
	mov		r2, r9
	add		r3, r5, #0x0
	bl		sub_0800ca28
_0800cc90:
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0800cae0

	thumb_func_start sub_0800cca0
sub_0800cca0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	add		r4, r0, #0x0
	str		r1, [sp, #0x10]
	str		r2, [sp, #0x14]
	ldr		r0, _0800ce48
	add		r4, r4, r0
	mov		r0, #0x0
	str		r0, [sp, #0xc]
	add		r0, sp, #0xc
	ldr		r5, _0800ce4c
	ldr		r2, _0800ce50
	add		r1, r5, #0x0
	bl		_CallHardwareSetCpuFast
	ldr		r1, [r4, #0x0]
	ldr		r0, [r4, #0x4]
	add		r1, r1, r0
	mov		r10, r1
	mov		r2, #0x0
	mov		r1, #0xf0
	lsl		r1, r1, #0x2
	add		r6, r1, #0x0
	ldr		r7, _0800ce54
	add		r3, r7, #0x0
	ldr		r0, _0800ce58
	add		r4, r0, #0x0
	add		r1, r5, #0x0
	add		r1, #0xc4
	add		r5, #0x84
_0800cce4:
	add		r0, r2, r6
	orr		r0, r3
	strh	r0, [r5, #0x0]
	add		r0, r2, r4
	orr		r0, r3
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	add		r5, #0x2
	add		r2, #0x1
	cmp		r2, #0x8
	ble		_0800cce4
	mov		r0, r10
	bl		sub_0802d690
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	bl		sub_080567ec
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mov		r8, r0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r8, r0
	beq		_0800cd96
	mov		r1, r8
	lsl		r4, r1, #0x18
	lsr		r4, r4, #0x18
	add		r0, r4, #0x0
	bl		sub_08057850
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	str		r0, [sp, #0x18]
	add		r0, r4, #0x0
	bl		sub_08057878
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r9, r0
	add		r0, sp, #0x4
	bl		_MGBLoadUsername
	ldr		r0, _0800ce4c
	add		r3, sp, #0x4
	mov		r6, #0x1f
	mov		r12, r6
	mov		r7, #0xe2
	lsl		r7, r7, #0x1
	add		r2, r0, r7
	mov		r1, #0xc2
	lsl		r1, r1, #0x1
	add		r5, r0, r1
	mov		r4, #0x4
_0800cd50:
	ldrb	r0, [r3, #0x0]
	lsr		r1, r0, #0x5
	lsl		r1, r1, #0x6
	mov		r6, r12
	and		r0, r6
	add		r1, r1, r0
	mov		r0, #0xf0
	lsl		r0, r0, #0x8
	orr		r0, r1
	strh	r0, [r5, #0x0]
	add		r1, #0x20
	mov		r7, #0xf0
	lsl		r7, r7, #0x8
	orr		r1, r7
	strh	r1, [r2, #0x0]
	add		r3, #0x1
	add		r2, #0x2
	add		r5, #0x2
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0800cd50
	mov		r0, r9
	str		r0, [sp, #0x0]
	mov		r0, #0x8
	mov		r1, #0x5
	mov		r2, #0x0
	ldr		r3, [sp, #0x18]
	bl		sub_0800ca28
	ldr		r1, [sp, #0x18]
	ldr		r6, [sp, #0x10]
	str		r1, [r6, #0x0]
	mov		r7, r8
	ldr		r0, [sp, #0x14]
	str		r7, [r0, #0x0]
_0800cd96:
	mov		r6, #0x0
_0800cd98:
	lsl		r0, r6, #0x18
	lsr		r0, r0, #0x18
	bl		sub_080575e8
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mov		r8, r0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r8, r0
	beq		_0800ce5c
	mov		r1, r8
	lsl		r0, r1, #0x18
	lsr		r5, r0, #0x18
	add		r0, r5, #0x0
	bl		sub_080578d8
	add		r4, r0, #0x0
	lsl		r4, r4, #0x18
	asr		r4, r4, #0x18
	mov		r0, r10
	bl		sub_0802d690
	cmp		r4, r0
	bne		_0800ce5c
	add		r0, r5, #0x0
	bl		sub_08057850
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	str		r0, [sp, #0x18]
	add		r0, r5, #0x0
	bl		sub_08057878
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r9, r0
	add		r0, r5, #0x0
	add		r1, sp, #0x4
	bl		sub_080578a0
	ldr		r0, _0800ce4c
	add		r2, sp, #0x4
	mov		r6, #0xb1
	lsl		r6, r6, #0x2
	add		r0, r0, r6
	mov		r7, #0x1f
	mov		r12, r7
	mov		r1, #0xf
	lsl		r3, r1, #0xc
	add		r6, r0, #0x0
	add		r6, #0x40
	add		r5, r0, #0x0
	mov		r4, #0x4
_0800ce04:
	ldrb	r0, [r2, #0x0]
	lsr		r1, r0, #0x5
	lsl		r1, r1, #0x6
	mov		r7, r12
	and		r0, r7
	add		r1, r1, r0
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r5, #0x0]
	add		r1, #0x20
	orr		r1, r3
	strh	r1, [r6, #0x0]
	add		r2, #0x1
	add		r6, #0x2
	add		r5, #0x2
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0800ce04
	mov		r0, r9
	str		r0, [sp, #0x0]
	mov		r0, #0xd
	mov		r1, #0x5
	mov		r2, #0x0
	ldr		r3, [sp, #0x18]
	bl		sub_0800ca28
	ldr		r1, [sp, #0x18]
	ldr		r6, [sp, #0x10]
	str		r1, [r6, #0x4]
	mov		r7, r8
	ldr		r0, [sp, #0x14]
	str		r7, [r0, #0x4]
	b		_0800ce62

.incbin "base.gba", 0xCE46, 0x2

_0800ce48:	.4byte 0x00000D44
_0800ce4c:	.4byte 0x0200F400
_0800ce50:	.4byte 0x01000200
_0800ce54:	.4byte 0xFFFFD000
_0800ce58:	.4byte 0x000003C9

_0800ce5c:
	add		r6, #0x1
	cmp		r6, #0x1
	ble		_0800cd98
_0800ce62:
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xCE72, 0x2
	thumb_func_end sub_0800cca0

	thumb_func_start sub_0800ce74
sub_0800ce74:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r8, r0
	ldr		r0, _0800d02c
	add		r0, r8
	str		r0, [sp, #0x0]
	mov		r5, #0xc0
	lsl		r5, r5, #0x13
	mov		r4, #0x7
_0800ce8e:
	bl		sub_08029f34
	ldr		r1, _0800d030
	add		r2, r5, #0x0
	ldr		r3, _0800d034
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	mov		r1, #0xc0
	lsl		r1, r1, #0x5
	add		r5, r5, r1
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0800ce8e
	mov		r0, r8
	bl		sub_080038ac
	ldr		r4, _0800d038
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r4, _0800d03c
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r4, _0800d040
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe0
	add		r0, r4, #0x0
	mov		r2, #0x10
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x0
	bl		sub_08028130
	add		r4, r0, #0x0
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x0
	bl		sub_08028130
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	bl		_DrawFrameRunAudio
	ldr		r5, _0800d044
	ldr		r1, _0800d048
	add		r0, r5, #0x0
	bl		sub_0800c72c
	ldr		r0, _0800d04c
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r6, _0800d050
	ldr		r7, _0800d054
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	add		r3, r7, #0x0
	bl		sub_08029ee4
	ldr		r4, _0800d058
	add		r4, r8
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0800cf60
	bl		sub_08029f34
	ldrb	r1, [r4, #0x0]
	add		r1, #0x5
	lsl		r1, r1, #0x5
	add		r1, r1, r5
	ldr		r3, _0800d05c
	add		r2, r6, #0x0
	bl		sub_08029ee4
_0800cf60:
	ldr		r4, _0800d060
	add		r4, r8
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0800cf7e
	bl		sub_08029f34
	ldrb	r1, [r4, #0x0]
	add		r1, #0xf
	lsl		r1, r1, #0x5
	add		r1, r1, r5
	ldr		r2, _0800d064
	ldr		r3, _0800d05c
	bl		sub_08029ee4
_0800cf7e:
	bl		_DrawFrameRunAudio
	ldr		r0, _0800d068
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800d06c
	ldr		r3, _0800d070
	add		r1, r5, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0800d074
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800d078
	add		r1, r5, #0x0
	add		r3, r7, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0800d07c
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800d080
	ldr		r3, _0800d084
	add		r1, r5, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0800d088
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800cfe8
	bl		sub_08029f34
	ldr		r1, _0800d08c
	ldr		r2, _0800d090
	ldr		r3, _0800d094
	bl		sub_08029ee4
_0800cfe8:
	bl		_DrawFrameRunAudio
	mov		r7, #0x0
_0800cfee:
	lsl		r2, r7, #0x1
	add		r1, r2, r7
	lsl		r1, r1, #0x2
	ldr		r0, _0800d098
	add		r0, r8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r10, r2
	cmp		r0, #0x0
	beq		_0800d0a4
	lsl		r6, r7, #0x2
	add		r1, r7, #0x1
	str		r1, [sp, #0x4]
	lsl		r0, r7, #0x3
	add		r0, r0, r6
	lsl		r4, r0, #0x8
	ldr		r2, _0800d09c
	mov		r5, #0x3
_0800d012:
	add		r1, r4, r2
	ldr		r0, _0800d0a0
	str		r2, [sp, #0x8]
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0xc0
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	sub		r5, #0x1
	ldr		r2, [sp, #0x8]
	cmp		r5, #0x0
	bge		_0800d012
	b		_0800d0d8

_0800d02c:	.4byte 0x00000D44
_0800d030:	.4byte 0x0203EEC4
_0800d034:	.4byte 0x81000C00
_0800d038:	.4byte 0x08092918
_0800d03c:	.4byte 0x080cdd3c
_0800d040:	.4byte 0x0809866c
_0800d044:	.4byte 0x0200C400
_0800d048:	.4byte 0x06008000
_0800d04c:	.4byte 0x080cf1f0
_0800d050:	.4byte 0x06017400
_0800d054:	.4byte 0x80000060
_0800d058:	.4byte 0x000011BC
_0800d05c:	.4byte 0x80000010
_0800d060:	.4byte 0x000011E2
_0800d064:	.4byte 0x06017460
_0800d068:	.4byte 0x080d766c
_0800d06c:	.4byte 0x06012400
_0800d070:	.4byte 0x80000200
_0800d074:	.4byte 0x080cf5d0
_0800d078:	.4byte 0x06007C00
_0800d07c:	.4byte 0x08098b0c
_0800d080:	.4byte 0x06004000
_0800d084:	.4byte 0x80000600
_0800d088:	.4byte 0x00001128
_0800d08c:	.4byte 0x08098fb8
_0800d090:	.4byte 0x06004660
_0800d094:	.4byte 0x80000100
_0800d098:	.4byte 0x000010AC
_0800d09c:	.4byte 0x02025400
_0800d0a0:	.4byte 0x080be378

_0800d0a4:
	mov		r5, #0x0
	lsl		r6, r7, #0x2
	add		r1, r7, #0x1
	str		r1, [sp, #0x4]
	ldr		r0, _0800d110
	mov		r9, r0
	lsl		r0, r7, #0x3
	add		r0, r0, r6
	lsl		r4, r0, #0x8
_0800d0b6:
	add		r0, r6, r5
	bl		sub_0802d690
	lsl		r0, r0, #0x2
	add		r0, r9
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x30]
	ldr		r1, _0800d114
	add		r1, r4, r1
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r1, #0xc0
	lsl		r1, r1, #0x2
	add		r4, r4, r1
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_0800d0b6
_0800d0d8:
	bl		_DrawFrameRunAudio
	mov		r1, r10
	add		r0, r1, r7
	lsl		r0, r0, #0x2
	ldr		r1, _0800d118
	add		r1, r8
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0800d124
	lsl		r0, r6, #0x1
	add		r0, r0, r6
	lsl		r4, r0, #0x8
	ldr		r6, _0800d11c
	mov		r5, #0x3
_0800d0f8:
	add		r1, r4, r6
	ldr		r0, _0800d120
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0xc0
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0800d0f8
	b		_0800d150

.incbin "base.gba", 0xD10E, 0x2

_0800d110:	.4byte 0x08102bf8
_0800d114:	.4byte 0x02025400
_0800d118:	.4byte 0x000010E8
_0800d11c:	.4byte 0x02008400
_0800d120:	.4byte 0x080c07fc

_0800d124:
	mov		r5, #0x0
	ldr		r7, _0800d230
	lsl		r0, r6, #0x1
	add		r0, r0, r6
	lsl		r4, r0, #0x8
_0800d12e:
	add		r0, r6, r5
	bl		sub_0802d6a0
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x30]
	ldr		r1, _0800d234
	add		r1, r4, r1
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r1, #0xc0
	lsl		r1, r1, #0x2
	add		r4, r4, r1
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_0800d12e
_0800d150:
	bl		_DrawFrameRunAudio
	ldr		r7, [sp, #0x4]
	cmp		r7, #0x4
	bgt		_0800d15c
	b		_0800cfee
_0800d15c:
	mov		r0, r8
	bl		sub_0800e468
	bl		_DrawFrameRunAudio
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r4, _0800d238
	mov		r0, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x0
	mov		r1, #0xd
	mov		r2, #0x2
	bl		sub_080281b0
	add		r7, r0, #0x0
	mov		r1, #0x0
	ldr		r6, _0800d23c
	mov		r0, #0xb0
	lsl		r0, r0, #0x8
	add		r5, r0, #0x0
_0800d19e:
	lsl		r0, r1, #0x6
	add		r4, r1, #0x1
	add		r2, r7, r0
	mov		r3, #0xb
_0800d1a6:
	ldrh	r1, [r2, #0x0]
	add		r0, r6, #0x0
	and		r0, r1
	orr		r0, r5
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0800d1a6
	add		r1, r4, #0x0
	cmp		r1, #0x1
	ble		_0800d19e
	mov		r0, #0x1
	bl		sub_080281fc
	ldr		r4, _0800d240
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, r8
	bl		sub_0800c94c
	bl		_DrawFrameRunAudio
	ldr		r4, _0800d244
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x2
	bl		sub_080281fc
	bl		_DrawFrameRunAudio
	mov		r0, r8
	bl		sub_0800cae0
	bl		sub_08029f34
	ldr		r1, _0800d248
	ldr		r2, _0800d24c
	ldr		r3, _0800d250
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	mov		r0, r8
	bl		sub_0800e4ec
	ldr		r1, [sp, #0x0]
	ldr		r0, [r1, #0x24]
	cmp		r0, #0x0
	bne		_0800d25c
	ldr		r0, _0800d254
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	ldr		r1, _0800d258
	b		_0800d264

_0800d230:	.4byte 0x08102bf8
_0800d234:	.4byte 0x02008400
_0800d238:	.4byte 0x0809538c
_0800d23c:	.4byte 0x00000FFF
_0800d240:	.4byte 0x0809583c
_0800d244:	.4byte 0x080995d8
_0800d248:	.4byte 0x0200F400
_0800d24c:	.4byte 0x06003000
_0800d250:	.4byte 0x80000400
_0800d254:	.4byte 0x000011FE
_0800d258:	.4byte 0x00004608

_0800d25c:
	ldr		r0, _0800d300
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	ldr		r1, _0800d304
_0800d264:
	strh	r1, [r0, #0x0]
	ldr		r1, _0800d308
	add		r1, r8
	ldrh	r0, [r1, #0x0]
	mov		r2, #0x0
	ldr		r0, _0800d30c
	strh	r0, [r1, #0x0]
	ldr		r1, _0800d310
	add		r1, r8
	ldrh	r0, [r1, #0x0]
	ldr		r0, _0800d314
	strh	r0, [r1, #0x0]
	ldr		r1, _0800d318
	add		r1, r8
	ldrh	r0, [r1, #0x0]
	ldr		r0, _0800d31c
	strh	r0, [r1, #0x0]
	ldr		r1, _0800d320
	add		r1, r8
	ldrh	r0, [r1, #0x0]
	mov		r0, #0xff
	strh	r0, [r1, #0x0]
	ldr		r1, _0800d324
	add		r1, r8
	ldrh	r0, [r1, #0x0]
	mov		r0, #0x10
	strh	r0, [r1, #0x0]
	ldr		r1, _0800d328
	add		r1, r8
	ldrh	r0, [r1, #0x0]
	mov		r0, #0xfa
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	ldr		r1, _0800d32c
	add		r1, r8
	mov		r0, #0x3
	str		r0, [r1, #0x0]
	mov		r0, #0x90
	lsl		r0, r0, #0x5
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, _0800d330
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, _0800d334
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, _0800d338
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, _0800d33c
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, _0800d340
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, _0800d344
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	strh	r2, [r0, #0x0]
	ldr		r0, _0800d348
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	strh	r2, [r0, #0x0]
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800d300:	.4byte 0x000011FE
_0800d304:	.4byte 0x00004604
_0800d308:	.4byte 0x00001204
_0800d30c:	.4byte 0x00004404
_0800d310:	.4byte 0x0000120A
_0800d314:	.4byte 0x0000400A
_0800d318:	.4byte 0x00001210
_0800d31c:	.4byte 0x00000207
_0800d320:	.4byte 0x00001216
_0800d324:	.4byte 0x0000121A
_0800d328:	.4byte 0x000011FC
_0800d32c:	.4byte 0x000011F8
_0800d330:	.4byte 0x00001202
_0800d334:	.4byte 0x00001206
_0800d338:	.4byte 0x00001208
_0800d33c:	.4byte 0x0000120C
_0800d340:	.4byte 0x0000120E
_0800d344:	.4byte 0x00001212
_0800d348:	.4byte 0x00001214
	thumb_func_end sub_0800ce74

	thumb_func_start sub_0800d34c
sub_0800d34c:
	push	{ r4, lr }
	ldr		r1, _0800d388
	add		r2, r0, r1
	ldr		r0, [r2, #0x28]
	add		r0, #0x1
	str		r0, [r2, #0x28]
	cmp		r0, #0x7
	ble		_0800d36c
	mov		r1, #0x0
	str		r1, [r2, #0x28]
	ldr		r0, [r2, #0x2c]
	add		r0, #0x1
	str		r0, [r2, #0x2c]
	cmp		r0, #0x6
	ble		_0800d36c
	str		r1, [r2, #0x2c]
_0800d36c:
	ldr		r1, [r2, #0x0]
	ldr		r0, [r2, #0x4]
	add		r0, r1, r0
	cmp		r0, #0x0
	bge		_0800d378
	add		r0, #0x3
_0800d378:
	asr		r0, r0, #0x2
	cmp		r0, #0x4
	bhi		_0800d40a
	lsl		r0, r0, #0x2
	ldr		r1, _0800d38c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0800d388:	.4byte 0x00000D44
_0800d38c:	.4byte 0x0800d390
_0800d390:	.4byte 0x0800d3a4

.incbin "base.gba", 0xD394, 0x10
	thumb_func_end sub_0800d34c


.incbin "base.gba", 0xD3A4, 0x66

_0800d40a:

.incbin "base.gba", 0xD40A, 0x12
	thumb_func_start sub_0800d41c
sub_0800d41c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0xc
	add		r4, r0, #0x0
	ldr		r0, _0800d524
	add		r6, r4, r0
	mov		r0, #0xee
	mov		r8, r0
	mov		r0, #0x60
	mov		r9, r0
	ldr		r5, [r6, #0x4]
	cmp		r5, #0x0
	beq		_0800d48a
	ldrh	r0, [r6, #0x20]
	add		r0, #0xee
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r1, _0800d528
	ldr		r2, [sp, #0x8]
	and		r2, r1
	orr		r2, r0
	str		r2, [sp, #0x8]
	ldr		r1, [r4, #0x4c]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	ldr		r1, _0800d52c
	lsl		r0, r0, #0x19
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0800d45e
	add		r0, #0x3f
_0800d45e:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x1
	asr		r0, r0, #0xf
	add		r0, #0x60
	lsl		r0, r0, #0x10
	ldr		r1, _0800d530
	and		r2, r1
	orr		r2, r0
	str		r2, [sp, #0x8]
	ldr		r0, _0800d534
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
_0800d48a:
	mov		r7, #0xc
	cmp		r5, r7
	beq		_0800d4d0
	ldrh	r0, [r6, #0x20]
	add		r0, r8
	mov		r2, #0x0
	add		r1, sp, #0x8
	strh	r0, [r1, #0x0]
	ldr		r1, [r4, #0x4c]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	ldr		r1, _0800d52c
	lsl		r0, r0, #0x19
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0800d4ac
	add		r0, #0x3f
_0800d4ac:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x1
	neg		r0, r0
	asr		r0, r0, #0xf
	add		r0, r9
	add		r1, sp, #0x8
	strh		r0, [r1, #0x2]
	ldr		r0, _0800d538
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
_0800d4d0:
	ldrh	r0, [r6, #0x20]
	add		r0, r8
	mov		r4, #0x0
	add		r1, sp, #0x8
	strh	r0, [r1, #0x0]
	mov		r0, #0x2c
	mul		r0, r5
	add		r1, r7, #0x0
	bl		sub_0807d80c
	sub		r0, #0x16
	add		r0, r9
	add		r5, sp, #0x8
	strh		r0, [r5, #0x2]
	ldr		r0, _0800d53c
	str		r4, [sp, #0x0]
	str		r4, [sp, #0x4]
	add		r1, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	ldrh	r0, [r6, #0x20]
	add		r0, r8
	add		r1, sp, #0x8
	strh	r0, [r1, #0x0]
	mov		r0, r9
	strh		r0, [r5, #0x2]
	ldr		r0, _0800d540
	str		r4, [sp, #0x0]
	str		r4, [sp, #0x4]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	add		sp, #0xc
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800d524:	.4byte 0x00000D44
_0800d528:	.4byte 0xffff0000
_0800d52c:	.4byte 0x08101068
_0800d530:	.4byte 0x0000FFFF
_0800d534:	.4byte 0x080e4764
_0800d538:	.4byte 0x080e476c
_0800d53c:	.4byte 0x080e4584
_0800d540:	.4byte 0x080e4554
	thumb_func_end sub_0800d41c

	thumb_func_start sub_0800d544
sub_0800d544:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	mov		r9, r0
	ldr		r4, _0800d5d8
	add		r4, r9
	mov		r7, #0x0
	mov		r0, sp
	add		r0, #0x8
	str		r0, [sp, #0xC]
_0800d55e:
	ldr		r0, [r4, #0x4]
	add		r0, r0, r7
	mov		r10, r0
	bl		sub_08057370
	mov		r1, r10
	lsl		r2, r1, #0x2
	add		r1, r2, r1
	lsl		r1, r1, #0x2
	mov		r3, #0xb2
	lsl		r3, r3, #0x3
	add		r1, r1, r3
	add		r0, r0, r1
	ldrb	r0, [r0, #0xb]
	mov		r3, #0x1
	and		r3, r0
	ldr		r0, _0800d5dc
	add		r0, r9
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800d626
	ldr		r2, [sp, #0x8]
	ldr		r0, _0800d5e0
	and		r2, r0
	mov		r0, #0xd0
	orr		r2, r0
	lsl		r0, r7, #0x14
	mov		r1, #0xc0
	lsl		r1, r1, #0xd
	add		r0, r0, r1
	ldr		r1, _0800d5e4
	and		r2, r1
	orr		r2, r0
	str		r2, [sp, #0x8]
	ldr		r0, [sp, #0xC]
	ldrh	r1, [r0, #0x0]
	ldrh	r0, [r4, #0x20]
	add		r1, r1, r0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	ldr		r0, _0800d5e0
	and		r0, r2
	orr		r0, r1
	asr		r1, r0, #0x10
	ldrh	r2, [r4, #0x22]
	add		r1, r1, r2
	lsl		r1, r1, #0x10
	ldr		r2, _0800d5e4
	and		r0, r2
	orr		r0, r1
	str		r0, [sp, #0x8]
	cmp		r3, #0x0
	beq		_0800d5f8
	ldr		r0, [r4, #0x0]
	cmp		r7, r0
	beq		_0800d5ec
	ldr		r0, [r4, #0x30]
	lsl		r0, r0, #0x3
	ldr		r1, _0800d5e8
	b		_0800d612

_0800d5d8:	.4byte 0x00000D44
_0800d5dc:	.4byte 0x00001130
_0800d5e0:	.4byte 0xffff0000
_0800d5e4:	.4byte 0x0000FFFF
_0800d5e8:	.4byte 0x080f4d04

_0800d5ec:
	ldr		r0, [r4, #0x38]
	lsl		r0, r0, #0x3
	ldr		r1, _0800d5f4
	b		_0800d612

_0800d5f4:	.4byte 0x080f4cf4

_0800d5f8:
	ldr		r0, [r4, #0x0]
	cmp		r7, r0
	beq		_0800d60c
	ldr		r0, [r4, #0x30]
	lsl		r0, r0, #0x3
	ldr		r1, _0800d608
	b		_0800d612

.incbin "base.gba", 0xD606, 0x2

_0800d608:	.4byte 0x080f4c64

_0800d60c:
	ldr		r0, [r4, #0x38]
	lsl		r0, r0, #0x3
	ldr		r1, _0800d66c
_0800d612:
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
_0800d626:
	mov		r5, #0x0
	add		r3, r7, #0x1
	str		r3, [sp, #0x10]
	add		r6, sp, #0x8
	lsl		r0, r7, #0x4
	add		r0, #0x18
	mov		r8, r0
_0800d634:
	lsl		r0, r5, #0x2
	mov		r1, #0x8e
	lsl		r1, r1, #0x5
	add		r1, r9
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0800d692
	ldr		r0, _0800d670
	add		r0, r9
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	cmp		r0, r10
	bne		_0800d692
	ldrh	r0, [r4, #0x20]
	add		r0, #0xe0
	strh	r0, [r6, #0x0]
	ldrh	r0, [r4, #0x22]
	add		r0, r8
	strh		r0, [r6, #0x2]
	ldr		r0, [r4, #0x0]
	cmp		r7, r0
	beq		_0800d678
	ldr		r0, [r4, #0x30]
	lsl		r0, r0, #0x3
	ldr		r1, _0800d674
	b		_0800d67e

.incbin "base.gba", 0xD66A, 0x2

_0800d66c:	.4byte 0x080f4c54
_0800d670:	.4byte 0x000011C8
_0800d674:	.4byte 0x080f4cb4

_0800d678:
	ldr		r0, [r4, #0x38]
	lsl		r0, r0, #0x3
	ldr		r1, _0800d6b0
_0800d67e:
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
_0800d692:
	add		r5, #0x1
	cmp		r5, #0x1
	ble		_0800d634
	ldr		r7, [sp, #0x10]
	cmp		r7, #0x7
	bgt		_0800d6a0
	b		_0800d55e
_0800d6a0:
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800d6b0:	.4byte 0x080f4ca4
	thumb_func_end sub_0800d544

	thumb_func_start sub_0800d6b4
sub_0800d6b4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x50
	mov		r10, r0
	ldr		r7, _0800d6fc
	add		r7, r10
	mov		r0, #0x0
	str		r0, [sp, #0x28]
	mov		r1, #0x0
	str		r1, [sp, #0x2c]
	mov		r2, #0x0
	str		r2, [sp, #0x30]
	mov		r3, #0x0
	str		r3, [sp, #0x34]
	mov		r4, #0x0
	str		r4, [sp, #0x38]
	str		r0, [r7, #0x8]
	ldr		r0, _0800d700
	ldr		r6, _0800d704
	add		r0, r0, r6
	ldrb	r0, [r0, #0x0]
	bl		sub_0802d6e0
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x6
	ble		_0800d70e
	cmp		r1, #0x13
	bne		_0800d708
	mov		r0, #0x7
	str		r0, [r7, #0x0]
	b		_0800d710

.incbin "base.gba", 0xD6FA, 0x2

_0800d6fc:	.4byte 0x00000D44
_0800d700:	.4byte RunGameLogic_CallBack
_0800d704:	.4byte 0x00000801

_0800d708:
	mov		r0, #0x6
	str		r0, [r7, #0x0]
	b		_0800d710
_0800d70e:
	str		r1, [r7, #0x0]
_0800d710:
	ldr		r0, [r7, #0x0]
	sub		r0, r1, r0
	str		r0, [r7, #0x4]
	mov		r0, #0x0
	str		r0, [r7, #0x10]
	str		r0, [r7, #0x14]
	str		r0, [r7, #0x18]
	ldr		r1, _0800d7dc
	strh	r1, [r7, #0x1c]
	strh	r0, [r7, #0x1e]
	strh	r0, [r7, #0x20]
	strh	r0, [r7, #0x22]
	str		r0, [r7, #0x28]
	str		r0, [r7, #0x2c]
	str		r0, [r7, #0x30]
	str		r0, [r7, #0x34]
	str		r0, [r7, #0x38]
	str		r0, [r7, #0x3c]
	str		r0, [r7, #0x24]
	mov		r0, r10
	bl		sub_08001fb4
	ldr		r1, _0800d7e0
	mov		r0, #0x0
	bl		sub_080281c4
	ldr		r1, _0800d7e4
	mov		r0, #0x1
	bl		sub_080281c4
	mov		r0, r10
	bl		sub_0800ce74
	ldr		r0, [sp, #0x28]
	lsl		r0, r0, #0x2
	str		r0, [sp, #0x48]
	thumb_func_end sub_0800d6b4

	thumb_func_start sub_0800d758
sub_0800d758:
	ldr		r0, _0800d7e8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0800d764
	bl		sub_0802983c
_0800d764:
	bl		_DrawFrameRunAudio
	ldr		r1, _0800d7ec
	add		r1, r10
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r1, r10
	ldr		r0, [r1, #0x4c]
	add		r0, #0x1
	str		r0, [r1, #0x4c]
	ldr		r1, [r7, #0x34]
	add		r1, #0x1
	str		r1, [r7, #0x34]
	ldr		r2, _0800d7f0
	ldr		r3, [r7, #0x30]
	lsl		r0, r3, #0x3
	add		r0, r0, r2
	ldrh	r0, [r0, #0x4]
	cmp		r1, r0
	ble		_0800d79c
	mov		r1, #0x0
	str		r1, [r7, #0x34]
	add		r0, r3, #0x1
	str		r0, [r7, #0x30]
	cmp		r0, #0x7
	bls		_0800d79c
	str		r1, [r7, #0x30]
_0800d79c:
	ldr		r0, [r7, #0x3c]
	add		r0, #0x1
	str		r0, [r7, #0x3c]
	ldr		r2, _0800d7f4
	ldr		r3, [r7, #0x38]
	lsl		r1, r3, #0x3
	add		r1, r1, r2
	ldrh	r1, [r1, #0x4]
	cmp		r0, r1
	ble		_0800d7be
	mov		r1, #0x0
	str		r1, [r7, #0x3c]
	add		r0, r3, #0x1
	str		r0, [r7, #0x38]
	cmp		r0, #0x1
	bls		_0800d7be
	str		r1, [r7, #0x38]
_0800d7be:
	ldr		r0, _0800d7f8
	ldrh	r3, [r0, #0x0]
	ldr		r0, _0800d7fc
	ldrh	r4, [r0, #0x0]
	ldr		r2, [sp, #0x28]
	cmp		r2, #0x9
	bls		_0800d7d0
	bl		sub_0800e080
_0800d7d0:
	ldr		r0, _0800d800
	ldr		r6, [sp, #0x48]
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0xD7DA, 0x2

_0800d7dc:	.4byte 0x0000FF90
_0800d7e0:	.4byte 0x06002000
_0800d7e4:	.4byte 0x06001000
_0800d7e8:	.4byte 0x0203EEC8
_0800d7ec:	.4byte 0x000011F4
_0800d7f0:	.4byte 0x080f4c64
_0800d7f4:	.4byte 0x080f4c54
_0800d7f8:	.4byte 0x030052C8
_0800d7fc:	.4byte 0x03005220
_0800d800:	.4byte 0x0800d804
_0800d804:	.4byte 0x0800d82c

.incbin "base.gba", 0xD808, 0x24
	thumb_func_end sub_0800d758


.incbin "base.gba", 0xD82C, 0x13C
_0800d968:	.4byte 0x0800d97c

.incbin "base.gba", 0xD96C, 0x44

_0800d9b0:

.incbin "base.gba", 0xD9B0, 0xC
_0800d9bc:

.incbin "base.gba", 0xD9BC, 0x4
_0800d9c0:

.incbin "base.gba", 0xD9C0, 0x4
_0800d9c4:	.4byte 0xF01A2001
_0800d9c8:	.4byte 0x2002FBCF
_0800d9cc:	.4byte 0xFC16F01A
_0800d9d0:	.4byte 0x930A2302
_0800d9d4:	.4byte 0x940B2400

.incbin "base.gba", 0xD9D8, 0x138
_0800db10:	.4byte 0x0800db24

.incbin "base.gba", 0xDB14, 0x10

_0800db24:

.incbin "base.gba", 0xDB24, 0x8
_0800db2c:

.incbin "base.gba", 0xDB2C, 0x4
_0800db30:

.incbin "base.gba", 0xDB30, 0x4
_0800db34:

.incbin "base.gba", 0xDB34, 0x4
_0800db38:

.incbin "base.gba", 0xDB38, 0x4
_0800db3c:

.incbin "base.gba", 0xDB3C, 0x4
_0800db40:

.incbin "base.gba", 0xDB40, 0x2A2

_0800dde2:

.incbin "base.gba", 0xDDE2, 0x29E
	thumb_func_start sub_0800e080
sub_0800e080:
	ldrh	r2, [r7, #0x20]
	mov		r0, #0x90
	lsl		r0, r0, #0x5
	add		r0, r10
	ldrh	r1, [r0, #0x0]
	mov		r5, #0x0
	strh	r2, [r0, #0x0]
	ldrh	r0, [r7, #0x20]
	neg		r0, r0
	ldr		r1, _0800e18c
	add		r1, r10
	ldrh	r2, [r1, #0x0]
	strh	r0, [r1, #0x0]
	ldrh	r2, [r7, #0x22]
	ldr		r0, _0800e190
	add		r0, r10
	ldrh	r1, [r0, #0x0]
	strh	r2, [r0, #0x0]
	ldrh	r0, [r7, #0x20]
	neg		r0, r0
	ldr		r1, _0800e194
	add		r1, r10
	ldrh	r2, [r1, #0x0]
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r2, r0, #0x0
	mov		r3, #0xb0
	lsl		r3, r3, #0x1
	add		r2, r2, r3
	ldr		r0, _0800e198
	add		r1, r0, #0x0
	add		r1, #0x20
	mov		r4, r10
	ldr		r3, [r4, #0x4c]
	mov		r4, #0x10
	str		r4, [sp, #0x0]
	bl		sub_08005ddc
	mov		r0, r10
	bl		sub_0800d34c
	mov		r0, r10
	bl		sub_0800d41c
	ldr		r0, _0800e19c
	add		r0, r10
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800e128
	ldrh	r0, [r7, #0x20]
	add		r0, #0x9c
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r1, #0x98
	lsl		r1, r1, #0x10
	orr		r0, r1
	str		r0, [sp, #0x18]
	ldr		r0, _0800e1a0
	add		r4, sp, #0x18
	str		r5, [sp, #0x0]
	str		r5, [sp, #0x4]
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	ldr		r6, [sp, #0x30]
	cmp		r6, #0x0
	beq		_0800e128
	ldrh	r0, [r7, #0x20]
	add		r0, #0x80
	strh	r0, [r4, #0x0]
	mov		r0, #0x9
	strh	r0, [r4, #0x2]
	ldr		r0, _0800e1a4
	str		r5, [sp, #0x0]
	str		r5, [sp, #0x4]
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
_0800e128:
	ldr		r0, [r7, #0x24]
	cmp		r0, #0x0
	bne		_0800e13a
	ldr		r0, [sp, #0x28]
	cmp		r0, #0x2
	beq		_0800e13a
	mov		r0, r10
	bl		sub_0800d544
_0800e13a:
	ldr		r1, [sp, #0x28]
	cmp		r1, #0x5
	beq		_0800e144
	cmp		r1, #0x9
	bne		_0800e1c8
_0800e144:
	ldr		r0, _0800e1a8
	ldr		r1, [sp, #0x1c]
	and		r1, r0
	mov		r0, #0x32
	orr		r1, r0
	str		r1, [sp, #0x1c]
	ldr		r2, _0800e1ac
	ldr		r3, [sp, #0x34]
	lsl		r0, r3, #0x1
	add		r0, r0, r2
	ldrh	r2, [r0, #0x0]
	lsl		r2, r2, #0x10
	ldr		r0, _0800e1b0
	and		r1, r0
	orr		r1, r2
	str		r1, [sp, #0x1c]
	mov		r4, r10
	ldr		r2, [r4, #0x4c]
	mov		r0, #0x10
	and		r2, r0
	cmp		r2, #0x0
	beq		_0800e1b8
	ldr		r0, _0800e1b4
	add		r1, sp, #0x1c
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
	b		_0800e1c8

.incbin "base.gba", 0xE182, 0xA

_0800e18c:	.4byte 0x00001206
_0800e190:	.4byte 0x00001208
_0800e194:	.4byte 0x0000120C
_0800e198:	.4byte 0x080ce084
_0800e19c:	.4byte 0x0000112C
_0800e1a0:	.4byte 0x080e473c
_0800e1a4:	.4byte 0x080e4774
_0800e1a8:	.4byte 0xffff0000
_0800e1ac:	.4byte 0x080f4d54
_0800e1b0:	.4byte 0x0000FFFF
_0800e1b4:	.4byte 0x080e4898

_0800e1b8:
	ldr		r0, _0800e258
	add		r1, sp, #0x1c
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
_0800e1c8:
	ldr		r6, [sp, #0x28]
	cmp		r6, #0x5
	beq		_0800e270
	cmp		r6, #0x9
	beq		_0800e270
	ldr		r0, [r7, #0x24]
	lsl		r1, r6, #0x2
	str		r1, [sp, #0x48]
	cmp		r0, #0x0
	bne		_0800e2ba
	ldr		r3, _0800e25c
	add		r3, r10
	mov		r5, #0x0
	ldr		r0, [r3, #0x24]
	cmp		r0, #0x0
	bne		_0800e23a
	ldr		r2, [r3, #0x4]
	ldr		r3, [r3, #0x0]
	add		r4, r2, r3
	mov		r12, r4
	lsl		r1, r4, #0x2
	ldr		r0, _0800e260
	add		r0, r10
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	neg		r0, r1
	orr		r0, r1
	lsr		r5, r0, #0x1f
	mov		r4, #0x0
	mov		r0, #0x8e
	lsl		r0, r0, #0x5
	add		r0, r10
	ldr		r1, [r0, #0x0]
	add		r6, r0, #0x0
	cmp		r1, #0x0
	beq		_0800e21a
	ldr		r0, _0800e264
	add		r0, r10
	ldrb	r0, [r0, #0x0]
	cmp		r0, r12
	beq		_0800e238
_0800e21a:
	add		r4, #0x1
	cmp		r4, #0x1
	bgt		_0800e23a
	lsl		r0, r4, #0x2
	add		r0, r6, r0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800e21a
	ldr		r0, _0800e264
	add		r0, r10
	add		r0, r0, r4
	ldrb	r1, [r0, #0x0]
	add		r0, r2, r3
	cmp		r1, r0
	bne		_0800e21a
_0800e238:
	add		r5, #0x2
_0800e23a:
	str		r5, [sp, #0x38]
	cmp		r5, #0x0
	beq		_0800e2ba
	ldr		r0, _0800e268
	str		r0, [sp, #0x20]
	ldr		r0, _0800e26c
	add		r1, sp, #0x20
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
	b		_0800e2ba

.incbin "base.gba", 0xE256, 0x2

_0800e258:	.4byte 0x080e48b4
_0800e25c:	.4byte 0x00000D44
_0800e260:	.4byte 0x00001130
_0800e264:	.4byte 0x000011C8
_0800e268:	.4byte 0x009A0028
_0800e26c:	.4byte 0x080e4860

_0800e270:
	ldr		r4, _0800e3c0
	ldrh	r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0800e290
	mov		r2, #0x0
	mov		r0, #0x32
	add		r1, sp, #0x20
	strh	r0, [r1, #0x0]
	mov		r0, #0x41
	strh	r0, [r1, #0x2]
	ldr		r0, _0800e3c4
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
_0800e290:
	mov		r6, #0xa0
	lsl		r6, r6, #0x1
	add		r0, r4, r6
	ldrh	r0, [r0, #0x0]
	ldr		r1, [sp, #0x28]
	lsl		r1, r1, #0x2
	str		r1, [sp, #0x48]
	cmp		r0, #0x0
	beq		_0800e2ba
	mov		r2, #0x0
	mov		r0, #0x32
	add		r1, sp, #0x20
	strh	r0, [r1, #0x0]
	mov		r0, #0x69
	strh	r0, [r1, #0x2]
	ldr		r0, _0800e3c8
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
_0800e2ba:
	mov		r2, r10
	ldr		r0, [r2, #0x4c]
	ldr		r2, _0800e3cc
	lsl		r0, r0, #0x1b
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0800e2ca
	add		r0, #0x3f
_0800e2ca:
	asr		r1, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r1
	ldr		r1, _0800e3d0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	sub		r0, r0, r1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	mov		r9, r0
	mov		r0, #0x1
	bl		sub_08028130
	mov		r3, #0x0
	str		r3, [sp, #0x44]
	mov		r4, #0x1f
	mov		r12, r4
	mov		r6, #0x1f
	mov		r8, r6
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r1, r0, r1
	str		r1, [sp, #0x4c]
_0800e304:
	ldr		r0, _0800e3d4
	ldr		r2, [sp, #0x44]
	lsl		r1, r2, #0x1
	add		r0, r1, r0
	ldrh	r2, [r0, #0x0]
	mov		r5, r8
	and		r5, r2
	lsl		r2, r2, #0x10
	lsr		r4, r2, #0x15
	mov		r3, r12
	and		r4, r3
	lsr		r2, r2, #0x1a
	and		r2, r3
	ldr		r0, _0800e3d8
	add		r1, r1, r0
	ldrh	r1, [r1, #0x0]
	mov		r0, r8
	and		r0, r1
	lsl		r1, r1, #0x10
	lsr		r3, r1, #0x15
	mov		r6, r12
	and		r3, r6
	lsr		r1, r1, #0x1a
	and		r1, r6
	sub		r0, r0, r5
	mov		r6, r9
	mul		r6, r0
	add		r0, r6, #0x0
	asr		r0, r0, #0xf
	add		r5, r5, r0
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	sub		r3, r3, r4
	mov		r0, r9
	mul		r0, r3
	asr		r0, r0, #0xf
	add		r4, r4, r0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	sub		r1, r1, r2
	mov		r0, r9
	mul		r0, r1
	asr		r0, r0, #0xf
	add		r2, r2, r0
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	mov		r0, r8
	and		r5, r0
	and		r4, r0
	lsl		r4, r4, #0x5
	orr		r5, r4
	and		r2, r0
	lsl		r2, r2, #0xa
	orr		r5, r2
	ldr		r1, [sp, #0x4c]
	strh	r5, [r1, #0x0]
	add		r1, #0x2
	str		r1, [sp, #0x4c]
	ldr		r2, [sp, #0x44]
	add		r2, #0x1
	str		r2, [sp, #0x44]
	cmp		r2, #0x1
	ble		_0800e304
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r2, [r7, #0x24]
	cmp		r2, #0x0
	beq		_0800e392
	bl		sub_0800d758
_0800e392:
	ldr		r3, [sp, #0x28]
	cmp		r3, #0x2
	bne		_0800e39c
	bl		sub_0800d758
_0800e39c:
	ldrh	r0, [r7, #0x20]
	add		r0, #0xd8
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r1, #0xb0
	lsl		r1, r1, #0xc
	orr		r0, r1
	str		r0, [sp, #0x24]
	ldr		r0, _0800e3dc
	add		r1, sp, #0x24
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	bl		sub_0800d758
_0800e3c0:
.incbin "base.gba", 0xE3C0, 0x4
_0800e3c4:
	ldr		r0, sub_0800e468
	lsr		r6, r1, #0x20
_0800e3c8:
	mov		r4, r12
	lsr		r6, r1, #0x20
_0800e3cc:
	asr		r0, r5, #0x1
	lsr		r0, r2, #0x20
_0800e3d0:
	lsl		r7, r7, #0xf
		
	.2byte	0x0
	
_0800e3d4:
	ldr		r5, _0800e538
	lsr		r7, r1, #0x20
_0800e3d8:
	ldr		r5, _0800e54c
	lsr		r7, r1, #0x20
_0800e3dc:
	ldr		r1, _0800e4e0
	lsr		r6, r1, #0x20
	add		sp, #0x50
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0800e080

	thumb_func_start sub_0800e3f0
sub_0800e3f0:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r3, #0x0
	lsl		r2, r2, #0x10
	lsr		r3, r2, #0x10
	add		r4, r3, #0x0
	ldr		r1, [r7, #0x0]
	ldr		r0, [r6, #0x0]
	add		r2, r1, r0
	mov		r0, #0x40
	and		r0, r3
	cmp		r0, #0x0
	beq		_0800e40e
	sub		r2, #0x1
_0800e40e:
	mov		r0, #0x80
	and		r0, r3
	cmp		r0, #0x0
	beq		_0800e418
	add		r2, #0x1
_0800e418:
	mov		r0, #0x20
	and		r0, r3
	cmp		r0, #0x0
	beq		_0800e422
	sub		r2, #0x8
_0800e422:
	mov		r0, #0x10
	and		r4, r0
	cmp		r4, #0x0
	beq		_0800e42c
	add		r2, #0x8
_0800e42c:
	cmp		r2, #0x0
	bge		_0800e432
	mov		r2, #0x0
_0800e432:
	sub		r0, r5, #0x1
	cmp		r2, r0
	ble		_0800e43a
	add		r2, r0, #0x0
_0800e43a:
	add		r0, r1, #0x1
	cmp		r2, r0
	bge		_0800e442
	sub		r1, r2, #0x1
_0800e442:
	add		r0, r1, #0x6
	cmp		r2, r0
	ble		_0800e44a
	sub		r1, r2, #0x6
_0800e44a:
	cmp		r1, #0x0
	bge		_0800e450
	mov		r1, #0x0
_0800e450:
	add		r3, r5, #0x0
	sub		r3, #0x8
	cmp		r1, r3
	ble		_0800e45a
	add		r1, r3, #0x0
_0800e45a:
	sub		r0, r2, r1
	str		r0, [r6, #0x0]
	str		r1, [r7, #0x0]
	add		r0, r0, r1
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0800e3f0

	thumb_func_start sub_0800e468
sub_0800e468:
	push	{ r4, r5, r6, lr }
	ldr		r1, _0800e4a0
	add		r6, r0, r1
	ldr		r0, [r6, #0x24]
	cmp		r0, #0x0
	bne		_0800e4b0
	mov		r4, #0x0
	ldr		r5, _0800e4a4
_0800e478:
	bl		sub_08029f34
	ldr		r2, [r6, #0x4]
	add		r2, r2, r4
	lsl		r1, r2, #0x1
	add		r1, r1, r2
	lsl		r1, r1, #0x8
	ldr		r2, _0800e4a8
	add		r1, r1, r2
	add		r2, r5, #0x0
	ldr		r3, _0800e4ac
	bl		sub_08029ee4
	mov		r0, #0xc0
	lsl		r0, r0, #0x2
	add		r5, r5, r0
	add		r4, #0x1
	cmp		r4, #0xb
	ble		_0800e478
	b		_0800e4da

_0800e4a0:	.4byte 0x00000D44
_0800e4a4:	.4byte 0x06005800
_0800e4a8:	.4byte 0x02025400
_0800e4ac:	.4byte 0x80000180

_0800e4b0:
	mov		r4, #0x0
	ldr		r5, _0800e4e0
_0800e4b4:
	bl		sub_08029f34
	ldr		r2, [r6, #0x4]
	add		r2, r2, r4
	lsl		r1, r2, #0x1
	add		r1, r1, r2
	lsl		r1, r1, #0x8
	ldr		r2, _0800e4e4
	add		r1, r1, r2
	add		r2, r5, #0x0
	ldr		r3, _0800e4e8
	bl		sub_08029ee4
	mov		r1, #0xc0
	lsl		r1, r1, #0x2
	add		r5, r5, r1
	add		r4, #0x1
	cmp		r4, #0xb
	ble		_0800e4b4
_0800e4da:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0800e4e0:	.4byte 0x06005800
_0800e4e4:	.4byte 0x02008400
_0800e4e8:	.4byte 0x80000180
	thumb_func_end sub_0800e468

	thumb_func_start sub_0800e4ec
sub_0800e4ec:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r1, _0800e518
	add		r1, r1, r0
	mov		r8, r1
	mov		r4, #0x0
_0800e4fa:
	lsl		r2, r4, #0x1
	add		r2, #0x2
	mov		r0, #0x0
	mov		r1, #0xd
	bl		sub_080281b0
	mov		r12, r0
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	cmp		r4, r0
	bne		_0800e51c
	mov		r5, #0xb0
	lsl		r5, r5, #0x8
	b		_0800e534

.incbin "base.gba", 0xE516, 0x2

_0800e518:	.4byte 0x00000D44

_0800e51c:
	mov		r0, r8
	ldr		r1, [r0, #0x4]
	add		r1, r4, r1
	mov		r0, #0x1
	and		r1, r0
	mov		r0, #0xa0
	lsl		r0, r0, #0x7
	cmp		r1, #0x0
	beq		_0800e532
	mov		r0, #0xc0
	lsl		r0, r0, #0x7
_0800e532:
	add		r5, r0, #0x0
_0800e534:
	mov		r1, #0x0
	add		r6, r4, #0x1
_0800e538:
	ldr		r7, _0800e574
_0800e53a:
	lsl		r0, r1, #0x6
	add		r4, r1, #0x1
	mov		r1, r12
	add		r3, r1, r0
	mov		r2, #0xb
_0800e544:
	ldrh	r1, [r3, #0x0]
	add		r0, r7, #0x0
	and		r0, r1
	orr		r0, r5
_0800e54c:
	strh	r0, [r3, #0x0]
	add		r3, #0x2
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_0800e544
	add		r1, r4, #0x0
	cmp		r1, #0x1
	ble		_0800e53a
	add		r4, r6, #0x0
	cmp		r4, #0x7
	ble		_0800e4fa
	mov		r0, #0x1
	bl		sub_080281fc
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xE572, 0x2

_0800e574:	.4byte 0x00000FFF
	thumb_func_end sub_0800e4ec

	thumb_func_start sub_0800e578
sub_0800e578:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r9, r0
	mov		r8, r2
	mov		r6, #0x0
	lsl		r7, r3, #0xc
	add		r5, r1, #0x0
	add		r5, #0x40
	add		r4, r1, #0x0
_0800e58e:
	mov		r1, r9
	add		r0, r1, r6
	ldrb	r0, [r0, #0x0]
	bl		sub_08013e10
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	add		r0, r8
	add		r1, r7, #0x0
	orr		r1, r0
	strh	r1, [r4, #0x0]
	add		r0, #0x20
	orr		r0, r7
	strh	r0, [r5, #0x0]
	add		r5, #0x2
	add		r4, #0x2
	add		r6, #0x1
	cmp		r6, #0x4
	ble		_0800e58e
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0800e578

	thumb_func_start sub_0800e5c0
sub_0800e5c0:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r7, r2, #0x0
	lsl		r4, r3, #0xc
	mov		r0, #0x10
	and		r0, r5
	cmp		r0, #0x0
	beq		_0800e5dc
	mov		r1, #0x0
	ldr		r7, [sp, #0x0+0x14]
	ldr		r0, [sp, #0x4+0x14]
	lsl		r4, r0, #0xc
	b		_0800e5f4
_0800e5dc:
	mov		r0, #0x7
	and		r0, r5
	bl		sub_0800ebfc
	add		r5, r0, #0x0
	mov		r1, #0x2
	cmp		r5, #0x3
	beq		_0800e5f4
	add		r1, r5, #0x0
	cmp		r1, #0x2
	bne		_0800e5f4
	mov		r1, #0x3
_0800e5f4:
	lsl		r1, r1, #0x2
	add		r1, r7, r1
	add		r0, r4, #0x0
	orr		r0, r1
	strh	r0, [r6, #0x0]
	add		r0, r1, #0x1
	orr		r0, r4
	strh	r0, [r6, #0x2]
	add		r2, r6, #0x0
	add		r2, #0x40
	add		r0, r1, #0x2
	orr		r0, r4
	strh	r0, [r2, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x42
	add		r1, #0x3
	orr		r4, r1
	strh	r4, [r0, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xE61E, 0x2
	thumb_func_end sub_0800e5c0

	thumb_func_start sub_0800e620
sub_0800e620:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	mov		r8, r1
	add		r5, r2, #0x0
	ldr		r1, [sp, #0x0+0x18]
	lsl		r7, r3, #0xc
	mov		r0, #0x10
	and		r0, r4
	cmp		r0, #0x0
	beq		_0800e65c
	ldr		r0, [sp, #0x4+0x18]
	lsl		r0, r0, #0xc
	add		r3, r1, #0x0
	add		r3, #0x1b
	add		r1, #0x3b
	orr		r3, r0
	orr		r1, r0
	add		r0, r5, #0x0
	add		r0, #0x40
	mov		r4, #0x4
_0800e64c:
	strh	r3, [r2, #0x0]
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	add		r2, #0x2
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0800e64c
	b		_0800e6a8
_0800e65c:
	mov		r0, #0x7
	and		r0, r4
	bl		sub_0800ebfc
	add		r4, r0, #0x0
	ldr		r1, _0800e6b4
	lsl		r0, r4, #0x1
	add		r2, r0, r1
	add		r0, #0x1
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	add		r6, r5, #0x0
	add		r6, #0x40
	lsl		r0, r0, #0x5
	ldrb	r2, [r2, #0x0]
	add		r0, r0, r2
	mov		r4, #0x4
	lsl		r0, r0, #0x1
	add		r1, r0, #0x0
	add		r1, #0x40
	mov		r3, r8
	add		r2, r1, r3
	add		r3, r0, r3
_0800e68a:
	ldrh	r1, [r3, #0x0]
	add		r0, r7, #0x0
	orr		r0, r1
	strh	r0, [r5, #0x0]
	ldrh	r1, [r2, #0x0]
	add		r0, r7, #0x0
	orr		r0, r1
	strh	r0, [r6, #0x0]
	add		r6, #0x2
	add		r2, #0x2
	add		r3, #0x2
	add		r5, #0x2
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0800e68a
_0800e6a8:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xE6B2, 0x2

_0800e6b4:	.4byte 0x080f4d44
	thumb_func_end sub_0800e620

	thumb_func_start sub_0800e6b8
sub_0800e6b8:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	ldr		r0, [sp, #0x14]
	lsl		r0, r0, #0x5
	add		r3, r3, r0
	lsl		r3, r3, #0x1
	add		r5, r5, r3
	cmp		r2, #0x0
	ble		_0800e6fe
	mov		r0, #0x1f
	mov		r12, r0
	ldr		r0, [sp, #0x18]
	lsl		r6, r0, #0xc
	add		r4, r5, #0x0
	add		r4, #0x40
	add		r3, r5, #0x0
_0800e6da:
	ldrb	r0, [r7, #0x0]
	lsr		r1, r0, #0x5
	lsl		r1, r1, #0x6
	mov		r5, r12
	and		r0, r5
	add		r1, r1, r0
	add		r0, r6, #0x0
	orr		r0, r1
	strh	r0, [r3, #0x0]
	add		r1, #0x20
	orr		r1, r6
	strh	r1, [r4, #0x0]
	add		r7, #0x1
	add		r4, #0x2
	add		r3, #0x2
	sub		r2, #0x1
	cmp		r2, #0x0
	bne		_0800e6da
_0800e6fe:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0800e6b8

	thumb_func_start sub_0800e704
sub_0800e704:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r0, _0800e770
	add		r3, r4, r0
	mov		r6, #0x0
	ldr		r0, [r3, #0x24]
	cmp		r0, #0x0
	bne		_0800e768
	ldr		r2, [r3, #0x4]
	ldr		r3, [r3, #0x0]
	add		r7, r2, r3
	lsl		r1, r7, #0x2
	ldr		r5, _0800e774
	add		r0, r4, r5
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	neg		r0, r1
	orr		r0, r1
	lsr		r6, r0, #0x1f
	mov		r5, #0x0
	mov		r1, #0x8e
	lsl		r1, r1, #0x5
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800e742
	add		r1, #0x8
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, r7
	beq		_0800e766
_0800e742:
	add		r5, #0x1
	cmp		r5, #0x1
	bgt		_0800e768
	lsl		r0, r5, #0x2
	mov		r7, #0x8e
	lsl		r7, r7, #0x5
	add		r1, r4, r7
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0800e742
	ldr		r1, _0800e778
	add		r0, r4, r1
	add		r0, r0, r5
	ldrb	r1, [r0, #0x0]
	add		r0, r2, r3
	cmp		r1, r0
	bne		_0800e742
_0800e766:
	add		r6, #0x2
_0800e768:
	add		r0, r6, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0800e770:	.4byte 0x00000D44
_0800e774:	.4byte 0x00001130
_0800e778:	.4byte 0x000011C8
	thumb_func_end sub_0800e704

	thumb_func_start sub_0800e77c
sub_0800e77c:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	add		r4, r2, #0x0
	add		r5, r3, #0x0
	ldr		r1, [sp, #0x0+0x14]
	mov		r0, #0x0
	cmp		r1, #0xd
	bls		_0800e790
	b		_0800e9b0
_0800e790:
	lsl		r0, r1, #0x2
	ldr		r1, _0800e79c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0xE79A, 0x2

_0800e79c:	.4byte 0x0800e7a0
_0800e7a0:	.4byte 0x0800e7d8

.incbin "base.gba", 0xE7A4, 0x34
	thumb_func_end sub_0800e77c


.incbin "base.gba", 0xE7D8, 0x1D8

_0800e9b0:

.incbin "base.gba", 0xE9B0, 0x10
	thumb_func_start sub_0800e9c0
sub_0800e9c0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	mov		r8, r1
	ldr		r2, _0800ea10
	ldrb	r1, [r4, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	ldrb	r1, [r4, #0x1]
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	mov		r12, r0
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x3
	add		r0, r12
	ldr		r3, [r0, #0x0]
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_0800ea3c
	strb	r0, [r4, #0x4]
	ldr		r0, _0800ea14
	and		r0, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x2
	beq		_0800ea20
	cmp		r0, #0x2
	bgt		_0800ea18
	cmp		r0, #0x0
	blt		_0800ea36
	b		_0800ea1c

.incbin "base.gba", 0xEA0E, 0x2

_0800ea10:	.4byte 0x080f5298
_0800ea14:	.4byte 0xfffffcff

_0800ea18:
	cmp		r0, #0x3
	bne		_0800ea36
_0800ea1c:
	mov		r0, #0x0
	b		_0800ea34
_0800ea20:
	ldr		r2, _0800ea68
	ldrb	r1, [r4, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	ldrb	r1, [r4, #0x1]
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	sub		r0, #0x2
_0800ea34:
	strb	r0, [r4, #0x5]
_0800ea36:
	mov		r0, #0x0
	strb	r0, [r4, #0x8]
	strb	r0, [r4, #0x9]
_0800ea3c:
	ldrb	r6, [r4, #0x5]
	ldrb	r0, [r4, #0x4]
	add		r1, r0, #0x1
	strb	r1, [r4, #0x4]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, r3
	ble		_0800eae2
	mov		r0, #0x0
	strb	r0, [r4, #0x4]
	ldrh	r7, [r4, #0x2]
	ldr		r0, _0800ea6c
	and		r0, r7
	lsl		r0, r0, #0x10
	asr		r5, r0, #0x10
	cmp		r5, #0x1
	beq		_0800ea9c
	cmp		r5, #0x1
	bgt		_0800ea70
	cmp		r5, #0x0
	beq		_0800ea76
	b		_0800eae2

_0800ea68:	.4byte 0x080f5238
_0800ea6c:	.4byte 0xfffffcff

_0800ea70:
	cmp		r5, #0x2
	beq		_0800eacc
	b		_0800eae2
_0800ea76:
	ldrb	r0, [r4, #0x5]
	add		r0, #0x1
	strb	r0, [r4, #0x5]
	ldrb	r3, [r4, #0x5]
	ldr		r2, _0800ea98
	ldrb	r1, [r4, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	ldrb	r1, [r4, #0x1]
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r3, r0
	blt		_0800eae2
	strb	r5, [r4, #0x5]
	b		_0800eae2

_0800ea98:	.4byte 0x080f5238

_0800ea9c:
	ldrb	r3, [r4, #0x5]
	ldr		r2, _0800eabc
	ldrb	r1, [r4, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	ldrb	r1, [r4, #0x1]
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	sub		r0, #0x1
	cmp		r3, r0
	bge		_0800eac0
	add		r0, r3, #0x1
	b		_0800eae0

.incbin "base.gba", 0xEABA, 0x2

_0800eabc:	.4byte 0x080f5238

_0800eac0:
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	add		r0, r2, #0x0
	orr		r0, r7
	strh	r0, [r4, #0x2]
	b		_0800eae2
_0800eacc:
	ldrb	r0, [r4, #0x5]
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_0800ead8
	sub		r0, #0x1
	b		_0800eae0
_0800ead8:
	strb	r1, [r4, #0x1]
	mov		r0, #0x0
	strh	r1, [r4, #0x2]
	strb	r0, [r4, #0x4]
_0800eae0:
	strb	r0, [r4, #0x5]
_0800eae2:
	ldrb	r2, [r4, #0x5]
	cmp		r6, r2
	bne		_0800eaf4
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_0800eb14
_0800eaf4:
	mov		r0, r8
	cmp		r0, #0x0
	beq		_0800eb08
	lsl		r0, r2, #0x3
	add		r0, r12
	ldr		r0, [r0, #0x4]
	ldr		r1, [r4, #0x10]
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	b		_0800eb14
_0800eb08:
	lsl		r0, r2, #0x3
	add		r0, r12
	ldr		r0, [r0, #0x4]
	ldr		r1, [r4, #0x10]
	bl		_CallHardwareLZ77DecompressToMemory8Bit
_0800eb14:
	ldrb	r6, [r4, #0x9]
	mov		r1, #0x6
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x2
	beq		_0800eb28
	cmp		r0, #0x2
	ble		_0800eb56
	cmp		r0, #0x3
	beq		_0800eb48
	b		_0800eb56
_0800eb28:
	ldr		r0, _0800eb40
	ldrb	r1, [r4, #0x0]
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	sub		r0, #0x1
	cmp		r6, r0
	bge		_0800eb44
	add		r0, r6, #0x1
	strb	r0, [r4, #0x9]
	b		_0800eb56

.incbin "base.gba", 0xEB3E, 0x2

_0800eb40:	.4byte 0x080f5358

_0800eb44:
	mov		r0, #0x3
	b		_0800eb54
_0800eb48:
	cmp		r6, #0x0
	beq		_0800eb52
	sub		r0, r6, #0x1
	strb	r0, [r4, #0x9]
	b		_0800eb56
_0800eb52:
	mov		r0, #0x2
_0800eb54:
	strh	r0, [r4, #0x6]
_0800eb56:
	ldrb	r2, [r4, #0x9]
	cmp		r6, r2
	bne		_0800eb68
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_0800ebce
_0800eb68:
	mov		r0, #0x6
	ldrsh	r1, [r4, r0]
	cmp		r1, #0x0
	blt		_0800ebce
	cmp		r1, #0x1
	bgt		_0800eb98
	ldr		r2, PTR_PTR_0800eb94
	lsl		r1, r1, #0x2
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	add		r1, r1, r2
	ldr		r0, [r1, #0x0]
	ldr		r1, [r4, #0xc]
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	b		_0800ebce

.incbin "base.gba", 0xEB92, 0x2

PTR_PTR_0800eb94:	.4byte PTR_PTR_H_Reset_080f52f8

_0800eb98:
	cmp		r1, #0x3
	bgt		_0800ebce
	ldr		r1, PTR_PTR_0800ebe4
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, [r4, #0xc]
	mov		r2, #0xf
	bl		sub_08071b6c
	ldr		r1, _0800ebe8
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldrb	r1, [r4, #0x9]
	lsl		r1, r1, #0x1
	ldr		r0, [r0, #0x0]
	add		r0, r0, r1
	ldr		r1, [r4, #0xc]
	add		r1, #0x1e
	mov		r2, #0x1
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
_0800ebce:
	ldrh	r1, [r4, #0x2]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r2, #0x0
	orr		r0, r1
	strh	r0, [r4, #0x2]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

PTR_PTR_0800ebe4:	.4byte PTR_PTR_H_Reset_080f52f8
_0800ebe8:	.4byte 0x080f5338
	thumb_func_end sub_0800e9c0

	thumb_func_start sub_0800ebec
sub_0800ebec:
	ldr		r1, _0800ebf8
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0xEBF6, 0x2

_0800ebf8:	.4byte 0x080f4d60
	thumb_func_end sub_0800ebec

	thumb_func_start sub_0800ebfc
sub_0800ebfc:
	ldr		r2, _0800ec0c
	mov		r1, #0x7
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r2
	ldr		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0xEC0A, 0x2

_0800ec0c:	.4byte 0x080f4d80
	thumb_func_end sub_0800ebfc

	thumb_func_start sub_0800ec10
sub_0800ec10:
	ldr		r3, _0800ec24
	mov		r1, #0x0
	mov		r2, #0x0
_0800ec16:
	add		r0, r3, r1
	strb	r2, [r0, #0x0]
	add		r1, #0x1
	cmp		r1, #0xb3
	bls		_0800ec16
	bx		lr

.incbin "base.gba", 0xEC22, 0x2

_0800ec24:	.4byte 0x03000040
	thumb_func_end sub_0800ec10

	thumb_func_start sub_0800ec28
sub_0800ec28:
	ldr		r0, _0800ec2c
	bx		lr

_0800ec2c:	.4byte 0x03000040
	thumb_func_end sub_0800ec28

	thumb_func_start sub_0800ec30
sub_0800ec30:
	ldr		r0, _0800ec34
	bx		lr

_0800ec34:	.4byte 0x03000040
	thumb_func_end sub_0800ec30

	thumb_func_start sub_0800ec38
sub_0800ec38:
	ldr		r0, _0800ec3c
	bx		lr

_0800ec3c:	.4byte 0x03000040
	thumb_func_end sub_0800ec38

	thumb_func_start sub_0800ec40
sub_0800ec40:
	ldr		r0, _0800ec44
	bx		lr

_0800ec44:	.4byte 0x03000040
	thumb_func_end sub_0800ec40

	thumb_func_start sub_0800ec48
sub_0800ec48:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0xc
	add		r7, r0, #0x0
	mov		r5, #0x0
	mov		r1, #0xa9
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	bge		_0800ec72
	add		r6, r7, r1
	add		r4, r7, #0x0
	add		r4, #0x4c
_0800ec62:
	add		r0, r4, #0x0
	bl		sub_08003bac
	add		r4, #0x18
	add		r5, #0x1
	ldr		r0, [r6, #0x0]
	cmp		r5, r0
	blt		_0800ec62
_0800ec72:
	mov		r5, #0x0
	mov		r3, #0xa9
	lsl		r3, r3, #0x2
	add		r1, r7, r3
	ldr		r0, [r1, #0x0]
	cmp		r5, r0
	bge		_0800ecbe
	add		r6, r1, #0x0
_0800ec82:
	add		r4, r5, #0x1
	ldr		r0, [r6, #0x0]
	sub		r0, r0, r4
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x3
	add		r1, #0x4c
	add		r1, r7, r1
	ldrh	r2, [r1, #0x6]
	lsl		r2, r2, #0x10
	ldrh	r0, [r1, #0x4]
	orr		r0, r2
	str		r0, [sp, #0x8]
	ldr		r0, [r1, #0x0]
	mov		r5, #0x8
	ldrsh	r2, [r1, r5]
	mov		r5, #0xa
	ldrsh	r3, [r1, r5]
	mov		r5, #0xc
	ldrsh	r1, [r1, r5]
	str		r1, [sp, #0x0]
	mov		r1, #0x0
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	bl		sub_0802951c
	add		r5, r4, #0x0
	ldr		r0, [r6, #0x0]
	cmp		r5, r0
	blt		_0800ec82
_0800ecbe:
	add		sp, #0xc
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xECC6, 0x2
	thumb_func_end sub_0800ec48

	thumb_func_start sub_0800ecc8
sub_0800ecc8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	mov		r8, r0
	mov		r7, #0x0
	ldr		r0, _0800ed4c
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0800ece4
	b		_0800ef76
_0800ece4:
	ldr		r0, _0800ed50
	mov		r2, r8
	add		r2, #0x2c
	mov		r6, #0x3
_0800ecec:
	ldr		r1, [r2, #0x0]
	cmp		r1, #0x1
	beq		_0800ecf6
	cmp		r1, #0x6
	bne		_0800ecf8
_0800ecf6:
	add		r7, #0x1
_0800ecf8:
	add		r2, #0x4
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0800ecec
	ldr		r0, [r0, #0x0]
	cmp		r0, #0xb4
	bgt		_0800ed08
	mov		r7, #0x0
_0800ed08:
	ldr		r1, _0800ed54
	add		r1, r8
	ldr		r0, [r1, #0x0]
	cmp		r0, r7
	beq		_0800ed82
	mov		r2, #0xfd
	lsl		r2, r2, #0x2
	add		r2, r8
	str		r7, [r1, #0x0]
	ldrh	r1, [r2, #0x4]
	mov		r0, #0x95
	lsl		r0, r0, #0x3
	add		r0, r8
	mov		r3, #0x0
	strh	r1, [r0, #0x0]
	ldrh	r1, [r2, #0x6]
	ldr		r0, _0800ed58
	add		r0, r8
	strh	r1, [r0, #0x0]
	strh	r3, [r2, #0x10]
	cmp		r7, #0x1
	bgt		_0800ed60
	str		r3, [sp, #0x8]
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r2, _0800ed5c
	add		r0, sp, #0x8
	bl		_CallHardwareSetCpuFast
	b		_0800ed7c

_0800ed4c:	.4byte 0x000004AC
_0800ed50:	.4byte 0x0300014C
_0800ed54:	.4byte 0x000004A4
_0800ed58:	.4byte 0x000004AA
_0800ed5c:	.4byte 0x01000080

_0800ed60:
	ldr		r1, _0800ee2c
	sub		r0, r7, #0x2
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
_0800ed7c:
	mov		r0, #0x1
	bl		sub_080281fc
_0800ed82:
	cmp		r7, #0x1
	bgt		_0800ee3c
	mov		r7, #0xfd
	lsl		r7, r7, #0x2
	add		r7, r8
	ldrh	r0, [r7, #0x10]
	add		r0, #0x1
	strh	r0, [r7, #0x10]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x10
	bgt		_0800edd0
	mov		r1, #0x10
	ldrsh	r0, [r7, r1]
	ldr		r1, _0800ee30
	lsl		r0, r0, #0x1a
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0800edaa
	add		r0, #0x3f
_0800edaa:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r3, [r0, #0x0]
	mov		r2, #0x95
	lsl		r2, r2, #0x3
	add		r2, r8
	mov		r5, #0x0
	ldrsh	r1, [r2, r5]
	mov		r0, #0x78
	sub		r0, r0, r1
	mul		r0, r3
	asr		r0, r0, #0xf
	ldrh	r2, [r2, #0x0]
	add		r0, r0, r2
	strh	r0, [r7, #0x4]
	mov		r0, #0x45
	strh	r0, [r7, #0x6]
_0800edd0:
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	mov		r5, #0xfb
	lsl		r5, r5, #0x2
	add		r5, r8
	ldr		r2, [r5, #0x0]
	mov		r4, #0xb
	str		r4, [sp, #0x0]
	mov		r0, #0x80
	add		r1, r6, #0x0
	mov		r3, #0x10
	bl		sub_0800e77c
	mov		r9, r0
	ldr		r0, _0800ee34
	add		r0, r8
	mov		r2, #0x4
	ldrsh	r1, [r7, r2]
	mov		r3, #0x6
	ldrsh	r2, [r7, r3]
	mov		r3, r9
	bl		sub_08013a68
	ldr		r2, [r5, #0x0]
	str		r4, [sp, #0x0]
	mov		r0, #0x80
	add		r1, r6, #0x0
	mov		r3, #0x10
	bl		sub_0800e77c
	add		r3, r0, #0x0
	ldrh	r1, [r7, #0x6]
	lsl		r1, r1, #0x10
	ldrh	r0, [r7, #0x4]
	orr		r0, r1
	str		r0, [sp, #0xC]
	ldr		r0, _0800ee38
	add		r1, sp, #0xc
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	add		r2, r3, #0x0
	bl		sub_0802951c
	b		_0800ef76

.incbin "base.gba", 0xEE2A, 0x2

_0800ee2c:	.4byte 0x080f5404
_0800ee30:	.4byte 0x08101068
_0800ee34:	.4byte 0x00000484
_0800ee38:	.4byte 0x080e578c

_0800ee3c:
	mov		r6, #0x0
	cmp		r6, r7
	blt		_0800ee44
	b		_0800ef76
_0800ee44:
	ldr		r5, _0800eeb0
	mov		r10, r5
	ldr		r0, _0800eeb4
	mov		r9, r0
	mov		r4, #0xfe
	lsl		r4, r4, #0x2
	add		r4, r8
_0800ee52:
	ldr		r0, _0800eeb8
	sub		r1, r7, #0x2
	add		r1, r1, r0
	lsl		r0, r6, #0x4
	sub		r0, r0, r6
	lsl		r0, r0, #0x2
	ldrb	r1, [r1, #0x0]
	add		r3, r0, r1
	mov		r0, #0xa
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x0
	beq		_0800eec6
	cmp		r6, #0x0
	bne		_0800eec0
	ldrh	r0, [r4, #0xc]
	add		r0, #0x1
	strh	r0, [r4, #0xc]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x10
	bgt		_0800eec6
	mov		r1, #0xc
	ldrsh	r0, [r4, r1]
	ldr		r1, _0800eebc
	lsl		r0, r0, #0x1a
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0800ee8c
	add		r0, #0x3f
_0800ee8c:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	mov		r1, #0x95
	lsl		r1, r1, #0x3
	add		r1, r8
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	sub		r0, r3, r0
	mul		r0, r2
	asr		r0, r0, #0xf
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	strh	r0, [r4, #0x0]
	b		_0800eec2

.incbin "base.gba", 0xEEAE, 0x2

_0800eeb0:	.4byte 0xffff0000
_0800eeb4:	.4byte 0x0000FFFF
_0800eeb8:	.4byte 0x080f53d0
_0800eebc:	.4byte 0x08101068

_0800eec0:
	strh	r3, [r4, #0x0]
_0800eec2:
	mov		r0, #0x45
	strh	r0, [r4, #0x2]
_0800eec6:
	cmp		r6, #0x0
	bne		_0800eef4
	ldrh	r1, [r4, #0x0]
	ldr		r0, [sp, #0x10]
	mov		r2, r10
	and		r0, r2
	orr		r0, r1
	ldrh	r1, [r4, #0x2]
	add		r1, #0x10
	lsl		r1, r1, #0x10
	mov		r3, r9
	and		r0, r3
	orr		r0, r1
	str		r0, [sp, #0x10]
	ldr		r0, _0800ef50
	ldr		r0, [r0, #0x0]
	str		r6, [sp, #0x0]
	str		r6, [sp, #0x4]
	add		r1, sp, #0x10
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
_0800eef4:
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r1, [sp, #0x14]
	mov		r5, r10
	and		r1, r5
	orr		r1, r0
	ldrh	r0, [r4, #0x2]
	add		r0, #0x1
	lsl		r0, r0, #0x10
	mov		r2, r9
	and		r1, r2
	orr		r1, r0
	str		r1, [sp, #0x14]
	mov		r5, #0x0
	str		r5, [sp, #0x0]
	str		r5, [sp, #0x4]
	ldr		r0, _0800ef54
	add		r1, sp, #0x14
	mov		r2, #0xaa
	mov		r3, #0xcc
	bl		sub_0802951c
	ldrh	r1, [r4, #0x0]
	ldr		r0, [sp, #0x18]
	mov		r3, r10
	and		r0, r3
	orr		r0, r1
	ldrh	r1, [r4, #0x2]
	lsl		r1, r1, #0x10
	mov		r2, r9
	and		r0, r2
	orr		r0, r1
	str		r0, [sp, #0x18]
	cmp		r6, #0x0
	bne		_0800ef5c
	str		r6, [sp, #0x0]
	str		r6, [sp, #0x4]
	ldr		r0, _0800ef58
	add		r1, sp, #0x18
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	b		_0800ef6c

_0800ef50:	.4byte 0x080f53d4
_0800ef54:	.4byte 0x080f53fc
_0800ef58:	.4byte 0x080f53ec

_0800ef5c:
	str		r5, [sp, #0x0]
	str		r5, [sp, #0x4]
	ldr		r0, _0800ef88
	add		r1, sp, #0x18
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
_0800ef6c:
	add		r4, #0x18
	add		r6, #0x1
	cmp		r6, r7
	bge		_0800ef76
	b		_0800ee52
_0800ef76:
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xEF86, 0x2

_0800ef88:	.4byte 0x080f53f4
	thumb_func_end sub_0800ecc8

	thumb_func_start sub_0800ef8c
sub_0800ef8c:
	push	{ lr }
	sub		sp, #0xc
	ldr		r1, _0800efa8
	add		r3, r0, r1
	mov		r0, #0xe
	ldrsb	r0, [r3, r0]
	cmp		r0, #0x7
	bls		_0800ef9e
	b		_0800f0f0
_0800ef9e:
	lsl		r0, r0, #0x2
	ldr		r1, _0800efac
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0800efa8:	.4byte 0x00000454
_0800efac:	.4byte 0x0800efb0
_0800efb0:	.4byte 0x0800f0f0

.incbin "base.gba", 0xEFB4, 0x1C
	thumb_func_end sub_0800ef8c


.incbin "base.gba", 0xEFD0, 0x120

_0800f0f0:

.incbin "base.gba", 0xF0F0, 0x2C
_0800f11c:

.incbin "base.gba", 0xF11C, 0x8
	thumb_func_start sub_0800f124
sub_0800f124:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	str		r0, [sp, #0x0]
	add		r7, r1, #0x0
	add		r5, r2, #0x0
	add		r4, r3, #0x0
	ldr		r0, [sp, #0x0+0x2c]
	ldr		r1, [sp, #0x4+0x2c]
	lsl		r0, r0, #0xf
	bl		sub_0807d80c
	ldr		r2, _0800f20c
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0800f14e
	add		r0, #0x3f
_0800f14e:
	asr		r1, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r1
	ldr		r1, _0800f210
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	sub		r0, r0, r1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	str		r0, [sp, #0x4]
	cmp		r4, #0x0
	ble		_0800f1fc
	mov		r0, #0x1f
	mov		r10, r0
	mov		r6, #0x1f
	mov		r9, r5
	mov		r8, r7
	ldr		r5, [sp, #0x0]
	str		r5, [sp, #0x8]
	mov		r12, r4
_0800f182:
	ldr		r7, [sp, #0x8]
	ldrh	r1, [r7, #0x0]
	add		r3, r6, #0x0
	and		r3, r1
	lsl		r1, r1, #0x10
	lsr		r4, r1, #0x15
	mov		r0, r10
	and		r4, r0
	lsr		r1, r1, #0x1a
	and		r1, r0
	mov		r5, r8
	ldrh	r2, [r5, #0x0]
	add		r0, r6, #0x0
	and		r0, r2
	lsl		r2, r2, #0x10
	lsr		r5, r2, #0x15
	mov		r7, r10
	and		r5, r7
	lsr		r2, r2, #0x1a
	and		r2, r7
	sub		r0, r0, r3
	ldr		r7, [sp, #0x4]
	mul		r0, r7
	asr		r0, r0, #0xf
	add		r3, r3, r0
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	sub		r0, r5, r4
	mul		r0, r7
	asr		r0, r0, #0xf
	add		r4, r4, r0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	sub		r2, r2, r1
	add		r0, r2, #0x0
	mul		r0, r7
	asr		r0, r0, #0xf
	add		r1, r1, r0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	and		r3, r6
	and		r4, r6
	lsl		r4, r4, #0x5
	orr		r3, r4
	and		r1, r6
	lsl		r1, r1, #0xa
	orr		r3, r1
	mov		r0, r9
	strh	r3, [r0, #0x0]
	mov		r5, #0x2
	add		r9, r5
	add		r8, r5
	ldr		r7, [sp, #0x8]
	add		r7, #0x2
	str		r7, [sp, #0x8]
	mov		r0, #0x1
	neg		r0, r0
	add		r12, r0
	mov		r5, r12
	cmp		r5, #0x0
	bne		_0800f182
_0800f1fc:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800f20c:	.4byte 0x08101068
_0800f210:	.4byte 0x000003FF
	thumb_func_end sub_0800f124

	thumb_func_start sub_0800f214
sub_0800f214:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r7, r0, #0x0
	mov		r0, #0x1
	mov		r10, r0
	mov		r0, #0xb1
	lsl		r0, r0, #0x1
	mov		r9, r0
	ldr		r0, _0800f260
	str		r0, [sp, #0x8]
	mov		r0, #0x0
	mov		r8, r0
_0800f234:
	mov		r0, r10
	lsl		r1, r0, #0x2
	add		r0, r7, #0x0
	add		r0, #0x2c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x6
	bne		_0800f298
	add		r0, r7, #0x0
	add		r0, #0x3c
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	add		r1, r2, #0x1
	str		r1, [r0, #0x0]
	cmp		r1, #0x10
	bgt		_0800f268
	add		r5, r1, #0x0
	ldr		r6, _0800f260
	add		r6, r8
	ldr		r4, _0800f264
	b		_0800f272

.incbin "base.gba", 0xF25E, 0x2

_0800f260:	.4byte 0x080df05a
_0800f264:	.4byte 0x080df06e

_0800f268:
	add		r5, r2, #0x0
	sub		r5, #0xf
	ldr		r6, _0800f290
	add		r6, r8
	ldr		r4, _0800f294
_0800f272:
	add		r4, r8
	mov		r0, #0x0
	bl		sub_08028130
	add		r2, r0, #0x0
	add		r2, r9
	str		r5, [sp, #0x0]
	mov		r0, #0x10
	str		r0, [sp, #0x4]
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	mov		r3, #0x5
	bl		sub_0800f124
	b		_0800f2b4

_0800f290:	.4byte 0x080df06e
_0800f294:	.4byte 0x080df064

_0800f298:
	add		r0, r7, #0x0
	add		r0, #0x3c
	add		r0, r0, r1
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, r9
	ldr		r0, [sp, #0x8]
	mov		r2, #0x5
	bl		sub_08071b6c
_0800f2b4:
	mov		r0, #0x20
	add		r9, r0
	ldr		r0, [sp, #0x8]
	add		r0, #0x20
	str		r0, [sp, #0x8]
	mov		r0, #0x20
	add		r8, r0
	mov		r0, #0x1
	add		r10, r0
	mov		r0, r10
	cmp		r0, #0x3
	ble		_0800f234
	ldr		r0, [r7, #0x30]
	cmp		r0, #0x6
	bne		_0800f314
	ldr		r0, [r7, #0x40]
	cmp		r0, #0x10
	bgt		_0800f2e8
	add		r4, r0, #0x0
	ldr		r6, _0800f2e0
	ldr		r5, _0800f2e4
	b		_0800f2f0

_0800f2e0:	.4byte 0x080df0b8
_0800f2e4:	.4byte 0x080df0d8

_0800f2e8:
	add		r4, r0, #0x0
	sub		r4, #0x10
	ldr		r6, _0800f30c
	ldr		r5, _0800f310
_0800f2f0:
	mov		r0, #0x1
	bl		sub_08028130
	add		r2, r0, #0x0
	add		r2, #0xc0
	str		r4, [sp, #0x0]
	mov		r0, #0x10
	str		r0, [sp, #0x4]
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r3, #0x10
	bl		sub_0800f124
	b		_0800f328

_0800f30c:	.4byte 0x080df0d8
_0800f310:	.4byte 0x080df0b8

_0800f314:
	ldr		r4, _0800f340
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xc0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
_0800f328:
	mov		r0, #0x1
	bl		sub_08028168
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xF33E, 0x2

_0800f340:	.4byte 0x080df0b8
	thumb_func_end sub_0800f214

	thumb_func_start sub_0800f344
sub_0800f344:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	mov		r5, #0x0
	mov		r1, #0xfa
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	bge		_0800f452
	mov		r7, #0x1
	mov		r3, #0xfb
	lsl		r3, r3, #0x2
	mov		r9, r3
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	mov		r8, r0
	add		r1, r4, #0x0
	add		r1, r9
	mov		r10, r1
	mov		r6, #0x0
	mov		r12, r6
_0800f376:
	mov		r0, #0xaa
	lsl		r0, r0, #0x2
	add		r0, r12
	add		r2, r4, r0
	ldr		r0, [r2, #0x20]
	cmp		r0, #0x1
	beq		_0800f3bc
	cmp		r0, #0x1
	bgt		_0800f38e
	cmp		r0, #0x0
	beq		_0800f398
	b		_0800f43e
_0800f38e:
	cmp		r0, #0x2
	beq		_0800f3cc
	cmp		r0, #0x3
	beq		_0800f40c
	b		_0800f43e
_0800f398:
	ldr		r0, _0800f3b8
	strh	r0, [r2, #0x0]
	mov		r0, #0x58
	strh	r0, [r2, #0x2]
	mov		r0, #0x60
	str		r0, [r2, #0x4]
	sub		r0, #0x61
	str		r0, [r2, #0x8]
	str		r7, [r2, #0x14]
	str		r5, [r2, #0x18]
	str		r7, [r2, #0x20]
	str		r6, [r2, #0x1c]
	mov		r0, #0x3
	str		r0, [r2, #0x24]
	b		_0800f43e

.incbin "base.gba", 0xF3B6, 0x2

_0800f3b8:	.4byte 0x0000FFF0

_0800f3bc:
	ldr		r0, [r2, #0x1c]
	sub		r0, #0x1
	str		r0, [r2, #0x1c]
	cmp		r0, #0x0
	bge		_0800f43e
	mov		r0, #0x0
	str		r0, [r2, #0x1c]
	b		_0800f43a
_0800f3cc:
	mov		r3, r9
	add		r1, r4, r3
	ldr		r0, [r1, #0x0]
	mov		r3, #0x1
	and		r0, r3
	cmp		r0, #0x0
	beq		_0800f3ee
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	strh	r0, [r2, #0x0]
	ldr		r0, [r1, #0x0]
	and		r0, r3
	cmp		r0, #0x0
	beq		_0800f3ee
	ldrh	r0, [r2, #0x2]
	add		r0, #0x1
	b		_0800f3f2
_0800f3ee:
	ldrh	r0, [r2, #0x2]
	sub		r0, #0x1
_0800f3f2:
	strh	r0, [r2, #0x2]
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r0, r8
	ble		_0800f43e
	ldr		r3, _0800f408
	add		r0, r1, r3
	strh	r0, [r2, #0x0]
	mov		r0, #0x3
	b		_0800f43c

_0800f408:	.4byte 0xFFFFFEF0

_0800f40c:
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	and		r0, r7
	cmp		r0, #0x0
	beq		_0800f41c
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	strh	r0, [r2, #0x0]
_0800f41c:
	ldr		r0, [r2, #0x4]
	add		r0, #0x2
	mov		r1, #0x7f
	and		r0, r1
	str		r0, [r2, #0x4]
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r0, r8
	ble		_0800f43e
	ldr		r3, _0800f460
	add		r0, r1, r3
	strh	r0, [r2, #0x0]
	mov		r0, #0x60
	str		r0, [r2, #0x4]
_0800f43a:
	mov		r0, #0x2
_0800f43c:
	str		r0, [r2, #0x20]
_0800f43e:
	add		r6, #0x42
	mov		r0, #0x28
	add		r12, r0
	add		r5, #0x1
	mov		r1, #0xfa
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	blt		_0800f376
_0800f452:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800f460:	.4byte 0xFFFFFEF0
	thumb_func_end sub_0800f344

	thumb_func_start sub_0800f464
sub_0800f464:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r9, r0
	bl		sub_0800f344
	mov		r0, #0x0
	mov		r8, r0
	b		_0800f5a2
_0800f47c:
	mov		r1, r8
	lsl		r0, r1, #0x2
	add		r1, r0, r1
	lsl		r1, r1, #0x3
	mov		r2, #0xaa
	lsl		r2, r2, #0x2
	add		r1, r1, r2
	mov		r3, r9
	add		r4, r3, r1
	ldr		r1, [r4, #0x8]
	ldr		r2, [r4, #0x4]
	mov		r10, r0
	cmp		r1, r2
	beq		_0800f516
	ldr		r1, _0800f4a4
	cmp		r2, #0x3f
	ble		_0800f4a8
	mov		r0, #0x7f
	sub		r0, r0, r2
	b		_0800f4aa

_0800f4a4:	.4byte 0x080f5410

_0800f4a8:
	add		r0, r2, #0x0
_0800f4aa:
	add		r0, r1, r0
	ldrb	r3, [r0, #0x0]
	ldr		r0, _0800f4dc
	ldr		r2, [r0, #0x0]
	sub		r0, #0x4
	ldr		r1, [r0, #0x0]
	ldr		r0, [r4, #0x14]
	cmp		r0, #0x1
	bne		_0800f4e4
	ldr		r0, [r4, #0x18]
	mul		r1, r0
	add		r1, r2, r1
	lsl		r0, r3, #0x9
	mov		r2, #0x88
	lsl		r2, r2, #0x9
	add		r0, r0, r2
	add		r7, r1, r0
	mov		r3, r8
	lsl		r0, r3, #0xa
	ldr		r1, _0800f4e0
	add		r6, r0, r1
	mov		r5, #0x80
	lsl		r5, r5, #0x2
	b		_0800f4fe

.incbin "base.gba", 0xF4DA, 0x2

_0800f4dc:	.4byte 0x02037878
_0800f4e0:	.4byte 0x06014000

_0800f4e4:
	ldr		r0, [r4, #0x18]
	mul		r1, r0
	add		r1, r2, r1
	lsl		r0, r3, #0x7
	mov		r2, #0xa4
	lsl		r2, r2, #0x9
	add		r0, r0, r2
	add		r7, r1, r0
	mov		r3, r8
	lsl		r0, r3, #0xa
	ldr		r1, _0800f554
	add		r6, r0, r1
	mov		r5, #0x80
_0800f4fe:
	bl		sub_08029f34
	lsr		r3, r5, #0x1
	mov		r1, #0x80
	lsl		r1, r1, #0x18
	orr		r3, r1
	add		r1, r7, #0x0
	add		r2, r6, #0x0
	bl		sub_08029ee4
	ldr		r0, [r4, #0x4]
	str		r0, [r4, #0x8]
_0800f516:
	ldr		r0, [r4, #0x14]
	ldr		r0, _0800f558
	add		r0, r10
	ldr		r0, [r0, #0x0]
	add		r5, r4, #0x0
	add		r5, #0xc
	ldr		r6, [sp, #0x8]
	mov		r7, r8
	add		r7, #0x1
	add		r2, r0, #0x0
	add		r1, r5, #0x0
	mov		r3, #0x3
_0800f52e:
	ldrh	r0, [r2, #0x0]
	strh	r0, [r1, #0x0]
	add		r2, #0x2
	add		r1, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0800f52e
	ldr		r0, [r4, #0x4]
	mov		r1, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800f55c
	ldrh	r1, [r4, #0x10]
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r0, r2, #0x0
	orr		r0, r1
	b		_0800f564

.incbin "base.gba", 0xF552, 0x2

_0800f554:	.4byte 0x06014000
_0800f558:	.4byte 0x080f5490

_0800f55c:
	ldrh	r0, [r4, #0x10]
	ldr		r3, _0800f5c0
	add		r1, r3, #0x0
	and		r0, r1
_0800f564:
	strh	r0, [r4, #0x10]
	ldrh	r1, [r4, #0x12]
	ldr		r2, _0800f5c4
	add		r0, r2, #0x0
	and		r1, r0
	ldr		r0, [r4, #0x24]
	lsl		r0, r0, #0xa
	orr		r1, r0
	strh	r1, [r4, #0x12]
	ldrh	r0, [r4, #0x0]
	mov		r3, r9
	ldrh	r1, [r3, #0x4]
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	ldrh	r2, [r4, #0x2]
	ldrh	r1, [r3, #0x6]
	sub		r2, r2, r1
	lsl		r2, r2, #0x10
	lsr		r0, r0, #0x10
	orr		r0, r2
	str		r0, [sp, #0x8]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x4]
	add		r0, r5, #0x0
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	mov		r8, r7
_0800f5a2:
	mov		r0, #0xfa
	lsl		r0, r0, #0x2
	add		r0, r9
	ldr		r0, [r0, #0x0]
	cmp		r8, r0
	bge		_0800f5b0
	b		_0800f47c
_0800f5b0:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0800f5c0:	.4byte 0x0000EFFF
_0800f5c4:	.4byte 0x0000F3FF
	ldr		r0, _0800f670
	ldr		r1, [r0, #0x0]
	mov		r0, #0xfc
	lsl		r0, r0, #0x2
	add		r2, r1, r0
	ldr		r0, [r2, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	asr		r0, r0, #0x2
	ldrh	r3, [r1, #0x10]
	strh	r0, [r1, #0x10]
	ldr		r0, [r2, #0x0]
	neg		r0, r0
	asr		r0, r0, #0x2
	ldrh	r2, [r1, #0x12]
	strh	r0, [r1, #0x12]
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	add		r2, #0x8
	ldrh	r0, [r1, #0x2]
	strh	r0, [r2, #0x0]
	add		r2, #0x8
	ldrh	r0, [r1, #0x4]
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	ldrh	r0, [r1, #0x6]
	strh	r0, [r2, #0x0]
	sub		r2, #0x8
	ldrh	r0, [r1, #0x8]
	strh	r0, [r2, #0x0]
	add		r2, #0xa
	ldrh	r0, [r1, #0xa]
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	ldrh	r0, [r1, #0xc]
	strh	r0, [r2, #0x0]
	sub		r2, #0xa
	ldrh	r0, [r1, #0xe]
	strh	r0, [r2, #0x0]
	add		r2, #0xc
	ldrh	r0, [r1, #0x10]
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	ldrh	r0, [r1, #0x12]
	strh	r0, [r2, #0x0]
	sub		r2, #0xc
	ldrh	r0, [r1, #0x14]
	strh	r0, [r2, #0x0]
	add		r2, #0xe
	ldrh	r0, [r1, #0x16]
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	ldrh	r0, [r1, #0x18]
	strh	r0, [r2, #0x0]
	add		r2, #0x32
	ldrh	r0, [r1, #0x1a]
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	ldrh	r0, [r1, #0x1c]
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	ldrh	r0, [r1, #0x1e]
	strh	r0, [r2, #0x0]
	sub		r2, #0x14
	ldrh	r0, [r1, #0x20]
	strh	r0, [r2, #0x0]
	add		r2, #0x4
	ldrh	r0, [r1, #0x22]
	strh	r0, [r2, #0x0]
	sub		r2, #0x2
	ldrh	r0, [r1, #0x24]
	strh	r0, [r2, #0x0]
	add		r2, #0x4
	ldrh	r0, [r1, #0x26]
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	ldrh	r0, [r1, #0x28]
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	ldrh	r0, [r1, #0x2a]
	strh	r0, [r2, #0x0]
	bx		lr

_0800f670:	.4byte 0x030000F8
	thumb_func_end sub_0800f464

	thumb_func_start sub_0800f674
sub_0800f674:
	push	{ r4, r5, r6, lr }
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6 }
	sub		sp, #0x4
	ldr		r0, _0800f8a0
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _0800f8a4
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe0
	add		r0, r4, #0x0
	mov		r2, #0x10
	bl		_CallHardwareSetCpuFast
	ldr		r0, _0800f8a8
	ldr		r4, [r0, #0x0]
	mov		r0, #0xa0
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r0, #0xe0
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x0
	bl		sub_08028130
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r0, _0800f8ac
	ldr		r0, [r0, #0x0]
	ldr		r5, _0800f8b0
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800f8b4
	ldr		r1, _0800f8b8
	mov		r8, r1
	add		r1, r5, #0x0
	mov		r3, r8
	bl		sub_08029ee4
	bl		sub_08011040
	ldr		r0, _0800f8bc
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800f8c0
	add		r1, r5, #0x0
	mov		r3, r8
	bl		sub_08029ee4
	bl		sub_08011040
	ldr		r0, _0800f8c4
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800f8c8
	add		r1, r5, #0x0
	mov		r3, r8
	bl		sub_08029ee4
	bl		sub_08011040
	ldr		r0, _0800f8cc
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800f8d0
	ldr		r4, _0800f8d4
	add		r1, r5, #0x0
	add		r3, r4, #0x0
	bl		sub_08029ee4
	bl		sub_08011040
	ldr		r0, _0800f8d8
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800f8dc
	add		r1, r5, #0x0
	add		r3, r4, #0x0
	bl		sub_08029ee4
	bl		sub_08011040
	ldr		r0, _0800f8e0
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800f8e4
	ldr		r1, _0800f8e8
	mov		r9, r1
	add		r1, r5, #0x0
	mov		r3, r9
	bl		sub_08029ee4
	bl		sub_08011040
	ldr		r0, _0800f8ec
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r6, #0x0
	str		r6, [sp, #0x0]
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r2, _0800f8f0
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_080281fc
	bl		sub_08011040
	ldr		r0, _0800f8f4
	ldr		r4, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x1
	bl		sub_08028130
	strh	r6, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r0, _0800f8f8
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800f8fc
	ldr		r3, _0800f900
	add		r1, r5, #0x0
	bl		sub_08029ee4
	bl		sub_08011040
	ldr		r0, _0800f904
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800f908
	add		r1, r5, #0x0
	mov		r3, r8
	bl		sub_08029ee4
	bl		sub_08011040
	ldr		r0, _0800f90c
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800f910
	ldr		r3, _0800f914
	add		r1, r5, #0x0
	bl		sub_08029ee4
	bl		sub_08011040
	ldr		r0, _0800f918
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800f91c
	add		r1, r5, #0x0
	mov		r3, r9
	bl		sub_08029ee4
	bl		sub_08011040
	ldr		r0, _0800f920
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	ldr		r4, [r0, #0x0]
	mov		r5, #0x7
_0800f85c:
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, r1, r6
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	add		r6, #0x20
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0800f85c
	mov		r0, #0x1
	bl		sub_08028168
	bl		sub_08029f34
	ldr		r1, _0800f924
	ldr		r2, _0800f928
	ldr		r3, _0800f92c
	bl		sub_08029ee4
	add		sp, #0x4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xF89E, 0x2

_0800f8a0:	.4byte 0x020378D0
_0800f8a4:	.4byte 0x020378E4
_0800f8a8:	.4byte 0x020378D4
_0800f8ac:	.4byte 0x020378FC
_0800f8b0:	.4byte 0x02037900
_0800f8b4:	.4byte 0x06008000
_0800f8b8:	.4byte 0x80000C00
_0800f8bc:	.4byte 0x020378F8
_0800f8c0:	.4byte 0x06009800
_0800f8c4:	.4byte 0x020378F4
_0800f8c8:	.4byte 0x0600B000
_0800f8cc:	.4byte 0x020378C4
_0800f8d0:	.4byte 0x0600C800
_0800f8d4:	.4byte 0x80000400
_0800f8d8:	.4byte 0x020378B8
_0800f8dc:	.4byte 0x0600EC00
_0800f8e0:	.4byte 0x020378B4
_0800f8e4:	.4byte 0x0600F400
_0800f8e8:	.4byte 0x80000600
_0800f8ec:	.4byte 0x020378AC
_0800f8f0:	.4byte 0x01000080
_0800f8f4:	.4byte 0x020378CC
_0800f8f8:	.4byte 0x020378C0
_0800f8fc:	.4byte 0x06010000
_0800f900:	.4byte 0x80000A00
_0800f904:	.4byte 0x020378F0
_0800f908:	.4byte 0x06011400
_0800f90c:	.4byte 0x020378EC
_0800f910:	.4byte 0x06012C00
_0800f914:	.4byte 0x80000200
_0800f918:	.4byte 0x020378E8
_0800f91c:	.4byte 0x06013000
_0800f920:	.4byte 0x02037870
_0800f924:	.4byte 0x0203EECC
_0800f928:	.4byte 0x06013C00
_0800f92c:	.4byte 0x81000040
	thumb_func_end sub_0800f674

	thumb_func_start sub_0800f930
sub_0800f930:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r0, _0800faa4
	ldr		r7, [r0, #0x0]
	mov		r5, #0xc0
	lsl		r5, r5, #0x13
	mov		r4, #0xf
_0800f940:
	bl		sub_08029f34
	ldr		r1, _0800faa8
	add		r2, r5, #0x0
	ldr		r3, _0800faac
	bl		sub_08029ee4
	bl		sub_08011040
	mov		r0, #0xc0
	lsl		r0, r0, #0x5
	add		r5, r5, r0
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0800f940
	mov		r5, #0x0
	bl		sub_0800f674
	ldr		r0, _0800fab0
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe0
	add		r0, r4, #0x0
	mov		r2, #0x10
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r0, _0800fab4
	ldr		r0, [r0, #0x0]
	ldr		r4, _0800fab8
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800fabc
	ldr		r3, _0800fac0
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		sub_08011040
	ldr		r0, _0800fac4
	ldr		r0, [r0, #0x0]
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	mov		r2, #0xc0
	lsl		r2, r2, #0x13
	ldr		r1, _0800fac8
	mov		r8, r1
	add		r1, r4, #0x0
	mov		r3, r8
	bl		sub_08029ee4
	bl		sub_08011040
	ldr		r0, _0800facc
	ldr		r0, [r0, #0x0]
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800fad0
	ldr		r6, _0800fad4
	add		r1, r4, #0x0
	add		r3, r6, #0x0
	bl		sub_08029ee4
	bl		sub_08011040
	ldr		r0, _0800fad8
	ldr		r0, [r0, #0x0]
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800fadc
	add		r1, r4, #0x0
	add		r3, r6, #0x0
	bl		sub_08029ee4
	bl		sub_08011040
	ldr		r0, _0800fae0
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800fae4
	add		r1, r4, #0x0
	mov		r3, r8
	bl		sub_08029ee4
	bl		sub_08011040
	ldr		r0, _0800fae8
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0800faec
	add		r1, r4, #0x0
	mov		r3, r8
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldrh	r0, [r7, #0x2]
	ldr		r0, _0800faf0
	strh	r0, [r7, #0x2]
	ldrh	r0, [r7, #0x8]
	ldr		r0, _0800faf4
	strh	r0, [r7, #0x8]
	ldrh	r0, [r7, #0xe]
	mov		r0, #0x6
	strh	r0, [r7, #0xe]
	ldrh	r0, [r7, #0x14]
	mov		r0, #0x83
	lsl		r0, r0, #0x1
	strh	r0, [r7, #0x14]
	ldrh	r0, [r7, #0x0]
	mov		r0, #0xfa
	lsl		r0, r0, #0x5
	strh	r0, [r7, #0x0]
	ldrh	r0, [r7, #0x1a]
	mov		r0, #0xbf
	strh	r0, [r7, #0x1a]
	ldrh	r0, [r7, #0x1e]
	mov		r0, #0x10
	strh	r0, [r7, #0x1e]
	ldrh	r0, [r7, #0x4]
	strh	r5, [r7, #0x4]
	ldrh	r0, [r7, #0x6]
	strh	r5, [r7, #0x6]
	ldrh	r0, [r7, #0xa]
	strh	r5, [r7, #0xa]
	ldrh	r0, [r7, #0xc]
	strh	r5, [r7, #0xc]
	ldrh	r0, [r7, #0x10]
	strh	r5, [r7, #0x10]
	ldrh	r0, [r7, #0x12]
	strh	r5, [r7, #0x12]
	ldrh	r0, [r7, #0x16]
	strh	r5, [r7, #0x16]
	ldrh	r0, [r7, #0x18]
	strh	r5, [r7, #0x18]
	mov		r2, #0xfc
	lsl		r2, r2, #0x2
	add		r0, r7, r2
	str		r5, [r0, #0x0]
	ldrh	r0, [r7, #0x2a]
	ldr		r0, _0800faf8
	strh	r0, [r7, #0x2a]
	ldrh	r1, [r7, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	add		r0, r2, #0x0
	ldrh	r2, [r7, #0x0]
	orr		r0, r1
	strh	r0, [r7, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0xFAA2, 0x2

_0800faa4:	.4byte 0x030000F8
_0800faa8:	.4byte 0x0203EECE
_0800faac:	.4byte 0x81000C00
_0800fab0:	.4byte 0x020378E4
_0800fab4:	.4byte 0x020378E0
_0800fab8:	.4byte 0x02037900
_0800fabc:	.4byte 0x06004000
_0800fac0:	.4byte 0x80000600
_0800fac4:	.4byte 0x020378DC
_0800fac8:	.4byte 0x80000400
_0800facc:	.4byte 0x020378D8
_0800fad0:	.4byte 0x06000800
_0800fad4:	.4byte 0x80000280
_0800fad8:	.4byte 0x020378A4
_0800fadc:	.4byte 0x06002000
_0800fae0:	.4byte 0x080e0738
_0800fae4:	.4byte 0x06017800
_0800fae8:	.4byte 0x080e049c
_0800faec:	.4byte 0x06017000
_0800faf0:	.4byte 0x00004208
_0800faf4:	.4byte 0x00004409
_0800faf8:	.4byte 0x0000303F
	thumb_func_end sub_0800f930

	thumb_func_start sub_0800fafc
sub_0800fafc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	mov		r0, #0x0
	str		r0, [sp, #0xc]
	mov		r10, r0
	ldr		r0, _0800fe48
	ldr		r1, [sp, #0xc]
	str		r1, [r0, #0x0]
	ldr		r0, _0800fe4c
	str		r1, [r0, #0x0]
	ldr		r0, _0800fe50
	strh	r1, [r0, #0x0]
	ldr		r1, _0800fe54
	ldr		r0, _0800fe58
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fe5c
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fe60
	str		r0, [r1, #0x0]
	ldr		r0, _0800fe64
	ldr		r2, _0800fe68
	str		r2, [r0, #0x0]
	sub		r1, #0x8
	ldr		r0, _0800fe6c
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fe70
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fe74
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fe78
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fe7c
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fe80
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fe84
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fe88
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fe8c
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fe90
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fe94
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fe98
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fe9c
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fea0
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fea4
	str		r0, [r1, #0x0]
	ldr		r0, _0800fea8
	str		r2, [r0, #0x0]
	sub		r1, #0x8
	ldr		r0, _0800feac
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800feb0
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800feb4
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800feb8
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800febc
	str		r0, [r1, #0x0]
	sub		r1, #0x24
	ldr		r0, _0800fec0
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	mov		r0, #0xb0
	lsl		r0, r0, #0x9
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fec4
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fec8
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fecc
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fed0
	str		r0, [r1, #0x0]
	sub		r1, #0x4
	ldr		r0, _0800fed4
	str		r0, [r1, #0x0]
	ldr		r6, _0800fed8
	mov		r4, #0x0
	ldr		r5, _0800fedc
_0800fbe2:
	add		r0, r4, #0x0
	bl		sub_0802d6a0
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x30]
	stmia	r6!, { r0 }
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_0800fbe2
	ldr		r6, _0800fee0
	mov		r4, #0x0
	ldr		r7, _0800fedc
	ldr		r5, _0800fee4
_0800fc00:
	add		r0, r4, #0x0
	bl		sub_0802d6a0
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	add		r1, r0, r5
	ldr		r3, _0800fee8
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	add		r1, r1, r0
	stmia	r6!, {  r1 }
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_0800fc00
	ldr		r1, _0800feec
	mov		r0, #0x0
	bl		sub_080281c4
	ldr		r0, _0800fef0
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	ldr		r0, _0800fef4
	str		r4, [r0, #0x0]
	ldr		r5, _0800fef8
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	str		r0, [r5, #0x0]
	add		r6, r0, #0x0
	str		r4, [sp, #0x8]
	ldr		r2, _0800fefc
	add		r0, sp, #0x8
	add		r1, r6, #0x0
	bl		_CallHardwareSetCpuFast
	bl		sub_080297c8
	bl		sub_0800f930
	add		r2, r6, #0x0
	add		r2, #0x4c
	ldr		r3, _0800ff00
	mov		r0, #0x70
	mov		r1, #0x1e
	bl		sub_08003fc4
	mov		r0, #0xa9
	lsl		r0, r0, #0x2
	add		r1, r6, r0
	mov		r0, #0xa
	str		r0, [r1, #0x0]
	mov		r1, #0x0
	mov		r2, #0xfe
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	mov		r3, #0x78
	mov		r5, #0x45
	mov		r4, #0x1
	mov		r2, #0x3
_0800fc84:
	strh	r3, [r0, #0x0]
	strh	r5, [r0, #0x2]
	strh	r1, [r0, #0x6]
	strh	r1, [r0, #0x4]
	strh	r1, [r0, #0x8]
	strb	r4, [r0, #0xa]
	strh	r1, [r0, #0xc]
	add		r0, #0x18
	add		r3, #0x3c
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_0800fc84
	ldr		r3, _0800ff04
	add		r0, r6, r3
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	ldr		r1, _0800ff08
	add		r0, r6, r1
	str		r4, [r0, #0x0]
	mov		r2, #0xfe
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	ldrh	r1, [r0, #0x0]
	sub		r3, #0x4
	add		r0, r6, r3
	mov		r5, #0x0
	strh	r1, [r0, #0x0]
	ldr		r1, _0800ff0c
	add		r0, r6, r1
	ldrh	r1, [r0, #0x0]
	add		r2, #0xb2
	add		r0, r6, r2
	strh	r1, [r0, #0x0]
	sub		r3, #0x24
	add		r0, r6, r3
	bl		sub_08013a60
	ldr		r1, _0800ff10
	add		r0, r6, r1
	ldr		r1, _0800ff14
	str		r1, [r0, #0x0]
	mov		r1, #0x94
	lsl		r1, r1, #0x1
	strh	r1, [r0, #0x4]
	mov		r1, #0x90
	strh	r1, [r0, #0x6]
	add		r1, #0x70
	strh	r1, [r0, #0xa]
	strh	r1, [r0, #0x8]
	strh	r4, [r0, #0xc]
	strb	r5, [r0, #0xe]
	strh	r4, [r0, #0x10]
	ldr		r2, _0800ff18
	add		r0, r6, r2
	add		r1, #0xb8
	strh	r1, [r0, #0x4]
	mov		r1, #0x50
	strh	r1, [r0, #0x6]
	strh	r4, [r0, #0xa]
	strh	r4, [r0, #0x8]
	strh	r4, [r0, #0xc]
	strb	r5, [r0, #0xe]
	strh	r4, [r0, #0x10]
	mov		r3, #0xfa
	lsl		r3, r3, #0x2
	add		r1, r6, r3
	mov		r0, #0x8
	str		r0, [r1, #0x0]
	mov		r3, #0x0
	mov		r0, #0x3c
	add		r0, r0, r6
	mov		r8, r0
	mov		r0, #0xaa
	lsl		r0, r0, #0x2
	add		r2, r6, r0
_0800fd1a:
	str		r4, [r2, #0x20]
	add		r2, #0x28
	add		r3, #0x1
	ldr		r0, [r1, #0x0]
	cmp		r3, r0
	blt		_0800fd1a
	mov		r0, #0x0
	mov		r1, #0xfb
	lsl		r1, r1, #0x2
	add		r5, r6, r1
_0800fd2e:
	add		r7, r0, #0x1
	mov		r4, #0xff
_0800fd32:
	ldr		r0, [r5, #0x0]
	add		r0, #0x1
	str		r0, [r5, #0x0]
	add		r0, r6, #0x0
	bl		sub_0800f344
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0800fd32
	bl		sub_08011040
	add		r0, r7, #0x0
	cmp		r0, #0x1
	ble		_0800fd2e
	mov		r1, r8
	mov		r2, #0x0
	add		r0, r1, #0x0
	add		r0, #0xc
_0800fd56:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	cmp		r0, r1
	bge		_0800fd56
	mov		r2, #0x94
	lsl		r2, r2, #0x3
	add		r0, r6, r2
	mov		r7, #0x0
	str		r7, [r0, #0x0]
	ldr		r3, _0800ff1c
	add		r0, r6, r3
	str		r7, [r0, #0x0]
	mov		r0, #0x28
	bl		sub_0807073c
	ldr		r4, _0800ff20
	add		r1, r4, #0x0
	cmp		r4, #0x0
	bne		_0800fd7e
	ldr		r1, _0800ff24
_0800fd7e:
	mov		r0, #0x6
	bl		sub_0807df68
	add		r1, r4, #0x0
	cmp		r1, #0x0
	bne		_0800fd8c
	ldr		r1, _0800ff24
_0800fd8c:
	mov		r0, #0x7
	bl		sub_0807df68
	ldr		r5, _0800ff28
	ldr		r4, _0800ff2c
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	str		r5, [r4, #0xc]
	mov		r0, #0x2
	ldr		r1, _0800ff30
	bl		sub_0807df78
	ldr		r1, _0800ff34
	cmp		r1, #0x0
	bne		_0800fdb2
	ldr		r1, _0800ff24
_0800fdb2:
	mov		r0, #0x0
	bl		sub_0807df68
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	mov		r0, #0x2
	bl		sub_0807df78
	ldr		r1, _0800ff38
	ldr		r0, _0800ff3c
	str		r1, [r0, #0x28]
	add		r1, r0, #0x0
	add		r1, #0x4b
	strb	r7, [r1, #0x0]
	bl		sub_08011978
	thumb_func_end sub_0800fafc

	non_word_aligned_thumb_func_start sub_0800fdd2
sub_0800fdd2:
	bl		sub_0802983c
	bl		sub_08071ba4
	bl		sub_08070730
	mov		r0, #0xfb
	lsl		r0, r0, #0x2
	add		r1, r6, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r1, [sp, #0xc]
	cmp		r1, #0xf
	bgt		_0800fe14
	ldr		r2, _0800fe50
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800fe14
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x30
	and		r0, r1
	cmp		r0, #0x0
	beq		_0800fe14
	mov		r2, #0x10
	str		r2, [sp, #0xc]
	ldr		r1, _0800ff40
	mov		r0, #0x0
	strh		r0, [r1, #0x16]
	bl		sub_08027744
_0800fe14:
	ldr		r3, [sp, #0xc]
	cmp		r3, #0xd
	blt		_0800fe2a
	cmp		r3, #0x12
	bgt		_0800fe20
	b		_0800ff94
_0800fe20:
	cmp		r3, #0x1d
	bgt		_0800fe2a
	cmp		r3, #0x19
	blt		_0800fe2a
	b		_0800ff94
_0800fe2a:
	mov		r2, #0x1
	ldr		r4, _0800ff3c
	mov		r3, #0x1
	add		r1, r6, #0x0
	add		r1, #0x30
	add		r5, r4, #0x0
_0800fe36:
	ldrb	r0, [r5, #0x1D]
	asr		r0, r2
	and		r0, r3
	cmp		r0, #0x0
	beq		_0800fe42
	b		_0800ff44
_0800fe42:
	mov		r0, #0x4
	b		_0800ff54

.incbin "base.gba", 0xFE46, 0x2

.align 2, 0
_0800fe48:	.4byte 0x03002D50
_0800fe4c:	.4byte 0x03002FD0
_0800fe50:	.4byte SIOControlRegister
_0800fe54:	.4byte 0x020378FC
_0800fe58:	.4byte 0x080c558c
_0800fe5c:	.4byte 0x080c5bc0
_0800fe60:	.4byte 0x080c6300
_0800fe64:	.4byte 0x020378F0
_0800fe68:	.4byte 0x080d6e20
_0800fe6c:	.4byte 0x080d766c
_0800fe70:	.4byte 0x080d784c
_0800fe74:	.4byte 0x0809866c
_0800fe78:	.4byte 0x08098b0c
_0800fe7c:	.4byte 0x080993b8
_0800fe80:	.4byte 0x080994bc
_0800fe84:	.4byte 0x080cdf44
_0800fe88:	.4byte 0x080ded7c
_0800fe8c:	.4byte 0x080dee58
_0800fe90:	.4byte 0x080def64
_0800fe94:	.4byte 0x080df0f8
_0800fe98:	.4byte 0x080df4e4
_0800fe9c:	.4byte 0x080dfa84
_0800fea0:	.4byte 0x080df2fc
_0800fea4:	.4byte 0x080d7eac
_0800fea8:	.4byte 0x020378B0
_0800feac:	.4byte 0x080dfc9c
_0800feb0:	.4byte 0x080e0238
_0800feb4:	.4byte 0x080e010c
_0800feb8:	.4byte sub_0802bfb4
_0800febc:	.4byte 0x0802c695
_0800fec0:	.4byte 0x08345800
_0800fec4:	.4byte 0x08344600
_0800fec8:	.4byte 0x0808b3e0
_0800fecc:	.4byte 0x080984e4
_0800fed0:	.4byte 0x080c6b0c
_0800fed4:	.4byte 0x080c730c
_0800fed8:	.4byte 0x0203788C
_0800fedc:	.4byte 0x08102bf8
_0800fee0:	.4byte 0x0203787C
_0800fee4:	.4byte 0x08258000
_0800fee8:	.4byte 0x082580c4
_0800feec:	.4byte 0x06001000
_0800fef0:	.4byte 0x03002D3C
_0800fef4:	.4byte 0x03002D44
_0800fef8:	.4byte 0x030000F8
_0800fefc:	.4byte 0x01000139
_0800ff00:	.4byte 0x080f53a4
_0800ff04:	.4byte 0x000004AC
_0800ff08:	.4byte 0x000004A4
_0800ff0c:	.4byte 0x000003FA
_0800ff10:	.4byte 0x00000454
_0800ff14:	.4byte 0x080e57cc
_0800ff18:	.4byte 0x0000046C
_0800ff1c:	.4byte 0x0000049C
_0800ff20:	.4byte 0x08011091
_0800ff24:	.4byte 0x080270f1
_0800ff28:	.4byte 0x0800f5c9
_0800ff2c:	.4byte RunGameLogic_CallBack
_0800ff30:	.4byte 0x00010001
_0800ff34:	.4byte 0x08010fa1
_0800ff38:	.4byte 0x08340000
_0800ff3c:	.4byte 0x03000100
_0800ff40:	.4byte 0x03003000

_0800ff44:
	ldrb	r0, [r4, #0x1E]
	asr		r0, r2
	and		r0, r3
	cmp		r0, #0x0
	bne		_0800ff52
	mov		r0, #0x5
	b		_0800ff54
_0800ff52:
	mov		r0, #0x6
_0800ff54:
	str		r0, [r1, #0x0]
	add		r1, #0x4
	add		r2, #0x1
	cmp		r2, #0x3
	bgt		_0800ff60
	b		_0800fe36
_0800ff60:
	ldrb	r0, [r4, #0x1E]
	mov		r1, #0xe
	and		r1, r0
	cmp		r1, #0x0
	beq		_0800ff8c
	ldrb	r0, [r4, #0x18]
	cmp		r0, #0x0
	beq		_0800ff78
	cmp		r0, #0xd1
	beq		_0800ff7c
	mov		r0, #0x0
	b		_0800ff7e
_0800ff78:
	mov		r0, #0x1
	b		_0800ff7e
_0800ff7c:
	mov		r0, #0x2
_0800ff7e:
	str		r0, [r6, #0x2c]
	ldrb	r0, [r4, #0x18]
	cmp		r0, #0xdf
	bls		_0800ff8e
	mov		r0, #0x3
	str		r0, [r6, #0x2c]
	b		_0800ff8e
_0800ff8c:
	str		r1, [r6, #0x2c]
_0800ff8e:
	add		r0, r4, #0x0
	bl		sub_08011140
_0800ff94:
	ldr		r0, [sp, #0xc]
	cmp		r0, #0x27
	bls		_0800ff9e
	bl		sub_08010d50
_0800ff9e:
	lsl		r0, r0, #0x2
	ldr		r1, _0800ffa8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0800ffa8:	.4byte 0x0800ffac
_0800ffac:	.4byte 0x0801004c

.incbin "base.gba", 0xFFB0, 0x3C
_0800ffec:	.4byte 0x08010bf4

.incbin "base.gba", 0xFFF0, 0x5C
	thumb_func_end sub_0800fdd2


.incbin "base.gba", 0x1004C, 0x81C
_08010868:	.4byte 0x08010880

.incbin "base.gba", 0x1086C, 0x388

_08010bf4:

.incbin "base.gba", 0x10BF4, 0xE
_08010c02:

.incbin "base.gba", 0x10C02, 0x5E
_08010c60:

.incbin "base.gba", 0x10C60, 0x2E
_08010c8e:

.incbin "base.gba", 0x10C8E, 0xA
_08010c98:	.4byte 0x08010fe9
_08010c9c:	.4byte 0x080270F1
_08010ca0:	.4byte 0x080dffe0
_08010ca4:	.4byte 0x02037900
_08010ca8:	.4byte 0x06001000
_08010cac:	.4byte 0x080e010c
_08010cb0:	.4byte 0x06002000
_08010cb4:	.4byte 0x08101068
_08010cb8:	.4byte 0xFFFFFF00

_08010cbc:

.incbin "base.gba", 0x10CBC, 0x1C
_08010cd8:	.4byte 0x00001008
_08010cdc:	.4byte 0x00000844

.incbin "base.gba", 0x10CE0, 0x70
	thumb_func_start sub_08010d50
sub_08010d50:
	add		r0, r6, #0x0
	bl		sub_0800ec48
	add		r0, r6, #0x0
	bl		sub_0800ef8c
	add		r0, r6, #0x0
	bl		sub_0800ecc8
	ldr		r3, [sp, #0xc]
	cmp		r3, #0xa
	bgt		_08010d6e
	add		r0, r6, #0x0
	bl		sub_0800f464
_08010d6e:
	add		r0, r6, #0x0
	bl		sub_0800f214
	bl		sub_0800fdd2
	mov		r0, #0x2
	bl		sub_0807df68
	mov		r5, #0x0
	ldr		r4, _08010dbc
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	str		r5, [r4, #0xc]
	mov		r0, #0x2
	ldr		r1, _08010dc0
	bl		sub_0807df78
	bl		sub_08029f58
	bl		sub_08070d78
	mov		r0, #0x2
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	bl		sub_0807df78
	mov		r0, #0x1
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x10DBA, 0x2

_08010dbc:	.4byte RunGameLogic_CallBack
_08010dc0:	.4byte 0x00010001
	thumb_func_end sub_08010d50

	thumb_func_start sub_08010dc4
sub_08010dc4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r7, #0x0
	mov		r0, #0x0
	mov		r8, r0
	ldr		r1, _08010e64
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r1, _08010e68
	mov		r0, #0x0
	bl		sub_080281c4
	ldr		r4, _08010e6c
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	str		r0, [r4, #0x0]
	add		r6, r0, #0x0
	mov		r1, #0x0
	ldr		r3, _08010e70
	mov		r2, #0x0
_08010df6:
	strb	r2, [r0, #0x0]
	add		r0, #0x1
	add		r1, #0x1
	cmp		r1, r3
	bls		_08010df6
	bl		sub_080297c8
	ldr		r5, _08010e74
	ldr		r4, _08010e78
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	str		r5, [r4, #0xc]
	mov		r0, #0x2
	ldr		r1, _08010e7c
	bl		sub_0807df78
	ldr		r1, _08010e80
	cmp		r1, #0x0
	bne		_08010e24
	ldr		r1, _08010e84
_08010e24:
	mov		r0, #0x0
	bl		sub_0807df68
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	mov		r0, #0x2
	bl		sub_0807df78
	mov		r0, #0x92
	bl		sub_0807073c
	ldr		r1, _08010e88
	mov		r9, r1
	ldr		r5, _08010e8c
_08010e40:
	bl		sub_0802983c
	bl		sub_08071ba4
	bl		sub_08070730
	mov		r2, #0xfb
	lsl		r2, r2, #0x2
	add		r1, r6, r2
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r7, #0x0
	beq		_08010e90
	cmp		r7, #0x1
	beq		_08010f02
	b		_08010e40

.incbin "base.gba", 0x10E62, 0x2

_08010e64:	.4byte InterruptEnableRegister
_08010e68:	.4byte 0x06001000
_08010e6c:	.4byte 0x030000F8
_08010e70:	.4byte 0x000004E3
_08010e74:	.4byte 0x0800F5C9
_08010e78:	.4byte RunGameLogic_CallBack
_08010e7c:	.4byte 0x00010001
_08010e80:	.4byte 0x08010FA1
_08010e84:	.4byte 0x080270F1
_08010e88:	.4byte 0x00000844
_08010e8c:	.4byte 0x00001008

_08010e90:
	ldrh	r0, [r6, #0x0]
	mov		r4, #0x0
	strh	r7, [r6, #0x0]
	ldr		r1, _08010f50
	cmp		r1, #0x0
	bne		_08010e9e
	ldr		r1, _08010f54
_08010e9e:
	mov		r0, #0x0
	bl		sub_0807df68
	mov		r4, #0xa0
	lsl		r4, r4, #0x13
	ldr		r0, _08010f58
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	strh	r7, [r4, #0x0]
	ldr		r0, _08010f5c
	ldr		r1, _08010f60
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r0, _08010f64
	ldr		r1, _08010f68
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r0, _08010f6c
	mov		r1, #0xc0
	lsl		r1, r1, #0x13
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r0, _08010f70
	ldr		r1, _08010f74
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldrh	r0, [r6, #0x2]
	mov		r0, #0x82
	lsl		r0, r0, #0x2
	strh	r0, [r6, #0x2]
	ldrh	r0, [r6, #0x8]
	ldr		r0, _08010f78
	strh	r0, [r6, #0x8]
	ldrh	r0, [r6, #0xe]
	mov		r0, #0xa
	strh	r0, [r6, #0xe]
	ldrh	r0, [r6, #0x14]
	ldr		r0, _08010f7c
	strh	r0, [r6, #0x14]
	ldrh	r0, [r6, #0x0]
	mov		r0, #0xe4
	lsl		r0, r0, #0x4
	strh	r0, [r6, #0x0]
	ldrh	r0, [r6, #0x1a]
	mov		r0, r9
	strh	r0, [r6, #0x1a]
	ldrh	r0, [r6, #0x1c]
	strh	r5, [r6, #0x1c]
	mov		r7, #0x1
_08010f02:
	mov		r1, #0x1
	add		r8, r1
	mov		r2, r8
	cmp		r2, #0x10
	bgt		_08010f88
	ldr		r1, _08010f80
	lsl		r0, r2, #0x1a
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08010f18
	add		r0, #0x3f
_08010f18:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	asr		r0, r0, #0xf
	ldr		r1, _08010f84
	add		r0, r0, r1
	ldrh	r1, [r6, #0xa]
	strh	r0, [r6, #0xa]
	ldrh	r0, [r6, #0xa]
	ldrh	r1, [r6, #0x4]
	strh	r0, [r6, #0x4]
	ldrh	r0, [r6, #0x1a]
	mov		r0, #0xbf
	strh	r0, [r6, #0x1a]
	mov		r2, r8
	lsl		r0, r2, #0x4
	neg		r0, r0
	cmp		r0, #0x0
	bge		_08010f46
	add		r0, #0xf
_08010f46:
	asr		r0, r0, #0x4
	add		r0, #0x10
	ldrh	r1, [r6, #0x1e]
	strh	r0, [r6, #0x1e]
	b		_08010e40

_08010f50:	.4byte 0x08010FE9
_08010f54:	.4byte 0x080270F1
_08010f58:	.4byte 0x080e09f0
_08010f5c:	.4byte 0x080e1214
_08010f60:	.4byte 0x06008000
_08010f64:	.4byte 0x080e0f80
_08010f68:	.4byte 0x06002000
_08010f6c:	.4byte 0x080e0a74
_08010f70:	.4byte 0x080e0b78
_08010f74:	.4byte 0x06006000
_08010f78:	.4byte 0x00004409
_08010f7c:	.4byte 0x00000C0A
_08010f80:	.4byte 0x08101068
_08010f84:	.4byte 0xFFFFFF00

_08010f88:
	mov		r0, #0x0
	mov		r8, r0
	ldrh	r0, [r6, #0x1c]
	strh	r5, [r6, #0x1c]
	ldrh	r0, [r6, #0x1a]
	mov		r1, r9
	strh	r1, [r6, #0x1a]
	ldrh	r0, [r6, #0x1e]
	mov		r0, #0x10
	strh	r0, [r6, #0x1e]
	mov		r7, #0x12
	b		_08010e40
	push	{ lr }
	bl		sub_0807006c
	bl		sub_08027148
	ldr		r1, _08010fe0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	bl		sub_08029924
	bl		sub_08029f34
	bl		sub_08029da8
	bl		sub_08028174
	bl		sub_08028210
	bl		sub_08029894
	ldr		r0, _08010fe4
	ldr		r0, [r0, #0xc]
	cmp		r0, #0x0
	beq		_08010fd4
	bl		sub_0807d7d0
_08010fd4:
	bl		sub_08011010
	bl		sub_08027158
	pop		{ r0 }
	bx		r0

_08010fe0:	.4byte DMA0Control
_08010fe4:	.4byte RunGameLogic_CallBack
	push	{ lr }
	bl		sub_0807006c
	bl		sub_08027148
	ldr		r0, _0801100c
	ldr		r0, [r0, #0xc]
	cmp		r0, #0x0
	beq		_08010ffe
	bl		sub_0807d7d0
_08010ffe:
	bl		sub_08011010
	bl		sub_08027158
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1100A, 0x2

_0801100c:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_08010dc4

	thumb_func_start sub_08011010
sub_08011010:
	push	{ r4, lr }
	ldr		r0, _08011030
	ldrh	r0, [r0, #0x0]
	ldr		r2, _08011034
	add		r1, r2, #0x0
	eor		r1, r0
	ldr		r4, _08011038
	ldr		r3, _0801103c
	ldrh	r2, [r3, #0x0]
	add		r0, r1, #0x0
	bic		r0, r2
	strh	r0, [r4, #0x0]
	strh	r1, [r3, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08011030:	.4byte KeyStatus
_08011034:	.4byte 0x000003FF
_08011038:	.4byte 0x03002E70
_0801103c:	.4byte 0x03002D38
	thumb_func_end sub_08011010

	thumb_func_start sub_08011040
sub_08011040:
	push	{ lr }
	bl		_DrawFrameRunAudio
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1104A, 0x46
	bx		lr

.incbin "base.gba", 0x11092, 0x2
	thumb_func_end sub_08011040

	thumb_func_start sub_08011094
sub_08011094:
	push	{ r4, r5, lr }
	add		r3, r1, #0x0
	add		r1, r2, #0x0
	ldr		r4, [sp, #0x0+0xc]
	ldr		r5, [sp, #0x4+0xc]
	mov		r0, #0xb0
	mul		r0, r3
	bl		sub_0807d80c
	add		r3, r0, #0x0
	cmp		r3, #0xb0
	ble		_080110ae
	mov		r3, #0x0
_080110ae:
	ldr		r0, [r5, #0x0]
	cmp		r0, r3
	bgt		_080110c8
	add		r0, #0xa
	cmp		r0, r3
	blt		_080110c8
	str		r3, [r5, #0x0]
	mov		r1, #0x10
	neg		r1, r1
	add		r0, r1, #0x0
	sub		r0, r0, r3
	ldrh	r1, [r4, #0x4]
	strh	r0, [r4, #0x4]
_080110c8:
	ldr		r0, _080110e0
	ldr		r1, [r0, #0x0]
	add		r1, #0x1
	str		r1, [r0, #0x0]
	mov		r0, #0x4
	and		r1, r0
	cmp		r1, #0x0
	beq		_080110e8
	ldrh	r0, [r4, #0x6]
	ldr		r0, _080110e4
	b		_080110ec

.incbin "base.gba", 0x110DE, 0x2

_080110e0:	.4byte 0x03002D3C
_080110e4:	.4byte 0x0000FF94

_080110e8:
	ldrh	r0, [r4, #0x6]
	ldr		r0, _08011104
_080110ec:
	strh	r0, [r4, #0x6]
	ldrh	r0, [r4, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r2, #0x0
	ldrh	r2, [r4, #0x0]
	orr		r1, r0
	strh	r1, [r4, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x11102, 0x2

_08011104:	.4byte 0x0000FF93
	thumb_func_end sub_08011094

	thumb_func_start sub_08011108
sub_08011108:
	push	{ r4, lr }
	add		r4, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0xc
	mov		r0, #0x8
	sub		r0, r0, r2
	lsl		r0, r0, #0x2
	lsl		r4, r0
	cmp		r2, #0x0
	beq		_0801113a
_08011120:
	lsr		r0, r4, #0x1c
	cmp		r0, #0x9
	bhi		_0801112a
	add		r0, #0x30
	b		_0801112c
_0801112a:
	add		r0, #0x37
_0801112c:
	orr		r0, r3
	strh	r0, [r1, #0x0]
	lsl		r4, r4, #0x4
	add		r1, #0x2
	sub		r2, #0x1
	cmp		r2, #0x0
	bne		_08011120
_0801113a:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08011108

	thumb_func_start sub_08011140
sub_08011140:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r7, r0, #0x0
	bl		sub_080119b4
	cmp		r0, #0x0
	beq		_08011158
	b		_08011648
_08011158:
	add		r0, r7, #0x0
	add		r0, #0x4a
	ldrb	r1, [r0, #0x0]
	str		r0, [sp, #0x0]
	cmp		r1, #0xf
	bls		_0801116c
	sub		r0, r1, #0x1
	ldr		r1, [sp, #0x0]
	strb	r0, [r1, #0x0]
	b		_08011648
_0801116c:
	add		r0, r7, #0x0
	add		r0, #0x48
	ldrb	r1, [r0, #0x0]
	mov		r10, r0
	cmp		r1, #0x0
	beq		_080111c0
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	ldr		r2, _080111b0
	ldrh	r0, [r2, #0x0]
	mov		r5, #0xfc
	and		r5, r0
	cmp		r5, #0x8
	beq		_080111c0
	strb	r1, [r7, #0x1e]
	strb	r1, [r7, #0x18]
	strb	r1, [r7, #0x1d]
	mov		r0, #0xf
	ldr		r3, [sp, #0x0]
	strb	r0, [r3, #0x0]
	mov		r0, r10
	strb	r1, [r0, #0x0]
	strh	r1, [r7, #0x16]
	ldr		r0, _080111b4
	strh	r1, [r0, #0x0]
	ldr		r3, _080111b8
	add		r0, r3, #0x0
	strh	r0, [r2, #0x0]
	ldr		r0, _080111bc
	strh	r1, [r0, #0x0]
	mov		r0, #0x8
	eor		r0, r5
	b		_0801164a

.incbin "base.gba", 0x111AE, 0x2

_080111b0:	.4byte SIOControlRegister
_080111b4:	.4byte SIOModeSelect_GeneralPurposeData
_080111b8:	.4byte 0x00002003
_080111bc:	.4byte SIOData_Normal_8bitandUARTMode

_080111c0:
	ldrb	r0, [r7, #0x18]
	cmp		r0, #0xdf
	bls		_08011242
	add		r0, r7, #0x0
	bl		sub_0801185c
	add		r5, r0, #0x0
	cmp		r5, #0x0
	beq		_080111d4
	b		_0801164a
_080111d4:
	add		r0, r7, #0x0
	add		r0, #0x4b
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_080111f0
	ldrb	r0, [r7, #0x18]
	cmp		r0, #0xe1
	bls		_080111f0
	add		r0, r7, #0x0
	bl		sub_080119b4
	cmp		r0, #0x0
	bne		_080111f0
	b		_080115d4
_080111f0:
	add		r0, r7, #0x0
	bl		sub_080119b4
	cmp		r0, #0x0
	beq		_080111fc
	b		_08011648
_080111fc:
	ldrh	r0, [r7, #0x16]
	add		r2, r0, #0x0
	cmp		r2, #0x0
	bne		_0801123c
	strb	r2, [r7, #0x1e]
	strb	r2, [r7, #0x18]
	strb	r2, [r7, #0x1d]
	mov		r0, #0xf
	ldr		r1, [sp, #0x0]
	strb	r0, [r1, #0x0]
	mov		r3, r10
	strb	r2, [r3, #0x0]
	strh	r2, [r7, #0x16]
	ldr		r0, _0801122c
	strh	r2, [r0, #0x0]
	ldr		r1, _08011230
	ldr		r3, _08011234
	add		r0, r3, #0x0
	strh	r0, [r1, #0x0]
	ldr		r0, _08011238
	strh	r2, [r0, #0x0]
	mov		r0, #0x71
	b		_0801164a

.incbin "base.gba", 0x1122A, 0x2

_0801122c:	.4byte SIOModeSelect_GeneralPurposeData
_08011230:	.4byte SIOControlRegister
_08011234:	.4byte 0x00002003
_08011238:	.4byte SIOData_Normal_8bitandUARTMode

_0801123c:
	sub		r0, #0x1
	strh	r0, [r7, #0x16]
	b		_08011648
_08011242:
	ldrb	r0, [r7, #0x18]
	cmp		r0, #0x2
	bne		_0801124a
	b		_08011384
_0801124a:
	cmp		r0, #0x2
	bgt		_08011258
	cmp		r0, #0x0
	beq		_08011266
	cmp		r0, #0x1
	beq		_08011324
	b		_080114f4
_08011258:
	cmp		r0, #0xd0
	bne		_0801125e
	b		_080113d0
_0801125e:
	cmp		r0, #0xd1
	bne		_08011264
	b		_08011470
_08011264:
	b		_080114f4
_08011266:
	mov		r3, #0xe
	mov		r5, #0x3
	ldr		r0, _080112ac
	ldrh	r0, [r0, #0x6]
	add		r1, r0, #0x0
	ldr		r0, _080112b0
	ldrb	r2, [r7, #0x1e]
	add		r6, r2, #0x0
	cmp		r1, r0
	bne		_0801128e
	add		r4, r1, #0x0
	ldr		r1, _080112b4
_0801127e:
	asr		r3, r3, #0x1
	sub		r1, #0x2
	sub		r5, #0x1
	cmp		r5, #0x0
	beq		_0801128e
	ldrh	r0, [r1, #0x0]
	cmp		r0, r4
	beq		_0801127e
_0801128e:
	mov		r0, #0xe
	and		r3, r0
	strb	r3, [r7, #0x1d]
	mov		r5, #0x3
	ldr		r0, _080112ac
	ldrh	r0, [r0, #0x6]
	add		r4, r0, #0x0
	asr		r0, r2, #0x3
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080112bc
	ldr		r0, _080112b8
	b		_080112e2

.incbin "base.gba", 0x112AA, 0x2

_080112ac:	.4byte SIOData0_Parent__Multi_PlayerMode_
_080112b0:	.4byte 0x0000FFFF
_080112b4:	.4byte SIOData3_3rdChild__Multi_PlayerMode_
_080112b8:	.4byte 0x00007208

_080112bc:
	sub		r5, #0x1
	cmp		r5, #0x0
	beq		_080112e8
	lsl		r0, r5, #0x1
	ldr		r1, _08011310
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	add		r4, r0, #0x0
	add		r0, r2, #0x0
	asr		r0, r5
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080112bc
	add		r0, r1, #0x0
	lsl		r0, r5
	mov		r1, #0xe4
	lsl		r1, r1, #0x7
	orr		r0, r1
_080112e2:
	cmp		r4, r0
	beq		_080112bc
	mov		r3, #0x0
_080112e8:
	add		r0, r3, #0x0
	and		r0, r6
	strb	r0, [r7, #0x1e]
	cmp		r3, #0x0
	bne		_080112f8
	mov		r0, #0xf
	ldr		r2, [sp, #0x0]
	strb	r0, [r2, #0x0]
_080112f8:
	ldr		r3, [sp, #0x0]
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x0
	bne		_08011314
	ldrb	r0, [r7, #0x1d]
	ldrb	r1, [r7, #0x1e]
	cmp		r0, r1
	beq		_0801131a
	add		r0, r7, #0x0
	bl		sub_080116d4
	b		_08011324

_08011310:	.4byte SIOData0_Parent__Multi_PlayerMode_

_08011314:
	sub		r0, #0x1
	ldr		r2, [sp, #0x0]
	strb	r0, [r2, #0x0]
_0801131a:
	ldrb	r1, [r7, #0x1e]
	mov		r3, #0xc4
	lsl		r3, r3, #0x7
	add		r0, r3, #0x0
	b		_0801142e
_08011324:
	add		r1, r7, #0x0
	add		r1, #0x49
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	mov		r5, #0x3
	mov		r12, r1
	ldr		r3, _0801137c
_08011332:
	lsl		r0, r5, #0x1
	ldr		r2, _08011380
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	add		r4, r0, #0x0
	asr		r0, r4, #0x8
	sub		r2, r5, #0x1
	cmp		r0, #0x72
	bne		_0801135c
	lsl		r0, r2, #0x1
	add		r0, r0, r3
	strh	r4, [r0, #0x0]
	mov		r0, #0xff
	and		r4, r0
	mov		r0, #0x1
	lsl		r0, r5
	cmp		r4, r0
	bne		_0801135c
	ldrb	r0, [r1, #0x0]
	orr		r4, r0
	strb	r4, [r1, #0x0]
_0801135c:
	add		r5, r2, #0x0
	cmp		r5, #0x0
	bne		_08011332
	ldrb	r0, [r7, #0x1d]
	mov		r3, r12
	ldrb	r3, [r3, #0x0]
	cmp		r0, r3
	bne		_0801131a
	mov		r0, #0x2
	strb	r0, [r7, #0x18]
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	mov		r2, #0xc2
	lsl		r2, r2, #0x7
	b		_0801142c

.incbin "base.gba", 0x1137A, 0x2

_0801137c:	.4byte 0x03000150
_08011380:	.4byte SIOData0_Parent__Multi_PlayerMode_

_08011384:
	mov		r5, #0x3
	mov		r3, #0x49
	add		r3, r3, r7
	mov		r12, r3
	mov		r4, r12
	mov		r6, #0x1
	ldr		r0, _080113c8
	mov		r9, r0
	ldr		r1, _080113cc
	mov		r8, r1
_08011398:
	ldrb	r3, [r4, #0x0]
	add		r0, r3, #0x0
	asr		r0, r5
	and		r0, r6
	sub		r2, r5, #0x1
	cmp		r0, #0x0
	beq		_080113be
	lsl		r0, r5, #0x1
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	lsl		r0, r2, #0x1
	add		r0, r9
	ldrh	r0, [r0, #0x0]
	cmp		r1, r0
	beq		_080113be
	add		r0, r6, #0x0
	lsl		r0, r5
	eor		r3, r0
	strb	r3, [r4, #0x0]
_080113be:
	add		r5, r2, #0x0
	cmp		r5, #0x0
	bne		_08011398
	b		_0801155c

.incbin "base.gba", 0x113C6, 0x2

_080113c8:	.4byte 0x03000150
_080113cc:	.4byte SIOData0_Parent__Multi_PlayerMode_

_080113d0:
	mov		r3, #0x1
	mov		r5, #0x3
	mov		r2, #0x49
	add		r2, r2, r7
	mov		r12, r2
	mov		r0, #0x19
	add		r0, r0, r7
	mov		r8, r0
	mov		r6, #0x0
	ldr		r1, _08011438
	mov		r9, r1
_080113e6:
	lsl		r0, r5, #0x1
	ldr		r2, _0801143c
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	add		r4, r0, #0x0
	sub		r2, r5, #0x1
	mov		r1, r8
	add		r0, r1, r2
	strb	r4, [r0, #0x0]
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	asr		r1, r5
	mov		r0, #0x1
	and		r1, r0
	cmp		r1, #0x0
	beq		_0801141c
	asr		r0, r4, #0x8
	sub		r0, #0x72
	cmp		r0, #0x1
	bls		_08011410
	b		_080115da
_08011410:
	lsl		r0, r2, #0x1
	add		r0, r9
	ldrh	r0, [r0, #0x0]
	cmp		r4, r0
	bne		_0801141c
	mov		r3, #0x0
_0801141c:
	add		r5, r2, #0x0
	cmp		r5, #0x0
	bne		_080113e6
	cmp		r3, #0x0
	bne		_08011440
	ldrb	r1, [r7, #0x1c]
	mov		r2, #0xc6
	lsl		r2, r2, #0x7
_0801142c:
	add		r0, r2, #0x0
_0801142e:
	orr		r1, r0
	add		r0, r7, #0x0
	bl		sub_0801165c
	b		_0801164a

_08011438:	.4byte 0x03000150
_0801143c:	.4byte SIOData0_Parent__Multi_PlayerMode_

_08011440:
	mov		r0, #0xd1
	strb	r0, [r7, #0x18]
	mov		r3, #0x11
	mov		r5, #0x3
	mov		r1, r8
	add		r1, #0x2
_0801144c:
	ldrb	r0, [r1, #0x0]
	add		r3, r3, r0
	sub		r1, #0x1
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_0801144c
	strb	r3, [r7, #0x14]
	mov		r0, #0xff
	and		r3, r0
	mov		r1, #0xc8
	lsl		r1, r1, #0x7
	add		r0, r1, #0x0
	orr		r3, r0
	add		r0, r7, #0x0
	add		r1, r3, #0x0
	bl		sub_0801165c
	b		_0801164a
_08011470:
	mov		r5, #0x3
	mov		r2, #0x49
	ldrb	r1, [r2, r7]
	ldr		r2, _080114b0
	mov		r3, #0x1
_0801147a:
	ldrh	r0, [r2, #0x0]
	add		r4, r0, #0x0
	add		r0, r1, #0x0
	asr		r0, r5
	and		r0, r3
	cmp		r0, #0x0
	beq		_08011490
	asr		r0, r4, #0x8
	cmp		r0, #0x73
	beq		_08011490
	b		_08011610
_08011490:
	sub		r2, #0x2
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_0801147a
	add		r0, r7, #0x0
	bl		sub_08071b84
	add		r5, r0, #0x0
	cmp		r5, #0x0
	bne		_080114b4
	mov		r0, #0xe0
	strb	r0, [r7, #0x18]
	add		r0, #0xb0
	strh	r0, [r7, #0x16]
	b		_08011648

.incbin "base.gba", 0x114AE, 0x2

_080114b0:	.4byte SIOData3_3rdChild__Multi_PlayerMode_

_080114b4:
	mov		r1, #0x0
	strb	r1, [r7, #0x1e]
	strb	r1, [r7, #0x18]
	strb	r1, [r7, #0x1d]
	mov		r0, #0xf
	ldr		r3, [sp, #0x0]
	strb	r0, [r3, #0x0]
	mov		r0, r10
	strb	r1, [r0, #0x0]
	strh	r1, [r7, #0x16]
	ldr		r0, _080114e4
	strh	r1, [r0, #0x0]
	ldr		r2, _080114e8
	ldr		r3, _080114ec
	add		r0, r3, #0x0
	strh	r0, [r2, #0x0]
	ldr		r0, _080114f0
	strh	r1, [r0, #0x0]
	mov		r0, #0x1e
	ldr		r1, [sp, #0x0]
	strb	r0, [r1, #0x0]
	mov		r0, #0x70
	b		_0801164a

.incbin "base.gba", 0x114E2, 0x2

_080114e4:	.4byte SIOModeSelect_GeneralPurposeData
_080114e8:	.4byte SIOControlRegister
_080114ec:	.4byte 0x00002003
_080114f0:	.4byte SIOData_Normal_8bitandUARTMode

_080114f4:
	mov		r5, #0x3
	mov		r2, #0x49
	add		r2, r2, r7
	mov		r12, r2
	mov		r8, r12
	mov		r3, #0x1
	mov		r9, r3
_08011502:
	mov		r0, r8
	ldrb	r6, [r0, #0x0]
	add		r0, r6, #0x0
	asr		r0, r5
	mov		r1, r9
	and		r0, r1
	cmp		r0, #0x0
	beq		_0801153c
	lsl		r0, r5, #0x1
	ldr		r2, _08011558
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	add		r4, r0, #0x0
	asr		r2, r4, #0x8
	ldrb	r0, [r7, #0x18]
	lsr		r0, r0, #0x1
	mov		r1, #0x62
	sub		r1, r1, r0
	mov		r3, r9
	lsl		r3, r5
	cmp		r2, r1
	bne		_08011536
	mov		r0, #0xff
	and		r4, r0
	cmp		r4, r3
	beq		_0801153c
_08011536:
	eor		r6, r3
	mov		r3, r8
	strb	r6, [r3, #0x0]
_0801153c:
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_08011502
	ldrb	r0, [r7, #0x18]
	cmp		r0, #0xc4
	bne		_0801155c
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	mov		r0, #0xe
	and		r0, r1
	strb	r0, [r7, #0x1e]
	strb	r5, [r7, #0x18]
	b		_0801131a

.incbin "base.gba", 0x11556, 0x2

_08011558:	.4byte SIOData0_Parent__Multi_PlayerMode_

_0801155c:
	mov		r1, r12
	ldrb	r2, [r1, #0x0]
	cmp		r2, #0x0
	bne		_0801159c
	strb	r2, [r7, #0x1e]
	strb	r2, [r7, #0x18]
	strb	r2, [r7, #0x1d]
	mov		r0, #0xf
	ldr		r3, [sp, #0x0]
	strb	r0, [r3, #0x0]
	mov		r0, r10
	strb	r2, [r0, #0x0]
	strh	r2, [r7, #0x16]
	ldr		r0, _0801158c
	strh	r2, [r0, #0x0]
	ldr		r1, _08011590
	ldr		r3, _08011594
	add		r0, r3, #0x0
	strh	r0, [r1, #0x0]
	ldr		r0, _08011598
	strh	r2, [r0, #0x0]
	mov		r0, #0x50
	b		_0801164a

.incbin "base.gba", 0x1158A, 0x2

_0801158c:	.4byte SIOModeSelect_GeneralPurposeData
_08011590:	.4byte SIOControlRegister
_08011594:	.4byte 0x00002003
_08011598:	.4byte SIOData_Normal_8bitandUARTMode

_0801159c:
	ldrb	r0, [r7, #0x18]
	add		r0, #0x2
	strb	r0, [r7, #0x18]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0xc4
	bne		_080115ac
	b		_0801131a
_080115ac:
	ldrb	r0, [r7, #0x18]
	ldr		r1, [r7, #0x28]
	add		r0, r0, r1
	sub		r1, r0, #0x3
	ldrb	r2, [r1, #0x0]
	lsl		r2, r2, #0x8
	sub		r0, #0x4
	ldrb	r1, [r0, #0x0]
	orr		r1, r2
	add		r0, r7, #0x0
	bl		sub_0801165c
	add		r5, r0, #0x0
	cmp		r5, #0x0
	bne		_0801164a
	add		r0, r7, #0x0
	add		r0, #0x4b
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_08011648
_080115d4:
	bl		sub_080119c4
	b		_0801116c
_080115da:
	strb	r6, [r7, #0x1e]
	strb	r6, [r7, #0x18]
	strb	r6, [r7, #0x1d]
	mov		r0, #0xf
	ldr		r1, [sp, #0x0]
	strb	r0, [r1, #0x0]
	mov		r2, r10
	strb	r6, [r2, #0x0]
	strh	r6, [r7, #0x16]
	ldr		r0, _08011600
	strh	r6, [r0, #0x0]
	ldr		r1, _08011604
	ldr		r3, _08011608
	add		r0, r3, #0x0
	strh	r0, [r1, #0x0]
	ldr		r0, _0801160c
	strh	r6, [r0, #0x0]
	mov		r0, #0x60
	b		_0801164a

_08011600:	.4byte SIOModeSelect_GeneralPurposeData
_08011604:	.4byte SIOControlRegister
_08011608:	.4byte 0x00002003
_0801160c:	.4byte SIOData_Normal_8bitandUARTMode

_08011610:
	mov		r1, #0x0
	strb	r1, [r7, #0x1e]
	strb	r1, [r7, #0x18]
	strb	r1, [r7, #0x1d]
	mov		r0, #0xf
	ldr		r2, [sp, #0x0]
	strb	r0, [r2, #0x0]
	mov		r3, r10
	strb	r1, [r3, #0x0]
	strh	r1, [r7, #0x16]
	ldr		r0, _08011638
	strh	r1, [r0, #0x0]
	ldr		r2, _0801163c
	ldr		r3, _08011640
	add		r0, r3, #0x0
	strh	r0, [r2, #0x0]
	ldr		r0, _08011644
	strh	r1, [r0, #0x0]
	mov		r0, #0x60
	b		_0801164a

_08011638:	.4byte SIOModeSelect_GeneralPurposeData
_0801163c:	.4byte SIOControlRegister
_08011640:	.4byte 0x00002003
_08011644:	.4byte SIOData_Normal_8bitandUARTMode

_08011648:
	mov		r0, #0x0
_0801164a:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x1165A, 0x2
	thumb_func_end sub_08011140

	thumb_func_start sub_0801165c
sub_0801165c:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	ldr		r5, _08011688
	ldrh	r0, [r5, #0x0]
	mov		r4, #0x8c
	and		r4, r0
	cmp		r4, #0x8
	bne		_08011694
	ldr		r0, _0801168c
	strh	r1, [r0, #0x0]
	ldr		r1, _08011690
	add		r0, r1, #0x0
	strh	r0, [r5, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x48
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	mov		r0, #0x0
	b		_080116c0

.incbin "base.gba", 0x11686, 0x2

_08011688:	.4byte SIOControlRegister
_0801168c:	.4byte SIOData_Normal_8bitandUARTMode
_08011690:	.4byte 0x00002083

_08011694:
	mov		r1, #0x0
	strb	r1, [r2, #0x1e]
	strb	r1, [r2, #0x18]
	strb	r1, [r2, #0x1d]
	add		r3, r2, #0x0
	add		r3, #0x4a
	mov		r0, #0xf
	strb	r0, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x48
	strb	r1, [r0, #0x0]
	strh	r1, [r2, #0x16]
	ldr		r0, _080116c8
	strh	r1, [r0, #0x0]
	ldr		r2, _080116cc
	add		r0, r2, #0x0
	strh	r0, [r5, #0x0]
	ldr		r0, _080116d0
	strh	r1, [r0, #0x0]
	mov		r0, #0x8
	eor		r4, r0
	add		r0, r4, #0x0
_080116c0:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x116C6, 0x2

_080116c8:	.4byte SIOModeSelect_GeneralPurposeData
_080116cc:	.4byte 0x00002003
_080116d0:	.4byte SIOData_Normal_8bitandUARTMode
	thumb_func_end sub_0801165c

	thumb_func_start sub_080116d4
sub_080116d4:
	add		r2, r0, #0x0
	ldrb	r0, [r2, #0x18]
	cmp		r0, #0x0
	beq		_08011718
	mov		r1, #0x0
	strb	r1, [r2, #0x1e]
	strb	r1, [r2, #0x18]
	strb	r1, [r2, #0x1d]
	add		r3, r2, #0x0
	add		r3, #0x4a
	mov		r0, #0xf
	strb	r0, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x48
	strb	r1, [r0, #0x0]
	strh	r1, [r2, #0x16]
	ldr		r0, _08011708
	strh	r1, [r0, #0x0]
	ldr		r2, _0801170c
	ldr		r3, _08011710
	add		r0, r3, #0x0
	strh	r0, [r2, #0x0]
	ldr		r0, _08011714
	strh	r1, [r0, #0x0]
	b		_08011724

.incbin "base.gba", 0x11706, 0x2

_08011708:	.4byte SIOModeSelect_GeneralPurposeData
_0801170c:	.4byte SIOControlRegister
_08011710:	.4byte 0x00002003
_08011714:	.4byte SIOData_Normal_8bitandUARTMode

_08011718:
	add		r1, r2, #0x0
	add		r1, #0x4a
	strb	r0, [r1, #0x0]
	strb	r0, [r2, #0x1e]
	mov		r0, #0x1
	strb	r0, [r2, #0x18]
_08011724:
	bx		lr

.incbin "base.gba", 0x11726, 0x2
	thumb_func_end sub_080116d4

	thumb_func_start sub_08011728
sub_08011728:
	push	{ r4, r5, r6, r7, lr }
	mov		r12, r0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	ldr		r0, [sp, #0x0+0x14]
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	lsl		r0, r0, #0x18
	lsr		r7, r0, #0x18
	mov		r2, #0x0
	mov		r1, r12
	ldrb	r0, [r1, #0x18]
	cmp		r0, #0x0
	bne		_08011754
	ldrb	r0, [r1, #0x1e]
	cmp		r0, #0x0
	beq		_08011754
	mov		r5, r12
	add		r5, #0x4a
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_08011790
_08011754:
	mov		r1, #0x0
	mov		r2, r12
	strb	r1, [r2, #0x1e]
	strb	r1, [r2, #0x18]
	strb	r1, [r2, #0x1d]
	add		r2, #0x4a
	mov		r0, #0xf
	strb	r0, [r2, #0x0]
	mov		r0, r12
	add		r0, #0x48
	strb	r1, [r0, #0x0]
	mov		r3, r12
	strh	r1, [r3, #0x16]
	ldr		r0, _08011780
	strh	r1, [r0, #0x0]
	ldr		r2, _08011784
	ldr		r4, _08011788
	add		r0, r4, #0x0
	strh	r0, [r2, #0x0]
	ldr		r0, _0801178c
	strh	r1, [r0, #0x0]
	b		_08011856

_08011780:	.4byte SIOModeSelect_GeneralPurposeData
_08011784:	.4byte SIOControlRegister
_08011788:	.4byte 0x00002003
_0801178c:	.4byte SIOData_Normal_8bitandUARTMode

_08011790:
	mov		r0, r12
	str		r6, [r0, #0x20]
	add		r4, #0xf
	mov		r0, #0x10
	neg		r0, r0
	and		r4, r0
	sub		r0, #0xf0
	add		r1, r4, r0
	ldr		r0, _080117cc
	cmp		r1, r0
	bls		_080117e0
	mov		r1, r12
	strb	r2, [r1, #0x1e]
	strb	r2, [r1, #0x18]
	strb	r2, [r1, #0x1d]
	mov		r0, #0xf
	strb	r0, [r5, #0x0]
	mov		r0, r12
	add		r0, #0x48
	strb	r2, [r0, #0x0]
	strh	r2, [r1, #0x16]
	ldr		r0, _080117d0
	strh	r2, [r0, #0x0]
	ldr		r1, _080117d4
	ldr		r3, _080117d8
	add		r0, r3, #0x0
	strh	r0, [r1, #0x0]
	ldr		r0, _080117dc
	strh	r2, [r0, #0x0]
	b		_08011856

_080117cc:	.4byte 0x0003FF00
_080117d0:	.4byte SIOModeSelect_GeneralPurposeData
_080117d4:	.4byte SIOControlRegister
_080117d8:	.4byte 0x00002003
_080117dc:	.4byte SIOData_Normal_8bitandUARTMode

_080117e0:
	add		r0, r6, r4
	mov		r4, r12
	str		r0, [r4, #0x24]
	lsl		r1, r7, #0x18
	mov		r4, #0x80
	lsl		r4, r4, #0x13
	add		r0, r1, r4
	asr		r0, r0, #0x18
	add		r4, r1, #0x0
	cmp		r0, #0x8
	bhi		_08011840
	lsl		r0, r0, #0x2
	ldr		r1, _08011800
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08011800:	.4byte 0x08011804
_08011804:	.4byte 0x08011828

.incbin "base.gba", 0x11808, 0x20
	thumb_func_end sub_08011728


.incbin "base.gba", 0x11828, 0x18

_08011840:

.incbin "base.gba", 0x11840, 0x16
_08011856:

.incbin "base.gba", 0x11856, 0x6
	thumb_func_start sub_0801185c
sub_0801185c:
	push	{ r4, r5, r6, lr }
	add		r2, r0, #0x0
	ldrb	r0, [r2, #0x18]
	cmp		r0, #0xe0
	beq		_08011878
	cmp		r0, #0xe0
	blt		_08011888
	cmp		r0, #0xe8
	bgt		_08011888
	cmp		r0, #0xe7
	blt		_08011888
	mov		r4, #0x3
	ldrb	r5, [r2, #0x1e]
	b		_080118e8
_08011878:
	mov		r1, #0x0
	mov		r0, #0xe1
	strb	r0, [r2, #0x18]
	str		r1, [r2, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0xd
	str		r0, [r2, #0x0]
	b		_080118da
_08011888:
	mov		r4, #0x3
	ldrb	r5, [r2, #0x1e]
	mov		r6, #0x1
	ldr		r1, _080118e4
_08011890:
	ldrh	r0, [r1, #0x0]
	add		r3, r0, #0x0
	add		r0, r5, #0x0
	asr		r0, r4
	and		r0, r6
	cmp		r0, #0x0
	beq		_080118a4
	ldr		r0, [r2, #0x4]
	cmp		r3, r0
	bne		_08011878
_080118a4:
	sub		r1, #0x2
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08011890
	ldrb	r0, [r2, #0x18]
	add		r0, #0x1
	strb	r0, [r2, #0x18]
	ldr		r1, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	str		r0, [r2, #0x4]
	cmp		r1, #0x0
	bne		_080118d2
	ldr		r0, [r2, #0x28]
	add		r1, r0, #0x0
	add		r1, #0xac
	ldrb	r1, [r1, #0x0]
	add		r0, #0xad
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	orr		r1, r0
	str		r1, [r2, #0x4]
	lsl		r1, r1, #0x5
	str		r1, [r2, #0x0]
_080118d2:
	ldr		r0, [r2, #0x0]
	lsr		r0, r0, #0x5
	str		r0, [r2, #0x0]
_080118d8:
	ldrh	r1, [r2, #0x0]
_080118da:
	add		r0, r2, #0x0
	bl		sub_0801165c
	b		_08011972

.incbin "base.gba", 0x118E2, 0x2

_080118e4:	.4byte SIOData3_3rdChild__Multi_PlayerMode_

_080118e8:
	lsl		r0, r4, #0x1
	ldr		r1, _08011930
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	add		r3, r0, #0x0
	add		r0, r5, #0x0
	asr		r0, r4
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08011904
	ldr		r0, [r2, #0x4]
	cmp		r3, r0
	bne		_08011934
_08011904:
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_080118e8
	ldrb	r0, [r2, #0x18]
	add		r0, #0x1
	strb	r0, [r2, #0x18]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0xe9
	beq		_08011970
	ldr		r0, [r2, #0x28]
	add		r1, r0, #0x0
	add		r1, #0xae
	ldrb	r1, [r1, #0x0]
	add		r0, #0xaf
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	orr		r1, r0
	str		r1, [r2, #0x0]
	str		r1, [r2, #0x4]
	b		_080118d8

.incbin "base.gba", 0x1192E, 0x2

_08011930:	.4byte SIOData0_Parent__Multi_PlayerMode_

_08011934:
	mov		r1, #0x0
	strb	r1, [r2, #0x1e]
	strb	r1, [r2, #0x18]
	strb	r1, [r2, #0x1d]
	add		r3, r2, #0x0
	add		r3, #0x4a
	mov		r0, #0xf
	strb	r0, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x48
	strb	r1, [r0, #0x0]
	strh	r1, [r2, #0x16]
	ldr		r0, _08011960
	strh	r1, [r0, #0x0]
	ldr		r2, _08011964
	ldr		r3, _08011968
	add		r0, r3, #0x0
	strh	r0, [r2, #0x0]
	ldr		r0, _0801196c
	strh	r1, [r0, #0x0]
	mov		r0, #0x71
	b		_08011972

_08011960:	.4byte SIOModeSelect_GeneralPurposeData
_08011964:	.4byte SIOControlRegister
_08011968:	.4byte 0x00002003
_0801196c:	.4byte SIOData_Normal_8bitandUARTMode

_08011970:
	mov		r0, #0x0
_08011972:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0801185c

	thumb_func_start sub_08011978
sub_08011978:
	add		r2, r0, #0x0
	mov		r1, #0x0
	strb	r1, [r2, #0x1e]
	strb	r1, [r2, #0x18]
	strb	r1, [r2, #0x1d]
	add		r3, r2, #0x0
	add		r3, #0x4a
	mov		r0, #0xf
	strb	r0, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x48
	strb	r1, [r0, #0x0]
	strh	r1, [r2, #0x16]
	ldr		r0, _080119a4
	strh	r1, [r0, #0x0]
	ldr		r2, _080119a8
	ldr		r3, _080119ac
	add		r0, r3, #0x0
	strh	r0, [r2, #0x0]
	ldr		r0, _080119b0
	strh	r1, [r0, #0x0]
	bx		lr

_080119a4:	.4byte SIOModeSelect_GeneralPurposeData
_080119a8:	.4byte SIOControlRegister
_080119ac:	.4byte 0x00002003
_080119b0:	.4byte SIOData_Normal_8bitandUARTMode
	thumb_func_end sub_08011978

	thumb_func_start sub_080119b4
sub_080119b4:
	ldrb	r0, [r0, #0x18]
	cmp		r0, #0xe9
	beq		_080119be
	mov		r0, #0x0
	b		_080119c0
_080119be:
	mov		r0, #0x1
_080119c0:
	bx		lr

.incbin "base.gba", 0x119C2, 0x2
	thumb_func_end sub_080119b4

	thumb_func_start sub_080119c4
sub_080119c4:
	push	{ r4, r5, lr }
	mov		r2, #0x0
	ldr		r3, _08011a04
	ldrh	r1, [r3, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_080119e8
	ldr		r5, _08011a08
	mov		r4, #0x80
_080119d8:
	add		r2, #0x1
	cmp		r2, r5
	bgt		_080119e8
	ldrh	r1, [r3, #0x0]
	add		r0, r4, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_080119d8
_080119e8:
	mov		r2, pc
	lsr		r2, r2, #0x18
	mov		r1, #0xc
	cmp		r2, #0x2
	beq		_080119fa
	mov		r1, #0xd
	cmp		r2, #0x8
	beq		_080119fa
	mov		r1, #0x4
_080119fa:
	sub		r0, r0, r1
	bgt		_080119fa
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08011a04:	.4byte SIOControlRegister
_08011a08:	.4byte 0x0000795C
	thumb_func_end sub_080119c4

	thumb_func_start sub_08011a0c
sub_08011a0c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	ldr		r3, _08011ad4
	mov		r4, #0x0
	strh	r4, [r3, #0x0]
	ldr		r2, _08011ad8
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08011adc
	and		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	strh	r0, [r3, #0x0]
	ldr		r0, _08011ae0
	strh	r4, [r0, #0x0]
	sub		r2, #0xd8
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	str		r0, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	ldr		r3, _08011ae4
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	ldr		r4, _08011ae8
	ldr		r2, _08011aec
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_08071b6c
	strb	r5, [r4, #0x2]
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r4, #0x14]
	add		r0, r4, #0x0
	add		r0, #0x60
	str		r0, [r4, #0x28]
	add		r0, #0x10
	str		r0, [r4, #0x2c]
	mov		r3, #0x0
	add		r5, r4, #0x0
	add		r5, #0xa0
	mov		r2, #0x0
	mov		r7, #0x30
	add		r7, r7, r4
	mov		r8, r7
	mov		r0, #0x80
	add		r0, r0, r4
	mov		r12, r0
	add		r6, r4, #0x0
	add		r6, #0x90
	mov		r7, #0x40
	add		r7, r7, r4
	mov		r9, r7
_08011a82:
	lsl		r1, r3, #0x2
	mov		r7, r12
	add		r0, r2, r7
	mov		r7, r8
	add		r7, #0x4
	mov		r8, r7
	sub		r7, #0x4
	stmia	r7!, { r0 }
	add		r0, r2, r6
	mov		r7, r9
	add		r7, #0x4
	mov		r9, r7
	sub		r7, #0x4
	stmia	r7!, { r0 }
	add		r0, r4, #0x0
	add		r0, #0x50
	add		r1, r1, r0
	str		r5, [r1, #0x0]
	add		r5, #0x30
	add		r2, #0x30
	add		r3, #0x1
	cmp		r3, #0x3
	ble		_08011a82
	mov		r0, #0x0
	ldr		r3, _08011ad4
	strh	r0, [r3, #0x0]
	ldr		r2, _08011ad8
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x80
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	strh	r0, [r3, #0x0]
	add		sp, #0x4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x11AD2, 0x2

_08011ad4:	.4byte InterruptMasterEnableRegister
_08011ad8:	.4byte InterruptEnableRegister
_08011adc:	.4byte 0x0000FF3F
_08011ae0:	.4byte SIOModeSelect_GeneralPurposeData
_08011ae4:	.4byte 0x00004003
_08011ae8:	.4byte 0x03002E80
_08011aec:	.4byte 0x05000050
	thumb_func_end sub_08011a0c

	thumb_func_start sub_08011af0
sub_08011af0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r9, r0
	mov		r12, r1
	mov		r8, r2
	ldr		r5, _08011b10
	ldr		r6, [r5, #0x0]
	ldr		r7, _08011b14
	ldrb	r0, [r7, #0x1]
	cmp		r0, #0x0
	beq		_08011b18
	cmp		r0, #0x1
	beq		_08011b84
	b		_08011b92

_08011b10:	.4byte SIOControlRegister
_08011b14:	.4byte 0x03002E80

_08011b18:
	mov		r1, #0x30
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08011b7e
	mov		r0, #0x88
	add		r4, r6, #0x0
	and		r4, r0
	cmp		r4, #0x8
	bne		_08011b92
	mov		r1, #0x4
	add		r0, r6, #0x0
	and		r0, r1
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	cmp		r2, #0x0
	bne		_08011b7e
	ldr		r1, [r7, #0x14]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_08011b7e
	ldr		r3, _08011bc4
	strh	r2, [r3, #0x0]
	ldr		r2, _08011bc8
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08011bcc
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x40
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	strh	r0, [r3, #0x0]
	ldrb	r1, [r5, #0x1]
	mov		r0, #0x41
	neg		r0, r0
	and		r0, r1
	strb	r0, [r5, #0x1]
	ldr		r1, _08011bd0
	mov		r0, #0xc0
	strh	r0, [r1, #0x0]
	sub		r1, #0xf6
	ldr		r0, _08011bd4
	str		r0, [r1, #0x0]
	strb	r4, [r7, #0x0]
	ldrb	r0, [r5, #0x0]
	mov		r1, #0x80
	orr		r0, r1
	strb	r0, [r5, #0x0]
_08011b7e:
	ldr		r1, _08011bd8
	mov		r0, #0x1
	strb	r0, [r1, #0x1]
_08011b84:
	mov		r0, r12
	bl		sub_08011cdc
	mov		r0, r9
	mov		r1, r8
	bl		sub_08011c0c
_08011b92:
	ldr		r1, _08011bd8
	ldrb	r0, [r1, #0xb]
	add		r0, #0x1
	strb	r0, [r1, #0xb]
	ldrb	r3, [r1, #0x3]
	ldrb	r2, [r1, #0x8]
	mov		r0, #0x10
	and		r0, r2
	orr		r3, r0
	mov		r0, #0x20
	and		r0, r2
	orr		r3, r0
	mov		r0, #0x40
	and		r0, r2
	orr		r3, r0
	ldrb	r0, [r1, #0x2]
	lsl		r2, r0, #0x8
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x8
	bne		_08011bdc
	mov		r0, #0x80
	orr		r0, r2
	orr		r0, r3
	b		_08011be0

.incbin "base.gba", 0x11BC2, 0x2

_08011bc4:	.4byte InterruptMasterEnableRegister
_08011bc8:	.4byte InterruptEnableRegister
_08011bcc:	.4byte 0x0000FF7F
_08011bd0:	.4byte InterruptRequestFlags_IRQAcknowledge
_08011bd4:	.4byte 0x000092C6
_08011bd8:	.4byte 0x03002E80

_08011bdc:
	add		r0, r3, #0x0
	orr		r0, r2
_08011be0:
	add		r2, r0, #0x0
	ldrb	r0, [r1, #0x9]
	cmp		r0, #0x0
	beq		_08011bee
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	orr		r2, r0
_08011bee:
	add		r1, r2, #0x0
	lsl		r0, r6, #0x1a
	lsr		r0, r0, #0x1e
	cmp		r0, #0x3
	bls		_08011bfe
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	orr		r1, r0
_08011bfe:
	add		r0, r1, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08011af0

	thumb_func_start sub_08011c0c
sub_08011c0c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, #0x0
	ldr		r5, _08011ccc
	ldr		r4, [r5, #0x28]
	mov		r2, #0x1
	and		r1, r2
	lsl		r1, r1, #0x4
	ldrb	r3, [r4, #0x1]
	mov		r2, #0x11
	neg		r2, r2
	and		r2, r3
	orr		r2, r1
	strb	r2, [r4, #0x1]
	ldr		r6, [r5, #0x28]
	ldr		r1, _08011cd0
	ldrb	r1, [r1, #0x3]
	mov		r3, #0x1
	add		r2, r3, #0x0
	and		r2, r1
	lsl		r2, r2, #0x5
	ldrb	r4, [r6, #0x1]
	mov		r1, #0x21
	neg		r1, r1
	and		r1, r4
	orr		r1, r2
	strb	r1, [r6, #0x1]
	ldr		r4, [r5, #0x28]
	ldrb	r1, [r5, #0x8]
	lsl		r1, r1, #0x19
	lsr		r1, r1, #0x1f
	and		r3, r1
	lsl		r3, r3, #0x6
	ldrb	r2, [r4, #0x1]
	mov		r1, #0x41
	neg		r1, r1
	and		r1, r2
	orr		r1, r3
	strb	r1, [r4, #0x1]
	ldr		r2, [r5, #0x28]
	ldrb	r1, [r5, #0xb]
	strb	r1, [r2, #0x0]
	ldr		r4, [r5, #0x28]
	ldrb	r2, [r5, #0x2]
	ldrb	r1, [r5, #0x3]
	eor		r2, r1
	mov		r1, #0xf
	and		r2, r1
	ldrb	r3, [r4, #0x1]
	mov		r1, #0x10
	neg		r1, r1
	and		r1, r3
	orr		r1, r2
	strb	r1, [r4, #0x1]
	ldr		r1, [r5, #0x28]
	strh	r7, [r1, #0x2]
	ldr		r1, [r5, #0x28]
	add		r1, #0x4
	ldr		r2, _08011cd4
	bl		sub_08071b6c
	mov		r2, #0x0
	ldr		r1, [r5, #0x28]
_08011c88:
	ldrh	r0, [r1, #0x0]
	add		r7, r7, r0
	add		r1, #0x2
	add		r2, #0x1
	cmp		r2, #0x5
	bls		_08011c88
	add		r2, r5, #0x0
	ldr		r1, [r2, #0x28]
	mvn		r0, r7
	strh	r0, [r1, #0x2]
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_08011ca8
	ldr		r1, _08011cd8
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
_08011ca8:
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r5, #0x14]
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_08011cc4
	ldrb	r1, [r5, #0x8]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_08011cc4
	ldr		r1, _08011cd8
	mov		r0, #0xc0
	strh	r0, [r1, #0x0]
_08011cc4:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x11CCA, 0x2

_08011ccc:	.4byte 0x03002E80
_08011cd0:	.4byte 0x03002D20
_08011cd4:	.4byte Undocumented_Greenswap
_08011cd8:	.4byte Timer3Control
	thumb_func_end sub_08011c0c

	thumb_func_start sub_08011cdc
sub_08011cdc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	str		r0, [sp, #0x8]
	ldr		r1, _08011e04
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r6, _08011e08
	add		r3, r6, #0x4
	add		r0, sp, #0x4
	mov		r10, r0
	add		r2, r6, #0x0
	add		r2, #0x40
	mov		r5, #0x3
_08011cfe:
	ldr		r1, [r2, #0x10]
	ldr		r0, [r2, #0x0]
	str		r0, [r2, #0x10]
	stmia	r2!, {  r1 }
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08011cfe
	ldr		r0, [r3, #0x0]
	str		r0, [sp, #0x0]
	mov		r2, #0x0
	str		r2, [r3, #0x0]
	ldr		r1, _08011e04
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	sub		r0, r3, #0x4
	strb	r2, [r0, #0x3]
	mov		r5, #0x0
	add		r6, r0, #0x0
	add		r7, r6, #0x0
	mov		r1, #0x50
	add		r1, r1, r7
	mov		r9, r1
_08011d2a:
	mov		r4, #0x0
	mov		r2, #0x0
	lsl		r6, r5, #0x2
	add		r0, r5, #0x1
	mov		r8, r0
	mov		r1, sp
	add		r3, r1, r5
	mov		r1, r9
	add		r0, r6, r1
	ldr		r1, [r0, #0x0]
_08011d3e:
	ldrh	r0, [r1, #0x0]
	add		r4, r4, r0
	add		r1, #0x2
	add		r2, #0x1
	cmp		r2, #0x5
	bls		_08011d3e
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x0
	beq		_08011d9c
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	mov		r2, #0x1
	neg		r2, r2
	cmp		r0, r2
	bne		_08011d9c
	mov		r0, #0x1
	lsl		r0, r5
	ldrb	r1, [r7, #0x3]
	orr		r0, r1
	strb	r0, [r7, #0x3]
	ldrb	r2, [r7, #0x8]
	lsl		r1, r2, #0x1c
	lsr		r1, r1, #0x1c
	mov		r4, r9
	add		r3, r6, r4
	ldr		r0, [r3, #0x0]
	ldrb	r0, [r0, #0x1]
	lsl		r0, r0, #0x1a
	lsr		r0, r0, #0x1f
	lsl		r0, r5
	orr		r0, r1
	mov		r1, #0xf
	and		r0, r1
	mov		r4, #0x10
	neg		r4, r4
	add		r1, r4, #0x0
	and		r2, r1
	orr		r2, r0
	strb	r2, [r7, #0x8]
	ldr		r0, [r3, #0x0]
	add		r0, #0x4
	lsl		r1, r5, #0x3
	ldr		r2, [sp, #0x8]
	add		r1, r2, r1
	ldr		r2, _08011e0c
	bl		sub_08071b6c
_08011d9c:
	mov		r0, #0x0
	str		r0, [sp, #0x4]
	mov		r4, r9
	add		r0, r6, r4
	ldr		r1, [r0, #0x0]
	add		r1, #0x4
	mov		r0, r10
	ldr		r2, _08011e10
	bl		sub_08071b6c
	mov		r5, r8
	cmp		r5, #0x3
	ble		_08011d2a
	ldr		r0, _08011e08
	ldrb	r1, [r0, #0x2]
	ldrb	r2, [r0, #0x3]
	add		r3, r1, #0x0
	orr		r3, r2
	strb	r3, [r0, #0x2]
	mov		r1, #0x1
	and		r1, r2
	add		r6, r0, #0x0
	cmp		r1, #0x0
	beq		_08011e50
	ldrb	r0, [r6, #0x0]
	cmp		r0, #0x8
	bne		_08011e14
	mov		r0, #0x3
	and		r0, r2
	cmp		r0, #0x0
	beq		_08011dea
	lsl		r0, r2, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, r3
	bne		_08011dea
	ldrb	r0, [r6, #0x8]
	mov		r1, #0x10
	orr		r0, r1
	strb	r0, [r6, #0x8]
_08011dea:
	ldrb	r4, [r6, #0x8]
	lsl		r2, r4, #0x1c
	lsr		r2, r2, #0x1c
	mov		r0, #0xe
	ldrb	r3, [r6, #0x2]
	add		r1, r0, #0x0
	and		r1, r2
	and		r0, r3
	cmp		r1, r0
	bne		_08011e34
	mov		r0, #0x40
	orr		r0, r4
	b		_08011e32

_08011e04:	.4byte InterruptMasterEnableRegister
_08011e08:	.4byte 0x03002E80
_08011e0c:	.4byte Undocumented_Greenswap
_08011e10:	.4byte 0x05000002

_08011e14:
	ldrb	r2, [r6, #0x8]
	lsl		r1, r2, #0x19
	lsr		r1, r1, #0x1f
	ldr		r0, [r6, #0x50]
	ldrb	r0, [r0, #0x1]
	lsl		r0, r0, #0x19
	lsr		r0, r0, #0x1f
	orr		r1, r0
	mov		r0, #0x1
	and		r1, r0
	lsl		r1, r1, #0x6
	mov		r0, #0x41
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
_08011e32:
	strb	r0, [r6, #0x8]
_08011e34:
	ldrb	r2, [r6, #0x8]
	lsl		r1, r2, #0x1a
	lsr		r1, r1, #0x1f
	ldr		r0, [r6, #0x50]
	ldrb	r0, [r0, #0x1]
	lsl		r0, r0, #0x1b
	lsr		r0, r0, #0x1f
	orr		r0, r1
	lsl		r0, r0, #0x5
	mov		r1, #0x21
	neg		r1, r1
	and		r1, r2
	orr		r1, r0
	strb	r1, [r6, #0x8]
_08011e50:
	ldrb	r0, [r6, #0x3]
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x11E62, 0x1A2

_08012004:	.4byte 0x08012018

.incbin "base.gba", 0x12008, 0x10
	thumb_func_end sub_08011cdc


.incbin "base.gba", 0x12018, 0x6B8
_080126d0:	.4byte 0x080127a6

.incbin "base.gba", 0x126D4, 0x104
	thumb_func_start sub_080127d8
sub_080127d8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	mov		r4, #0x0
	mov		r1, #0xff
	lsl		r1, r1, #0x2
	mov		r8, r1
	mov		r7, #0x80
	lsl		r7, r7, #0x1
	add		r3, r5, #0x0
	add		r3, r8
	mov		r9, r3
	mov		r6, #0x0
	mov		r12, r6
_080127fa:
	mov		r0, #0xa5
	lsl		r0, r0, #0x2
	add		r0, r12
	add		r2, r5, r0
	ldr		r0, [r2, #0x1c]
	cmp		r0, #0x1
	beq		_08012840
	cmp		r0, #0x1
	bgt		_08012812
	cmp		r0, #0x0
	beq		_0801281c
	b		_080128c4
_08012812:
	cmp		r0, #0x2
	beq		_08012850
	cmp		r0, #0x3
	beq		_08012890
	b		_080128c4
_0801281c:
	ldr		r0, _0801283c
	strh	r0, [r2, #0x0]
	mov		r0, #0x58
	strh	r0, [r2, #0x2]
	mov		r0, #0x60
	str		r0, [r2, #0x4]
	sub		r0, #0x61
	str		r0, [r2, #0x8]
	str		r4, [r2, #0x14]
	mov		r0, #0x1
	str		r0, [r2, #0x1c]
	str		r6, [r2, #0x18]
	mov		r0, #0x3
	str		r0, [r2, #0x20]
	b		_080128c4

.incbin "base.gba", 0x1283A, 0x2

_0801283c:	.4byte 0x0000FFF0

_08012840:
	ldr		r0, [r2, #0x18]
	sub		r0, #0x1
	str		r0, [r2, #0x18]
	cmp		r0, #0x0
	bge		_080128c4
	mov		r0, #0x0
	str		r0, [r2, #0x18]
	b		_080128c0
_08012850:
	mov		r0, r8
	add		r1, r5, r0
	ldr		r0, [r1, #0x0]
	mov		r3, #0x1
	and		r0, r3
	cmp		r0, #0x0
	beq		_08012872
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	strh	r0, [r2, #0x0]
	ldr		r0, [r1, #0x0]
	and		r0, r3
	cmp		r0, #0x0
	beq		_08012872
	ldrh	r0, [r2, #0x2]
	add		r0, #0x1
	b		_08012876
_08012872:
	ldrh	r0, [r2, #0x2]
	sub		r0, #0x1
_08012876:
	strh	r0, [r2, #0x2]
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r0, r7
	ble		_080128c4
	ldr		r3, _0801288c
	add		r0, r1, r3
	strh	r0, [r2, #0x0]
	mov		r0, #0x3
	b		_080128c2

_0801288c:	.4byte 0xFFFFFEF0

_08012890:
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080128a2
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	strh	r0, [r2, #0x0]
_080128a2:
	ldr		r0, [r2, #0x4]
	add		r0, #0x2
	mov		r1, #0x7f
	and		r0, r1
	str		r0, [r2, #0x4]
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r0, r7
	ble		_080128c4
	ldr		r3, _080128e0
	add		r0, r1, r3
	strh	r0, [r2, #0x0]
	mov		r0, #0x60
	str		r0, [r2, #0x4]
_080128c0:
	mov		r0, #0x2
_080128c2:
	str		r0, [r2, #0x1c]
_080128c4:
	add		r6, #0x42
	mov		r0, #0x24
	add		r12, r0
	add		r4, #0x1
	cmp		r4, #0x7
	ble		_080127fa
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x128DE, 0x2

_080128e0:	.4byte 0xFFFFFEF0
	thumb_func_end sub_080127d8

	thumb_func_start sub_080128e4
sub_080128e4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0xc
	mov		r8, r0
	bl		sub_080127d8
	mov		r5, #0x0
	mov		r9, r5
_080128f8:
	lsl		r0, r5, #0x3
	add		r0, r0, r5
	lsl		r0, r0, #0x2
	mov		r1, #0xa5
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	mov		r2, r8
	add		r4, r2, r0
	ldr		r0, [r4, #0x8]
	ldr		r1, [r4, #0x4]
	cmp		r0, r1
	beq		_08012946
	cmp		r1, #0x3f
	ble		_0801291a
	mov		r0, #0x7f
	sub		r0, r0, r1
	b		_0801291c
_0801291a:
	add		r0, r1, #0x0
_0801291c:
	bl		sub_080085d8
	add		r2, r0, #0x0
	ldr		r1, [r4, #0x14]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	sub		r0, r0, r1
	lsl		r0, r0, #0xd
	lsl		r2, r2, #0x9
	ldr		r1, _08012980
	add		r2, r2, r1
	add		r0, r0, r2
	lsl		r1, r5, #0xa
	ldr		r2, _08012984
	add		r1, r1, r2
	mov		r2, #0x80
	bl		_CallHardwareSetCpuFast
	ldr		r0, [r4, #0x4]
	str		r0, [r4, #0x8]
_08012946:
	ldr		r1, _08012988
	lsl		r0, r5, #0x2
	add		r0, r0, r1
	add		r6, r4, #0x0
	add		r6, #0xc
	ldr		r7, [sp, #0x8]
	add		r5, #0x1
	ldr		r2, [r0, #0x0]
	add		r1, r6, #0x0
	mov		r3, #0x3
_0801295a:
	ldrh	r0, [r2, #0x0]
	strh	r0, [r1, #0x0]
	add		r2, #0x2
	add		r1, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0801295a
	ldr		r0, [r4, #0x4]
	mov		r1, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_0801298c
	ldrh	r1, [r4, #0x10]
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r0, r2, #0x0
	orr		r0, r1
	b		_08012994

.incbin "base.gba", 0x1297E, 0x2

_08012980:	.4byte 0x08356800
_08012984:	.4byte 0x06014000
_08012988:	.4byte 0x080f557c

_0801298c:
	ldrh	r0, [r4, #0x10]
	ldr		r2, _080129d4
	add		r1, r2, #0x0
	and		r0, r1
_08012994:
	strh	r0, [r4, #0x10]
	ldrh	r1, [r4, #0x12]
	ldr		r2, _080129d8
	add		r0, r2, #0x0
	and		r1, r0
	ldr		r0, [r4, #0x20]
	lsl		r0, r0, #0xa
	orr		r1, r0
	strh	r1, [r4, #0x12]
	ldrh	r1, [r4, #0x2]
	lsl		r1, r1, #0x10
	ldrh	r0, [r4, #0x0]
	orr		r0, r1
	str		r0, [sp, #0x8]
	mov		r0, r9
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x4]
	add		r0, r6, #0x0
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	cmp		r5, #0x7
	ble		_080128f8
	add		sp, #0xc
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080129d4:	.4byte 0x0000EFFF
_080129d8:	.4byte 0x0000F3FF
	thumb_func_end sub_080128e4

	thumb_func_start sub_080129dc
sub_080129dc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r7, r0, #0x0
	mov		r0, #0x1
	str		r0, [sp, #0x8]
	mov		r1, #0xb1
	lsl		r1, r1, #0x1
	mov		r10, r1
	ldr		r0, _08012a38
	str		r0, [sp, #0xc]
	mov		r1, #0x0
	mov		r8, r1
	mov		r0, #0x4
	mov		r9, r0
_08012a00:
	mov		r1, #0xf3
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, [sp, #0x8]
	cmp		r1, r0
	bge		_08012a70
	add		r0, r7, #0x0
	add		r0, #0x2c
	mov		r1, r9
	add		r4, r0, r1
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08012a22
	mov		r0, #0x8e
	bl		sub_0807073c
_08012a22:
	ldr		r1, [r4, #0x0]
	add		r0, r1, #0x1
	str		r0, [r4, #0x0]
	cmp		r0, #0x10
	bgt		_08012a40
	add		r5, r0, #0x0
	ldr		r6, _08012a38
	add		r6, r8
	ldr		r4, _08012a3c
	b		_08012a4a

.incbin "base.gba", 0x12A36, 0x2

_08012a38:	.4byte 0x080df05a
_08012a3c:	.4byte 0x080df06e

_08012a40:
	add		r5, r1, #0x0
	sub		r5, #0xf
	ldr		r6, _08012a68
	add		r6, r8
	ldr		r4, _08012a6c
_08012a4a:
	add		r4, r8
	mov		r0, #0x0
	bl		sub_08028130
	add		r2, r0, #0x0
	add		r2, r10
	str		r5, [sp, #0x0]
	mov		r0, #0x10
	str		r0, [sp, #0x4]
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	mov		r3, #0x5
	bl		sub_0800f124
	b		_08012a98

_08012a68:	.4byte 0x080df06e
_08012a6c:	.4byte 0x080df064

_08012a70:
	add		r0, r7, #0x0
	add		r0, #0x2c
	mov		r1, r9
	add		r4, r0, r1
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	ble		_08012a84
	mov		r0, #0x90
	bl		sub_0807073c
_08012a84:
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, r10
	ldr		r0, [sp, #0xc]
	mov		r2, #0x5
	bl		sub_08071b6c
_08012a98:
	mov		r0, #0x20
	add		r10, r0
	ldr		r1, [sp, #0xc]
	add		r1, #0x20
	str		r1, [sp, #0xc]
	add		r8, r0
	mov		r0, #0x4
	add		r9, r0
	ldr		r1, [sp, #0x8]
	add		r1, #0x1
	str		r1, [sp, #0x8]
	cmp		r1, #0x3
	ble		_08012a00
	mov		r1, #0xf3
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	ble		_08012b18
	add		r1, #0x4
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bgt		_08012acc
	ldr		r0, [r7, #0x30]
	b		_08012ad6
_08012acc:
	cmp		r0, #0x2
	bgt		_08012ad4
	ldr		r0, [r7, #0x34]
	b		_08012ad6
_08012ad4:
	ldr		r0, [r7, #0x38]
_08012ad6:
	cmp		r0, #0x10
	bgt		_08012aec
	add		r4, r0, #0x0
	ldr		r6, _08012ae4
	ldr		r5, _08012ae8
	b		_08012af4

.incbin "base.gba", 0x12AE2, 0x2

_08012ae4:	.4byte 0x080df0b8
_08012ae8:	.4byte 0x080df0d8

_08012aec:
	add		r4, r0, #0x0
	sub		r4, #0x10
	ldr		r6, _08012b10
	ldr		r5, _08012b14
_08012af4:
	mov		r0, #0x1
	bl		sub_08028130
	add		r2, r0, #0x0
	add		r2, #0xc0
	str		r4, [sp, #0x0]
	mov		r0, #0x10
	str		r0, [sp, #0x4]
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r3, #0x10
	bl		sub_0800f124
	b		_08012b2c

_08012b10:	.4byte 0x080df0d8
_08012b14:	.4byte 0x080df0b8

_08012b18:
	ldr		r4, _08012b44
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xc0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
_08012b2c:
	mov		r0, #0x1
	bl		sub_08028168
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x12B42, 0x2

_08012b44:	.4byte 0x080df0b8

.incbin "base.gba", 0x12B48, 0x7DC
_08013324:	.4byte 0x08013344

.incbin "base.gba", 0x13328, 0x1C
	thumb_func_end sub_080129dc


.incbin "base.gba", 0x13344, 0x678
	thumb_func_start sub_080139bc
sub_080139bc:
	push	{ r4, r5, r6, lr }
	add		r3, r0, #0x0
	mov		r2, #0x0
	ldr		r0, _080139fc
	ldrb	r4, [r0, #0x1]
	add		r6, r0, #0x0
	cmp		r2, r4
	bge		_080139f0
	ldr		r5, _08013a00
	ldrh	r0, [r5, #0x0]
	asr		r0, r3
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080139f0
	add		r1, r5, #0x0
	mov		r5, #0x1
_080139de:
	add		r1, #0x2
	add		r2, #0x1
	cmp		r2, r4
	bge		_080139f0
	ldrh	r0, [r1, #0x0]
	asr		r0, r3
	and		r0, r5
	cmp		r0, #0x0
	bne		_080139de
_080139f0:
	ldrb	r6, [r6, #0x1]
	cmp		r2, r6
	bge		_08013a04
	mov		r0, #0x0
	b		_08013a06

.incbin "base.gba", 0x139FA, 0x2

_080139fc:	.4byte 0x03003000
_08013a00:	.4byte 0x03000160

_08013a04:
	mov		r0, #0x1
_08013a06:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080139bc

	thumb_func_start sub_08013a0c
sub_08013a0c:
	push	{ r4, r5, r6, lr }
	lsl		r2, r0, #0x1
	add		r2, r2, r0
	add		r2, r2, r1
	mov		r3, #0x0
	ldr		r0, _08013a50
	ldrb	r4, [r0, #0x1]
	add		r6, r0, #0x0
	cmp		r3, r4
	bge		_08013a44
	ldr		r5, _08013a54
	ldrh	r0, [r5, #0x0]
	asr		r0, r2
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08013a44
	add		r1, r5, #0x0
	mov		r5, #0x1
_08013a32:
	add		r1, #0x2
	add		r3, #0x1
	cmp		r3, r4
	bge		_08013a44
	ldrh	r0, [r1, #0x0]
	asr		r0, r2
	and		r0, r5
	cmp		r0, #0x0
	bne		_08013a32
_08013a44:
	ldrb	r6, [r6, #0x1]
	cmp		r3, r6
	bge		_08013a58
	mov		r0, #0x0
	b		_08013a5a

.incbin "base.gba", 0x13A4E, 0x2

_08013a50:	.4byte 0x03003000
_08013a54:	.4byte 0x03000168

_08013a58:
	mov		r0, #0x1
_08013a5a:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08013a0c

	thumb_func_start sub_08013a60
sub_08013a60:
	mov		r1, #0x0
	strb	r1, [r0, #0xe]
	strh	r1, [r0, #0x10]
	bx		lr
	thumb_func_end sub_08013a60

	thumb_func_start sub_08013a68
sub_08013a68:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0xc
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	ldr		r1, _08013ad0
	mov		r0, #0xe
	ldrsb	r0, [r4, r0]
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	ldrb	r2, [r0, #0x4]
	ldrh	r0, [r4, #0x10]
	add		r0, #0x1
	strh	r0, [r4, #0x10]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	add		r7, r1, #0x0
	cmp		r0, r2
	ble		_08013aa4
	mov		r0, #0x0
	strh	r0, [r4, #0x10]
	ldrb	r0, [r4, #0xe]
	add		r0, #0x1
	strb	r0, [r4, #0xe]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x9
	bls		_08013aa4
	mov		r0, #0x0
	strb	r0, [r4, #0xe]
_08013aa4:
	lsl		r1, r5, #0x10
	add		r0, r6, #0x4
	lsl		r0, r0, #0x10
	lsr		r1, r1, #0x10
	orr		r1, r0
	str		r1, [sp, #0x8]
	mov		r0, #0xe
	ldrsb	r0, [r4, r0]
	lsl		r0, r0, #0x3
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	add		r2, r3, #0x0
	bl		sub_0802951c
	add		sp, #0xc
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08013ad0:	.4byte 0x080f552c
	thumb_func_end sub_08013a68

	thumb_func_start sub_08013ad4
sub_08013ad4:
	push	{ r4, r5, r6, lr }
	ldrh	r4, [r0, #0x0]
	ldr		r6, _08013b14
	mov		r3, #0x0
	mov		r5, #0x80
	lsl		r5, r5, #0x1
	lsr		r0, r4, #0x8
	lsl		r1, r4, #0x8
	orr		r0, r1
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
_08013aea:
	sub		r0, r5, r3
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r2, r3, r0
	lsl		r0, r2, #0x1
	add		r0, r0, r6
	ldrh	r1, [r0, #0x0]
	lsr		r0, r1, #0x8
	lsl		r1, r1, #0x8
	orr		r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	sub		r0, r0, r4
	cmp		r0, #0x0
	bne		_08013b1c
	ldr		r0, _08013b18
	add		r0, r2, r0
	ldrb	r0, [r0, #0x0]
	b		_08013b2c

.incbin "base.gba", 0x13B12, 0x2

_08013b14:	.4byte 0x080f559c
_08013b18:	.4byte 0x080f579d

_08013b1c:
	cmp		r0, #0x0
	bge		_08013b24
	add		r3, r2, #0x1
	b		_08013b26
_08013b24:
	add		r5, r2, #0x0
_08013b26:
	cmp		r5, r3
	bgt		_08013aea
	mov		r0, #0x0
_08013b2c:
	lsl		r2, r0, #0x18
	lsr		r0, r2, #0x1d
	mov		r1, #0xf8
	lsl		r1, r1, #0x15
	and		r1, r2
	lsr		r1, r1, #0x18
	lsl		r0, r0, #0x6
	orr		r0, r1
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x13B42, 0x2
	thumb_func_end sub_08013ad4

	thumb_func_start sub_08013b44
sub_08013b44:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x28
	str		r0, [sp, #0xC]
	str		r1, [sp, #0x10]
	str		r3, [sp, #0x14]
	ldr		r0, [sp, #0xc+0x48]
	cmp		r0, #0x0
	beq		_08013b5e
	mov		r0, #0x1
_08013b5e:
	str		r0, [sp, #0x18]
	ldr		r1, [sp, #0x10]
	lsl		r0, r1, #0x6
	ldr		r3, [sp, #0x14]
	add		r0, r3, r0
	ldr		r3, [sp, #0xC]
	lsl		r1, r3, #0x1
	add		r0, r0, r1
	str		r0, [sp, #0x1C]
	mov		r10, r2
	mov		r0, #0x0
	str		r0, [sp, #0x20]
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_08013b9c
	cmp		r0, #0xa
	beq		_08013b9c
	cmp		r0, #0xd
	beq		_08013b9c
	mov		r1, r10
_08013b86:
	add		r1, #0x2
	ldr		r3, [sp, #0x20]
	add		r3, #0x1
	str		r3, [sp, #0x20]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08013b9c
	cmp		r0, #0xa
	beq		_08013b9c
	cmp		r0, #0xd
	bne		_08013b86
_08013b9c:
	mov		r0, #0x0
	mov		r9, r0
	mov		r8, r0
	b		_08013cf2
_08013ba4:
	mov		r7, #0x0
	mov		r2, #0x0
	ldr		r3, [sp, #0x18]
	cmp		r3, #0x0
	beq		_08013c3e
	mov		r1, r8
	lsl		r0, r1, #0x1
	sub		r2, #0x1
	mov		r5, #0x0
	ldr		r6, _08013c10
	mov		r3, r10
	add		r4, r0, r3
_08013bbc:
	add		r0, r4, #0x0
	str		r2, [sp, #0x24]
	bl		sub_08013ad4
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	ldr		r2, [sp, #0x24]
	cmp		r1, #0x0
	ble		_08013bd2
	ldr		r0, [sp, #0x0+0x48]
	add		r1, r1, r0
_08013bd2:
	ldr		r0, _08013c10
	add		r0, r5, r0
	strb	r1, [r0, #0x0]
	add		r4, #0x2
	add		r5, #0x1
	cmp		r5, #0x3
	ble		_08013bbc
	ldrb	r0, [r6, #0x0]
	cmp		r0, #0x40
	bne		_08013bfc
	ldrb	r0, [r6, #0x3]
	cmp		r0, #0x40
	bne		_08013bfc
	ldrb	r1, [r6, #0x1]
	sub		r1, #0x10
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	sub		r0, #0x10
	ldrb	r6, [r6, #0x2]
	add		r2, r0, r6
_08013bfc:
	cmp		r2, #0x0
	blt		_08013c3e
	cmp		r2, #0x3
	beq		_08013c1e
	cmp		r2, #0x3
	ble		_08013c14
	cmp		r2, #0x5
	beq		_08013c2c
	b		_08013c3e

.incbin "base.gba", 0x13C0E, 0x2

_08013c10:	.4byte 0x03002D54

_08013c14:
	cmp		r2, #0x0
	blt		_08013c3e
	lsl		r0, r2, #0x2
	ldr		r1, [sp, #0xc+0x48]
	b		_08013c3a
_08013c1e:
	ldr		r0, _08013c28
	ldr		r3, [sp, #0x10+0x48]
	ldrb	r1, [r3, #0x0]
	b		_08013c32

.incbin "base.gba", 0x13C26, 0x2

_08013c28:	.4byte 0x0811512d

_08013c2c:
	ldr		r0, _08013c80
	ldr		r3, [sp, #0x10+0x48]
	ldrb	r1, [r3, #0x1]
_08013c32:
	add		r1, r1, r0
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, _08013c84
_08013c3a:
	add		r0, r0, r1
	ldr		r7, [r0, #0x0]
_08013c3e:
	cmp		r7, #0x0
	beq		_08013ca6
	mov		r4, #0x0
	ldrb	r0, [r7, #0x0]
	ldr		r1, [sp, #0xC]
	add		r1, r9
	mov		r5, r8
	add		r5, #0x4
	cmp		r0, #0x0
	beq		_08013c5c
_08013c52:
	add		r4, #0x1
	add		r0, r7, r4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08013c52
_08013c5c:
	cmp		r2, #0x2
	beq		_08013c88
	lsr		r0, r4, #0x1f
	add		r0, r4, r0
	asr		r4, r0, #0x1
	ldr		r3, [sp, #0x0+0x48]
	str		r3, [sp, #0x0]
	ldr		r0, [sp, #0x4+0x48]
	str		r0, [sp, #0x4]
	ldr		r3, [sp, #0x8+0x48]
	str		r3, [sp, #0x8]
	add		r0, r1, #0x0
	ldr		r1, [sp, #0x10]
	add		r2, r7, #0x0
	ldr		r3, [sp, #0x14]
	bl		sub_08013e9c
	b		_08013ca0

_08013c80:	.4byte 0x08115170
_08013c84:	.4byte 0x08115178

_08013c88:
	ldr		r0, [sp, #0x0+0x48]
	str		r0, [sp, #0x0]
	ldr		r3, [sp, #0x4+0x48]
	str		r3, [sp, #0x4]
	ldr		r0, [sp, #0x8+0x48]
	str		r0, [sp, #0x8]
	add		r0, r1, #0x0
	ldr		r1, [sp, #0x10]
	add		r2, r7, #0x0
	ldr		r3, [sp, #0x14]
	bl		sub_08013ec0
_08013ca0:
	mov		r8, r5
	add		r9, r4
	b		_08013cf2
_08013ca6:
	mov		r0, r9
	ldr		r1, [sp, #0x8+0x48]
	bl		sub_0807d80c
	add		r5, r0, #0x0
	mov		r1, r8
	lsl		r0, r1, #0x1
	add		r0, r10
	bl		sub_08013ad4
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	cmp		r4, #0x0
	ble		_08013cc6
	ldr		r3, [sp, #0x0+0x48]
	add		r4, r4, r3
_08013cc6:
	mov		r0, r9
	ldr		r1, [sp, #0x8+0x48]
	bl		sub_0807d8d8
	lsl		r1, r5, #0x6
	add		r1, r1, r0
	lsl		r1, r1, #0x1
	ldr		r0, [sp, #0x1C]
	add		r1, r1, r0
	ldr		r3, [sp, #0x4+0x48]
	lsl		r2, r3, #0xc
	add		r0, r2, #0x0
	orr		r0, r4
	strh	r0, [r1, #0x0]
	add		r1, #0x40
	add		r0, r4, #0x0
	add		r0, #0x20
	orr		r2, r0
	strh	r2, [r1, #0x0]
	mov		r0, #0x1
	add		r8, r0
	add		r9, r0
_08013cf2:
	ldr		r1, [sp, #0x20]
	cmp		r8, r1
	bge		_08013cfa
	b		_08013ba4
_08013cfa:
	add		sp, #0x28
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x13D0A, 0x2
	thumb_func_end sub_08013b44

	thumb_func_start sub_08013d0c
sub_08013d0c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r10, r0
	add		r4, r1, #0x0
	mov		r0, #0x1
	mov		r1, r10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08013de2
	mov		r0, #0x0
	bl		sub_080281d4
	b		_08013de2
_08013d2e:
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	ldr		r5, [r4, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	mov		r1, r10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08013d48
	asr		r0, r1, #0x4
	mov		r1, #0xf
	and		r0, r1
	add		r5, r5, r0
_08013d48:
	ldr		r6, [r4, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	mov		r1, r10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08013d5e
	asr		r0, r1, #0x8
	mov		r1, #0xf
	and		r0, r1
	add		r6, r6, r0
_08013d5e:
	ldr		r7, [r4, #0xc]
	ldr		r0, [r4, #0x10]
	mov		r9, r0
	ldr		r1, [r4, #0x8]
	mov		r8, r1
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	lsl		r1, r6, #0x6
	add		r0, r0, r1
	lsl		r1, r5, #0x1
	add		r0, r0, r1
	str		r0, [sp, #0x4]
	mov		r1, r8
	ldrb	r0, [r1, #0x0]
	add		r4, #0x14
	str		r4, [sp, #0x8]
	cmp		r0, #0x0
	beq		_08013d96
_08013d88:
	add		r1, #0x2
	ldr		r0, [sp, #0x0]
	add		r0, #0x1
	str		r0, [sp, #0x0]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08013d88
_08013d96:
	mov		r6, #0x0
	ldr		r1, [sp, #0x0]
	cmp		r6, r1
	bge		_08013de0
	lsl		r7, r7, #0xc
_08013da0:
	lsl		r0, r6, #0x1
	add		r0, r8
	bl		sub_08013ad4
	add		r5, r0, #0x0
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	add		r0, r6, #0x0
	mov		r1, r9
	bl		sub_0807d80c
	add		r4, r0, #0x0
	add		r0, r6, #0x0
	mov		r1, r9
	bl		sub_0807d8d8
	lsl		r4, r4, #0x6
	add		r4, r4, r0
	lsl		r4, r4, #0x1
	ldr		r0, [sp, #0x4]
	add		r4, r4, r0
	add		r0, r7, #0x0
	orr		r0, r5
	strh	r0, [r4, #0x0]
	add		r4, #0x40
	add		r5, #0x20
	orr		r5, r7
	strh	r5, [r4, #0x0]
	add		r6, #0x1
	ldr		r1, [sp, #0x0]
	cmp		r6, r1
	blt		_08013da0
_08013de0:
	ldr		r4, [sp, #0x8]
_08013de2:
	ldr		r1, [r4, #0x0]
	ldr		r0, _08013e0c
	cmp		r1, r0
	bne		_08013d2e
	mov		r0, #0x2
	mov		r1, r10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08013dfa
	mov		r0, #0x1
	bl		sub_080281fc
_08013dfa:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x13E0A, 0x2

_08013e0c:	.4byte 0x0000FFFF
	thumb_func_end sub_08013d0c

	thumb_func_start sub_08013e10
sub_08013e10:
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x1d
	mov		r1, #0xf8
	lsl		r1, r1, #0x15
	and		r1, r0
	lsr		r1, r1, #0x18
	lsl		r2, r2, #0x6
	orr		r2, r1
	add		r0, r2, #0x0
	bx		lr
	thumb_func_end sub_08013e10

	thumb_func_start sub_08013e24
sub_08013e24:
	add		r1, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r0, r1, #0x16
	mov		r2, #0xf8
	lsl		r2, r2, #0xd
	and		r2, r1
	lsr		r2, r2, #0x10
	lsl		r0, r0, #0x5
	add		r0, r0, r2
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	bx		lr
	thumb_func_end sub_08013e24

	thumb_func_start sub_08013e3c
sub_08013e3c:
	push	{ r4, r5, r6, lr }
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	ldr		r6, _08013e7c
	mov		r3, #0x0
	mov		r5, #0x80
	lsl		r5, r5, #0x1
	lsr		r0, r4, #0x8
	lsl		r1, r4, #0x8
	orr		r0, r1
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
_08013e54:
	sub		r0, r5, r3
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r2, r3, r0
	lsl		r0, r2, #0x1
	add		r0, r0, r6
	ldrh	r1, [r0, #0x0]
	lsr		r0, r1, #0x8
	lsl		r1, r1, #0x8
	orr		r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	sub		r0, r0, r4
	cmp		r0, #0x0
	bne		_08013e84
	ldr		r0, _08013e80
	add		r0, r2, r0
	ldrb	r0, [r0, #0x0]
	b		_08013e94

_08013e7c:	.4byte 0x080f559c
_08013e80:	.4byte 0x080f579d

_08013e84:
	cmp		r0, #0x0
	bge		_08013e8c
	add		r3, r2, #0x1
	b		_08013e8e
_08013e8c:
	add		r5, r2, #0x0
_08013e8e:
	cmp		r5, r3
	bgt		_08013e54
	mov		r0, #0x0
_08013e94:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x13E9A, 0x2
	thumb_func_end sub_08013e3c

	thumb_func_start sub_08013e9c
sub_08013e9c:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x14
	ldr		r4, [sp, #0x0+0x24]
	ldr		r5, [sp, #0x4+0x24]
	ldr		r6, [sp, #0x8+0x24]
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r4, #0x0
	str		r4, [sp, #0xC]
	str		r4, [sp, #0x10]
	bl		sub_08013b44
	add		sp, #0x14
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x13EBE, 0x2
	thumb_func_end sub_08013e9c

	thumb_func_start sub_08013ec0
sub_08013ec0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r9, r2
	ldr		r2, [sp, #0x8+0x24]
	mov		r10, r2
	lsl		r1, r1, #0x6
	add		r3, r3, r1
	lsl		r0, r0, #0x1
	add		r3, r3, r0
	str		r3, [sp, #0x0]
	mov		r7, #0x0
	mov		r1, r9
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08013ef2
_08013ee6:
	add		r7, #0x1
	mov		r2, r9
	add		r0, r2, r7
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08013ee6
_08013ef2:
	mov		r6, #0x0
	cmp		r6, r7
	bge		_08013f4a
	ldr		r0, [sp, #0x4+0x24]
	lsl		r0, r0, #0xc
	mov		r8, r0
_08013efe:
	mov		r1, r9
	add		r0, r1, r6
	ldrb	r1, [r0, #0x0]
	lsr		r2, r1, #0x5
	mov		r0, #0x1f
	and		r1, r0
	lsl		r5, r2, #0x6
	orr		r5, r1
	cmp		r5, #0x0
	ble		_08013f16
	ldr		r2, [sp, #0x0+0x24]
	add		r5, r5, r2
_08013f16:
	add		r0, r6, #0x0
	mov		r1, r10
	bl		sub_0807d80c
	add		r4, r0, #0x0
	add		r0, r6, #0x0
	mov		r1, r10
	bl		sub_0807d8d8
	lsl		r4, r4, #0x6
	add		r4, r4, r0
	lsl		r4, r4, #0x1
	ldr		r0, [sp, #0x0]
	add		r4, r4, r0
	mov		r0, r8
	orr		r0, r5
	strh	r0, [r4, #0x0]
	add		r4, #0x40
	add		r0, r5, #0x0
	add		r0, #0x20
	mov		r1, r8
	orr		r0, r1
	strh	r0, [r4, #0x0]
	add		r6, #0x1
	cmp		r6, r7
	blt		_08013efe
_08013f4a:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x13F5A, 0x10A
	ldr		r0, _080140e0
	ldr		r2, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x13
	ldrh	r1, [r3, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0x7
	and		r0, r1
	strh	r0, [r3, #0x0]
	ldrh	r1, [r2, #0x0]
	ldr		r0, _080140e4
	and		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r1
	strh	r0, [r3, #0x0]
	ldr		r1, _080140e8
	ldrh	r0, [r2, #0x2]
	strh	r0, [r1, #0x0]
	add		r1, #0x8
	ldrh	r0, [r2, #0x4]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x6]
	strh	r0, [r1, #0x0]
	sub		r1, #0x8
	ldrh	r0, [r2, #0x8]
	strh	r0, [r1, #0x0]
	add		r1, #0xa
	ldrh	r0, [r2, #0xa]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0xc]
	strh	r0, [r1, #0x0]
	sub		r1, #0xa
	ldrh	r0, [r2, #0xe]
	strh	r0, [r1, #0x0]
	add		r1, #0xc
	ldrh	r0, [r2, #0x10]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x12]
	strh	r0, [r1, #0x0]
	sub		r1, #0xc
	ldrh	r0, [r2, #0x14]
	strh	r0, [r1, #0x0]
	add		r1, #0xe
	ldrh	r0, [r2, #0x16]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x18]
	strh	r0, [r1, #0x0]
	add		r1, #0x32
	ldrh	r0, [r2, #0x1a]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x1c]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x1e]
	strh	r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x140DE, 0x2

_080140e0:	.4byte 0x03000174
_080140e4:	.4byte 0x00009FFF
_080140e8:	.4byte BG0Control
	thumb_func_end sub_08013ec0

	thumb_func_start sub_080140ec
sub_080140ec:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	ldr		r4, _0801411c
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r0, _08014120
	ldrb	r0, [r0, #0x0]
	lsr		r4, r0, #0x2
	mov		r0, #0x1
	and		r4, r0
	cmp		r4, #0x0
	bne		_08014124
	mov		r0, #0x0
	bl		sub_08028130
	strh	r4, [r0, #0x0]
	b		_08014130

.incbin "base.gba", 0x1411A, 0x2

_0801411c:	.4byte 0x080d7d94
_08014120:	.4byte 0x0203EED4

_08014124:
	mov		r0, #0x0
	bl		sub_08028130
	ldr		r2, _08014244
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
_08014130:
	ldr		r4, _08014248
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe0
	add		r0, r4, #0x0
	mov		r2, #0x10
	bl		_CallHardwareSetCpuFast
	ldr		r4, _0801424c
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r0, _08014250
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r3, _08014254
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08014258
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	add		r2, r6, r1
	ldr		r4, _0801425c
	add		r1, r5, #0x0
	add		r3, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08014260
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	mov		r1, #0xe0
	lsl		r1, r1, #0x5
	add		r2, r6, r1
	add		r1, r5, #0x0
	add		r3, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08014264
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	mov		r1, #0xd0
	lsl		r1, r1, #0x6
	add		r2, r6, r1
	add		r1, r5, #0x0
	add		r3, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08014268
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	mov		r1, #0xe8
	lsl		r1, r1, #0x7
	add		r2, r6, r1
	ldr		r3, _0801426c
	add		r1, r5, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08014270
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08014274
	ldr		r4, _08014278
	add		r1, r5, #0x0
	add		r3, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0801427c
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08014280
	ldr		r3, _08014284
	add		r1, r5, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08014288
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0801428c
	add		r1, r5, #0x0
	add		r3, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08014244:	.4byte 0x0000FFFF
_08014248:	.4byte 0x0809866c
_0801424c:	.4byte 0x080cdd3c
_08014250:	.4byte 0x08098b0c
_08014254:	.4byte 0x80000150
_08014258:	.4byte 0x080c558c
_0801425c:	.4byte 0x80000C00
_08014260:	.4byte 0x080c5bc0
_08014264:	.4byte 0x080c6300
_08014268:	.4byte 0x080d7eac
_0801426c:	.4byte 0x80000600
_08014270:	.4byte 0x080ce690
_08014274:	.4byte 0x06017000
_08014278:	.4byte 0x80000200
_0801427c:	.4byte 0x080cebcc
_08014280:	.4byte 0x06017A00
_08014284:	.4byte 0x80000100
_08014288:	.4byte 0x080ce918
_0801428c:	.4byte 0x06017C00
	thumb_func_end sub_080140ec

	thumb_func_start sub_08014290
sub_08014290:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	ldr		r4, _08014320
	ldr		r1, _08014324
	add		r0, r4, #0x0
	bl		sub_080140ec
	mov		r1, #0xc0
	lsl		r1, r1, #0x13
	mov		r0, #0x0
	bl		sub_080281c4
	ldr		r1, _08014328
	mov		r0, #0x1
	bl		sub_080281c4
	ldr		r0, _0801432c
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08014330
	ldr		r3, _08014334
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08014338
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0801433c
	ldr		r3, _08014340
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r2, _08014344
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
	ldr		r0, _08014348
	ldrb	r0, [r0, #0x0]
	lsr		r0, r0, #0x2
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_08014350
	ldr		r4, _0801434c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x5
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	b		_08014364

_08014320:	.4byte 0x02010400
_08014324:	.4byte 0x06008000
_08014328:	.4byte 0x06001000
_0801432c:	.4byte 0x080993b8
_08014330:	.4byte 0x06002000
_08014334:	.4byte 0x80000400
_08014338:	.4byte 0x080994bc
_0801433c:	.4byte 0x06003000
_08014340:	.4byte 0x80000280
_08014344:	.4byte 0x01000140
_08014348:	.4byte 0x0203EED4
_0801434c:	.4byte 0x080e23d0

_08014350:
	ldr		r4, _080143d8
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x8
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
_08014364:
	mov		r0, #0x1
	bl		sub_080281fc
	bl		_DrawFrameRunAudio
	ldr		r4, _080143dc
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x2
	bl		sub_080281fc
	bl		_DrawFrameRunAudio
	ldrh	r0, [r5, #0x2]
	mov		r1, #0x0
	mov		r0, #0x8
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x8]
	ldr		r0, _080143e0
	strh	r0, [r5, #0x8]
	ldrh	r0, [r5, #0xe]
	ldr		r0, _080143e4
	strh	r0, [r5, #0xe]
	ldrh	r0, [r5, #0x14]
	ldr		r0, _080143e8
	strh	r0, [r5, #0x14]
	ldrh	r0, [r5, #0x0]
	mov		r0, #0xfa
	lsl		r0, r0, #0x5
	strh	r0, [r5, #0x0]
	ldrh	r0, [r5, #0x4]
	strh	r1, [r5, #0x4]
	ldrh	r0, [r5, #0x6]
	strh	r1, [r5, #0x6]
	ldrh	r0, [r5, #0xa]
	strh	r1, [r5, #0xa]
	ldrh	r0, [r5, #0xc]
	strh	r1, [r5, #0xc]
	ldrh	r0, [r5, #0x10]
	strh	r1, [r5, #0x10]
	ldrh	r0, [r5, #0x12]
	strh	r1, [r5, #0x12]
	ldrh	r0, [r5, #0x16]
	strh	r1, [r5, #0x16]
	ldrh	r0, [r5, #0x18]
	strh	r1, [r5, #0x18]
	str		r1, [r5, #0x3c]
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080143d8:	.4byte 0x080e2874
_080143dc:	.4byte 0x080e278c
_080143e0:	.4byte 0x00000209
_080143e4:	.4byte 0x0000040A
_080143e8:	.4byte 0x0000060B
	thumb_func_end sub_08014290

	thumb_func_start sub_080143ec
sub_080143ec:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r0, #0x0
	mov		r8, r0
	mov		r9, r0
	ldr		r7, _08014498
	ldr		r1, _0801449c
	add		r4, r7, r1
	ldr		r1, _080144a0
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	add		r0, r4, #0x0
	bl		sub_08027188
	ldr		r5, _080144a4
	mov		r2, #0xa2
	lsl		r2, r2, #0x1
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_080271b8
	str		r0, [r5, #0x0]
	add		r6, r0, #0x0
	bl		sub_080297c8
	mov		r2, r8
	str		r2, [r6, #0x2c]
	str		r2, [r6, #0x40]
	mov		r1, #0x9c
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	str		r2, [r0, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0x13
	ldrh	r0, [r4, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x6
	add		r1, r2, #0x0
	orr		r0, r1
	strh	r0, [r4, #0x0]
	ldr		r1, _080144a8
	mov		r0, #0xf0
	strh	r0, [r1, #0x0]
	add		r1, #0x4
	mov		r0, #0xa0
	strh	r0, [r1, #0x0]
	ldr		r0, _080144ac
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	mov		r2, r8
	str		r2, [r7, #0xc]
	mov		r0, #0x2
	ldr		r1, _080144b0
	bl		sub_0807df78
	ldr		r5, _080144b0
	mov		r0, #0x2
	add		r1, r5, #0x0
	bl		sub_0807df78
	ldr		r0, _080144b4
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_080144bc
	mov		r0, r8
	strh	r0, [r4, #0x0]
	ldr		r0, _080144b8
	ldr		r0, [r0, #0x0]
	str		r0, [r7, #0x0]
	ldrb	r0, [r7, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r7, #0x8]
	b		_080146b2

_08014498:	.4byte RunGameLogic_CallBack
_0801449c:	.4byte 0x00000704
_080144a0:	.4byte 0x0202A400
_080144a4:	.4byte 0x03000174
_080144a8:	.4byte Window0HorizontalDimensions
_080144ac:	.4byte InsideofWindow0and1
_080144b0:	.4byte 0x00010001
_080144b4:	.4byte 0x0203EED4
_080144b8:	.4byte 0x03000170

_080144bc:
	add		r0, r6, #0x0
	bl		sub_08014290
	ldrh	r0, [r6, #0x1a]
	ldr		r0, _08014500
	strh	r0, [r6, #0x1a]
	ldrh	r0, [r6, #0x1c]
	ldr		r0, _08014504
	strh	r0, [r6, #0x1c]
	ldr		r4, _08014508
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	str		r4, [r7, #0xc]
	mov		r0, #0x2
	add		r1, r5, #0x0
	bl		sub_0807df78
	mov		r0, #0x2
	add		r1, r5, #0x0
	bl		sub_0807df78
_080144ec:
	ldr		r0, [r6, #0x2c]
	cmp		r0, #0x7
	bls		_080144f4
	b		_080145f8
_080144f4:
	lsl		r0, r0, #0x2
	ldr		r1, _0801450c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x144FE, 0x2

_08014500:	.4byte 0x00000844
_08014504:	.4byte 0x00001008
_08014508:	.4byte 0x08014065
_0801450c:	.4byte 0x08014510
_08014510:	.4byte 0x08014530

.incbin "base.gba", 0x14514, 0x1C
	thumb_func_end sub_080143ec


.incbin "base.gba", 0x14530, 0x40

_08014570:

.incbin "base.gba", 0x14570, 0x88

_080145f8:

.incbin "base.gba", 0x145F8, 0x8
_08014600:

.incbin "base.gba", 0x14600, 0x10
_08014610:

.incbin "base.gba", 0x14610, 0xC
_0801461c:	.4byte 0x03000170
_08014620:	.4byte 0x08000E79
_08014624:	.4byte 0x08001901
_08014628:	.4byte 0x0000FFFF

_0801462c:

.incbin "base.gba", 0x1462C, 0x8
_08014634:

.incbin "base.gba", 0x14634, 0x2E
_08014662:

.incbin "base.gba", 0x14662, 0xE
_08014670:

.incbin "base.gba", 0x14670, 0x42
_080146b2:

.incbin "base.gba", 0x146B2, 0xE
_080146c0:	.4byte 0x0802A1FD
_080146c4:	.4byte 0x030052F0
_080146c8:	.4byte 0x0802A239
_080146cc:	.4byte RunGameLogic_CallBack
_080146d0:	.4byte 0x00010001
_080146d4:	.4byte 0x080270F1
_080146d8:	.4byte 0x03000170
	thumb_func_start sub_080146dc
sub_080146dc:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, _080146f8
	add		r5, r0, #0x0
	add		r5, #0x8
	ldr		r0, _080146fc
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08014700
	mov		r0, #0x5
	str		r0, [r4, #0x30]
	b		_0801476e

_080146f8:	.4byte 0x02020400
_080146fc:	.4byte 0x0203EED4

_08014700:
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_0801470e
	mov		r0, #0x8
	str		r0, [r4, #0x30]
	b		_0801476e
_0801470e:
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08014720
	ldrb	r0, [r5, #0x9]
	bl		sub_0802d6d0
	cmp		r0, #0x0
	beq		_08014726
_08014720:
	mov		r0, #0x3
	str		r0, [r4, #0x30]
	b		_0801476e
_08014726:
	ldr		r0, _08014758
	ldr		r1, _0801475c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	blt		_08014760
	ldrb	r0, [r5, #0x9]
	bl		sub_080567ec
	lsl		r0, r0, #0x18
	asr		r1, r0, #0x18
	mov		r5, #0x1
	neg		r5, r5
	cmp		r1, r5
	bne		_08014768
	bl		sub_08057620
	lsl		r0, r0, #0x18
	asr		r1, r0, #0x18
	cmp		r1, r5
	bne		_08014768
	mov		r0, #0x1
	str		r0, [r4, #0x30]
	b		_0801476e

.incbin "base.gba", 0x14756, 0x2

_08014758:	.4byte RunGameLogic_CallBack
_0801475c:	.4byte 0x00000CAC

_08014760:
	bl		sub_08057688
	lsl		r0, r0, #0x18
	asr		r1, r0, #0x18
_08014768:
	mov		r0, #0x0
	str		r0, [r4, #0x30]
	str		r1, [r4, #0x38]
_0801476e:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080146dc

	thumb_func_start sub_08014774
sub_08014774:
	push	{ r4, lr }
	sub		sp, #0x10
	ldr		r0, [r0, #0x30]
	cmp		r0, #0x8
	bhi		_08014848
	lsl		r0, r0, #0x2
	ldr		r1, _08014788
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08014788:	.4byte 0x0801478c
_0801478c:	.4byte 0x080147b0

.incbin "base.gba", 0x14790, 0x20
	thumb_func_end sub_08014774


.incbin "base.gba", 0x147B0, 0x98

_08014848:

.incbin "base.gba", 0x14848, 0x70
_080148b8:	.4byte 0x080148cc

.incbin "base.gba", 0x148BC, 0x28C
_08014b48:	.4byte 0x08014b68

.incbin "base.gba", 0x14B4C, 0x38

_08014b84:

.incbin "base.gba", 0x14B84, 0x124
	thumb_func_start sub_08014ca8
sub_08014ca8:
	cmp		r0, #0x0
	beq		_08014cbc
	ldr		r0, _08014cb8
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x0]
	b		_08014cc6

_08014cb8:	.4byte 0x0203EED4

_08014cbc:
	ldr		r2, _08014cc8
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfe
	and		r0, r1
	strb	r0, [r2, #0x0]
_08014cc6:
	bx		lr

_08014cc8:	.4byte 0x0203EED4
	thumb_func_end sub_08014ca8

	thumb_func_start sub_08014ccc
sub_08014ccc:
	cmp		r0, #0x0
	beq		_08014ce0
	ldr		r0, _08014cdc
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x2
	orr		r1, r2
	strb	r1, [r0, #0x0]
	b		_08014cea

_08014cdc:	.4byte 0x0203EED4

_08014ce0:
	ldr		r2, _08014cec
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfd
	and		r0, r1
	strb	r0, [r2, #0x0]
_08014cea:
	bx		lr

_08014cec:	.4byte 0x0203EED4

.incbin "base.gba", 0x14CF0, 0x24
	thumb_func_end sub_08014ccc

	thumb_func_start sub_08014d14
sub_08014d14:
	cmp		r0, #0x0
	beq		_08014d28
	ldr		r0, _08014d24
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x10
	orr		r1, r2
	strb	r1, [r0, #0x0]
	b		_08014d32

_08014d24:	.4byte 0x0203EED4

_08014d28:
	ldr		r2, _08014d34
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xef
	and		r0, r1
	strb	r0, [r2, #0x0]
_08014d32:
	bx		lr

_08014d34:	.4byte 0x0203EED4
	thumb_func_end sub_08014d14

	thumb_func_start sub_08014d38
sub_08014d38:
	cmp		r0, #0x0
	beq		_08014d4c
	ldr		r0, _08014d48
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x8
	orr		r1, r2
	strb	r1, [r0, #0x0]
	b		_08014d56

_08014d48:	.4byte 0x0203EED4

_08014d4c:
	ldr		r2, _08014d58
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xf7
	and		r0, r1
	strb	r0, [r2, #0x0]
_08014d56:
	bx		lr

_08014d58:	.4byte 0x0203EED4
	thumb_func_end sub_08014d38

	thumb_func_start sub_08014d5c
sub_08014d5c:
	ldr		r0, _08014d6c
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x3
	and		r1, r0
	neg		r0, r1
	orr		r0, r1
	lsr		r0, r0, #0x1f
	bx		lr

_08014d6c:	.4byte 0x0203EED4
	thumb_func_end sub_08014d5c

	thumb_func_start sub_08014d70
sub_08014d70:
	ldr		r1, _08014d78
	str		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x14D76, 0x2

_08014d78:	.4byte 0x03000170

.incbin "base.gba", 0x14D7C, 0x654
_080153d0:	.4byte 0x080153e8

.incbin "base.gba", 0x153D4, 0x14
	thumb_func_end sub_08014d70


.incbin "base.gba", 0x153E8, 0x198

_08015580:

.incbin "base.gba", 0x15580, 0x2C
_080155ac:

.incbin "base.gba", 0x155AC, 0x4FC
_08015aa8:	.4byte 0x08015abc

.incbin "base.gba", 0x15AAC, 0x304
_08015db0:	.4byte 0x08015dc4

.incbin "base.gba", 0x15DB4, 0x524
_080162d8:	.4byte 0x03000178
_080162dc:	.4byte 0x00009FFF
_080162e0:	.4byte BG0Control
	thumb_func_start sub_080162e4
sub_080162e4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r0, _0801653c
	ldr		r7, [r0, #0x0]
	ldr		r4, _08016540
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x0
	bl		sub_08028130
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	bl		_DrawFrameRunAudio
	ldr		r0, _08016544
	ldr		r5, _08016548
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _0801654c
	ldr		r3, _08016550
	add		r1, r5, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08016554
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	add		r1, r5, #0x0
	add		r1, #0x20
	ldr		r2, _08016558
	ldr		r4, _0801655c
	add		r3, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08016560
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08016564
	ldr		r3, _08016568
	add		r1, r5, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0801656c
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	add		r1, r5, r2
	ldr		r2, _08016570
	add		r3, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08016574
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	add		r1, r5, r2
	ldr		r2, _08016578
	ldr		r3, _0801657c
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08016580
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08016584
	ldr		r4, _08016588
	add		r1, r5, #0x0
	add		r3, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _0801658c
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08016590
	add		r1, r5, #0x0
	add		r3, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _08016594
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _08016598
	add		r1, r5, #0x0
	add		r3, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r4, _0801659c
	mov		r0, #0x0
	add		r1, r4, #0x0
	bl		sub_080281c4
	mov		r0, #0x1
	add		r1, r4, #0x0
	bl		sub_080281c4
	ldr		r0, _080165a0
	add		r1, r5, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	mov		r2, #0xc0
	lsl		r2, r2, #0x13
	ldr		r3, _080165a4
	add		r1, r5, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r4, _080165a8
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r8, r1
_0801645a:
	mov		r4, #0x0
	add		r5, r0, #0x0
	add		r5, #0x18
	add		r6, r0, #0x1
_08016462:
	add		r2, r4, #0x0
	add		r2, #0xf
	mov		r0, #0x1
	add		r1, r5, #0x0
	bl		sub_080281b0
	mov		r2, r8
	strh	r2, [r0, #0x0]
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_08016462
	add		r0, r6, #0x0
	cmp		r0, #0x5
	ble		_0801645a
	mov		r0, #0x3
	bl		sub_080281fc
	bl		_DrawFrameRunAudio
	ldr		r0, _080165ac
	ldr		r4, _08016548
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _080165b0
	ldr		r3, _080165a4
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _080165b4
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r2, _080165b8
	ldr		r3, _080165bc
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldr		r0, _080165c0
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	mov		r1, #0xa0
	lsl		r1, r1, #0x5
	add		r4, r4, r1
	ldr		r2, _080165c4
	ldr		r3, _0801655c
	add		r1, r4, #0x0
	bl		sub_08029ee4
	bl		_DrawFrameRunAudio
	ldrh	r0, [r7, #0x2]
	mov		r1, #0x0
	mov		r0, #0x4
	strh	r0, [r7, #0x2]
	ldrh	r0, [r7, #0x8]
	mov		r0, #0x81
	lsl		r0, r0, #0x2
	strh	r0, [r7, #0x8]
	ldrh	r0, [r7, #0xe]
	ldr		r0, _080165c8
	strh	r0, [r7, #0xe]
	ldrh	r0, [r7, #0x14]
	ldr		r0, _080165cc
	strh	r0, [r7, #0x14]
	ldrh	r0, [r7, #0x0]
	mov		r0, #0xfa
	lsl		r0, r0, #0x5
	strh	r0, [r7, #0x0]
	ldrh	r0, [r7, #0x1a]
	ldr		r0, _080165d0
	strh	r0, [r7, #0x1a]
	ldrh	r0, [r7, #0x1c]
	ldr		r0, _080165d4
	strh	r0, [r7, #0x1c]
	ldrh	r0, [r7, #0x4]
	strh	r1, [r7, #0x4]
	ldrh	r0, [r7, #0x6]
	strh	r1, [r7, #0x6]
	ldrh	r0, [r7, #0xa]
	strh	r1, [r7, #0xa]
	ldrh	r0, [r7, #0xc]
	strh	r1, [r7, #0xc]
	ldrh	r0, [r7, #0x10]
	strh	r1, [r7, #0x10]
	ldrh	r0, [r7, #0x12]
	strh	r1, [r7, #0x12]
	ldrh	r0, [r7, #0x16]
	strh	r1, [r7, #0x16]
	ldrh	r0, [r7, #0x18]
	strh	r1, [r7, #0x18]
	str		r1, [r7, #0x44]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1653A, 0x2

_0801653c:	.4byte 0x03000178
_08016540:	.4byte 0x080e3338
_08016544:	.4byte 0x080d8304
_08016548:	.4byte 0x02010400
_0801654c:	.4byte 0x06004000
_08016550:	.4byte 0x80000800
_08016554:	.4byte 0x08098b0c
_08016558:	.4byte 0x06004F60
_0801655c:	.4byte 0x80000100
_08016560:	.4byte 0x080e3460
_08016564:	.4byte 0x06005160
_08016568:	.4byte 0x80000020
_0801656c:	.4byte 0x080d4200
_08016570:	.4byte 0x06005200
_08016574:	.4byte 0x080dfa84
_08016578:	.4byte 0x06005400
_0801657c:	.4byte 0x80000200
_08016580:	.4byte 0x080c558c
_08016584:	.4byte 0x06007800
_08016588:	.4byte 0x80000C00
_0801658c:	.4byte 0x080c5bc0
_08016590:	.4byte 0x06009000
_08016594:	.4byte 0x080c6300
_08016598:	.4byte 0x0600A800
_0801659c:	.4byte 0x06001000
_080165a0:	.4byte 0x080e37ec
_080165a4:	.4byte 0x80000280
_080165a8:	.4byte 0x080e3674
_080165ac:	.4byte 0x080e3480
_080165b0:	.4byte 0x06002000
_080165b4:	.4byte 0x080e38a8
_080165b8:	.4byte 0x06003000
_080165bc:	.4byte 0x80000400
_080165c0:	.4byte 0x080d93e0
_080165c4:	.4byte 0x06011160
_080165c8:	.4byte 0x00000404
_080165cc:	.4byte 0x00000607
_080165d0:	.4byte 0x00003E41
_080165d4:	.4byte 0x0000080C
	thumb_func_end sub_080162e4

	thumb_func_start sub_080165d8
sub_080165d8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r0, #0x0
	mov		r10, r0
	mov		r8, r0
	mov		r9, r0
	ldr		r1, _08016698
	str		r1, [sp, #0x0]
	ldr		r6, _0801669c
	mov		r2, r10
	strh		r2, [r6, #0x16]
	bl		sub_08027744
	ldr		r0, _080166a0
	ldr		r1, _080166a4
	add		r4, r0, r1
	ldr		r1, _080166a8
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	add		r0, r4, #0x0
	bl		sub_08027188
	ldr		r5, _080166ac
	add		r0, r4, #0x0
	mov		r1, #0x1
	mov		r2, #0x48
	bl		sub_080271b8
	add		r7, r0, #0x0
	str		r7, [r5, #0x0]
	bl		sub_080162e4
	ldrb	r4, [r6, #0x1]
	cmp		r4, #0x1
	bgt		_08016628
	mov		r4, #0x1
_08016628:
	bl		sub_08029f34
	sub		r1, r4, #0x1
	lsl		r1, r1, #0x8
	ldr		r2, _080166b0
	add		r1, r1, r2
	ldr		r3, _080166b4
	bl		sub_08029ee4
	ldr		r0, _080166b8
	ldr		r4, _080166bc
	str		r0, [r4, #0x4]
	ldr		r0, _080166c0
	str		r0, [r4, #0x0]
	ldr		r0, _080166c4
	str		r0, [r4, #0x8]
	mov		r0, #0x1
	strb	r0, [r4, #0xe]
	bl		sub_0802a130
	mov		r0, #0x1
	bl		sub_0802994c
	ldr		r5, _080166c8
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	ldr		r2, _080166a0
	str		r5, [r2, #0xc]
	mov		r0, #0x2
	ldr		r1, _080166cc
	bl		sub_0807df78
_0801666e:
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	ldr		r0, _080166d0
	ldrh	r1, [r0, #0x0]
	ldr		r2, _080166d4
	add		r0, r2, #0x0
	eor		r0, r1
	add		r5, r0, #0x0
	ldr		r1, [sp, #0x0]
	bic		r5, r1
	str		r0, [sp, #0x0]
	mov		r2, r8
	cmp		r2, #0x1
	beq		_080166f6
	cmp		r2, #0x1
	bgt		_080166d8
	cmp		r2, #0x0
	beq		_080166e0
	b		_08016766

_08016698:	.4byte 0x00003FFF
_0801669c:	.4byte 0x03003000
_080166a0:	.4byte RunGameLogic_CallBack
_080166a4:	.4byte 0x00000704
_080166a8:	.4byte 0x0202A400
_080166ac:	.4byte 0x03000178
_080166b0:	.4byte 0x06005400
_080166b4:	.4byte 0x80000080
_080166b8:	.4byte 0x0802a161
_080166bc:	.4byte 0x030052F0
_080166c0:	.4byte sub_0802a18c
_080166c4:	.4byte 0x0802a1d9
_080166c8:	.4byte 0x0801625d
_080166cc:	.4byte 0x00010001
_080166d0:	.4byte KeyStatus
_080166d4:	.4byte 0x000003FF

_080166d8:
	mov		r0, r8
	cmp		r0, #0x2
	beq		_08016758
	b		_08016766
_080166e0:
	ldrb	r1, [r4, #0xc]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_08016766
	mov		r0, #0x92
	bl		sub_0807073c
	mov		r1, #0x1
	mov		r8, r1
	b		_08016766
_080166f6:
	mov		r2, #0x1
	add		r9, r2
	mov		r0, r9
	cmp		r0, #0x1e
	ble		_08016704
	mov		r1, #0x0
	mov		r9, r1
_08016704:
	mov		r0, #0x2
	mov		r2, r9
	cmp		r2, #0x13
	bgt		_0801670e
	mov		r0, #0x1
_0801670e:
	bl		sub_080281fc
	mov		r0, #0x9
	and		r5, r0
	cmp		r5, #0x0
	beq		_08016766
	mov		r0, #0x8f
	bl		sub_0807073c
	mov		r0, #0x0
	bl		sub_08028130
	ldr		r2, _0801674c
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r0, _08016750
	str		r0, [r4, #0x4]
	ldr		r0, _08016754
	str		r0, [r4, #0x0]
	mov		r0, #0x0
	str		r0, [r4, #0x8]
	mov		r0, r8
	strb	r0, [r4, #0xe]
	bl		sub_0802a130
	mov		r1, #0x2
	mov		r8, r1
	b		_08016766

_0801674c:	.4byte 0x0000FFFF
_08016750:	.4byte 0x0802A1FD
_08016754:	.4byte sub_08016a88

_08016758:
	ldrb	r1, [r4, #0xc]
	mov		r0, r8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08016766
	mov		r2, #0x1
	mov		r10, r2
_08016766:
	bl		sub_080167d0
	ldr		r0, [r7, #0x44]
	add		r0, #0x1
	str		r0, [r7, #0x44]
	lsr		r1, r0, #0x2
	ldrh	r2, [r7, #0x16]
	strh	r1, [r7, #0x16]
	neg		r0, r0
	lsr		r0, r0, #0x2
	ldrh	r1, [r7, #0x18]
	strh	r0, [r7, #0x18]
	mov		r0, r10
	cmp		r0, #0x0
	bne		_08016786
	b		_0801666e
_08016786:
	mov		r5, #0x0
	ldr		r4, _080167c4
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	str		r5, [r4, #0xc]
	mov		r0, #0x2
	ldr		r1, _080167c8
	bl		sub_0807df78
	ldr		r0, _080167cc
	str		r0, [r4, #0x0]
	ldrb	r0, [r4, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r4, #0x8]
	mov		r0, #0x1f
	bl		sub_08071b8c
	mov		r0, #0x1
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_080167c4:	.4byte RunGameLogic_CallBack
_080167c8:	.4byte 0x00010001
_080167cc:	.4byte 0x08000E79
	thumb_func_end sub_080165d8

	thumb_func_start sub_080167d0
sub_080167d0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	ldr		r0, _08016844
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	ldr		r0, _08016848
	ldrb	r0, [r0, #0x1]
	mov		r9, r0
	cmp		r0, #0x1
	bgt		_080167f0
	mov		r0, #0x1
	mov		r9, r0
_080167f0:
	mov		r1, r8
	ldr		r0, [r1, #0x20]
	add		r0, #0x1
	str		r0, [r1, #0x20]
	mov		r1, r9
	add		r1, #0x1
	mov		r2, sp
	add		r2, #0xc
	str		r2, [sp, #0x10]
	cmp		r0, #0x7f
	ble		_08016810
_08016806:
	sub		r0, #0x7f
	cmp		r0, #0x7f
	bgt		_08016806
	mov		r3, r8
	str		r0, [r3, #0x20]
_08016810:
	mov		r0, r8
	ldr		r2, [r0, #0x20]
	cmp		r2, #0x0
	bge		_08016826
_08016818:
	add		r0, r2, #0x0
	add		r0, #0x7f
	add		r2, r0, #0x0
	cmp		r0, #0x0
	blt		_08016818
	mov		r2, r8
	str		r0, [r2, #0x20]
_08016826:
	mov		r0, #0x50
	bl		sub_0807d80c
	mov		r10, r0
	mov		r7, #0x0
	cmp		r7, r9
	blt		_08016836
	b		_08016930
_08016836:
	mov		r3, r8
	ldr		r1, [r3, #0x20]
	cmp		r1, #0x3f
	ble		_0801684c
	mov		r0, #0x7f
	sub		r0, r0, r1
	b		_0801684e

_08016844:	.4byte 0x03000178
_08016848:	.4byte 0x03003000

_0801684c:
	add		r0, r1, #0x0
_0801684e:
	bl		sub_080085d8
	add		r5, r0, #0x0
	add		r0, r7, #0x0
	bl		sub_0800ebec
	add		r6, r0, #0x0
	lsl		r4, r6, #0x1
	add		r4, r4, r6
	lsl		r4, r4, #0x2
	sub		r4, r4, r6
	lsl		r4, r4, #0xd
	lsl		r5, r5, #0xb
	ldr		r0, _080168e0
	add		r5, r5, r0
	add		r4, r4, r5
	lsl		r5, r7, #0xb
	ldr		r1, _080168e4
	add		r5, r5, r1
	bl		sub_08029f34
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	ldr		r3, _080168e8
	bl		sub_08029ee4
	lsl		r6, r6, #0x9
	ldr		r2, _080168ec
	add		r6, r6, r2
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	lsl		r0, r7, #0x5
	add		r0, #0x80
	add		r1, r1, r0
	add		r0, r6, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r3, #0x0
	lsl		r1, r7, #0x2
	lsl		r4, r7, #0x3
	mov		r2, r8
	add		r2, #0x24
	mov		r6, r8
	add		r6, #0x28
	add		r5, r7, #0x1
	ldr		r0, _080168f0
	add		r1, r1, r0
	ldr		r1, [r1, #0x0]
	add		r2, r4, r2
_080168b6:
	ldrh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	add		r1, #0x2
	add		r2, #0x2
	add		r3, #0x1
	cmp		r3, #0x3
	ble		_080168b6
	mov		r3, r8
	ldr		r0, [r3, #0x20]
	mov		r1, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_080168f4
	add		r2, r6, r4
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x5
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	b		_08016900

_080168e0:	.4byte 0x08345800
_080168e4:	.4byte 0x06011800
_080168e8:	.4byte 0x80000400
_080168ec:	.4byte 0x08344600
_080168f0:	.4byte 0x080f58b8

_080168f4:
	add		r0, r6, r4
	ldrh	r1, [r0, #0x0]
	ldr		r3, _0801695c
	add		r2, r3, #0x0
	and		r1, r2
	strh	r1, [r0, #0x0]
_08016900:
	mov		r0, r10
	mul		r0, r5
	add		r0, #0x80
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r1, #0xe0
	lsl		r1, r1, #0xf
	orr		r0, r1
	str		r0, [sp, #0x8]
	add		r0, r4, #0x0
	add		r0, #0x24
	add		r0, r8
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	add		r7, r5, #0x0
	cmp		r7, r9
	bge		_08016930
	b		_08016836
_08016930:
	ldr		r0, _08016960
	str		r0, [sp, #0xC]
	ldr		r0, _08016964
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r1, [sp, #0x4]
	ldr		r1, [sp, #0x10]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	mov		r0, #0x1
	bl		sub_08028168
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0801695c:	.4byte 0x0000EFFF
_08016960:	.4byte 0x007000A8
_08016964:	.4byte 0x080e5844
	thumb_func_end sub_080167d0

	thumb_func_start sub_08016968
sub_08016968:
	push	{ r4, lr }
	sub		sp, #0x8
	ldr		r4, _080169a4
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe0
	add		r0, r4, #0x0
	mov		r2, #0x9
	bl		sub_08071b6c
	ldr		r0, _080169a8
	ldr		r0, [r0, #0x10]
	mov		r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_080169ac
	add		r4, #0x2
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe2
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_08071b6c
	b		_080169c0

.incbin "base.gba", 0x169A2, 0x2

_080169a4:	.4byte 0x080e5ec0
_080169a8:	.4byte RunGameLogic_CallBack

_080169ac:
	add		r4, #0x22
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe2
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_08071b6c
_080169c0:
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r0, _08016a08
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080169f0
	ldr		r0, _08016a0c
	ldrb	r0, [r0, #0x1]
	ldr		r1, _08016a10
	sub		r0, #0x1
	cmp		r0, #0x0
	bge		_080169dc
	mov		r0, #0x0
_080169dc:
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, _08016a14
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
_080169f0:
	ldr		r0, _08016a18
	ldr		r1, _08016a14
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
	add		sp, #0x8
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08016a08:	.4byte 0x0203EEDC
_08016a0c:	.4byte 0x03003000
_08016a10:	.4byte 0x080f58f0
_08016a14:	.4byte 0x0300017C
_08016a18:	.4byte 0x080f58c8
	thumb_func_end sub_08016968

	thumb_func_start sub_08016a1c
sub_08016a1c:
	push	{ r4, r5, lr }
	ldr		r0, _08016a30
	ldrb	r1, [r0, #0xc]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08016a34
	mov		r0, #0x0
	b		_08016a6a

.incbin "base.gba", 0x16A2E, 0x2

_08016a30:	.4byte 0x030052F0

_08016a34:
	ldr		r0, _08016a70
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x0
	beq		_08016a54
	ldr		r5, _08016a74
	add		r4, r0, #0x0
_08016a42:
	ldr		r0, [r5, #0x0]
	ldr		r1, _08016a78
	ldr		r1, [r1, #0x8]
	bl		sub_08070e28
	add		r5, #0xc
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08016a42
_08016a54:
	ldr		r0, _08016a7c
	ldr		r2, _08016a80
	str		r0, [r2, #0x0]
	ldrb	r0, [r2, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r2, #0x8]
	ldr		r1, _08016a84
	mov		r0, #0x1
	str		r0, [r1, #0x0]
_08016a6a:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_08016a70:	.4byte 0x0000000B
_08016a74:	.4byte 0x08124544
_08016a78:	.4byte 0x081245c8
_08016a7c:	.4byte 0x080165D9
_08016a80:	.4byte RunGameLogic_CallBack
_08016a84:	.4byte 0x03005FD0
	thumb_func_end sub_08016a1c

	thumb_func_start sub_08016a88
sub_08016a88:
	push	{ r4, r5, lr }
	ldr		r5, _08016ac0
	ldrb	r2, [r5, #0xf]
	ldr		r4, _08016ac4
	lsl		r1, r2, #0x1
	add		r1, r1, r2
	lsl		r3, r1, #0x1
	lsl		r1, r1, #0x9
	mov		r0, #0xf0
	sub		r0, r0, r3
	orr		r1, r0
	strh	r1, [r4, #0x0]
	add		r4, #0x4
	lsl		r3, r2, #0x2
	lsl		r1, r2, #0xa
	mov		r0, #0xa0
	sub		r0, r0, r3
	orr		r1, r0
	strh	r1, [r4, #0x0]
	cmp		r2, #0x14
	bne		_08016aba
	ldr		r0, _08016ac8
	str		r0, [r5, #0x0]
	mov		r0, #0x0
	strb	r0, [r5, #0xf]
_08016aba:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08016ac0:	.4byte 0x030052F0
_08016ac4:	.4byte Window0HorizontalDimensions
_08016ac8:	.4byte 0x08016b9d
	thumb_func_end sub_08016a88

	thumb_func_start sub_08016acc
sub_08016acc:
	push	{ r4, lr }
	ldr		r0, _08016b08
	ldr		r1, _08016b0c
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r4, _08016b10
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe0
	add		r0, r4, #0x0
	mov		r2, #0x9
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r1, _08016b14
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r1, _08016b18
	mov		r0, #0x8e
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x0]
	mov		r0, #0x94
	strh	r0, [r1, #0x2]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08016b08:	.4byte 0x080e7a94
_08016b0c:	.4byte 0x06013400
_08016b10:	.4byte 0x080e5ec0
_08016b14:	.4byte 0x0203EEDC
_08016b18:	.4byte 0x0300017C
	thumb_func_end sub_08016acc

	thumb_func_start sub_08016b1c
sub_08016b1c:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	ldr		r2, [r3, #0x68]
	mov		r4, #0x0
	add		r2, #0x1
	cmp		r2, #0x10
	bgt		_08016b5c
	ldr		r1, _08016b54
	lsl		r0, r2, #0x1a
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08016b36
	add		r0, #0x3f
_08016b36:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, _08016b58
	lsl		r0, r0, #0x6
	neg		r0, r0
	asr		r0, r0, #0xf
	mov		r5, #0x8e
	lsl		r5, r5, #0x1
	add		r0, r0, r5
	strh	r0, [r1, #0x0]
	b		_08016b5e

.incbin "base.gba", 0x16B52, 0x2

_08016b54:	.4byte 0x08101068
_08016b58:	.4byte 0x0300017C

_08016b5c:
	mov		r4, #0x1
_08016b5e:
	str		r2, [r3, #0x68]
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x16B68, 0x34
	ldr		r1, _08016bac
	ldrb	r0, [r1, #0xf]
	cmp		r0, #0x28
	bne		_08016ba8
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_08016ba8:
	bx		lr

.incbin "base.gba", 0x16BAA, 0x2

_08016bac:	.4byte 0x030052F0
	thumb_func_end sub_08016b1c

	thumb_func_start sub_08016bb0
sub_08016bb0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	bl		sub_0800ec28
	add		r2, r0, #0x0
	mov		r6, #0x0
	ldr		r0, _08016c40
	ldr		r3, _08016c44
	add		r1, r0, r3
	ldrb	r3, [r1, #0x0]
	cmp		r6, r3
	bge		_08016c32
	mov		r10, r0
	mov		r0, #0x1
	neg		r0, r0
	mov		r9, r0
	mov		r8, r1
	add		r4, r2, #0x0
	add		r4, #0x34
	mov		r5, #0x0
_08016be0:
	lsl		r1, r6, #0x18
	lsr		r1, r1, #0x18
	mov		r0, r10
	add		r0, #0x24
	bl		sub_08044894
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08016c32
	mov		r1, #0x6
	ldrsh	r0, [r4, r1]
	cmp		r0, r9
	bne		_08016c24
	add		r1, r5, #0x0
	add		r1, #0x23
	cmp		r6, #0x3
	ble		_08016c0a
	add		r1, #0x5
_08016c0a:
	mov		r0, #0x0
	strh	r1, [r4, #0x0]
	strh	r0, [r4, #0x2]
	cmp		r7, #0x0
	beq		_08016c16
	add		r0, r5, #0x0
_08016c16:
	strh	r0, [r4, #0x4]
	add		r0, r2, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	strh	r0, [r4, #0x6]
_08016c24:
	add		r4, #0x8
	add		r5, #0x3
	add		r6, #0x1
	mov		r3, r8
	ldrb	r3, [r3, #0x0]
	cmp		r6, r3
	blt		_08016be0
_08016c32:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08016c40:	.4byte RunGameLogic_CallBack
_08016c44:	.4byte 0x00000814

.incbin "base.gba", 0x16C48, 0x164
_08016dac:	.4byte 0x08016de4

.incbin "base.gba", 0x16DB0, 0x34
	thumb_func_end sub_08016bb0


.incbin "base.gba", 0x16DE4, 0x11C
_08016f00:	.4byte 0x08016f38

.incbin "base.gba", 0x16F04, 0x118
_0801701c:	.4byte 0x08017180

.incbin "base.gba", 0x17020, 0x58
_08017078:	.4byte 0x08017180

.incbin "base.gba", 0x1707C, 0x70
_080170ec:	.4byte 0x08017180

.incbin "base.gba", 0x170F0, 0x58
_08017148:	.4byte 0x08017180

.incbin "base.gba", 0x1714C, 0xC8
_08017214:	.4byte 0x0801724c

.incbin "base.gba", 0x17218, 0x9B0
_08017bc8:	.4byte 0x08017bdc

.incbin "base.gba", 0x17BCC, 0x10

_08017bdc:

.incbin "base.gba", 0x17BDC, 0x4F8
	thumb_func_start sub_080180d4
sub_080180d4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x84
	ldr		r0, _08018104
	add		r0, #0x24
	mov		r8, r0
	bl		sub_0800ec28
	add		r7, r0, #0x0
	mov		r0, #0x0
	str		r0, [r7, #0x10]
	ldr		r0, [r7, #0x4]
	cmp		r0, #0x27
	bls		_080180fa
	bl		sub_080196fa
_080180fa:
	lsl		r0, r0, #0x2
	ldr		r1, _08018108
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08018104:	.4byte RunGameLogic_CallBack
_08018108:	.4byte 0x0801810c
_0801810c:	.4byte 0x080181ac

.incbin "base.gba", 0x18110, 0x9C
	thumb_func_end sub_080180d4


.incbin "base.gba", 0x181AC, 0x2E8

_08018494:

.incbin "base.gba", 0x18494, 0x4B4

_08018948:

.incbin "base.gba", 0x18948, 0x2A8

_08018bf0:

.incbin "base.gba", 0x18BF0, 0xA70

_08019660:

.incbin "base.gba", 0x19660, 0x9A
	non_word_aligned_thumb_func_start sub_080196fa
sub_080196fa:
	ldr		r0, [r7, #0x10]
	cmp		r0, #0x0
	beq		_08019706
	mov		r0, #0x1
	bl		sub_080281fc
_08019706:
	ldr		r1, [r7, #0x4]
	sub		r0, r1, #0x3
	cmp		r0, #0x17
	bhi		_08019770
	ldr		r0, _08019744
	ldr		r0, [r0, #0x10]
	mov		r1, #0xc
	bl		sub_0807de68
	mov		r1, #0x0
	cmp		r0, #0x5
	ble		_08019720
	mov		r1, #0x1
_08019720:
	cmp		r1, #0x0
	beq		_0801974c
	ldr		r4, _08019748
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r6, #0xe0
	lsl		r6, r6, #0x1
	add		r1, r1, r6
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	b		_08019764

.incbin "base.gba", 0x1973E, 0x6

.align 2, 0
_08019744:	.4byte RunGameLogic_CallBack
_08019748:	.4byte 0x080c69c0

_0801974c:
	ldr		r4, _0801976c
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r0, #0xe0
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
_08019764:
	mov		r0, #0x1
	bl		sub_08028168
	b		_0801985a

_0801976c:	.4byte 0x080c69e0

_08019770:
	cmp		r1, #0x1a
	ble		_0801985a
	ldr		r0, _0801986c
	ldr		r0, [r0, #0x10]
	ldr		r2, _08019870
	lsl		r0, r0, #0x1a
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08019784
	add		r0, #0x3f
_08019784:
	asr		r1, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r1
	ldr		r1, _08019874
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	sub		r0, r0, r1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	mov		r9, r0
	mov		r1, #0x0
	mov		r12, r1
	mov		r2, sp
	add		r2, #0x20
	str		r2, [sp, #0x6c]
	ldr		r0, _08019878
	mov		r3, #0x1f
	mov		r8, r3
	mov		r7, #0x1f
	add		r6, r0, #0x0
	add		r6, #0x40
	str		r6, [sp, #0x78]
	mov		r10, r0
_080197be:
	mov		r0, r12
	lsl		r0, r0, #0x1
	str		r0, [sp, #0x7c]
	mov		r2, r10
	ldrh	r1, [r2, #0x0]
	add		r2, r1, #0x0
	and		r2, r7
	lsr		r4, r1, #0x5
	mov		r3, r8
	and		r4, r3
	lsr		r1, r1, #0xa
	and		r1, r3
	ldr		r6, [sp, #0x78]
	ldrh	r3, [r6, #0x0]
	add		r0, r3, #0x0
	and		r0, r7
	lsr		r5, r3, #0x5
	mov		r6, r8
	and		r5, r6
	lsr		r3, r3, #0xa
	and		r3, r6
	sub		r0, r0, r2
	mov		r6, r9
	mul		r6, r0
	add		r0, r6, #0x0
	asr		r0, r0, #0xf
	add		r2, r2, r0
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	sub		r5, r5, r4
	mov		r0, r9
	mul		r0, r5
	asr		r0, r0, #0xf
	add		r4, r4, r0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	sub		r3, r3, r1
	mov		r0, r9
	mul		r0, r3
	asr		r0, r0, #0xf
	add		r1, r1, r0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	ldr		r0, [sp, #0x6c]
	ldr		r3, [sp, #0x7c]
	add		r6, r0, r3
	and		r2, r7
	and		r4, r7
	lsl		r4, r4, #0x5
	orr		r2, r4
	and		r1, r7
	lsl		r1, r1, #0xa
	orr		r2, r1
	strh	r2, [r6, #0x0]
	ldr		r6, [sp, #0x78]
	add		r6, #0x2
	str		r6, [sp, #0x78]
	mov		r0, #0x2
	add		r10, r0
	mov		r1, #0x1
	add		r12, r1
	mov		r2, r12
	cmp		r2, #0xf
	ble		_080197be
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r3, #0xe0
	lsl		r3, r3, #0x1
	add		r1, r1, r3
	ldr		r0, [sp, #0x6c]
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
_0801985a:
	add		sp, #0x84
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1986A, 0x2

_0801986c:	.4byte RunGameLogic_CallBack
_08019870:	.4byte 0x08101068
_08019874:	.4byte 0x000003FF
_08019878:	.4byte 0x080c6a0c
	thumb_func_end sub_080196fa

	thumb_func_start sub_0801987c
sub_0801987c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	bl		sub_0800ec28
	add		r2, r0, #0x0
	mov		r6, #0x0
	ldr		r0, _0801990c
	ldr		r3, _08019910
	add		r1, r0, r3
	ldrb	r3, [r1, #0x0]
	cmp		r6, r3
	bge		_080198fe
	mov		r10, r0
	mov		r0, #0x1
	neg		r0, r0
	mov		r9, r0
	mov		r8, r1
	add		r4, r2, #0x0
	add		r4, #0x34
	mov		r5, #0x0
_080198ac:
	lsl		r1, r6, #0x18
	lsr		r1, r1, #0x18
	mov		r0, r10
	add		r0, #0x24
	bl		sub_08044894
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_080198fe
	mov		r1, #0x6
	ldrsh	r0, [r4, r1]
	cmp		r0, r9
	bne		_080198f0
	add		r1, r5, #0x0
	add		r1, #0x23
	cmp		r6, #0x3
	ble		_080198d6
	add		r1, #0x5
_080198d6:
	mov		r0, #0x0
	strh	r1, [r4, #0x0]
	strh	r0, [r4, #0x2]
	cmp		r7, #0x0
	beq		_080198e2
	add		r0, r5, #0x0
_080198e2:
	strh	r0, [r4, #0x4]
	add		r0, r2, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	strh	r0, [r4, #0x6]
_080198f0:
	add		r4, #0x8
	add		r5, #0x3
	add		r6, #0x1
	mov		r3, r8
	ldrb	r3, [r3, #0x0]
	cmp		r6, r3
	blt		_080198ac
_080198fe:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0801990c:	.4byte RunGameLogic_CallBack
_08019910:	.4byte 0x00000814

.incbin "base.gba", 0x19914, 0x164
_08019a78:	.4byte 0x08019ab0

.incbin "base.gba", 0x19A7C, 0x34
	thumb_func_end sub_0801987c


.incbin "base.gba", 0x19AB0, 0x11C
_08019bcc:	.4byte 0x08019c04

.incbin "base.gba", 0x19BD0, 0x118
_08019ce8:	.4byte 0x08019e4c

.incbin "base.gba", 0x19CEC, 0x58
_08019d44:	.4byte 0x08019e4c

.incbin "base.gba", 0x19D48, 0x70
_08019db8:	.4byte 0x08019e4c

.incbin "base.gba", 0x19DBC, 0x58
_08019e14:	.4byte 0x08019e4c

.incbin "base.gba", 0x19E18, 0xC8
_08019ee0:	.4byte 0x08019f18

.incbin "base.gba", 0x19EE4, 0x75C
_0801a640:	.4byte 0x0801a654

.incbin "base.gba", 0x1A644, 0x504
	thumb_func_start sub_0801ab48
sub_0801ab48:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x38
	ldr		r0, _0801ab78
	add		r0, #0x24
	mov		r10, r0
	bl		sub_0800ec28
	mov		r9, r0
	mov		r0, #0x0
	mov		r1, r9
	str		r0, [r1, #0x10]
	ldr		r0, [r1, #0x4]
	cmp		r0, #0xc
	bls		_0801ab6e
	b		_0801b2fe
_0801ab6e:
	lsl		r0, r0, #0x2
	ldr		r1, _0801ab7c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0801ab78:	.4byte RunGameLogic_CallBack
_0801ab7c:	.4byte 0x0801ab80
_0801ab80:	.4byte 0x0801abb4

.incbin "base.gba", 0x1AB84, 0x30
	thumb_func_end sub_0801ab48


.incbin "base.gba", 0x1ABB4, 0x154

_0801ad08:

.incbin "base.gba", 0x1AD08, 0x5A0
_0801b2a8:	.4byte 0x0801b2c8

.incbin "base.gba", 0x1B2AC, 0x52

_0801b2fe:

.incbin "base.gba", 0x1B2FE, 0xE
_0801b30c:

.incbin "base.gba", 0x1B30C, 0x18
_0801b324:

.incbin "base.gba", 0x1B324, 0x30
_0801b354:

.incbin "base.gba", 0x1B354, 0x8E
_0801b3e2:

.incbin "base.gba", 0x1B3E2, 0x16
_0801b3f8:	.4byte RunGameLogic_CallBack
_0801b3fc:	.4byte 0x08101068
_0801b400:	.4byte 0x000003FF
_0801b404:	.4byte 0x080c6a0c
	thumb_func_start sub_0801b408
sub_0801b408:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r4, _0801b438
	mov		r0, #0x24
	add		r0, r0, r4
	mov		r8, r0
	ldr		r1, _0801b43c
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	bl		sub_080374cc
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	mov		r7, #0x0
	ldr		r5, _0801b440
	add		r0, r4, r5
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0801b444
	mov		r0, #0x0
	b		_0801b4b6

_0801b438:	.4byte RunGameLogic_CallBack
_0801b43c:	.4byte 0x00000838
_0801b440:	.4byte 0x00000C12

_0801b444:
	cmp		r2, #0x0
	beq		_0801b472
	ldr		r0, _0801b464
	add		r0, #0x8
	ldrb	r3, [r0, #0x9]
	ldrh	r1, [r0, #0x2]
	cmp		r1, #0x0
	bne		_0801b456
	mov		r7, #0x1
_0801b456:
	ldr		r5, _0801b468
	add		r0, r4, r5
	ldrb	r0, [r0, #0x0]
	cmp		r3, r0
	beq		_0801b46c
	mov		r7, #0x1
	b		_0801b476

_0801b464:	.4byte 0x02020400
_0801b468:	.4byte 0x00000801

_0801b46c:
	cmp		r1, r2
	bls		_0801b472
	mov		r7, #0x1
_0801b472:
	cmp		r7, #0x0
	beq		_0801b4b4
_0801b476:
	ldr		r5, _0801b4c0
	mov		r6, #0x0
	strh		r2, [r5, #0xA]
	bl		sub_08057370
	add		r4, r0, #0x0
	ldr		r0, _0801b4c4
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	bl		sub_0802d6e0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	lsl		r1, r0, #0x2
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	mov		r0, #0xb2
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	add		r4, r4, r1
	str		r6, [r4, #0x4]
	ldr		r0, _0801b4c8
	add		r1, r5, r0
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r0, r5, #0x0
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08014ccc
_0801b4b4:
	add		r0, r7, #0x0
_0801b4b6:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0801b4c0:	.4byte 0x02024400
_0801b4c4:	.4byte 0x000007DD
_0801b4c8:	.4byte 0xFFFFC000
	thumb_func_end sub_0801b408

	thumb_func_start sub_0801b4cc
sub_0801b4cc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x28
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r1, #0x0
	str		r1, [sp, #0x4]
	ldr		r0, _0801b578
	sub		r1, #0x1
	str		r1, [r0, #0x0]
	ldr		r0, _0801b57c
	str		r1, [r0, #0x0]
	ldr		r0, _0801b580
	ldr		r2, [sp, #0x4]
	str		r2, [r0, #0x0]
	ldr		r0, _0801b584
	str		r2, [r0, #0x0]
	ldr		r4, _0801b588
	ldr		r0, _0801b58c
	add		r5, r4, r0
	ldrb	r0, [r5, #0x0]
	bl		sub_0802d73c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x8]
	ldrb	r0, [r5, #0x0]
	bl		sub_0802d798
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0xC]
	ldr		r1, _0801b590
	add		r4, r4, r1
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0xc]
	bl		sub_0802c6c8
	str		r0, [sp, #0x10]
	ldr		r2, [sp, #0xC]
	lsl		r2, r2, #0x5
	mov		r8, r2
	ldr		r0, [sp, #0x8]
	lsl		r7, r0, #0x7
	mov		r1, #0x0
	mov		r9, r1
	mov		r2, #0x50
	str		r2, [sp, #0x24]
	mov		r0, #0x4
	mov		r10, r0
_0801b536:
	bl		sub_0800ec38
	ldr		r1, [sp, #0x24]
	add		r4, r0, r1
	ldr		r2, [sp, #0x10]
	cmp		r2, #0x0
	beq		_0801b594
	bl		sub_08057370
	add		r0, r7, r0
	add		r0, r8
	add		r0, r9
	mov		r1, #0xb9
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	str		r0, [r4, #0x0]
	bl		sub_08057370
	add		r0, r7, r0
	add		r0, r8
	add		r0, r9
	mov		r2, #0xb9
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	ldrh	r0, [r0, #0x2]
	strh	r0, [r4, #0x4]
	ldr		r0, [sp, #0xC]
	lsl		r6, r0, #0x5
	ldr		r1, [sp, #0x8]
	lsl		r5, r1, #0x7
	b		_0801b5bc

.incbin "base.gba", 0x1B576, 0x2

_0801b578:	.4byte 0x03000180
_0801b57c:	.4byte 0x03000184
_0801b580:	.4byte 0x03000188
_0801b584:	.4byte 0x0300018C
_0801b588:	.4byte RunGameLogic_CallBack
_0801b58c:	.4byte 0x00000801
_0801b590:	.4byte 0x0000059C

_0801b594:
	bl		sub_08057370
	add		r0, r7, r0
	add		r0, r8
	add		r0, r9
	add		r0, #0x64
	ldrb	r0, [r0, #0x0]
	str		r0, [r4, #0x0]
	bl		sub_08057370
	add		r0, r7, r0
	add		r0, r8
	add		r0, r9
	add		r0, #0x64
	ldrh	r0, [r0, #0x2]
	strh	r0, [r4, #0x4]
	ldr		r2, [sp, #0xC]
	lsl		r6, r2, #0x5
	ldr		r0, [sp, #0x8]
	lsl		r5, r0, #0x7
_0801b5bc:
	mov		r0, #0x0
	str		r0, [r4, #0x8]
	mov		r1, #0x4
	add		r9, r1
	ldr		r2, [sp, #0x24]
	add		r2, #0xc
	str		r2, [sp, #0x24]
	sub		r0, #0x1
	add		r10, r0
	mov		r1, r10
	cmp		r1, #0x0
	bge		_0801b536
	bl		sub_0800ec38
	add		r7, r0, #0x0
	add		r7, #0x8c
	ldr		r2, [sp, #0x10]
	cmp		r2, #0x0
	beq		_0801b600
	bl		sub_08057370
	add		r0, r5, r0
	add		r0, r6, r0
	mov		r4, #0xbe
	lsl		r4, r4, #0x2
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	str		r0, [r7, #0x0]
	bl		sub_08057370
	add		r0, r5, r0
	add		r0, r6, r0
	add		r0, r0, r4
	b		_0801b618
_0801b600:
	bl		sub_08057370
	add		r0, r5, r0
	add		r0, r6, r0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	str		r0, [r7, #0x0]
	bl		sub_08057370
	add		r0, r5, r0
	add		r0, r6, r0
	add		r0, #0x78
_0801b618:
	ldrh	r0, [r0, #0x2]
	strh	r0, [r7, #0x4]
	mov		r0, #0x0
	str		r0, [r7, #0x8]
	ldr		r5, _0801b660
	add		r2, r5, #0x0
	add		r2, #0x24
	ldr		r1, _0801b664
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0801b66c
	ldr		r4, _0801b668
	ldr		r1, [r4, #0x0]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_0801b644
	b		_0801b8d0
_0801b644:
	bl		sub_0800ec38
	ldr		r2, [r4, #0x0]
	lsl		r1, r2, #0x1
	add		r1, r1, r2
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	mov		r2, #0x1
	str		r2, [r1, #0x58]
	str		r2, [sp, #0x4]
	add		r0, #0x8c
	str		r2, [r0, #0x8]
	b		_0801b8d0

.incbin "base.gba", 0x1B65E, 0x2

_0801b660:	.4byte RunGameLogic_CallBack
_0801b664:	.4byte 0x000007FE
_0801b668:	.4byte 0x03000180

_0801b66c:
	mov		r9, r2
	ldr		r0, _0801b6cc
	add		r4, r5, r0
	ldr		r0, [r4, #0x0]
	bl		sub_080374cc
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r8, r0
	ldr		r7, [r4, #0x0]
	ldr		r1, _0801b6d0
	add		r0, r5, r1
	ldrh	r0, [r0, #0x0]
	lsr		r6, r0, #0x8
	mov		r0, #0xf
	and		r6, r0
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_080374c0
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	mov		r5, #0x0
	cmp		r5, r6
	bge		_0801b6c0
_0801b69e:
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_080374c0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r4, r0
	bls		_0801b6ba
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_080374c0
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
_0801b6ba:
	add		r5, #0x1
	cmp		r5, r6
	blt		_0801b69e
_0801b6c0:
	add		r6, r4, #0x0
	mov		r2, #0x0
	mov		r10, r2
	mov		r5, #0x0
	mov		r4, #0x50
	b		_0801b6dc

_0801b6cc:	.4byte 0x00000838
_0801b6d0:	.4byte 0x0000080A

_0801b6d4:
	add		r5, r1, #0x2
	add		r4, #0xc
	mov		r0, #0x1
	add		r10, r0
_0801b6dc:
	mov		r1, r10
	cmp		r1, #0x4
	bgt		_0801b750
	bl		sub_0800ec38
	add		r0, r0, r4
	ldrh	r0, [r0, #0x4]
	add		r1, r5, #0x0
	cmp		r0, r8
	bls		_0801b6d4
	bl		sub_0800ec38
	add		r1, r0, #0x0
	mov		r2, r10
	add		r0, r5, r2
	lsl		r0, r0, #0x2
	add		r0, #0x50
	add		r3, r1, r0
	mov		r2, #0x4
	cmp		r2, r10
	ble		_0801b718
	add		r1, #0x74
_0801b708:
	ldr		r0, [r1, #0x0]
	str		r0, [r1, #0xc]
	ldrh	r0, [r1, #0x4]
	strh	r0, [r1, #0x10]
	sub		r1, #0xc
	sub		r2, #0x1
	cmp		r2, r10
	bgt		_0801b708
_0801b718:
	ldr		r0, _0801b744
	add		r0, r9
	ldr		r0, [r0, #0x0]
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	str		r0, [r3, #0x0]
	mov		r0, r8
	strh	r0, [r3, #0x4]
	mov		r0, #0x1
	str		r0, [r3, #0x8]
	ldr		r0, _0801b748
	mov		r1, r10
	str		r1, [r0, #0x0]
	mov		r2, #0x1
	str		r2, [sp, #0x0]
	cmp		r1, #0x0
	bne		_0801b758
	ldr		r0, _0801b74c
	str		r2, [r0, #0x0]
	b		_0801b758

_0801b744:	.4byte 0x00000814
_0801b748:	.4byte 0x03000180
_0801b74c:	.4byte 0x03000188

_0801b750:
	ldr		r1, _0801b78c
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
_0801b758:
	bl		sub_0800ec38
	add		r2, r0, #0x0
	add		r2, #0x8c
	ldrh	r0, [r2, #0x4]
	cmp		r0, r6
	bls		_0801b79c
	ldr		r0, _0801b790
	add		r0, r9
	ldr		r0, [r0, #0x0]
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	str		r0, [r2, #0x0]
	strh	r6, [r2, #0x4]
	mov		r1, #0x1
	str		r1, [r2, #0x8]
	ldr		r0, _0801b794
	str		r1, [r0, #0x0]
	mov		r0, #0x1
	str		r0, [sp, #0x0]
	ldr		r0, _0801b798
	ldr		r1, [sp, #0x0]
	str		r1, [r0, #0x0]
	b		_0801b7a4

_0801b78c:	.4byte 0x03000180
_0801b790:	.4byte 0x00000814
_0801b794:	.4byte 0x03000184
_0801b798:	.4byte 0x0300018C

_0801b79c:
	ldr		r1, _0801b830
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
_0801b7a4:
	ldr		r2, [sp, #0x0]
	cmp		r2, #0x0
	bne		_0801b7ac
	b		_0801b8d0
_0801b7ac:
	ldr		r4, _0801b834
	ldr		r0, _0801b838
	add		r5, r4, r0
	ldrb	r0, [r5, #0x0]
	bl		sub_0802d73c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x14]
	ldrb	r0, [r5, #0x0]
	bl		sub_0802d798
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x18]
	ldr		r1, _0801b83c
	add		r4, r4, r1
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0xc]
	bl		sub_0802c6c8
	str		r0, [sp, #0x1C]
	ldr		r2, [sp, #0x18]
	lsl		r2, r2, #0x5
	mov		r8, r2
	ldr		r0, [sp, #0x14]
	lsl		r7, r0, #0x7
	mov		r1, #0x0
	mov		r9, r1
	mov		r2, #0x50
	str		r2, [sp, #0x20]
	mov		r0, #0x4
	mov		r10, r0
_0801b7ee:
	bl		sub_0800ec38
	ldr		r1, [sp, #0x20]
	add		r4, r0, r1
	ldr		r2, [sp, #0x1C]
	cmp		r2, #0x0
	beq		_0801b840
	bl		sub_08057370
	add		r0, r7, r0
	add		r0, r8
	add		r0, r9
	mov		r1, #0xb9
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	ldr		r1, [r4, #0x0]
	strb	r1, [r0, #0x0]
	bl		sub_08057370
	add		r0, r7, r0
	add		r0, r8
	add		r0, r9
	mov		r2, #0xb9
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	ldrh	r1, [r4, #0x4]
	strh	r1, [r0, #0x2]
	ldr		r0, [sp, #0x18]
	lsl		r6, r0, #0x5
	ldr		r1, [sp, #0x14]
	lsl		r5, r1, #0x7
	b		_0801b868

.incbin "base.gba", 0x1B82E, 0x2

_0801b830:	.4byte 0x03000184
_0801b834:	.4byte RunGameLogic_CallBack
_0801b838:	.4byte 0x00000801
_0801b83c:	.4byte 0x0000059C

_0801b840:
	bl		sub_08057370
	add		r0, r7, r0
	add		r0, r8
	add		r0, r9
	add		r0, #0x64
	ldr		r1, [r4, #0x0]
	strb	r1, [r0, #0x0]
	bl		sub_08057370
	add		r0, r7, r0
	add		r0, r8
	add		r0, r9
	add		r0, #0x64
	ldrh	r1, [r4, #0x4]
	strh	r1, [r0, #0x2]
	ldr		r2, [sp, #0x18]
	lsl		r6, r2, #0x5
	ldr		r0, [sp, #0x14]
	lsl		r5, r0, #0x7
_0801b868:
	mov		r1, #0x4
	add		r9, r1
	ldr		r2, [sp, #0x20]
	add		r2, #0xc
	str		r2, [sp, #0x20]
	mov		r0, #0x1
	neg		r0, r0
	add		r10, r0
	mov		r1, r10
	cmp		r1, #0x0
	bge		_0801b7ee
	bl		sub_0800ec38
	add		r7, r0, #0x0
	add		r7, #0x8c
	ldr		r2, [sp, #0x1C]
	cmp		r2, #0x0
	beq		_0801b8aa
	bl		sub_08057370
	add		r0, r5, r0
	add		r0, r6, r0
	mov		r4, #0xbe
	lsl		r4, r4, #0x2
	add		r0, r0, r4
	ldr		r1, [r7, #0x0]
	strb	r1, [r0, #0x0]
	bl		sub_08057370
	add		r0, r5, r0
	add		r0, r6, r0
	add		r0, r0, r4
	b		_0801b8c2
_0801b8aa:
	bl		sub_08057370
	add		r0, r5, r0
	add		r0, r6, r0
	add		r0, #0x78
	ldr		r1, [r7, #0x0]
	strb	r1, [r0, #0x0]
	bl		sub_08057370
	add		r0, r5, r0
	add		r0, r6, r0
	add		r0, #0x78
_0801b8c2:
	ldrh	r1, [r7, #0x4]
	strh	r1, [r0, #0x2]
	mov		r0, #0x1
	bl		sub_08014ca8
	mov		r0, #0x1
	str		r0, [sp, #0x4]
_0801b8d0:
	ldr		r0, [sp, #0x4]
	add		sp, #0x28
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x1B8E2, 0x702
	thumb_func_end sub_0801b4cc

	thumb_func_start sub_0801bfe4
sub_0801bfe4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x70
	bl		sub_0800ec38
	mov		r8, r0
	mov		r0, #0x0
	str		r0, [sp, #0x14]
	mov		r1, r8
	ldr		r0, [r1, #0x10]
	add		r0, #0x1
	str		r0, [r1, #0x10]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0xd
	bls		_0801c00c
	bl		sub_0801ccf0
_0801c00c:
	lsl		r0, r0, #0x2
	ldr		r1, _0801c018
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x1C016, 0x2

_0801c018:	.4byte 0x0801c01c
_0801c01c:	.4byte 0x0801c054

.incbin "base.gba", 0x1C020, 0x34
	thumb_func_end sub_0801bfe4


.incbin "base.gba", 0x1C054, 0xC28
_0801cc7c:	.4byte 0x0801cc9c

.incbin "base.gba", 0x1CC80, 0x70
	thumb_func_start sub_0801ccf0
sub_0801ccf0:
	ldr		r0, [sp, #0x14]
	cmp		r0, #0x0
	beq		_0801ccfc
	mov		r0, #0x1
	bl		sub_080281fc
_0801ccfc:
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	cmp		r0, #0xa
	ble		_0801cdd2
	ldr		r0, _0801ce10
	ldr		r0, [r0, #0x10]
	ldr		r2, _0801ce14
	lsl		r0, r0, #0x1a
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0801cd14
	add		r0, #0x3f
_0801cd14:
	asr		r1, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r1
	ldr		r1, _0801ce18
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	sub		r0, r0, r1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	mov		r10, r0
	mov		r2, #0x0
	str		r2, [sp, #0x44]
	mov		r3, #0x1f
	mov		r9, r3
	mov		r7, #0x1f
	ldr		r6, _0801ce1c
	add		r6, #0x40
	str		r6, [sp, #0x58]
_0801cd44:
	ldr		r0, [sp, #0x44]
	lsl		r0, r0, #0x1
	str		r0, [sp, #0x6c]
	ldr		r1, _0801ce1c
	add		r0, r0, r1
	ldrh	r4, [r0, #0x0]
	add		r5, r4, #0x0
	and		r5, r7
	lsr		r6, r4, #0x5
	mov		r2, r9
	and		r6, r2
	lsr		r4, r4, #0xa
	and		r4, r2
	ldr		r3, [sp, #0x58]
	ldrh	r1, [r3, #0x0]
	add		r0, r1, #0x0
	and		r0, r7
	lsr		r2, r1, #0x5
	mov		r3, r9
	and		r2, r3
	lsr		r1, r1, #0xa
	and		r1, r3
	sub		r0, r0, r5
	mov		r3, r10
	mul		r3, r0
	add		r0, r3, #0x0
	asr		r0, r0, #0xf
	add		r5, r5, r0
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	sub		r2, r2, r6
	mov		r0, r10
	mul		r0, r2
	asr		r0, r0, #0xf
	add		r6, r6, r0
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	sub		r1, r1, r4
	mov		r0, r10
	mul		r0, r1
	asr		r0, r0, #0xf
	add		r4, r4, r0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	mov		r0, #0x0
	bl		sub_08028130
	ldr		r1, [sp, #0x6c]
	add		r3, r1, r0
	mov		r2, #0xe0
	lsl		r2, r2, #0x1
	add		r3, r3, r2
	and		r5, r7
	and		r6, r7
	lsl		r6, r6, #0x5
	orr		r5, r6
	and		r4, r7
	lsl		r4, r4, #0xa
	orr		r5, r4
	strh	r5, [r3, #0x0]
	ldr		r3, [sp, #0x58]
	add		r3, #0x2
	str		r3, [sp, #0x58]
	ldr		r6, [sp, #0x44]
	add		r6, #0x1
	str		r6, [sp, #0x44]
	cmp		r6, #0xf
	ble		_0801cd44
	mov		r0, #0x1
	bl		sub_08028168
_0801cdd2:
	mov		r7, r8
	ldr		r0, [r7, #0x0]
	cmp		r0, #0xd
	beq		_0801cdf6
	cmp		r0, #0x6
	ble		_0801cdf6
	ldr		r0, [r7, #0x14]
	cmp		r0, #0x0
	beq		_0801cdf6
	ldr		r0, _0801ce20
	mov		r1, r8
	add		r1, #0x18
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
_0801cdf6:
	add		sp, #0x70
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1CE06, 0xA

_0801ce10:	.4byte RunGameLogic_CallBack
_0801ce14:	.4byte 0x08101068
_0801ce18:	.4byte 0x000003FF
_0801ce1c:	.4byte 0x080c6a0c
_0801ce20:	.4byte 0x080e49f8
	thumb_func_end sub_0801ccf0

	thumb_func_start sub_0801ce24
sub_0801ce24:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	add		r5, r2, #0x0
	ldr		r0, _0801ce80
	ldr		r1, _0801ce84
	add		r0, r0, r1
	ldrh	r4, [r0, #0x0]
	lsr		r4, r4, #0x8
	mov		r0, #0xf
	and		r4, r0
	sub		r4, #0x1
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_080374c0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	str		r0, [r5, #0x0]
	str		r4, [r7, #0x0]
	cmp		r4, #0x0
	blt		_0801ce78
_0801ce50:
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_080374c0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r1, [r5, #0x0]
	cmp		r1, r0
	blt		_0801ce72
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_080374c0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	str		r0, [r5, #0x0]
	str		r4, [r7, #0x0]
_0801ce72:
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0801ce50
_0801ce78:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1CE7E, 0x2

_0801ce80:	.4byte RunGameLogic_CallBack
_0801ce84:	.4byte 0x0000080A
	thumb_func_end sub_0801ce24

	thumb_func_start sub_0801ce88
sub_0801ce88:
	push	{ r4, lr }
	ldr		r4, _0801ced4
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r0, #0xe0
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x10
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	mov		r4, #0x0
	bl		sub_08027788
	cmp		r0, #0x0
	beq		_0801ceba
	bl		sub_080277b4
	cmp		r0, #0x0
	bne		_0801cebc
_0801ceba:
	mov		r4, #0x1
_0801cebc:
	cmp		r4, #0x0
	beq		_0801cee0
	bl		sub_08029f34
	ldr		r1, _0801ced8
	mov		r2, #0xc0
	lsl		r2, r2, #0x13
	ldr		r3, _0801cedc
	bl		sub_08029ee4
	b		_0801cefe

.incbin "base.gba", 0x1CED2, 0x2

_0801ced4:	.4byte 0x080c69c0
_0801ced8:	.4byte 0x080c6b0c
_0801cedc:	.4byte 0x80000400

_0801cee0:
	bl		sub_08029f34
	ldr		r1, _0801cf30
	mov		r2, #0xc0
	lsl		r2, r2, #0x13
	ldr		r3, _0801cf34
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _0801cf38
	ldr		r2, _0801cf3c
	ldr		r3, _0801cf40
	bl		sub_08029ee4
_0801cefe:
	bl		sub_08029f34
	ldr		r1, _0801cf44
	ldr		r2, _0801cf48
	ldr		r3, _0801cf4c
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _0801cf50
	ldr		r2, _0801cf54
	ldr		r3, _0801cf58
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _0801cf5c
	ldr		r2, _0801cf60
	ldr		r3, _0801cf64
	bl		sub_08029ee4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1CF2E, 0x2

_0801cf30:	.4byte 0x080c6b0c
_0801cf34:	.4byte 0x80000230
_0801cf38:	.4byte 0x080c958c
_0801cf3c:	.4byte 0x06000080
_0801cf40:	.4byte 0x800000E0
_0801cf44:	.4byte 0x080b7f80
_0801cf48:	.4byte 0x06000800
_0801cf4c:	.4byte 0x80000600
_0801cf50:	.4byte 0x080c83cc
_0801cf54:	.4byte 0x06001400
_0801cf58:	.4byte 0x80000200
_0801cf5c:	.4byte 0x080c7bcc
_0801cf60:	.4byte 0x06002000
_0801cf64:	.4byte 0x80000400
	thumb_func_end sub_0801ce88

	thumb_func_start sub_0801cf68
sub_0801cf68:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	str		r0, [sp, #0x0]
	ldr		r0, _0801cfa8
	mov		r1, #0x24
	add		r1, r1, r0
	mov		r9, r1
	ldr		r2, _0801cfac
	add		r0, r0, r2
	ldrb	r6, [r0, #0x0]
	mov		r4, #0x0
	bl		sub_08027788
	cmp		r0, #0x0
	beq		_0801cf96
	bl		sub_080277b4
	cmp		r0, #0x0
	bne		_0801cf98
_0801cf96:
	mov		r4, #0x1
_0801cf98:
	cmp		r6, #0x3
	beq		_0801cfd4
	cmp		r6, #0x3
	bgt		_0801cfb0
	cmp		r6, #0x2
	beq		_0801cfb6
	b		_0801d00c

.incbin "base.gba", 0x1CFA6, 0x2

_0801cfa8:	.4byte RunGameLogic_CallBack
_0801cfac:	.4byte 0x000007FB

_0801cfb0:
	cmp		r6, #0x4
	beq		_0801cfe8
	b		_0801d00c
_0801cfb6:
	cmp		r4, #0x0
	beq		_0801cfc4
	ldr		r0, _0801cfc0
	b		_0801cfc6

.incbin "base.gba", 0x1CFBE, 0x2

_0801cfc0:	.4byte 0x080b8b80

_0801cfc4:
	ldr		r0, _0801cfd0
_0801cfc6:
	ldr		r1, [sp, #0x0]
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	b		_0801d00c

.incbin "base.gba", 0x1CFCE, 0x2

_0801cfd0:	.4byte 0x080b8dd0

_0801cfd4:
	cmp		r4, #0x0
	beq		_0801cfe0
	ldr		r0, _0801cfdc
	b		_0801cfee

_0801cfdc:	.4byte 0x080b8fbc

_0801cfe0:
	ldr		r0, _0801cfe4
	b		_0801cfee

_0801cfe4:	.4byte 0x080b94bc

_0801cfe8:
	cmp		r4, #0x0
	beq		_0801d000
	ldr		r0, _0801cffc
_0801cfee:
	mov		r2, #0xa0
	lsl		r2, r2, #0x1
	ldr		r1, [sp, #0x0]
	bl		_CallHardwareSetCpuFast
	b		_0801d00c

.incbin "base.gba", 0x1CFFA, 0x2

_0801cffc:	.4byte 0x080b99bc

_0801d000:
	ldr		r0, _0801d01c
	mov		r2, #0xa0
	lsl		r2, r2, #0x1
	ldr		r1, [sp, #0x0]
	bl		_CallHardwareSetCpuFast
_0801d00c:
	cmp		r6, #0x3
	beq		_0801d020
	cmp		r6, #0x3
	ble		_0801d0ce
	cmp		r6, #0x4
	beq		_0801d07c
	b		_0801d0ce

.incbin "base.gba", 0x1D01A, 0x2

_0801d01c:	.4byte 0x080b9ebc

_0801d020:
	mov		r0, #0x0
_0801d022:
	mov		r4, #0x0
	add		r1, r0, #0x1
	mov		r8, r1
	cmp		r4, r6
	bge		_0801d06c
	add		r7, r0, #0x4
	lsl		r0, r7, #0x6
	ldr		r2, [sp, #0x0]
	add		r3, r2, r0
	mov		r5, #0x0
_0801d036:
	lsl		r1, r4, #0x2
	ldr		r0, _0801d074
	add		r0, r9
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	lsl		r0, r7, #0x5
	add		r0, r0, r5
	lsl		r0, r0, #0x1
	ldr		r1, _0801d078
	add		r0, r0, r1
	add		r2, #0xba
	ldrh	r2, [r2, #0x0]
	lsr		r2, r2, #0x1
	lsl		r1, r2, #0x3
	sub		r1, r1, r2
	lsl		r1, r1, #0x1
	add		r1, #0x4
	add		r1, r3, r1
	mov		r2, #0x7
	str		r3, [sp, #0x14]
	bl		sub_08071b6c
	add		r5, #0x7
	add		r4, #0x1
	ldr		r3, [sp, #0x14]
	cmp		r4, r6
	blt		_0801d036
_0801d06c:
	mov		r0, r8
	cmp		r0, #0x3
	ble		_0801d022
	b		_0801d0ce

_0801d074:	.4byte 0x000007F4
_0801d078:	.4byte 0x080b8fc0

_0801d07c:
	mov		r0, #0x0
_0801d07e:
	mov		r4, #0x0
	add		r1, r0, #0x1
	mov		r8, r1
	cmp		r4, r6
	bge		_0801d0c8
	add		r7, r0, #0x4
	lsl		r0, r7, #0x6
	ldr		r2, [sp, #0x0]
	add		r3, r2, r0
	mov		r5, #0x0
_0801d092:
	lsl		r1, r4, #0x2
	ldr		r0, _0801d10c
	add		r0, r9
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	lsl		r0, r7, #0x5
	add		r0, r0, r5
	lsl		r0, r0, #0x1
	ldr		r1, _0801d110
	add		r0, r0, r1
	add		r2, #0xba
	ldrh	r2, [r2, #0x0]
	lsr		r2, r2, #0x1
	lsl		r1, r2, #0x3
	sub		r1, r1, r2
	lsl		r1, r1, #0x1
	add		r1, #0x2
	add		r1, r3, r1
	mov		r2, #0x7
	str		r3, [sp, #0x14]
	bl		sub_08071b6c
	add		r5, #0x7
	add		r4, #0x1
	ldr		r3, [sp, #0x14]
	cmp		r4, r6
	blt		_0801d092
_0801d0c8:
	mov		r0, r8
	cmp		r0, #0x3
	ble		_0801d07e
_0801d0ce:
	mov		r4, #0x0
	cmp		r4, r6
	bge		_0801d184
	ldr		r0, _0801d10c
	add		r0, r9
	str		r0, [sp, #0x4]
	ldr		r1, _0801d114
	mov		r10, r1
	sub		r0, r6, #0x2
	lsl		r0, r0, #0x3
	str		r0, [sp, #0xc]
	ldr		r0, _0801d118
	add		r0, r9
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x8]
	add		r0, #0xba
	str		r0, [sp, #0x10]
_0801d0f0:
	lsl		r1, r4, #0x2
	ldr		r2, [sp, #0x4]
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	add		r7, r4, #0x1
	ldr		r2, [sp, #0x8]
	cmp		r2, r0
	bne		_0801d17e
	mov		r3, #0x0
	mov		r12, r3
	cmp		r6, #0x2
	bne		_0801d11c
	lsl		r0, r4, #0x1
	b		_0801d132

_0801d10c:	.4byte 0x000007F4
_0801d110:	.4byte 0x080b99be
_0801d114:	.4byte 0x080f6184
_0801d118:	.4byte 0x00000814

_0801d11c:
	cmp		r6, #0x2
	blt		_0801d144
	cmp		r6, #0x4
	bgt		_0801d144
	ldr		r1, [sp, #0x10]
	ldrh	r0, [r1, #0x0]
	lsr		r0, r0, #0x1
	lsl		r0, r0, #0x1
	ldr		r2, [sp, #0xc]
	add		r0, r2, r0
	lsl		r1, r0, #0x1
_0801d132:
	add		r1, r10
	mov		r2, #0x0
	ldrsh	r3, [r1, r2]
	add		r0, #0x1
	lsl		r0, r0, #0x1
	add		r0, r10
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	mov		r12, r1
_0801d144:
	mov		r2, #0x0
	add		r7, r4, #0x1
	ldr		r0, _0801d194
	mov		r9, r0
	lsl		r5, r3, #0x1
	mov		r1, #0xe0
	lsl		r1, r1, #0x8
	mov		r8, r1
_0801d154:
	mov		r1, r12
	add		r0, r1, r2
	add		r4, r2, #0x1
	lsl		r0, r0, #0x6
	add		r0, r5, r0
	ldr		r1, [sp, #0x0]
	add		r2, r0, r1
	mov		r3, #0x2
_0801d164:
	ldrh	r1, [r2, #0x0]
	mov		r0, r9
	and		r0, r1
	mov		r1, r8
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0801d164
	add		r2, r4, #0x0
	cmp		r2, #0x1
	ble		_0801d154
_0801d17e:
	add		r4, r7, #0x0
	cmp		r4, r6
	blt		_0801d0f0
_0801d184:
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0801d194:	.4byte 0x00000FFF
	thumb_func_end sub_0801cf68

	thumb_func_start sub_0801d198
sub_0801d198:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	str		r0, [sp, #0x0]
	ldr		r0, _0801d1dc
	ldr		r1, _0801d1e0
	add		r0, r0, r1
	ldrb	r2, [r0, #0x0]
	mov		r4, #0x0
	cmp		r4, r2
	blt		_0801d1b6
	b		_0801d2e6
_0801d1b6:
	lsl		r1, r4, #0x2
	ldr		r3, _0801d1e4
	ldr		r5, _0801d1e8
	add		r0, r3, r5
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	mov		r0, #0x0
	str		r0, [sp, #0x4]
	mov		r10, r0
	str		r1, [sp, #0x10]
	cmp		r2, #0x3
	beq		_0801d200
	cmp		r2, #0x3
	bgt		_0801d1ec
	cmp		r2, #0x2
	beq		_0801d1f2
	b		_0801d22a

.incbin "base.gba", 0x1D1DA, 0x2

_0801d1dc:	.4byte RunGameLogic_CallBack
_0801d1e0:	.4byte 0x000007FB
_0801d1e4:	.4byte 0x030031C4
_0801d1e8:	.4byte 0x000007F4

_0801d1ec:
	cmp		r2, #0x4
	beq		_0801d216
	b		_0801d22a
_0801d1f2:
	lsl		r0, r4, #0x3
	sub		r0, r0, r4
	add		r0, #0x6
	str		r0, [sp, #0x4]
	mov		r1, #0xc
	mov		r10, r1
	b		_0801d22a
_0801d200:
	mov		r0, r8
	add		r0, #0xba
	ldrh	r1, [r0, #0x0]
	lsr		r1, r1, #0x1
	lsl		r0, r1, #0x3
	sub		r0, r0, r1
	add		r0, #0x6
	str		r0, [sp, #0x4]
	mov		r3, #0x8
	mov		r10, r3
	b		_0801d22a
_0801d216:
	mov		r0, r8
	add		r0, #0xba
	ldrh	r1, [r0, #0x0]
	lsr		r1, r1, #0x1
	lsl		r0, r1, #0x3
	sub		r0, r0, r1
	add		r0, #0x5
	str		r0, [sp, #0x4]
	mov		r5, #0x8
	mov		r10, r5
_0801d22a:
	mov		r3, #0x0
	sub		r0, r2, #0x1
	mov		r9, r0
	add		r4, #0x1
	str		r4, [sp, #0xc]
	cmp		r3, r9
	bge		_0801d2de
	ldr		r1, _0801d34c
	ldr		r4, _0801d350
	add		r0, r1, r4
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x8]
_0801d242:
	mov		r7, #0xf0
	lsl		r7, r7, #0x8
	ldr		r5, [sp, #0x8]
	cmp		r5, r8
	bne		_0801d250
	mov		r7, #0xe0
	lsl		r7, r7, #0x8
_0801d250:
	mov		r1, #0x2
	cmp		r2, #0x3
	bne		_0801d258
	mov		r1, #0x3
_0801d258:
	ldr		r0, _0801d354
	ldr		r4, [sp, #0x10]
	add		r5, r3, r4
	add		r5, r5, r0
	add		r0, r3, #0x0
	mul		r0, r1
	add		r0, r10
	ldr		r1, [sp, #0x4]
	lsl		r4, r1, #0x1
	lsl		r0, r0, #0x6
	ldr		r1, [sp, #0x0]
	add		r0, r0, r1
	add		r4, r4, r0
	ldrb	r0, [r5, #0x0]
	mov		r1, #0xa
	str		r2, [sp, #0x14]
	str		r3, [sp, #0x18]
	bl		sub_0807ddf0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	orr		r0, r7
	strh	r0, [r4, #0x0]
	add		r6, r4, #0x0
	add		r6, #0x40
	ldrb	r0, [r5, #0x0]
	mov		r1, #0xa
	bl		sub_0807ddf0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	orr		r0, r7
	strh	r0, [r6, #0x0]
	ldrb	r0, [r5, #0x0]
	mov		r1, #0xa
	bl		sub_0807de68
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	orr		r0, r7
	strh	r0, [r4, #0x2]
	add		r4, #0x42
	ldrb	r0, [r5, #0x0]
	mov		r1, #0xa
	bl		sub_0807de68
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r5, #0x90
	lsl		r5, r5, #0x1
	add		r0, r0, r5
	orr		r7, r0
	strh	r7, [r4, #0x0]
	ldr		r3, [sp, #0x18]
	add		r3, #0x1
	ldr		r2, [sp, #0x14]
	cmp		r3, r9
	blt		_0801d242
_0801d2de:
	ldr		r4, [sp, #0xc]
	cmp		r4, r2
	bge		_0801d2e6
	b		_0801d1b6
_0801d2e6:
	ldr		r6, [sp, #0x0]
	add		r6, #0x78
	ldr		r0, _0801d358
	ldrb	r0, [r0, #0x0]
	mov		r8, r0
	mov		r1, #0xa
	bl		sub_0807ddf0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r4, r1, #0x0
	add		r1, r0, r4
	ldr		r2, _0801d35c
	add		r5, r2, #0x0
	orr		r1, r5
	strh	r1, [r6, #0x0]
	ldr		r1, [sp, #0x0]
	add		r1, #0xb8
	mov		r3, #0x90
	lsl		r3, r3, #0x1
	add		r6, r3, #0x0
	add		r0, r0, r6
	orr		r0, r5
	strh	r0, [r1, #0x0]
	ldr		r7, [sp, #0x0]
	add		r7, #0x7a
	mov		r0, r8
	mov		r1, #0xa
	bl		sub_0807de68
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	add		r4, r0, r4
	orr		r4, r5
	strh	r4, [r7, #0x0]
	ldr		r1, [sp, #0x0]
	add		r1, #0xba
	add		r0, r0, r6
	orr		r0, r5
	strh	r0, [r1, #0x0]
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1D34A, 0x2

_0801d34c:	.4byte 0x030031C4
_0801d350:	.4byte 0x00000814
_0801d354:	.4byte 0x03002FC0
_0801d358:	.4byte 0x03002D5C
_0801d35c:	.4byte 0xFFFFF000
	thumb_func_end sub_0801d198

	thumb_func_start sub_0801d360
sub_0801d360:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x74
	bl		sub_0800ec30
	mov		r9, r0
	ldr		r0, _0801d39c
	add		r3, r0, #0x0
	add		r3, #0x24
	ldr		r1, _0801d3a0
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	str		r0, [sp, #0x4]
	mov		r2, #0x0
	str		r2, [sp, #0x8]
	mov		r4, r9
	ldr		r0, [r4, #0x0]
	cmp		r0, #0xc
	bls		_0801d390
	bl		sub_0801e042
_0801d390:
	lsl		r0, r0, #0x2
	ldr		r1, _0801d3a4
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x1D39A, 0x2

_0801d39c:	.4byte RunGameLogic_CallBack
_0801d3a0:	.4byte 0x000007FB
_0801d3a4:	.4byte 0x0801d3a8
_0801d3a8:	.4byte 0x0801d3dc

.incbin "base.gba", 0x1D3AC, 0x30
	thumb_func_end sub_0801d360


.incbin "base.gba", 0x1D3DC, 0xC66
	non_word_aligned_thumb_func_start sub_0801e042
sub_0801e042:
	mov		r6, r9
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x3
	ble		_0801e118
	ldr		r0, _0801e15c
	ldr		r0, [r0, #0x10]
	ldr		r2, _0801e160
	lsl		r0, r0, #0x1a
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0801e05a
	add		r0, #0x3f
_0801e05a:
	asr		r1, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r1
	ldr		r1, _0801e164
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	sub		r0, r0, r1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	mov		r10, r0
	mov		r7, #0x0
	str		r7, [sp, #0x4c]
	mov		r0, #0x1f
	mov		r8, r0
	mov		r7, #0x1f
	ldr		r1, _0801e168
	add		r1, #0x40
	str		r1, [sp, #0x60]
_0801e08a:
	ldr		r2, [sp, #0x4c]
	lsl		r2, r2, #0x1
	str		r2, [sp, #0x70]
	ldr		r3, _0801e168
	add		r0, r2, r3
	ldrh	r4, [r0, #0x0]
	add		r5, r4, #0x0
	and		r5, r7
	lsr		r6, r4, #0x5
	mov		r0, r8
	and		r6, r0
	lsr		r4, r4, #0xa
	and		r4, r0
	ldr		r2, [sp, #0x60]
	ldrh	r1, [r2, #0x0]
	add		r0, r1, #0x0
	and		r0, r7
	lsr		r2, r1, #0x5
	mov		r3, r8
	and		r2, r3
	lsr		r1, r1, #0xa
	and		r1, r3
	sub		r0, r0, r5
	mov		r3, r10
	mul		r3, r0
	add		r0, r3, #0x0
	asr		r0, r0, #0xf
	add		r5, r5, r0
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	sub		r2, r2, r6
	mov		r0, r10
	mul		r0, r2
	asr		r0, r0, #0xf
	add		r6, r6, r0
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	sub		r1, r1, r4
	mov		r0, r10
	mul		r0, r1
	asr		r0, r0, #0xf
	add		r4, r4, r0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	mov		r0, #0x0
	bl		sub_08028130
	ldr		r1, [sp, #0x70]
	add		r3, r1, r0
	mov		r2, #0xe0
	lsl		r2, r2, #0x1
	add		r3, r3, r2
	and		r5, r7
	and		r6, r7
	lsl		r6, r6, #0x5
	orr		r5, r6
	and		r4, r7
	lsl		r4, r4, #0xa
	orr		r5, r4
	strh	r5, [r3, #0x0]
	ldr		r3, [sp, #0x60]
	add		r3, #0x2
	str		r3, [sp, #0x60]
	ldr		r4, [sp, #0x4c]
	add		r4, #0x1
	str		r4, [sp, #0x4c]
	cmp		r4, #0xf
	ble		_0801e08a
	mov		r0, #0x1
	bl		sub_08028168
_0801e118:
	mov		r6, r9
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x2
	ble		_0801e13c
	ldr		r7, [sp, #0x4]
	cmp		r7, #0x0
	beq		_0801e13c
	mov		r4, r9
	add		r4, #0x10
	add		r5, r7, #0x0
_0801e12c:
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_0800e9c0
	add		r4, #0x14
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_0801e12c
_0801e13c:
	ldr		r0, [sp, #0x8]
	cmp		r0, #0x0
	beq		_0801e148
	mov		r0, #0x1
	bl		sub_080281fc
_0801e148:
	add		sp, #0x74
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1E158, 0x4

.align 2, 0
_0801e15c:	.4byte RunGameLogic_CallBack
_0801e160:	.4byte 0x08101068
_0801e164:	.4byte 0x000003FF
_0801e168:	.4byte 0x080c6a0c
	thumb_func_end sub_0801e042

	thumb_func_start sub_0801e16c
sub_0801e16c:
	push	{ r4, r5, r6, r7, lr }
	ldr		r1, _0801e188
	ldr		r2, _0801e18c
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x1
	cmp		r0, #0x0
	beq		_0801e194
	ldr		r1, _0801e190
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	b		_0801e1d2

_0801e188:	.4byte RunGameLogic_CallBack
_0801e18c:	.4byte 0x00000838
_0801e190:	.4byte 0x03002FF4

_0801e194:
	ldr		r4, _0801e1d8
	ldr		r2, _0801e1dc
	add		r0, r1, r2
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	mov		r1, #0x1
	bl		sub_080271b8
	str		r0, [r4, #0x0]
	mov		r2, #0x0
	mov		r12, r4
	mov		r5, #0x0
	mov		r4, #0x0
	ldr		r3, _0801e1e0
	mov		r7, #0x0
	ldr		r6, _0801e1e4
_0801e1b4:
	mov		r1, r12
	ldr		r0, [r1, #0x0]
	lsl		r1, r2, #0x4
	add		r1, r1, r0
	ldrh	r0, [r3, #0x0]
	str		r0, [r1, #0x0]
	str		r7, [r1, #0x4]
	str		r4, [r1, #0x8]
	str		r5, [r1, #0xc]
	add		r5, r5, r6
	sub		r4, #0x14
	add		r3, #0x4
	add		r2, #0x1
	cmp		r2, #0x1f
	ble		_0801e1b4
_0801e1d2:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0801e1d8:	.4byte 0x03002FF4
_0801e1dc:	.4byte 0x00000704
_0801e1e0:	.4byte 0x080f61d8
_0801e1e4:	.4byte 0x0000020F
	thumb_func_end sub_0801e16c

	thumb_func_start sub_0801e1e8
sub_0801e1e8:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	ldr		r0, _0801e2a0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0801e298
	mov		r6, #0x0
_0801e1f6:
	ldr		r0, _0801e2a0
	lsl		r1, r6, #0x4
	ldr		r0, [r0, #0x0]
	add		r4, r0, r1
	ldr		r0, [r4, #0xc]
	add		r0, #0x1
	str		r0, [r4, #0xc]
	ldr		r0, [r4, #0x8]
	add		r0, #0x1
	str		r0, [r4, #0x8]
	cmp		r0, #0x14
	bne		_0801e212
	mov		r0, #0x0
	str		r0, [r4, #0x8]
_0801e212:
	ldr		r0, [r4, #0x8]
	cmp		r0, #0x0
	blt		_0801e292
	ldr		r0, [r4, #0xc]
	ldr		r1, _0801e2a4
	lsl		r0, r0, #0x19
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0801e226
	add		r0, #0x3f
_0801e226:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0801e238
	ldr		r1, _0801e2a8
	add		r0, r0, r1
_0801e238:
	asr		r1, r0, #0xd
	ldr		r0, [r4, #0x0]
	asr		r0, r0, #0x8
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r2, _0801e2ac
	ldr		r1, [sp, #0x8]
	and		r1, r2
	orr		r1, r0
	str		r1, [sp, #0x8]
	ldr		r0, [r4, #0x4]
	lsl		r0, r0, #0x8
	lsr		r0, r0, #0x10
	lsl		r0, r0, #0x10
	ldr		r2, _0801e2b0
	and		r1, r2
	orr		r1, r0
	str		r1, [sp, #0x8]
	ldr		r1, _0801e2b4
	ldr		r0, [r4, #0x8]
	asr		r0, r0, #0x2
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r5, #0x0
	str		r5, [sp, #0x0]
	str		r5, [sp, #0x4]
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	ldr		r1, [r4, #0x4]
	add		r1, #0x40
	str		r1, [r4, #0x4]
	ldr		r0, _0801e2b8
	cmp		r1, r0
	ble		_0801e292
	ldr		r0, _0801e2bc
	lsl		r1, r6, #0x2
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	str		r0, [r4, #0x0]
	str		r5, [r4, #0x4]
_0801e292:
	add		r6, #0x1
	cmp		r6, #0x1f
	ble		_0801e1f6
_0801e298:
	add		sp, #0xc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0801e2a0:	.4byte 0x03002FF4
_0801e2a4:	.4byte 0x08101068
_0801e2a8:	.4byte 0x00001FFF
_0801e2ac:	.4byte 0xffff0000
_0801e2b0:	.4byte 0x0000FFFF
_0801e2b4:	.4byte 0x080f61c4
_0801e2b8:	.4byte 0x00009FFF
_0801e2bc:	.4byte 0x080f61d8
	thumb_func_end sub_0801e1e8

	thumb_func_start sub_0801e2c0
sub_0801e2c0:
	push	{ r4, lr }
	ldr		r4, _0801e30c
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r0, #0xe0
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x10
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	mov		r4, #0x0
	bl		sub_08027788
	cmp		r0, #0x0
	beq		_0801e2f2
	bl		sub_080277b4
	cmp		r0, #0x0
	bne		_0801e2f4
_0801e2f2:
	mov		r4, #0x1
_0801e2f4:
	cmp		r4, #0x0
	beq		_0801e318
	bl		sub_08029f34
	ldr		r1, _0801e310
	mov		r2, #0xc0
	lsl		r2, r2, #0x13
	ldr		r3, _0801e314
	bl		sub_08029ee4
	b		_0801e336

.incbin "base.gba", 0x1E30A, 0x2

_0801e30c:	.4byte 0x080c69c0
_0801e310:	.4byte 0x080c6b0c
_0801e314:	.4byte 0x80000400

_0801e318:
	bl		sub_08029f34
	ldr		r1, _0801e360
	mov		r2, #0xc0
	lsl		r2, r2, #0x13
	ldr		r3, _0801e364
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _0801e368
	ldr		r2, _0801e36c
	ldr		r3, _0801e370
	bl		sub_08029ee4
_0801e336:
	ldr		r0, _0801e374
	ldr		r1, _0801e378
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	bl		sub_08029f34
	ldr		r1, _0801e37c
	ldr		r2, _0801e380
	ldr		r3, _0801e384
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _0801e388
	ldr		r2, _0801e38c
	ldr		r3, _0801e390
	bl		sub_08029ee4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0801e360:	.4byte 0x080c6b0c
_0801e364:	.4byte 0x80000230
_0801e368:	.4byte 0x080c958c
_0801e36c:	.4byte 0x06000080
_0801e370:	.4byte 0x800000E0
_0801e374:	.4byte 0x080ba3bc
_0801e378:	.4byte 0x06000800
_0801e37c:	.4byte 0x080c83cc
_0801e380:	.4byte 0x06001400
_0801e384:	.4byte 0x80000200
_0801e388:	.4byte 0x080c7bcc
_0801e38c:	.4byte 0x06002000
_0801e390:	.4byte 0x80000400
	thumb_func_end sub_0801e2c0

	thumb_func_start sub_0801e394
sub_0801e394:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r7, r0, #0x0
	ldr		r0, _0801e3d0
	ldr		r1, _0801e3d4
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	str		r0, [sp, #0x0]
	mov		r4, #0x0
	bl		sub_08027788
	cmp		r0, #0x0
	beq		_0801e3be
	bl		sub_080277b4
	cmp		r0, #0x0
	bne		_0801e3c0
_0801e3be:
	mov		r4, #0x1
_0801e3c0:
	cmp		r4, #0x0
	beq		_0801e3dc
	ldr		r0, _0801e3d8
	add		r1, r7, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	b		_0801e3e4

.incbin "base.gba", 0x1E3CE, 0x2

_0801e3d0:	.4byte RunGameLogic_CallBack
_0801e3d4:	.4byte 0x000007FB
_0801e3d8:	.4byte 0x080ba908

_0801e3dc:
	ldr		r0, _0801e3f0
	add		r1, r7, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
_0801e3e4:
	ldr		r2, [sp, #0x0]
	cmp		r2, #0x3
	beq		_0801e3f4
	cmp		r2, #0x4
	beq		_0801e408
	b		_0801e424

_0801e3f0:	.4byte 0x080babec

_0801e3f4:
	cmp		r4, #0x0
	beq		_0801e400
	ldr		r0, _0801e3fc
	b		_0801e40e

_0801e3fc:	.4byte 0x080bae64

_0801e400:
	ldr		r0, _0801e404
	b		_0801e40e

_0801e404:	.4byte 0x080bb0e4

_0801e408:
	cmp		r4, #0x0
	beq		_0801e41c
	ldr		r0, _0801e418
_0801e40e:
	add		r1, r7, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	b		_0801e424

.incbin "base.gba", 0x1E416, 0x2

_0801e418:	.4byte 0x080bb2f8

_0801e41c:
	ldr		r0, _0801e540
	add		r1, r7, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
_0801e424:
	mov		r2, #0x0
	ldr		r3, [sp, #0x0]
	cmp		r2, r3
	bge		_0801e4ac
	ldr		r6, _0801e544
	ldr		r5, _0801e548
	add		r6, r5, r6
	str		r6, [sp, #0x4]
	ldr		r1, _0801e54c
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x8]
	add		r0, r3, #0x0
	sub		r0, #0x2
	lsl		r0, r0, #0x4
	mov		r9, r0
_0801e444:
	lsl		r1, r2, #0x2
	ldr		r3, [sp, #0x4]
	add		r0, r3, r1
	ldr		r0, [r0, #0x0]
	add		r5, r2, #0x1
	mov		r10, r5
	ldr		r6, [sp, #0x8]
	cmp		r6, r0
	bne		_0801e4a4
	mov		r3, r9
	add		r0, r1, r3
	ldr		r5, _0801e550
	add		r0, r0, r5
	mov		r6, #0x0
	ldrsh	r1, [r0, r6]
	lsl		r0, r2, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x1
	add		r0, r9
	add		r0, r0, r5
	mov		r2, #0x0
	ldrsh	r6, [r0, r2]
	mov		r2, #0x0
	ldr		r3, _0801e554
	mov		r8, r3
	lsl		r5, r1, #0x1
	mov		r0, #0xe0
	lsl		r0, r0, #0x8
	mov		r12, r0
_0801e47e:
	add		r0, r6, r2
	add		r4, r2, #0x1
	lsl		r0, r0, #0x6
	add		r0, r5, r0
	add		r2, r0, r7
	mov		r3, #0x2
_0801e48a:
	ldrh	r1, [r2, #0x0]
	mov		r0, r8
	and		r0, r1
	mov		r1, r12
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0801e48a
	add		r2, r4, #0x0
	cmp		r2, #0x1
	ble		_0801e47e
_0801e4a4:
	mov		r2, r10
	ldr		r3, [sp, #0x0]
	cmp		r2, r3
	blt		_0801e444
_0801e4ac:
	mov		r3, #0x0
	ldr		r5, [sp, #0x0]
	cmp		r3, r5
	bge		_0801e594
	ldr		r6, _0801e558
	mov		r10, r6
	add		r0, r5, #0x0
	sub		r0, #0x2
	lsl		r0, r0, #0x4
	mov		r9, r0
	ldr		r1, _0801e544
	ldr		r0, _0801e548
	add		r1, r0, r1
	str		r1, [sp, #0xc]
_0801e4c8:
	lsl		r2, r3, #0x2
	ldr		r5, [sp, #0xc]
	add		r0, r5, r2
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r4, r0, #0x1
	ldr		r6, _0801e548
	ldr		r5, _0801e54c
	add		r0, r6, r5
	ldr		r0, [r0, #0x0]
	mov		r6, #0xf0
	lsl		r6, r6, #0x8
	mov		r12, r6
	cmp		r0, r1
	bne		_0801e4f0
	mov		r0, #0xe0
	lsl		r0, r0, #0x8
	mov		r12, r0
_0801e4f0:
	mov		r1, r9
	add		r0, r2, r1
	add		r0, r10
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	lsl		r0, r3, #0x1
	add		r0, #0x1
	lsl		r0, r0, #0x1
	add		r0, r9
	add		r0, r10
	mov		r6, #0x0
	ldrsh	r5, [r0, r6]
	cmp		r4, #0x0
	bne		_0801e55c
	mov		r2, #0x0
	add		r3, #0x1
	mov		r8, r3
	lsl		r6, r1, #0x1
_0801e514:
	add		r0, r5, r2
	lsl		r1, r2, #0x2
	add		r4, r2, #0x1
	add		r2, r1, #0x0
	add		r2, #0x7c
	lsl		r0, r0, #0x6
	add		r0, r6, r0
	add		r1, r0, r7
	mov		r3, #0x3
_0801e526:
	mov		r0, r12
	orr		r0, r2
	strh	r0, [r1, #0x0]
	add		r2, #0x1
	add		r1, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0801e526
	add		r2, r4, #0x0
	cmp		r2, #0x1
	ble		_0801e514
	b		_0801e58c

.incbin "base.gba", 0x1E53E, 0x2

_0801e540:	.4byte 0x080bb5ac
_0801e544:	.4byte 0x000007F4
_0801e548:	.4byte 0x030031C4
_0801e54c:	.4byte 0x00000814
_0801e550:	.4byte 0x080f62a8
_0801e554:	.4byte 0x00000FFF
_0801e558:	.4byte 0x080f62d8

_0801e55c:
	mov		r2, #0x0
	add		r3, #0x1
	mov		r8, r3
	lsl		r6, r1, #0x1
_0801e564:
	add		r0, r5, r2
	lsl		r1, r2, #0x2
	add		r4, r2, #0x1
	add		r2, r1, #0x0
	add		r2, #0x84
	lsl		r0, r0, #0x6
	add		r0, r6, r0
	add		r1, r0, r7
	mov		r3, #0x3
_0801e576:
	mov		r0, r12
	orr		r0, r2
	strh	r0, [r1, #0x0]
	add		r2, #0x1
	add		r1, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0801e576
	add		r2, r4, #0x0
	cmp		r2, #0x1
	ble		_0801e564
_0801e58c:
	mov		r3, r8
	ldr		r0, [sp, #0x0]
	cmp		r3, r0
	blt		_0801e4c8
_0801e594:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0801e394

	thumb_func_start sub_0801e5a4
sub_0801e5a4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	str		r0, [sp, #0x0]
	ldr		r2, _0801e6dc
	ldr		r1, _0801e6e0
	add		r0, r2, r1
	ldrb	r0, [r0, #0x0]
	mov		r10, r0
	mov		r3, #0x0
	mov		r9, r3
	cmp		r9, r10
	bge		_0801e676
	ldr		r0, _0801e6e4
	mov		r1, r10
	sub		r1, #0x2
	lsl		r1, r1, #0x4
	add		r1, r1, r0
	mov		r8, r1
	ldr		r1, _0801e6e8
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x4]
_0801e5d8:
	mov		r2, r9
	lsl		r0, r2, #0x2
	ldr		r3, _0801e6ec
	ldr		r2, _0801e6f0
	add		r1, r3, r2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	mov		r7, #0xf0
	lsl		r7, r7, #0x8
	ldr		r3, [sp, #0x4]
	cmp		r3, r0
	bne		_0801e5f4
	mov		r7, #0xe0
	lsl		r7, r7, #0x8
_0801e5f4:
	mov		r1, r8
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	mov		r3, #0x2
	ldrsh	r4, [r1, r3]
	ldr		r5, _0801e6f4
	add		r5, r9
	lsl		r4, r4, #0x5
	add		r4, r4, r0
	lsl		r4, r4, #0x1
	ldr		r0, [sp, #0x0]
	add		r4, r4, r0
	ldrb	r0, [r5, #0x0]
	mov		r1, #0xa
	bl		sub_0807ddf0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	orr		r0, r7
	strh	r0, [r4, #0x0]
	add		r6, r4, #0x0
	add		r6, #0x40
	ldrb	r0, [r5, #0x0]
	mov		r1, #0xa
	bl		sub_0807ddf0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r2, #0x90
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	orr		r0, r7
	strh	r0, [r6, #0x0]
	ldrb	r0, [r5, #0x0]
	mov		r1, #0xa
	bl		sub_0807de68
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	orr		r0, r7
	strh	r0, [r4, #0x2]
	add		r4, #0x42
	ldrb	r0, [r5, #0x0]
	mov		r1, #0xa
	bl		sub_0807de68
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	orr		r7, r0
	strh	r7, [r4, #0x0]
	mov		r2, #0x4
	add		r8, r2
	mov		r3, #0x1
	add		r9, r3
	cmp		r9, r10
	blt		_0801e5d8
_0801e676:
	ldr		r6, [sp, #0x0]
	add		r6, #0xb8
	ldr		r0, _0801e6f8
	ldrb	r0, [r0, #0x0]
	mov		r8, r0
	mov		r1, #0xa
	bl		sub_0807ddf0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r4, r1, #0x0
	add		r1, r0, r4
	ldr		r2, _0801e6fc
	add		r5, r2, #0x0
	orr		r1, r5
	strh	r1, [r6, #0x0]
	ldr		r1, [sp, #0x0]
	add		r1, #0xf8
	mov		r3, #0x90
	lsl		r3, r3, #0x1
	add		r6, r3, #0x0
	add		r0, r0, r6
	orr		r0, r5
	strh	r0, [r1, #0x0]
	ldr		r7, [sp, #0x0]
	add		r7, #0xba
	mov		r0, r8
	mov		r1, #0xa
	bl		sub_0807de68
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	add		r4, r0, r4
	orr		r4, r5
	strh	r4, [r7, #0x0]
	ldr		r1, [sp, #0x0]
	add		r1, #0xfa
	add		r0, r0, r6
	orr		r0, r5
	strh	r0, [r1, #0x0]
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1E6DA, 0x2

_0801e6dc:	.4byte RunGameLogic_CallBack
_0801e6e0:	.4byte 0x000007FB
_0801e6e4:	.4byte 0x080f6278
_0801e6e8:	.4byte 0x00000838
_0801e6ec:	.4byte 0x030031C4
_0801e6f0:	.4byte 0x000007F4
_0801e6f4:	.4byte 0x03002FD8
_0801e6f8:	.4byte 0x03002D40
_0801e6fc:	.4byte 0xFFFFF000
	thumb_func_end sub_0801e5a4

	thumb_func_start sub_0801e700
sub_0801e700:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x60
	bl		sub_0800ec30
	mov		r8, r0
	ldr		r0, _0801e73c
	add		r2, r0, #0x0
	add		r2, #0x24
	ldr		r1, _0801e740
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	str		r0, [sp, #0x4]
	mov		r3, #0x0
	str		r3, [sp, #0x8]
	mov		r6, r8
	ldr		r0, [r6, #0x0]
	cmp		r0, #0xd
	bls		_0801e730
	bl		sub_0801f434
_0801e730:
	lsl		r0, r0, #0x2
	ldr		r1, _0801e744
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x1E73A, 0x2

_0801e73c:	.4byte RunGameLogic_CallBack
_0801e740:	.4byte 0x000007FB
_0801e744:	.4byte 0x0801e748
_0801e748:	.4byte 0x0801e780

.incbin "base.gba", 0x1E74C, 0x34
	thumb_func_end sub_0801e700


.incbin "base.gba", 0x1E780, 0xCB4
	thumb_func_start sub_0801f434
sub_0801f434:
	mov		r7, r8
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x4
	ble		_0801f50a
	ldr		r0, _0801f558
	ldr		r0, [r0, #0x10]
	ldr		r2, _0801f55c
	lsl		r0, r0, #0x1a
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0801f44c
	add		r0, #0x3f
_0801f44c:
	asr		r1, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r1
	ldr		r1, _0801f560
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	sub		r0, r0, r1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	mov		r10, r0
	mov		r0, #0x0
	str		r0, [sp, #0x40]
	mov		r1, #0x1f
	mov		r9, r1
	mov		r7, #0x1f
	ldr		r2, _0801f564
	add		r2, #0x40
	str		r2, [sp, #0x4c]
_0801f47c:
	ldr		r3, [sp, #0x40]
	lsl		r3, r3, #0x1
	str		r3, [sp, #0x5c]
	ldr		r6, _0801f564
	add		r0, r3, r6
	ldrh	r4, [r0, #0x0]
	add		r5, r4, #0x0
	and		r5, r7
	lsr		r6, r4, #0x5
	mov		r0, r9
	and		r6, r0
	lsr		r4, r4, #0xa
	and		r4, r0
	ldr		r2, [sp, #0x4c]
	ldrh	r1, [r2, #0x0]
	add		r0, r1, #0x0
	and		r0, r7
	lsr		r2, r1, #0x5
	mov		r3, r9
	and		r2, r3
	lsr		r1, r1, #0xa
	and		r1, r3
	sub		r0, r0, r5
	mov		r3, r10
	mul		r3, r0
	add		r0, r3, #0x0
	asr		r0, r0, #0xf
	add		r5, r5, r0
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	sub		r2, r2, r6
	mov		r0, r10
	mul		r0, r2
	asr		r0, r0, #0xf
	add		r6, r6, r0
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	sub		r1, r1, r4
	mov		r0, r10
	mul		r0, r1
	asr		r0, r0, #0xf
	add		r4, r4, r0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	mov		r0, #0x0
	bl		sub_08028130
	ldr		r1, [sp, #0x5c]
	add		r3, r1, r0
	mov		r2, #0xe0
	lsl		r2, r2, #0x1
	add		r3, r3, r2
	and		r5, r7
	and		r6, r7
	lsl		r6, r6, #0x5
	orr		r5, r6
	and		r4, r7
	lsl		r4, r4, #0xa
	orr		r5, r4
	strh	r5, [r3, #0x0]
	ldr		r3, [sp, #0x4c]
	add		r3, #0x2
	str		r3, [sp, #0x4c]
	ldr		r6, [sp, #0x40]
	add		r6, #0x1
	str		r6, [sp, #0x40]
	cmp		r6, #0xf
	ble		_0801f47c
	mov		r0, #0x1
	bl		sub_08028168
_0801f50a:
	bl		sub_0801e1e8
	mov		r7, r8
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x3
	ble		_0801f532
	ldr		r0, [sp, #0x4]
	cmp		r0, #0x0
	beq		_0801f532
	mov		r4, r8
	add		r4, #0x10
	add		r5, r0, #0x0
_0801f522:
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_0800e9c0
	add		r4, #0x14
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_0801f522
_0801f532:
	ldr		r1, [sp, #0x8]
	cmp		r1, #0x0
	beq		_0801f53e
	mov		r0, #0x1
	bl		sub_080281fc
_0801f53e:
	add		sp, #0x60
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1F54E, 0xA

_0801f558:	.4byte RunGameLogic_CallBack
_0801f55c:	.4byte 0x08101068
_0801f560:	.4byte 0x000003FF
_0801f564:	.4byte 0x080c6a0c
	thumb_func_end sub_0801f434

	thumb_func_start sub_0801f568
sub_0801f568:
	push	{ lr }
	ldr		r1, _0801f57c
	ldr		r2, _0801f580
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0801f584
	bl		sub_0801f5e8
	b		_0801f5e2

_0801f57c:	.4byte RunGameLogic_CallBack
_0801f580:	.4byte 0x00000CAC

_0801f584:
	ldr		r2, _0801f5a8
	add		r0, r1, r2
	ldrh	r2, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	beq		_0801f5d2
	cmp		r1, r0
	bgt		_0801f5ac
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_0801f5be
	b		_0801f5e2

.incbin "base.gba", 0x1F5A6, 0x2

_0801f5a8:	.4byte 0x000007FE

_0801f5ac:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_0801f5d8
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_0801f5de
	b		_0801f5e2
_0801f5be:
	mov		r0, #0x10
	and		r0, r2
	cmp		r0, #0x0
	bne		_0801f5cc
	bl		sub_080180d4
	b		_0801f5e2
_0801f5cc:
	bl		sub_0801ab48
	b		_0801f5e2
_0801f5d2:
	bl		sub_0801bfe4
	b		_0801f5e2
_0801f5d8:
	bl		sub_0801d360
	b		_0801f5e2
_0801f5de:
	bl		sub_0801e700
_0801f5e2:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x1F5E6, 0x2
	thumb_func_end sub_0801f568

	thumb_func_start sub_0801f5e8
sub_0801f5e8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	bl		sub_0800ec40
	add		r6, r0, #0x0
	ldr		r0, _0801f618
	add		r0, #0x24
	mov		r8, r0
	ldr		r0, [r6, #0xc]
	add		r0, #0x1
	str		r0, [r6, #0xc]
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x6
	bls		_0801f60e
	b		_0801f94a
_0801f60e:
	lsl		r0, r0, #0x2
	ldr		r1, _0801f61c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0801f618:	.4byte RunGameLogic_CallBack
_0801f61c:	.4byte 0x0801f620
_0801f620:	.4byte 0x0801f63c

.incbin "base.gba", 0x1F624, 0x18
	thumb_func_end sub_0801f5e8


.incbin "base.gba", 0x1F63C, 0x30E

_0801f94a:

.incbin "base.gba", 0x1F94A, 0xC
_0801f956:

.incbin "base.gba", 0x1F956, 0xC02
	thumb_func_start sub_08020558
sub_08020558:
	push	{ r4, r5, r6, lr }
	ldr		r0, _080205bc
	ldr		r0, [r0, #0x0]
	add		r5, r0, #0x0
	mov		r0, #0xca
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	add		r0, #0x18
	add		r4, r5, r0
	ldr		r0, _080205c0
	str		r0, [r1, #0x0]
	mov		r6, #0x0
	mov		r0, #0x70
	strh	r0, [r1, #0x4]
	mov		r0, #0x34
	strh	r0, [r1, #0x6]
	add		r0, #0xcc
	strh	r0, [r1, #0xa]
	strh	r0, [r1, #0x8]
	strh	r6, [r1, #0xc]
	strh	r6, [r1, #0x10]
	ldr		r0, _080205c4
	ldr		r0, [r0, #0x0]
	bl		sub_0800ebfc
	strb	r0, [r4, #0x0]
	ldr		r0, _080205c8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x2
	cmp		r0, #0x2
	bgt		_08020598
	mov		r1, #0x1
_08020598:
	strb	r1, [r4, #0x1]
	mov		r0, #0x1
	strh	r0, [r4, #0x2]
	strh	r6, [r4, #0x6]
	bl		sub_08028130
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	str		r0, [r4, #0xc]
	mov		r1, #0xba
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x10]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080205bc:	.4byte 0x0203EBCC
_080205c0:	.4byte 0x080e4bd0
_080205c4:	.4byte 0x0203EBBC
_080205c8:	.4byte 0x0203EBB8
	thumb_func_end sub_08020558

	thumb_func_start sub_080205cc
sub_080205cc:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	ldr		r0, _0802067c
	ldr		r0, [r0, #0x0]
	add		r6, r0, #0x0
	mov		r0, #0xe0
	lsl		r0, r0, #0x1
	add		r4, r6, r0
	ldr		r0, [r4, #0x8]
	cmp		r0, #0x0
	beq		_08020614
	ldrh	r2, [r4, #0x4]
	ldr		r1, _08020680
	ldr		r0, [sp, #0x8]
	and		r0, r1
	orr		r0, r2
	str		r0, [sp, #0x8]
	ldrh	r1, [r4, #0x6]
	lsl		r1, r1, #0x10
	ldr		r2, _08020684
	and		r0, r2
	orr		r0, r1
	str		r0, [sp, #0x8]
	ldr		r0, [r4, #0x0]
	mov		r1, #0x8
	ldrsh	r2, [r4, r1]
	mov		r5, #0xa
	ldrsh	r3, [r4, r5]
	mov		r5, #0xc
	ldrsh	r1, [r4, r5]
	str		r1, [sp, #0x0]
	mov		r1, #0x0
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	bl		sub_0802951c
_08020614:
	mov		r0, #0xec
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x6
	ble		_08020672
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	ldr		r1, _08020688
	add		r5, r6, r1
	ldrb	r0, [r5, #0x0]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r5, #0x0]
	ldr		r1, _0802068c
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0xb9
	lsl		r1, r1, #0x3
	add		r4, r6, r1
	ldr		r1, [r4, #0x0]
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r1, [r4, #0x0]
	ldr		r2, _08020690
	ldr		r3, _08020694
	bl		sub_08029ee4
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	cmp		r0, #0x3
	beq		_0802066c
	cmp		r0, #0x7
	bne		_08020672
_0802066c:
	mov		r0, #0x78
	bl		sub_0807073c
_08020672:
	add		sp, #0xc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2067A, 0x2

_0802067c:	.4byte 0x0203EBCC
_08020680:	.4byte 0xffff0000
_08020684:	.4byte 0x0000FFFF
_08020688:	.4byte 0x000001D9
_0802068c:	.4byte 0x080f6598
_08020690:	.4byte 0x06015800
_08020694:	.4byte 0x80000400
	thumb_func_end sub_080205cc

	thumb_func_start sub_08020698
sub_08020698:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r0, _080207ac
	ldr		r0, [r0, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	add		r4, r0, r1
	ldrh	r0, [r4, #0x10]
	add		r0, #0x1
	strh	r0, [r4, #0x10]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0xc8
	ble		_080206b8
	b		_080207b8
_080206b8:
	mov		r1, #0x10
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0xf
	mov		r1, #0xc8
	bl		sub_0807d80c
	ldr		r1, _080207b0
	mov		r8, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_080206d2
	add		r0, #0x3f
_080206d2:
	asr		r0, r0, #0x6
	mov		r7, #0x80
	lsl		r7, r7, #0x1
	sub		r0, r7, r0
	ldr		r6, _080207b4
	and		r0, r6
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r1, [r0, #0x0]
	mov		r5, #0x80
	lsl		r5, r5, #0x8
	sub		r1, r5, r1
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r1, r0, #0x5
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	neg		r0, r0
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x10
	mov		r1, #0x8c
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	strh	r0, [r4, #0x4]
	mov		r1, #0x10
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0xf
	mov		r1, #0x64
	bl		sub_0807d80c
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0802071a
	add		r0, #0x3f
_0802071a:
	asr		r0, r0, #0x6
	sub		r0, r7, r0
	and		r0, r6
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r1, [r0, #0x0]
	sub		r1, r5, r1
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	neg		r0, r0
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x10
	add		r0, #0x46
	strh	r0, [r4, #0x6]
	mov		r1, #0x10
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0xf
	mov		r1, #0x64
	bl		sub_0807d80c
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08020754
	add		r0, #0x3f
_08020754:
	asr		r0, r0, #0x6
	sub		r0, r7, r0
	and		r0, r6
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	sub		r0, r5, r0
	lsl		r0, r0, #0x4
	neg		r0, r0
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x10
	add		r0, #0xb0
	strh	r0, [r4, #0xa]
	strh	r0, [r4, #0x8]
	mov		r1, #0x10
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0xf
	mov		r1, #0xc8
	bl		sub_0807d80c
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08020788
	add		r0, #0x3f
_08020788:
	asr		r0, r0, #0x6
	sub		r0, r7, r0
	and		r0, r6
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	sub		r0, r5, r0
	lsl		r0, r0, #0xd
	neg		r0, r0
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	add		r0, r0, r1
	strh	r0, [r4, #0xc]
	mov		r0, #0x0
	b		_080207be

_080207ac:	.4byte 0x0203EBCC
_080207b0:	.4byte 0x08101068
_080207b4:	.4byte 0x000003FF

_080207b8:
	mov		r0, #0x0
	strh	r0, [r4, #0x10]
	mov		r0, #0x1
_080207be:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08020698

	thumb_func_start sub_080207c8
sub_080207c8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	ldr		r0, _08020978
	ldr		r0, [r0, #0x0]
	mov		r10, r0
	mov		r6, #0xee
	lsl		r6, r6, #0x1
	add		r6, r10
	ldr		r7, _0802097c
	ldr		r0, _08020980
	mov		r9, r0
	ldr		r1, _08020984
	mov		r8, r1
	mov		r4, #0x92
	lsl		r4, r4, #0x2
	add		r4, r10
	mov		r5, #0x1f
_080207f2:
	mov		r0, #0x19
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x0
	bne		_080208ba
	mov		r2, #0x4
	ldrsh	r0, [r6, r2]
	str		r0, [r4, #0x0]
	mov		r3, #0x6
	ldrsh	r0, [r6, r3]
	str		r0, [r4, #0x4]
	ldr		r0, [r7, #0x0]
	mov		r1, r9
	mul		r1, r0
	add		r0, r1, #0x0
	ldr		r2, _08020988
	add		r0, r0, r2
	str		r0, [r7, #0x0]
	lsr		r0, r0, #0x10
	mov		r3, r8
	and		r0, r3
	ldr		r1, _0802098c
	bl		sub_0807d8d8
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r2, #0x4
	ldrsh	r1, [r6, r2]
	add		r1, #0x96
	sub		r1, r1, r0
	str		r1, [r4, #0xc]
	ldr		r0, [r7, #0x0]
	mov		r3, r9
	mul		r3, r0
	add		r0, r3, #0x0
	ldr		r1, _08020988
	add		r0, r0, r1
	str		r0, [r7, #0x0]
	lsr		r0, r0, #0x10
	mov		r2, r8
	and		r0, r2
	mov		r1, #0x65
	bl		sub_0807d8d8
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r3, #0x6
	ldrsh	r1, [r6, r3]
	add		r1, #0x64
	add		r1, r1, r0
	ldr		r0, [r4, #0x0]
	lsl		r0, r0, #0x10
	str		r0, [r4, #0x0]
	ldr		r0, [r4, #0x4]
	lsl		r0, r0, #0x10
	str		r0, [r4, #0x4]
	ldr		r0, [r4, #0xc]
	lsl		r0, r0, #0x10
	str		r0, [r4, #0xc]
	lsl		r1, r1, #0x10
	str		r1, [r4, #0x10]
	ldr		r0, [r7, #0x0]
	mov		r1, r9
	mul		r1, r0
	add		r0, r1, #0x0
	ldr		r2, _08020988
	add		r0, r0, r2
	str		r0, [r7, #0x0]
	lsr		r0, r0, #0x10
	mov		r3, r8
	and		r0, r3
	mov		r1, #0x21
	bl		sub_0807d8d8
	add		r0, #0x40
	strb	r0, [r4, #0x18]
	ldr		r0, [r4, #0xc]
	ldr		r1, [r4, #0x0]
	sub		r0, r0, r1
	mov		r1, #0x18
	ldrsb	r1, [r4, r1]
	bl		sub_0807d80c
	str		r0, [r4, #0x8]
	ldr		r2, [r4, #0x10]
	ldr		r0, [r4, #0x4]
	sub		r2, r2, r0
	mov		r1, #0x18
	ldrsb	r1, [r4, r1]
	ldr		r3, _08020990
	add		r0, r3, #0x0
	mul		r0, r1
	mul		r0, r1
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	lsl		r1, r1, #0x1
	bl		sub_0807d80c
	str		r0, [r4, #0x14]
	mov		r0, #0x1
	strb	r0, [r4, #0x19]
_080208ba:
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x8]
	add		r0, r0, r1
	str		r0, [r4, #0x0]
	ldr		r0, [r4, #0x4]
	ldr		r1, [r4, #0x14]
	add		r0, r0, r1
	str		r0, [r4, #0x4]
	ldr		r0, _08020990
	sub		r1, r1, r0
	str		r1, [r4, #0x14]
	ldrb	r0, [r4, #0x18]
	sub		r0, #0x1
	mov		r1, #0x0
	strb	r0, [r4, #0x18]
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bge		_080208e8
	ldr		r0, [r4, #0xc]
	str		r0, [r4, #0x0]
	ldr		r0, [r4, #0x10]
	str		r0, [r4, #0x4]
	strb	r1, [r4, #0x19]
_080208e8:
	add		r4, #0x1c
	sub		r5, #0x1
	cmp		r5, #0x0
	blt		_080208f2
	b		_080207f2
_080208f2:
	ldr		r2, _08020994
	ldr		r1, _08020998
	mov		r5, #0x3
_080208f8:
	ldrh	r0, [r2, #0x0]
	strh	r0, [r1, #0x0]
	add		r2, #0x2
	add		r1, #0x2
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_080208f8
	ldr		r2, _08020998
	ldrh	r1, [r2, #0x6]
	ldr		r0, _0802099c
	and		r0, r1
	mov		r3, #0x80
	lsl		r3, r3, #0x3
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x6]
	mov		r4, #0x92
	lsl		r4, r4, #0x2
	add		r4, r10
	mov		r5, #0x1f
_08020920:
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	bge		_0802092a
	ldr		r0, _080209a0
	add		r1, r1, r0
_0802092a:
	lsr		r1, r1, #0x10
	ldr		r0, _080209a4
	ldr		r2, [sp, #0x8]
	and		r2, r0
	orr		r2, r1
	str		r2, [sp, #0x8]
	ldr		r0, [r4, #0x4]
	cmp		r0, #0x0
	bge		_08020940
	ldr		r1, _080209a0
	add		r0, r0, r1
_08020940:
	lsr		r0, r0, #0x10
	lsl		r0, r0, #0x10
	ldr		r1, _080209a0
	and		r2, r1
	orr		r2, r0
	str		r2, [sp, #0x8]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x4]
	ldr		r0, _08020998
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	add		r4, #0x1c
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08020920
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x20976, 0x2

_08020978:	.4byte 0x0203EBCC
_0802097c:	.4byte 0x0203EBD4
_08020980:	.4byte 0x41C64E6D
_08020984:	.4byte 0x00007FFF
_08020988:	.4byte 0x00003039
_0802098c:	.4byte 0x0000012D
_08020990:	.4byte 0xFFFFE000
_08020994:	.4byte 0x080e4ba0
_08020998:	.4byte 0x0203EBB0
_0802099c:	.4byte 0x0000F3FF
_080209a0:	.4byte 0x0000FFFF
_080209a4:	.4byte 0xffff0000
	thumb_func_end sub_080207c8

	thumb_func_start sub_080209a8
sub_080209a8:
	push	{ r4, r5, lr }
	ldr		r0, _080209d4
	ldr		r2, [r0, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r1, r2, r0
	ldr		r0, _080209d8
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	strh	r0, [r1, #0xa]
	strh	r0, [r1, #0x8]
	strh	r0, [r1, #0x10]
	ldr		r0, _080209dc
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_080209f0
	cmp		r0, #0x1
	bgt		_080209e0
	cmp		r0, #0x0
	beq		_080209e6
	b		_08020a06

.incbin "base.gba", 0x209D2, 0x2

_080209d4:	.4byte 0x0203EBCC
_080209d8:	.4byte 0x080e4bd8
_080209dc:	.4byte 0x0203EBB8

_080209e0:
	cmp		r0, #0x2
	beq		_080209fa
	b		_08020a06
_080209e6:
	mov		r0, #0x78
	strh	r0, [r1, #0x12]
	strh	r0, [r1, #0x4]
	mov		r0, #0x20
	b		_08020a02
_080209f0:
	mov		r0, #0x58
	strh	r0, [r1, #0x12]
	strh	r0, [r1, #0x4]
	mov		r0, #0x28
	b		_08020a02
_080209fa:
	mov		r0, #0x98
	strh	r0, [r1, #0x12]
	strh	r0, [r1, #0x4]
	mov		r0, #0x30
_08020a02:
	strh	r0, [r1, #0x14]
	strh	r0, [r1, #0x6]
_08020a06:
	mov		r3, #0xfa
	lsl		r3, r3, #0x1
	add		r1, r2, r3
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	add		r3, #0x1
	add		r1, r2, r3
	strb	r0, [r1, #0x0]
	add		r3, #0x1
	add		r1, r2, r3
	strb	r0, [r1, #0x0]
	ldr		r5, _08020a5c
	ldr		r4, [r5, #0x0]
	ldr		r0, _08020a60
	ldr		r1, _08020a64
	add		r4, r4, r1
	ldr		r1, [r4, #0x0]
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r1, [r4, #0x0]
	ldr		r2, _08020a68
	ldr		r3, _08020a6c
	bl		sub_08029ee4
	mov		r3, #0x0
	mov		r2, #0x92
	lsl		r2, r2, #0x2
	mov		r1, #0x1f
_08020a42:
	ldr		r0, [r5, #0x0]
	add		r0, r0, r2
	strb	r3, [r0, #0x19]
	add		r2, #0x1c
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08020a42
	mov		r1, #0x0
	ldr		r0, _08020a70
	str		r1, [r0, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08020a5c:	.4byte 0x0203EBCC
_08020a60:	.4byte 0x080dcb24
_08020a64:	.4byte 0x000005D4
_08020a68:	.4byte 0x06012000
_08020a6c:	.4byte 0x80000010
_08020a70:	.4byte 0x0203EBD4
	thumb_func_end sub_080209a8

	thumb_func_start sub_08020a74
sub_08020a74:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0xc
	ldr		r0, _08020b94
	ldr		r6, [r0, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r5, r6, r0
	ldr		r0, [r5, #0x8]
	cmp		r0, #0x0
	beq		_08020ade
	ldrh	r2, [r5, #0x4]
	ldr		r1, _08020b98
	ldr		r0, [sp, #0x8]
	and		r0, r1
	orr		r0, r2
	str		r0, [sp, #0x8]
	ldrh	r1, [r5, #0x6]
	lsl		r1, r1, #0x10
	ldr		r2, _08020b9c
	and		r0, r2
	orr		r0, r1
	str		r0, [sp, #0x8]
	ldr		r0, [r5, #0x0]
	mov		r1, #0x8
	ldrsh	r2, [r5, r1]
	mov		r7, #0xa
	ldrsh	r3, [r5, r7]
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	str		r4, [sp, #0x4]
	add		r1, sp, #0x8
	bl		sub_0802951c
	bl		sub_080207c8
	ldr		r0, _08020ba0
	mov		r1, #0x8
	ldrsh	r2, [r5, r1]
	mov		r7, #0xa
	ldrsh	r3, [r5, r7]
	mov		r7, #0xc
	ldrsh	r1, [r5, r7]
	str		r1, [sp, #0x0]
	str		r4, [sp, #0x4]
	add		r1, sp, #0x8
	bl		sub_0802951c
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	add		r0, r1, #0x0
	ldrh	r7, [r5, #0xc]
	add		r0, r0, r7
	strh	r0, [r5, #0xc]
_08020ade:
	mov		r0, #0xfa
	lsl		r0, r0, #0x1
	add		r3, r6, r0
	ldrb	r0, [r3, #0x0]
	add		r0, #0x1
	mov		r7, #0x0
	strb	r0, [r3, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x8
	ble		_08020b52
	ldr		r1, _08020ba4
	ldr		r5, _08020ba8
	ldr		r0, [r5, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	strb	r7, [r3, #0x0]
	ldr		r1, _08020bac
	add		r3, r6, r1
	ldrb	r0, [r3, #0x0]
	add		r0, #0x1
	mov		r1, #0xf
	and		r0, r1
	strb	r0, [r3, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	ldr		r1, _08020bb0
	add		r4, r6, r1
	ldr		r1, [r4, #0x0]
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r1, [r4, #0x0]
	ldr		r2, _08020bb4
	ldr		r3, _08020bb8
	bl		sub_08029ee4
	ldr		r1, _08020bbc
	ldr		r0, [r5, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
_08020b52:
	mov		r1, #0xfb
	lsl		r1, r1, #0x1
	add		r2, r6, r1
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	strb	r0, [r2, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0xb
	bls		_08020b68
	strb	r7, [r2, #0x0]
_08020b68:
	ldr		r1, _08020bc0
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	add		sp, #0xc
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08020b94:	.4byte 0x0203EBCC
_08020b98:	.4byte 0xffff0000
_08020b9c:	.4byte 0x0000FFFF
_08020ba0:	.4byte 0x080e4ba8
_08020ba4:	.4byte 0x080f66e0
_08020ba8:	.4byte 0x0203EBB8
_08020bac:	.4byte 0x000001F5
_08020bb0:	.4byte 0x000005CC
_08020bb4:	.4byte 0x06012200
_08020bb8:	.4byte 0x80000100
_08020bbc:	.4byte 0x080f66f0
_08020bc0:	.4byte 0x080f65f0
	thumb_func_end sub_08020a74

	thumb_func_start sub_08020bc4
sub_08020bc4:
	push	{ r4, r5, r6, r7, lr }
	ldr		r0, _08020c88
	ldr		r1, [r0, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r2, r1, r0
	ldrh	r0, [r2, #0x10]
	add		r0, #0x1
	strh	r0, [r2, #0x10]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x80
	bgt		_08020c94
	mov		r1, #0x10
	ldrsh	r0, [r2, r1]
	ldr		r6, _08020c8c
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08020bee
	add		r0, #0x3f
_08020bee:
	asr		r0, r0, #0x6
	mov		r5, #0x80
	lsl		r5, r5, #0x1
	sub		r0, r5, r0
	ldr		r4, _08020c90
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r1, [r0, #0x0]
	mov		r3, #0x12
	ldrsh	r0, [r2, r3]
	mov		r7, #0x18
	mov		r12, r7
	mov		r3, r12
	sub		r0, r3, r0
	mov		r3, #0x80
	lsl		r3, r3, #0x8
	sub		r1, r3, r1
	mul		r0, r1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x10
	ldrh	r7, [r2, #0x12]
	add		r0, r0, r7
	strh	r0, [r2, #0x4]
	mov		r1, #0x10
	ldrsh	r0, [r2, r1]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08020c2e
	add		r0, #0x3f
_08020c2e:
	asr		r0, r0, #0x6
	sub		r0, r5, r0
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r1, [r0, #0x0]
	mov		r7, #0x14
	ldrsh	r0, [r2, r7]
	mov		r7, r12
	sub		r0, r7, r0
	sub		r1, r3, r1
	mul		r0, r1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x10
	ldrh	r1, [r2, #0x14]
	add		r0, r0, r1
	strh	r0, [r2, #0x6]
	mov		r7, #0x10
	ldrsh	r0, [r2, r7]
	lsl		r0, r0, #0x19
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08020c60
	add		r0, #0x3f
_08020c60:
	asr		r0, r0, #0x6
	sub		r0, r5, r0
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r1, [r0, #0x0]
	sub		r1, r3, r1
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	neg		r0, r0
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x10
	add		r0, r0, r5
	strh	r0, [r2, #0xa]
	strh	r0, [r2, #0x8]
	mov		r0, #0x0
	b		_08020c9e

.incbin "base.gba", 0x20C86, 0x2

_08020c88:	.4byte 0x0203EBCC
_08020c8c:	.4byte 0x08101068
_08020c90:	.4byte 0x000003FF

_08020c94:
	mov		r0, #0x1
	str		r0, [r1, #0x4]
	mov		r0, #0x0
	strh	r0, [r2, #0x10]
	mov		r0, #0x1
_08020c9e:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08020bc4

	thumb_func_start sub_08020ca4
sub_08020ca4:
	push	{ r4, r5, lr }
	ldr		r5, _08020d1c
	ldr		r4, [r5, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	ldr		r0, _08020d20
	str		r0, [r1, #0x0]
	mov		r2, #0x0
	mov		r3, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0xa]
	strh	r0, [r1, #0x8]
	strh	r3, [r1, #0x10]
	mov		r0, #0x18
	strh	r0, [r1, #0x4]
	strh	r0, [r1, #0x6]
	mov		r1, #0xfa
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	strb	r2, [r0, #0x0]
	add		r1, #0x1
	add		r0, r4, r1
	strb	r2, [r0, #0x0]
	add		r1, #0x1
	add		r0, r4, r1
	strb	r2, [r0, #0x0]
	ldr		r4, [r5, #0x0]
	ldr		r0, _08020d24
	ldr		r1, _08020d28
	add		r4, r4, r1
	ldr		r1, [r4, #0x0]
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		sub_08029f34
	ldr		r1, [r4, #0x0]
	ldr		r2, _08020d2c
	ldr		r3, _08020d30
	bl		sub_08029ee4
	mov		r3, #0x0
	mov		r2, #0x92
	lsl		r2, r2, #0x2
	mov		r1, #0x1f
_08020d00:
	ldr		r0, [r5, #0x0]
	add		r0, r0, r2
	strb	r3, [r0, #0x19]
	add		r2, #0x1c
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08020d00
	mov		r1, #0x0
	ldr		r0, _08020d34
	str		r1, [r0, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x20D1A, 0x2

_08020d1c:	.4byte 0x0203EBCC
_08020d20:	.4byte 0x080e4bd8
_08020d24:	.4byte 0x080dcb24
_08020d28:	.4byte 0x000005D4
_08020d2c:	.4byte 0x06012000
_08020d30:	.4byte 0x80000010
_08020d34:	.4byte 0x0203EBD4

.incbin "base.gba", 0x20D38, 0x1C98
_080229d0:	.4byte 0x08022a14

.incbin "base.gba", 0x229D4, 0x40
	thumb_func_end sub_08020ca4


.incbin "base.gba", 0x22A14, 0xC4

_08022ad8:

.incbin "base.gba", 0x22AD8, 0x9C

_08022b74:

.incbin "base.gba", 0x22B74, 0x10
_08022b84:

.incbin "base.gba", 0x22B84, 0x10
_08022b94:

.incbin "base.gba", 0x22B94, 0x14
_08022ba8:

.incbin "base.gba", 0x22BA8, 0x458
_08023000:	.4byte RunGameLogic_CallBack
_08023004:	.4byte 0x00000848
_08023008:	.4byte 0x00000BC8

.incbin "base.gba", 0x2300C, 0x14
	thumb_func_start sub_08023020
sub_08023020:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	mov		r8, r0
	str		r1, [sp, #0x0]
	add		r7, r2, #0x0
	mov		r9, r3
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	mov		r10, r0
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	mov		r12, r0
	mov		r0, #0x0
	cmp		r0, r9
	bge		_080230a0
_08023052:
	add		r1, r0, #0x1
	str		r1, [sp, #0x4]
	cmp		r7, #0x0
	ble		_0802309a
	ldr		r6, [sp, #0x0]
	add		r0, r6, r0
	ldr		r1, [sp, #0x4+0x28]
	add		r5, r0, r1
	lsl		r2, r5, #0x5
	lsl		r0, r0, #0x5
	add		r0, r8
	ldr		r1, [sp, #0x0+0x28]
	add		r1, r8
	add		r2, r1, r2
	add		r4, r7, #0x0
	lsl		r2, r2, #0x1
	add		r2, r10
	lsl		r0, r0, #0x1
	mov		r6, r12
	add		r3, r0, r6
_0802307a:
	cmp		r1, #0x0
	blt		_0802308e
	cmp		r5, #0x0
	blt		_0802308e
	cmp		r1, #0x1d
	bgt		_0802308e
	cmp		r5, #0x13
	bgt		_0802308e
	ldrh	r0, [r3, #0x0]
	strh	r0, [r2, #0x0]
_0802308e:
	add		r3, #0x2
	add		r2, #0x2
	add		r1, #0x1
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0802307a
_0802309a:
	ldr		r0, [sp, #0x4]
	cmp		r0, r9
	blt		_08023052
_080230a0:
	mov		r0, #0x1
	bl		sub_080281fc
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x230B6, 0x1BA
	thumb_func_end sub_08023020

	thumb_func_start sub_08023270
sub_08023270:
	push	{ r4, lr }
	ldr		r0, _080232b0
	ldr		r0, [r0, #0x0]
	mov		r1, #0xee
	lsl		r1, r1, #0x1
	add		r4, r0, r1
	ldrh	r0, [r4, #0x10]
	add		r0, #0x1
	strh	r0, [r4, #0x10]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x20
	bgt		_080232b4
	mov		r1, #0x10
	ldrsh	r0, [r4, r1]
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r0, r1, #0x5
	add		r1, r1, r0
	cmp		r1, #0x0
	bge		_0802329c
	add		r1, #0x1f
_0802329c:
	asr		r1, r1, #0x5
	add		r1, #0x1
	mov		r0, #0xc8
	lsl		r0, r0, #0x7
	bl		sub_0807d80c
	strh	r0, [r4, #0xa]
	strh	r0, [r4, #0x8]
	mov		r0, #0x0
	b		_080232ba

_080232b0:	.4byte 0x0203EBCC

_080232b4:
	mov		r0, #0x0
	strh	r0, [r4, #0x10]
	mov		r0, #0x1
_080232ba:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x232C0, 0x270
	thumb_func_end sub_08023270

	thumb_func_start sub_08023530
sub_08023530:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r7, r0, #0x0
	mov		r10, r1
	str		r2, [sp, #0x0]
	cmp		r3, #0x0
	beq		_080235a0
	mov		r3, #0x0
	mov		r2, #0x0
	ldr		r0, _08023564
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	blt		_080235a0
	cmp		r0, #0x1
	ble		_08023568
	cmp		r0, #0x2
	beq		_08023580
	b		_080235a0

.incbin "base.gba", 0x23562, 0x2

_08023564:	.4byte RunGameLogic_CallBack

_08023568:
	ldr		r0, [sp, #0x0]
	ldr		r1, [r0, #0x4]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08023596
_08023572:
	add		r3, #0x1
	add		r2, #0x2
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08023572
	b		_08023596
_08023580:
	ldr		r0, [sp, #0x0]
	ldr		r1, [r0, #0x8]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08023596
_0802358a:
	add		r3, #0x1
	add		r2, #0x1
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0802358a
_08023596:
	mov		r0, #0x1b
	sub		r0, r0, r3
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r7, r0, #0x1
_080235a0:
	ldr		r0, _08023628
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bgt		_08023632
	cmp		r0, #0x0
	blt		_08023632
	ldr		r2, [sp, #0x0]
	ldrb	r4, [r2, #0x0]
	cmp		r4, #0xff
	beq		_08023630
	mov		r0, #0x0
	add		r1, r7, #0x0
	mov		r2, r10
	bl		sub_080281b0
	ldr		r6, _0802362c
	lsl		r1, r4, #0x3
	add		r1, r1, r6
	ldrh	r1, [r1, #0x0]
	mov		r2, #0xd0
	lsl		r2, r2, #0x8
	add		r5, r2, #0x0
	orr		r1, r5
	strh	r1, [r0, #0x0]
	add		r0, r7, #0x1
	mov		r9, r0
	mov		r0, #0x0
	mov		r1, r9
	mov		r2, r10
	bl		sub_080281b0
	lsl		r4, r4, #0x2
	add		r1, r4, #0x1
	lsl		r1, r1, #0x1
	add		r1, r1, r6
	ldrh	r1, [r1, #0x0]
	orr		r1, r5
	strh	r1, [r0, #0x0]
	mov		r1, #0x1
	add		r1, r10
	mov		r8, r1
	mov		r0, #0x0
	add		r1, r7, #0x0
	mov		r2, r8
	bl		sub_080281b0
	add		r1, r4, #0x2
	lsl		r1, r1, #0x1
	add		r1, r1, r6
	ldrh	r1, [r1, #0x0]
	orr		r1, r5
	strh	r1, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, r9
	mov		r2, r8
	bl		sub_080281b0
	add		r4, #0x3
	lsl		r4, r4, #0x1
	add		r4, r4, r6
	ldrh	r1, [r4, #0x0]
	orr		r1, r5
	strh	r1, [r0, #0x0]
	add		r7, #0x3
	b		_08023632

_08023628:	.4byte RunGameLogic_CallBack
_0802362c:	.4byte 0x080f70e8

_08023630:
	add		r7, #0x1
_08023632:
	ldr		r0, _08023650
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08023642
	b		_080237ba
_08023642:
	cmp		r0, #0x1
	ble		_08023654
	cmp		r0, #0x2
	bne		_0802364c
	b		_08023750
_0802364c:
	b		_080237ba

.incbin "base.gba", 0x2364E, 0x2

_08023650:	.4byte RunGameLogic_CallBack

_08023654:
	mov		r6, #0x0
	mov		r8, r6
	ldr		r0, [sp, #0x0]
	ldr		r1, [r0, #0x4]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08023664
	b		_080237ba
_08023664:
	add		r1, r1, r6
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x8
	ldrb	r1, [r1, #0x1]
	orr		r1, r0
	ldr		r2, _08023680
	add		r0, r1, r2
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x4f
	bhi		_08023688
	ldr		r2, _08023684
	add		r1, r0, #0x0
	b		_080236fc

_08023680:	.4byte 0x00007EC0
_08023684:	.4byte 0x080f6f16

_08023688:
	ldr		r2, _0802369c
	add		r0, r1, r2
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x19
	bhi		_080236a4
	ldr		r2, _080236a0
	add		r1, r0, #0x0
	b		_080236fc

.incbin "base.gba", 0x2369A, 0x2

_0802369c:	.4byte 0x00007DA0
_080236a0:	.4byte 0x080f6fda

_080236a4:
	ldr		r2, _080236b8
	add		r0, r1, r2
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x19
	bhi		_080236c0
	ldr		r2, _080236bc
	add		r1, r0, #0x0
	b		_080236fc

.incbin "base.gba", 0x236B6, 0x2

_080236b8:	.4byte 0x00007D7F
_080236bc:	.4byte 0x080f700e

_080236c0:
	ldr		r2, _080236d4
	add		r0, r1, r2
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x52
	bhi		_080236dc
	ldr		r2, _080236d8
	add		r1, r0, #0x0
	b		_080236fc

.incbin "base.gba", 0x236D2, 0x2

_080236d4:	.4byte 0x00007D61
_080236d8:	.4byte 0x080f7042

_080236dc:
	ldr		r2, _080236f0
	add		r0, r1, r2
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x9
	bhi		_080236f8
	ldr		r2, _080236f4
	add		r1, r0, #0x0
	b		_080236fc

.incbin "base.gba", 0x236EE, 0x2

_080236f0:	.4byte 0x00007DB1
_080236f4:	.4byte 0x080f6fc6

_080236f8:
	ldr		r2, _08023748
	mov		r1, #0x0
_080236fc:
	lsl		r0, r1, #0x1
	add		r0, r0, r2
	ldrh	r4, [r0, #0x0]
	mov		r0, r8
	add		r5, r7, r0
	mov		r0, #0x0
	add		r1, r5, #0x0
	mov		r2, r10
	bl		sub_080281b0
	mov		r1, #0xe0
	lsl		r1, r1, #0x8
	add		r2, r1, #0x0
	add		r1, r4, #0x0
	orr		r1, r2
	strh	r1, [r0, #0x0]
	mov		r0, #0x0
	add		r1, r5, #0x0
	mov		r2, r10
	add		r2, #0x1
	bl		sub_080281b0
	add		r4, #0x20
	ldr		r2, _0802374c
	add		r1, r2, #0x0
	orr		r4, r1
	strh	r4, [r0, #0x0]
	mov		r0, #0x1
	add		r8, r0
	add		r6, #0x2
	ldr		r2, [sp, #0x0]
	ldr		r1, [r2, #0x4]
	add		r0, r1, r6
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08023664
	b		_080237ba

.incbin "base.gba", 0x23746, 0x2

_08023748:	.4byte 0x080f6f16
_0802374c:	.4byte 0xFFFFE000

_08023750:
	mov		r6, #0x0
	mov		r8, r6
	ldr		r0, [sp, #0x0]
	ldr		r1, [r0, #0x8]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_080237ba
_0802375e:
	add		r0, r1, r6
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x20
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	mov		r0, #0x0
	cmp		r1, #0x5e
	bhi		_08023770
	add		r0, r1, #0x0
_08023770:
	ldr		r1, _080237cc
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrh	r4, [r0, #0x0]
	mov		r1, r8
	add		r5, r7, r1
	mov		r0, #0x0
	add		r1, r5, #0x0
	mov		r2, r10
	bl		sub_080281b0
	mov		r1, #0xe0
	lsl		r1, r1, #0x8
	add		r2, r1, #0x0
	add		r1, r4, #0x0
	orr		r1, r2
	strh	r1, [r0, #0x0]
	mov		r0, #0x0
	add		r1, r5, #0x0
	mov		r2, r10
	add		r2, #0x1
	bl		sub_080281b0
	add		r4, #0x20
	ldr		r2, _080237d0
	add		r1, r2, #0x0
	orr		r4, r1
	strh	r4, [r0, #0x0]
	mov		r0, #0x1
	add		r8, r0
	add		r6, #0x1
	ldr		r2, [sp, #0x0]
	ldr		r1, [r2, #0x8]
	add		r0, r1, r6
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0802375e
_080237ba:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x237CA, 0x2

_080237cc:	.4byte 0x080f6e58
_080237d0:	.4byte 0xFFFFE000
	thumb_func_end sub_08023530

	thumb_func_start sub_080237d4
sub_080237d4:
	push	{ r4, lr }
	sub		sp, #0x4
	ldr		r2, _08023810
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	ldr		r2, [r0, #0x0]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	ldr		r1, [r2, #0xc]
	add		r4, r1, r0
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0x10
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r2, _08023814
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
	ldrb	r0, [r4, #0x2]
	cmp		r0, #0x1
	beq		_08023830
	cmp		r0, #0x1
	bgt		_08023818
	cmp		r0, #0x0
	beq		_08023822
	b		_080238c6

_08023810:	.4byte _080f8a74
_08023814:	.4byte 0x01000040

_08023818:
	cmp		r0, #0x2
	beq		_08023870
	cmp		r0, #0x3
	beq		_08023896
	b		_080238c6
_08023822:
	ldr		r2, [r4, #0x4]
	mov		r0, #0xa
	mov		r1, #0x11
	mov		r3, #0x1
	bl		sub_08023530
	b		_080238c6
_08023830:
	ldr		r0, _08023848
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	blt		_080238c6
	cmp		r0, #0x1
	ble		_0802384c
	cmp		r0, #0x2
	beq		_0802385e
	b		_080238c6

_08023848:	.4byte RunGameLogic_CallBack

_0802384c:
	ldr		r2, [r4, #0x4]
	mov		r0, #0x4
	mov		r1, #0x10
	mov		r3, #0x0
	bl		sub_08023530
	ldr		r2, [r4, #0x8]
	mov		r0, #0xe
	b		_0802388c
_0802385e:
	ldr		r2, [r4, #0x4]
	mov		r0, #0x1
	mov		r1, #0x10
	mov		r3, #0x0
	bl		sub_08023530
	ldr		r2, [r4, #0x8]
	mov		r0, #0x8
	b		_0802388c
_08023870:
	ldr		r2, [r4, #0x4]
	mov		r0, #0xa
	mov		r1, #0x10
	mov		r3, #0x0
	bl		sub_08023530
	ldr		r2, [r4, #0x8]
	mov		r0, #0x4
	mov		r1, #0x12
	mov		r3, #0x0
	bl		sub_08023530
	ldr		r2, [r4, #0xc]
	mov		r0, #0x10
_0802388c:
	mov		r1, #0x12
	mov		r3, #0x0
	bl		sub_08023530
	b		_080238c6
_08023896:
	ldr		r2, [r4, #0x4]
	mov		r0, #0x2
	mov		r1, #0x10
	mov		r3, #0x0
	bl		sub_08023530
	ldr		r2, [r4, #0x8]
	mov		r0, #0xe
	mov		r1, #0x10
	mov		r3, #0x0
	bl		sub_08023530
	ldr		r2, [r4, #0xc]
	mov		r0, #0x6
	mov		r1, #0x12
	mov		r3, #0x0
	bl		sub_08023530
	ldr		r2, [r4, #0x10]
	mov		r0, #0x12
	mov		r1, #0x12
	mov		r3, #0x0
	bl		sub_08023530
_080238c6:
	add		sp, #0x4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x238CE, 0x242

_08023b10:	.4byte 0x08023b40

.incbin "base.gba", 0x23B14, 0x2C
	thumb_func_end sub_080237d4


.incbin "base.gba", 0x23B40, 0x980
_080244c0:	.4byte 0x08024548

.incbin "base.gba", 0x244C4, 0x3FC
_080248c0:	.4byte 0x08024ae0

.incbin "base.gba", 0x248C4, 0xE84
	thumb_func_start sub_08025748
sub_08025748:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	ldr		r0, _08025784
	ldr		r2, [r0, #0x0]
	ldr		r3, [r5, #0x68]
	ldr		r1, _08025788
	ldr		r4, [r2, #0x8]
	lsl		r0, r4, #0x3
	add		r1, #0x4
	add		r0, r0, r1
	ldr		r6, [r0, #0x0]
	mov		r1, #0x0
	cmp		r4, #0xe
	bgt		_08025790
	mov		r7, #0xa1
	lsl		r7, r7, #0x2
	add		r0, r2, r7
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080257a0
	add		r3, #0x1
	cmp		r3, r6
	ble		_0802578c
	str		r1, [r2, #0xc]
	add		r0, r4, #0x1
	str		r0, [r2, #0x8]
	mov		r0, #0x1
	str		r0, [r5, #0x68]
	b		_0802579e

.incbin "base.gba", 0x25782, 0x2

_08025784:	.4byte 0x0203EBD8
_08025788:	.4byte _080f8a74

_0802578c:
	str		r3, [r5, #0x68]
	b		_080257a0
_08025790:
	mov		r3, #0xa1
	lsl		r3, r3, #0x2
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080257a0
	str		r1, [r5, #0x68]
_0802579e:
	mov		r1, #0x1
_080257a0:
	add		r0, r1, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08025748

	thumb_func_start sub_080257a8
sub_080257a8:
	push	{ r4, r5, lr }
	sub		sp, #0x8
	ldr		r0, _08025804
	ldr		r0, [r0, #0x0]
	mov		r1, #0xcf
	lsl		r1, r1, #0x4
	add		r0, r0, r1
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	str		r4, [sp, #0x0]
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r5, _08025808
	mov		r0, sp
	add		r2, r5, #0x0
	bl		_CallHardwareSetCpuFast
	str		r4, [sp, #0x4]
	add		r4, sp, #0x4
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x3
	bl		sub_080281fc
	ldr		r0, _0802580c
	mov		r1, #0x11
	ldr		r2, _08025810
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	add		sp, #0x8
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x25802, 0x2

_08025804:	.4byte 0x0203EBD8
_08025808:	.4byte 0x01000200
_0802580c:	.4byte RunGameLogic_CallBack
_08025810:	.4byte 0x00000C08

.incbin "base.gba", 0x25814, 0x284
	thumb_func_end sub_080257a8

	thumb_func_start sub_08025a98
sub_08025a98:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r1, _08025ad8
	add		r0, r4, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x0
	bne		_08025b5e
	ldr		r2, _08025adc
	add		r0, r4, r2
	strb	r1, [r0, #0x0]
	ldr		r1, _08025ae0
	add		r0, r4, r1
	ldrh	r2, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	beq		_08025b20
	cmp		r1, r0
	bgt		_08025ae4
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_08025aee
	b		_08025b4c

.incbin "base.gba", 0x25AD6, 0x2

_08025ad8:	.4byte 0x000007D4
_08025adc:	.4byte 0x000007D6
_08025ae0:	.4byte 0x000007DA

_08025ae4:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_08025b44
	b		_08025b4c
_08025aee:
	mov		r0, #0x10
	and		r0, r2
	cmp		r0, #0x0
	beq		_08025b08
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r2
	cmp		r0, #0x0
	beq		_08025b4c
	ldr		r1, _08025b04
	b		_08025b4e

_08025b04:	.4byte 0x080f8b58

_08025b08:
	bl		sub_08002c30
	cmp		r0, #0x0
	beq		_08025b18
	ldr		r1, _08025b14
	b		_08025b4e

_08025b14:	.4byte 0x080f8b00

_08025b18:
	ldr		r1, _08025b1c
	b		_08025b4e

_08025b1c:	.4byte 0x080f8b10

_08025b20:
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r2
	cmp		r0, #0x0
	beq		_08025b4c
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r2
	cmp		r0, #0x0
	beq		_08025b3c
	ldr		r1, _08025b38
	b		_08025b4e

_08025b38:	.4byte 0x080f8b44

_08025b3c:
	ldr		r1, _08025b40
	b		_08025b4e

_08025b40:	.4byte 0x080f8b58

_08025b44:
	ldr		r1, _08025b48
	b		_08025b4e

_08025b48:	.4byte 0x080f8b34

_08025b4c:
	ldr		r1, _08025b64
_08025b4e:
	ldr		r0, _08025b68
	str		r1, [r0, #0x0]
	ldr		r0, _08025b6c
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x40
	orr		r0, r1
	strb	r0, [r2, #0x0]
_08025b5e:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08025b64:	.4byte 0x080f8b24
_08025b68:	.4byte 0x03002FF8
_08025b6c:	.4byte 0x000007D4
	thumb_func_end sub_08025a98

	thumb_func_start sub_08025b70
sub_08025b70:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x44
	str		r0, [sp, #0x4]
	mov		r0, #0x1
	str		r0, [sp, #0x8]
	ldr		r1, [sp, #0x4]
	ldr		r2, _08025ba0
	add		r5, r1, r2
	ldrb	r4, [r5, #0x0]
	cmp		r4, #0x2
	bne		_08025b90
	b		_08025f70
_08025b90:
	cmp		r4, #0x2
	bgt		_08025ba4
	cmp		r4, #0x0
	beq		_08025bb2
	cmp		r4, #0x1
	beq		_08025c28
	b		_080262dc

.incbin "base.gba", 0x25B9E, 0x2

_08025ba0:	.4byte 0x000007D6

_08025ba4:
	cmp		r4, #0x3
	bne		_08025baa
	b		_080261ec
_08025baa:
	cmp		r4, #0x64
	bne		_08025bb0
	b		_080261fa
_08025bb0:
	b		_080262dc
_08025bb2:
	ldr		r0, _08025c10
	strh	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	ldr		r1, _08025c14
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	bl		_CallHardwareSetCpuFast
	str		r4, [sp, #0x0]
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r2, _08025c18
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x2
	bl		sub_080281fc
	bl		sub_0802667c
	ldr		r3, _08025c1c
	ldr		r2, _08025c20
	mov		r6, #0xd5
	lsl		r6, r6, #0x2
	add		r0, r2, r6
	ldrh	r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	mov		r7, #0x8e
	lsl		r7, r7, #0x3
	add		r2, r2, r7
	ldr		r1, [r2, #0x0]
	bl		sub_08070e28
	ldr		r0, _08025c24
	strh	r4, [r0, #0x0]
	b		_080261f2

.incbin "base.gba", 0x25C0E, 0x2

_08025c10:	.4byte 0x03000190
_08025c14:	.4byte 0x02004000
_08025c18:	.4byte 0x01000140
_08025c1c:	.4byte 0x08124544
_08025c20:	.4byte 0x081245c8
_08025c24:	.4byte 0x03000192

_08025c28:
	ldr		r2, _08025cb4
	mov		r0, #0x0
	ldrsh	r3, [r2, r0]
	cmp		r3, #0x0
	beq		_08025c34
	b		_08025d88
_08025c34:
	ldr		r2, _08025cb8
	ldrh	r0, [r2, #0x0]
	strh	r3, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	mov		r3, #0xc0
	lsl		r3, r3, #0x3
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r4, #0x0
	bl		sub_08027788
	cmp		r0, #0x0
	beq		_08025c58
	bl		sub_080277b4
	cmp		r0, #0x0
	bne		_08025c5a
_08025c58:
	mov		r4, #0x1
_08025c5a:
	cmp		r4, #0x0
	beq		_08025d30
	ldr		r6, [sp, #0x4]
	ldr		r7, _08025cbc
	add		r5, r6, r7
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08025ce4
	bl		sub_08029f34
	ldr		r1, _08025cc0
	mov		r2, #0xc0
	lsl		r2, r2, #0x13
	ldr		r3, _08025cc4
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _08025cc8
	ldr		r2, _08025ccc
	ldr		r4, _08025cd0
	add		r3, r4, #0x0
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _08025cd4
	ldr		r2, _08025cd8
	add		r3, r4, #0x0
	bl		sub_08029ee4
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	beq		_08025d4e
	bl		sub_08029f34
	ldr		r1, _08025cdc
	ldr		r2, _08025ce0
	b		_08025d0c

_08025cb4:	.4byte 0x03000192
_08025cb8:	.4byte BG0Control
_08025cbc:	.4byte 0x000007DA
_08025cc0:	.4byte 0x080c6b0c
_08025cc4:	.4byte 0x80000400
_08025cc8:	.4byte 0x080c768c
_08025ccc:	.4byte 0x06000800
_08025cd0:	.4byte 0x800000E0
_08025cd4:	.4byte 0x080c784c
_08025cd8:	.4byte 0x060009C0
_08025cdc:	.4byte 0x080c7a0c
_08025ce0:	.4byte 0x06000080

_08025ce4:
	bl		sub_08029f34
	ldr		r1, _08025d14
	mov		r2, #0xc0
	lsl		r2, r2, #0x13
	ldr		r3, _08025d18
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _08025d1c
	ldr		r2, _08025d20
	ldr		r4, _08025d24
	add		r3, r4, #0x0
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _08025d28
	ldr		r2, _08025d2c
_08025d0c:
	add		r3, r4, #0x0
	bl		sub_08029ee4
	b		_08025d4e

_08025d14:	.4byte 0x080c6b0c
_08025d18:	.4byte 0x80000400
_08025d1c:	.4byte 0x080c730c
_08025d20:	.4byte 0x06000800
_08025d24:	.4byte 0x800000E0
_08025d28:	.4byte 0x080c93cc
_08025d2c:	.4byte 0x060009C0

_08025d30:
	bl		sub_08029f34
	ldr		r1, _08025d70
	mov		r2, #0xc0
	lsl		r2, r2, #0x13
	ldr		r3, _08025d74
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _08025d78
	ldr		r2, _08025d7c
	ldr		r3, _08025d80
	bl		sub_08029ee4
_08025d4e:
	ldr		r4, _08025d84
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r0, #0xe0
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x10
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	b		_080262d4

.incbin "base.gba", 0x25D6E, 0x2

_08025d70:	.4byte 0x080c6b0c
_08025d74:	.4byte 0x80000230
_08025d78:	.4byte 0x080c958c
_08025d7c:	.4byte 0x06000080
_08025d80:	.4byte 0x800000E0
_08025d84:	.4byte 0x080c69c0

_08025d88:
	ldr		r0, _08025e2c
	ldr		r1, [r0, #0x0]
	ldrb	r0, [r1, #0x2]
	lsr		r0, r0, #0x1
	mov		r10, r0
	ldrb	r0, [r1, #0x3]
	lsr		r0, r0, #0x1
	mov		r9, r0
	ldrb	r0, [r1, #0x0]
	add		r0, r10
	str		r0, [sp, #0xC]
	ldrb	r0, [r1, #0x1]
	add		r0, r9
	str		r0, [sp, #0x10]
	cmp		r3, #0x8
	ble		_08025daa
	b		_08025eb8
_08025daa:
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	mov		r0, r10
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08025db8
	add		r0, #0x7
_08025db8:
	asr		r2, r0, #0x3
	mov		r0, r9
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08025dc4
	add		r0, #0x7
_08025dc4:
	mov		r8, r2
	asr		r7, r0, #0x3
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	str		r0, [sp, #0x14]
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	str		r0, [sp, #0x18]
	cmp		r8, r10
	ble		_08025de6
	mov		r8, r10
_08025de6:
	cmp		r7, r9
	ble		_08025dec
	mov		r7, r9
_08025dec:
	mov		r5, #0x0
	lsl		r0, r7, #0x1
	cmp		r5, r0
	bge		_08025ea0
	mov		r6, r8
	lsl		r6, r6, #0x1
	str		r6, [sp, #0x30]
	str		r0, [sp, #0x24]
_08025dfc:
	mov		r4, #0x0
	add		r0, r5, #0x1
	str		r0, [sp, #0x34]
	ldr		r1, [sp, #0x30]
	cmp		r4, r1
	bge		_08025e98
	ldr		r2, [sp, #0xC]
	add		r2, r10
	str		r2, [sp, #0x1C]
	str		r1, [sp, #0x3C]
	ldr		r3, [sp, #0x10]
	add		r3, r9
	str		r3, [sp, #0x20]
	ldr		r6, [sp, #0x24]
	sub		r6, r5, r6
	mov		r12, r6
_08025e1c:
	cmp		r4, r8
	bge		_08025e30
	ldr		r1, [sp, #0xC]
	mov		r2, r10
	sub		r0, r1, r2
	add		r1, r0, r4
	b		_08025e38

.incbin "base.gba", 0x25E2A, 0x2

_08025e2c:	.4byte 0x03002FF8

_08025e30:
	ldr		r3, [sp, #0x3C]
	sub		r0, r4, r3
	ldr		r6, [sp, #0x1C]
	add		r1, r6, r0
_08025e38:
	cmp		r5, r7
	bge		_08025e46
	ldr		r2, [sp, #0x10]
	mov		r3, r9
	sub		r0, r2, r3
	add		r3, r0, r5
	b		_08025e4a
_08025e46:
	ldr		r3, [sp, #0x20]
	add		r3, r12
_08025e4a:
	cmp		r1, #0x0
	blt		_08025e90
	cmp		r3, #0x0
	blt		_08025e90
	cmp		r1, #0x1f
	bgt		_08025e90
	cmp		r3, #0x1f
	bgt		_08025e90
	ldr		r6, [sp, #0xC]
	mov		r2, r8
	sub		r0, r6, r2
	add		r2, r0, r4
	ldr		r6, [sp, #0x10]
	sub		r0, r6, r7
	add		r0, r0, r5
	cmp		r2, #0x0
	blt		_08025e90
	cmp		r0, #0x0
	blt		_08025e90
	cmp		r2, #0x1f
	bgt		_08025e90
	cmp		r0, #0x1f
	bgt		_08025e90
	lsl		r2, r2, #0x1
	lsl		r0, r0, #0x6
	ldr		r6, [sp, #0x14]
	add		r0, r0, r6
	add		r2, r2, r0
	lsl		r1, r1, #0x1
	lsl		r0, r3, #0x6
	ldr		r3, [sp, #0x18]
	add		r0, r0, r3
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
_08025e90:
	add		r4, #0x1
	ldr		r6, [sp, #0x3C]
	cmp		r4, r6
	blt		_08025e1c
_08025e98:
	ldr		r5, [sp, #0x34]
	ldr		r0, [sp, #0x24]
	cmp		r5, r0
	blt		_08025dfc
_08025ea0:
	mov		r0, #0x2
	bl		sub_080281fc
	ldr		r1, _08025eb4
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	bl		sub_080269a4
	b		_080262dc

_08025eb4:	.4byte 0x03000192

_08025eb8:
	ldr		r1, [sp, #0x4]
	ldr		r2, _08025ed4
	add		r0, r1, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x88
	lsl		r0, r0, #0x1
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	cmp		r0, r1
	bne		_08025f32
	mov		r7, #0x0
	b		_08025f24

.incbin "base.gba", 0x25ED2, 0x2

_08025ed4:	.4byte 0x000007DA

_08025ed8:
	lsl		r6, r7, #0x1
	mov		r5, #0x1b
	sub		r5, r5, r6
	mov		r0, #0x1
	add		r1, r5, #0x0
	mov		r2, #0x12
	bl		sub_080281b0
	ldr		r3, _08025f54
	add		r1, r3, #0x0
	strh	r1, [r0, #0x0]
	mov		r4, #0x1c
	sub		r4, r4, r6
	mov		r0, #0x1
	add		r1, r4, #0x0
	mov		r2, #0x12
	bl		sub_080281b0
	ldr		r6, _08025f58
	add		r1, r6, #0x0
	strh	r1, [r0, #0x0]
	mov		r0, #0x1
	add		r1, r5, #0x0
	mov		r2, #0x13
	bl		sub_080281b0
	ldr		r2, _08025f5c
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	mov		r0, #0x1
	add		r1, r4, #0x0
	mov		r2, #0x13
	bl		sub_080281b0
	ldr		r3, _08025f60
	add		r1, r3, #0x0
	strh	r1, [r0, #0x0]
	add		r7, #0x1
_08025f24:
	bl		sub_08002c30
	cmp		r7, r0
	blt		_08025ed8
	mov		r0, #0x2
	bl		sub_080281fc
_08025f32:
	ldr		r0, _08025f64
	mov		r6, #0x0
	ldrsh	r1, [r0, r6]
	ldr		r0, [sp, #0x4]
	bl		sub_08026a78
	ldr		r1, _08025f68
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r7, [sp, #0x4]
	ldr		r0, _08025f6c
	add		r1, r7, r0
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	b		_080262dc

.incbin "base.gba", 0x25F52, 0x2

_08025f54:	.4byte 0x0000B0A0
_08025f58:	.4byte 0x0000B0A1
_08025f5c:	.4byte 0x0000B0A2
_08025f60:	.4byte 0x0000B0A3
_08025f64:	.4byte 0x03000190
_08025f68:	.4byte 0x03000192
_08025f6c:	.4byte 0x000007D6

_08025f70:
	mov		r1, #0x0
	str		r1, [sp, #0x28]
	bl		sub_08027788
	cmp		r0, #0x0
	beq		_08025f84
	bl		sub_080277b4
	cmp		r0, #0x0
	bne		_08025f88
_08025f84:
	mov		r2, #0x1
	str		r2, [sp, #0x28]
_08025f88:
	ldr		r0, _0802608c
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x2C]
	mov		r0, #0x0
	bl		sub_08028130
	mov		r6, #0xe0
	lsl		r6, r6, #0x1
	add		r3, r0, r6
	ldr		r1, _08026090
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	mov		r7, #0x0
	ldrsh	r0, [r1, r7]
	ldr		r2, _08026094
	lsl		r0, r0, #0x1a
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08025fb2
	add		r0, #0x3f
_08025fb2:
	asr		r1, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r1
	ldr		r1, _08026098
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	sub		r0, r0, r1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	mov		r8, r0
	ldr		r0, _0802609c
	mov		r1, #0x1f
	mov		r9, r1
	mov		r6, #0x1f
	str		r3, [sp, #0x40]
	add		r2, r0, #0x0
	add		r2, #0x40
	str		r2, [sp, #0x38]
	mov		r12, r0
	mov		r3, #0xf
	mov		r10, r3
_08025fe8:
	mov		r7, r12
	ldrh	r1, [r7, #0x0]
	add		r2, r1, #0x0
	and		r2, r6
	lsr		r4, r1, #0x5
	mov		r0, r9
	and		r4, r0
	lsr		r1, r1, #0xa
	and		r1, r0
	ldr		r7, [sp, #0x38]
	ldrh	r3, [r7, #0x0]
	add		r0, r3, #0x0
	and		r0, r6
	lsr		r5, r3, #0x5
	mov		r7, r9
	and		r5, r7
	lsr		r3, r3, #0xa
	and		r3, r7
	sub		r0, r0, r2
	mov		r7, r8
	mul		r7, r0
	add		r0, r7, #0x0
	asr		r0, r0, #0xf
	add		r2, r2, r0
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	sub		r5, r5, r4
	mov		r0, r8
	mul		r0, r5
	asr		r0, r0, #0xf
	add		r4, r4, r0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	sub		r3, r3, r1
	mov		r0, r8
	mul		r0, r3
	asr		r0, r0, #0xf
	add		r1, r1, r0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	and		r2, r6
	and		r4, r6
	lsl		r4, r4, #0x5
	orr		r2, r4
	and		r1, r6
	lsl		r1, r1, #0xa
	orr		r2, r1
	ldr		r0, [sp, #0x40]
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	str		r0, [sp, #0x40]
	ldr		r1, [sp, #0x38]
	add		r1, #0x2
	str		r1, [sp, #0x38]
	mov		r2, #0x2
	add		r12, r2
	mov		r3, #0x1
	neg		r3, r3
	add		r10, r3
	mov		r7, r10
	cmp		r7, #0x0
	bge		_08025fe8
	mov		r0, #0x1
	bl		sub_08028168
	mov		r1, #0x40
	ldr		r0, _080260a0
	ldrh	r0, [r0, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_080260c4
	ldr		r1, _080260a4
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x0
	bne		_080260a8
	ldr		r6, [sp, #0x2C]
	ldrb	r0, [r6, #0x4]
	sub		r0, #0x1
	b		_080260aa

.incbin "base.gba", 0x2608A, 0x2

_0802608c:	.4byte 0x03002FF8
_08026090:	.4byte 0x03000192
_08026094:	.4byte 0x08101068
_08026098:	.4byte 0x000003FF
_0802609c:	.4byte 0x080c6a0c
_080260a0:	.4byte 0x03005220
_080260a4:	.4byte 0x03000190

_080260a8:
	sub		r0, r2, #0x1
_080260aa:
	strh	r0, [r1, #0x0]
	ldr		r7, [sp, #0x28]
	cmp		r7, #0x0
	beq		_080260c4
	mov		r0, #0x8d
	bl		sub_0807073c
	ldr		r0, _080260e4
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	ldr		r0, [sp, #0x4]
	bl		sub_08026a78
_080260c4:
	mov		r1, #0x80
	ldr		r0, _080260e8
	ldrh	r0, [r0, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802610a
	ldr		r1, _080260e4
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	add		r0, #0x1
	ldr		r6, [sp, #0x2C]
	ldrb	r6, [r6, #0x4]
	cmp		r0, r6
	blt		_080260ec
	mov		r0, #0x0
	b		_080260f0

_080260e4:	.4byte 0x03000190
_080260e8:	.4byte 0x03005220

_080260ec:
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
_080260f0:
	strh	r0, [r1, #0x0]
	ldr		r7, [sp, #0x28]
	cmp		r7, #0x0
	beq		_0802610a
	mov		r0, #0x8d
	bl		sub_0807073c
	ldr		r0, _08026138
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	ldr		r0, [sp, #0x4]
	bl		sub_08026a78
_0802610a:
	mov		r1, #0x9
	ldr		r0, _0802613c
	ldrh	r0, [r0, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	bne		_08026118
	b		_080262dc
_08026118:
	ldr		r0, _08026138
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	ldr		r6, [sp, #0x2C]
	ldr		r0, [r6, #0x8]
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x8
	bls		_0802612c
	b		_080262dc
_0802612c:
	lsl		r0, r0, #0x2
	ldr		r1, _08026140
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x26136, 0x2

_08026138:	.4byte 0x03000190
_0802613c:	.4byte 0x03005220
_08026140:	.4byte 0x08026144
_08026144:	.4byte 0x08026168

.incbin "base.gba", 0x26148, 0x20
	thumb_func_end sub_08025b70


.incbin "base.gba", 0x26168, 0x84

_080261ec:

.incbin "base.gba", 0x261EC, 0x6
_080261f2:

.incbin "base.gba", 0x261F2, 0x8
_080261fa:

.incbin "base.gba", 0x261FA, 0x62
_0802625c:	.4byte 0x03000192

_08026260:

.incbin "base.gba", 0x26260, 0x52
_080262b2:

.incbin "base.gba", 0x262B2, 0xA
_080262bc:	.4byte 0x0000B0A0
_080262c0:	.4byte 0x0000B0A1
_080262c4:	.4byte 0x0000B0A2
_080262c8:	.4byte 0x0000B0A3

_080262cc:

.incbin "base.gba", 0x262CC, 0x8
_080262d4:

.incbin "base.gba", 0x262D4, 0x8
_080262dc:

.incbin "base.gba", 0x262DC, 0x14
_080262f0:	.4byte 0x03000192
	thumb_func_start sub_080262f4
sub_080262f4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, #0x1
	ldr		r0, _08026314
	add		r6, r0, #0x0
	add		r6, #0x24
	ldr		r0, _08026318
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x8
	bls		_0802630a
	b		_0802643a
_0802630a:
	lsl		r0, r0, #0x2
	ldr		r1, _0802631c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08026314:	.4byte RunGameLogic_CallBack
_08026318:	.4byte 0x03000196
_0802631c:	.4byte 0x08026320
_08026320:	.4byte 0x08026344

.incbin "base.gba", 0x26324, 0x20
	thumb_func_end sub_080262f4


.incbin "base.gba", 0x26344, 0xF6

_0802643a:

.incbin "base.gba", 0x2643A, 0x242
	thumb_func_start sub_0802667c
sub_0802667c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	ldr		r0, _08026908
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x0]
	ldrb	r6, [r0, #0x0]
	ldrb	r0, [r0, #0x1]
	mov		r9, r0
	ldr		r1, [sp, #0x0]
	ldrb	r1, [r1, #0x2]
	mov		r10, r1
	ldr		r2, [sp, #0x0]
	ldrb	r7, [r2, #0x3]
	mov		r0, #0x0
	str		r0, [sp, #0x4]
	bl		sub_08027788
	cmp		r0, #0x0
	beq		_080266b2
	bl		sub_080277b4
	cmp		r0, #0x0
	bne		_080266b6
_080266b2:
	mov		r1, #0x1
	str		r1, [sp, #0x4]
_080266b6:
	ldr		r2, [sp, #0x4]
	cmp		r2, #0x0
	bne		_080266ce
	add		r6, #0x1
	mov		r0, #0x9
	mov		r10, r0
	sub		r0, r7, #0x4
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r9, r0
	mov		r7, #0x4
_080266ce:
	mov		r1, #0x0
	mov		r8, r1
	mov		r0, #0x0
	add		r1, r6, #0x0
	mov		r2, r9
	bl		sub_080281b0
	ldr		r2, _0802690c
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	add		r4, r6, #0x1
	mov		r0, #0x0
	add		r1, r4, #0x0
	mov		r2, r9
	bl		sub_080281b0
	ldr		r2, _08026910
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	mov		r5, #0x2
	str		r4, [sp, #0xC]
	mov		r0, r10
	sub		r0, #0x2
	str		r0, [sp, #0x8]
	mov		r1, #0x1
	neg		r1, r1
	add		r10, r1
	sub		r2, r7, #0x2
	str		r2, [sp, #0x10]
	cmp		r5, r0
	bge		_08026726
	ldr		r0, _08026914
	add		r4, r0, #0x0
_08026710:
	add		r1, r6, r5
	mov		r0, #0x0
	mov		r2, r9
	add		r2, r8
	bl		sub_080281b0
	strh	r4, [r0, #0x0]
	add		r5, #0x1
	ldr		r1, [sp, #0x8]
	cmp		r5, r1
	blt		_08026710
_08026726:
	add		r1, r6, r5
	mov		r4, r9
	add		r4, r8
	mov		r0, #0x0
	add		r2, r4, #0x0
	bl		sub_080281b0
	ldr		r2, _08026918
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	add		r5, #0x1
	add		r1, r6, r5
	mov		r0, #0x0
	add		r2, r4, #0x0
	bl		sub_080281b0
	ldr		r2, _0802691c
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	mov		r0, #0x1
	add		r8, r0
	mov		r2, r9
	add		r2, r8
	mov		r0, #0x0
	add		r1, r6, #0x0
	bl		sub_080281b0
	ldr		r2, _08026920
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	mov		r5, #0x1
	cmp		r5, r10
	bge		_0802677e
	mov		r4, #0x0
_0802676a:
	add		r1, r6, r5
	mov		r0, #0x0
	mov		r2, r9
	add		r2, r8
	bl		sub_080281b0
	strh	r4, [r0, #0x0]
	add		r5, #0x1
	cmp		r5, r10
	blt		_0802676a
_0802677e:
	add		r1, r6, r5
	mov		r2, r9
	add		r2, r8
	mov		r0, #0x0
	bl		sub_080281b0
	ldr		r2, _08026924
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	mov		r0, #0x1
	add		r8, r0
	ldr		r1, [sp, #0x10]
	cmp		r8, r1
	bge		_080267e4
	mov		r4, r8
	add		r4, r9
_0802679e:
	mov		r0, #0x0
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_080281b0
	ldr		r2, _08026928
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	mov		r5, #0x1
	cmp		r5, r10
	bge		_080267c8
	mov		r7, #0x0
_080267b6:
	add		r1, r6, r5
	mov		r0, #0x0
	add		r2, r4, #0x0
	bl		sub_080281b0
	strh	r7, [r0, #0x0]
	add		r5, #0x1
	cmp		r5, r10
	blt		_080267b6
_080267c8:
	add		r1, r6, r5
	mov		r0, #0x0
	add		r2, r4, #0x0
	bl		sub_080281b0
	ldr		r2, _0802692c
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	add		r4, #0x1
	mov		r0, #0x1
	add		r8, r0
	ldr		r1, [sp, #0x10]
	cmp		r8, r1
	blt		_0802679e
_080267e4:
	mov		r4, r9
	add		r4, r8
	mov		r0, #0x0
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_080281b0
	ldr		r2, _08026930
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	mov		r5, #0x1
	cmp		r5, r10
	bge		_08026812
	mov		r7, #0x0
_08026800:
	add		r1, r6, r5
	mov		r0, #0x0
	add		r2, r4, #0x0
	bl		sub_080281b0
	strh	r7, [r0, #0x0]
	add		r5, #0x1
	cmp		r5, r10
	blt		_08026800
_08026812:
	add		r1, r6, r5
	mov		r2, r9
	add		r2, r8
	mov		r0, #0x0
	bl		sub_080281b0
	ldr		r2, _08026934
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	mov		r0, #0x1
	add		r8, r0
	mov		r4, r9
	add		r4, r8
	mov		r0, #0x0
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_080281b0
	ldr		r2, _08026938
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	mov		r0, #0x0
	ldr		r1, [sp, #0xC]
	add		r2, r4, #0x0
	bl		sub_080281b0
	ldr		r2, _0802693c
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	mov		r5, #0x2
	ldr		r0, [sp, #0x8]
	cmp		r5, r0
	bge		_0802686e
	ldr		r1, _08026940
	add		r4, r1, #0x0
_08026858:
	add		r1, r6, r5
	mov		r0, #0x0
	mov		r2, r9
	add		r2, r8
	bl		sub_080281b0
	strh	r4, [r0, #0x0]
	add		r5, #0x1
	ldr		r2, [sp, #0x8]
	cmp		r5, r2
	blt		_08026858
_0802686e:
	add		r1, r6, r5
	mov		r4, r9
	add		r4, r8
	mov		r0, #0x0
	add		r2, r4, #0x0
	bl		sub_080281b0
	ldr		r2, _08026944
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	add		r5, #0x1
	add		r1, r6, r5
	mov		r0, #0x0
	add		r2, r4, #0x0
	bl		sub_080281b0
	ldr		r2, _08026948
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	ldr		r0, [sp, #0x4]
	cmp		r0, #0x0
	beq		_08026958
	mov		r1, #0x0
	mov		r8, r1
	ldr		r2, [sp, #0x0]
	ldrb	r2, [r2, #0x4]
	cmp		r8, r2
	bge		_08026988
	add		r6, #0x2
	mov		r10, r6
	mov		r7, r9
	add		r7, #0x2
	mov		r6, r9
	add		r6, #0x1
_080268b2:
	ldr		r1, [sp, #0x0]
	ldr		r0, [r1, #0x8]
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	ldr		r2, _0802694c
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	lsl		r4, r0, #0x3
	sub		r4, r4, r0
	lsl		r4, r4, #0x2
	ldr		r0, _08026950
	add		r5, r4, r0
	mov		r0, #0x0
	mov		r1, r10
	add		r2, r6, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	mov		r2, #0x7
	bl		sub_08071b6c
	ldr		r1, _08026954
	add		r4, r4, r1
	mov		r0, #0x0
	mov		r1, r10
	add		r2, r7, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x7
	bl		sub_08071b6c
	add		r7, #0x2
	add		r6, #0x2
	mov		r2, #0x1
	add		r8, r2
	ldr		r0, [sp, #0x0]
	ldrb	r0, [r0, #0x4]
	cmp		r8, r0
	blt		_080268b2
	b		_08026988

_08026908:	.4byte 0x03002FF8
_0802690c:	.4byte 0x0000F001
_08026910:	.4byte 0x0000F002
_08026914:	.4byte 0x0000F022
_08026918:	.4byte 0x0000F402
_0802691c:	.4byte 0x0000F401
_08026920:	.4byte 0x0000F021
_08026924:	.4byte 0x0000F421
_08026928:	.4byte 0x0000F020
_0802692c:	.4byte 0x0000F420
_08026930:	.4byte 0x0000F821
_08026934:	.4byte 0x0000FC21
_08026938:	.4byte 0x0000F801
_0802693c:	.4byte 0x0000F802
_08026940:	.4byte 0x0000F822
_08026944:	.4byte 0x0000FC02
_08026948:	.4byte 0x0000FC01
_0802694c:	.4byte 0x080f8af4
_08026950:	.4byte 0x080f8b64
_08026954:	.4byte 0x080f8b72

_08026958:
	ldr		r4, _080269a0
	mov		r2, r9
	add		r2, #0x1
	mov		r0, #0x0
	ldr		r1, [sp, #0xC]
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x7
	bl		sub_08071b6c
	add		r4, #0xe
	mov		r2, r9
	add		r2, #0x2
	mov		r0, #0x0
	ldr		r1, [sp, #0xC]
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x7
	bl		sub_08071b6c
_08026988:
	mov		r0, #0x2
	bl		sub_080281fc
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2699E, 0x2

_080269a0:	.4byte 0x080f8c0c
	thumb_func_end sub_0802667c

	thumb_func_start sub_080269a4
sub_080269a4:
	push	{ r4, r5, r6, r7, lr }
	mov		r0, #0x0
	bl		sub_08028130
	add		r4, r0, #0x0
	mov		r5, #0x1f
	ldr		r0, _08026a74
	mov		r12, r0
	mov		r7, #0x9f
_080269b6:
	ldrh	r2, [r4, #0x0]
	mov		r0, #0x1f
	and		r0, r2
	lsl		r1, r0, #0xa
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_080269c6
	add		r1, r12
_080269c6:
	asr		r6, r1, #0xa
	lsl		r2, r2, #0x10
	lsr		r0, r2, #0x15
	and		r0, r5
	lsl		r1, r0, #0xa
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_080269d8
	add		r0, r12
_080269d8:
	asr		r3, r0, #0xa
	lsr		r0, r2, #0x1a
	and		r0, r5
	lsl		r1, r0, #0xa
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_080269e8
	add		r0, r12
_080269e8:
	asr		r2, r0, #0xa
	add		r1, r6, #0x0
	and		r1, r5
	add		r0, r3, #0x0
	and		r0, r5
	lsl		r0, r0, #0x5
	orr		r1, r0
	and		r2, r5
	lsl		r2, r2, #0xa
	orr		r1, r2
	strh	r1, [r4, #0x0]
	add		r4, #0x2
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_080269b6
	mov		r0, #0x1
	bl		sub_08028130
	add		r4, r0, #0x0
	mov		r5, #0x1f
	ldr		r0, _08026a74
	mov		r12, r0
	mov		r7, #0xff
_08026a16:
	ldrh	r2, [r4, #0x0]
	mov		r0, #0x1f
	and		r0, r2
	lsl		r1, r0, #0xa
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08026a26
	add		r1, r12
_08026a26:
	asr		r6, r1, #0xa
	lsl		r2, r2, #0x10
	lsr		r0, r2, #0x15
	and		r0, r5
	lsl		r1, r0, #0xa
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_08026a38
	add		r0, r12
_08026a38:
	asr		r3, r0, #0xa
	lsr		r0, r2, #0x1a
	and		r0, r5
	lsl		r1, r0, #0xa
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_08026a48
	add		r0, r12
_08026a48:
	asr		r2, r0, #0xa
	add		r1, r6, #0x0
	and		r1, r5
	add		r0, r3, #0x0
	and		r0, r5
	lsl		r0, r0, #0x5
	orr		r1, r0
	and		r2, r5
	lsl		r2, r2, #0xa
	orr		r1, r2
	strh	r1, [r4, #0x0]
	add		r4, #0x2
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_08026a16
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x26A72, 0x2

_08026a74:	.4byte 0x000003FF
	thumb_func_end sub_080269a4

	thumb_func_start sub_08026a78
sub_08026a78:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	lsl		r1, r1, #0x10
	lsr		r4, r1, #0x10
	ldr		r0, _08026b70
	ldr		r7, [r0, #0x0]
	bl		sub_08027788
	cmp		r0, #0x0
	beq		_08026a9c
	bl		sub_080277b4
	cmp		r0, #0x0
	bne		_08026b60
_08026a9c:
	mov		r5, #0x0
	ldrb	r0, [r7, #0x4]
	cmp		r5, r0
	bge		_08026b5a
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	str		r0, [sp, #0x8]
_08026aaa:
	ldrb	r2, [r7, #0x0]
	add		r1, r2, #0x2
	str		r1, [sp, #0x0]
	ldrb	r1, [r7, #0x1]
	lsl		r0, r5, #0x1
	add		r0, #0x1
	add		r1, r1, r0
	mov		r10, r1
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	ldr		r0, [sp, #0x8]
	cmp		r5, r0
	bne		_08026ac8
	mov		r1, #0xe0
	lsl		r1, r1, #0x8
_08026ac8:
	str		r1, [sp, #0x4]
	ldr		r4, _08026b74
	ldr		r1, [sp, #0x8]
	cmp		r5, r1
	bne		_08026ad4
	sub		r4, #0x4
_08026ad4:
	add		r1, r2, #0x1
	mov		r0, #0x1
	mov		r2, r10
	bl		sub_080281b0
	add		r2, r4, #0x0
	add		r1, r0, #0x0
	mov		r0, #0x0
	add		r5, #0x1
	str		r5, [sp, #0xC]
_08026ae8:
	add		r4, r0, #0x1
	mov		r3, #0x0
_08026aec:
	ldrh	r0, [r2, #0x0]
	strh	r0, [r1, #0x0]
	add		r2, #0x2
	add		r1, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08026aec
	add		r1, #0x3e
	add		r0, r4, #0x0
	cmp		r0, #0x2
	blt		_08026ae8
	mov		r2, #0x0
_08026b04:
	mov		r5, #0x0
	ldrb	r0, [r7, #0x2]
	sub		r0, #0x3
	add		r1, r2, #0x1
	mov		r8, r1
	cmp		r5, r0
	bge		_08026b4c
	mov		r0, r10
	add		r6, r0, r2
	ldr		r1, _08026b78
	mov		r9, r1
_08026b1a:
	ldr		r2, [sp, #0x0]
	add		r4, r2, r5
	mov		r0, #0x1
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	bl		sub_080281b0
	ldrh	r1, [r0, #0x0]
	mov		r2, r9
	and		r1, r2
	strh	r1, [r0, #0x0]
	mov		r0, #0x1
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	bl		sub_080281b0
	ldrh	r2, [r0, #0x0]
	ldr		r1, [sp, #0x4]
	orr		r1, r2
	strh	r1, [r0, #0x0]
	add		r5, #0x1
	ldrb	r0, [r7, #0x2]
	sub		r0, #0x3
	cmp		r5, r0
	blt		_08026b1a
_08026b4c:
	mov		r2, r8
	cmp		r2, #0x1
	ble		_08026b04
	ldr		r5, [sp, #0xC]
	ldrb	r0, [r7, #0x4]
	cmp		r5, r0
	blt		_08026aaa
_08026b5a:
	mov		r0, #0x2
	bl		sub_080281fc
_08026b60:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08026b70:	.4byte 0x03002FF8
_08026b74:	.4byte 0x080f8c64
_08026b78:	.4byte 0x00000FFF
	thumb_func_end sub_08026a78

	thumb_func_start sub_08026b7c
sub_08026b7c:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r1, _08026b98
	add		r0, r2, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_08026b9c
	add		r0, r2, #0x0
	bl		sub_08025b70
	b		_08026b9e

.incbin "base.gba", 0x26B96, 0x2

_08026b98:	.4byte 0x000007D4

_08026b9c:
	mov		r0, #0x1
_08026b9e:
	pop		{ r1 }
	bx		r1

	thumb_func_end sub_08026b7c

.incbin "base.gba", 0x26BA2, 0x3a

	thumb_func_start _AgbMain
_AgbMain: @ 8026BDC
	push    {r4-r5, lr}                      
    add     sp, #-0x8                         
    ldr     r5, _08026D40             
	movs    r0, #0x1                          
    ldr     r1, _08026D44                
	bl      0x807DF78 @ sub_807DF78                       
	movs    r2, #0x80                         
	lsl     r2, r2, #0x13                      
	ldrh    r0, [r2]                        
	movs    r1, #0x80                         
	orr     r0, r1                          
	strh    r0, [r2]                        
	ldr     r1, _08026D48                    
	ldr     r2, _08026D4C                      
	add     r0, r2, #0x0                          
	strh    r0, [r1]                        
	movs    r4, #0x0                          
	str     r4, [sp]                        
	ldr     r1, _08026D50              
	mov     r0, r13                         
	str     r0, [r1]                        
	movs    r0, #0x80                         
	lsl     r0, r0, #0x12                     
	str     r0, [r1, #0x4]                     
	ldr     r0, _08026D54                  
	str     r0, [r1, #0x8]                     
	ldr     r0, [r1, #0x8]                     
	str     r4, [sp]                        
	mov     r2, r13                         
	str     r2, [r1]                        
	movs    r0, #0xC0                        
	lsl     r0, r0, #0x12                      
	str     r0, [r1, #0x4]                     
	ldr     r0, _08026D58                  
	str     r0, [r1, #0x8]                     
	ldr     r0, [r1, #0x8]                     
	add     r2, sp, #0x4                       
	strh    r4, [r2]                        
	str     r2, [r1]                        
	movs    r0, #0xC0                        
	lsl     r0, r0, #0x13                      
	str     r0, [r1, #0x4]                     
	ldr     r0, _08026D5C                     
	str     r0, [r1, #0x8]                  
	ldr     r0, [r1, #0x8]                     
	str     r4, [sp]                        
	mov     r0, r13                         
	str     r0, [r1]                        
	movs    r0, #0xE0                        
	lsl     r0, r0, #0x13                      
	str     r0, [r1, #0x4]                     
	ldr     r0, _08026D60                  
	str     r0, [r1, #0x8]                     
	ldr     r0, [r1, #0x8]                     
	strh    r4, [r2]                        
	str     r2, [r1]                        
	movs    r0, #0xA0                        
	lsl     r0, r0, #0x13                      
	str     r0, [r1, #0x4]                     
	ldr     r0, _08026D64                  
	str     r0, [r1, #0x8]                     
	ldr     r0, [r1, #0x8]                     
	ldr     r2, _08026D68                   
	str     r2, [r1]                        
	ldr     r0, _08026D6C                   
	str     r0, [r1, #0x4]                     
	ldr     r0, _08026D70                   
	sub     r0, r0, r2                       
	lsr     r2, r0, #0x1F                      
	add     r0, r0, r2                       
	asr     r0, r0, #0x1                       
	movs    r2, #0x80                         
	lsl     r2, r2, #0x18                      
	orr     r0, r2                          
	str     r0, [r1, #0x8]                     
	ldr     r0, [r1, #0x8]                     
	movs    r0, #0x0                          
	movs    r1, #0x0                          
	bl      0x802703C @ sub_802703C                       
	str     r4, [r5, #0x14]                    
	bl      0x8026E30 @ sub_8026E30                       
	ldr     r0, _08026D74                   
	str     r4, [r0]                        
	ldr     r1, _08026D78                   
	ldrh    r2, [r1, #0xA]                    
	ldr     r0, _08026D7C                     
	and     r0, r2                          
	strh    r0, [r1, #0xA]                    
	ldrh    r2, [r1, #0xA]                    
	ldr     r0, _08026D80                      
	and     r0, r2                          
	strh    r0, [r1, #0xA]                    
	ldrh    r0, [r1, #0xA]                    
	bl      0x80706B8 @ sub_80706B8                       
	bl      0x807DF2C @ sub_807DF2C                       
	ldr     r0, _08026D84                   
	strh    r4, [r0]                        
	ldr     r1, _08026D88                   
	ldr     r2, _08026D8C                     
	add     r0, r2, #0x0                          
	strh    r0, [r1]                        
	ldr     r1, _08026D90                   
	movs    r0, #0x18                         
	strh    r0, [r1]                        
	ldr     r1, _08026D94                     
	movs    r0, #0x0                          
	bl      0x807DF78 @ sub_807DF78                        
	movs    r1, #0x90                         
	lsl     r1, r1, #0x9                       
	movs    r0, #0x2                          
	bl      0x807DF78 @ sub_807DF78                       
	ldr     r1, _08026D98                   
	cmp     r1, #0x0                          
	bne     0x8026CD0                       
	ldr     r1, _08026D9C                   
	movs    r0, #0x0                          
	bl      0x807DF68 @ sub_807DF68                       
	ldr     r1, _08026DA0                   
	cmp     r1, #0x0                          
	bne     0x8026CDE @ sub_8026CDE                       
	ldr     r1, _08026D9C                   
	movs    r0, #0x2                          
	bl      0x807DF68 @ sub_807DF68                       
	bl      0x8029F34 @ sub_8029F34                       
	bl      0x8029E9C @ sub_8029E9C                       
	bl      0x8029F58 @ sub_8029F58                       
	ldr     r0, _08026DA4                   
	strh    r4, [r0, #0x16]                    
	bl      0x8027744 @ sub_8027744                       
	movs    r0, #0x2                          
	movs    r1, #0x80                         
	lsl     r1, r1, #0x9                      
	bl      0x807DF78 @ sub_807DF78                       
	ldr     r0, _08026DA8 @ _ShowMGBIntro     [pc, 0xA4]                  
	str     r0, [r5]                        
	movs    r0, #0x1                          
	strb    r0, [r5, #0x8]                     
	bl      sub_080588b4                       
	bl      0x08056254                       
	bl		0x0803d0ec                       
	bl      0x08001b24                       
	bl      0x08001ad0
_MainGameLoop:                       
	ldr	    r0, _08026D40 @ RunGameLogic_CallBack		[pc, 0x20]                  
	ldr     r0, [r0]                        
	cmp     r0, #0x0                         
	beq     _8026DAC                       
	bl      0x807D7D0 @ sub_807D7D0 "Run_Game"                       
	cmp     r0, #0x0                          
	beq     _8026DAC                      
	bl      0x8029F98 @ sub_8029F98                      
	bl      0x8029F34 @ sub_8029F34                       
	bl      0x8029EC0 @ sub_8029EC0                       
	bl      _DrawFrameRunAudio                 
	b       _MainGameLoop            
	
_08026D40: 	.4byte RunGameLogic_CallBack
_08026D44: 	.4byte 0xFFFEFFFF
_08026D48: 	.4byte GamePakWaitstateControl
_08026D4C: 	.4byte 0x00004494
_08026D50:	.4byte DMA3SourceAddress
_08026D54: 	.4byte 0x85010000
_08026D58:	.4byte 0x85001F80
_08026D5C:	.4byte 0x8100C000
_08026D60:	.4byte 0x85000100
_08026D64:	.4byte 0x81000200
_08026D68:	.4byte 0x0820C1B0
_08026D6C:	.4byte 0x0203EE9C
_08026D70:	.4byte 0x0820C270
_08026D74:	.4byte Timer0Counter_Reload
_08026D78:	.4byte DMA1SourceAddress
_08026D7C:	.4byte 0x0000C5FF
_08026D80:	.4byte 0x00007FFF
_08026D84:	.4byte InterruptEnableRegister
_08026D88:	.4byte InterruptRequestFlags_IRQAcknowledge
_08026D8C:	.4byte 0x0000FFFF
_08026D90:	.4byte GeneralLCDStatus_STAT_LYC_	
_08026D94:	.4byte 0x00010001	
_08026D98:	.4byte 0x08026DBD	
_08026D9C:	.4byte 0x080270F1
_08026DA0:	.4byte 0x0802A061
_08026DA4:	.4byte 0x03003000
_08026DA8:	.4byte _ShowMGBIntro + 1

_8026DAC:
	movs    r0, #0xFF                        
	bl      sub_08071b8c                      
	add     sp, #0x8                          
	pop     {r4, r5}                          
	pop     {r0}                              
	bx      r0 
                                 
	thumb_func_end _AgbMain

	.2byte	0x0

	thumb_func_start sub_08026dbc
sub_08026dbc:
	push	{ r4, lr }
	ldr		r4, _08026e14
	bl		sub_0807006c
	bl		sub_08027148
	ldr		r1, _08026e18
	ldrh	r2, [r1, #0xa]
	ldr		r0, _08026e1c
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr		r0, _08026e20
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	bl		sub_080298f8
	bl		sub_08029894
	bl		sub_08029f34
	bl		sub_08029da8
	bl		sub_08028174
	bl		sub_08028210
	ldr		r0, [r4, #0xc]
	cmp		r0, #0x0
	beq		_08026dfe
	bl		sub_0807d7d0
_08026dfe:
	bl		sub_08027264
	ldr		r0, [r4, #0x14]
	add		r0, #0x1
	str		r0, [r4, #0x14]
	bl		sub_08027158
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x26E12, 0x2

_08026e14:	.4byte RunGameLogic_CallBack
_08026e18:	.4byte DMA0SourceAddress
_08026e1c:	.4byte 0x0000C5FF
_08026e20:	.4byte 0x00007FFF

	thumb_func_end sub_08026dbc

.incbin "base.gba", 0x26E24, 0x74

	thumb_func_start sub_08026e98
sub_08026e98:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	ldr		r7, _08026ef8
	ldr		r0, _08026efc
	mov		r10, r0
	ldr		r1, _08026f00
	mov		r9, r1
	ldr		r2, _08026f04
	mov		r8, r2
	ldr		r0, _08026f08
	mov		r12, r0
	mov		r5, r12
	mov		r6, #0x0
	ldr		r4, _08026f0c
_08026eba:
	mov		r1, r10
	add		r0, r6, r1
	ldrh	r1, [r0, #0x0]
	ldr		r2, _08026f10
	add		r0, r2, #0x0
	add		r3, r0, #0x0
	eor		r3, r1
	mov		r0, r9
	add		r2, r6, r0
	ldrh	r1, [r5, #0x0]
	add		r0, r3, #0x0
	bic		r0, r1
	strh	r0, [r2, #0x0]
	mov		r2, r8
	add		r1, r6, r2
	strh	r0, [r1, #0x0]
	cmp		r3, #0x0
	beq		_08026f14
	ldrh	r0, [r5, #0x0]
	cmp		r3, r0
	bne		_08026f14
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x1
	strh	r0, [r4, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08026f18
	strh	r3, [r1, #0x0]
	ldrh	r0, [r7, #0x22]
	b		_08026f16

.incbin "base.gba", 0x26EF6, 0x2

_08026ef8:	.4byte RunGameLogic_CallBack
_08026efc:	.4byte 0x030052D8
_08026f00:	.4byte 0x03005220
_08026f04:	.4byte 0x030052C8
_08026f08:	.4byte 0x030052B0
_08026f0c:	.4byte 0x03000198
_08026f10:	.4byte 0x000003FF

_08026f14:
	ldrh	r0, [r7, #0x20]
_08026f16:
	strh	r0, [r4, #0x0]
_08026f18:
	strh	r3, [r5, #0x0]
	add		r5, #0x2
	add		r6, #0x2
	add		r4, #0x2
	mov		r0, r12
	add		r0, #0x6
	cmp		r5, r0
	ble		_08026eba
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x26F36, 0x22
	thumb_func_end sub_08026e98

	thumb_func_start sub_08026f58
sub_08026f58:
	ldr		r0, _08026f74
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_08026f68
	mov		r1, #0x0
_08026f68:
	ldr		r0, _08026f78
	lsl		r1, r1, #0x1
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x26F72, 0x2

_08026f74:	.4byte 0x03003000
_08026f78:	.4byte 0x030052B0
	thumb_func_end sub_08026f58

	thumb_func_start sub_08026f7c
sub_08026f7c:
	ldr		r0, _08026f98
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_08026f8c
	mov		r1, #0x0
_08026f8c:
	ldr		r0, _08026f9c
	lsl		r1, r1, #0x1
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x26F96, 0x2

_08026f98:	.4byte 0x03003000
_08026f9c:	.4byte 0x03005220
	thumb_func_end sub_08026f7c

	thumb_func_start sub_08026fa0
sub_08026fa0:
	ldr		r0, _08026fbc
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_08026fb0
	mov		r1, #0x0
_08026fb0:
	ldr		r0, _08026fc0
	lsl		r1, r1, #0x1
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x26FBA, 0x2

_08026fbc:	.4byte 0x03003000
_08026fc0:	.4byte 0x030052C8

.incbin "base.gba", 0x26FC4, 0x28
	thumb_func_end sub_08026fa0

	thumb_func_start sub_08026fec
sub_08026fec:
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	ldr		r0, _0802700c
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_08027000
	mov		r1, #0x0
_08027000:
	ldr		r0, _08027010
	lsl		r1, r1, #0x1
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	and		r0, r2
	bx		lr

_0802700c:	.4byte 0x03003000
_08027010:	.4byte 0x03005220
	thumb_func_end sub_08026fec

	thumb_func_start sub_08027014
sub_08027014:
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	ldr		r0, _08027034
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_08027028
	mov		r1, #0x0
_08027028:
	ldr		r0, _08027038
	lsl		r1, r1, #0x1
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	and		r0, r2
	bx		lr

_08027034:	.4byte 0x03003000
_08027038:	.4byte 0x030052C8
	thumb_func_end sub_08027014

	thumb_func_start sub_0802703c
sub_0802703c:
	add		r2, r0, #0x0
	cmp		r2, #0x0
	bne		_08027046
	ldr		r2, _0802705c
	mov		r1, #0x1d
_08027046:
	cmp		r1, #0x0
	ble		_0802705a
	add		r3, r1, #0x0
_0802704c:
	ldr		r1, [r2, #0x0]
	ldrh	r0, [r2, #0x4]
	strh	r0, [r1, #0x0]
	add		r2, #0x8
	sub		r3, #0x1
	cmp		r3, #0x0
	bne		_0802704c
_0802705a:
	bx		lr

_0802705c:	.4byte 0x080f8c68
	thumb_func_end sub_0802703c

	thumb_func_start sub_08027060
sub_08027060:
	ldr		r2, _08027074
	ldrb	r1, [r2, #0x0]
	mov		r3, #0x1
_08027066:
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08027078
	ldrb	r1, [r2, #0x0]
	b		_08027066

.incbin "base.gba", 0x27072, 0x2

_08027074:	.4byte GeneralLCDStatus_STAT_LYC_

_08027078:
	bx		lr

.incbin "base.gba", 0x2707A, 0x1E
	thumb_func_end sub_08027060

	thumb_func_start sub_08027098
sub_08027098:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r0, #0x2
	neg		r0, r0
	and		r4, r0
	mov		r5, #0x1
	orr		r5, r1
	mov		r3, #0x0
	lsr		r2, r2, #0x2
	cmp		r3, r2
	bcs		_080270b8
_080270ae:
	ldmia	r4!, { r0 }
	stmia	r1!, { r0 }
	add		r3, #0x1
	cmp		r3, r2
	bcc		_080270ae
_080270b8:
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x270C0, 0x10
	thumb_func_end sub_08027098

	thumb_func_start sub_080270d0
sub_080270d0:
	ldr		r2, _080270e4
	ldr		r1, [r2, #0x0]
	ldr		r0, _080270e8
	mul		r0, r1
	ldr		r1, _080270ec
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	lsl		r0, r0, #0x1
	lsr		r0, r0, #0x11
	bx		lr

_080270e4:	.4byte 0x030001A0
_080270e8:	.4byte 0x41C64E6D
_080270ec:	.4byte 0x00003039
	bx		lr

.incbin "base.gba", 0x270F2, 0x2A
	thumb_func_end sub_080270d0

	thumb_func_start _DrawFrameRunAudio
_DrawFrameRunAudio: @ 0802711c
	push	{ r4, r5, lr }
	ldr		r5, _08027144
	mov		r4, #0x0
_08027122:
	str		r4, [r5, #0x0]
	bl		sub_08071ba4
	bl		sub_08070730
	bl		sub_0802732c
	cmp		r0, #0x0
	bne		_08027122
	bl		sub_08026e98
	bl		sub_0802a0a4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

	.2byte 	0x0

_08027144:	.4byte 0x030001A4
	thumb_func_end _DrawFrameRunAudio

	thumb_func_start sub_08027148
sub_08027148:
	ldr		r1, _08027154
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x27152, 0x2

_08027154:	.4byte 0x030001A4
	thumb_func_end sub_08027148

	thumb_func_start sub_08027158
sub_08027158:
	ldr		r2, _0802716c
	mov		r3, #0x1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	orr		r0, r3
	strb	r0, [r2, #0x0]
	bx		lr

.incbin "base.gba", 0x2716A, 0x2

_0802716c:	.4byte 0x03007FF8

.incbin "base.gba", 0x27170, 0x18
	thumb_func_end sub_08027158

	thumb_func_start sub_08027188
sub_08027188:
	push	{ r4, lr }
	add		r4, r0, #0x0
	str		r1, [r4, #0x0]
	str		r1, [r4, #0x4]
	str		r2, [r4, #0x8]
	mov		r3, #0x0
	lsr		r2, r2, #0x2
	cmp		r3, r2
	bcs		_080271a8
	mov		r2, #0x0
_0802719c:
	stmia	r1!, {  r2 }
	add		r3, #0x1
	ldr		r0, [r4, #0x8]
	lsr		r0, r0, #0x2
	cmp		r3, r0
	bcc		_0802719c
_080271a8:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x271AE, 0x2
	thumb_func_end sub_08027188

	thumb_func_start sub_080271b0
sub_080271b0:
	ldr		r1, [r0, #0x0]
	str		r1, [r0, #0x4]
	bx		lr

.incbin "base.gba", 0x271B6, 0x2
	thumb_func_end sub_080271b0

	thumb_func_start sub_080271b8
sub_080271b8:
	push	{ r4, r5, r6, lr }
	add		r3, r0, #0x0
	mov		r6, #0x0
	add		r5, r1, #0x0
	mul		r5, r2
	ldr		r2, [r3, #0x4]
	add		r4, r2, r5
	ldr		r0, [r3, #0x0]
	ldr		r1, [r3, #0x8]
	add		r0, r0, r1
	cmp		r4, r0
	bhi		_08027200
	add		r6, r2, #0x0
	str		r4, [r3, #0x4]
	add		r0, r6, #0x0
	mov		r1, #0x0
	lsr		r2, r5, #0x2
	cmp		r1, r2
	bcs		_080271ea
	mov		r3, #0x0
_080271e0:
	str		r3, [r0, #0x0]
	add		r0, #0x1
	add		r1, #0x1
	cmp		r1, r2
	bcc		_080271e0
_080271ea:
	mov		r1, #0x0
	mov		r2, #0x3
	and		r2, r5
	cmp		r1, r2
	bcs		_08027200
	mov		r3, #0x0
_080271f6:
	strb	r3, [r0, #0x0]
	add		r0, #0x1
	add		r1, #0x1
	cmp		r1, r2
	bcc		_080271f6
_08027200:
	add		r0, r6, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080271b8

	thumb_func_start sub_08027208
sub_08027208:
	push	{ r4, r5, r6, lr }
	bl		sub_08027cc4
	ldr		r1, _08027258
	ldrh		r2, [r1, #0x16]
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	and		r0, r2
	mov		r2, #0x0
	strh		r0, [r1, #0x16]
	mov		r0, #0x1
	neg		r0, r0
	strb	r0, [r1, #0x0]
	strb	r2, [r1, #0x1]
	mov		r2, #0x0
	add		r6, r1, #0x0
	add		r6, #0xd
	mov		r3, #0x0
	add		r5, r1, #0x0
	add		r5, #0x11
	add		r4, r1, #0x0
_08027232:
	lsl		r0, r2, #0x18
	lsr		r0, r0, #0x18
	add		r1, r0, r6
	strb	r3, [r1, #0x0]
	add		r0, r0, r5
	strb	r3, [r0, #0x0]
	add		r2, #0x1
	cmp		r2, #0x3
	ble		_08027232
	mov		r0, #0x0
	strb	r0, [r4, #0xA]
	strb	r0, [r4, #0xB]
	strb	r0, [r4, #0xC]
	ldr		r1, _0802725c
	ldr		r0, _08027260
	strh	r1, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08027258:	.4byte 0x03003000
_0802725c:	.4byte 0x00003FFF
_08027260:	.4byte 0x030001F0
	thumb_func_end sub_08027208

	thumb_func_start sub_08027264
sub_08027264:
	push	{ r4, r5, r6, lr }
	ldr		r6, _080272d8
	ldrh	r5, [r6, #0x0]
	bl		sub_08027fdc
	mov		r1, #0x0
	cmp		r0, #0x0
	bne		_08027276
	mov		r1, #0x1
_08027276:
	cmp		r1, #0x0
	beq		_080272f4
	ldr		r2, _080272dc
	mov		r1, #0x0
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x0
	bne		_08027288
	mov		r1, #0x1
_08027288:
	cmp		r1, #0x0
	beq		_08027314
	ldr		r0, _080272e0
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_080272cc
	mov		r0, #0x0
	strh		r0, [r2, #0x16]
	ldr		r2, _080272e4
	ldrb	r0, [r2, #0x1]
	mov		r1, #0xc0
	orr		r0, r1
	strb	r0, [r2, #0x1]
	mov		r0, #0x1
	mov		r1, #0xc1
	neg		r1, r1
	bl		sub_0807df78
	ldr		r1, _080272e8
	mov		r0, #0xc0
	strh	r0, [r1, #0x0]
	ldr		r4, _080272ec
	mov		r0, #0x7
	add		r1, r4, #0x0
	bl		sub_0807df68
	mov		r0, #0x6
	add		r1, r4, #0x0
	bl		sub_0807df68
	bl		sub_08027208
_080272cc:
	add		r0, r5, #0x0
	bl		sub_08027b10
	ldr		r0, _080272f0
	strh	r0, [r6, #0x0]
	b		_08027314

_080272d8:	.4byte 0x030001F0
_080272dc:	.4byte 0x03003000
_080272e0:	.4byte SIOControlRegister
_080272e4:	.4byte SIOModeSelect_GeneralPurposeData
_080272e8:	.4byte InterruptRequestFlags_IRQAcknowledge
_080272ec:	.4byte 0x080270F1
_080272f0:	.4byte 0x00003FFF

_080272f4:
	ldr		r0, _0802731c
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_08027304
	mov		r1, #0x0
_08027304:
	ldr		r0, _08027320
	ldrh	r2, [r0, #0x0]
	ldr		r0, _08027324
	lsl		r1, r1, #0x1
	add		r1, r1, r0
	ldr		r0, _08027328
	and		r0, r2
	strh	r0, [r1, #0x0]
_08027314:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2731A, 0x2

_0802731c:	.4byte 0x03003000
_08027320:	.4byte KeyStatus
_08027324:	.4byte 0x030052D8
_08027328:	.4byte 0x000003FF
	thumb_func_end sub_08027264

	thumb_func_start sub_0802732c
sub_0802732c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	mov		r0, #0x1
	str		r0, [sp, #0xC]
	ldr		r4, _080273d8
	ldrh		r1, [r4, #0x16]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_080273d4
	bl		sub_080280c4
	add		r2, r0, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	bne		_08027382
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, r2
	beq		_08027382
	ldrh		r0, [r4, #0x16]
	mov		r1, #0xff
	lsl		r1, r1, #0x8
	and		r1, r0
	mov		r0, #0x0
	strh		r1, [r4, #0x16]
	strb	r0, [r4, #0x1]
	mov		r1, #0x0
	add		r4, #0xd
	mov		r3, #0x0
_08027374:
	lsl		r0, r1, #0x18
	lsr		r0, r0, #0x18
	add		r0, r0, r4
	strb	r3, [r0, #0x0]
	add		r1, #0x1
	cmp		r1, #0x3
	ble		_08027374
_08027382:
	ldr		r5, _080273d8
	mov		r7, #0x0
	strb	r2, [r5, #0x0]
	ldr		r6, _080273dc
	ldr		r0, [r6, #0x0]
	cmp		r0, #0xa
	ble		_080273c4
	strh		r7, [r5, #0x16]
	ldr		r2, _080273e0
	ldrb	r0, [r2, #0x1]
	mov		r1, #0xc0
	orr		r0, r1
	strb	r0, [r2, #0x1]
	mov		r0, #0x1
	mov		r1, #0xc1
	neg		r1, r1
	bl		sub_0807df78
	ldr		r1, _080273e4
	mov		r0, #0xc0
	strh	r0, [r1, #0x0]
	ldr		r4, _080273e8
	mov		r0, #0x7
	add		r1, r4, #0x0
	bl		sub_0807df68
	mov		r0, #0x6
	add		r1, r4, #0x0
	bl		sub_0807df68
	bl		sub_08027208
	str		r7, [r6, #0x0]
_080273c4:
	bl		sub_08027fdc
	mov		r1, #0x0
	cmp		r0, #0x0
	bne		_080273d0
	mov		r1, #0x1
_080273d0:
	cmp		r1, #0x0
	bne		_080273ec
_080273d4:
	mov		r0, #0x0
	b		_08027644

_080273d8:	.4byte 0x03003000
_080273dc:	.4byte 0x030052B8
_080273e0:	.4byte SIOModeSelect_GeneralPurposeData
_080273e4:	.4byte InterruptRequestFlags_IRQAcknowledge
_080273e8:	.4byte 0x080270f1

_080273ec:
	mov		r10, r5
	b		_080275d8
_080273f0:
	ldr		r0, _08027470
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	mov		r0, sp
	bl		sub_08027a08
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, r1
	bne		_08027406
	b		_080275d2
_08027406:
	mov		r1, r10
	strb	r4, [r1, #0xA]
	ldr		r2, _08027474
	mov		r12, r2
	ldr		r5, _08027478
	mov		r3, r12
	mov		r2, sp
_08027414:
	ldrh	r0, [r2, #0x0]
	cmp		r0, r5
	beq		_08027424
	mov		r0, #0x1
	lsl		r0, r4
	ldrb	r1, [r3, #0xA]
	orr		r0, r1
	strb	r0, [r3, #0xA]
_08027424:
	add		r2, #0x2
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_08027414
	mov		r3, r12
	ldrb	r0, [r3, #0xA]
	cmp		r0, #0x0
	bne		_08027436
	b		_080275d2
_08027436:
	ldrb	r1, [r3, #0xB]
	cmp		r0, r1
	beq		_08027508
	mov		r4, #0x0
	mov		r5, r12
	mov		r2, #0xd
	add		r2, r12
	mov		r8, r2
	ldr		r3, _0802747c
	mov		r9, r3
	mov		r6, #0x0
	mov		r3, sp
	mov		r7, #0x0
_08027450:
	ldrh	r1, [r3, #0x0]
	add		r2, r1, #0x0
	ldr		r0, _08027478
	cmp		r2, r0
	bne		_08027480
	mov		r0, #0x1
	lsl		r0, r4
	ldrb	r1, [r5, #0xB]
	bic		r1, r0
	strb	r1, [r5, #0xB]
	lsr		r0, r6, #0x18
	add		r0, r8
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	b		_080274b8

.incbin "base.gba", 0x2746E, 0x2

_08027470:	.4byte 0x030052B8
_08027474:	.4byte 0x03003000
_08027478:	.4byte 0x0000FFFF
_0802747c:	.4byte 0x00003FFF

_08027480:
	mov		r0, r9
	and		r0, r1
	cmp		r0, r9
	beq		_080274b8
	ldr		r0, _080274fc
	cmp		r2, r0
	bne		_080274a0
	mov		r0, #0x1
	lsl		r0, r4
	ldrb	r1, [r5, #0xB]
	orr		r0, r1
	strb	r0, [r5, #0xB]
	lsr		r0, r6, #0x18
	add		r0, r8
	mov		r1, #0x2
	strb	r1, [r0, #0x0]
_080274a0:
	ldrb	r1, [r5, #0xC]
	add		r0, r1, #0x0
	asr		r0, r4
	mov		r2, #0x1
	and		r0, r2
	cmp		r0, #0x0
	bne		_080274b8
	add		r0, r2, #0x0
	lsl		r0, r4
	orr		r1, r0
	mov		r2, r12
	strb	r1, [r2, #0xC]
_080274b8:
	ldr		r1, _08027500
	add		r0, r7, r1
	ldr		r2, _08027504
	strh	r2, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	add		r6, r6, r0
	add		r3, #0x2
	add		r7, #0x2
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_08027450
	mov		r2, #0x2
	mov		r3, r10
	ldrh		r1, [r3, #0x16]
	mov		r3, #0xff
	lsl		r3, r3, #0x8
	add		r0, r3, #0x0
	and		r1, r0
	mov		r3, #0x0
	orr		r1, r2
	mov		r0, r10
	strh		r1, [r0, #0x16]
	strb	r3, [r0, #0x1]
	ldrb	r0, [r0, #0xC]
	mov		r1, r10
	ldrb	r1, [r1, #0xA]
	cmp		r0, r1
	bne		_080275d2
	mov		r2, r12
	strb	r3, [r2, #0xC]
	mov		r3, #0x0
	str		r3, [sp, #0xC]
	b		_080275ee

_080274fc:	.4byte 0x00004B4D
_08027500:	.4byte 0x030052D8
_08027504:	.4byte 0x000003FF

_08027508:
	mov		r1, r12
	ldrh		r0, [r1, #0x16]
	mov		r2, #0xff
	lsl		r2, r2, #0x8
	add		r1, r2, #0x0
	and		r0, r1
	mov		r3, #0x1
	orr		r0, r3
	mov		r1, r12
	strh		r0, [r1, #0x16]
	mov		r4, #0x0
	mov		r2, #0xd
	add		r2, r12
	mov		r9, r2
	mov		r7, #0x0
	mov		r6, r12
	add		r6, #0x2
	mov		r5, sp
	ldr		r3, _08027548
	mov		r8, r3
_08027530:
	ldrh	r2, [r5, #0x0]
	add		r1, r2, #0x0
	ldr		r0, _0802754c
	cmp		r1, r0
	bne		_08027550
	strh	r2, [r6, #0x0]
	lsr		r0, r7, #0x18
	add		r0, r9
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	b		_08027580

.incbin "base.gba", 0x27546, 0x2

_08027548:	.4byte 0x00003FFF
_0802754c:	.4byte 0x0000FFFF

_08027550:
	mov		r0, r8
	and		r0, r2
	cmp		r0, r8
	beq		_08027580
	ldr		r3, _08027604
	cmp		r1, r3
	beq		_08027580
	ldr		r0, _08027608
	ldrb	r1, [r0, #0xC]
	add		r0, r1, #0x0
	asr		r0, r4
	mov		r3, #0x1
	and		r0, r3
	cmp		r0, #0x0
	bne		_08027580
	add		r0, r3, #0x0
	lsl		r0, r4
	orr		r1, r0
	mov		r0, r12
	strb	r1, [r0, #0xC]
	strh	r2, [r6, #0x0]
	lsr		r0, r7, #0x18
	add		r0, r9
	strb	r3, [r0, #0x0]
_08027580:
	mov		r1, #0x80
	lsl		r1, r1, #0x11
	add		r7, r7, r1
	add		r6, #0x2
	add		r5, #0x2
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_08027530
	mov		r2, r10
	ldrb	r0, [r2, #0xC]
	ldrb	r3, [r2, #0xB]
	cmp		r0, r3
	bne		_080275d2
	mov		r5, #0x0
	mov		r4, #0x0
	ldr		r6, _08027608
	ldr		r7, _0802760c
	add		r3, r6, #0x2
	ldr		r2, _08027610
_080275a6:
	ldrb	r0, [r6, #0xB]
	asr		r0, r4
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080275b4
	add		r5, #0x1
_080275b4:
	ldrh	r1, [r3, #0x0]
	add		r0, r7, #0x0
	and		r0, r1
	strh	r0, [r2, #0x0]
	add		r3, #0x2
	add		r2, #0x2
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_080275a6
	mov		r0, #0x0
	mov		r2, r10
	strb	r5, [r2, #0x1]
	strb	r0, [r2, #0xC]
	mov		r3, #0x0
	str		r3, [sp, #0xC]
_080275d2:
	ldr		r0, [sp, #0xC]
	cmp		r0, #0x0
	beq		_080275ee
_080275d8:
	mov		r0, #0x0
	bl		sub_08028048
	str		r0, [sp, #0x8]
	cmp		r0, #0x0
	ble		_080275e6
	b		_080273f0
_080275e6:
	ldr		r1, _08027614
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
_080275ee:
	ldr		r1, [sp, #0x8]
	cmp		r1, #0x2
	bgt		_08027642
	ldr		r0, _08027608
	ldrb	r0, [r0, #0x16]
	cmp		r0, #0x1
	beq		_08027618
	cmp		r0, #0x2
	beq		_0802763c
	b		_08027642

.incbin "base.gba", 0x27602, 0x2

_08027604:	.4byte 0x00004B4D
_08027608:	.4byte 0x03003000
_0802760c:	.4byte 0x000003FF
_08027610:	.4byte 0x030052D8
_08027614:	.4byte 0x030052B8

_08027618:
	ldr		r0, _08027630
	ldrh	r0, [r0, #0x0]
	ldr		r1, _08027634
	and		r1, r0
	ldr		r0, _08027638
	ldrh	r2, [r0, #0x0]
	mov		r0, #0xe0
	lsl		r0, r0, #0x5
	and		r0, r2
	orr		r1, r0
	b		_0802763e

.incbin "base.gba", 0x2762E, 0x2

_08027630:	.4byte KeyStatus
_08027634:	.4byte 0x000003FF
_08027638:	.4byte 0x030052D0

_0802763c:
	ldr		r1, _08027654
_0802763e:
	ldr		r0, _08027658
	strh	r1, [r0, #0x0]
_08027642:
	ldr		r0, [sp, #0xC]
_08027644:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08027654:	.4byte 0x00004B4D
_08027658:	.4byte 0x030001F0
	thumb_func_end sub_0802732c

	thumb_func_start sub_0802765c
sub_0802765c:
	push	{ r4, lr }
	ldr		r2, _080276a4
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x8
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_080276b4
	ldr		r0, _080276a8
	strh		r1, [r0, #0x16]
	add		r2, #0xc
	ldrb	r0, [r2, #0x1]
	mov		r1, #0xc0
	orr		r0, r1
	strb	r0, [r2, #0x1]
	mov		r0, #0x1
	mov		r1, #0xc1
	neg		r1, r1
	bl		sub_0807df78
	ldr		r1, _080276ac
	mov		r0, #0xc0
	strh	r0, [r1, #0x0]
	ldr		r4, _080276b0
	mov		r0, #0x7
	add		r1, r4, #0x0
	bl		sub_0807df68
	mov		r0, #0x6
	add		r1, r4, #0x0
	bl		sub_0807df68
	bl		sub_08027208
	b		_08027710

_080276a4:	.4byte SIOControlRegister
_080276a8:	.4byte 0x03003000
_080276ac:	.4byte InterruptRequestFlags_IRQAcknowledge
_080276b0:	.4byte 0x080270F1

_080276b4:
	ldr		r3, _08027718
	mov		r1, #0x0
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	cmp		r0, #0x0
	ble		_080276c2
	mov		r1, #0x1
_080276c2:
	cmp		r1, #0x0
	beq		_08027710
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_08027704
	mov		r0, #0x0
	strh		r0, [r3, #0x16]
	ldr		r2, _0802771c
	ldrb	r0, [r2, #0x1]
	mov		r1, #0xc0
	orr		r0, r1
	strb	r0, [r2, #0x1]
	mov		r0, #0x1
	mov		r1, #0xc1
	neg		r1, r1
	bl		sub_0807df78
	ldr		r1, _08027720
	mov		r0, #0xc0
	strh	r0, [r1, #0x0]
	ldr		r4, _08027724
	mov		r0, #0x7
	add		r1, r4, #0x0
	bl		sub_0807df68
	mov		r0, #0x6
	add		r1, r4, #0x0
	bl		sub_0807df68
	bl		sub_08027208
_08027704:
	ldr		r4, _08027728
	ldrh	r0, [r4, #0x0]
	bl		sub_08027b10
	ldr		r0, _0802772c
	strh	r0, [r4, #0x0]
_08027710:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x27716, 0x2

_08027718:	.4byte 0x03003000
_0802771c:	.4byte SIOModeSelect_GeneralPurposeData
_08027720:	.4byte InterruptRequestFlags_IRQAcknowledge
_08027724:	.4byte 0x080270F1
_08027728:	.4byte 0x030001F0
_0802772c:	.4byte 0x00003FFF
	thumb_func_end sub_0802765c

	thumb_func_start sub_08027730
sub_08027730:
	push	{ lr }
	ldr		r0, _08027740
	bl		sub_08027bd4
	bl		sub_08027208
	pop		{ r0 }
	bx		r0

_08027740:	.4byte 0x080f8d88
	thumb_func_end sub_08027730

	thumb_func_start sub_08027744
sub_08027744:
	push	{ r4, lr }
	ldr		r2, _0802777c
	ldrb	r0, [r2, #0x1]
	mov		r1, #0xc0
	orr		r0, r1
	strb	r0, [r2, #0x1]
	mov		r1, #0xc1
	neg		r1, r1
	mov		r0, #0x1
	bl		sub_0807df78
	ldr		r1, _08027780
	mov		r0, #0xc0
	strh	r0, [r1, #0x0]
	ldr		r4, _08027784
	mov		r0, #0x7
	add		r1, r4, #0x0
	bl		sub_0807df68
	mov		r0, #0x6
	add		r1, r4, #0x0
	bl		sub_0807df68
	bl		sub_08027208
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0802777c:	.4byte SIOModeSelect_GeneralPurposeData
_08027780:	.4byte InterruptRequestFlags_IRQAcknowledge
_08027784:	.4byte 0x080270F1
	thumb_func_end sub_08027744

	thumb_func_start sub_08027788
sub_08027788:
	push	{ lr }
	bl		sub_08027fdc
	mov		r1, #0x0
	cmp		r0, #0x0
	bne		_08027796
	mov		r1, #0x1
_08027796:
	add		r0, r1, #0x0
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2779C, 0x18
	thumb_func_end sub_08027788

	thumb_func_start sub_080277b4
sub_080277b4:
	ldr		r0, _080277c8
	mov		r1, #0x0
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	ble		_080277c4
	mov		r1, #0x1
_080277c4:
	add		r0, r1, #0x0
	bx		lr

_080277c8:	.4byte 0x03003000

.incbin "base.gba", 0x277CC, 0x24
	thumb_func_end sub_080277b4

	thumb_func_start sub_080277f0
sub_080277f0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	ldr		r0, _08027904
	mov		r4, #0x1
	str		r4, [r0, #0x0]
	mov		r7, #0x0
	ldr		r0, _08027908
	strh	r7, [r0, #0x0]
	ldr		r1, _0802790c
	ldr		r3, _08027910
	ldrh	r0, [r3, #0x0]
	strh	r0, [r1, #0x0]
	ldr		r2, _08027914
	ldr		r0, _08027918
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r2, #0x0]
	strh	r0, [r2, #0x0]
	ldr		r0, _0802791c
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r2, #0x2]
	strh	r0, [r2, #0x2]
	ldr		r0, _08027920
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r2, #0x4]
	strh	r0, [r2, #0x4]
	ldr		r0, _08027924
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r2, #0x6]
	strh	r0, [r2, #0x6]
	ldr		r0, _08027928
	ldr		r0, [r0, #0x0]
	mov		r5, #0xc0
	lsl		r5, r5, #0x7
	add		r1, r5, #0x0
	orr		r0, r1
	strh	r0, [r3, #0x0]
	ldr		r0, _0802792c
	ldr		r1, [r0, #0x0]
	add		r6, r0, #0x0
	cmp		r1, #0x0
	bne		_08027848
	b		_080279dc
_08027848:
	ldr		r0, [r6, #0x0]
	ldr		r1, _08027930
	mov		r8, r1
	ldr		r3, _08027934
	mov		r12, r3
	ldr		r5, _08027938
	mov		r9, r5
	cmp		r0, #0x1
	bne		_0802787c
	ldr		r0, _0802793c
	str		r7, [r0, #0x0]
	mov		r5, #0x0
	mov		r3, r8
	mov		r4, r12
_08027864:
	str		r5, [r3, #0x0]
	ldr		r0, [r4, #0x0]
	lsl		r1, r7, #0x3
	add		r0, #0xc
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r3, #0x8]
	str		r0, [r3, #0x4]
	add		r3, #0x10
	add		r7, #0x1
	cmp		r7, #0x3
	ble		_08027864
_0802787c:
	mov		r0, #0x2
	str		r0, [r6, #0x0]
	ldrh	r1, [r2, #0x0]
	ldrh	r0, [r2, #0x2]
	add		r4, r0, #0x0
	ldrh	r0, [r2, #0x4]
	add		r5, r0, #0x0
	ldrh	r0, [r2, #0x6]
	add		r6, r0, #0x0
	mov		r2, #0x0
	ldr		r3, _08027940
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, r3
	bne		_0802789c
	mov		r2, #0x1
_0802789c:
	and		r4, r3
	cmp		r4, r3
	bne		_080278a4
	add		r2, #0x1
_080278a4:
	and		r5, r3
	cmp		r5, r3
	bne		_080278ac
	add		r2, #0x1
_080278ac:
	and		r6, r3
	cmp		r6, r3
	bne		_080278b4
	add		r2, #0x1
_080278b4:
	cmp		r2, #0x0
	ble		_080278ce
	ldr		r2, _08027944
	ldr		r0, [r2, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	ldr		r1, _08027948
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080278ce
	str		r0, [r2, #0x0]
_080278ce:
	ldr		r1, _0802794c
	ldr		r2, _08027950
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	mov		r3, r12
	ldr		r1, [r3, #0x0]
	ldr		r2, [r1, #0xc]
	ldr		r0, [r1, #0x10]
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	mov		r5, r8
	ldr		r0, [r5, #0x8]
	add		r3, r0, #0x2
	cmp		r3, r2
	bne		_080278ee
	ldr		r3, [r1, #0xc]
_080278ee:
	lsl		r0, r7, #0x4
	mov		r1, r8
	add		r1, #0x4
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, r3
	bne		_08027958
	ldr		r1, _08027954
	mov		r0, #0x2
	str		r0, [r1, #0x0]
	b		_0802799c

_08027904:	.4byte 0x030052E0
_08027908:	.4byte Timer3Control
_0802790c:	.4byte 0x03005358
_08027910:	.4byte SIOControlRegister
_08027914:	.4byte 0x03000258
_08027918:	.4byte SIOData0_Parent__Multi_PlayerMode_
_0802791c:	.4byte SIOData1_1stChild__Multi_PlayerMode_
_08027920:	.4byte SIOData2_2ndChild__Multi_PlayerMode_
_08027924:	.4byte SIOData3_3rdChild__Multi_PlayerMode_
_08027928:	.4byte 0x03000250
_0802792c:	.4byte 0x03000294
_08027930:	.4byte 0x030001F8
_08027934:	.4byte 0x030002A0
_08027938:	.4byte 0x03000254
_0802793c:	.4byte 0x03000238
_08027940:	.4byte 0x00003FFF
_08027944:	.4byte 0x03004C18
_08027948:	.4byte 0x080f8dd4
_0802794c:	.4byte SIOData_Normal_8bitandUARTMode
_08027950:	.4byte 0x00007FFF
_08027954:	.4byte 0x03000248

_08027958:
	mov		r7, #0x0
	mov		r4, r8
	add		r4, #0x8
	ldr		r5, _080279d0
_08027960:
	mov		r0, r12
	ldr		r1, [r0, #0x0]
	lsl		r3, r7, #0x3
	add		r0, r1, #0x0
	add		r0, #0xc
	add		r0, r0, r3
	ldr		r2, [r0, #0x0]
	add		r1, #0x10
	add		r1, r1, r3
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	ldr		r1, [r4, #0x0]
	ldrh	r0, [r5, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	str		r1, [r4, #0x0]
	cmp		r1, r2
	bne		_08027992
	mov		r1, r12
	ldr		r0, [r1, #0x0]
	add		r0, #0xc
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x0]
_08027992:
	add		r4, #0x10
	add		r5, #0x2
	add		r7, #0x1
	cmp		r7, #0x3
	ble		_08027960
_0802799c:
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	mov		r1, #0xc0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x7
	cmp		r0, r1
	bne		_080279f6
	ldr		r0, _080279d4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080279f6
	mov		r3, r12
	ldr		r1, [r3, #0x0]
	ldrh	r0, [r1, #0x36]
	cmp		r0, #0x0
	beq		_080279f6
	ldr		r1, _080279d8
	neg		r0, r0
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0xc3
	strh	r0, [r1, #0x0]
	b		_080279f6

.incbin "base.gba", 0x279CE, 0x2

_080279d0:	.4byte 0x03000258
_080279d4:	.4byte 0x0300024C
_080279d8:	.4byte Timer3Counter_Reload

_080279dc:
	ldr		r2, _08027a04
	ldr		r0, [r2, #0x0]
	mov		r1, #0x3
	and		r0, r1
	cmp		r0, #0x2
	beq		_080279f6
	ldr		r0, [r2, #0x0]
	sub		r1, #0x7
	and		r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, [r2, #0x0]
	orr		r0, r4
	str		r0, [r2, #0x0]
_080279f6:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x27A02, 0x2

_08027a04:	.4byte 0x03000254
	thumb_func_end sub_080277f0

	thumb_func_start sub_08027a08
sub_08027a08:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	ldr		r1, _08027a30
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08027b00
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_08027a38
	ldr		r1, _08027a34
	add		r0, r1, #0x0
	strh	r0, [r4, #0x0]
	add		r4, #0x2
	strh	r0, [r4, #0x0]
	add		r4, #0x2
	strh	r0, [r4, #0x0]
	strh	r0, [r4, #0x2]
	b		_08027af8

_08027a30:	.4byte 0x03000294
_08027a34:	.4byte 0x00007FFF

_08027a38:
	ldr		r2, _08027a4c
	ldr		r1, [r2, #0x4]
	ldr		r0, [r2, #0x8]
	cmp		r1, r0
	bne		_08027a54
	ldr		r1, _08027a50
	add		r0, r1, #0x0
	strh	r0, [r4, #0x0]
	add		r4, #0x2
	b		_08027aa2

_08027a4c:	.4byte 0x030001F8
_08027a50:	.4byte 0x00007FFF

_08027a54:
	ldr		r0, _08027ab0
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_08027abc
	mov		r7, #0x0
	add		r0, r4, #0x2
	mov		r12, r0
	ldr		r1, _08027ab4
	mov		r8, r1
	add		r6, r2, #0x4
_08027a6c:
	mov		r0, r8
	ldr		r1, [r0, #0x0]
	lsl		r2, r7, #0x3
	add		r0, r1, #0x0
	add		r0, #0xc
	add		r5, r0, r2
	ldr		r3, [r5, #0x0]
	add		r1, #0x10
	add		r1, r1, r2
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x1
	add		r3, r3, r0
	ldr		r0, [r6, #0x0]
	add		r0, #0x2
	str		r0, [r6, #0x0]
	cmp		r0, r3
	bne		_08027a92
	ldr		r0, [r5, #0x0]
	str		r0, [r6, #0x0]
_08027a92:
	add		r6, #0x10
	add		r7, #0x1
	cmp		r7, #0x3
	ble		_08027a6c
	ldr		r1, _08027ab8
	add		r0, r1, #0x0
	strh	r0, [r4, #0x0]
	mov		r4, r12
_08027aa2:
	strh	r0, [r4, #0x0]
	add		r4, #0x2
	strh	r0, [r4, #0x0]
	strh	r0, [r4, #0x2]
	mov		r0, #0x1
	neg		r0, r0
	b		_08027b04

_08027ab0:	.4byte 0x03005358
_08027ab4:	.4byte 0x030002A0
_08027ab8:	.4byte 0x00007FFF

_08027abc:
	mov		r7, #0x0
	add		r6, r2, #0x4
	ldr		r0, _08027afc
	mov		r8, r0
_08027ac4:
	mov		r0, r8
	ldr		r1, [r0, #0x0]
	lsl		r2, r7, #0x3
	add		r0, r1, #0x0
	add		r0, #0xc
	add		r5, r0, r2
	ldr		r3, [r5, #0x0]
	add		r1, #0x10
	add		r1, r1, r2
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x1
	add		r3, r3, r0
	ldr		r1, [r6, #0x0]
	ldrh	r0, [r1, #0x0]
	strh	r0, [r4, #0x0]
	add		r1, #0x2
	str		r1, [r6, #0x0]
	add		r4, #0x2
	cmp		r1, r3
	bne		_08027af0
	ldr		r0, [r5, #0x0]
	str		r0, [r6, #0x0]
_08027af0:
	add		r6, #0x10
	add		r7, #0x1
	cmp		r7, #0x3
	ble		_08027ac4
_08027af8:
	mov		r0, #0x5
	b		_08027b04

_08027afc:	.4byte 0x030002A0

_08027b00:
	mov		r0, #0x8
	neg		r0, r0
_08027b04:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x27B0E, 0x2
	thumb_func_end sub_08027a08

	thumb_func_start sub_08027b10
sub_08027b10:
	push	{ r4, lr }
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	ldr		r0, _08027b24
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x3
	ble		_08027b28
	mov		r0, #0x4
	neg		r0, r0
	b		_08027bcc

_08027b24:	.4byte 0x0300024C

_08027b28:
	ldr		r0, _08027b50
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08027bc8
	ldr		r0, _08027b54
	strh	r2, [r0, #0x0]
	ldr		r3, _08027b58
	cmp		r1, #0x0
	bne		_08027bb8
	mov		r2, #0x0
	ldr		r0, _08027b5c
	ldr		r0, [r0, #0x0]
	ldrh	r0, [r0, #0x36]
	cmp		r0, #0x0
	beq		_08027b60
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x0
	bne		_08027b62
	b		_08027b66

.incbin "base.gba", 0x27B4E, 0x2

_08027b50:	.4byte 0x03000294
_08027b54:	.4byte SIOData_Normal_8bitandUARTMode
_08027b58:	.4byte 0x03000284
_08027b5c:	.4byte 0x030002A0

_08027b60:
	mov		r2, #0x1
_08027b62:
	cmp		r2, #0x0
	beq		_08027bb8
_08027b66:
	ldr		r0, _08027b84
	ldr		r0, [r0, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08027b90
	ldr		r1, _08027b88
	ldr		r0, _08027b8c
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	b		_08027b92

.incbin "base.gba", 0x27B82, 0x2

_08027b84:	.4byte 0x03000254
_08027b88:	.4byte 0x080f8dd4
_08027b8c:	.4byte 0x03004C18

_08027b90:
	mov		r2, #0x0
_08027b92:
	cmp		r2, #0x0
	beq		_08027ba8
	ldr		r1, _08027ba4
	neg		r0, r2
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0xc3
	strh	r0, [r1, #0x0]
	b		_08027bb8

_08027ba4:	.4byte Timer3Counter_Reload

_08027ba8:
	ldr		r2, _08027bc0
	ldr		r0, _08027bc4
	ldr		r0, [r0, #0x0]
	mov		r4, #0xc1
	lsl		r4, r4, #0x7
	add		r1, r4, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
_08027bb8:
	mov		r0, #0x1
	str		r0, [r3, #0x0]
	mov		r0, #0x5
	b		_08027bcc

_08027bc0:	.4byte SIOControlRegister
_08027bc4:	.4byte 0x03000250

_08027bc8:
	mov		r0, #0x8
	neg		r0, r0
_08027bcc:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x27BD2, 0x2
	thumb_func_end sub_08027b10

	thumb_func_start sub_08027bd4
sub_08027bd4:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r0, _08027c78
	mov		r5, #0x0
	str		r5, [r0, #0x0]
	ldr		r6, _08027c7c
	str		r4, [r6, #0x0]
	ldr		r0, _08027c80
	str		r5, [r0, #0x0]
	ldr		r1, _08027c84
	ldr		r0, _08027c88
	str		r5, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r2, _08027c8c
	str		r5, [r2, #0x0]
	ldr		r3, _08027c90
	ldrh	r1, [r4, #0x30]
	mov		r0, #0x3
	and		r0, r1
	str		r0, [r3, #0x0]
	ldr		r0, _08027c94
	str		r5, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	str		r0, [r2, #0x0]
	ldrh	r0, [r4, #0x2e]
	add		r7, r3, #0x0
	cmp		r0, #0x0
	bne		_08027c12
	mov		r0, #0xa
	strh	r0, [r4, #0x2e]
_08027c12:
	ldr		r0, _08027c98
	str		r5, [r0, #0x4]
	ldr		r1, [r0, #0x4]
	str		r1, [r0, #0x0]
	ldr		r1, _08027c9c
	ldr		r0, [r6, #0x0]
	ldrh	r0, [r0, #0x2c]
	strh	r0, [r1, #0x0]
	ldr		r4, _08027ca0
	ldr		r3, _08027ca4
	ldr		r5, _08027ca8
	mov		r2, #0x3
_08027c2a:
	ldrh	r0, [r1, #0x0]
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x2]
	add		r1, #0x2
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_08027c2a
	mov		r2, #0x0
	str		r2, [r3, #0x0]
	str		r2, [r4, #0x0]
	ldr		r0, _08027cac
	strh	r2, [r0, #0x0]
	ldr		r3, _08027cb0
	ldr		r0, [r7, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0x6
	add		r1, r4, #0x0
	orr		r0, r1
	strh	r0, [r3, #0x0]
	ldr		r0, _08027cb4
	strh	r2, [r0, #0x0]
	mov		r0, #0x7
	add		r1, r5, #0x0
	bl		sub_0807df68
	ldr		r1, _08027cb8
	mov		r0, #0x6
	bl		sub_0807df68
	ldr		r1, _08027cbc
	mov		r0, #0x2
	bl		sub_0807df78
	ldr		r1, _08027cc0
	mov		r0, #0xf0
	str		r0, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08027c78:	.4byte 0x030052E0
_08027c7c:	.4byte 0x030002A0
_08027c80:	.4byte 0x03004C18
_08027c84:	.4byte 0x03000298
_08027c88:	.4byte 0x03000294
_08027c8c:	.4byte 0x03000254
_08027c90:	.4byte 0x03000250
_08027c94:	.4byte 0x03000264
_08027c98:	.4byte 0x03000268
_08027c9c:	.4byte 0x030002A8
_08027ca0:	.4byte 0x030002B4
_08027ca4:	.4byte 0x030002B8
_08027ca8:	.4byte 0x0802810d
_08027cac:	.4byte SIOModeSelect_GeneralPurposeData
_08027cb0:	.4byte SIOControlRegister
_08027cb4:	.4byte Timer3Control
_08027cb8:	.4byte 0x080280e9
_08027cbc:	.4byte 0x000100C0
_08027cc0:	.4byte 0x0300024C
	thumb_func_end sub_08027bd4

	thumb_func_start sub_08027cc4
sub_08027cc4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	ldr		r0, _08027d70
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	ldr		r1, _08027d74
	ldr		r0, _08027d78
	str		r2, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r3, _08027d7c
	ldr		r0, [r3, #0x0]
	mov		r1, #0x4
	neg		r1, r1
	and		r0, r1
	str		r0, [r3, #0x0]
	ldr		r0, _08027d80
	str		r2, [r0, #0x0]
	ldr		r0, _08027d84
	str		r2, [r0, #0x0]
	ldr		r0, _08027d88
	str		r2, [r0, #0x0]
	ldr		r0, _08027d8c
	str		r2, [r0, #0x4]
	ldr		r1, [r0, #0x4]
	str		r1, [r0, #0x0]
	ldr		r0, _08027d90
	str		r2, [r0, #0x4]
	ldr		r1, [r0, #0x4]
	str		r1, [r0, #0x0]
	ldr		r0, _08027d94
	str		r2, [r0, #0x0]
	ldr		r1, _08027d98
	str		r2, [r1, #0x0]
	ldr		r3, _08027d9c
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x4]
	str		r0, [r1, #0x8]
	str		r0, [r1, #0x4]
	ldrh	r0, [r1, #0xc]
	strh	r2, [r1, #0xc]
	mov		r4, #0x0
	mov		r9, r3
	ldr		r7, _08027da0
	mov		r6, #0x0
	ldr		r0, _08027da4
	mov		r8, r0
	add		r3, r7, #0x0
	add		r5, r3, #0x0
	mov		r1, #0xff
	mov		r12, r1
_08027d2e:
	lsl		r2, r4, #0x4
	mov		r0, r12
	str		r0, [r3, #0x0]
	add		r0, r7, #0x4
	add		r2, r2, r0
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	lsl		r1, r4, #0x3
	add		r0, #0xc
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r5, #0x8]
	str		r0, [r2, #0x0]
	ldrh	r0, [r3, #0xc]
	strh	r6, [r3, #0xc]
	ldrh	r0, [r3, #0xe]
	strh	r6, [r3, #0xe]
	mov		r0, r8
	add		r0, #0x4
	mov		r8, r0
	sub		r0, #0x4
	stmia	r0!, {  r6 }
	add		r5, #0x10
	add		r3, #0x10
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_08027d2e
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08027d70:	.4byte 0x0300029C
_08027d74:	.4byte 0x03000298
_08027d78:	.4byte 0x03000294
_08027d7c:	.4byte 0x03000254
_08027d80:	.4byte 0x03000260
_08027d84:	.4byte 0x03000280
_08027d88:	.4byte 0x03000284
_08027d8c:	.4byte 0x03000268
_08027d90:	.4byte 0x03000288
_08027d94:	.4byte 0x030002BC
_08027d98:	.4byte 0x03000238
_08027d9c:	.4byte 0x030002A0
_08027da0:	.4byte 0x030001F8
_08027da4:	.4byte 0x03000270
	thumb_func_end sub_08027cc4

	thumb_func_start sub_08027da8
sub_08027da8:
	push	{ r4, r5, lr }
	ldr		r4, _08027dbc
	ldr		r3, [r4, #0x0]
	cmp		r3, #0x0
	beq		_08027dc4
	cmp		r3, #0x1
	beq		_08027e30
	ldr		r0, _08027dc0
	ldr		r0, [r0, #0x0]
	b		_08027ec8

_08027dbc:	.4byte 0x030002BC
_08027dc0:	.4byte 0x0300024C

_08027dc4:
	ldr		r0, _08027e14
	strh	r3, [r0, #0x0]
	ldr		r1, _08027e18
	ldr		r0, _08027e1c
	ldr		r0, [r0, #0x0]
	ldrh	r0, [r0, #0x2c]
	mvn		r0, r0
	strh	r0, [r1, #0x0]
	ldr		r2, _08027e20
	ldr		r0, _08027e24
	ldr		r0, [r0, #0x0]
	mov		r5, #0xc0
	lsl		r5, r5, #0x7
	add		r1, r5, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	add		r2, r0, #0x0
	mov		r0, #0x8
	and		r0, r2
	cmp		r0, #0x0
	beq		_08027ec4
	mov		r0, #0x40
	and		r0, r2
	cmp		r0, #0x0
	bne		_08027ec4
	ldr		r1, _08027e28
	mov		r0, #0x4
	and		r0, r2
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08027e08
	mov		r0, #0xf0
	str		r0, [r1, #0x0]
_08027e08:
	ldr		r0, _08027e2c
	str		r3, [r0, #0x0]
	mov		r0, #0x1
	str		r0, [r4, #0x0]
	b		_08027ec4

.incbin "base.gba", 0x27E12, 0x2

_08027e14:	.4byte SIOModeSelect_GeneralPurposeData
_08027e18:	.4byte SIOData_Normal_8bitandUARTMode
_08027e1c:	.4byte 0x030002A0
_08027e20:	.4byte SIOControlRegister
_08027e24:	.4byte 0x03000250
_08027e28:	.4byte 0x0300024C
_08027e2c:	.4byte 0x030052E0

_08027e30:
	ldr		r0, _08027e7c
	ldrh	r0, [r0, #0x0]
	add		r2, r0, #0x0
	ldr		r0, _08027e80
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08027e98
	mov		r1, #0x40
	and		r1, r2
	cmp		r1, #0x0
	bne		_08027e98
	ldr		r0, _08027e84
	str		r1, [r0, #0x0]
	ldr		r1, _08027e88
	mov		r0, #0x30
	and		r0, r2
	asr		r0, r0, #0x4
	str		r0, [r1, #0x0]
	ldr		r2, _08027e8c
	lsl		r1, r0, #0x4
	add		r1, r1, r2
	ldrh	r2, [r1, #0xe]
	strh	r3, [r1, #0xe]
	ldr		r3, _08027e90
	ldr		r1, [r3, #0x0]
	mov		r2, #0x4
	neg		r2, r2
	and		r1, r2
	str		r1, [r3, #0x0]
	ldr		r1, [r3, #0x0]
	mov		r2, #0x2
	orr		r1, r2
	str		r1, [r3, #0x0]
	ldr		r1, _08027e94
	str		r2, [r1, #0x0]
	str		r2, [r4, #0x0]
	b		_08027ec8

.incbin "base.gba", 0x27E7A, 0x2

_08027e7c:	.4byte SIOControlRegister
_08027e80:	.4byte 0x030052E0
_08027e84:	.4byte 0x03000248
_08027e88:	.4byte 0x0300024C
_08027e8c:	.4byte 0x030001F8
_08027e90:	.4byte 0x03000254
_08027e94:	.4byte 0x03000294

_08027e98:
	ldr		r1, _08027ed0
	ldr		r0, _08027ed4
	ldr		r0, [r0, #0x0]
	ldrh	r0, [r0, #0x2c]
	mvn		r0, r0
	strh	r0, [r1, #0x0]
	ldr		r2, _08027ed8
	ldr		r0, _08027edc
	ldr		r0, [r0, #0x0]
	mov		r3, #0xc0
	lsl		r3, r3, #0x7
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r0, _08027ee0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08027ec4
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x80
	orr		r0, r1
	strh	r0, [r2, #0x0]
_08027ec4:
	mov		r0, #0x1
	neg		r0, r0
_08027ec8:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x27ECE, 0x2

_08027ed0:	.4byte SIOData_Normal_8bitandUARTMode
_08027ed4:	.4byte 0x030002A0
_08027ed8:	.4byte SIOControlRegister
_08027edc:	.4byte 0x03000250
_08027ee0:	.4byte 0x0300024C
	thumb_func_end sub_08027da8

	thumb_func_start sub_08027ee4
sub_08027ee4:
	push	{ r4, r5, r6, r7, lr }
	ldr		r0, _08027f58
	ldr		r1, [r0, #0x0]
	mov		r12, r0
	cmp		r1, #0x3
	bgt		_08027f50
	ldr		r0, _08027f5c
	lsl		r1, r1, #0x4
	add		r1, r1, r0
	ldr		r1, [r1, #0x0]
	add		r4, r0, #0x0
	cmp		r1, #0xff
	beq		_08027f50
	ldr		r2, _08027f60
	ldr		r1, [r2, #0x0]
	mov		r3, #0x0
	ldr		r0, [r2, #0x4]
	add		r7, r2, #0x0
	ldr		r6, _08027f64
	ldr		r5, _08027f68
	cmp		r1, r0
	beq		_08027f1a
_08027f10:
	add		r1, #0x1
	add		r3, #0x1
	ldr		r0, [r2, #0x4]
	cmp		r1, r0
	bne		_08027f10
_08027f1a:
	ldr		r1, [r6, #0x0]
	ldr		r0, [r5, #0x0]
	cmp		r1, r0
	bne		_08027f46
	ldr		r0, _08027f6c
	ldr		r0, [r0, #0x0]
	ldrh	r0, [r0, #0x34]
	cmp		r3, r0
	ble		_08027f46
	mov		r1, r12
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r0, r4
	mov		r1, #0xff
	str		r1, [r0, #0x0]
	mov		r0, #0xf0
	mov		r2, r12
	str		r0, [r2, #0x0]
	str		r1, [r4, #0x0]
	str		r1, [r4, #0x10]
	str		r1, [r4, #0x20]
	str		r1, [r4, #0x30]
_08027f46:
	ldr		r0, [r5, #0x0]
	str		r0, [r6, #0x0]
	ldr		r0, [r7, #0x4]
	add		r0, #0x1
	str		r0, [r7, #0x4]
_08027f50:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x27F56, 0x2

_08027f58:	.4byte 0x0300024C
_08027f5c:	.4byte 0x030001F8
_08027f60:	.4byte 0x03000288
_08027f64:	.4byte 0x0203EEF8
_08027f68:	.4byte 0x03000290
_08027f6c:	.4byte 0x030002A0

.incbin "base.gba", 0x27F70, 0x6C
	thumb_func_end sub_08027ee4

	thumb_func_start sub_08027fdc
sub_08027fdc:
	ldr		r0, _08027fec
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_08027ff0
	mov		r0, #0x8
	neg		r0, r0
	b		_08027ff2

.incbin "base.gba", 0x27FEA, 0x2

_08027fec:	.4byte 0x03000294

_08027ff0:
	mov		r0, #0x0
_08027ff2:
	bx		lr

.incbin "base.gba", 0x27FF4, 0x54
	thumb_func_end sub_08027fdc

	thumb_func_start sub_08028048
sub_08028048:
	ldr		r1, _08028070
	lsl		r2, r0, #0x4
	add		r3, r1, #0x4
	add		r3, r2, r3
	add		r1, #0x8
	add		r2, r2, r1
	ldr		r1, _08028074
	ldr		r1, [r1, #0x0]
	lsl		r0, r0, #0x3
	add		r1, #0x10
	add		r1, r1, r0
	ldr		r3, [r3, #0x0]
	ldr		r0, [r2, #0x0]
	ldr		r1, [r1, #0x0]
	cmp		r3, r0
	bhi		_08028078
	sub		r0, r0, r3
	asr		r1, r0, #0x1
	b		_0802807e

.incbin "base.gba", 0x2806E, 0x2

_08028070:	.4byte 0x030001F8
_08028074:	.4byte 0x030002A0

_08028078:
	sub		r0, r3, r0
	asr		r0, r0, #0x1
	sub		r1, r1, r0
_0802807e:
	ldr		r2, _0802808c
	ldr		r0, [r2, #0x0]
	cmp		r1, r0
	ble		_08028088
	str		r1, [r2, #0x0]
_08028088:
	add		r0, r1, #0x0
	bx		lr

_0802808c:	.4byte 0x030002B8

.incbin "base.gba", 0x28090, 0x34
	thumb_func_end sub_08028048

	thumb_func_start sub_080280c4
sub_080280c4:
	push	{ lr }
	bl		sub_08027da8
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x280CE, 0x1A
	ldr		r1, _08028100
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r2, _08028104
	ldr		r0, _08028108
	ldr		r0, [r0, #0x0]
	mov		r3, #0xc1
	lsl		r3, r3, #0x7
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	bx		lr

_08028100:	.4byte Timer3Control
_08028104:	.4byte SIOControlRegister
_08028108:	.4byte 0x03000250
	push	{ lr }
	bl		sub_080277f0
	ldr		r0, _08028124
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x38]
	cmp		r0, #0x0
	beq		_08028120
	bl		sub_0807d7d0
_08028120:
	pop		{ r0 }
	bx		r0

_08028124:	.4byte 0x030002A0

.incbin "base.gba", 0x28128, 0x8
	thumb_func_end sub_080280c4

	thumb_func_start sub_08028130
sub_08028130:
	lsl		r0, r0, #0x9
	ldr		r1, _08028138
	add		r0, r0, r1
	bx		lr

_08028138:	.4byte 0x030002C0
	thumb_func_end sub_08028130

	thumb_func_start sub_0802813c
sub_0802813c:
	push	{ lr }
	sub		sp, #0x4
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	ldr		r1, _0802815c
	ldr		r2, _08028160
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
	ldr		r1, _08028164
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	add		sp, #0x4
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2815A, 0x2

_0802815c:	.4byte 0x030002C0
_08028160:	.4byte 0x01000100
_08028164:	.4byte 0x030006C0
	thumb_func_end sub_0802813c

	thumb_func_start sub_08028168
sub_08028168:
	ldr		r1, _08028170
	str		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x2816E, 0x2

_08028170:	.4byte 0x030006C0
	thumb_func_end sub_08028168

	thumb_func_start sub_08028174
sub_08028174:
	ldr		r2, _08028194
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_08028192
	ldr		r1, _08028198
	ldr		r0, _0802819c
	str		r0, [r1, #0x0]
	mov		r0, #0xa0
	lsl		r0, r0, #0x13
	str		r0, [r1, #0x4]
	ldr		r0, _080281a0
	str		r0, [r1, #0x8]
	ldr		r0, [r1, #0x8]
	mov		r0, #0x0
	str		r0, [r2, #0x0]
_08028192:
	bx		lr

_08028194:	.4byte 0x030006C0
_08028198:	.4byte DMA0SourceAddress
_0802819c:	.4byte 0x030002C0
_080281a0:	.4byte 0x80000200
	thumb_func_end sub_08028174

	thumb_func_start sub_080281a4
sub_080281a4:
	lsl		r0, r0, #0xb
	ldr		r1, _080281ac
	add		r0, r0, r1
	bx		lr

_080281ac:	.4byte 0x030006C8
	thumb_func_end sub_080281a4

	thumb_func_start sub_080281b0
sub_080281b0:
	lsl		r0, r0, #0xb
	lsl		r2, r2, #0x5
	add		r2, r2, r1
	lsl		r2, r2, #0x1
	ldr		r1, _080281c0
	add		r2, r2, r1
	add		r0, r0, r2
	bx		lr

_080281c0:	.4byte 0x030006C8
	thumb_func_end sub_080281b0

	thumb_func_start sub_080281c4
sub_080281c4:
	ldr		r2, _080281d0
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x281CE, 0x2

_080281d0:	.4byte 0x030016D0
	thumb_func_end sub_080281c4

	thumb_func_start sub_080281d4
sub_080281d4:
	push	{ lr }
	sub		sp, #0x4
	add		r1, r0, #0x0
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	lsl		r1, r1, #0xb
	ldr		r0, _080281f4
	add		r1, r1, r0
	ldr		r2, _080281f8
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
	add		sp, #0x4
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x281F2, 0x2

_080281f4:	.4byte 0x030006C8
_080281f8:	.4byte 0x01000200
	thumb_func_end sub_080281d4

	thumb_func_start sub_080281fc
sub_080281fc:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r2, _0802820c
	ldrh	r1, [r2, #0x0]
	orr		r0, r1
	strh	r0, [r2, #0x0]
	bx		lr

.incbin "base.gba", 0x2820A, 0x2

_0802820c:	.4byte 0x030016C8
	thumb_func_end sub_080281fc

	thumb_func_start sub_08028210
sub_08028210:
	ldr		r3, _08028258
	ldrh	r2, [r3, #0x0]
	mov		r0, #0x1
	and		r0, r2
	cmp		r0, #0x0
	beq		_08028234
	ldr		r1, _0802825c
	ldr		r0, _08028260
	str		r0, [r1, #0x0]
	ldr		r0, _08028264
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x4]
	ldr		r0, _08028268
	str		r0, [r1, #0x8]
	ldr		r0, [r1, #0x8]
	ldr		r0, _0802826c
	and		r0, r2
	strh	r0, [r3, #0x0]
_08028234:
	ldrh	r2, [r3, #0x0]
	mov		r0, #0x2
	and		r0, r2
	cmp		r0, #0x0
	beq		_08028256
	ldr		r1, _0802825c
	ldr		r0, _08028270
	str		r0, [r1, #0x0]
	ldr		r0, _08028264
	ldr		r0, [r0, #0x4]
	str		r0, [r1, #0x4]
	ldr		r0, _08028268
	str		r0, [r1, #0x8]
	ldr		r0, [r1, #0x8]
	ldr		r0, _08028274
	and		r0, r2
	strh	r0, [r3, #0x0]
_08028256:
	bx		lr

_08028258:	.4byte 0x030016C8
_0802825c:	.4byte DMA0SourceAddress
_08028260:	.4byte 0x030006C8
_08028264:	.4byte 0x030016D0
_08028268:	.4byte 0x84000200
_0802826c:	.4byte 0x0000FFFE
_08028270:	.4byte 0x03000EC8
_08028274:	.4byte 0x0000FFFD
	thumb_func_end sub_08028210

	thumb_func_start sub_08028278
sub_08028278:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x8
	cmp		r0, #0x0
	bge		_08028288
	neg		r0, r0
_08028288:
	str		r0, [sp, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x4]
	cmp		r1, #0x0
	bge		_08028294
	neg		r1, r1
_08028294:
	add		r6, r1, #0x0
	mov		r7, #0x0
	ldr		r2, [sp, #0x4]
	cmp		r7, r2
	bhi		_080282a8
	cmp		r7, r2
	bne		_080282b4
	ldr		r3, [sp, #0x0]
	cmp		r6, r3
	bls		_080282b4
_080282a8:
	ldr		r4, [sp, #0x0]
	ldr		r5, [sp, #0x4]
	str		r6, [sp, #0x0]
	str		r7, [sp, #0x4]
	add		r7, r5, #0x0
	add		r6, r4, #0x0
_080282b4:
	add		r0, r7, #0x0
	orr		r0, r6
	cmp		r0, #0x0
	bne		_080282c0
	ldr		r0, [sp, #0x0]
	b		_0802839e
_080282c0:
	ldr		r0, [sp, #0x4]
	cmp		r0, #0x0
	bhi		_080282d6
	cmp		r0, #0x0
	bne		_080282d0
	ldr		r2, [sp, #0x0]
	cmp		r2, #0xff
	bhi		_080282d6
_080282d0:
	mov		r3, #0x10
	mov		r9, r3
	b		_080282da
_080282d6:
	mov		r0, #0x0
	mov		r9, r0
_080282da:
	ldr		r0, [sp, #0x0]
	ldr		r1, [sp, #0x4]
	mov		r2, r9
	bl		sub_0807d79c
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	add		r1, r7, #0x0
	add		r0, r6, #0x0
	mov		r2, r9
	bl		sub_0807d79c
	add		r7, r1, #0x0
	add		r6, r0, #0x0
	mov		r2, #0x0
	mov		r8, r2
_080282fa:
	lsr		r3, r6, #0x10
	lsl		r2, r7, #0x10
	add		r1, r3, #0x0
	orr		r1, r2
	lsl		r0, r6, #0x10
	ldr		r2, [sp, #0x0]
	ldr		r3, [sp, #0x4]
	bl		sub_0807da18
	add		r5, r1, #0x0
	add		r4, r0, #0x0
	add		r3, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_0807d9a8
	lsl		r3, r1, #0x10
	lsr		r2, r0, #0x10
	add		r4, r3, #0x0
	orr		r4, r2
	lsr		r5, r1, #0x10
	lsr		r3, r4, #0x18
	lsl		r2, r5, #0x8
	add		r1, r3, #0x0
	orr		r1, r2
	lsl		r0, r4, #0x8
	ldr		r3, _080283b0
	ldr		r2, _080283ac
	add		r2, r2, r4
	adc		r3, r5
	lsl		r5, r3, #0x18
	lsr		r4, r2, #0x8
	add		r2, r5, #0x0
	orr		r2, r4
	lsr		r3, r3, #0x8
	bl		sub_0807da18
	add		r5, r1, #0x0
	add		r4, r0, #0x0
	ldr		r0, [sp, #0x0]
	ldr		r1, [sp, #0x4]
	add		r3, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_0807d9a8
	lsl		r3, r1, #0x11
	lsr		r2, r0, #0xf
	add		r0, r3, #0x0
	orr		r0, r2
	lsr		r1, r1, #0xf
	ldr		r2, [sp, #0x0]
	ldr		r3, [sp, #0x4]
	add		r2, r2, r0
	adc		r3, r1
	str		r2, [sp, #0x0]
	str		r3, [sp, #0x4]
	add		r1, r7, #0x0
	add		r0, r6, #0x0
	add		r3, r5, #0x0
	add		r2, r4, #0x0
	bl		sub_0807d9a8
	lsl		r3, r1, #0x10
	lsr		r2, r0, #0x10
	add		r6, r3, #0x0
	orr		r6, r2
	lsr		r7, r1, #0x10
	mov		r0, r8
	add		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r8, r0
	cmp		r0, #0x2
	bls		_080282fa
	ldr		r0, [sp, #0x0]
	ldr		r1, [sp, #0x4]
	mov		r2, r9
	bl		sub_0807d8a4
	add		r5, r1, #0x0
	add		r4, r0, #0x0
	ldr		r0, _080283b4
	and		r0, r4
_0802839e:
	add		sp, #0x8
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_080283ac:	.4byte 0x00040000
_080283b0:	.4byte 0x00000000
_080283b4:	.4byte 0x7FFFFFFF

.incbin "base.gba", 0x283B8, 0x234
	thumb_func_end sub_08028278

	thumb_func_start sub_080285ec
sub_080285ec:
	push	{ r4, r5, r6, lr }
	lsl		r0, r0, #0x10
	lsl		r1, r1, #0x10
	lsr		r4, r1, #0x10
	mov		r6, #0x0
	mov		r5, #0x0
	lsr		r3, r0, #0x10
	cmp		r0, #0x0
	ble		_0802860a
	lsl		r1, r4, #0x10
	asr		r0, r1, #0x10
	mvn		r0, r0
	lsr		r2, r0, #0x1f
	add		r0, r1, #0x0
	b		_08028614
_0802860a:
	lsl		r0, r4, #0x10
	mov		r2, #0x3
	cmp		r0, #0x0
	ble		_08028614
	mov		r2, #0x2
_08028614:
	cmp		r2, #0x1
	beq		_08028630
	cmp		r2, #0x1
	bgt		_08028622
	cmp		r2, #0x0
	beq		_0802862c
	b		_08028674
_08028622:
	cmp		r2, #0x2
	beq		_08028642
	cmp		r2, #0x3
	beq		_08028656
	b		_08028674
_0802862c:
	lsl		r0, r3, #0x18
	b		_0802866c
_08028630:
	cmp		r0, #0x0
	bne		_0802863a
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	b		_080286ba
_0802863a:
	lsl		r0, r3, #0x18
	lsr		r6, r0, #0x18
	lsl		r0, r4, #0x18
	b		_08028672
_08028642:
	cmp		r3, #0x0
	bne		_0802864c
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	b		_080286ba
_0802864c:
	neg		r0, r3
	lsl		r0, r0, #0x18
	lsr		r6, r0, #0x18
	lsl		r0, r4, #0x18
	b		_08028672
_08028656:
	cmp		r3, #0x0
	bne		_0802865e
	mov		r0, #0x0
	b		_080286ba
_0802865e:
	cmp		r0, #0x0
	bne		_08028668
	mov		r0, #0xc0
	lsl		r0, r0, #0x8
	b		_080286ba
_08028668:
	neg		r0, r3
	lsl		r0, r0, #0x18
_0802866c:
	lsr		r6, r0, #0x18
	neg		r0, r4
	lsl		r0, r0, #0x18
_08028672:
	lsr		r5, r0, #0x18
_08028674:
	ldr		r1, _08028690
	lsl		r0, r5, #0x7
	sub		r0, #0x81
	add		r0, r6, r0
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrh	r1, [r0, #0x0]
	cmp		r2, #0x2
	beq		_080286a0
	cmp		r2, #0x2
	bgt		_08028694
	cmp		r2, #0x1
	beq		_0802869a
	b		_080286b6

_08028690:	.4byte 0x080f9008

_08028694:
	cmp		r2, #0x3
	beq		_080286b0
	b		_080286b6
_0802869a:
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	b		_080286b4
_080286a0:
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	ldr		r0, _080286ac
	and		r1, r0
	b		_080286b6

_080286ac:	.4byte 0x0000FFFF

_080286b0:
	mov		r0, #0x80
	lsl		r0, r0, #0x9
_080286b4:
	sub		r1, r0, r1
_080286b6:
	lsl		r0, r1, #0x10
	lsr		r0, r0, #0x10
_080286ba:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x286C0, 0x78
	thumb_func_end sub_080285ec

	thumb_func_start sub_08028738
sub_08028738:
	push	{ lr }
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_08071b64
	lsl		r0, r0, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x17
	add		r0, r0, r1
	lsr		r0, r0, #0x10
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x28754, 0x10
	thumb_func_end sub_08028738

	thumb_func_start sub_08028764
sub_08028764:
	add		r2, r0, #0x0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r0, [r2, #0x4]
	cmp		r0, #0x0
	beq		_08028774
	str		r1, [r0, #0x0]
	b		_08028776
_08028774:
	str		r1, [r2, #0x0]
_08028776:
	str		r1, [r2, #0x4]
	bx		lr

.incbin "base.gba", 0x2877A, 0x26
	thumb_func_end sub_08028764

	thumb_func_start sub_080287a0
sub_080287a0:
	ldr		r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x287A4, 0x4
	thumb_func_end sub_080287a0

	thumb_func_start sub_080287a8
sub_080287a8:
	ldr		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x287AC, 0x1C
	thumb_func_end sub_080287a8

	thumb_func_start sub_080287c8
sub_080287c8:
	add		r3, r0, #0x0
	ldr		r2, [r3, #0x4]
	str		r2, [r1, #0x4]
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	cmp		r2, #0x0
	beq		_080287da
	str		r1, [r2, #0x0]
	b		_080287dc
_080287da:
	str		r1, [r3, #0x0]
_080287dc:
	str		r1, [r3, #0x4]
	bx		lr
	thumb_func_end sub_080287c8

	thumb_func_start sub_080287e0
sub_080287e0:
	add		r3, r0, #0x0
	ldr		r0, [r1, #0x4]
	str		r0, [r2, #0x4]
	str		r1, [r2, #0x0]
	ldr		r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_080287f2
	str		r2, [r0, #0x0]
	b		_080287f4
_080287f2:
	str		r2, [r3, #0x0]
_080287f4:
	str		r2, [r1, #0x4]
	bx		lr

.incbin "base.gba", 0x287F8, 0x50
	thumb_func_end sub_080287e0

	thumb_func_start sub_08028848
sub_08028848:
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldr		r0, [r3, #0x0]
	cmp		r2, r0
	bne		_08028858
	ldr		r0, [r2, #0x0]
	str		r0, [r3, #0x0]
	b		_0802885e
_08028858:
	ldr		r1, [r2, #0x4]
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
_0802885e:
	ldr		r0, [r3, #0x4]
	cmp		r2, r0
	bne		_0802886a
	ldr		r0, [r2, #0x4]
	str		r0, [r3, #0x4]
	b		_08028870
_0802886a:
	ldr		r1, [r2, #0x0]
	ldr		r0, [r2, #0x4]
	str		r0, [r1, #0x4]
_08028870:
	mov		r0, #0x0
	str		r0, [r2, #0x0]
	str		r0, [r2, #0x4]
	bx		lr
	thumb_func_end sub_08028848

	thumb_func_start sub_08028878
sub_08028878:
	mov		r1, #0x0
	str		r1, [r0, #0x4]
	str		r1, [r0, #0x0]
	bx		lr
	thumb_func_end sub_08028878

	thumb_func_start sub_08028880
sub_08028880:
	mov		r1, #0x0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0802888a
	mov		r1, #0x1
_0802888a:
	add		r0, r1, #0x0
	bx		lr

.incbin "base.gba", 0x2888E, 0x2
	thumb_func_end sub_08028880

	thumb_func_start sub_08028890
sub_08028890:
	mov		r1, #0x0
	str		r1, [r0, #0x4]
	str		r1, [r0, #0x0]
	bx		lr
	thumb_func_end sub_08028890

	thumb_func_start sub_08028898
sub_08028898:
	add		r3, r0, #0x0
	mov		r0, #0x0
	ldr		r2, [r3, #0x0]
	str		r0, [r1, #0x40]
	str		r2, [r1, #0x3c]
	cmp		r2, #0x0
	beq		_080288aa
	str		r1, [r2, #0x40]
	b		_080288ac
_080288aa:
	str		r1, [r3, #0x4]
_080288ac:
	str		r1, [r3, #0x0]
	bx		lr

.incbin "base.gba", 0x288B0, 0x48
	thumb_func_end sub_08028898

	thumb_func_start sub_080288f8
sub_080288f8:
	ldr		r2, [r0, #0x0]
	ldr		r1, [r2, #0x3c]
	str		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_08028908
	mov		r0, #0x0
	str		r0, [r1, #0x40]
	b		_0802890a
_08028908:
	str		r1, [r0, #0x4]
_0802890a:
	mov		r0, #0x0
	str		r0, [r2, #0x40]
	str		r0, [r2, #0x3c]
	add		r0, r2, #0x0
	bx		lr
	thumb_func_end sub_080288f8

	thumb_func_start sub_08028914
sub_08028914:
	ldr		r2, [r0, #0x4]
	ldr		r1, [r2, #0x40]
	str		r1, [r0, #0x4]
	cmp		r1, #0x0
	beq		_08028924
	mov		r0, #0x0
	str		r0, [r1, #0x3c]
	b		_08028926
_08028924:
	str		r1, [r0, #0x0]
_08028926:
	mov		r0, #0x0
	str		r0, [r2, #0x40]
	str		r0, [r2, #0x3c]
	add		r0, r2, #0x0
	bx		lr
	thumb_func_end sub_08028914

	thumb_func_start sub_08028930
sub_08028930:
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	bne		_0802894c
	ldr		r2, [r1, #0x3c]
	str		r2, [r3, #0x0]
	cmp		r2, #0x0
	beq		_08028948
	mov		r0, #0x0
	str		r0, [r2, #0x40]
	b		_08028962
_08028948:
	str		r2, [r3, #0x4]
	b		_08028962
_0802894c:
	ldr		r0, [r3, #0x4]
	cmp		r1, r0
	bne		_0802896a
	ldr		r2, [r1, #0x40]
	str		r2, [r3, #0x4]
	cmp		r2, #0x0
	beq		_08028960
	mov		r0, #0x0
	str		r0, [r2, #0x3c]
	b		_08028962
_08028960:
	str		r2, [r3, #0x0]
_08028962:
	mov		r0, #0x0
	str		r0, [r1, #0x40]
	str		r0, [r1, #0x3c]
	b		_0802897c
_0802896a:
	ldr		r1, [r2, #0x40]
	ldr		r0, [r2, #0x3c]
	str		r0, [r1, #0x3c]
	ldr		r1, [r2, #0x3c]
	ldr		r0, [r2, #0x40]
	str		r0, [r1, #0x40]
	mov		r0, #0x0
	str		r0, [r2, #0x40]
	str		r0, [r2, #0x3c]
_0802897c:
	bx		lr

.incbin "base.gba", 0x2897E, 0xA
	thumb_func_end sub_08028930

	thumb_func_start sub_08028988
sub_08028988:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	mov		r8, r2
	mov		r9, r3
	mov		r2, #0x0
	sub		r0, r7, #0x1
	cmp		r2, r0
	bge		_080289e8
	mov		r10, r0
_080289a4:
	lsl		r1, r2, #0x2
	add		r0, r1, r6
	ldr		r0, [r0, #0x0]
	add		r0, #0x36
	ldrb	r5, [r0, #0x0]
	add		r4, r2, #0x0
	add		r3, r4, #0x1
	add		r2, r1, #0x0
	mov		r12, r3
	cmp		r3, r7
	bge		_080289d4
	lsl		r0, r3, #0x2
	add		r1, r0, r6
_080289be:
	ldr		r0, [r1, #0x0]
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	cmp		r0, r5
	bge		_080289cc
	add		r5, r0, #0x0
	add		r4, r3, #0x0
_080289cc:
	add		r1, #0x4
	add		r3, #0x1
	cmp		r3, r7
	blt		_080289be
_080289d4:
	lsl		r1, r4, #0x2
	add		r1, r1, r6
	ldr		r3, [r1, #0x0]
	add		r2, r2, r6
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	str		r3, [r2, #0x0]
	mov		r2, r12
	cmp		r2, r10
	blt		_080289a4
_080289e8:
	mov		r3, #0x0
	mov		r2, #0x0
	mov		r4, #0x0
	cmp		r2, r7
	bge		_08028a28
_080289f2:
	lsl		r0, r3, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	add		r0, #0x36
	add		r3, #0x1
	mov		r10, r3
	add		r3, r4, #0x1
	ldrb	r1, [r0, #0x0]
	cmp		r2, r1
	bgt		_08028a16
	add		r1, r0, #0x0
_08028a08:
	mov		r5, r8
	add		r0, r5, r2
	strb	r4, [r0, #0x0]
	add		r2, #0x1
	ldrb	r0, [r1, #0x0]
	cmp		r2, r0
	ble		_08028a08
_08028a16:
	add		r4, r3, #0x0
	mov		r3, r10
	cmp		r3, r7
	blt		_080289f2
	b		_08028a28
_08028a20:
	mov		r1, r8
	add		r0, r1, r2
	strb	r4, [r0, #0x0]
	add		r2, #0x1
_08028a28:
	cmp		r2, r9
	blt		_08028a20
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x28A3A, 0x2
	thumb_func_end sub_08028988

	thumb_func_start sub_08028a3c
sub_08028a3c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	str		r2, [sp, #0x8]
	mov		r3, #0x0
	ldrb	r0, [r0, #0x0]
	cmp		r3, r0
	blt		_08028a58
	b		_08028c54
_08028a58:
	ldr		r1, [sp, #0x0]
	add		r1, #0x4
	mov		r9, r1
_08028a5e:
	lsl		r0, r3, #0x2
	add		r0, r9
	ldr		r5, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r4, r3, #0x1
	mov		r10, r4
	cmp		r0, #0x7f
	bne		_08028a74
	b		_08028c48
_08028a74:
	sub		r1, r0, #0x2
	add		r2, r0, #0x3
	cmp		r1, #0x0
	bge		_08028a80
	ldr		r0, [sp, #0x8]
	add		r1, r1, r0
_08028a80:
	ldr		r4, [sp, #0x8]
	cmp		r2, r4
	blt		_08028a88
	sub		r2, r2, r4
_08028a88:
	ldr		r4, [sp, #0x4]
	add		r0, r4, r1
	ldrb	r7, [r0, #0x0]
	add		r0, r4, r2
	ldrb	r0, [r0, #0x0]
	mov		r8, r0
	cmp		r7, r3
	bgt		_08028a9a
	mov		r7, r10
_08028a9a:
	cmp		r7, r8
	bge		_08028b28
	add		r6, r7, #0x0
_08028aa0:
	lsl		r0, r6, #0x2
	add		r0, r9
	ldr		r4, [r0, #0x0]
	cmp		r5, r4
	beq		_08028b20
	ldrb	r0, [r5, #0xc]
	ldrb	r1, [r4, #0xc]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x0]
	ldr		r0, [r4, #0x0]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028abe
	neg		r1, r1
_08028abe:
	cmp		r1, r2
	bgt		_08028b20
	ldrb	r0, [r5, #0xd]
	ldrb	r1, [r4, #0xd]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x4]
	ldr		r0, [r4, #0x4]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028ad6
	neg		r1, r1
_08028ad6:
	cmp		r1, r2
	bgt		_08028b20
	ldrb	r0, [r5, #0xe]
	ldrb	r1, [r4, #0xe]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x8]
	ldr		r0, [r4, #0x8]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028aee
	neg		r1, r1
_08028aee:
	cmp		r1, r2
	bgt		_08028b20
	ldrh	r1, [r5, #0x38]
	ldrh	r0, [r4, #0x38]
	orr		r1, r0
	mov		r0, #0x1
	cmp		r1, #0x1
	ble		_08028b00
	mov		r0, #0x0
_08028b00:
	cmp		r0, #0x0
	beq		_08028b20
	ldr		r2, [r5, #0x18]
	cmp		r2, #0x0
	beq		_08028b12
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0807d7d8
_08028b12:
	ldr		r2, [r4, #0x18]
	cmp		r2, #0x0
	beq		_08028b20
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0807d7d8
_08028b20:
	add		r6, #0x1
	cmp		r6, r8
	blt		_08028aa0
	b		_08028c48
_08028b28:
	mov		r6, r10
	cmp		r10, r8
	bge		_08028bb4
_08028b2e:
	lsl		r0, r6, #0x2
	add		r0, r9
	ldr		r4, [r0, #0x0]
	cmp		r5, r4
	beq		_08028bae
	ldrb	r0, [r5, #0xc]
	ldrb	r1, [r4, #0xc]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x0]
	ldr		r0, [r4, #0x0]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028b4c
	neg		r1, r1
_08028b4c:
	cmp		r1, r2
	bgt		_08028bae
	ldrb	r0, [r5, #0xd]
	ldrb	r1, [r4, #0xd]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x4]
	ldr		r0, [r4, #0x4]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028b64
	neg		r1, r1
_08028b64:
	cmp		r1, r2
	bgt		_08028bae
	ldrb	r0, [r5, #0xe]
	ldrb	r1, [r4, #0xe]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x8]
	ldr		r0, [r4, #0x8]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028b7c
	neg		r1, r1
_08028b7c:
	cmp		r1, r2
	bgt		_08028bae
	ldrh	r1, [r5, #0x38]
	ldrh	r0, [r4, #0x38]
	orr		r1, r0
	mov		r0, #0x1
	cmp		r1, #0x1
	ble		_08028b8e
	mov		r0, #0x0
_08028b8e:
	cmp		r0, #0x0
	beq		_08028bae
	ldr		r2, [r5, #0x18]
	cmp		r2, #0x0
	beq		_08028ba0
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0807d7d8
_08028ba0:
	ldr		r2, [r4, #0x18]
	cmp		r2, #0x0
	beq		_08028bae
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0807d7d8
_08028bae:
	add		r6, #0x1
	cmp		r6, r8
	blt		_08028b2e
_08028bb4:
	add		r6, r7, #0x0
	ldr		r0, [sp, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r6, r0
	bge		_08028c48
_08028bbe:
	lsl		r0, r6, #0x2
	add		r0, r9
	ldr		r4, [r0, #0x0]
	cmp		r5, r4
	beq		_08028c3e
	ldrb	r0, [r5, #0xc]
	ldrb	r1, [r4, #0xc]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x0]
	ldr		r0, [r4, #0x0]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028bdc
	neg		r1, r1
_08028bdc:
	cmp		r1, r2
	bgt		_08028c3e
	ldrb	r0, [r5, #0xd]
	ldrb	r1, [r4, #0xd]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x4]
	ldr		r0, [r4, #0x4]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028bf4
	neg		r1, r1
_08028bf4:
	cmp		r1, r2
	bgt		_08028c3e
	ldrb	r0, [r5, #0xe]
	ldrb	r1, [r4, #0xe]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x8]
	ldr		r0, [r4, #0x8]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028c0c
	neg		r1, r1
_08028c0c:
	cmp		r1, r2
	bgt		_08028c3e
	ldrh	r1, [r5, #0x38]
	ldrh	r0, [r4, #0x38]
	orr		r1, r0
	mov		r0, #0x1
	cmp		r1, #0x1
	ble		_08028c1e
	mov		r0, #0x0
_08028c1e:
	cmp		r0, #0x0
	beq		_08028c3e
	ldr		r2, [r5, #0x18]
	cmp		r2, #0x0
	beq		_08028c30
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0807d7d8
_08028c30:
	ldr		r2, [r4, #0x18]
	cmp		r2, #0x0
	beq		_08028c3e
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0807d7d8
_08028c3e:
	add		r6, #0x1
	ldr		r1, [sp, #0x0]
	ldrb	r1, [r1, #0x0]
	cmp		r6, r1
	blt		_08028bbe
_08028c48:
	mov		r3, r10
	ldr		r4, [sp, #0x0]
	ldrb	r4, [r4, #0x0]
	cmp		r3, r4
	bge		_08028c54
	b		_08028a5e
_08028c54:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08028a3c

	thumb_func_start sub_08028c64
sub_08028c64:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	mov		r2, #0x0
	ldrb	r1, [r7, #0x0]
	cmp		r2, r1
	bge		_08028d18
	add		r0, r7, #0x4
	mov		r9, r0
_08028c7a:
	lsl		r0, r2, #0x2
	add		r0, r9
	ldr		r5, [r0, #0x0]
	add		r6, r2, #0x1
	mov		r8, r6
	cmp		r8, r1
	bge		_08028d10
_08028c88:
	lsl		r0, r6, #0x2
	add		r0, r9
	ldr		r4, [r0, #0x0]
	cmp		r5, r4
	beq		_08028d08
	ldrb	r0, [r5, #0xc]
	ldrb	r1, [r4, #0xc]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x0]
	ldr		r0, [r4, #0x0]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028ca6
	neg		r1, r1
_08028ca6:
	cmp		r1, r2
	bgt		_08028d08
	ldrb	r0, [r5, #0xd]
	ldrb	r1, [r4, #0xd]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x4]
	ldr		r0, [r4, #0x4]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028cbe
	neg		r1, r1
_08028cbe:
	cmp		r1, r2
	bgt		_08028d08
	ldrb	r0, [r5, #0xe]
	ldrb	r1, [r4, #0xe]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x8]
	ldr		r0, [r4, #0x8]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028cd6
	neg		r1, r1
_08028cd6:
	cmp		r1, r2
	bgt		_08028d08
	ldrh	r1, [r5, #0x38]
	ldrh	r0, [r4, #0x38]
	orr		r1, r0
	mov		r0, #0x1
	cmp		r1, #0x1
	ble		_08028ce8
	mov		r0, #0x0
_08028ce8:
	cmp		r0, #0x0
	beq		_08028d08
	ldr		r2, [r5, #0x18]
	cmp		r2, #0x0
	beq		_08028cfa
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0807d7d8
_08028cfa:
	ldr		r2, [r4, #0x18]
	cmp		r2, #0x0
	beq		_08028d08
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0807d7d8
_08028d08:
	add		r6, #0x1
	ldrb	r0, [r7, #0x0]
	cmp		r6, r0
	blt		_08028c88
_08028d10:
	mov		r2, r8
	ldrb	r1, [r7, #0x0]
	cmp		r2, r1
	blt		_08028c7a
_08028d18:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08028c64

	thumb_func_start sub_08028d24
sub_08028d24:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r7, r0, #0x0
	str		r1, [sp, #0x0]
	mov		r10, r2
	mov		r2, #0x0
	b		_08028f2c
_08028d3a:
	lsl		r1, r2, #0x2
	add		r0, r7, #0x4
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r2, #0x1
	str		r2, [sp, #0x4]
	cmp		r0, #0x7f
	bne		_08028d52
	b		_08028f2a
_08028d52:
	sub		r1, r0, #0x2
	add		r2, r0, #0x3
	cmp		r1, #0x0
	bge		_08028d5c
	add		r1, r10
_08028d5c:
	cmp		r2, r10
	blt		_08028d64
	mov		r3, r10
	sub		r2, r2, r3
_08028d64:
	ldr		r3, [sp, #0x0]
	add		r0, r3, r1
	ldrb	r0, [r0, #0x0]
	mov		r8, r0
	add		r0, r3, r2
	ldrb	r0, [r0, #0x0]
	mov		r9, r0
	cmp		r8, r9
	bge		_08028e06
	mov		r6, r8
	mov		r0, #0x64
	add		r0, r0, r7
	mov		r8, r0
_08028d7e:
	lsl		r0, r6, #0x2
	add		r0, r8
	ldr		r4, [r0, #0x0]
	cmp		r5, r4
	beq		_08028dfe
	ldrb	r0, [r5, #0xc]
	ldrb	r1, [r4, #0xc]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x0]
	ldr		r0, [r4, #0x0]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028d9c
	neg		r1, r1
_08028d9c:
	cmp		r1, r2
	bgt		_08028dfe
	ldrb	r0, [r5, #0xd]
	ldrb	r1, [r4, #0xd]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x4]
	ldr		r0, [r4, #0x4]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028db4
	neg		r1, r1
_08028db4:
	cmp		r1, r2
	bgt		_08028dfe
	ldrb	r0, [r5, #0xe]
	ldrb	r1, [r4, #0xe]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x8]
	ldr		r0, [r4, #0x8]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028dcc
	neg		r1, r1
_08028dcc:
	cmp		r1, r2
	bgt		_08028dfe
	ldrh	r1, [r5, #0x38]
	ldrh	r0, [r4, #0x38]
	orr		r1, r0
	mov		r0, #0x1
	cmp		r1, #0x1
	ble		_08028dde
	mov		r0, #0x0
_08028dde:
	cmp		r0, #0x0
	beq		_08028dfe
	ldr		r2, [r5, #0x18]
	cmp		r2, #0x0
	beq		_08028df0
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0807d7d8
_08028df0:
	ldr		r2, [r4, #0x18]
	cmp		r2, #0x0
	beq		_08028dfe
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0807d7d8
_08028dfe:
	add		r6, #0x1
	cmp		r6, r9
	blt		_08028d7e
	b		_08028f2a
_08028e06:
	mov		r6, #0x0
	cmp		r6, r9
	bge		_08028e96
_08028e0c:
	lsl		r1, r6, #0x2
	add		r0, r7, #0x0
	add		r0, #0x64
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	cmp		r5, r4
	beq		_08028e90
	ldrb	r0, [r5, #0xc]
	ldrb	r1, [r4, #0xc]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x0]
	ldr		r0, [r4, #0x0]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028e2e
	neg		r1, r1
_08028e2e:
	cmp		r1, r2
	bgt		_08028e90
	ldrb	r0, [r5, #0xd]
	ldrb	r1, [r4, #0xd]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x4]
	ldr		r0, [r4, #0x4]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028e46
	neg		r1, r1
_08028e46:
	cmp		r1, r2
	bgt		_08028e90
	ldrb	r0, [r5, #0xe]
	ldrb	r1, [r4, #0xe]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x8]
	ldr		r0, [r4, #0x8]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028e5e
	neg		r1, r1
_08028e5e:
	cmp		r1, r2
	bgt		_08028e90
	ldrh	r1, [r5, #0x38]
	ldrh	r0, [r4, #0x38]
	orr		r1, r0
	mov		r0, #0x1
	cmp		r1, #0x1
	ble		_08028e70
	mov		r0, #0x0
_08028e70:
	cmp		r0, #0x0
	beq		_08028e90
	ldr		r2, [r5, #0x18]
	cmp		r2, #0x0
	beq		_08028e82
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0807d7d8
_08028e82:
	ldr		r2, [r4, #0x18]
	cmp		r2, #0x0
	beq		_08028e90
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0807d7d8
_08028e90:
	add		r6, #0x1
	cmp		r6, r9
	blt		_08028e0c
_08028e96:
	mov		r6, r8
	ldrb	r1, [r7, #0x1]
	cmp		r6, r1
	bge		_08028f2a
_08028e9e:
	lsl		r1, r6, #0x2
	add		r0, r7, #0x0
	add		r0, #0x64
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	cmp		r5, r4
	beq		_08028f22
	ldrb	r0, [r5, #0xc]
	ldrb	r1, [r4, #0xc]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x0]
	ldr		r0, [r4, #0x0]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028ec0
	neg		r1, r1
_08028ec0:
	cmp		r1, r2
	bgt		_08028f22
	ldrb	r0, [r5, #0xd]
	ldrb	r1, [r4, #0xd]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x4]
	ldr		r0, [r4, #0x4]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028ed8
	neg		r1, r1
_08028ed8:
	cmp		r1, r2
	bgt		_08028f22
	ldrb	r0, [r5, #0xe]
	ldrb	r1, [r4, #0xe]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x8]
	ldr		r0, [r4, #0x8]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028ef0
	neg		r1, r1
_08028ef0:
	cmp		r1, r2
	bgt		_08028f22
	ldrh	r1, [r5, #0x38]
	ldrh	r0, [r4, #0x38]
	orr		r1, r0
	mov		r0, #0x1
	cmp		r1, #0x1
	ble		_08028f02
	mov		r0, #0x0
_08028f02:
	cmp		r0, #0x0
	beq		_08028f22
	ldr		r2, [r5, #0x18]
	cmp		r2, #0x0
	beq		_08028f14
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0807d7d8
_08028f14:
	ldr		r2, [r4, #0x18]
	cmp		r2, #0x0
	beq		_08028f22
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0807d7d8
_08028f22:
	add		r6, #0x1
	ldrb	r3, [r7, #0x1]
	cmp		r6, r3
	blt		_08028e9e
_08028f2a:
	ldr		r2, [sp, #0x4]
_08028f2c:
	ldrb	r0, [r7, #0x0]
	cmp		r2, r0
	bge		_08028f34
	b		_08028d3a
_08028f34:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08028d24

	thumb_func_start sub_08028f44
sub_08028f44:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	mov		r2, #0x0
	b		_08028fee
_08028f50:
	lsl		r1, r2, #0x2
	add		r0, r6, #0x4
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	mov		r7, #0x0
	add		r2, #0x1
	mov		r8, r2
	b		_08028fe6
_08028f60:
	lsl		r1, r7, #0x2
	add		r0, r6, #0x0
	add		r0, #0x64
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	cmp		r5, r4
	beq		_08028fe4
	ldrb	r0, [r5, #0xc]
	ldrb	r1, [r4, #0xc]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x0]
	ldr		r0, [r4, #0x0]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028f82
	neg		r1, r1
_08028f82:
	cmp		r1, r2
	bgt		_08028fe4
	ldrb	r0, [r5, #0xd]
	ldrb	r1, [r4, #0xd]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x4]
	ldr		r0, [r4, #0x4]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028f9a
	neg		r1, r1
_08028f9a:
	cmp		r1, r2
	bgt		_08028fe4
	ldrb	r0, [r5, #0xe]
	ldrb	r1, [r4, #0xe]
	add		r0, r0, r1
	lsl		r2, r0, #0xe
	ldr		r1, [r5, #0x8]
	ldr		r0, [r4, #0x8]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08028fb2
	neg		r1, r1
_08028fb2:
	cmp		r1, r2
	bgt		_08028fe4
	ldrh	r1, [r5, #0x38]
	ldrh	r0, [r4, #0x38]
	orr		r1, r0
	mov		r0, #0x1
	cmp		r1, #0x1
	ble		_08028fc4
	mov		r0, #0x0
_08028fc4:
	cmp		r0, #0x0
	beq		_08028fe4
	ldr		r2, [r5, #0x18]
	cmp		r2, #0x0
	beq		_08028fd6
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0807d7d8
_08028fd6:
	ldr		r2, [r4, #0x18]
	cmp		r2, #0x0
	beq		_08028fe4
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0807d7d8
_08028fe4:
	add		r7, #0x1
_08028fe6:
	ldrb	r0, [r6, #0x1]
	cmp		r7, r0
	blt		_08028f60
	mov		r2, r8
_08028fee:
	ldrb	r0, [r6, #0x0]
	cmp		r2, r0
	blt		_08028f50
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x28FFE, 0x2
	thumb_func_end sub_08028f44

	thumb_func_start sub_08029000
sub_08029000:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r4, r1, #0x0
	ldrb	r2, [r3, #0x0]
	cmp		r2, #0x18
	beq		_0802901c
	lsl		r1, r2, #0x2
	add		r0, r3, #0x4
	add		r0, r0, r1
	str		r4, [r0, #0x0]
	add		r2, #0x1
	strb	r2, [r3, #0x0]
	mov		r0, #0x1
	b		_0802901e
_0802901c:
	mov		r0, #0x0
_0802901e:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08029000

	thumb_func_start sub_08029024
sub_08029024:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r4, r1, #0x0
	ldrb	r2, [r3, #0x1]
	cmp		r2, #0x40
	beq		_08029040
	lsl		r1, r2, #0x2
	add		r0, #0x64
	add		r0, r0, r1
	str		r4, [r0, #0x0]
	add		r2, #0x1
	strb	r2, [r3, #0x1]
	mov		r0, #0x1
	b		_08029042
_08029040:
	mov		r0, #0x0
_08029042:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08029024

	thumb_func_start sub_08029048
sub_08029048:
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	strb	r1, [r0, #0x1]
	bx		lr
	thumb_func_end sub_08029048

	thumb_func_start sub_08029050
sub_08029050:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	ldr		r0, _0802909c
	ldrh	r7, [r0, #0x38]
	ldr		r1, _080290a0
	add		r0, r0, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	bne		_080290ac
	add		r0, r6, #0x4
	ldrb	r1, [r6, #0x0]
	ldr		r5, _080290a4
	add		r2, r5, #0x0
	add		r3, r7, #0x0
	bl		sub_08028988
	add		r0, r6, #0x0
	add		r0, #0x64
	ldrb	r1, [r6, #0x1]
	ldr		r4, _080290a8
	add		r2, r4, #0x0
	add		r3, r7, #0x0
	bl		sub_08028988
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	add		r2, r7, #0x0
	bl		sub_08028a3c
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	add		r2, r7, #0x0
	bl		sub_08028d24
	b		_080290b8

_0802909c:	.4byte RunGameLogic_CallBack
_080290a0:	.4byte 0x000007FE
_080290a4:	.4byte 0x03005230
_080290a8:	.4byte 0x03003020

_080290ac:
	add		r0, r6, #0x0
	bl		sub_08028c64
	add		r0, r6, #0x0
	bl		sub_08028f44
_080290b8:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x290BE, 0x2
	thumb_func_end sub_08029050

	thumb_func_start sub_080290c0
sub_080290c0:
	mov		r2, #0x0
	mov		r1, #0x0
	strh	r1, [r0, #0x10]
	str		r1, [r0, #0x0]
	str		r1, [r0, #0x4]
	str		r1, [r0, #0x8]
	strh	r1, [r0, #0x26]
	str		r1, [r0, #0x28]
	str		r1, [r0, #0x2c]
	str		r1, [r0, #0x30]
	strh	r1, [r0, #0x20]
	strh	r1, [r0, #0x22]
	strh	r1, [r0, #0x24]
	strb	r2, [r0, #0xc]
	strb	r2, [r0, #0xd]
	strb	r2, [r0, #0xe]
	strh	r1, [r0, #0x34]
	add		r3, r0, #0x0
	add		r3, #0x36
	mov		r2, #0x7f
	strb	r2, [r3, #0x0]
	strh	r1, [r0, #0x38]
	str		r1, [r0, #0x14]
	str		r1, [r0, #0x18]
	bx		lr

.incbin "base.gba", 0x290F2, 0x2
	thumb_func_end sub_080290c0

	thumb_func_start sub_080290f4
sub_080290f4:
	mov		r3, #0x1e
	ldrsh	r2, [r0, r3]
	mov		r3, #0x1e
	ldrsh	r0, [r1, r3]
	mov		r1, #0x0
	cmp		r2, r0
	bge		_08029104
	mov		r1, #0x1
_08029104:
	add		r0, r1, #0x0
	bx		lr
	thumb_func_end sub_080290f4

	thumb_func_start sub_08029108
sub_08029108:
	mov		r3, #0x20
	ldrsh	r2, [r0, r3]
	mov		r3, #0x20
	ldrsh	r0, [r1, r3]
	mov		r1, #0x0
	cmp		r2, r0
	ble		_08029118
	mov		r1, #0x1
_08029118:
	add		r0, r1, #0x0
	bx		lr
	thumb_func_end sub_08029108

	thumb_func_start sub_0802911c
sub_0802911c:
	ldrb	r0, [r0, #0x1e]
	ldrb	r1, [r1, #0x1e]
	sub		r0, r0, r1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bge		_08029132
	neg		r0, r0
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
_08029132:
	add		r0, r1, #0x0
	bx		lr

.incbin "base.gba", 0x29136, 0x2
	thumb_func_end sub_0802911c

	thumb_func_start sub_08029138
sub_08029138:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	add		r6, r0, #0x0
	ldr		r4, _08029170
	add		r4, #0x24
	add		r5, r6, #0x0
	add		r5, #0x1c
	add		r3, r6, #0x0
	add		r3, #0x24
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	add		r2, r5, #0x0
	bl		sub_080448d0
	add		r2, r6, #0x0
	add		r2, #0x20
	ldr		r3, [r6, #0x8]
	mov		r1, #0x24
	ldrsh	r0, [r6, r1]
	str		r0, [sp, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_080448e4
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08029170:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_08029138

	thumb_func_start sub_08029174
sub_08029174:
	push	{ r4, lr }
	mov		r1, #0x20
	ldrsh	r3, [r0, r1]
	mov		r1, #0x22
	ldrsh	r2, [r0, r1]
	ldrh	r4, [r0, #0x24]
	ldrh	r0, [r0, #0x34]
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080291ae
	add		r1, r3, #0x0
	add		r1, #0x40
	mov		r0, #0xb8
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bhi		_080291ae
	cmp		r2, #0x0
	blt		_080291ae
	cmp		r2, #0xe0
	bgt		_080291ae
	lsl		r0, r4, #0x10
	asr		r1, r0, #0x10
	cmp		r1, #0x7f
	ble		_080291ae
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	cmp		r1, r0
	ble		_080291b2
_080291ae:
	mov		r0, #0x0
	b		_080291b4
_080291b2:
	mov		r0, #0x1
_080291b4:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x291BA, 0x2
	thumb_func_end sub_08029174

	thumb_func_start sub_080291bc
sub_080291bc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x28
	mov		r10, r0
	ldr		r0, [r0, #0x0]
	mov		r9, r0
	mov		r1, r10
	ldrh	r1, [r1, #0x4]
	str		r1, [sp, #0x0]
	mov		r2, r10
	ldrh	r2, [r2, #0x6]
	str		r2, [sp, #0x4]
	ldrh	r3, [r0, #0x0]
	str		r3, [sp, #0x8]
	mov		r4, #0x2
	add		r9, r4
	mov		r5, r10
	ldrh	r5, [r5, #0x20]
	str		r5, [sp, #0xC]
	mov		r6, r10
	ldrh	r6, [r6, #0x22]
	str		r6, [sp, #0x10]
	ldr		r0, _080292c4
	ldr		r1, [r0, #0x0]
	ldr		r2, _080292c8
	cmp		r1, r2
	ble		_080291fa
	b		_08029350
_080291fa:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	ldr		r1, [sp, #0xC]
	cmp		r1, r0
	bne		_080292d4
	ldr		r3, [sp, #0x10]
	cmp		r3, r1
	bne		_080292d4
	mov		r4, r10
	ldr		r0, [r4, #0x18]
	cmp		r0, r1
	bne		_080292d4
	ldr		r5, [sp, #0x8]
	cmp		r5, #0x0
	bgt		_0802921a
	b		_080294f2
_0802921a:
	mov		r12, r2
	ldr		r7, _080292cc
	add		r6, r7, #0x4
	mov		r8, r6
_08029222:
	ldr		r0, _080292c4
	ldr		r6, [r0, #0x0]
	cmp		r6, r12
	ble		_0802922c
	b		_080294f2
_0802922c:
	mov		r1, r9
	ldrh	r5, [r1, #0x0]
	mov		r2, #0x2
	add		r9, r2
	lsl		r4, r6, #0x1
	add		r2, r4, r7
	ldr		r3, [sp, #0x4]
	add		r1, r5, r3
	mov		r0, #0xff
	and		r1, r0
	mov		r3, #0xff
	lsl		r3, r3, #0x8
	add		r0, r3, #0x0
	and		r5, r0
	orr		r1, r5
	strh	r1, [r2, #0x0]
	mov		r0, r9
	ldrh	r5, [r0, #0x0]
	mov		r1, #0x2
	add		r9, r1
	add		r2, r7, #0x2
	add		r2, r4, r2
	ldr		r3, [sp, #0x0]
	add		r1, r5, r3
	mov		r0, r12
	and		r1, r0
	mov		r3, #0xfe
	lsl		r3, r3, #0x8
	add		r0, r3, #0x0
	and		r5, r0
	orr		r1, r5
	strh	r1, [r2, #0x0]
	lsr		r2, r6, #0x1f
	add		r2, r6, r2
	asr		r2, r2, #0x1
	lsl		r2, r2, #0x2
	add		r3, r2, r7
	ldr		r0, [r3, #0x0]
	mov		r5, r10
	ldr		r1, [r5, #0xc]
	and		r0, r1
	str		r0, [r3, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r1, [r5, #0x8]
	orr		r0, r1
	str		r0, [r3, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r1, _080292d0
	and		r0, r1
	str		r0, [r3, #0x0]
	mov		r0, r9
	ldrh	r5, [r0, #0x0]
	mov		r1, #0x2
	add		r9, r1
	add		r4, r8
	strh	r5, [r4, #0x0]
	add		r2, r8
	ldr		r0, [r2, #0x0]
	mov		r3, r10
	ldr		r1, [r3, #0x14]
	and		r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, [r2, #0x0]
	ldr		r1, [r3, #0x10]
	orr		r0, r1
	str		r0, [r2, #0x0]
	add		r0, r6, #0x4
	ldr		r4, _080292c4
	str		r0, [r4, #0x0]
	ldr		r5, [sp, #0x8]
	sub		r5, #0x1
	str		r5, [sp, #0x8]
	cmp		r5, #0x0
	bgt		_08029222
	b		_080294f2

.incbin "base.gba", 0x292C2, 0x2

_080292c4:	.4byte 0x030016D8
_080292c8:	.4byte 0x000001FF
_080292cc:	.4byte 0x030016E0
_080292d0:	.4byte 0xfffffcff

_080292d4:
	mov		r6, r9
	ldrh	r5, [r6, #0x2]
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	and		r0, r5
	mov		r1, #0x1
	cmp		r0, #0x0
	beq		_080292e6
	sub		r1, #0x2
_080292e6:
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	and		r5, r0
	mov		r2, #0x1
	cmp		r5, #0x0
	beq		_080292f4
	sub		r2, #0x2
_080292f4:
	mov		r3, r10
	mov		r4, #0x18
	ldrsh	r0, [r3, r4]
	add		r5, r0, #0x0
	mul		r5, r1
	strh	r5, [r3, #0x18]
	mov		r6, #0x1a
	ldrsh	r0, [r3, r6]
	mul		r0, r1
	strh	r0, [r3, #0x1a]
	mov		r1, #0x1c
	ldrsh	r0, [r3, r1]
	mul		r0, r2
	strh	r0, [r3, #0x1c]
	mov		r4, #0x1e
	ldrsh	r0, [r3, r4]
	mul		r0, r2
	strh	r0, [r3, #0x1e]
	ldr		r6, _08029358
	ldr		r4, [r6, #0x0]
	cmp		r4, #0x1f
	bgt		_08029350
	lsl		r3, r4, #0x5
	ldr		r2, _0802935c
	add		r0, r3, r2
	strh	r5, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x8
	add		r0, r3, r0
	mov		r5, r10
	ldrh	r1, [r5, #0x1a]
	strh	r1, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x10
	add		r0, r3, r0
	ldrh	r1, [r5, #0x1c]
	strh	r1, [r0, #0x0]
	add		r2, #0x18
	add		r3, r3, r2
	ldrh	r0, [r5, #0x1e]
	strh	r0, [r3, #0x0]
	add		r0, r4, #0x1
	str		r0, [r6, #0x0]
	str		r4, [sp, #0x18]
	cmp		r4, #0x0
	bge		_08029360
_08029350:
	mov		r0, #0x1
	neg		r0, r0
	b		_080294f4

.incbin "base.gba", 0x29356, 0x2

_08029358:	.4byte 0x030016DC
_0802935c:	.4byte 0x030016E6

_08029360:
	ldr		r0, [sp, #0xC]
	cmp		r0, #0xff
	ble		_0802936c
	ldr		r0, [sp, #0x10]
	cmp		r0, #0xff
	bgt		_08029374
_0802936c:
	mov		r6, #0xc0
	lsl		r6, r6, #0x2
	str		r6, [sp, #0x14]
	b		_0802937a
_08029374:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	str		r0, [sp, #0x14]
_0802937a:
	ldr		r1, [sp, #0x8]
	cmp		r1, #0x0
	bgt		_08029382
	b		_080294f2
_08029382:
	mov		r2, r9
	ldrh	r0, [r2, #0x0]
	lsr		r3, r0, #0xe
	ldrh	r0, [r2, #0x2]
	lsr		r4, r0, #0xe
	ldr		r5, _0802941c
	ldr		r0, [r5, #0x0]
	ldr		r6, _08029420
	cmp		r0, r6
	ble		_08029398
	b		_080294f2
_08029398:
	ldrh	r5, [r2, #0x0]
	mov		r0, #0x2
	add		r9, r0
	mov		r2, #0xff
	and		r2, r5
	lsl		r0, r2, #0x18
	asr		r6, r0, #0x18
	ldr		r1, _08029424
	lsl		r4, r4, #0x2
	lsl		r3, r3, #0x4
	add		r0, r4, r3
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	add		r7, r6, r0
	lsl		r6, r7, #0x8
	add		r0, r6, #0x0
	ldr		r1, [sp, #0x10]
	str		r2, [sp, #0x20]
	str		r3, [sp, #0x24]
	bl		sub_08071b70
	add		r6, r0, #0x0
	sub		r0, r6, r7
	ldr		r2, [sp, #0x20]
	add		r6, r2, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r7, r4, #0x0
	ldr		r3, [sp, #0x24]
	add		r4, r3, #0x0
	ldr		r1, [sp, #0x14]
	cmp		r1, r0
	beq		_080293e0
	mov		r2, r8
	sub		r6, r6, r2
_080293e0:
	ldr		r3, _0802941c
	ldr		r2, [r3, #0x0]
	lsl		r2, r2, #0x1
	ldr		r0, _08029428
	add		r2, r2, r0
	ldr		r1, [sp, #0x4]
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	add		r0, r0, r6
	mov		r1, #0xff
	and		r0, r1
	mov		r3, #0xff
	lsl		r3, r3, #0x8
	add		r1, r3, #0x0
	and		r5, r1
	orr		r0, r5
	strh	r0, [r2, #0x0]
	mov		r6, r9
	ldrh	r5, [r6, #0x0]
	mov		r0, #0x2
	add		r9, r0
	add		r2, r5, #0x0
	ldr		r1, _08029420
	and		r2, r1
	cmp		r2, #0xff
	ble		_0802942c
	add		r0, r2, #0x0
	eor		r0, r1
	neg		r6, r0
	b		_0802942e

_0802941c:	.4byte 0x030016D8
_08029420:	.4byte 0x000001FF
_08029424:	.4byte 0x08101038
_08029428:	.4byte 0x030016E0

_0802942c:
	add		r6, r2, #0x0
_0802942e:
	ldr		r1, _08029504
	add		r0, r7, r4
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	add		r7, r6, r4
	lsl		r6, r7, #0x8
	add		r0, r6, #0x0
	ldr		r1, [sp, #0xC]
	str		r2, [sp, #0x20]
	bl		sub_08071b70
	add		r6, r0, #0x0
	sub		r0, r6, r7
	ldr		r2, [sp, #0x20]
	add		r6, r2, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	ldr		r2, [sp, #0x14]
	cmp		r2, r0
	beq		_08029458
	sub		r6, r6, r4
_08029458:
	ldr		r3, _08029508
	ldr		r4, [r3, #0x0]
	lsl		r7, r4, #0x1
	ldr		r0, _0802950c
	add		r3, r7, r0
	ldr		r1, [sp, #0x0]
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	add		r0, r0, r6
	ldr		r2, _08029510
	and		r0, r2
	ldr		r6, [sp, #0x18]
	lsl		r1, r6, #0x9
	mov		r6, #0xf8
	lsl		r6, r6, #0x6
	add		r2, r6, #0x0
	and		r1, r2
	orr		r0, r1
	mov		r2, #0xc0
	lsl		r2, r2, #0x8
	add		r1, r2, #0x0
	and		r5, r1
	orr		r0, r5
	strh	r0, [r3, #0x0]
	lsr		r3, r4, #0x1f
	add		r3, r4, r3
	asr		r3, r3, #0x1
	lsl		r3, r3, #0x2
	ldr		r2, _0802950c
	sub		r2, #0x2
	add		r2, r3, r2
	ldr		r0, [r2, #0x0]
	mov		r5, r10
	ldr		r1, [r5, #0xc]
	and		r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, [r2, #0x0]
	ldr		r1, [r5, #0x8]
	orr		r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, [r2, #0x0]
	ldr		r1, _08029514
	and		r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, [r2, #0x0]
	ldr		r6, [sp, #0x14]
	orr		r0, r6
	str		r0, [r2, #0x0]
	ldr		r0, _08029518
	add		r0, r7, r0
	str		r0, [sp, #0x1C]
	mov		r1, r9
	ldrh	r0, [r1, #0x0]
	ldr		r2, [sp, #0x1C]
	strh	r0, [r2, #0x0]
	mov		r5, #0x2
	add		r9, r5
	ldr		r6, _08029518
	add		r3, r3, r6
	ldr		r0, [r3, #0x0]
	mov		r2, r10
	ldr		r1, [r2, #0x14]
	and		r0, r1
	str		r0, [r3, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r1, [r2, #0x10]
	orr		r0, r1
	str		r0, [r3, #0x0]
	add		r4, #0x4
	ldr		r3, _08029508
	str		r4, [r3, #0x0]
	ldr		r4, [sp, #0x8]
	sub		r4, #0x1
	str		r4, [sp, #0x8]
	cmp		r4, #0x0
	ble		_080294f2
	b		_08029382
_080294f2:
	mov		r0, #0x0
_080294f4:
	add		sp, #0x28
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08029504:	.4byte 0x08101008
_08029508:	.4byte 0x030016D8
_0802950c:	.4byte 0x030016E2
_08029510:	.4byte 0x000001FF
_08029514:	.4byte 0xfffffcff
_08029518:	.4byte 0x030016E4
	thumb_func_end sub_080291bc

	thumb_func_start sub_0802951c
sub_0802951c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x24
	mov		r8, r0
	add		r7, r1, #0x0
	mov		r12, r2
	add		r6, r3, #0x0
	ldr		r0, [sp, #0x4+0x44]
	mov		r9, r0
	cmp		r0, #0x0
	bne		_08029604
	mov		r5, sp
	mov		r1, r8
	str		r1, [sp, #0x0]
	ldrh	r0, [r7, #0x0]
	strh		r0, [r5, #0x4]
	ldrh	r0, [r7, #0x2]
	strh		r0, [r5, #0x6]
	mov		r2, r9
	str		r2, [sp, #0x8]
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [sp, #0xC]
	str		r2, [sp, #0x10]
	str		r0, [sp, #0x14]
	mov		r3, r12
	cmp		r3, #0x0
	beq		_0802955e
	cmp		r6, #0x0
	bne		_08029564
_0802955e:
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	mov		r12, r6
_08029564:
	ldr		r1, _080295f4
	ldr		r7, [sp, #0x0+0x44]
	lsl		r0, r7, #0x10
	asr		r2, r0, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08029574
	add		r0, #0x3f
_08029574:
	asr		r3, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r4, _080295f8
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	mov		r8, r0
	ldr		r0, [r0, #0x0]
	mov		r7, r12
	mul		r7, r0
	add		r0, r7, #0x0
	cmp		r0, #0x0
	bge		_08029596
	ldr		r7, _080295fc
	add		r0, r0, r7
_08029596:
	asr		r0, r0, #0xf
	strh		r0, [r5, #0x18]
	add		r0, r3, #0x0
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r1, r0, r1
	ldr		r0, [r1, #0x0]
	mov		r3, r12
	mul		r3, r0
	add		r0, r3, #0x0
	cmp		r0, #0x0
	bge		_080295b2
	ldr		r7, _080295fc
	add		r0, r0, r7
_080295b2:
	asr		r0, r0, #0xf
	strh		r0, [r5, #0x1A]
	ldr		r1, [r1, #0x0]
	neg		r0, r6
	mul		r0, r1
	cmp		r0, #0x0
	bge		_080295c4
	ldr		r1, _080295fc
	add		r0, r0, r1
_080295c4:
	asr		r0, r0, #0xf
	strh		r0, [r5, #0x1C]
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	mul		r0, r6
	cmp		r0, #0x0
	bge		_080295d6
	ldr		r3, _080295fc
	add		r0, r0, r3
_080295d6:
	asr		r0, r0, #0xf
	strh		r0, [r5, #0x1E]
	mov		r7, r12
	strh		r7, [r5, #0x20]
	strh		r6, [r5, #0x22]
	ldr		r4, _08029600
	mov		r0, #0x1
	str		r0, [r4, #0x0]
	add		r0, r5, #0x0
	bl		sub_080291bc
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	b		_08029722

.incbin "base.gba", 0x295F2, 0x2

_080295f4:	.4byte 0x08101068
_080295f8:	.4byte 0x000003FF
_080295fc:	.4byte 0x00007FFF
_08029600:	.4byte 0x03002174

_08029604:
	ldr		r0, _0802962c
	ldr		r1, [r0, #0x0]
	mov		r10, r0
	cmp		r1, #0x1f
	ble		_08029610
	b		_08029722
_08029610:
	mov		r0, #0x34
	mul		r1, r0
	ldr		r0, _08029630
	add		r2, r1, r0
	ldr		r3, _08029634
	ldr		r1, [r3, #0x0]
	cmp		r1, #0x0
	bne		_0802963c
	ldr		r0, _08029638
	str		r2, [r0, #0x0]
	str		r2, [r3, #0x0]
	str		r1, [r2, #0x4]
	str		r1, [r2, #0x0]
	b		_0802964a

_0802962c:	.4byte 0x03002168
_08029630:	.4byte 0x03001AE0
_08029634:	.4byte 0x03002160
_08029638:	.4byte 0x03002164

_0802963c:
	ldr		r1, _08029734
	ldr		r0, [r1, #0x0]
	str		r2, [r0, #0x0]
	str		r0, [r2, #0x4]
	mov		r0, #0x0
	str		r0, [r2, #0x0]
	str		r2, [r1, #0x0]
_0802964a:
	mov		r0, r10
	ldr		r1, [r0, #0x0]
	mov		r0, #0x34
	add		r5, r1, #0x0
	mul		r5, r0
	ldr		r3, _08029738
	add		r4, r5, r3
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	str		r0, [r4, #0x0]
	ldr		r1, [r1, #0x4]
	mov		r0, r8
	ldrh	r2, [r0, #0x6]
	mov		r0, #0xc0
	lsl		r0, r0, #0x4
	and		r0, r2
	lsl		r0, r0, #0x10
	add		r1, r1, r0
	str		r1, [r4, #0x4]
	add		r3, #0x8
	add		r5, r5, r3
	mov		r1, r8
	str		r1, [r5, #0x0]
	ldrh	r0, [r7, #0x0]
	mov		r1, #0x0
	strh	r0, [r5, #0x4]
	ldrh	r0, [r7, #0x2]
	strh	r0, [r5, #0x6]
	str		r1, [r5, #0x8]
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r5, #0xc]
	str		r1, [r5, #0x10]
	str		r0, [r5, #0x14]
	mov		r2, r12
	cmp		r2, #0x0
	beq		_08029698
	cmp		r6, #0x0
	bne		_0802969e
_08029698:
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	mov		r12, r6
_0802969e:
	ldr		r1, _0802973c
	ldr		r3, [sp, #0x0+0x44]
	lsl		r0, r3, #0x10
	asr		r2, r0, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_080296ae
	add		r0, #0x3f
_080296ae:
	asr		r3, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r4, _08029740
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	mov		r8, r0
	ldr		r0, [r0, #0x0]
	mov		r7, r12
	mul		r7, r0
	add		r0, r7, #0x0
	cmp		r0, #0x0
	bge		_080296d0
	ldr		r7, _08029744
	add		r0, r0, r7
_080296d0:
	asr		r0, r0, #0xf
	strh	r0, [r5, #0x18]
	add		r0, r3, #0x0
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r1, r0, r1
	ldr		r0, [r1, #0x0]
	mov		r3, r12
	mul		r3, r0
	add		r0, r3, #0x0
	cmp		r0, #0x0
	bge		_080296ec
	ldr		r7, _08029744
	add		r0, r0, r7
_080296ec:
	asr		r0, r0, #0xf
	strh	r0, [r5, #0x1a]
	ldr		r1, [r1, #0x0]
	neg		r0, r6
	mul		r0, r1
	cmp		r0, #0x0
	bge		_080296fe
	ldr		r1, _08029744
	add		r0, r0, r1
_080296fe:
	asr		r0, r0, #0xf
	strh	r0, [r5, #0x1c]
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	mul		r0, r6
	cmp		r0, #0x0
	bge		_08029710
	ldr		r3, _08029744
	add		r0, r0, r3
_08029710:
	asr		r0, r0, #0xf
	strh	r0, [r5, #0x1e]
	mov		r7, r12
	strh	r7, [r5, #0x20]
	strh	r6, [r5, #0x22]
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
_08029722:
	add		sp, #0x24
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x29732, 0x2

_08029734:	.4byte 0x03002164
_08029738:	.4byte 0x03001AE8
_0802973c:	.4byte 0x08101068
_08029740:	.4byte 0x000003FF
_08029744:	.4byte 0x00007FFF
	thumb_func_end sub_0802951c

	thumb_func_start sub_08029748
sub_08029748:
	push	{ r4, r5, lr }
	sub		sp, #0x34
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_08029758
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_0802975c
_08029758:
	add		r0, r2, #0x0
	b		_080297be
_0802975c:
	add		r1, r2, #0x0
	b		_08029768
_08029760:
	ldr		r1, [r1, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802976e
_08029768:
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08029760
_0802976e:
	ldr		r5, [r1, #0x0]
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r0, r2, #0x0
	bl		sub_08029748
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_08029748
	add		r2, r0, #0x0
	mov		r3, sp
	b		_080297aa
_08029788:
	ldr		r1, [r4, #0xc]
	ldr		r0, [r2, #0xc]
	cmp		r1, r0
	bgt		_0802979c
	cmp		r1, r0
	bne		_080297a4
	ldr		r1, [r4, #0x8]
	ldr		r0, [r2, #0x8]
	cmp		r1, r0
	ble		_080297a4
_0802979c:
	str		r2, [r3, #0x0]
	add		r3, r2, #0x0
	ldr		r2, [r3, #0x0]
	b		_080297aa
_080297a4:
	str		r4, [r3, #0x0]
	add		r3, r4, #0x0
	ldr		r4, [r4, #0x0]
_080297aa:
	cmp		r4, #0x0
	beq		_080297b6
	cmp		r2, #0x0
	bne		_08029788
	cmp		r4, #0x0
	bne		_080297ba
_080297b6:
	str		r2, [r3, #0x0]
	b		_080297bc
_080297ba:
	str		r4, [r3, #0x0]
_080297bc:
	ldr		r0, [sp, #0x0]
_080297be:
	add		sp, #0x34
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x297C6, 0x2
	thumb_func_end sub_08029748

	thumb_func_start sub_080297c8
sub_080297c8:
	push	{ r4, lr }
	sub		sp, #0x4
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0x13
	ldr		r2, _08029818
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
	ldr		r0, _0802981c
	str		r4, [r0, #0x0]
	ldr		r0, _08029820
	str		r4, [r0, #0x0]
	mov		r0, #0x0
	mov		r3, #0x80
	lsl		r3, r3, #0x2
	mov		r2, #0x0
	ldr		r1, _08029824
_080297ee:
	stmia	r1!, {  r3 }
	stmia	r1!, {  r2 }
	add		r0, #0x2
	cmp		r0, #0xff
	bls		_080297ee
	ldr		r2, _08029828
	ldr		r0, _0802982c
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	ldr		r0, _08029830
	str		r1, [r0, #0x0]
	mov		r2, #0x1
	ldr		r0, _08029834
	str		r2, [r0, #0x0]
	ldr		r0, _08029838
	str		r1, [r0, #0x0]
	add		sp, #0x4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08029818:	.4byte 0x01000100
_0802981c:	.4byte 0x030016D8
_08029820:	.4byte 0x030016DC
_08029824:	.4byte 0x030016E0
_08029828:	.4byte 0x03002160
_0802982c:	.4byte 0x03002164
_08029830:	.4byte 0x03002168
_08029834:	.4byte 0x03002170
_08029838:	.4byte 0x03002174
	thumb_func_end sub_080297c8

	thumb_func_start sub_0802983c
sub_0802983c:
	push	{ r4, lr }
	ldr		r0, _08029884
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802987c
	ldr		r0, _08029888
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0802987c
	ldr		r1, _0802988c
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r4, _08029890
	ldr		r0, [r4, #0x0]
	bl		sub_08029748
	str		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08029872
_08029862:
	add		r4, r0, #0x0
	add		r0, r4, #0x0
	add		r0, #0x10
	bl		sub_080291bc
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08029862
_08029872:
	ldr		r0, _08029888
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	ldr		r0, _0802988c
	str		r1, [r0, #0x0]
_0802987c:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x29882, 0x2

_08029884:	.4byte 0x03002170
_08029888:	.4byte 0x0300216C
_0802988c:	.4byte 0x03002174
_08029890:	.4byte 0x03002160
	thumb_func_end sub_0802983c

	thumb_func_start sub_08029894
sub_08029894:
	ldr		r0, _080298d4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080298d0
	ldr		r0, _080298d8
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_080298d0
	ldr		r0, _080298dc
	str		r1, [r0, #0x0]
	ldr		r0, _080298e0
	str		r1, [r0, #0x0]
	ldr		r0, _080298e4
	str		r1, [r0, #0x0]
	ldr		r0, _080298e8
	str		r1, [r0, #0x0]
	ldr		r0, _080298ec
	str		r1, [r0, #0x0]
	mov		r1, #0x0
	ldr		r3, _080298f0
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	ldr		r0, _080298f4
_080298c2:
	str		r2, [r0, #0x0]
	add		r0, #0x8
	add		r1, #0x2
	cmp		r1, #0xff
	bls		_080298c2
	mov		r0, #0x1
	str		r0, [r3, #0x0]
_080298d0:
	bx		lr

.incbin "base.gba", 0x298D2, 0x2

_080298d4:	.4byte 0x03002170
_080298d8:	.4byte 0x03002174
_080298dc:	.4byte 0x030016D8
_080298e0:	.4byte 0x030016DC
_080298e4:	.4byte 0x03002160
_080298e8:	.4byte 0x03002164
_080298ec:	.4byte 0x03002168
_080298f0:	.4byte 0x0300216C
_080298f4:	.4byte 0x030016E0
	thumb_func_end sub_08029894

	thumb_func_start sub_080298f8
sub_080298f8:
	ldr		r0, _08029914
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08029912
	ldr		r1, _08029918
	ldr		r0, _0802991c
	str		r0, [r1, #0x0]
	mov		r0, #0xe0
	lsl		r0, r0, #0x13
	str		r0, [r1, #0x4]
	ldr		r0, _08029920
	str		r0, [r1, #0x8]
	ldr		r0, [r1, #0x8]
_08029912:
	bx		lr

_08029914:	.4byte 0x0300216C
_08029918:	.4byte DMA0SourceAddress
_0802991c:	.4byte 0x030016E0
_08029920:	.4byte 0x84000100
	thumb_func_end sub_080298f8

	thumb_func_start sub_08029924
sub_08029924:
	push	{ lr }
	ldr		r0, _08029940
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0802993a
	ldr		r0, _08029944
	mov		r1, #0xe0
	lsl		r1, r1, #0x13
	ldr		r2, _08029948
	bl		sub_08071b6c
_0802993a:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2993E, 0x2

_08029940:	.4byte 0x0300216C
_08029944:	.4byte 0x030016E0
_08029948:	.4byte Timer0Counter_Reload
	thumb_func_end sub_08029924

	thumb_func_start sub_0802994c
sub_0802994c:
	ldr		r1, _08029954
	str		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x29952, 0x2

_08029954:	.4byte 0x03002170
	thumb_func_end sub_0802994c

	thumb_func_start sub_08029958
sub_08029958:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x8
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r5, r3, #0x0
	ldr		r0, _08029970
	cmp		r2, r0
	bgt		_08029974
	ldr		r0, [r4, #0x0]
	ldr		r3, [r4, #0x4]
	b		_0802998e

.incbin "base.gba", 0x2996E, 0x2

_08029970:	.4byte 0x000001FF

_08029974:
	ldr		r0, _08029980
	cmp		r2, r0
	bgt		_08029984
	ldr		r0, [r4, #0x8]
	ldr		r3, [r4, #0xc]
	b		_0802998e

_08029980:	.4byte 0x000003FF

_08029984:
	ldr		r0, _080299a0
	cmp		r2, r0
	bgt		_080299a4
	ldr		r0, [r4, #0x10]
	ldr		r3, [r4, #0x14]
_0802998e:
	asr		r2, r3
	add		r3, r2, #0x0
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r5, [sp, #0x4]
	add		r1, r6, #0x0
	bl		sub_0802951c
	b		_080299b8

_080299a0:	.4byte 0x000007FF

_080299a4:
	ldr		r0, [r4, #0x18]
	ldr		r3, [r4, #0x1c]
	asr		r2, r3
	add		r3, r2, #0x0
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r5, [sp, #0x4]
	add		r1, r6, #0x0
	bl		sub_0802951c
_080299b8:
	add		sp, #0x8
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08029958

	thumb_func_start sub_080299c0
sub_080299c0:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x8
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r1, r2, #0x0
	add		r2, r3, #0x0
	ldr		r3, [sp, #0x0+0x1c]
	ldr		r6, [sp, #0x4+0x1c]
	ldr		r7, [sp, #0x8+0x1c]
	ldr		r0, _080299e0
	cmp		r1, r0
	bgt		_080299e4
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x4]
	b		_080299fe

.incbin "base.gba", 0x299DE, 0x2

_080299e0:	.4byte 0x000001FF

_080299e4:
	ldr		r0, _080299f0
	cmp		r1, r0
	bgt		_080299f4
	ldr		r0, [r4, #0x8]
	ldr		r1, [r4, #0xc]
	b		_080299fe

_080299f0:	.4byte 0x000003FF

_080299f4:
	ldr		r0, _08029a10
	cmp		r1, r0
	bgt		_08029a14
	ldr		r0, [r4, #0x10]
	ldr		r1, [r4, #0x14]
_080299fe:
	asr		r2, r1
	asr		r3, r1
	str		r6, [sp, #0x0]
	str		r7, [sp, #0x4]
	add		r1, r5, #0x0
	bl		sub_0802951c
	b		_08029a26

.incbin "base.gba", 0x29A0E, 0x2

_08029a10:	.4byte 0x000007FF

_08029a14:
	ldr		r0, [r4, #0x18]
	ldr		r1, [r4, #0x1c]
	asr		r2, r1
	asr		r3, r1
	str		r6, [sp, #0x0]
	str		r7, [sp, #0x4]
	add		r1, r5, #0x0
	bl		sub_0802951c
_08029a26:
	add		sp, #0x8
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x29A2E, 0x2
	thumb_func_end sub_080299c0

	thumb_func_start sub_08029a30
sub_08029a30:
	push	{ r4, lr }
	sub		sp, #0xc
	ldr		r4, [sp, #0x0+0x14]
	lsl		r1, r1, #0x10
	lsl		r2, r2, #0x10
	lsr		r1, r1, #0x10
	orr		r1, r2
	str		r1, [sp, #0x8]
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r4, [sp, #0x4]
	add		r1, sp, #0x8
	add		r2, r3, #0x0
	bl		sub_0802951c
	add		sp, #0xc
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x29A56, 0x3A
	thumb_func_end sub_08029a30

	thumb_func_start sub_08029a90
sub_08029a90:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r6, _08029acc
	ldr		r5, [r6, #0x0]
	cmp		r5, #0x1f
	bgt		_08029ad4
	lsl		r3, r5, #0x5
	ldr		r2, _08029ad0
	add		r1, r3, r2
	ldrh	r0, [r4, #0x18]
	strh	r0, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x8
	add		r0, r3, r0
	ldrh	r1, [r4, #0x1a]
	strh	r1, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x10
	add		r0, r3, r0
	ldrh	r1, [r4, #0x1c]
	strh	r1, [r0, #0x0]
	add		r2, #0x18
	add		r3, r3, r2
	ldrh	r0, [r4, #0x1e]
	strh	r0, [r3, #0x0]
	add		r0, r5, #0x1
	str		r0, [r6, #0x0]
	add		r0, r5, #0x0
	b		_08029ad8

.incbin "base.gba", 0x29ACA, 0x2

_08029acc:	.4byte 0x030016DC
_08029ad0:	.4byte 0x030016E6

_08029ad4:
	mov		r0, #0x1
	neg		r0, r0
_08029ad8:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x29ADE, 0x26
	thumb_func_end sub_08029a90

	thumb_func_start sub_08029b04
sub_08029b04:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x5c]
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x83
	bne		_08029b16
	b		_08029c28
_08029b16:
	cmp		r0, #0x83
	bgt		_08029b46
	cmp		r0, #0x41
	beq		_08029b7c
	cmp		r0, #0x41
	bgt		_08029b34
	cmp		r0, #0x11
	beq		_08029b76
	cmp		r0, #0x11
	ble		_08029b2c
	b		_08029c98
_08029b2c:
	cmp		r0, #0x0
	bne		_08029b32
	b		_08029c9c
_08029b32:
	b		_08029c98
_08029b34:
	cmp		r0, #0x43
	beq		_08029b86
	cmp		r0, #0x43
	blt		_08029b82
	cmp		r0, #0x81
	beq		_08029bf8
	cmp		r0, #0x82
	beq		_08029c00
	b		_08029c98
_08029b46:
	cmp		r0, #0xf2
	beq		_08029bce
	cmp		r0, #0xf2
	bgt		_08029b62
	cmp		r0, #0x85
	beq		_08029bf8
	cmp		r0, #0x85
	blt		_08029c50
	cmp		r0, #0x86
	bne		_08029b5c
	b		_08029c90
_08029b5c:
	cmp		r0, #0xf1
	beq		_08029bb0
	b		_08029c98
_08029b62:
	cmp		r0, #0xf5
	beq		_08029ba2
	cmp		r0, #0xf5
	bgt		_08029b70
	cmp		r0, #0xf4
	beq		_08029b98
	b		_08029c98
_08029b70:
	cmp		r0, #0xf6
	beq		_08029bd6
	b		_08029c98
_08029b76:
	ldr		r0, [r5, #0x4]
	str		r0, [r4, #0x48]
	b		_08029bc0
_08029b7c:
	ldr		r0, [r5, #0x4]
	str		r0, [r4, #0x68]
	b		_08029bc0
_08029b82:
	ldr		r0, [r5, #0x4]
	b		_08029c9c
_08029b86:
	ldr		r0, [r5, #0x4]
	str		r0, [r4, #0x60]
	add		r2, r4, #0x0
	add		r2, #0x64
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x1
	orr		r0, r1
	mov		r1, #0x2
	b		_08029bc8
_08029b98:
	ldr		r1, [r5, #0x4]
	add		r0, r4, #0x0
	bl		sub_0807d7d4
	b		_08029bc0
_08029ba2:
	ldr		r1, [r5, #0x4]
	add		r0, r4, #0x0
	bl		sub_0807d7d4
	cmp		r0, #0x0
	beq		_08029c9e
	b		_08029bc0
_08029bb0:
	ldr		r1, [r5, #0x4]
	cmp		r1, #0x0
	beq		_08029bc0
	sub		r1, #0x1
	add		r0, r4, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	b		_08029c98
_08029bc0:
	add		r2, r4, #0x0
	add		r2, #0x64
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x1
_08029bc8:
	orr		r0, r1
	strb	r0, [r2, #0x0]
	b		_08029c98
_08029bce:
	ldr		r0, [r5, #0x4]
	lsl		r0, r0, #0x3
	add		r0, r5, r0
	b		_08029be8
_08029bd6:
	ldr		r1, [r5, #0x4]
	ldr		r0, [r4, #0x68]
	cmp		r0, #0x0
	beq		_08029be4
	lsl		r0, r1, #0x3
	add		r0, r5, r0
	b		_08029be8
_08029be4:
	add		r0, r5, #0x0
	add		r0, #0x8
_08029be8:
	str		r0, [r4, #0x5c]
	add		r2, r4, #0x0
	add		r2, #0x64
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	b		_08029c9e
_08029bf8:
	ldrh	r0, [r5, #0x4]
	bl		sub_0807073c
	b		_08029bc0
_08029c00:
	ldr		r2, [r5, #0x4]
	ldr		r0, _08029c20
	ldr		r1, _08029c24
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08029bc0
	lsl		r0, r2, #0x10
	lsr		r0, r0, #0x10
	bl		sub_0807073c
	b		_08029bc0

.incbin "base.gba", 0x29C1E, 0x2

_08029c20:	.4byte RunGameLogic_CallBack
_08029c24:	.4byte 0x00000838

_08029c28:
	ldrh	r0, [r5, #0x4]
	ldr		r3, _08029c48
	ldr		r2, _08029c4c
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, [r2, #0x8]
	bl		sub_08070e28
	b		_08029bc0

.incbin "base.gba", 0x29C46, 0x2

_08029c48:	.4byte 0x08124544
_08029c4c:	.4byte 0x081245c8

_08029c50:
	ldr		r0, _08029c84
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	add		r7, r4, #0x0
	add		r7, #0x64
	add		r5, #0x8
	mov		r8, r5
	cmp		r0, #0x0
	beq		_08029c78
	ldr		r6, _08029c88
	add		r5, r0, #0x0
_08029c66:
	ldr		r0, [r6, #0x0]
	ldr		r1, _08029c8c
	ldr		r1, [r1, #0x8]
	bl		sub_08070e28
	add		r6, #0xc
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_08029c66
_08029c78:
	ldrb	r1, [r7, #0x0]
	mov		r0, #0x1
	orr		r0, r1
	strb	r0, [r7, #0x0]
	mov		r0, r8
	b		_08029c9c

_08029c84:	.4byte 0x0000000B
_08029c88:	.4byte 0x08124544
_08029c8c:	.4byte 0x081245c8

_08029c90:
	ldrh	r0, [r5, #0x4]
	bl		sub_08070808
	b		_08029bc0
_08029c98:
	add		r0, r5, #0x0
	add		r0, #0x8
_08029c9c:
	str		r0, [r4, #0x5c]
_08029c9e:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08029b04

	thumb_func_start sub_08029ca8
sub_08029ca8:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r1, r5, #0x0
	add		r1, #0x4c
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x0
	beq		_08029cc0
	sub		r0, r2, #0x1
	strh	r0, [r1, #0x0]
	b		_08029cee
_08029cc0:
	ldr		r0, [r5, #0x5c]
	cmp		r0, #0x0
	beq		_08029cee
	add		r4, r5, #0x0
	add		r4, #0x64
	mov		r6, #0xfe
_08029ccc:
	ldrb	r1, [r4, #0x0]
	add		r0, r6, #0x0
	and		r0, r1
	strb	r0, [r4, #0x0]
	add		r0, r5, #0x0
	bl		sub_08029b04
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_08029ccc
	ldr		r0, [r5, #0x5c]
	cmp		r0, #0x0
	bne		_08029cee
	ldr		r0, _08029d14
	str		r0, [r5, #0x14]
_08029cee:
	ldr		r2, [r5, #0x60]
	cmp		r2, #0x0
	beq		_08029d1e
	add		r4, r5, #0x0
	add		r4, #0x64
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08029d18
	add		r0, r5, #0x0
	bl		sub_0807d7d8
	ldrb	r1, [r4, #0x0]
	mov		r0, #0xfd
	and		r0, r1
	strb	r0, [r4, #0x0]
	b		_08029d1e

.incbin "base.gba", 0x29D12, 0x2

_08029d14:	.4byte 0x08029D91

_08029d18:
	add		r0, r5, #0x0
	bl		sub_0807d7d8
_08029d1e:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08029ca8

	thumb_func_start sub_08029d24
sub_08029d24:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, _08029d70
	mov		r1, #0xe8
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08049164
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_08029d68
	add		r1, r4, #0x0
	add		r1, #0x4c
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	str		r5, [r4, #0x5c]
	str		r6, [r4, #0x60]
	add		r1, #0x18
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	ldr		r0, _08029d74
	str		r0, [r4, #0x14]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	add		r0, #0x58
	strh	r1, [r0, #0x0]
	cmp		r7, #0x0
	beq		_08029d68
	add		r0, r4, #0x0
	bl		sub_0807d7ec
_08029d68:
	add		r0, r4, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08029d70:	.4byte RunGameLogic_CallBack
_08029d74:	.4byte sub_08029ca8

.incbin "base.gba", 0x29D78, 0x18
	thumb_func_end sub_08029d24

	thumb_func_start sub_08029d90
sub_08029d90:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _08029da4
	mov		r2, #0xe8
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	bl		sub_080491c0
	pop		{ r0 }
	bx		r0

_08029da4:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_08029d90

	thumb_func_start sub_08029da8
sub_08029da8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r8, r0
	ldr		r0, [r0, #0x14]
	cmp		r0, #0x0
	bne		_08029e86
	mov		r0, #0x1
	mov		r1, r8
	str		r0, [r1, #0x14]
	ldr		r6, [r1, #0x0]
	add		r1, #0x8
	str		r1, [sp, #0x0]
	cmp		r6, #0x0
	beq		_08029e78
	ldr		r2, _08029e44
	mov		r10, r2
_08029dd0:
	ldr		r5, [r6, #0x4]
	ldr		r4, [r6, #0x8]
	ldr		r1, [r6, #0xc]
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	and		r0, r1
	mov		r7, #0x1
	mov		r9, r7
	cmp		r0, #0x0
	beq		_08029de8
	mov		r0, #0x2
	mov		r9, r0
_08029de8:
	add		r3, r1, #0x0
	ldr		r2, _08029e48
	and		r3, r2
	mov		r7, r9
	lsl		r3, r7
	mov		r0, #0xc0
	lsl		r0, r0, #0x11
	mov		r12, r0
	mov		r2, r12
	and		r2, r1
	mov		r12, r2
	mov		r7, #0xc0
	lsl		r7, r7, #0xf
	add		r0, r7, #0x0
	and		r0, r1
	str		r0, [sp, #0x8]
	ldr		r1, [r6, #0x0]
	str		r1, [sp, #0x4]
_08029e0c:
	add		r2, r3, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r3, r0
	bls		_08029e18
	add		r2, r0, #0x0
_08029e18:
	mov		r7, r10
	str		r5, [r7, #0x0]
	str		r4, [r7, #0x4]
	ldr		r1, [r6, #0xc]
	ldr		r0, _08029e4c
	and		r1, r0
	add		r0, r2, #0x0
	mov		r7, r9
	asr		r0, r7
	ldr		r7, _08029e48
	and		r0, r7
	orr		r1, r0
	mov		r0, r10
	str		r1, [r0, #0x8]
	mov		r1, r12
	cmp		r1, #0x0
	beq		_08029e50
	mov		r0, #0x80
	lsl		r0, r0, #0x10
	cmp		r12, r0
	beq		_08029e54
	b		_08029e56

_08029e44:	.4byte DMA3SourceAddress
_08029e48:	.4byte 0x0000FFFF
_08029e4c:	.4byte 0xffff0000

_08029e50:
	add		r5, r5, r2
	b		_08029e56
_08029e54:
	sub		r5, r5, r2
_08029e56:
	ldr		r7, [sp, #0x8]
	cmp		r7, #0x0
	beq		_08029e66
	mov		r0, #0x80
	lsl		r0, r0, #0xe
	cmp		r7, r0
	beq		_08029e6a
	b		_08029e6c
_08029e66:
	add		r4, r4, r2
	b		_08029e6c
_08029e6a:
	sub		r4, r4, r2
_08029e6c:
	sub		r3, r3, r2
	cmp		r3, #0x0
	bne		_08029e0c
	ldr		r6, [sp, #0x4]
	cmp		r6, #0x0
	bne		_08029dd0
_08029e78:
	ldr		r0, [sp, #0x0]
	bl		sub_080271b0
	mov		r0, #0x0
	mov		r1, r8
	str		r0, [r1, #0x4]
	str		r0, [r1, #0x0]
_08029e86:
	mov		r0, #0x0
	mov		r2, r8
	str		r0, [r2, #0x14]
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08029da8

	thumb_func_start sub_08029e9c
sub_08029e9c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0x8
	ldr		r1, _08029ebc
	mov		r2, #0xc0
	lsl		r2, r2, #0x3
	bl		sub_08027188
	mov		r0, #0x0
	str		r0, [r4, #0x4]
	str		r0, [r4, #0x0]
	str		r0, [r4, #0x14]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x29EBA, 0x2

_08029ebc:	.4byte 0x03004C20
	thumb_func_end sub_08029e9c

	thumb_func_start sub_08029ec0
sub_08029ec0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r0, #0x1
_08029ec6:
	ldr		r5, [r4, #0x14]
	cmp		r5, #0x0
	bne		_08029ec6
	str		r0, [r4, #0x14]
	add		r0, r4, #0x0
	add		r0, #0x8
	bl		sub_080271b0
	str		r5, [r4, #0x4]
	str		r5, [r4, #0x0]
	str		r5, [r4, #0x14]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x29EE2, 0x2
	thumb_func_end sub_08029ec0

	thumb_func_start sub_08029ee4
sub_08029ee4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	mov		r8, r2
	mov		r9, r3
	mov		r0, #0x1
_08029ef6:
	ldr		r6, [r5, #0x14]
	cmp		r6, #0x0
	bne		_08029ef6
	str		r0, [r5, #0x14]
	add		r0, r5, #0x0
	add		r0, #0x8
	mov		r1, #0x1
	mov		r2, #0x10
	bl		sub_080271b8
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_08029f22
	str		r7, [r4, #0x4]
	mov		r0, r8
	str		r0, [r4, #0x8]
	mov		r0, r9
	str		r0, [r4, #0xc]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08028764
_08029f22:
	str		r6, [r5, #0x14]
	add		r0, r4, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x29F32, 0x2
	thumb_func_end sub_08029ee4

	thumb_func_start sub_08029f34
sub_08029f34:
	ldr		r0, _08029f38
	bx		lr

_08029f38:	.4byte 0x03002178

.incbin "base.gba", 0x29F3C, 0x1C
	thumb_func_end sub_08029f34

	thumb_func_start sub_08029f58
sub_08029f58:
	push	{ r4, lr }
	ldr		r1, _08029f8c
	ldrb	r0, [r1, #0x1]
	mov		r3, #0x0
	strb	r3, [r1, #0x1]
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x21
	neg		r0, r0
	and		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r4, _08029f90
	str		r3, [r4, #0x14]
	add		r0, r4, #0x0
	add		r0, #0x8
	ldr		r1, _08029f94
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	bl		sub_08027188
	add		r0, r4, #0x0
	bl		sub_08028878
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x29F8A, 0x2

_08029f8c:	.4byte GeneralLCDStatus_STAT_LYC_
_08029f90:	.4byte 0x03005340
_08029f94:	.4byte 0x030030A0
	thumb_func_end sub_08029f58

	thumb_func_start sub_08029f98
sub_08029f98:
	push	{ r4, lr }
	ldr		r1, _08029fc4
	ldrb	r0, [r1, #0x1]
	mov		r3, #0x0
	strb	r3, [r1, #0x1]
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x21
	neg		r0, r0
	and		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r4, _08029fc8
	str		r3, [r4, #0x14]
	add		r0, r4, #0x0
	add		r0, #0x8
	bl		sub_080271b0
	add		r0, r4, #0x0
	bl		sub_08028878
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08029fc4:	.4byte GeneralLCDStatus_STAT_LYC_
_08029fc8:	.4byte 0x03005340
	thumb_func_end sub_08029f98

	thumb_func_start sub_08029fcc
sub_08029fcc:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	ldr		r7, _08029ff4
	add		r0, r7, #0x0
	mov		r1, #0x1
	mov		r2, #0x10
	bl		sub_080271b8
	add		r5, r0, #0x0
	cmp		r5, #0x0
	beq		_0802a03a
	str		r4, [r5, #0x8]
	str		r6, [r5, #0xc]
	add		r0, r7, #0x0
	sub		r0, #0x8
	bl		sub_080287a0
	b		_08029ffe

.incbin "base.gba", 0x29FF2, 0x2

_08029ff4:	.4byte 0x03005348

_08029ff8:
	ldr		r0, _0802a014
	bl		sub_080287a8
_08029ffe:
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_0802a018
	ldr		r0, [r1, #0x8]
	cmp		r0, r4
	ble		_08029ff8
	ldr		r0, _0802a014
	add		r2, r5, #0x0
	bl		sub_080287e0
	b		_0802a020

_0802a014:	.4byte 0x03005340

_0802a018:
	ldr		r0, _0802a044
	add		r1, r5, #0x0
	bl		sub_080287c8
_0802a020:
	ldr		r4, _0802a044
	add		r0, r4, #0x0
	bl		sub_080287a0
	ldr		r2, _0802a048
	str		r0, [r4, #0x14]
	ldr		r0, [r0, #0x8]
	ldrb	r1, [r2, #0x1]
	strb	r0, [r2, #0x1]
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x20
	orr		r0, r1
	strb	r0, [r2, #0x0]
_0802a03a:
	add		r0, r5, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2A042, 0x2

_0802a044:	.4byte 0x03005340
_0802a048:	.4byte GeneralLCDStatus_STAT_LYC_
	thumb_func_end sub_08029fcc

	thumb_func_start sub_0802a04c
sub_0802a04c:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _0802a05c
	bl		sub_08028848
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2A05A, 0x2

_0802a05c:	.4byte 0x03005340
	thumb_func_end sub_0802a04c

	thumb_func_start sub_0802a060
sub_0802a060:
	push	{ r4, r5, lr }
	ldr		r5, _0802a09c
	ldr		r4, [r5, #0x14]
	ldr		r0, [r4, #0xc]
	bl		sub_0807d7d0
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_080287a8
	add		r4, r0, #0x0
	cmp		r4, #0x0
	bne		_0802a082
	add		r0, r5, #0x0
	bl		sub_080287a0
	add		r4, r0, #0x0
_0802a082:
	ldr		r2, _0802a0a0
	str		r4, [r5, #0x14]
	ldr		r0, [r4, #0x8]
	ldrb	r1, [r2, #0x1]
	strb	r0, [r2, #0x1]
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x20
	orr		r0, r1
	strb	r0, [r2, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2A09A, 0x2

_0802a09c:	.4byte 0x03005340
_0802a0a0:	.4byte GeneralLCDStatus_STAT_LYC_
	thumb_func_end sub_0802a060

	thumb_func_start sub_0802a0a4
sub_0802a0a4:
	push	{ r4, r5, lr }
	ldr		r1, _0802a0e0
	ldrb	r2, [r1, #0xc]
	mov		r0, #0x2
	and		r0, r2
	add		r5, r1, #0x0
	cmp		r0, #0x0
	beq		_0802a0fe
	mov		r0, #0x80
	and		r0, r2
	cmp		r0, #0x0
	bne		_0802a0fe
	ldrb	r0, [r5, #0xd]
	sub		r0, #0x1
	strb	r0, [r5, #0xd]
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bgt		_0802a112
	ldr		r4, [r5, #0x0]
	cmp		r4, #0x0
	beq		_0802a0e4
	bl		sub_0807d7e0
	ldrb	r0, [r5, #0xf]
	add		r0, #0x1
	strb	r0, [r5, #0xf]
	ldrb	r0, [r5, #0xe]
	strb	r0, [r5, #0xd]
	b		_0802a112

.incbin "base.gba", 0x2A0DE, 0x2

_0802a0e0:	.4byte 0x030052F0

_0802a0e4:
	ldr		r0, [r5, #0x8]
	cmp		r0, #0x0
	beq		_0802a0ee
	bl		sub_0807d7d0
_0802a0ee:
	str		r4, [r5, #0x0]
	str		r4, [r5, #0x4]
	str		r4, [r5, #0x8]
	strb	r4, [r5, #0xd]
	strb	r4, [r5, #0xe]
	strb	r4, [r5, #0xf]
	strb	r4, [r5, #0xc]
	b		_0802a112
_0802a0fe:
	ldrb	r1, [r5, #0xc]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802a112
	mov		r0, #0xfe
	and		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strb	r0, [r5, #0xc]
_0802a112:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2A118, 0x18
	thumb_func_end sub_0802a0a4

	thumb_func_start sub_0802a130
sub_0802a130:
	push	{ r4, lr }
	ldr		r4, _0802a144
	ldr		r0, [r4, #0x4]
	cmp		r0, #0x0
	beq		_0802a148
	bl		sub_0807d7d0
	mov		r0, #0x1
	b		_0802a14a

.incbin "base.gba", 0x2A142, 0x2

_0802a144:	.4byte 0x030052F0

_0802a148:
	mov		r0, #0x2
_0802a14a:
	strb	r0, [r4, #0xc]
	ldr		r0, _0802a15c
	ldrb	r1, [r0, #0xe]
	mov		r2, #0x0
	strb	r1, [r0, #0xd]
	strb	r2, [r0, #0xf]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0802a15c:	.4byte 0x030052F0
	ldr		r0, _0802a184
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0802a188
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x6
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	bx		lr

_0802a184:	.4byte InsideofWindow0and1
_0802a188:	.4byte 0x00009FFF
	thumb_func_end sub_0802a130

	thumb_func_start sub_0802a18c
sub_0802a18c:
	push	{ r4, lr }
	ldr		r4, _0802a1cc
	ldrb	r2, [r4, #0xf]
	ldr		r3, _0802a1d0
	lsl		r1, r2, #0x1
	add		r1, r1, r2
	lsl		r1, r1, #0x1
	mov		r0, #0x78
	sub		r0, r0, r1
	lsl		r0, r0, #0x8
	add		r1, #0x78
	orr		r0, r1
	strh	r0, [r3, #0x0]
	add		r3, #0x4
	lsl		r1, r2, #0x2
	mov		r0, #0x50
	sub		r0, r0, r1
	lsl		r0, r0, #0x8
	add		r1, #0x50
	orr		r0, r1
	strh	r0, [r3, #0x0]
	ldr		r1, _0802a1d4
	mov		r0, #0x3f
	strh	r0, [r1, #0x0]
	cmp		r2, #0x14
	bne		_0802a1c4
	mov		r0, #0x0
	str		r0, [r4, #0x0]
_0802a1c4:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2A1CA, 0x2

_0802a1cc:	.4byte 0x030052F0
_0802a1d0:	.4byte Window0HorizontalDimensions
_0802a1d4:	.4byte InsideofWindow0and1
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0802a1f4
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r1, _0802a1f8
	mov		r0, #0xf0
	strh	r0, [r1, #0x0]
	add		r1, #0x4
	mov		r0, #0xa0
	strh	r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x2A1F2, 0x2

_0802a1f4:	.4byte 0x00009FFF
_0802a1f8:	.4byte Window0HorizontalDimensions
	ldr		r1, _0802a230
	mov		r0, #0xf0
	strh	r0, [r1, #0x0]
	add		r1, #0x4
	mov		r0, #0xa0
	strh	r0, [r1, #0x0]
	add		r1, #0x4
	mov		r0, #0x3f
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0802a234
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x6
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	bx		lr

.incbin "base.gba", 0x2A22E, 0x2

_0802a230:	.4byte Window0HorizontalDimensions
_0802a234:	.4byte 0x00009FFF
	thumb_func_end sub_0802a18c

	thumb_func_start sub_0802a238
sub_0802a238:
	push	{ r4, r5, lr }
	ldr		r5, _0802a26c
	ldrb	r2, [r5, #0xf]
	ldr		r4, _0802a270
	lsl		r1, r2, #0x1
	add		r1, r1, r2
	lsl		r3, r1, #0x1
	lsl		r1, r1, #0x9
	mov		r0, #0xf0
	sub		r0, r0, r3
	orr		r1, r0
	strh	r1, [r4, #0x0]
	add		r4, #0x4
	lsl		r3, r2, #0x2
	lsl		r1, r2, #0xa
	mov		r0, #0xa0
	sub		r0, r0, r3
	orr		r1, r0
	strh	r1, [r4, #0x0]
	cmp		r2, #0x14
	bne		_0802a266
	mov		r0, #0x0
	str		r0, [r5, #0x0]
_0802a266:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0802a26c:	.4byte 0x030052F0
_0802a270:	.4byte Window0HorizontalDimensions
	thumb_func_end sub_0802a238

	thumb_func_start sub_0802a274
sub_0802a274:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r3, r1, #0x10
	ldr		r0, [r2, #0x4]
	cmp		r0, #0x0
	bgt		_0802a286
	mov		r0, #0x0
	b		_0802a2d8
_0802a286:
	ldr		r0, [r2, #0x10]
	add		r0, #0x1
	str		r0, [r2, #0x10]
	ldr		r0, [r2, #0x0]
	ldrb	r4, [r0, #0x2]
	add		r1, r0, #0x0
	cmp		r4, #0xfd
	bhi		_0802a2ae
	mov		r0, #0xff
	and		r0, r3
	ldrb	r5, [r1, #0x0]
	cmp		r0, r5
	bne		_0802a2ae
	lsr		r0, r3, #0x8
	ldrb	r5, [r1, #0x1]
	cmp		r0, r5
	bne		_0802a2ae
	add		r0, r4, #0x1
	strb	r0, [r1, #0x2]
	b		_0802a2d6
_0802a2ae:
	add		r0, r1, #0x3
	str		r0, [r2, #0x0]
	strb	r3, [r1, #0x3]
	ldr		r1, [r2, #0x0]
	lsr		r0, r3, #0x8
	strb	r0, [r1, #0x1]
	ldr		r1, [r2, #0x0]
	mov		r0, #0x1
	strb	r0, [r1, #0x2]
	ldr		r0, [r2, #0x0]
	mov		r1, #0x0
	strb	r1, [r0, #0x3]
	ldr		r0, [r2, #0x0]
	strb	r1, [r0, #0x4]
	ldr		r1, [r2, #0x0]
	mov		r0, #0xff
	strb	r0, [r1, #0x5]
	ldr		r0, [r2, #0x4]
	sub		r0, #0x3
	str		r0, [r2, #0x4]
_0802a2d6:
	mov		r0, #0x1
_0802a2d8:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2A2DE, 0x2
	thumb_func_end sub_0802a274

	thumb_func_start sub_0802a2e0
sub_0802a2e0:
	str		r1, [r0, #0x0]
	mov		r3, #0x0
	strb	r3, [r1, #0x0]
	strb	r3, [r1, #0x1]
	strb	r3, [r1, #0x2]
	strb	r3, [r1, #0x3]
	strb	r3, [r1, #0x4]
	mov		r3, #0xff
	strb	r3, [r1, #0x5]
	str		r2, [r0, #0x8]
	sub		r2, #0x6
	str		r2, [r0, #0x4]
	mov		r1, #0x0
	str		r1, [r0, #0x10]
	mov		r0, #0x1
	bx		lr
	thumb_func_end sub_0802a2e0

	thumb_func_start sub_0802a300
sub_0802a300:
	str		r1, [r0, #0x0]
	ldrb	r1, [r1, #0x2]
	str		r1, [r0, #0xc]
	mov		r0, #0x1
	bx		lr

.incbin "base.gba", 0x2A30A, 0x2
	thumb_func_end sub_0802a300

	thumb_func_start sub_0802a30c
sub_0802a30c:
	add		r1, r0, #0x0
	ldr		r2, [r1, #0x0]
	ldrb	r0, [r2, #0x2]
	cmp		r0, #0xff
	bne		_0802a31a
	mov		r0, #0x0
	b		_0802a338
_0802a31a:
	ldr		r0, [r1, #0xc]
	cmp		r0, #0x0
	bgt		_0802a328
	add		r0, r2, #0x3
	str		r0, [r1, #0x0]
	ldrb	r0, [r0, #0x2]
	str		r0, [r1, #0xc]
_0802a328:
	ldr		r0, [r1, #0xc]
	sub		r0, #0x1
	str		r0, [r1, #0xc]
	ldr		r1, [r1, #0x0]
	ldrb	r0, [r1, #0x0]
	ldrb	r1, [r1, #0x1]
	lsl		r1, r1, #0x8
	orr		r0, r1
_0802a338:
	bx		lr

.incbin "base.gba", 0x2A33A, 0x2
	thumb_func_end sub_0802a30c

	thumb_func_start sub_0802a33c
sub_0802a33c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	add		r2, r6, #0x0
	add		r2, #0x5c
	ldr		r0, _0802a40c
	mov		r12, r0
	mov		r5, #0x14
	ldrsh	r1, [r6, r5]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0802a358
	add		r0, #0x3f
_0802a358:
	asr		r3, r0, #0x6
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	sub		r0, r4, r3
	ldr		r5, _0802a410
	and		r0, r5
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r7, [r0, #0x0]
	add		r0, r3, #0x0
	and		r0, r5
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	mov		r0, #0x16
	ldrsh	r1, [r6, r0]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0802a382
	add		r0, #0x3f
_0802a382:
	asr		r3, r0, #0x6
	sub		r0, r4, r3
	and		r0, r5
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r4, [r0, #0x0]
	add		r0, r3, #0x0
	and		r0, r5
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r3, [r0, #0x0]
	lsl		r0, r7, #0x1
	str		r0, [r6, #0x5c]
	mov		r5, r8
	neg		r1, r5
	add		r0, r1, #0x0
	mul		r0, r4
	cmp		r0, #0x0
	bge		_0802a3ac
	ldr		r5, _0802a414
	add		r0, r0, r5
_0802a3ac:
	asr		r0, r0, #0xe
	str		r0, [r2, #0x4]
	add		r0, r1, #0x0
	mul		r0, r3
	cmp		r0, #0x0
	bge		_0802a3bc
	ldr		r1, _0802a414
	add		r0, r0, r1
_0802a3bc:
	asr		r0, r0, #0xe
	str		r0, [r2, #0x8]
	mov		r5, r8
	lsl		r0, r5, #0x1
	str		r0, [r2, #0xc]
	add		r0, r7, #0x0
	mul		r0, r4
	cmp		r0, #0x0
	bge		_0802a3d2
	ldr		r1, _0802a414
	add		r0, r0, r1
_0802a3d2:
	asr		r0, r0, #0xe
	str		r0, [r2, #0x10]
	add		r0, r7, #0x0
	mul		r0, r3
	cmp		r0, #0x0
	bge		_0802a3e2
	ldr		r5, _0802a414
	add		r0, r0, r5
_0802a3e2:
	asr		r0, r0, #0xe
	str		r0, [r2, #0x14]
	mov		r0, #0x0
	str		r0, [r2, #0x18]
	neg		r0, r3
	lsl		r0, r0, #0x1
	str		r0, [r2, #0x1c]
	lsl		r0, r4, #0x1
	str		r0, [r2, #0x20]
	add		r0, r6, #0x0
	bl		sub_0802ab54
	add		r0, r6, #0x0
	bl		sub_0802ab64
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2A40A, 0x2

_0802a40c:	.4byte 0x08101068
_0802a410:	.4byte 0x000003FF
_0802a414:	.4byte 0x00003FFF
	thumb_func_end sub_0802a33c

	thumb_func_start sub_0802a418
sub_0802a418:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	add		r5, r4, #0x0
	add		r5, #0x80
	ldr		r6, _0802a4a0
	mov		r0, #0x16
	ldrsh	r1, [r4, r0]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0802a432
	add		r0, #0x3f
_0802a432:
	asr		r2, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r2
	ldr		r3, _0802a4a4
	and		r0, r3
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r7, [r0, #0x0]
	add		r0, r2, #0x0
	and		r0, r3
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	mov		r6, #0x40
_0802a452:
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x0
	bge		_0802a45c
	ldr		r1, _0802a4a8
	add		r0, r0, r1
_0802a45c:
	asr		r0, r0, #0x10
	add		r1, r0, #0x0
	mul		r1, r7
	ldr		r0, [r4, #0x28]
	sub		r0, r6, r0
	mov		r2, r8
	mul		r2, r0
	add		r0, r2, #0x0
	add		r0, r1, r0
	cmp		r0, #0x0
	bge		_0802a474
	add		r0, #0x7f
_0802a474:
	asr		r1, r0, #0x7
	ldr		r0, [r4, #0x34]
	bl		sub_0807d80c
	str		r0, [r5, #0x0]
	mul		r0, r7
	cmp		r0, #0x0
	bge		_0802a488
	ldr		r1, _0802a4ac
	add		r0, r0, r1
_0802a488:
	asr		r0, r0, #0xf
	str		r0, [r5, #0x4]
	add		r5, #0x8
	add		r6, #0x1
	cmp		r6, #0x9f
	ble		_0802a452
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2A49E, 0x2

_0802a4a0:	.4byte 0x08101068
_0802a4a4:	.4byte 0x000003FF
_0802a4a8:	.4byte 0x0000FFFF
_0802a4ac:	.4byte 0x00007FFF
	thumb_func_end sub_0802a418

	thumb_func_start sub_0802a4b0
sub_0802a4b0:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r6, _0802a4f0
	mov		r0, #0x16
	ldrsh	r2, [r4, r0]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0802a4c2
	add		r0, #0x3f
_0802a4c2:
	asr		r3, r0, #0x6
	ldr		r0, _0802a4f4
	add		r1, r0, #0x0
	add		r0, r3, #0x0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r5, [r0, #0x0]
	cmp		r5, #0x0
	beq		_0802a4f8
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _0802a4f4
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	bl		sub_08071b70
	b		_0802a4fa

.incbin "base.gba", 0x2A4EE, 0x2

_0802a4f0:	.4byte 0x08101068
_0802a4f4:	.4byte 0x000003FF

_0802a4f8:
	mov		r0, #0x0
_0802a4fa:
	add		r3, r0, #0x0
	ldr		r2, [r4, #0x10]
	sub		r1, r2, #0x1
	ldr		r0, _0802a520
	cmp		r1, r0
	bls		_0802a510
	cmp		r2, #0x0
	bge		_0802a52c
	ldr		r0, _0802a524
	cmp		r2, r0
	ble		_0802a52c
_0802a510:
	add		r0, r2, #0x0
	mul		r0, r3
	cmp		r0, #0x0
	bge		_0802a51c
	ldr		r1, _0802a528
	add		r0, r0, r1
_0802a51c:
	asr		r0, r0, #0x10
	b		_0802a5de

_0802a520:	.4byte 0x0000FFFE
_0802a524:	.4byte 0xffff0000
_0802a528:	.4byte 0x0000FFFF

_0802a52c:
	ldr		r0, _0802a558
	sub		r1, r2, #0x1
	cmp		r1, r0
	bls		_0802a53e
	cmp		r2, #0x0
	bge		_0802a564
	ldr		r0, _0802a55c
	cmp		r2, r0
	ble		_0802a564
_0802a53e:
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0802a546
	add		r0, #0xf
_0802a546:
	asr		r0, r0, #0x4
	mul		r0, r3
	cmp		r0, #0x0
	bge		_0802a552
	ldr		r1, _0802a560
	add		r0, r0, r1
_0802a552:
	asr		r1, r0, #0x1b
	b		_0802a5e8

.incbin "base.gba", 0x2A556, 0x2

_0802a558:	.4byte 0x000FFFFE
_0802a55c:	.4byte 0xFFF00000
_0802a560:	.4byte 0x07FFFFFF

_0802a564:
	ldr		r0, _0802a590
	cmp		r1, r0
	bls		_0802a576
	cmp		r2, #0x0
	bge		_0802a598
	mov		r0, #0xff
	lsl		r0, r0, #0x18
	cmp		r2, r0
	ble		_0802a598
_0802a576:
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0802a57e
	add		r0, #0xff
_0802a57e:
	asr		r0, r0, #0x8
	mul		r0, r3
	cmp		r0, #0x0
	bge		_0802a58a
	ldr		r1, _0802a594
	add		r0, r0, r1
_0802a58a:
	asr		r1, r0, #0x17
	b		_0802a5e8

.incbin "base.gba", 0x2A58E, 0x2

_0802a590:	.4byte 0x00FFFFFE
_0802a594:	.4byte 0x007FFFFF

_0802a598:
	ldr		r0, _0802a5c4
	cmp		r1, r0
	bls		_0802a5aa
	cmp		r2, #0x0
	bge		_0802a5d0
	mov		r0, #0xf0
	lsl		r0, r0, #0x18
	cmp		r2, r0
	ble		_0802a5d0
_0802a5aa:
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0802a5b4
	ldr		r1, _0802a5c8
	add		r0, r2, r1
_0802a5b4:
	asr		r0, r0, #0xc
	mul		r0, r3
	cmp		r0, #0x0
	bge		_0802a5c0
	ldr		r1, _0802a5cc
	add		r0, r0, r1
_0802a5c0:
	asr		r1, r0, #0x13
	b		_0802a5e8

_0802a5c4:	.4byte 0x0FFFFFFE
_0802a5c8:	.4byte 0x00000FFF
_0802a5cc:	.4byte 0x0007FFFF

_0802a5d0:
	add		r0, r2, #0x0
	cmp		r0, #0x0
	bge		_0802a5da
	ldr		r1, _0802a5f4
	add		r0, r0, r1
_0802a5da:
	asr		r0, r0, #0x10
	mul		r0, r3
_0802a5de:
	cmp		r0, #0x0
	bge		_0802a5e6
	ldr		r1, _0802a5f8
	add		r0, r0, r1
_0802a5e6:
	asr		r1, r0, #0xf
_0802a5e8:
	ldr		r0, [r4, #0x28]
	sub		r0, r0, r1
	str		r0, [r4, #0x2c]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0802a5f4:	.4byte 0x0000FFFF
_0802a5f8:	.4byte 0x00007FFF
	thumb_func_end sub_0802a4b0

	thumb_func_start sub_0802a5fc
sub_0802a5fc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	mov		r10, r0
	ldr		r4, _0802a72c
	mov		r2, #0x14
	ldrsh	r1, [r0, r2]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0802a618
	add		r0, #0x3f
_0802a618:
	asr		r2, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r2
	ldr		r3, _0802a730
	and		r0, r3
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x0]
	add		r0, r2, #0x0
	and		r0, r3
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x4]
	mov		r4, #0x9f
	mov		r8, r4
	mov		r0, #0xde
	lsl		r0, r0, #0x2
	add		r0, r10
	mov		r12, r0
	mov		r1, r10
	ldr		r0, [r1, #0x50]
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x9
	ldr		r0, _0802a734
	mov		r2, #0xbe
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	add		r3, r1, r0
	mov		r1, r10
	add		r1, #0x18
	mov		r4, r10
	ldr		r0, [r4, #0x18]
	cmp		r0, #0x0
	bge		_0802a666
	add		r0, #0xff
_0802a666:
	asr		r0, r0, #0x8
	str		r0, [sp, #0x8]
	ldr		r0, [r1, #0x4]
	cmp		r0, #0x0
	bge		_0802a672
	add		r0, #0xff
_0802a672:
	asr		r0, r0, #0x8
	str		r0, [sp, #0xC]
	mov		r1, r10
	ldr		r0, [r1, #0x24]
	neg		r0, r0
	str		r0, [sp, #0x10]
	ldr		r0, [r1, #0x28]
	mov		r2, r8
	sub		r5, r2, r0
	ldr		r4, _0802a738
	mov		r9, r4
_0802a688:
	mov		r0, r12
	ldr		r1, [r0, #0x4]
	ldr		r2, [r0, #0x0]
	ldr		r4, [sp, #0x0]
	add		r0, r1, #0x0
	mul		r0, r4
	cmp		r0, #0x0
	bge		_0802a69a
	add		r0, r9
_0802a69a:
	asr		r7, r0, #0xf
	neg		r0, r2
	ldr		r4, [sp, #0x4]
	mul		r0, r4
	cmp		r0, #0x0
	bge		_0802a6a8
	add		r0, r9
_0802a6a8:
	asr		r6, r0, #0xf
	ldr		r4, [sp, #0x4]
	add		r0, r1, #0x0
	mul		r0, r4
	cmp		r0, #0x0
	bge		_0802a6b6
	add		r0, r9
_0802a6b6:
	asr		r4, r0, #0xf
	ldr		r1, [sp, #0x0]
	add		r0, r2, #0x0
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0802a6c4
	add		r0, r9
_0802a6c4:
	asr		r2, r0, #0xf
	ldr		r1, [sp, #0x10]
	add		r0, r1, #0x0
	mul		r0, r7
	ldr		r1, [sp, #0x8]
	add		r0, r1, r0
	add		r1, r5, #0x0
	mul		r1, r6
	add		r0, r0, r1
	str		r0, [r3, #0x8]
	ldr		r1, [sp, #0x10]
	add		r0, r1, #0x0
	mul		r0, r4
	ldr		r1, [sp, #0xC]
	add		r0, r1, r0
	add		r1, r5, #0x0
	mul		r1, r2
	add		r0, r0, r1
	str		r0, [r3, #0xc]
	ldrh	r0, [r3, #0x0]
	strh	r7, [r3, #0x0]
	ldrh	r0, [r3, #0x2]
	strh	r6, [r3, #0x2]
	ldrh	r0, [r3, #0x4]
	strh	r4, [r3, #0x4]
	ldrh	r0, [r3, #0x6]
	strh	r2, [r3, #0x6]
	sub		r3, #0x10
	mov		r2, #0x8
	neg		r2, r2
	add		r12, r2
	sub		r5, #0x1
	mov		r4, #0x1
	neg		r4, r4
	add		r8, r4
	mov		r0, r8
	cmp		r0, #0x3f
	bgt		_0802a688
	mov		r2, r10
	ldr		r1, [r2, #0x50]
	mov		r0, #0x1
	sub		r0, r0, r1
	str		r0, [r2, #0x50]
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2A72A, 0x2

_0802a72c:	.4byte 0x08101068
_0802a730:	.4byte 0x000003FF
_0802a734:	.4byte 0x03005360
_0802a738:	.4byte 0x00007FFF
	thumb_func_end sub_0802a5fc

	thumb_func_start sub_0802a73c
sub_0802a73c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x3c
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	str		r2, [sp, #0x18]
	add		r4, r3, #0x0
	mov		r0, sp
	str		r0, [sp, #0x34]
	add		r1, sp, #0xc
	mov		r8, r1
	add		r7, r6, #0x0
	add		r7, #0x38
	add		r0, r6, #0x0
	add		r0, #0x5c
	ldr		r2, [r6, #0x5c]
	mov		r9, r2
	ldr		r1, [r0, #0x4]
	mov		r10, r1
	ldr		r2, [r0, #0x8]
	str		r2, [sp, #0x1C]
	ldr		r1, [r0, #0xc]
	str		r1, [sp, #0x20]
	ldr		r2, [r0, #0x10]
	str		r2, [sp, #0x24]
	ldr		r1, [r0, #0x14]
	str		r1, [sp, #0x28]
	ldr		r2, [r0, #0x1c]
	str		r2, [sp, #0x2C]
	ldr		r0, [r0, #0x20]
	str		r0, [sp, #0x30]
	ldr		r1, [r5, #0x0]
	ldr		r0, [r6, #0x38]
	sub		r2, r1, r0
	str		r2, [sp, #0x0]
	ldr		r0, _0802a79c
	mov		r12, r0
	add		r0, r2, r0
	ldr		r3, _0802a7a0
	cmp		r0, r3
	bls		_0802a7a4
	mov		r1, #0x1
	neg		r1, r1
	add		r0, r1, #0x0
	b		_0802a94a

_0802a79c:	.4byte 0x03FFFFFF
_0802a7a0:	.4byte 0x07FFFFFE

_0802a7a4:
	ldr		r0, [r5, #0x4]
	ldr		r1, [r7, #0x4]
	sub		r0, r0, r1
	str		r0, [sp, #0x4]
	ldr		r1, _0802a7bc
	add		r0, r0, r1
	cmp		r0, r3
	bls		_0802a7c0
	mov		r2, #0x1
	neg		r2, r2
	add		r0, r2, #0x0
	b		_0802a94a

_0802a7bc:	.4byte 0x03FFFFFF

_0802a7c0:
	ldr		r0, [r7, #0x8]
	neg		r0, r0
	str		r0, [sp, #0x8]
	add		r0, r12
	cmp		r0, r3
	bls		_0802a7d4
	mov		r1, #0x1
	neg		r1, r1
	add		r0, r1, #0x0
	b		_0802a94a
_0802a7d4:
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0802a7dc
	add		r0, #0x7f
_0802a7dc:
	asr		r1, r0, #0x7
	mov		r0, r9
	cmp		r0, #0x0
	bge		_0802a7e6
	add		r0, #0xf
_0802a7e6:
	asr		r0, r0, #0x4
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0802a7f0
	add		r0, #0x1f
_0802a7f0:
	asr		r0, r0, #0x5
	str		r0, [sp, #0x38]
	mov		r0, r10
	cmp		r0, #0x0
	bge		_0802a7fc
	add		r0, #0xf
_0802a7fc:
	asr		r0, r0, #0x4
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0802a806
	add		r0, #0x1f
_0802a806:
	asr		r0, r0, #0x5
	mov		r12, r0
	ldr		r0, [sp, #0x1C]
	cmp		r0, #0x0
	bge		_0802a812
	add		r0, #0xf
_0802a812:
	asr		r0, r0, #0x4
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0802a81c
	add		r0, #0x1f
_0802a81c:
	asr		r0, r0, #0x5
	mov		r10, r0
	ldr		r2, [sp, #0x34]
	ldr		r1, [r2, #0x4]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0802a82c
	add		r0, #0x7f
_0802a82c:
	asr		r2, r0, #0x7
	ldr		r0, [sp, #0x20]
	cmp		r0, #0x0
	bge		_0802a836
	add		r0, #0xf
_0802a836:
	asr		r0, r0, #0x4
	mul		r0, r2
	cmp		r0, #0x0
	bge		_0802a840
	add		r0, #0x1f
_0802a840:
	asr		r0, r0, #0x5
	mov		r9, r0
	ldr		r0, [sp, #0x24]
	cmp		r0, #0x0
	bge		_0802a84c
	add		r0, #0xf
_0802a84c:
	asr		r0, r0, #0x4
	mul		r0, r2
	cmp		r0, #0x0
	bge		_0802a856
	add		r0, #0x1f
_0802a856:
	asr		r7, r0, #0x5
	ldr		r0, [sp, #0x28]
	cmp		r0, #0x0
	bge		_0802a860
	add		r0, #0xf
_0802a860:
	asr		r0, r0, #0x4
	mul		r0, r2
	cmp		r0, #0x0
	bge		_0802a86a
	add		r0, #0x1f
_0802a86a:
	asr		r5, r0, #0x5
	ldr		r0, [sp, #0x34]
	ldr		r2, [r0, #0x8]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0802a878
	add		r0, #0x7f
_0802a878:
	asr		r1, r0, #0x7
	ldr		r0, [sp, #0x2C]
	cmp		r0, #0x0
	bge		_0802a882
	add		r0, #0xf
_0802a882:
	asr		r0, r0, #0x4
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0802a88c
	add		r0, #0x1f
_0802a88c:
	asr		r3, r0, #0x5
	ldr		r0, [sp, #0x30]
	cmp		r0, #0x0
	bge		_0802a896
	add		r0, #0xf
_0802a896:
	asr		r0, r0, #0x4
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0802a8a0
	add		r0, #0x1f
_0802a8a0:
	asr		r1, r0, #0x5
	ldr		r0, [sp, #0x38]
	add		r0, r9
	mov		r2, r8
	str		r0, [r2, #0x0]
	mov		r2, r12
	add		r0, r2, r7
	add		r0, r0, r3
	mov		r2, r8
	str		r0, [r2, #0x4]
	mov		r2, r10
	add		r0, r2, r5
	add		r0, r0, r1
	mov		r1, r8
	str		r0, [r1, #0x8]
	ldr		r1, [r6, #0x10]
	sub		r2, r1, r0
	cmp		r2, #0x0
	bgt		_0802a8ce
	mov		r2, #0x1
	neg		r2, r2
	add		r0, r2, #0x0
	b		_0802a94a
_0802a8ce:
	ldr		r0, _0802a8d8
	cmp		r2, r0
	bgt		_0802a8dc
	lsl		r0, r2, #0x8
	b		_0802a8e6

_0802a8d8:	.4byte 0x001FFFFF

_0802a8dc:
	cmp		r1, #0x0
	bge		_0802a8e2
	add		r1, #0xff
_0802a8e2:
	asr		r1, r1, #0x8
	add		r0, r2, #0x0
_0802a8e6:
	bl		sub_08071b70
	strh	r0, [r4, #0x0]
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x20
	lsl		r0, r0, #0x10
	mov		r1, #0xf8
	lsl		r1, r1, #0x12
	cmp		r0, r1
	bls		_0802a902
	mov		r1, #0x1
	neg		r1, r1
	add		r0, r1, #0x0
	b		_0802a94a
_0802a902:
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	bl		sub_08071b70
	cmp		r0, #0x0
	bge		_0802a914
	add		r0, #0xff
_0802a914:
	asr		r5, r0, #0x8
	mov		r1, r8
	ldr		r0, [r1, #0x4]
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	bl		sub_08071b70
	cmp		r0, #0x0
	bge		_0802a928
	add		r0, #0xff
_0802a928:
	asr		r2, r0, #0x8
	ldr		r0, [r6, #0x24]
	add		r0, r0, r5
	ldr		r1, [sp, #0x18]
	strh	r0, [r1, #0x0]
	ldr		r1, [r6, #0x28]
	add		r1, r1, r2
	mov		r2, #0xe0
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	add		r0, r0, r1
	ldr		r1, [sp, #0x18]
	strh	r0, [r1, #0x2]
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	lsl		r0, r0, #0x2
_0802a94a:
	strh	r0, [r4, #0x0]
	add		sp, #0x3c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0802a73c

	thumb_func_start sub_0802a95c
sub_0802a95c:
	ldr		r0, [r0, #0x4c]
	bx		lr
	thumb_func_end sub_0802a95c

	thumb_func_start sub_0802a960
sub_0802a960:
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x9
	lsl		r2, r2, #0x4
	ldr		r1, _0802a970
	add		r2, r2, r1
	add		r0, r0, r2
	bx		lr

_0802a970:	.4byte 0x03005360

.incbin "base.gba", 0x2A974, 0xC
	thumb_func_end sub_0802a960

	thumb_func_start sub_0802a980
sub_0802a980:
	mov		r1, #0x0
	str		r1, [r0, #0x50]
	str		r1, [r0, #0x4c]
	mov		r2, #0xe0
	lsl		r2, r2, #0x2
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	bx		lr
	thumb_func_end sub_0802a980

	thumb_func_start sub_0802a990
sub_0802a990:
	push	{ lr }
	lsl		r1, r1, #0x10
	str		r1, [r0, #0xc]
	bl		sub_0802ab38
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2A99E, 0x2
	thumb_func_end sub_0802a990

	thumb_func_start sub_0802a9a0
sub_0802a9a0:
	push	{ lr }
	lsl		r1, r1, #0x10
	str		r1, [r0, #0x10]
	bl		sub_0802a418
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2A9AE, 0x2
	thumb_func_end sub_0802a9a0

	thumb_func_start sub_0802a9b0
sub_0802a9b0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	strh	r1, [r4, #0x16]
	bl		sub_0802a33c
	add		r0, r4, #0x0
	bl		sub_0802a418
	add		r0, r4, #0x0
	bl		sub_0802ab4c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0802a9b0

	thumb_func_start sub_0802a9cc
sub_0802a9cc:
	push	{ lr }
	strh	r1, [r0, #0x14]
	bl		sub_0802a33c
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2A9D8, 0x10
	thumb_func_end sub_0802a9cc

	thumb_func_start sub_0802a9e8
sub_0802a9e8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	str		r1, [r4, #0x0]
	str		r2, [r4, #0x4]
	bl		sub_0802ab4c
	add		r0, r4, #0x0
	bl		sub_0802ab54
	add		r0, r4, #0x0
	bl		sub_0802ab64
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2AA06, 0x1A
	thumb_func_end sub_0802a9e8

	thumb_func_start sub_0802aa20
sub_0802aa20:
	str		r1, [r0, #0x24]
	str		r2, [r0, #0x28]
	bx		lr

.incbin "base.gba", 0x2AA26, 0xE
	thumb_func_end sub_0802aa20

	thumb_func_start sub_0802aa34
sub_0802aa34:
	push	{ r4, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	cmp		r4, #0x0
	bne		_0802aa44
	mov		r0, #0x0
	b		_0802aa82
_0802aa44:
	add		r2, r4, #0x0
	cmp		r4, #0x0
	bge		_0802aa4c
	neg		r2, r4
_0802aa4c:
	add		r0, r2, #0x0
	cmp		r0, #0x0
	bge		_0802aa56
	ldr		r2, _0802aa68
	add		r0, r0, r2
_0802aa56:
	asr		r2, r0, #0xe
	lsl		r0, r1, #0x10
	asr		r1, r0, #0x10
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_0802aa6c
	add		r0, r2, #0x0
	b		_0802aa72

_0802aa68:	.4byte 0x00003FFF

_0802aa6c:
	lsl		r0, r2, #0x8
	bl		sub_08071b70
_0802aa72:
	cmp		r4, #0x0
	bge		_0802aa7e
	neg		r0, r0
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	b		_0802aa82
_0802aa7e:
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
_0802aa82:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0802aa34

	thumb_func_start sub_0802aa88
sub_0802aa88:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	lsl		r3, r3, #0x10
	lsr		r0, r3, #0x10
	mov		r2, #0x0
	cmp		r4, #0x0
	beq		_0802aad8
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x10
	add		r2, r4, #0x0
	cmp		r4, #0x0
	bge		_0802aaa6
	neg		r2, r4
_0802aaa6:
	add		r0, r2, #0x0
	cmp		r0, #0x0
	bge		_0802aab0
	ldr		r2, _0802aac0
	add		r0, r0, r2
_0802aab0:
	asr		r2, r0, #0xe
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_0802aac4
	add		r0, r2, #0x0
	b		_0802aaca

.incbin "base.gba", 0x2AABE, 0x2

_0802aac0:	.4byte 0x00003FFF

_0802aac4:
	lsl		r0, r2, #0x8
	bl		sub_08071b70
_0802aaca:
	cmp		r4, #0x0
	bge		_0802aad0
	neg		r0, r0
_0802aad0:
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_0802aad8:
	ldrh	r0, [r5, #0x0]
	strh	r0, [r6, #0x0]
	ldrh	r1, [r5, #0x2]
	lsl		r0, r2, #0x10
	asr		r0, r0, #0x10
	sub		r1, r1, r0
	strh	r1, [r6, #0x2]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0802aa88

	thumb_func_start sub_0802aaec
sub_0802aaec:
	push	{ lr }
	add		r2, r1, #0x0
	add		r2, #0x1c
	add		r3, r1, #0x0
	add		r3, #0x24
	bl		sub_0802a73c
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2AAFE, 0x3A
	thumb_func_end sub_0802aaec

	thumb_func_start sub_0802ab38
sub_0802ab38:
	push	{ lr }
	ldr		r1, [r0, #0xc]
	ldr		r2, [r0, #0x30]
	add		r1, r1, r2
	str		r1, [r0, #0x34]
	bl		sub_0802a418
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2AB4A, 0x2
	thumb_func_end sub_0802ab38

	thumb_func_start sub_0802ab4c
sub_0802ab4c:
	mov		r1, #0x0
	str		r1, [r0, #0x30]
	bx		lr

.incbin "base.gba", 0x2AB52, 0x2
	thumb_func_end sub_0802ab4c

	thumb_func_start sub_0802ab54
sub_0802ab54:
	ldr		r1, [r0, #0x0]
	str		r1, [r0, #0x18]
	ldr		r1, [r0, #0x4]
	str		r1, [r0, #0x1c]
	mov		r1, #0x0
	str		r1, [r0, #0x20]
	bx		lr

.incbin "base.gba", 0x2AB62, 0x2
	thumb_func_end sub_0802ab54

	thumb_func_start sub_0802ab64
sub_0802ab64:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r6, #0x5c
	ldr		r2, [r0, #0x10]
	ldr		r1, [r0, #0xc]
	sub		r3, r2, r1
	add		r7, r0, #0x0
	add		r7, #0x38
	add		r5, r0, #0x0
	add		r1, r3, #0x0
	cmp		r3, #0x0
	bge		_0802ab7e
	neg		r1, r3
_0802ab7e:
	ldr		r0, _0802ab8c
	cmp		r1, r0
	bgt		_0802ab90
	mov		r2, #0x0
	mov		r4, #0x10
	b		_0802abb4

.incbin "base.gba", 0x2AB8A, 0x2

_0802ab8c:	.4byte 0x0000FFFF

_0802ab90:
	ldr		r0, _0802ab9c
	cmp		r1, r0
	bgt		_0802aba0
	mov		r2, #0x5
	mov		r4, #0xb
	b		_0802abb4

_0802ab9c:	.4byte 0x000FFFFF

_0802aba0:
	ldr		r0, _0802abac
	cmp		r1, r0
	bgt		_0802abb0
	mov		r2, #0x9
	mov		r4, #0x7
	b		_0802abb4

_0802abac:	.4byte 0x00FFFFFF

_0802abb0:
	mov		r2, #0xd
	mov		r4, #0x3
_0802abb4:
	asr		r3, r2
	add		r2, r3, #0x0
	ldr		r0, [r6, #0x8]
	add		r1, r2, #0x0
	mul		r1, r0
	asr		r1, r4
	ldr		r0, [r5, #0x0]
	sub		r0, r0, r1
	str		r0, [r7, #0x0]
	ldr		r0, [r6, #0x14]
	add		r1, r2, #0x0
	mul		r1, r0
	asr		r1, r4
	ldr		r0, [r5, #0x4]
	sub		r0, r0, r1
	str		r0, [r7, #0x4]
	ldr		r0, [r6, #0x20]
	add		r1, r2, #0x0
	mul		r1, r0
	asr		r1, r4
	ldr		r0, [r5, #0x8]
	sub		r0, r0, r1
	str		r0, [r7, #0x8]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2ABE8, 0x18
	thumb_func_end sub_0802ab64

	thumb_func_start sub_0802ac00
sub_0802ac00:
	push	{ r4, lr }
	mov		r12, r0
	mov		r1, #0xe6
	lsl		r1, r1, #0x2
	add		r1, r12
	ldr		r0, [r0, #0x18]
	str		r0, [r1, #0x0]
	mov		r1, #0xe7
	lsl		r1, r1, #0x2
	add		r1, r12
	mov		r2, r12
	ldr		r0, [r2, #0x1c]
	str		r0, [r1, #0x0]
	ldrh	r2, [r2, #0x14]
	mov		r0, #0xe8
	lsl		r0, r0, #0x2
	add		r0, r12
	mov		r3, #0x0
	mov		r1, #0x0
	strh	r2, [r0, #0x0]
	ldr		r0, _0802aca4
	add		r0, r12
	strh	r1, [r0, #0x0]
	mov		r2, #0xe2
	lsl		r2, r2, #0x2
	add		r2, r12
	mov		r4, r12
	ldr		r0, [r4, #0x18]
	str		r0, [r2, #0x0]
	mov		r2, #0xe3
	lsl		r2, r2, #0x2
	add		r2, r12
	ldr		r0, [r4, #0x1c]
	str		r0, [r2, #0x0]
	ldrh	r2, [r4, #0x14]
	mov		r0, #0xe4
	lsl		r0, r0, #0x2
	add		r0, r12
	strh	r2, [r0, #0x0]
	ldr		r0, _0802aca8
	add		r0, r12
	strh	r1, [r0, #0x0]
	mov		r0, #0xe5
	lsl		r0, r0, #0x2
	add		r0, r12
	strh	r1, [r0, #0x0]
	ldr		r0, _0802acac
	add		r0, r12
	strh	r1, [r0, #0x0]
	mov		r0, #0xe9
	lsl		r0, r0, #0x2
	add		r0, r12
	strh	r1, [r0, #0x0]
	mov		r0, #0xec
	lsl		r0, r0, #0x2
	add		r0, r12
	str		r1, [r0, #0x0]
	mov		r0, #0xed
	lsl		r0, r0, #0x2
	add		r0, r12
	str		r1, [r0, #0x0]
	mov		r0, #0xee
	lsl		r0, r0, #0x2
	add		r0, r12
	str		r1, [r0, #0x0]
	mov		r0, #0xef
	lsl		r0, r0, #0x2
	add		r0, r12
	str		r1, [r0, #0x0]
	mov		r0, #0xe1
	lsl		r0, r0, #0x2
	add		r0, r12
	strh	r1, [r0, #0x0]
	ldr		r0, _0802acb0
	add		r0, r12
	strb	r3, [r0, #0x0]
	mov		r0, r12
	bl		sub_0802addc
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0802aca4:	.4byte 0x000003A2
_0802aca8:	.4byte 0x00000392
_0802acac:	.4byte 0x00000396
_0802acb0:	.4byte 0x00000386
	thumb_func_end sub_0802ac00

	thumb_func_start sub_0802acb4
sub_0802acb4:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	mov		r0, #0xe2
	lsl		r0, r0, #0x2
	add		r1, r2, r0
	mov		r3, #0xe6
	lsl		r3, r3, #0x2
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r4, #0xe3
	lsl		r4, r4, #0x2
	add		r1, r2, r4
	mov		r5, #0xe7
	lsl		r5, r5, #0x2
	add		r0, r2, r5
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0xe8
	lsl		r0, r0, #0x2
	add		r3, r2, r0
	mov		r1, #0xe4
	lsl		r1, r1, #0x2
	add		r4, r2, r1
	ldrh	r0, [r3, #0x0]
	ldrh	r1, [r4, #0x0]
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	blt		_0802ad02
	add		r5, #0xe4
	add		r0, r1, r5
	strh	r0, [r4, #0x0]
	ldrh	r1, [r3, #0x0]
	sub		r0, r1, r0
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0802ad14
	b		_0802ad12
_0802ad02:
	ldr		r5, _0802ad28
	add		r0, r1, r5
	strh	r0, [r4, #0x0]
	ldrh	r1, [r3, #0x0]
	sub		r0, r1, r0
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	ble		_0802ad14
_0802ad12:
	strh	r1, [r4, #0x0]
_0802ad14:
	ldr		r0, _0802ad2c
	add		r1, r2, r0
	ldrh	r3, [r1, #0x0]
	mov		r4, #0x0
	ldrsh	r0, [r1, r4]
	cmp		r0, #0x27
	bgt		_0802ad30
	add		r0, r3, #0x0
	add		r0, #0x8
	b		_0802ad32

_0802ad28:	.4byte 0xFFFFFB80
_0802ad2c:	.4byte 0x00000396

_0802ad30:
	mov		r0, #0x30
_0802ad32:
	strh	r0, [r1, #0x0]
	ldr		r5, _0802ad80
	add		r0, r2, r5
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0802ad52
	ldr		r3, _0802ad84
	add		r0, r2, r3
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	cmp		r1, #0x0
	bne		_0802ad52
	add		r5, #0x4
	add		r0, r2, r5
	strh	r1, [r0, #0x0]
_0802ad52:
	ldr		r0, _0802ad84
	add		r4, r2, r0
	ldr		r1, _0802ad80
	add		r3, r2, r1
	ldrh	r0, [r4, #0x0]
	ldrh	r1, [r3, #0x0]
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	ble		_0802ad8c
	ldr		r5, _0802ad88
	add		r0, r2, r5
	ldrh	r0, [r0, #0x0]
	add		r0, r1, r0
	strh	r0, [r3, #0x0]
	ldrh	r1, [r4, #0x0]
	sub		r0, r1, r0
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0802ada6
	b		_0802ada4

.incbin "base.gba", 0x2AD7E, 0x2

_0802ad80:	.4byte 0x00000392
_0802ad84:	.4byte 0x000003A2
_0802ad88:	.4byte 0x00000396

_0802ad8c:
	cmp		r0, #0x0
	bge		_0802ada6
	ldr		r5, _0802adc8
	add		r0, r2, r5
	ldrh	r0, [r0, #0x0]
	sub		r0, r1, r0
	strh	r0, [r3, #0x0]
	ldrh	r1, [r4, #0x0]
	sub		r0, r1, r0
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	ble		_0802ada6
_0802ada4:
	strh	r1, [r3, #0x0]
_0802ada6:
	mov		r1, #0xe9
	lsl		r1, r1, #0x2
	add		r0, r2, r1
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	mov		r4, #0xe5
	lsl		r4, r4, #0x2
	add		r2, r2, r4
	mov		r5, #0x0
	ldrsh	r0, [r2, r5]
	sub		r1, r1, r0
	cmp		r1, #0x0
	ble		_0802adcc
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	b		_0802add4

.incbin "base.gba", 0x2ADC6, 0x2

_0802adc8:	.4byte 0x00000396

_0802adcc:
	cmp		r1, #0x0
	bge		_0802add6
	ldrh	r0, [r2, #0x0]
	sub		r0, #0x1
_0802add4:
	strh	r0, [r2, #0x0]
_0802add6:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0802acb4

	thumb_func_start sub_0802addc
sub_0802addc:
	push	{ lr }
	bl		sub_0802a5fc
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2ADE6, 0x2
	thumb_func_end sub_0802addc

	thumb_func_start sub_0802ade8
sub_0802ade8:
	push	{ r4, lr }
	mov		r12, r0
	mov		r0, #0xeb
	lsl		r0, r0, #0x2
	add		r0, r12
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x49
	mov		r1, #0xea
	lsl		r1, r1, #0x2
	add		r1, r12
	ldr		r2, [r1, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0x2
	add		r1, r12
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	str		r0, [r1, #0x0]
	ldr		r1, [r2, #0x8]
	ldr		r0, _0802ae40
	mov		r3, #0x0
	ldrsb	r3, [r0, r3]
	add		r4, r0, #0x0
	cmp		r1, r3
	beq		_0802ae30
	str		r3, [r2, #0x8]
	ldr		r1, _0802ae44
	ldr		r0, [r1, #0x14]
	cmp		r0, r2
	bne		_0802ae30
	ldr		r2, _0802ae48
	ldrb	r0, [r2, #0x1]
	strb	r3, [r2, #0x1]
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x20
	orr		r0, r1
	strb	r0, [r2, #0x0]
_0802ae30:
	mov		r0, #0xeb
	lsl		r0, r0, #0x2
	add		r0, r12
	ldrb	r0, [r0, #0x0]
	strb	r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0802ae40:	.4byte 0x03002190
_0802ae44:	.4byte 0x03005340
_0802ae48:	.4byte GeneralLCDStatus_STAT_LYC_

.incbin "base.gba", 0x2AE4C, 0x28
	thumb_func_end sub_0802ade8

	thumb_func_start sub_0802ae74
sub_0802ae74:
	push	{ r4, lr }
	add		r3, r0, #0x0
	mov		r1, #0xe4
	lsl		r1, r1, #0x2
	add		r0, r3, r1
	ldr		r1, _0802aeb0
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	bge		_0802ae8a
	add		r0, #0x3f
_0802ae8a:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	mov		r4, #0xe2
	lsl		r4, r4, #0x2
	add		r2, r3, r4
	add		r4, #0xc
	add		r0, r3, r4
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r1, r0
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2AEAE, 0x2

_0802aeb0:	.4byte 0x08101068
	thumb_func_end sub_0802ae74

	thumb_func_start sub_0802aeb4
sub_0802aeb4:
	push	{ r4, lr }
	add		r3, r0, #0x0
	mov		r1, #0xe4
	lsl		r1, r1, #0x2
	add		r0, r3, r1
	ldr		r2, _0802aef8
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	cmp		r1, #0x0
	bge		_0802aeca
	add		r1, #0x3f
_0802aeca:
	asr		r1, r1, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r1
	ldr		r1, _0802aefc
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	mov		r0, #0xe3
	lsl		r0, r0, #0x2
	add		r2, r3, r0
	mov		r4, #0xe5
	lsl		r4, r4, #0x2
	add		r0, r3, r4
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r1, r0
	ldr		r0, [r2, #0x0]
	sub		r0, r0, r1
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0802aef8:	.4byte 0x08101068
_0802aefc:	.4byte 0x000003FF

.incbin "base.gba", 0x2AF00, 0x18
	thumb_func_end sub_0802aeb4

	thumb_func_start sub_0802af18
sub_0802af18:
	push	{ r4, lr }
	add		r3, r0, #0x0
	mov		r4, #0x1
	mov		r1, #0xe2
	lsl		r1, r1, #0x2
	add		r0, r3, r1
	mov		r2, #0xe6
	lsl		r2, r2, #0x2
	add		r1, r3, r2
	ldr		r2, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	cmp		r2, r0
	bne		_0802af5e
	mov		r1, #0xe3
	lsl		r1, r1, #0x2
	add		r0, r3, r1
	mov		r2, #0xe7
	lsl		r2, r2, #0x2
	add		r1, r3, r2
	ldr		r2, [r0, #0x0]
	ldr		r0, [r1, #0x0]
	cmp		r2, r0
	bne		_0802af5e
	mov		r1, #0xe4
	lsl		r1, r1, #0x2
	add		r0, r3, r1
	ldr		r1, [r0, #0x0]
	mov		r2, #0xe8
	lsl		r2, r2, #0x2
	add		r0, r3, r2
	ldr		r0, [r0, #0x0]
	eor		r1, r0
	neg		r0, r1
	orr		r0, r1
	lsr		r4, r0, #0x1f
_0802af5e:
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2AF66, 0x2
	thumb_func_end sub_0802af18

	thumb_func_start sub_0802af68
sub_0802af68:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r2, #0x0
	add		r0, r5, #0x0
	add		r0, #0x30
	ldrb	r2, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_0802b000
	ldrb	r0, [r5, #0x1]
	cmp		r0, #0x0
	beq		_0802afe0
	ldrb	r1, [r5, #0x3]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802afcc
	add		r0, r5, #0x0
	add		r0, #0x80
	ldr		r1, [r0, #0x0]
	mov		r8, r0
	ldr		r7, _0802afc8
	add		r4, r5, r1
	mov		r6, #0x3
_0802af9e:
	ldrh	r1, [r4, #0x0]
	cmp		r1, #0x0
	beq		_0802afb6
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	add		r0, r5, r0
	add		r0, r0, r1
	add		r1, r7, #0x0
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	bl		_DrawFrameRunAudio
_0802afb6:
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	add		r7, r7, r0
	add		r4, #0x2
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0802af9e
	b		_0802b076

.incbin "base.gba", 0x2AFC6, 0x2

_0802afc8:	.4byte 0x06008000

_0802afcc:
	add		r0, r5, #0x0
	add		r0, #0x80
	ldr		r0, [r0, #0x0]
	add		r0, r5, r0
	ldr		r1, _0802afdc
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	b		_0802b076

_0802afdc:	.4byte 0x06008000

_0802afe0:
	bl		sub_08029f34
	add		r1, r5, #0x0
	add		r1, #0x80
	ldr		r1, [r1, #0x0]
	add		r1, r5, r1
	ldr		r2, _0802aff8
	ldr		r3, _0802affc
	bl		sub_08029ee4
	b		_0802b076

.incbin "base.gba", 0x2AFF6, 0x2

_0802aff8:	.4byte 0x06008000
_0802affc:	.4byte 0x84001000

_0802b000:
	add		r0, r2, r1
	lsl		r0, r0, #0x18
	ldr		r1, _0802b058
	lsr		r0, r0, #0x16
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, _0802b05c
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	add		r4, r2, r1
	ldrb	r1, [r4, #0x3]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802b068
	ldr		r1, _0802b060
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	ldr		r7, _0802b064
	add		r5, r4, r0
	mov		r6, #0x3
_0802b02e:
	ldrh	r1, [r5, #0x0]
	cmp		r1, #0x0
	beq		_0802b048
	add		r0, r4, #0x0
	add		r0, #0x80
	ldr		r0, [r0, #0x0]
	add		r0, r4, r0
	add		r0, r0, r1
	add		r1, r7, #0x0
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	bl		_DrawFrameRunAudio
_0802b048:
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r7, r7, r2
	add		r5, #0x2
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0802b02e
	b		_0802b076

_0802b058:	.4byte 0x08102bf8
_0802b05c:	.4byte 0x08258000
_0802b060:	.4byte 0x08258080
_0802b064:	.4byte 0x06008000

_0802b068:
	ldr		r1, _0802b08c
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	add		r0, r4, r0
	ldr		r1, _0802b090
	bl		_CallHardwareLZ77DecompressToMemory16Bit
_0802b076:
	bl		_DrawFrameRunAudio
	ldr		r0, _0802b094
	ldr		r1, _0802b098
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802b08c:	.4byte 0x08258080
_0802b090:	.4byte 0x06008000
_0802b094:	.4byte 0x08092540
_0802b098:	.4byte 0x0600B800
	thumb_func_end sub_0802af68

	thumb_func_start sub_0802b09c
sub_0802b09c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r2, #0x0
	add		r0, r7, #0x0
	add		r0, #0xec
	ldrb	r2, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_0802b114
	add		r0, r7, #0x0
	add		r0, #0xe4
	ldr		r2, [r0, #0x0]
	mov		r8, r0
	mov		r0, #0xe8
	add		r0, r0, r7
	mov		r9, r0
	cmp		r2, #0x0
	beq		_0802b198
	ldrb	r1, [r7, #0x3]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802b104
	ldr		r6, _0802b100
	add		r4, r7, r2
	mov		r5, #0x1
_0802b0d8:
	ldrh	r1, [r4, #0x0]
	cmp		r1, #0x0
	beq		_0802b0f0
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	add		r0, r7, r0
	add		r0, r0, r1
	add		r1, r6, #0x0
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	bl		_DrawFrameRunAudio
_0802b0f0:
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	add		r6, r6, r0
	add		r4, #0x2
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_0802b0d8
	b		_0802b198

_0802b100:	.4byte 0x06010000

_0802b104:
	add		r0, r7, r2
	ldr		r1, _0802b110
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	b		_0802b198

.incbin "base.gba", 0x2B10E, 0x2

_0802b110:	.4byte 0x06010000

_0802b114:
	add		r0, r2, r1
	lsl		r0, r0, #0x18
	ldr		r1, _0802b174
	lsr		r0, r0, #0x16
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, _0802b178
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	add		r5, r2, r1
	ldrb	r1, [r5, #0x3]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802b184
	ldr		r1, _0802b17c
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	mov		r2, #0xe8
	add		r2, r2, r7
	mov		r9, r2
	ldr		r1, _0802b180
	mov		r8, r1
	add		r4, r5, r0
	mov		r6, #0x1
_0802b14a:
	ldrh	r1, [r4, #0x0]
	cmp		r1, #0x0
	beq		_0802b164
	add		r0, r5, #0x0
	add		r0, #0xe4
	ldr		r0, [r0, #0x0]
	add		r0, r5, r0
	add		r0, r0, r1
	mov		r1, r8
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	bl		_DrawFrameRunAudio
_0802b164:
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r8, r2
	add		r4, #0x2
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0802b14a
	b		_0802b198

_0802b174:	.4byte 0x08102bf8
_0802b178:	.4byte 0x08258000
_0802b17c:	.4byte 0x082580e4
_0802b180:	.4byte 0x06010000

_0802b184:
	ldr		r1, _0802b1c0
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	add		r0, r5, r0
	ldr		r1, _0802b1c4
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	mov		r2, #0xe8
	add		r2, r2, r7
	mov		r9, r2
_0802b198:
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0802b1b2
	add		r4, r7, r0
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x18
	bl		_CallHardwareSetCpuFast
_0802b1b2:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2B1BE, 0x2

_0802b1c0:	.4byte 0x082580e4
_0802b1c4:	.4byte 0x06010000
	thumb_func_end sub_0802b09c

	thumb_func_start sub_0802b1c8
sub_0802b1c8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _0802b1e8
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x8]
	sub		r0, #0x1
	cmp		r0, #0x32
	bls		_0802b1de
	b		_0802b480
_0802b1de:
	lsl		r0, r0, #0x2
	ldr		r1, _0802b1ec
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0802b1e8:	.4byte 0x08102bf8
_0802b1ec:	.4byte 0x0802b1f0
_0802b1f0:	.4byte 0x0802b474

.incbin "base.gba", 0x2B1F4, 0xC8
	thumb_func_end sub_0802b1c8


.incbin "base.gba", 0x2B2BC, 0x1C4

_0802b480:

.incbin "base.gba", 0x2B480, 0x10
	thumb_func_start sub_0802b490
sub_0802b490:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	ldr		r1, _0802b5b0
	lsl		r0, r7, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, _0802b5b4
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r6, r0, r1
	mov		r0, #0x0
	str		r0, [r5, #0x0]
	mov		r2, #0x0
	mov		r1, #0xf
	ldr		r3, _0802b5b8
	add		r0, r5, r3
_0802b4bc:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0802b4bc
	mov		r1, #0xaf
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	mov		r3, r8
	str		r3, [r0, #0x0]
	sub		r1, #0x4
	add		r0, r5, r1
	str		r6, [r0, #0x0]
	ldr		r2, _0802b5bc
	ldr		r3, _0802b5c0
	add		r1, r3, #0x0
	mov		r0, #0xc0
	lsl		r0, r0, #0x8
	orr		r0, r1
	strh	r0, [r2, #0x0]
	bl		_DrawFrameRunAudio
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	add		r2, r6, #0x0
	bl		sub_0802af68
	add		r0, r6, #0x0
	add		r0, #0x84
	ldr		r4, [r0, #0x0]
	add		r4, r6, r4
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x18
	bl		_CallHardwareSetCpuFast
	ldr		r4, _0802b5c4
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x60
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	bl		_DrawFrameRunAudio
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	add		r2, r6, #0x0
	bl		sub_0802b09c
	add		r0, r5, #0x0
	bl		sub_0802c4bc
	bl		_DrawFrameRunAudio
	add		r0, r5, #0x0
	add		r0, #0xa4
	add		r1, r6, #0x0
	bl		sub_0802c970
	bl		_DrawFrameRunAudio
	add		r0, r6, #0x0
	add		r0, #0xf0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0802b554
	add		r0, r5, #0x0
	bl		sub_0802bf28
_0802b554:
	bl		_DrawFrameRunAudio
	add		r0, r6, #0x0
	add		r0, #0xca
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0802b56e
	add		r0, r5, #0x0
	bl		sub_0802c880
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	str		r0, [r5, #0x20]
_0802b56e:
	add		r0, r5, #0x0
	bl		sub_0802ba9c
	add		r0, r6, #0x0
	add		r0, #0xc0
	ldrh	r0, [r0, #0x0]
	str		r0, [r5, #0x4]
	bl		_DrawFrameRunAudio
	mov		r0, r8
	bl		sub_0802d7f8
	bl		_DrawFrameRunAudio
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	bl		sub_0802b1c8
	ldr		r0, _0802b5b0
	lsl		r1, r7, #0x2
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0xc]
	sub		r0, #0x2
	add		r5, r1, #0x0
	cmp		r0, #0x21
	bls		_0802b5a6
	b		_0802b6a4
_0802b5a6:
	lsl		r0, r0, #0x2
	ldr		r1, _0802b5c8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0802b5b0:	.4byte 0x08102bf8
_0802b5b4:	.4byte 0x08258000
_0802b5b8:	.4byte 0x00000554
_0802b5bc:	.4byte BG2Control
_0802b5c0:	.4byte 0x00003889
_0802b5c4:	.4byte 0x0809270c
_0802b5c8:	.4byte 0x0802b5cc
_0802b5cc:	.4byte 0x0802b65c

.incbin "base.gba", 0x2B5D0, 0x84
	thumb_func_end sub_0802b490


.incbin "base.gba", 0x2B654, 0x50

_0802b6a4:

.incbin "base.gba", 0x2B6A4, 0x1A
_0802b6be:

.incbin "base.gba", 0x2B6BE, 0xC
_0802b6ca:

.incbin "base.gba", 0x2B6CA, 0xA
_0802b6d4:	.4byte 0x08102bf8
_0802b6d8:	.4byte 0x08084868
_0802b6dc:	.4byte 0x06013F60
_0802b6e0:	.4byte 0x80000040
_0802b6e4:	.4byte 0x0802b6e8
_0802b6e8:	.4byte 0x0802b7b0

.incbin "base.gba", 0x2B6EC, 0x20A

_0802b8f6:

.incbin "base.gba", 0x2B8F6, 0x1A
_0802b910:	.4byte 0x0810c744
	thumb_func_start sub_0802b914
sub_0802b914:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	add		r5, r2, #0x0
	lsl		r1, r1, #0x10
	lsr		r4, r1, #0x10
	ldr		r0, _0802b9b8
	mov		r1, #0xff
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_0802b94a
	ldr		r1, _0802b9bc
	add		r0, r3, r1
	ldr		r2, [r0, #0x0]
	cmp		r2, #0x0
	beq		_0802b94a
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	ldr		r1, _0802b9c0
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	bl		sub_0807d7d8
_0802b94a:
	ldr		r2, _0802b9b8
	ldr		r0, _0802b9c4
	add		r2, r2, r0
	mov		r3, #0x80
	lsl		r3, r3, #0x13
	ldrh	r1, [r3, #0x0]
	ldr		r0, _0802b9c8
	and		r0, r1
	ldrh	r1, [r2, #0x0]
	orr		r0, r1
	strh	r0, [r3, #0x0]
	ldr		r1, _0802b9cc
	ldr		r0, [r2, #0x4]
	str		r0, [r1, #0x0]
	sub		r1, #0x46
	ldrh	r0, [r2, #0x8]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0xa]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0xc]
	strh	r0, [r1, #0x0]
	add		r1, #0x6
	ldrh	r0, [r2, #0xe]
	strh	r0, [r1, #0x0]
	add		r3, #0x16
	ldr		r4, _0802b9c0
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	ldrh	r0, [r2, #0x10]
	sub		r0, r0, r1
	strh	r0, [r3, #0x0]
	ldr		r1, _0802b9d0
	ldrh	r0, [r2, #0x12]
	strh	r0, [r1, #0x0]
	add		r3, #0x4
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	ldrh	r0, [r2, #0x14]
	sub		r0, r0, r1
	strh	r0, [r3, #0x0]
	ldr		r1, _0802b9d4
	ldrh	r0, [r2, #0x16]
	strh	r0, [r1, #0x0]
	add		r3, #0x4
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	ldrh	r0, [r2, #0x18]
	sub		r0, r0, r1
	strh	r0, [r3, #0x0]
	strb	r5, [r4, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0802b9b8:	.4byte RunGameLogic_CallBack
_0802b9bc:	.4byte 0x00000514
_0802b9c0:	.4byte 0x03002198
_0802b9c4:	.4byte 0x0000057C
_0802b9c8:	.4byte 0x00007040
_0802b9cc:	.4byte ColorSpecialEffectsSElection
_0802b9d0:	.4byte BG2X_Offset
_0802b9d4:	.4byte BG3X_Offset
	thumb_func_end sub_0802b914

	thumb_func_start sub_0802b9d8
sub_0802b9d8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	ldr		r1, _0802ba10
	add		r0, r6, r1
	ldr		r7, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x98
	ldr		r0, [r0, #0x0]
	mov		r4, #0x0
	cmp		r0, #0x0
	beq		_0802b9f4
	add		r4, r7, r0
_0802b9f4:
	cmp		r4, #0x0
	beq		_0802ba90
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0802ba90
	ldr		r3, _0802ba14
	mov		r8, r3
_0802ba02:
	add		r0, #0x7f
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	cmp		r5, #0x7
	bls		_0802ba18
	add		r4, #0x4
	b		_0802ba8a

_0802ba10:	.4byte 0x00000574
_0802ba14:	.4byte 0x030039A1

_0802ba18:
	add		r4, #0x1
	mov		r1, r8
	ldrb	r0, [r1, #0x0]
	bl		sub_0802c6c8
	cmp		r0, #0x0
	beq		_0802ba34
	lsl		r2, r5, #0x4
	add		r1, r6, #0x0
	add		r1, #0x24
	add		r1, r1, r2
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x13
	b		_0802ba46
_0802ba34:
	lsl		r2, r5, #0x4
	add		r1, r6, #0x0
	add		r1, #0x24
	add		r1, r1, r2
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x13
	mov		r3, #0x80
	lsl		r3, r3, #0xb
	add		r0, r0, r3
_0802ba46:
	str		r0, [r1, #0x0]
	add		r4, #0x1
	add		r1, r6, #0x0
	add		r1, #0x28
	add		r1, r1, r2
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x13
	mov		r3, #0x80
	lsl		r3, r3, #0xb
	add		r0, r0, r3
	str		r0, [r1, #0x0]
	add		r4, #0x1
	add		r0, r7, #0x0
	add		r0, #0xca
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0802ba80
	add		r1, r6, #0x0
	add		r1, #0x2c
	add		r1, r1, r2
	ldr		r2, _0802ba7c
	lsl		r0, r5, #0x1
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	b		_0802ba88

.incbin "base.gba", 0x2BA7A, 0x2

_0802ba7c:	.4byte 0x08102068

_0802ba80:
	add		r0, r6, #0x0
	add		r0, #0x2c
	add		r0, r0, r2
	str		r1, [r0, #0x0]
_0802ba88:
	add		r4, #0x1
_0802ba8a:
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0802ba02
_0802ba90:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2BA9A, 0x2
	thumb_func_end sub_0802b9d8

	thumb_func_start sub_0802ba9c
sub_0802ba9c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x24
	add		r7, r0, #0x0
	ldr		r0, _0802bad4
	add		r3, r0, #0x0
	add		r3, #0x24
	ldr		r1, _0802bad8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	beq		_0802baf6
	cmp		r1, r0
	bgt		_0802badc
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_0802baee
	b		_0802bd0a

.incbin "base.gba", 0x2BAD2, 0x2

_0802bad4:	.4byte RunGameLogic_CallBack
_0802bad8:	.4byte 0x000007FE

_0802badc:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_0802bb7a
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_0802baee
	b		_0802bd0a
_0802baee:
	add		r0, r7, #0x0
	bl		sub_0802b9d8
	b		_0802bd0a
_0802baf6:
	mov		r2, sp
	ldr		r3, _0802bb14
	add		r0, r7, r3
	ldr		r3, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x98
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_0802bb0c
	add		r1, r3, r0
_0802bb0c:
	cmp		r1, #0x0
	beq		_0802bb60
	b		_0802bb5a

.incbin "base.gba", 0x2BB12, 0x2

_0802bb14:	.4byte 0x00000574

_0802bb18:
	cmp		r0, #0x89
	bne		_0802bb38
	add		r1, #0x1
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x13
	mov		r3, #0x80
	lsl		r3, r3, #0xb
	add		r0, r0, r3
	str		r0, [r2, #0x0]
	add		r1, #0x1
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x13
	add		r0, r0, r3
	str		r0, [r2, #0x4]
	add		r1, #0x2
	b		_0802bb5a
_0802bb38:
	cmp		r0, #0x8a
	bne		_0802bb58
	add		r1, #0x1
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x13
	mov		r3, #0x80
	lsl		r3, r3, #0xb
	add		r0, r0, r3
	str		r0, [r2, #0x8]
	add		r1, #0x1
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x13
	add		r0, r0, r3
	str		r0, [r2, #0xC]
	add		r1, #0x2
	b		_0802bb5a
_0802bb58:
	add		r1, #0x4
_0802bb5a:
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0802bb18
_0802bb60:
	ldr		r0, [sp, #0x0]
	ldr		r1, [sp, #0x8]
	add		r0, r0, r1
	asr		r0, r0, #0x1
	str		r0, [r7, #0x24]
	ldr		r0, [sp, #0x4]
	ldr		r1, [sp, #0xC]
	add		r0, r0, r1
	asr		r0, r0, #0x1
	str		r0, [r7, #0x28]
	mov		r0, #0x0
	str		r0, [r7, #0x2c]
	b		_0802bd0a
_0802bb7a:
	ldr		r1, _0802bb9c
	add		r0, r7, r1
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x98
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_0802bb8e
	add		r1, r2, r0
_0802bb8e:
	add		r2, r7, #0x0
	add		r2, #0x2c
	str		r2, [sp, #0x20]
	cmp		r1, #0x0
	beq		_0802bbe8
	b		_0802bbe2

.incbin "base.gba", 0x2BB9A, 0x2

_0802bb9c:	.4byte 0x00000574

_0802bba0:
	cmp		r0, #0x89
	bne		_0802bbc0
	add		r1, #0x1
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x13
	mov		r2, #0x80
	lsl		r2, r2, #0xb
	add		r0, r0, r2
	str		r0, [sp, #0x10]
	add		r1, #0x1
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x13
	add		r0, r0, r2
	str		r0, [sp, #0x14]
	add		r1, #0x2
	b		_0802bbe2
_0802bbc0:
	cmp		r0, #0x8a
	bne		_0802bbe0
	add		r1, #0x1
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x13
	mov		r2, #0x80
	lsl		r2, r2, #0xb
	add		r0, r0, r2
	str		r0, [sp, #0x18]
	add		r1, #0x1
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x13
	add		r0, r0, r2
	str		r0, [sp, #0x1C]
	add		r1, #0x2
	b		_0802bbe2
_0802bbe0:
	add		r1, #0x4
_0802bbe2:
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0802bba0
_0802bbe8:
	ldr		r1, _0802bbfc
	add		r0, r3, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	beq		_0802bc68
	cmp		r0, #0x3
	bgt		_0802bc00
	cmp		r0, #0x2
	beq		_0802bc06
	b		_0802bcfa

_0802bbfc:	.4byte 0x000007D7

_0802bc00:
	cmp		r0, #0x4
	beq		_0802bc94
	b		_0802bcfa
_0802bc06:
	add		r6, sp, #0x10
	ldr		r4, [sp, #0x10]
	lsl		r0, r4, #0x1
	ldr		r2, [r6, #0x8]
	mov		r10, r2
	add		r0, r10
	mov		r1, #0x3
	bl		sub_0807d80c
	mov		r9, r0
	str		r0, [r7, #0x24]
	ldr		r5, [r6, #0x4]
	lsl		r0, r5, #0x1
	ldr		r6, [r6, #0xC]
	mov		r8, r6
	add		r0, r8
	mov		r1, #0x3
	bl		sub_0807d80c
	add		r6, r0, #0x0
	str		r6, [r7, #0x28]
	add		r4, r10
	add		r4, r10
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_0807d80c
	add		r4, r0, #0x0
	str		r4, [r7, #0x34]
	add		r5, r8
	add		r5, r8
	add		r0, r5, #0x0
	mov		r1, #0x3
	bl		sub_0807d80c
	ldr		r1, _0802bc64
	mov		r3, r9
	and		r3, r1
	str		r3, [r7, #0x24]
	and		r6, r1
	str		r6, [r7, #0x28]
	and		r4, r1
	str		r4, [r7, #0x34]
	and		r0, r1
	str		r0, [r7, #0x38]
	b		_0802bcfa

.incbin "base.gba", 0x2BC62, 0x2

_0802bc64:	.4byte 0xffff0000

_0802bc68:
	add		r2, sp, #0x10
	ldr		r0, [sp, #0x10]
	str		r0, [r7, #0x24]
	ldr		r1, [r2, #0x4]
	str		r1, [r7, #0x28]
	ldr		r3, [r2, #0x8]
	add		r0, r0, r3
	asr		r0, r0, #0x1
	ldr		r2, [r2, #0xC]
	add		r1, r1, r2
	asr		r1, r1, #0x1
	str		r3, [r7, #0x44]
	str		r2, [r7, #0x48]
	ldr		r2, _0802bc90
	and		r0, r2
	str		r0, [r7, #0x34]
	and		r1, r2
	str		r1, [r7, #0x38]
	b		_0802bcfa

.incbin "base.gba", 0x2BC8E, 0x2

_0802bc90:	.4byte 0xffff0000

_0802bc94:
	add		r6, sp, #0x10
	ldr		r4, [sp, #0x10]
	str		r4, [r7, #0x24]
	ldr		r5, [r6, #0x4]
	str		r5, [r7, #0x28]
	lsl		r0, r4, #0x1
	ldr		r1, [r6, #0x8]
	mov		r10, r1
	add		r0, r10
	mov		r1, #0x3
	bl		sub_0807d80c
	mov		r8, r0
	str		r0, [r7, #0x34]
	lsl		r0, r5, #0x1
	ldr		r6, [r6, #0xC]
	mov		r9, r6
	add		r0, r9
	mov		r1, #0x3
	bl		sub_0807d80c
	add		r6, r0, #0x0
	str		r6, [r7, #0x38]
	add		r4, r10
	add		r4, r10
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_0807d80c
	add		r4, r0, #0x0
	str		r4, [r7, #0x44]
	add		r5, r9
	add		r5, r9
	add		r0, r5, #0x0
	mov		r1, #0x3
	bl		sub_0807d80c
	mov		r2, r10
	str		r2, [r7, #0x54]
	mov		r3, r9
	str		r3, [r7, #0x58]
	ldr		r1, _0802bd1c
	mov		r2, r8
	and		r2, r1
	str		r2, [r7, #0x34]
	and		r6, r1
	str		r6, [r7, #0x38]
	and		r4, r1
	str		r4, [r7, #0x44]
	and		r0, r1
	str		r0, [r7, #0x48]
_0802bcfa:
	ldr		r1, [sp, #0x20]
	mov		r2, #0x0
	add		r0, r1, #0x0
	add		r0, #0x30
_0802bd02:
	str		r2, [r0, #0x0]
	sub		r0, #0x10
	cmp		r0, r1
	bge		_0802bd02
_0802bd0a:
	add		sp, #0x24
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2BD1A, 0x2

_0802bd1c:	.4byte 0xffff0000
	thumb_func_end sub_0802ba9c

	thumb_func_start sub_0802bd20
sub_0802bd20:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	mov		r12, r0
	add		r4, r1, #0x0
	mov		r9, r2
	ldrb	r1, [r4, #0x1]
	ldrb	r0, [r4, #0x2]
	lsl		r0, r0, #0x8
	add		r7, r1, r0
	ldrb	r1, [r4, #0x3]
	ldrb	r0, [r4, #0x4]
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	mov		r8, r1
	cmp		r3, #0x0
	beq		_0802bd52
	mov		r1, r12
	ldrb	r0, [r1, #0x0]
	sub		r0, #0x1
	cmp		r3, r0
	bne		_0802bd5c
_0802bd52:
	add		r0, r3, #0x0
	sub		r0, #0x80
	mov		r6, r12
	strb	r0, [r6, #0x3]
	b		_0802bd60
_0802bd5c:
	mov		r0, r12
	strb	r3, [r0, #0x3]
_0802bd60:
	mov		r1, r12
	ldrb	r5, [r1, #0x1]
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x4
	bls		_0802bd6c
	b		_0802bf16
_0802bd6c:
	lsl		r0, r0, #0x2
	ldr		r1, _0802bd78
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x2BD76, 0x2

_0802bd78:	.4byte 0x0802bd7c
_0802bd7c:	.4byte 0x0802bd90

.incbin "base.gba", 0x2BD80, 0x10
	thumb_func_end sub_0802bd20


.incbin "base.gba", 0x2BD90, 0x186

_0802bf16:

.incbin "base.gba", 0x2BF16, 0x12
	thumb_func_start sub_0802bf28
sub_0802bf28:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0xc
	add		r1, r0, #0x0
	add		r1, #0xbc
	ldr		r3, [r1, #0x2c]
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	ldr		r7, _0802bfa0
	ldr		r1, _0802bfa4
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	add		r5, sp, #0x4
	add		r0, r1, #0x0
	add		r0, #0xcc
	ldr		r0, [r0, #0x0]
	add		r1, r1, r0
	ldrb	r2, [r1, #0x1]
	add		r2, r1, r2
	ldrb	r0, [r1, #0x2]
	lsl		r0, r0, #0x8
	add		r6, r2, r0
	strb	r3, [r5, #0x1]
	strb	r3, [r5, #0x2]
	ldrb	r0, [r1, #0x0]
	strb	r0, [r5, #0x0]
	ldr		r1, _0802bfa8
	ldrb	r0, [r5, #0x0]
	strh	r0, [r1, #0x38]
	ldr		r0, _0802bfac
	str		r0, [sp, #0x0]
	mov		r0, sp
	add		r1, r7, #0x0
	ldr		r2, _0802bfb0
	bl		_CallHardwareSetCpuFast
	mov		r4, #0x0
	ldrb	r0, [r5, #0x0]
	cmp		r4, r0
	bge		_0802bf98
_0802bf76:
	mov		r0, #0x1f
	and		r0, r4
	cmp		r0, #0x1f
	bne		_0802bf82
	bl		_DrawFrameRunAudio
_0802bf82:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	add		r2, r7, #0x0
	add		r3, r4, #0x0
	bl		sub_0802bd20
	add		r6, #0xc
	add		r4, #0x1
	ldrb	r1, [r5, #0x0]
	cmp		r4, r1
	blt		_0802bf76
_0802bf98:
	add		sp, #0xc
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802bfa0:	.4byte 0x02025400
_0802bfa4:	.4byte 0x00000574
_0802bfa8:	.4byte RunGameLogic_CallBack
_0802bfac:	.4byte 0x7F7F7F7F
_0802bfb0:	.4byte 0x01001000
	thumb_func_end sub_0802bf28

	thumb_func_start sub_0802bfb4
sub_0802bfb4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x30
	str		r1, [sp, #0xc]
	lsl		r0, r0, #0x18
	ldr		r1, _0802c230
	lsr		r0, r0, #0x16
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, _0802c234
	add		r0, r0, r1
	ldr		r6, [r0, #0x0]
	add		r1, r1, r6
	mov		r9, r1
	ldr		r5, [sp, #0xc]
	str		r5, [sp, #0x10]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	mov		r10, r0
	mov		r0, r9
	add		r1, r5, #0x0
	mov		r2, #0x40
	bl		_CallHardwareSetCpuFast
	add		r5, r10
	ldr		r1, _0802c238
	add		r1, r1, r6
	mov		r8, r1
	ldr		r1, [r1, #0x0]
	ldr		r2, _0802c23c
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	mov		r2, r9
	add		r3, r2, r0
	sub		r4, r1, r0
	add		r10, r4
	add		r2, r4, #0x0
	cmp		r4, #0x0
	bge		_0802c00e
	add		r2, r4, #0x3
_0802c00e:
	asr		r2, r2, #0x2
	ldr		r0, _0802c240
	and		r2, r0
	add		r0, r3, #0x0
	add		r1, r5, #0x0
	bl		_CallHardwareSetCpuFast
	add		r5, r5, r4
	ldr		r1, _0802c244
	add		r7, r6, r1
	ldr		r1, [r7, #0x0]
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	mov		r2, r9
	add		r3, r2, r0
	sub		r4, r1, r0
	add		r10, r4
	add		r2, r4, #0x0
	cmp		r4, #0x0
	bge		_0802c038
	add		r2, r4, #0x3
_0802c038:
	asr		r2, r2, #0x2
	ldr		r0, _0802c240
	and		r2, r0
	add		r0, r3, #0x0
	add		r1, r5, #0x0
	bl		_CallHardwareSetCpuFast
	add		r5, r5, r4
	ldr		r1, _0802c248
	add		r1, r1, r6
	mov		r8, r1
	ldr		r1, [r1, #0x0]
	ldr		r0, [r7, #0x0]
	mov		r2, r9
	add		r3, r2, r0
	sub		r4, r1, r0
	add		r10, r4
	add		r2, r4, #0x0
	cmp		r4, #0x0
	bge		_0802c062
	add		r2, r4, #0x3
_0802c062:
	asr		r2, r2, #0x2
	ldr		r0, _0802c240
	and		r2, r0
	add		r0, r3, #0x0
	add		r1, r5, #0x0
	bl		_CallHardwareSetCpuFast
	add		r5, r5, r4
	ldr		r1, _0802c24c
	add		r1, r6, r1
	str		r1, [sp, #0x14]
	ldr		r1, [r1, #0x0]
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	mov		r2, r9
	add		r3, r2, r0
	sub		r4, r1, r0
	add		r10, r4
	add		r2, r4, #0x0
	cmp		r4, #0x0
	bge		_0802c08e
	add		r2, r4, #0x3
_0802c08e:
	asr		r2, r2, #0x2
	ldr		r0, _0802c240
	and		r2, r0
	add		r0, r3, #0x0
	add		r1, r5, #0x0
	bl		_CallHardwareSetCpuFast
	add		r5, r5, r4
	ldr		r1, _0802c250
	add		r7, r6, r1
	ldr		r1, [r7, #0x0]
	ldr		r2, [sp, #0x14]
	ldr		r0, [r2, #0x0]
	mov		r2, r9
	add		r3, r2, r0
	sub		r4, r1, r0
	add		r10, r4
	add		r2, r4, #0x0
	cmp		r4, #0x0
	bge		_0802c0b8
	add		r2, r4, #0x3
_0802c0b8:
	asr		r2, r2, #0x2
	ldr		r0, _0802c240
	and		r2, r0
	add		r0, r3, #0x0
	add		r1, r5, #0x0
	bl		_CallHardwareSetCpuFast
	add		r5, r5, r4
	ldr		r1, [sp, #0xc]
	add		r1, #0x8c
	mov		r8, r1
	ldr		r0, [r7, #0x0]
	str		r0, [r1, #0x0]
	ldr		r2, _0802c254
	add		r2, r6, r2
	str		r2, [sp, #0x18]
	ldr		r1, _0802c258
	add		r0, r6, r1
	ldr		r1, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	sub		r4, r1, r0
	add		r10, r4
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_0802c0ee
	mov		r2, r9
	add		r1, r2, r0
_0802c0ee:
	add		r2, r4, #0x0
	cmp		r4, #0x0
	bge		_0802c0f6
	add		r2, r4, #0x3
_0802c0f6:
	asr		r2, r2, #0x2
	ldr		r0, _0802c240
	and		r2, r0
	add		r0, r1, #0x0
	add		r1, r5, #0x0
	bl		_CallHardwareSetCpuFast
	add		r5, r5, r4
	ldr		r7, [sp, #0xc]
	add		r7, #0x94
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	add		r0, r0, r4
	str		r0, [r7, #0x0]
	ldr		r2, _0802c25c
	add		r6, r6, r2
	ldr		r0, [r6, #0x0]
	ldr		r2, [sp, #0x18]
	ldr		r1, [r2, #0x0]
	sub		r4, r0, r1
	add		r10, r4
	mov		r0, #0x0
	cmp		r1, #0x0
	beq		_0802c12a
	mov		r2, r9
	add		r0, r2, r1
_0802c12a:
	add		r2, r4, #0x0
	cmp		r4, #0x0
	bge		_0802c132
	add		r2, r4, #0x3
_0802c132:
	asr		r2, r2, #0x2
	ldr		r1, _0802c240
	and		r2, r1
	add		r1, r5, #0x0
	bl		_CallHardwareSetCpuFast
	add		r5, r5, r4
	ldr		r1, [sp, #0xc]
	add		r1, #0x98
	ldr		r0, [r7, #0x0]
	add		r0, r0, r4
	str		r0, [r1, #0x0]
	mov		r4, #0x80
	add		r10, r4
	ldr		r0, [r6, #0x0]
	mov		r3, #0x0
	add		r6, r1, #0x0
	cmp		r0, #0x0
	beq		_0802c15c
	mov		r2, r9
	add		r3, r2, r0
_0802c15c:
	mov		r2, #0x20
	add		r0, r3, #0x0
	add		r1, r5, #0x0
	bl		_CallHardwareSetCpuFast
	add		r5, r5, r4
	ldr		r0, [sp, #0x10]
	add		r0, #0xcc
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	ldr		r0, [sp, #0x10]
	add		r0, #0xd8
	str		r1, [r0, #0x0]
	ldr		r0, [sp, #0x10]
	add		r0, #0xf0
	str		r0, [sp, #0x1c]
	ldr		r0, [r6, #0x0]
	add		r0, r0, r4
	ldr		r1, [sp, #0x1c]
	str		r0, [r1, #0x0]
	mov		r3, #0x40
	add		r7, sp, #0x4
	mov		r4, r9
	add		r4, #0xcc
	ldr		r2, [r4, #0x0]
	add		r2, r9
	ldrb	r1, [r2, #0x1]
	add		r1, r2, r1
	ldrb	r0, [r2, #0x2]
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	mov		r8, r1
	strb	r3, [r7, #0x1]
	strb	r3, [r7, #0x2]
	ldrb	r0, [r2, #0x0]
	strb	r0, [r7, #0x0]
	ldr		r1, _0802c260
	ldrb	r0, [r7, #0x0]
	strh	r0, [r1, #0x38]
	ldr		r0, _0802c264
	str		r0, [sp, #0x0]
	mov		r0, sp
	ldr		r1, _0802c268
	ldr		r2, _0802c26c
	bl		_CallHardwareSetCpuFast
	mov		r6, #0x0
	ldr		r2, [sp, #0x1c]
	str		r2, [sp, #0x24]
	str		r4, [sp, #0x20]
	ldr		r4, [sp, #0x10]
	add		r4, #0xc2
	ldr		r0, [sp, #0x10]
	add		r0, #0xf4
	str		r0, [sp, #0x28]
	mov		r1, r9
	add		r1, #0x8c
	str		r1, [sp, #0x2c]
	ldrb	r2, [r7, #0x0]
	cmp		r6, r2
	bge		_0802c1ee
_0802c1d6:
	add		r0, r7, #0x0
	mov		r1, r8
	ldr		r2, _0802c268
	add		r3, r6, #0x0
	bl		sub_0802bd20
	mov		r0, #0xc
	add		r8, r0
	add		r6, #0x1
	ldrb	r1, [r7, #0x0]
	cmp		r6, r1
	blt		_0802c1d6
_0802c1ee:
	ldr		r0, _0802c260
	ldrh	r0, [r0, #0x38]
	strh	r0, [r4, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0x5
	add		r10, r4
	ldr		r0, _0802c268
	asr		r2, r4, #0x2
	add		r1, r5, #0x0
	bl		_CallHardwareSetCpuFast
	add		r5, r5, r4
	ldr		r2, [sp, #0x24]
	ldr		r0, [r2, #0x0]
	add		r0, r0, r4
	ldr		r1, [sp, #0x28]
	str		r0, [r1, #0x0]
	ldr		r2, [sp, #0x20]
	ldr		r0, [r2, #0x0]
	add		r0, r9
	ldrb	r1, [r0, #0x3]
	add		r1, r0, r1
	ldrb	r0, [r0, #0x4]
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	ldr		r2, [sp, #0x2c]
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_0802c270
	add		r0, r9
	sub		r4, r0, r1
	b		_0802c272

.incbin "base.gba", 0x2C22E, 0x2

_0802c230:	.4byte 0x08102bf8
_0802c234:	.4byte 0x08258000
_0802c238:	.4byte 0x082580c4
_0802c23c:	.4byte 0x082580d4
_0802c240:	.4byte 0x001FFFFF
_0802c244:	.4byte 0x08258080
_0802c248:	.4byte 0x08258084
_0802c24c:	.4byte 0x08258088
_0802c250:	.4byte 0x082580CC
_0802c254:	.4byte 0x08258094
_0802c258:	.4byte 0x0825808c
_0802c25c:	.4byte 0x08258098
_0802c260:	.4byte RunGameLogic_CallBack
_0802c264:	.4byte 0x7F7F7F7F
_0802c268:	.4byte 0x02037900
_0802c26c:	.4byte 0x01000400

_0802c270:
	neg		r4, r1
_0802c272:
	add		r10, r4
	lsr		r2, r4, #0x1f
	add		r2, r4, r2
	lsl		r2, r2, #0xa
	lsr		r2, r2, #0xb
	add		r0, r1, #0x0
	add		r1, r5, #0x0
	bl		sub_08071b6c
	mov		r0, r10
	add		sp, #0x30
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2C296, 0x2
	thumb_func_end sub_0802bfb4

	thumb_func_start sub_0802c298
sub_0802c298:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	mov		r12, r3
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_0802c2b2
	add		r0, r4, #0x7
_0802c2b2:
	asr		r7, r0, #0x3
	add		r2, r5, #0x0
	cmp		r5, #0x0
	bge		_0802c2bc
	add		r2, r5, #0x7
_0802c2bc:
	asr		r2, r2, #0x3
	lsl		r1, r2, #0x1
	add		r6, #0xbc
	ldr		r0, [r6, #0x2c]
	mul		r0, r1
	ldr		r1, _0802c338
	add		r0, r0, r1
	add		r0, r0, r7
	mov		r8, r0
	mov		r3, #0x7f
	add		r0, r7, #0x0
	and		r0, r3
	ldr		r1, [r6, #0x14]
	add		r1, r1, r0
	and		r2, r3
	lsl		r2, r2, #0x7
	add		r2, r1, r2
	add		r0, r6, #0x0
	add		r3, r4, #0x0
	cmp		r4, #0x0
	bge		_0802c2e8
	add		r3, #0xf
_0802c2e8:
	asr		r1, r3, #0x4
	ldr		r3, [r0, #0x40]
	add		r0, r3, #0x0
	sub		r0, #0x20
	cmp		r1, r0
	blt		_0802c31a
	add		r0, r3, #0x0
	add		r0, #0x20
	cmp		r1, r0
	bgt		_0802c31a
	add		r0, r5, #0x0
	cmp		r5, #0x0
	bge		_0802c304
	add		r0, #0xf
_0802c304:
	asr		r4, r0, #0x4
	ldr		r3, [r6, #0x44]
	add		r0, r3, #0x0
	sub		r0, #0x20
	cmp		r4, r0
	blt		_0802c31a
	add		r0, r3, #0x0
	add		r0, #0x20
	mov		r3, #0x0
	cmp		r4, r0
	ble		_0802c31c
_0802c31a:
	mov		r3, #0x1
_0802c31c:
	cmp		r3, #0x0
	bne		_0802c34a
	mov		r3, #0x2
	neg		r3, r3
	and		r3, r2
	mov		r0, #0x1
	and		r2, r0
	cmp		r2, #0x0
	beq		_0802c33c
	ldrb	r0, [r3, #0x0]
	mov		r2, r12
	lsl		r1, r2, #0x8
	b		_0802c346

.incbin "base.gba", 0x2C336, 0x2

_0802c338:	.4byte 0x02010400

_0802c33c:
	ldrh	r1, [r3, #0x0]
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	and		r0, r1
	mov		r1, r12
_0802c346:
	orr		r0, r1
	strh	r0, [r3, #0x0]
_0802c34a:
	mov		r0, r12
	mov		r2, r8
	strb	r0, [r2, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2C35A, 0x2
	thumb_func_end sub_0802c298

	thumb_func_start sub_0802c35c
sub_0802c35c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r6, r0, #0x0
	mov		r8, r1
	mov		r9, r2
	lsl		r5, r3, #0x18
	lsr		r5, r5, #0x18
	mov		r3, #0x0
	bl		sub_0802c3d4
	add		r4, r0, #0x0
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0802c5d0
	lsl		r0, r0, #0x18
	lsr		r7, r0, #0x18
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0802c610
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	mov		r0, r8
	cmp		r0, #0x0
	bge		_0802c39e
	add		r0, #0x7
_0802c39e:
	asr		r0, r0, #0x3
	sub		r0, r7, r0
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r3, r0, #0x1
	mov		r2, r9
	cmp		r2, #0x0
	bge		_0802c3b0
	add		r2, #0x7
_0802c3b0:
	asr		r1, r2, #0x3
	sub		r1, r4, r1
	lsr		r0, r1, #0x1f
	add		r1, r1, r0
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r1, #0xf
	asr		r1, r1, #0x10
	bl		sub_080285ec
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0802c35c

	thumb_func_start sub_0802c3d4
sub_0802c3d4:
	cmp		r1, #0x0
	bge		_0802c3da
	add		r1, #0xf
_0802c3da:
	asr		r3, r1, #0x4
	cmp		r2, #0x0
	bge		_0802c3e2
	add		r2, #0xf
_0802c3e2:
	asr		r1, r2, #0x4
	ldr		r2, _0802c3fc
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x4]
	mul		r0, r1
	lsl		r0, r0, #0x6
	add		r0, r3, r0
	ldr		r1, _0802c400
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x2C3FA, 0x2

_0802c3fc:	.4byte 0x00000574
_0802c400:	.4byte 0x02025400
	thumb_func_end sub_0802c3d4

	thumb_func_start sub_0802c404
sub_0802c404:
	push	{ r4, lr }
	add		r3, r0, #0x0
	ldr		r2, [r1, #0x0]
	cmp		r2, #0x0
	bge		_0802c412
	ldr		r0, _0802c44c
	add		r2, r2, r0
_0802c412:
	asr		r2, r2, #0x10
	ldr		r1, [r1, #0x4]
	cmp		r1, #0x0
	bge		_0802c41e
	ldr		r4, _0802c44c
	add		r1, r1, r4
_0802c41e:
	asr		r1, r1, #0x10
	add		r0, r2, #0x0
	cmp		r0, #0x0
	bge		_0802c428
	add		r0, #0xf
_0802c428:
	asr		r2, r0, #0x4
	cmp		r1, #0x0
	bge		_0802c430
	add		r1, #0xf
_0802c430:
	asr		r1, r1, #0x4
	ldr		r4, _0802c450
	add		r0, r3, r4
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x4]
	mul		r0, r1
	lsl		r0, r0, #0x6
	add		r0, r2, r0
	ldr		r1, _0802c454
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0802c44c:	.4byte 0x0000FFFF
_0802c450:	.4byte 0x00000574
_0802c454:	.4byte 0x02025400

.incbin "base.gba", 0x2C458, 0x1C
	thumb_func_end sub_0802c404

	thumb_func_start sub_0802c474
sub_0802c474:
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	ldr		r2, _0802c48c
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	add		r2, r0, #0x0
	add		r2, #0x88
	ldr		r2, [r2, #0x0]
	add		r0, r0, r2
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	bx		lr

_0802c48c:	.4byte 0x00000574
	thumb_func_end sub_0802c474

	thumb_func_start sub_0802c490
sub_0802c490:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0802c7a0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	ldr		r1, _0802c4b4
	add		r4, r4, r1
	ldr		r1, [r4, #0x0]
	add		r2, r1, #0x0
	add		r2, #0x88
	ldr		r2, [r2, #0x0]
	add		r1, r1, r2
	add		r1, r1, r0
	ldrb	r0, [r1, #0x0]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0802c4b4:	.4byte 0x00000574
	thumb_func_end sub_0802c490

	thumb_func_start sub_0802c4b8
sub_0802c4b8:
	ldr		r0, [r0, #0x20]
	bx		lr
	thumb_func_end sub_0802c4b8

	thumb_func_start sub_0802c4bc
sub_0802c4bc:
	ldr		r2, _0802c4dc
	add		r1, r0, r2
	ldr		r2, [r1, #0x0]
	add		r0, #0xbc
	ldr		r1, [r2, #0x24]
	add		r1, r2, r1
	str		r1, [r0, #0x4]
	ldr		r1, [r2, #0x8]
	add		r1, r2, r1
	str		r1, [r0, #0xc]
	add		r1, r2, #0x0
	add		r1, #0xd4
	ldr		r1, [r1, #0x0]
	add		r2, r2, r1
	str		r2, [r0, #0x1c]
	bx		lr

_0802c4dc:	.4byte 0x00000574
	thumb_func_end sub_0802c4bc

	thumb_func_start sub_0802c4e0
sub_0802c4e0:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	mov		r8, r2
	lsl		r4, r3, #0x10
	lsr		r4, r4, #0x10
	add		r0, #0xbc
	mov		r2, #0x80
	lsl		r2, r2, #0x18
	add		r1, r2, #0x0
	bl		sub_0802d540
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, r8
	add		r3, r4, #0x0
	bl		sub_0802c518
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2C516, 0x2
	thumb_func_end sub_0802c4e0

	thumb_func_start sub_0802c518
sub_0802c518:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	cmp		r1, #0x0
	bge		_0802c528
	ldr		r0, _0802c550
	add		r1, r1, r0
_0802c528:
	asr		r1, r1, #0x13
	mov		r0, #0x2
	neg		r0, r0
	and		r1, r0
	cmp		r2, #0x0
	bge		_0802c538
	ldr		r5, _0802c550
	add		r2, r2, r5
_0802c538:
	asr		r2, r2, #0x13
	and		r2, r0
	add		r0, r4, #0x0
	add		r0, #0xbc
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	bl		sub_0802d31c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2C54E, 0x2

_0802c550:	.4byte 0x0007FFFF
	thumb_func_end sub_0802c518

	thumb_func_start sub_0802c554
sub_0802c554:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r1, _0802c574
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x90
	ldr		r0, [r0, #0x0]
	mov		r2, #0x0
	cmp		r0, #0x0
	beq		_0802c56c
	add		r2, r1, r0
_0802c56c:
	add		r4, r2, #0x0
	cmp		r4, #0x0
	beq		_0802c594
	b		_0802c58c

_0802c574:	.4byte 0x00000574

_0802c578:
	ldrb	r1, [r4, #0x0]
	add		r4, #0x1
	ldrb	r2, [r4, #0x0]
	add		r4, #0x2
	lsl		r1, r1, #0x3
	lsl		r2, r2, #0x3
	add		r0, r5, #0x0
	mov		r3, #0xc0
	bl		sub_0802c298
_0802c58c:
	ldrb	r0, [r4, #0x0]
	add		r4, #0x1
	cmp		r0, #0x0
	bne		_0802c578
_0802c594:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2C59A, 0x6
	thumb_func_end sub_0802c554

	thumb_func_start sub_0802c5a0
sub_0802c5a0:
	push	{ r4, lr }
	mov		r12, r0
	ldr		r4, [sp, #0x0+0x8]
	lsl		r1, r1, #0x4
	add		r0, #0x24
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r2, #0x0]
	mov		r0, r12
	add		r0, #0x28
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r3, #0x0]
	mov		r0, r12
	add		r0, #0x2c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2C5CA, 0x6
	thumb_func_end sub_0802c5a0

	thumb_func_start sub_0802c5d0
sub_0802c5d0:
	push	{ r4, lr }
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r4, #0x7f
	and		r4, r1
	ldr		r3, _0802c60c
	add		r1, r0, r3
	ldr		r1, [r1, #0x0]
	add		r3, r1, #0x0
	add		r3, #0xcc
	ldr		r3, [r3, #0x0]
	add		r1, r1, r3
	ldrb	r3, [r1, #0x3]
	add		r3, r1, r3
	ldrb	r1, [r1, #0x4]
	lsl		r1, r1, #0x8
	add		r3, r3, r1
	ldrh	r0, [r0, #0x14]
	mul		r0, r2
	add		r0, r0, r4
	lsl		r0, r0, #0x3
	add		r3, r3, r0
	ldrb	r0, [r3, #0x0]
	ldrb	r1, [r3, #0x1]
	lsl		r1, r1, #0x8
	add		r0, r0, r1
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2C60A, 0x2

_0802c60c:	.4byte 0x00000574
	thumb_func_end sub_0802c5d0

	thumb_func_start sub_0802c610
sub_0802c610:
	push	{ r4, lr }
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r4, #0x7f
	and		r4, r1
	ldr		r3, _0802c64c
	add		r1, r0, r3
	ldr		r1, [r1, #0x0]
	add		r3, r1, #0x0
	add		r3, #0xcc
	ldr		r3, [r3, #0x0]
	add		r1, r1, r3
	ldrb	r3, [r1, #0x3]
	add		r3, r1, r3
	ldrb	r1, [r1, #0x4]
	lsl		r1, r1, #0x8
	add		r3, r3, r1
	ldrh	r0, [r0, #0x14]
	mul		r0, r2
	add		r0, r0, r4
	lsl		r0, r0, #0x3
	add		r3, r3, r0
	ldrb	r0, [r3, #0x2]
	ldrb	r1, [r3, #0x3]
	lsl		r1, r1, #0x8
	add		r0, r0, r1
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2C64A, 0x2

_0802c64c:	.4byte 0x00000574
	thumb_func_end sub_0802c610

	thumb_func_start sub_0802c650
sub_0802c650:
	push	{ r4, lr }
	mov		r4, #0x7f
	and		r4, r1
	ldr		r2, _0802c688
	add		r1, r0, r2
	ldr		r1, [r1, #0x0]
	add		r2, r1, #0x0
	add		r2, #0xcc
	ldr		r2, [r2, #0x0]
	add		r1, r1, r2
	ldrb	r2, [r1, #0x3]
	add		r2, r1, r2
	ldrb	r1, [r1, #0x4]
	lsl		r1, r1, #0x8
	add		r2, r2, r1
	ldr		r1, _0802c68c
	ldrh	r3, [r0, #0x14]
	ldr		r0, _0802c690
	add		r1, r1, r0
	ldrb	r0, [r1, #0x0]
	mul		r0, r3
	add		r0, r0, r4
	lsl		r0, r0, #0x3
	add		r2, r2, r0
	ldrb	r0, [r2, #0x4]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0802c688:	.4byte 0x00000574
_0802c68c:	.4byte RunGameLogic_CallBack
_0802c690:	.4byte 0x00000C88
	push	{ r4, lr }
	lsl		r0, r0, #0x18
	ldr		r2, _0802c6c0
	lsr		r0, r0, #0x16
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x4]
	lsl		r0, r0, #0x2
	ldr		r2, _0802c6c4
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	add		r0, r0, r2
	mov		r4, #0xa0
	lsl		r4, r4, #0x6
	asr		r2, r4, #0x2
	bl		_CallHardwareSetCpuFast
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2C6BE, 0x2

_0802c6c0:	.4byte 0x08102bf8
_0802c6c4:	.4byte 0x08234000
	thumb_func_end sub_0802c650

	thumb_func_start sub_0802c6c8
sub_0802c6c8:
	lsr		r0, r0, #0x5
	mov		r1, #0x1
	and		r0, r1
	bx		lr
	thumb_func_end sub_0802c6c8

	thumb_func_start sub_0802c6d0
sub_0802c6d0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	cmp		r1, #0x0
	bge		_0802c6da
	add		r1, #0x7
_0802c6da:
	asr		r3, r1, #0x3
	cmp		r2, #0x0
	bge		_0802c6e2
	add		r2, #0x7
_0802c6e2:
	asr		r0, r2, #0x3
	lsl		r0, r0, #0x1
	add		r1, r4, #0x0
	add		r1, #0xbc
	ldr		r1, [r1, #0x2c]
	mul		r0, r1
	ldr		r1, _0802c6fc
	add		r0, r0, r1
	add		r0, r3, r0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2C6FA, 0x2

_0802c6fc:	.4byte 0x02010400
	thumb_func_end sub_0802c6d0

	thumb_func_start sub_0802c700
sub_0802c700:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r3, #0xbc
	cmp		r1, #0x0
	bge		_0802c70c
	add		r1, #0x7
_0802c70c:
	asr		r0, r1, #0x3
	mov		r4, #0x7f
	and		r0, r4
	ldr		r1, [r3, #0x14]
	add		r1, r1, r0
	cmp		r2, #0x0
	bge		_0802c71c
	add		r2, #0x7
_0802c71c:
	asr		r0, r2, #0x3
	and		r0, r4
	lsl		r0, r0, #0x7
	add		r0, r1, r0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2C72A, 0x2
	thumb_func_end sub_0802c700

	thumb_func_start sub_0802c72c
sub_0802c72c:
	mov		r1, #0xaf
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x10]
	bx		lr
	thumb_func_end sub_0802c72c

	thumb_func_start sub_0802c738
sub_0802c738:
	mov		r1, #0xaf
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x18]
	bx		lr
	thumb_func_end sub_0802c738

	thumb_func_start sub_0802c744
sub_0802c744:
	mov		r1, #0xaf
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x1c]
	bx		lr
	thumb_func_end sub_0802c744

	thumb_func_start sub_0802c750
sub_0802c750:
	cmp		r1, #0x0
	blt		_0802c76c
	add		r3, r0, #0x0
	add		r3, #0xbc
	ldr		r0, [r3, #0x2c]
	lsl		r0, r0, #0x14
	cmp		r1, r0
	bge		_0802c76c
	cmp		r2, #0x0
	blt		_0802c76c
	ldr		r0, [r3, #0x30]
	lsl		r0, r0, #0x14
	cmp		r2, r0
	blt		_0802c770
_0802c76c:
	mov		r0, #0x1
	b		_0802c772
_0802c770:
	mov		r0, #0x0
_0802c772:
	bx		lr
	thumb_func_end sub_0802c750

	thumb_func_start sub_0802c774
sub_0802c774:
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	ldrh	r0, [r0, #0x14]
	sub		r0, #0x1
	cmp		r1, r0
	beq		_0802c788
	add		r0, r1, #0x1
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	b		_0802c78a
_0802c788:
	mov		r0, #0x0
_0802c78a:
	bx		lr
	thumb_func_end sub_0802c774

	thumb_func_start sub_0802c78c
sub_0802c78c:
	add		r2, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r0, r1, #0x18
	cmp		r0, #0x0
	bne		_0802c798
	ldrb	r0, [r2, #0x14]
_0802c798:
	sub		r0, #0x1
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	bx		lr
	thumb_func_end sub_0802c78c

	thumb_func_start sub_0802c7a0
sub_0802c7a0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	cmp		r1, #0x0
	bge		_0802c7aa
	add		r1, #0x7
_0802c7aa:
	asr		r3, r1, #0x3
	cmp		r2, #0x0
	bge		_0802c7b2
	add		r2, #0x7
_0802c7b2:
	asr		r0, r2, #0x3
	lsl		r0, r0, #0x1
	add		r1, r4, #0x0
	add		r1, #0xbc
	ldr		r1, [r1, #0x2c]
	mul		r0, r1
	ldr		r1, _0802c7cc
	add		r0, r0, r1
	add		r0, r3, r0
	ldrb	r0, [r0, #0x0]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0802c7cc:	.4byte 0x02010400
	thumb_func_end sub_0802c7a0

	thumb_func_start sub_0802c7d0
sub_0802c7d0:
	ldr		r1, _0802c7e4
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r0, #0xca
	ldrb	r1, [r0, #0x0]
	neg		r0, r1
	orr		r0, r1
	lsr		r0, r0, #0x1f
	bx		lr

.incbin "base.gba", 0x2C7E2, 0x2

_0802c7e4:	.4byte 0x00000574

.incbin "base.gba", 0x2C7E8, 0x24
	thumb_func_end sub_0802c7d0

	thumb_func_start sub_0802c80c
sub_0802c80c:
	add		r2, r0, #0x0
	ldr		r0, _0802c834
	ldr		r1, _0802c838
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	lsr		r0, r0, #0x5
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_0802c840
	ldr		r1, _0802c83c
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	add		r0, #0xca
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0802c840
	mov		r0, #0x2
	b		_0802c842

.incbin "base.gba", 0x2C832, 0x2

_0802c834:	.4byte RunGameLogic_CallBack
_0802c838:	.4byte 0x00000801
_0802c83c:	.4byte 0x00000574

_0802c840:
	mov		r0, #0x1
_0802c842:
	bx		lr
	thumb_func_end sub_0802c80c

	thumb_func_start sub_0802c844
sub_0802c844:
	ldr		r1, _0802c858
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	add		r1, #0x84
	ldr		r1, [r1, #0x0]
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x2C856, 0x2

_0802c858:	.4byte 0x00000574

.incbin "base.gba", 0x2C85C, 0x24
	thumb_func_end sub_0802c844

	thumb_func_start sub_0802c880
sub_0802c880:
	ldr		r1, _0802c89c
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x98
	ldr		r0, [r0, #0x0]
	mov		r2, #0x0
	cmp		r0, #0x0
	beq		_0802c894
	add		r2, r1, r0
_0802c894:
	mov		r0, #0x0
	cmp		r2, #0x0
	beq		_0802c8b2
	b		_0802c8a2

_0802c89c:	.4byte 0x00000574

_0802c8a0:
	add		r2, #0x4
_0802c8a2:
	ldrb	r1, [r2, #0x0]
	cmp		r1, #0x0
	beq		_0802c8b2
	cmp		r1, #0x8b
	bne		_0802c8a0
	ldrb	r0, [r2, #0x2]
	lsl		r0, r0, #0x3
	add		r0, #0x8
_0802c8b2:
	bx		lr
	thumb_func_end sub_0802c880

	thumb_func_start sub_0802c8b4
sub_0802c8b4:
	push	{ lr }
	add		r2, r0, #0x0
	lsl		r0, r2, #0x3
	add		r2, r0, #0x0
	sub		r2, #0x8
	lsl		r0, r1, #0x3
	add		r1, r0, #0x0
	sub		r1, #0x8
	cmp		r2, #0x0
	bne		_0802c8dc
	cmp		r1, #0x0
	bne		_0802c8d0
	mov		r0, #0x80
	b		_0802c910
_0802c8d0:
	mvn		r0, r1
	asr		r1, r0, #0x1f
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r1, r0
	b		_0802c900
_0802c8dc:
	cmp		r1, #0x0
	bne		_0802c8f0
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	cmp		r2, #0x0
	bge		_0802c8ec
	mov		r0, #0xc0
	lsl		r0, r0, #0x8
_0802c8ec:
	add		r1, r0, #0x0
	b		_0802c900
_0802c8f0:
	lsl		r0, r2, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_08028738
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
_0802c900:
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0802c90a
	add		r0, #0xff
_0802c90a:
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
_0802c910:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2C914, 0x10
	thumb_func_end sub_0802c8b4

	thumb_func_start sub_0802c924
sub_0802c924:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r5, #0xbc
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0802c932
	add		r0, #0xf
_0802c932:
	asr		r4, r0, #0x4
	ldr		r3, [r5, #0x40]
	add		r0, r3, #0x0
	sub		r0, #0x20
	cmp		r4, r0
	blt		_0802c966
	add		r0, r3, #0x0
	add		r0, #0x20
	cmp		r4, r0
	bgt		_0802c966
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0802c94e
	add		r0, #0xf
_0802c94e:
	asr		r3, r0, #0x4
	ldr		r1, [r5, #0x44]
	add		r0, r1, #0x0
	sub		r0, #0x20
	cmp		r3, r0
	blt		_0802c966
	add		r0, r1, #0x0
	add		r0, #0x20
	cmp		r3, r0
	bgt		_0802c966
	mov		r0, #0x0
	b		_0802c968
_0802c966:
	mov		r0, #0x1
_0802c968:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2C96E, 0x2
	thumb_func_end sub_0802c924

	thumb_func_start sub_0802c970
sub_0802c970:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	mov		r0, #0x0
	str		r0, [r5, #0x18]
	add		r6, r5, #0x0
	add		r6, #0x18
	ldrb	r1, [r4, #0x4]
	ldrb	r2, [r4, #0x5]
	add		r0, r6, #0x0
	bl		sub_0802d47c
	ldr		r1, [r5, #0x38]
	ldrb	r0, [r4, #0x3]
	mov		r2, #0x2
	and		r2, r0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r6, #0x0
	bl		sub_0802d4ec
	ldr		r0, _0802c9b0
	str		r0, [r5, #0x2c]
	add		r0, r4, #0x0
	add		r0, #0xd4
	ldr		r0, [r0, #0x0]
	add		r4, r4, r0
	str		r4, [r5, #0x34]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2C9AE, 0x2

_0802c9b0:	.4byte 0x0600C000

.incbin "base.gba", 0x2C9B4, 0x8
	thumb_func_end sub_0802c970

	thumb_func_start sub_0802c9bc
sub_0802c9bc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r8, r0
	ldr		r4, [r0, #0x38]
	lsl		r0, r4, #0x1
	mov		r1, r8
	ldr		r2, [r1, #0x24]
	sub		r1, r2, #0x1
	and		r0, r1
	add		r1, r0, #0x0
	mul		r1, r2
	mov		r2, r8
	ldr		r0, [r2, #0x14]
	add		r0, r0, r1
	mov		r9, r0
	cmp		r4, #0x0
	blt		_0802c9fe
	ldr		r0, [r2, #0x30]
	cmp		r4, r0
	bge		_0802c9fe
	ldr		r0, [r2, #0x28]
	ldr		r2, [r2, #0x34]
	add		r6, r0, #0x0
	cmn		r2, r6
	blt		_0802c9fe
	mov		r5, r8
	ldr		r3, [r5, #0x2c]
	mov		r12, r3
	cmp		r2, r3
	blt		_0802ca20
_0802c9fe:
	mov		r1, r9
	mov		r0, r8
	ldr		r6, [r0, #0x28]
	cmp		r6, #0x0
	bgt		_0802ca0a
	b		_0802cc0e
_0802ca0a:
	mov		r2, #0x0
	lsl		r3, r6, #0x1
	add		r5, r6, #0x0
_0802ca10:
	strh	r2, [r1, #0x0]
	add		r0, r3, r1
	strh	r2, [r0, #0x0]
	add		r1, #0x2
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_0802ca10
	b		_0802cc0e
_0802ca20:
	add		r0, r4, #0x0
	mul		r0, r3
	lsl		r0, r0, #0x2
	lsl		r1, r2, #0x1
	add		r0, r0, r1
	mov		r10, r0
	cmp		r2, #0x0
	bge		_0802ca94
	sub		r3, r6, #0x1
	and		r3, r2
	sub		r2, r6, r3
	lsl		r0, r3, #0x1
	mov		r5, r9
	add		r1, r0, r5
	add		r7, r4, #0x0
	cmp		r2, #0x0
	ble		_0802ca54
	mov		r4, #0x0
	lsl		r5, r6, #0x1
_0802ca46:
	strh	r4, [r1, #0x0]
	add		r0, r5, r1
	strh	r4, [r0, #0x0]
	add		r1, #0x2
	sub		r2, #0x1
	cmp		r2, #0x0
	bne		_0802ca46
_0802ca54:
	mov		r1, r12
	lsl		r0, r1, #0x2
	add		r1, r7, #0x0
	mul		r1, r0
	mov		r2, r9
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_0802ca82
	cmp		r3, #0x0
	bgt		_0802ca6c
	b		_0802cc0e
_0802ca6c:
	mov		r4, #0x0
	lsl		r1, r6, #0x1
	add		r5, r3, #0x0
_0802ca72:
	strh	r4, [r2, #0x0]
	add		r0, r1, r2
	strh	r4, [r0, #0x0]
	add		r2, #0x2
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_0802ca72
	b		_0802cc0e
_0802ca82:
	mov		r2, r8
	ldr		r4, [r2, #0x20]
	add		r4, r4, r1
	ldr		r5, _0802ca90
	and		r5, r3
	b		_0802cb2c

.incbin "base.gba", 0x2CA8E, 0x2

_0802ca90:	.4byte 0x001FFFFF

_0802ca94:
	sub		r0, r3, r6
	cmp		r2, r0
	ble		_0802caf4
	sub		r3, r6, #0x1
	and		r3, r2
	mov		r1, r9
	cmp		r3, #0x0
	ble		_0802cab8
	mov		r4, #0x0
	lsl		r5, r6, #0x1
	add		r2, r3, #0x0
_0802caaa:
	strh	r4, [r1, #0x0]
	add		r0, r5, r1
	strh	r4, [r0, #0x0]
	add		r1, #0x2
	sub		r2, #0x1
	cmp		r2, #0x0
	bne		_0802caaa
_0802cab8:
	sub		r7, r6, r3
	lsl		r0, r3, #0x1
	add		r9, r0
	mov		r2, r9
	mov		r0, #0x1
	neg		r0, r0
	cmp		r10, r0
	bne		_0802cae4
	cmp		r7, #0x0
	bgt		_0802cace
	b		_0802cc0e
_0802cace:
	mov		r3, #0x0
	lsl		r1, r6, #0x1
	add		r5, r7, #0x0
_0802cad4:
	strh	r3, [r2, #0x0]
	add		r0, r1, r2
	strh	r3, [r0, #0x0]
	add		r2, #0x2
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_0802cad4
	b		_0802cc0e
_0802cae4:
	mov		r2, r8
	ldr		r4, [r2, #0x20]
	add		r4, r10
	ldr		r5, _0802caf0
	and		r5, r7
	b		_0802cb2c

_0802caf0:	.4byte 0x001FFFFF

_0802caf4:
	sub		r5, r6, #0x1
	and		r5, r2
	cmp		r5, #0x0
	bne		_0802cb54
	mov		r2, r9
	mov		r0, #0x1
	neg		r0, r0
	cmp		r10, r0
	bne		_0802cb22
	cmp		r5, r6
	blt		_0802cb0c
	b		_0802cc0e
_0802cb0c:
	mov		r3, #0x0
	lsl		r4, r6, #0x1
	add		r1, r6, #0x0
_0802cb12:
	strh	r3, [r2, #0x0]
	add		r0, r4, r2
	strh	r3, [r0, #0x0]
	add		r2, #0x2
	sub		r1, #0x1
	cmp		r1, #0x0
	bne		_0802cb12
	b		_0802cc0e
_0802cb22:
	mov		r2, r8
	ldr		r4, [r2, #0x20]
	add		r4, r10
	ldr		r5, _0802cb50
	and		r5, r6
_0802cb2c:
	add		r0, r4, #0x0
	mov		r1, r9
	add		r2, r5, #0x0
	bl		sub_08071b6c
	mov		r1, r8
	ldr		r0, [r1, #0x2c]
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldr		r1, [r1, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r9
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_08071b6c
	b		_0802cc0e

.incbin "base.gba", 0x2CB4E, 0x2

_0802cb50:	.4byte 0x001FFFFF

_0802cb54:
	add		r7, r5, #0x0
	sub		r0, r6, r7
	lsl		r0, r0, #0x1
	mov		r2, r10
	add		r1, r0, r2
	mov		r2, r9
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_0802cb84
	lsl		r5, r7, #0x1
	cmp		r7, #0x0
	ble		_0802cbb0
	mov		r4, #0x0
	lsl		r1, r6, #0x1
	add		r3, r7, #0x0
_0802cb74:
	strh	r4, [r2, #0x0]
	add		r0, r1, r2
	strh	r4, [r0, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bne		_0802cb74
	b		_0802cbb0
_0802cb84:
	mov		r5, r8
	ldr		r4, [r5, #0x20]
	add		r4, r4, r1
	ldr		r5, _0802cbe0
	and		r5, r7
	add		r0, r4, #0x0
	mov		r1, r9
	add		r2, r5, #0x0
	bl		sub_08071b6c
	mov		r1, r8
	ldr		r0, [r1, #0x2c]
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldr		r1, [r1, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r9
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_08071b6c
	lsl		r5, r7, #0x1
_0802cbb0:
	mov		r2, r8
	ldr		r1, [r2, #0x28]
	sub		r7, r1, r7
	add		r9, r5
	mov		r2, r9
	mov		r0, #0x1
	neg		r0, r0
	add		r6, r1, #0x0
	cmp		r10, r0
	bne		_0802cbe4
	cmp		r7, #0x0
	ble		_0802cc0e
	mov		r3, #0x0
	lsl		r5, r6, #0x1
	add		r1, r7, #0x0
_0802cbce:
	strh	r3, [r2, #0x0]
	add		r0, r5, r2
	strh	r3, [r0, #0x0]
	add		r2, #0x2
	sub		r1, #0x1
	cmp		r1, #0x0
	bne		_0802cbce
	b		_0802cc0e

.incbin "base.gba", 0x2CBDE, 0x2

_0802cbe0:	.4byte 0x001FFFFF

_0802cbe4:
	mov		r5, r8
	ldr		r4, [r5, #0x20]
	add		r4, r10
	ldr		r5, _0802cc1c
	and		r5, r7
	add		r0, r4, #0x0
	mov		r1, r9
	add		r2, r5, #0x0
	bl		sub_08071b6c
	mov		r1, r8
	ldr		r0, [r1, #0x2c]
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldr		r1, [r1, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r9
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_08071b6c
_0802cc0e:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802cc1c:	.4byte 0x001FFFFF
	thumb_func_end sub_0802c9bc

	thumb_func_start sub_0802cc20
sub_0802cc20:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	mov		r12, r0
	ldr		r1, [r0, #0x34]
	lsl		r0, r1, #0x1
	str		r0, [sp, #0x0]
	mov		r2, r12
	ldr		r0, [r2, #0x24]
	sub		r0, #0x1
	ldr		r3, [sp, #0x0]
	and		r3, r0
	str		r3, [sp, #0x0]
	cmp		r1, #0x0
	blt		_0802cc5c
	ldr		r4, [r2, #0x2c]
	str		r4, [sp, #0x14]
	cmp		r1, r4
	bge		_0802cc5c
	ldr		r0, [r2, #0x28]
	add		r6, r0, #0x0
	ldr		r4, [r2, #0x38]
	cmn		r4, r6
	blt		_0802cc5c
	ldr		r5, [r2, #0x30]
	cmp		r4, r5
	blt		_0802cc8c
_0802cc5c:
	mov		r1, #0x96
	lsl		r1, r1, #0x2
	add		r1, r12
	mov		r7, r12
	ldr		r6, [r7, #0x28]
	ldr		r0, [sp, #0x0]
	asr		r0, r0, #0x1f
	str		r0, [sp, #0x8]
	ldr		r2, [r7, #0x14]
	str		r2, [sp, #0xC]
	cmp		r6, #0x0
	bgt		_0802cc76
	b		_0802cf3e
_0802cc76:
	mov		r3, #0x0
	lsl		r4, r6, #0x1
	add		r2, r6, #0x0
_0802cc7c:
	strh	r3, [r1, #0x0]
	add		r0, r4, r1
	strh	r3, [r0, #0x0]
	add		r1, #0x2
	sub		r2, #0x1
	cmp		r2, #0x0
	bne		_0802cc7c
	b		_0802cf3e
_0802cc8c:
	ldr		r3, [sp, #0x14]
	lsl		r3, r3, #0x2
	str		r3, [sp, #0x4]
	add		r3, r4, #0x0
	ldr		r7, [sp, #0x4]
	add		r2, r3, #0x0
	mul		r2, r7
	mov		r0, r12
	ldr		r1, [r0, #0x34]
	lsl		r0, r1, #0x1
	add		r2, r2, r0
	str		r2, [sp, #0x18]
	mov		r8, r1
	cmp		r3, #0x0
	bge		_0802cd3c
	sub		r4, r6, #0x1
	and		r4, r3
	sub		r3, r6, r4
	lsl		r0, r4, #0x1
	mov		r1, #0x96
	lsl		r1, r1, #0x2
	add		r0, r0, r1
	mov		r7, r12
	add		r2, r7, r0
	add		r7, r1, #0x0
	add		r7, r12
	ldr		r0, [sp, #0x0]
	asr		r0, r0, #0x1f
	str		r0, [sp, #0x8]
	mov		r1, r12
	ldr		r1, [r1, #0x14]
	str		r1, [sp, #0xC]
	cmp		r3, #0x0
	ble		_0802cce2
	mov		r5, #0x0
	lsl		r1, r6, #0x1
_0802ccd4:
	strh	r5, [r2, #0x0]
	add		r0, r1, r2
	strh	r5, [r0, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bne		_0802ccd4
_0802cce2:
	mov		r2, r8
	lsl		r1, r2, #0x1
	add		r2, r7, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_0802cd0c
	cmp		r4, #0x0
	bgt		_0802ccf6
	b		_0802cf3e
_0802ccf6:
	mov		r3, #0x0
	lsl		r5, r6, #0x1
	add		r1, r4, #0x0
_0802ccfc:
	strh	r3, [r2, #0x0]
	add		r0, r5, r2
	strh	r3, [r0, #0x0]
	add		r2, #0x2
	sub		r1, #0x1
	cmp		r1, #0x0
	bne		_0802ccfc
	b		_0802cf3e
_0802cd0c:
	mov		r3, r12
	ldr		r0, [r3, #0x20]
	add		r3, r0, r1
	cmp		r4, #0x0
	bgt		_0802cd18
	b		_0802cf3e
_0802cd18:
	lsl		r7, r6, #0x1
	mov		r8, r7
	ldr		r0, [sp, #0x14]
	lsl		r7, r0, #0x1
	lsl		r5, r0, #0x2
_0802cd22:
	ldrh	r0, [r3, #0x0]
	strh	r0, [r2, #0x0]
	mov		r0, r8
	add		r1, r0, r2
	add		r0, r7, r3
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r2, #0x2
	add		r3, r3, r5
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0802cd22
	b		_0802cf3e
_0802cd3c:
	sub		r0, r5, r6
	cmp		r3, r0
	ble		_0802cdd6
	sub		r4, r6, #0x1
	and		r4, r3
	mov		r1, #0x96
	lsl		r1, r1, #0x2
	add		r1, r12
	ldr		r2, [sp, #0x0]
	asr		r2, r2, #0x1f
	str		r2, [sp, #0x8]
	mov		r3, r12
	ldr		r3, [r3, #0x14]
	str		r3, [sp, #0xC]
	cmp		r4, #0x0
	ble		_0802cd70
	mov		r5, #0x0
	lsl		r2, r6, #0x1
	add		r3, r4, #0x0
_0802cd62:
	strh	r5, [r1, #0x0]
	add		r0, r2, r1
	strh	r5, [r0, #0x0]
	add		r1, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bne		_0802cd62
_0802cd70:
	sub		r1, r6, r4
	lsl		r0, r4, #0x1
	mov		r4, #0x96
	lsl		r4, r4, #0x2
	add		r0, r0, r4
	mov		r7, r12
	add		r3, r7, r0
	mov		r0, #0x1
	neg		r0, r0
	ldr		r2, [sp, #0x18]
	cmp		r2, r0
	bne		_0802cda2
	cmp		r1, #0x0
	bgt		_0802cd8e
	b		_0802cf3e
_0802cd8e:
	mov		r2, #0x0
	lsl		r4, r6, #0x1
_0802cd92:
	strh	r2, [r3, #0x0]
	add		r0, r4, r3
	strh	r2, [r0, #0x0]
	add		r3, #0x2
	sub		r1, #0x1
	cmp		r1, #0x0
	bne		_0802cd92
	b		_0802cf3e
_0802cda2:
	mov		r4, r12
	ldr		r0, [r4, #0x20]
	ldr		r7, [sp, #0x18]
	add		r2, r0, r7
	cmp		r1, #0x0
	bgt		_0802cdb0
	b		_0802cf3e
_0802cdb0:
	lsl		r0, r6, #0x1
	mov		r8, r0
	ldr		r4, [sp, #0x14]
	lsl		r7, r4, #0x1
	lsl		r5, r4, #0x2
	add		r4, r1, #0x0
_0802cdbc:
	ldrh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	mov		r0, r8
	add		r1, r0, r3
	add		r0, r7, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r3, #0x2
	add		r2, r2, r5
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0802cdbc
	b		_0802cf3e
_0802cdd6:
	sub		r1, r6, #0x1
	and		r1, r4
	cmp		r1, #0x0
	bne		_0802ce56
	mov		r3, #0x96
	lsl		r3, r3, #0x2
	add		r3, r12
	mov		r0, #0x1
	neg		r0, r0
	ldr		r2, [sp, #0x18]
	cmp		r2, r0
	bne		_0802ce16
	ldr		r4, [sp, #0x0]
	asr		r4, r4, #0x1f
	str		r4, [sp, #0x8]
	mov		r7, r12
	ldr		r7, [r7, #0x14]
	str		r7, [sp, #0xC]
	cmp		r1, r6
	blt		_0802ce00
	b		_0802cf3e
_0802ce00:
	mov		r2, #0x0
	lsl		r4, r6, #0x1
	add		r1, r6, #0x0
_0802ce06:
	strh	r2, [r3, #0x0]
	add		r0, r4, r3
	strh	r2, [r0, #0x0]
	add		r3, #0x2
	sub		r1, #0x1
	cmp		r1, #0x0
	bne		_0802ce06
	b		_0802cf3e
_0802ce16:
	mov		r2, r12
	ldr		r0, [r2, #0x20]
	ldr		r4, [sp, #0x18]
	add		r2, r0, r4
	ldr		r7, [sp, #0x0]
	asr		r7, r7, #0x1f
	str		r7, [sp, #0x8]
	mov		r0, r12
	ldr		r0, [r0, #0x14]
	str		r0, [sp, #0xC]
	cmp		r1, r6
	blt		_0802ce30
	b		_0802cf3e
_0802ce30:
	lsl		r1, r6, #0x1
	mov		r8, r1
	ldr		r4, [sp, #0x14]
	lsl		r7, r4, #0x1
	ldr		r5, [sp, #0x4]
	add		r4, r6, #0x0
_0802ce3c:
	ldrh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	mov		r0, r8
	add		r1, r0, r3
	add		r0, r7, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r3, #0x2
	add		r2, r2, r5
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0802ce3c
	b		_0802cf3e
_0802ce56:
	add		r5, r1, #0x0
	sub		r0, r6, r5
	ldr		r1, [sp, #0x4]
	mul		r0, r1
	ldr		r2, [sp, #0x18]
	add		r1, r2, r0
	mov		r3, #0x96
	lsl		r3, r3, #0x2
	add		r3, r12
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_0802ce9a
	lsl		r4, r5, #0x1
	str		r4, [sp, #0x10]
	ldr		r7, [sp, #0x0]
	asr		r7, r7, #0x1f
	str		r7, [sp, #0x8]
	mov		r0, r12
	ldr		r0, [r0, #0x14]
	str		r0, [sp, #0xC]
	cmp		r5, #0x0
	ble		_0802cede
	mov		r4, #0x0
	lsl		r2, r6, #0x1
	add		r1, r5, #0x0
_0802ce8a:
	strh	r4, [r3, #0x0]
	add		r0, r2, r3
	strh	r4, [r0, #0x0]
	add		r3, #0x2
	sub		r1, #0x1
	cmp		r1, #0x0
	bne		_0802ce8a
	b		_0802cede
_0802ce9a:
	mov		r2, r12
	ldr		r0, [r2, #0x20]
	add		r2, r0, r1
	lsl		r4, r5, #0x1
	str		r4, [sp, #0x10]
	ldr		r7, [sp, #0x0]
	asr		r7, r7, #0x1f
	str		r7, [sp, #0x8]
	mov		r0, r12
	ldr		r0, [r0, #0x14]
	str		r0, [sp, #0xC]
	cmp		r5, #0x0
	ble		_0802cede
	lsl		r1, r6, #0x1
	mov		r10, r1
	ldr		r4, [sp, #0x14]
	lsl		r4, r4, #0x1
	mov		r9, r4
	ldr		r7, [sp, #0x4]
	mov		r8, r7
	add		r4, r5, #0x0
_0802cec4:
	ldrh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	mov		r0, r10
	add		r1, r0, r3
	mov		r7, r9
	add		r0, r7, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r3, #0x2
	add		r2, r8
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0802cec4
_0802cede:
	sub		r1, r6, r5
	ldr		r2, [sp, #0x10]
	mov		r3, #0x96
	lsl		r3, r3, #0x2
	add		r0, r2, r3
	mov		r4, r12
	add		r3, r4, r0
	mov		r0, #0x1
	neg		r0, r0
	ldr		r7, [sp, #0x18]
	cmp		r7, r0
	bne		_0802cf0e
	cmp		r1, #0x0
	ble		_0802cf3e
	mov		r2, #0x0
	lsl		r4, r6, #0x1
_0802cefe:
	strh	r2, [r3, #0x0]
	add		r0, r4, r3
	strh	r2, [r0, #0x0]
	add		r3, #0x2
	sub		r1, #0x1
	cmp		r1, #0x0
	bne		_0802cefe
	b		_0802cf3e
_0802cf0e:
	mov		r2, r12
	ldr		r0, [r2, #0x20]
	ldr		r4, [sp, #0x18]
	add		r2, r0, r4
	cmp		r1, #0x0
	ble		_0802cf3e
	lsl		r7, r6, #0x1
	mov		r8, r7
	ldr		r0, [sp, #0x14]
	lsl		r7, r0, #0x1
	lsl		r5, r0, #0x2
	add		r4, r1, #0x0
_0802cf26:
	ldrh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	mov		r0, r8
	add		r1, r0, r3
	add		r0, r7, r2
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r3, #0x2
	add		r2, r2, r5
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0802cf26
_0802cf3e:
	mov		r4, #0x96
	lsl		r4, r4, #0x2
	add		r4, r12
	ldr		r1, [sp, #0xC]
	ldr		r3, [sp, #0x0]
	add		r2, r1, r3
	cmp		r6, #0x0
	ble		_0802cf74
	mov		r7, r12
	ldr		r1, [r7, #0x24]
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r0, r0, #0x1
	lsl		r5, r0, #0x1
	lsl		r7, r1, #0x1
	add		r3, r6, #0x0
_0802cf5e:
	ldrh	r0, [r4, #0x0]
	strh	r0, [r2, #0x0]
	add		r1, r5, r2
	add		r0, r5, r4
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r4, #0x2
	add		r2, r2, r7
	sub		r3, #0x1
	cmp		r3, #0x0
	bne		_0802cf5e
_0802cf74:
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0802cc20

	thumb_func_start sub_0802cf84
sub_0802cf84:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r7, r0, #0x0
	ldr		r4, [r7, #0x38]
	lsl		r0, r4, #0x1
	ldr		r2, [r7, #0x24]
	sub		r1, r2, #0x1
	and		r0, r1
	add		r1, r0, #0x0
	mul		r1, r2
	ldr		r0, _0802cfe8
	add		r1, r1, r0
	mov		r8, r1
	cmp		r4, #0x0
	blt		_0802cfbe
	ldr		r0, [r7, #0x30]
	cmp		r4, r0
	bge		_0802cfbe
	ldr		r6, [r7, #0x28]
	ldr		r2, [r7, #0x34]
	cmn		r2, r6
	blt		_0802cfbe
	ldr		r3, [r7, #0x2c]
	cmp		r2, r3
	blt		_0802cff0
_0802cfbe:
	ldr		r4, [r7, #0x28]
	mov		r0, sp
	mov		r5, #0x0
	strh	r5, [r0, #0x0]
	ldr		r0, _0802cfec
	and		r4, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	orr		r4, r0
	mov		r0, sp
	mov		r1, r8
	add		r2, r4, #0x0
	bl		sub_08071b6c
	mov		r0, sp
	add		r0, #0x2
	strh	r5, [r0, #0x0]
	ldr		r1, [r7, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r8
	b		_0802d22e

_0802cfe8:	.4byte 0x02000000
_0802cfec:	.4byte 0x001FFFFF

_0802cff0:
	add		r0, r4, #0x0
	mul		r0, r3
	lsl		r0, r0, #0x2
	lsl		r1, r2, #0x1
	add		r0, r0, r1
	mov		r9, r0
	cmp		r2, #0x0
	bge		_0802d090
	sub		r0, r6, #0x1
	and		r0, r2
	mov		r9, r0
	sub		r5, r6, r0
	lsl		r4, r0, #0x1
	add		r4, r8
	mov		r0, sp
	mov		r1, #0x0
	mov		r10, r1
	strh	r1, [r0, #0x0]
	ldr		r2, _0802d07c
	and		r5, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	orr		r5, r0
	mov		r0, sp
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_08071b6c
	mov		r6, sp
	add		r6, #0x2
	mov		r1, r10
	strh	r1, [r6, #0x0]
	ldr		r0, [r7, #0x28]
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_08071b6c
	ldr		r0, [r7, #0x2c]
	lsl		r0, r0, #0x2
	ldr		r1, [r7, #0x38]
	mul		r1, r0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_0802d080
	mov		r0, sp
	mov		r2, r10
	strh	r2, [r0, #0x0]
	ldr		r4, _0802d07c
	mov		r0, r9
	and		r4, r0
	mov		r1, #0x80
	lsl		r1, r1, #0x11
	orr		r4, r1
	mov		r0, sp
	mov		r1, r8
	add		r2, r4, #0x0
	bl		sub_08071b6c
	mov		r2, r10
	strh	r2, [r6, #0x0]
	ldr		r1, [r7, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r8
	add		r0, r6, #0x0
	b		_0802d22e

.incbin "base.gba", 0x2D07A, 0x2

_0802d07c:	.4byte 0x001FFFFF

_0802d080:
	ldr		r4, [r7, #0x20]
	add		r4, r4, r1
	ldr		r5, _0802d08c
	mov		r0, r9
	and		r5, r0
	b		_0802d160

_0802d08c:	.4byte 0x001FFFFF

_0802d090:
	sub		r0, r3, r6
	cmp		r2, r0
	ble		_0802d11c
	sub		r5, r6, #0x1
	and		r5, r2
	mov		r0, sp
	mov		r1, #0x0
	mov		r10, r1
	strh	r1, [r0, #0x0]
	add		r4, r5, #0x0
	ldr		r2, _0802d108
	and		r4, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	orr		r4, r0
	mov		r0, sp
	mov		r1, r8
	add		r2, r4, #0x0
	bl		sub_08071b6c
	mov		r6, sp
	add		r6, #0x2
	mov		r1, r10
	strh	r1, [r6, #0x0]
	ldr		r1, [r7, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r8
	add		r0, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_08071b6c
	ldr		r0, [r7, #0x28]
	sub		r1, r0, r5
	lsl		r5, r5, #0x1
	add		r8, r5
	mov		r0, #0x1
	neg		r0, r0
	cmp		r9, r0
	bne		_0802d10c
	mov		r0, sp
	mov		r2, r10
	strh	r2, [r0, #0x0]
	ldr		r4, _0802d108
	and		r4, r1
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	orr		r4, r0
	mov		r0, sp
	mov		r1, r8
	add		r2, r4, #0x0
	bl		sub_08071b6c
	mov		r1, r10
	strh	r1, [r6, #0x0]
	ldr		r1, [r7, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r8
	add		r0, r6, #0x0
	b		_0802d22e

.incbin "base.gba", 0x2D106, 0x2

_0802d108:	.4byte 0x001FFFFF

_0802d10c:
	ldr		r4, [r7, #0x20]
	add		r4, r9
	ldr		r5, _0802d118
	and		r5, r1
	b		_0802d160

.incbin "base.gba", 0x2D116, 0x2

_0802d118:	.4byte 0x001FFFFF

_0802d11c:
	sub		r5, r6, #0x1
	and		r5, r2
	cmp		r5, #0x0
	bne		_0802d184
	mov		r0, #0x1
	neg		r0, r0
	cmp		r9, r0
	bne		_0802d158
	mov		r0, sp
	strh	r5, [r0, #0x0]
	ldr		r4, _0802d154
	and		r4, r6
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	orr		r4, r0
	mov		r0, sp
	mov		r1, r8
	add		r2, r4, #0x0
	bl		sub_08071b6c
	mov		r0, sp
	add		r0, #0x2
	strh	r5, [r0, #0x0]
	ldr		r1, [r7, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r8
	b		_0802d22e

.incbin "base.gba", 0x2D152, 0x2

_0802d154:	.4byte 0x001FFFFF

_0802d158:
	ldr		r4, [r7, #0x20]
	add		r4, r9
	ldr		r5, _0802d180
	and		r5, r6
_0802d160:
	add		r0, r4, #0x0
	mov		r1, r8
	add		r2, r5, #0x0
	bl		sub_08071b6c
	ldr		r0, [r7, #0x2c]
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldr		r1, [r7, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r8
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_08071b6c
	b		_0802d262

_0802d180:	.4byte 0x001FFFFF

_0802d184:
	mov		r10, r5
	sub		r0, r6, r5
	lsl		r0, r0, #0x1
	mov		r2, r9
	add		r5, r0, r2
	mov		r0, #0x1
	neg		r0, r0
	cmp		r5, r0
	bne		_0802d1cc
	mov		r0, sp
	mov		r5, #0x0
	strh	r5, [r0, #0x0]
	ldr		r4, _0802d1c8
	mov		r0, r10
	and		r4, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	orr		r4, r0
	mov		r0, sp
	mov		r1, r8
	add		r2, r4, #0x0
	bl		sub_08071b6c
	mov		r0, sp
	add		r0, #0x2
	strh	r5, [r0, #0x0]
	ldr		r1, [r7, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r8
	add		r2, r4, #0x0
	bl		sub_08071b6c
	b		_0802d1f4

.incbin "base.gba", 0x2D1C6, 0x2

_0802d1c8:	.4byte 0x001FFFFF

_0802d1cc:
	ldr		r4, [r7, #0x20]
	add		r4, r4, r5
	ldr		r5, _0802d238
	mov		r1, r10
	and		r5, r1
	add		r0, r4, #0x0
	mov		r1, r8
	add		r2, r5, #0x0
	bl		sub_08071b6c
	ldr		r0, [r7, #0x2c]
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldr		r1, [r7, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r8
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_08071b6c
_0802d1f4:
	ldr		r0, [r7, #0x28]
	mov		r2, r10
	sub		r1, r0, r2
	lsl		r0, r2, #0x1
	mov		r2, r8
	add		r6, r0, r2
	mov		r0, #0x1
	neg		r0, r0
	cmp		r9, r0
	bne		_0802d23c
	mov		r0, sp
	mov		r5, #0x0
	strh	r5, [r0, #0x0]
	ldr		r4, _0802d238
	and		r4, r1
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	orr		r4, r0
	mov		r0, sp
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_08071b6c
	mov		r0, sp
	add		r0, #0x2
	strh	r5, [r0, #0x0]
	ldr		r1, [r7, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r6, r1
_0802d22e:
	add		r2, r4, #0x0
	bl		sub_08071b6c
	b		_0802d262

.incbin "base.gba", 0x2D236, 0x2

_0802d238:	.4byte 0x001FFFFF

_0802d23c:
	ldr		r4, [r7, #0x20]
	add		r4, r9
	ldr		r5, _0802d274
	and		r5, r1
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	add		r2, r5, #0x0
	bl		sub_08071b6c
	ldr		r0, [r7, #0x2c]
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldr		r1, [r7, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r6, r1
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_08071b6c
_0802d262:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2D272, 0x2

_0802d274:	.4byte 0x001FFFFF
	thumb_func_end sub_0802cf84

	thumb_func_start sub_0802d278
sub_0802d278:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r2, [r4, #0x28]
	lsr		r1, r2, #0x1f
	add		r1, r2, r1
	asr		r1, r1, #0x1
	ldr		r0, [r4, #0x40]
	sub		r0, r0, r1
	str		r0, [r4, #0x34]
	ldr		r0, [r4, #0x44]
	sub		r0, r0, r1
	str		r0, [r4, #0x38]
	asr		r2, r2, #0x3
	cmp		r2, #0x0
	ble		_0802d2fe
	add		r5, r2, #0x0
_0802d298:
	add		r0, r4, #0x0
	bl		sub_0802cf84
	ldr		r0, [r4, #0x38]
	add		r0, #0x1
	str		r0, [r4, #0x38]
	add		r0, r4, #0x0
	bl		sub_0802cf84
	ldr		r0, [r4, #0x38]
	add		r0, #0x1
	str		r0, [r4, #0x38]
	add		r0, r4, #0x0
	bl		sub_0802cf84
	ldr		r0, [r4, #0x38]
	add		r0, #0x1
	str		r0, [r4, #0x38]
	add		r0, r4, #0x0
	bl		sub_0802cf84
	ldr		r0, [r4, #0x38]
	add		r0, #0x1
	str		r0, [r4, #0x38]
	add		r0, r4, #0x0
	bl		sub_0802cf84
	ldr		r0, [r4, #0x38]
	add		r0, #0x1
	str		r0, [r4, #0x38]
	add		r0, r4, #0x0
	bl		sub_0802cf84
	ldr		r0, [r4, #0x38]
	add		r0, #0x1
	str		r0, [r4, #0x38]
	add		r0, r4, #0x0
	bl		sub_0802cf84
	ldr		r0, [r4, #0x38]
	add		r0, #0x1
	str		r0, [r4, #0x38]
	add		r0, r4, #0x0
	bl		sub_0802cf84
	ldr		r0, [r4, #0x38]
	add		r0, #0x1
	str		r0, [r4, #0x38]
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_0802d298
_0802d2fe:
	bl		sub_08029f34
	ldr		r1, _0802d314
	ldr		r2, [r4, #0x14]
	ldr		r3, _0802d318
	bl		sub_08029ee4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2D312, 0x2

_0802d314:	.4byte 0x02000000
_0802d318:	.4byte 0x80002000
	thumb_func_end sub_0802d278

	thumb_func_start sub_0802d31c
sub_0802d31c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	mov		r12, r1
	mov		r8, r2
	ldr		r0, [r4, #0x24]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r2, r0, #0x0
	sub		r2, #0x8
	lsl		r3, r3, #0x10
	ldr		r7, _0802d3c8
	mov		r0, #0x80
	lsl		r0, r0, #0x17
	add		r3, r3, r0
	asr		r3, r3, #0x10
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_0802d348
	add		r0, #0x3f
_0802d348:
	asr		r1, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r1
	ldr		r6, _0802d3cc
	and		r0, r6
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	mul		r0, r2
	cmp		r0, #0x0
	bge		_0802d364
	ldr		r5, _0802d3d0
	add		r0, r0, r5
_0802d364:
	asr		r5, r0, #0xf
	add		r0, r1, #0x0
	and		r0, r6
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	mul		r0, r2
	cmp		r0, #0x0
	bge		_0802d37a
	ldr		r1, _0802d3d0
	add		r0, r0, r1
_0802d37a:
	asr		r2, r0, #0xf
	mov		r1, r12
	sub		r0, r1, r5
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r5, r0, #0x1
	mov		r0, r8
	sub		r2, r0, r2
	lsr		r0, r2, #0x1f
	add		r2, r2, r0
	asr		r3, r2, #0x1
	ldr		r1, [r4, #0x40]
	str		r1, [r4, #0x48]
	ldr		r0, [r4, #0x44]
	str		r0, [r4, #0x4c]
	str		r5, [r4, #0x40]
	str		r3, [r4, #0x44]
	sub		r7, r5, r1
	sub		r6, r3, r0
	ldr		r0, [r4, #0x28]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r2, r0, #0x1
	neg		r0, r2
	cmp		r6, r0
	blt		_0802d3ba
	cmp		r2, r6
	blt		_0802d3ba
	cmp		r7, r0
	blt		_0802d3ba
	cmp		r2, r7
	bge		_0802d3d4
_0802d3ba:
	add		r0, r4, #0x0
	mov		r1, r12
	mov		r2, r8
	bl		sub_0802d278
	b		_0802d472

.incbin "base.gba", 0x2D3C6, 0x2

_0802d3c8:	.4byte 0x08101068
_0802d3cc:	.4byte 0x000003FF
_0802d3d0:	.4byte 0x00007FFF

_0802d3d4:
	cmp		r6, #0x0
	beq		_0802d41c
	sub		r0, r5, r2
	str		r0, [r4, #0x34]
	cmp		r6, #0x0
	bge		_0802d3fe
	sub		r0, r3, r2
	str		r0, [r4, #0x38]
	mov		r5, #0x0
	cmp		r5, r6
	ble		_0802d41c
_0802d3ea:
	add		r0, r4, #0x0
	bl		sub_0802c9bc
	ldr		r0, [r4, #0x38]
	add		r0, #0x1
	str		r0, [r4, #0x38]
	sub		r5, #0x1
	cmp		r5, r6
	bgt		_0802d3ea
	b		_0802d41c
_0802d3fe:
	add		r0, r3, r2
	sub		r0, #0x1
	str		r0, [r4, #0x38]
	cmp		r6, #0x0
	ble		_0802d41c
	add		r5, r6, #0x0
_0802d40a:
	add		r0, r4, #0x0
	bl		sub_0802c9bc
	ldr		r0, [r4, #0x38]
	sub		r0, #0x1
	str		r0, [r4, #0x38]
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_0802d40a
_0802d41c:
	cmp		r7, #0x0
	beq		_0802d472
	ldr		r0, [r4, #0x28]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r1, r0, #0x1
	ldr		r0, [r4, #0x44]
	sub		r0, r0, r1
	str		r0, [r4, #0x38]
	cmp		r7, #0x0
	bge		_0802d452
	ldr		r0, [r4, #0x40]
	sub		r0, r0, r1
	str		r0, [r4, #0x34]
	mov		r5, #0x0
	cmp		r5, r7
	ble		_0802d472
_0802d43e:
	add		r0, r4, #0x0
	bl		sub_0802cc20
	ldr		r0, [r4, #0x34]
	add		r0, #0x1
	str		r0, [r4, #0x34]
	sub		r5, #0x1
	cmp		r5, r7
	bgt		_0802d43e
	b		_0802d472
_0802d452:
	ldr		r0, [r4, #0x40]
	add		r0, r0, r1
	sub		r0, #0x1
	str		r0, [r4, #0x34]
	cmp		r7, #0x0
	ble		_0802d472
	add		r5, r7, #0x0
_0802d460:
	add		r0, r4, #0x0
	bl		sub_0802cc20
	ldr		r0, [r4, #0x34]
	sub		r0, #0x1
	str		r0, [r4, #0x34]
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_0802d460
_0802d472:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0802d31c

	thumb_func_start sub_0802d47c
sub_0802d47c:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	mov		r0, #0x0
	str		r0, [r3, #0x0]
	ldr		r0, _0802d4a8
	ldrh	r0, [r0, #0x0]
	mov		r2, #0xc0
	lsl		r2, r2, #0x8
	add		r1, r2, #0x0
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	cmp		r1, r0
	beq		_0802d4be
	cmp		r1, r0
	bgt		_0802d4ac
	cmp		r1, #0x0
	beq		_0802d4ba
	b		_0802d4ca

.incbin "base.gba", 0x2D4A6, 0x2

_0802d4a8:	.4byte BG2Control

_0802d4ac:
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	cmp		r1, r0
	beq		_0802d4c2
	cmp		r1, r2
	beq		_0802d4c6
	b		_0802d4ca
_0802d4ba:
	mov		r0, #0x10
	b		_0802d4c8
_0802d4be:
	mov		r0, #0x20
	b		_0802d4c8
_0802d4c2:
	mov		r0, #0x40
	b		_0802d4c8
_0802d4c6:
	mov		r0, #0x80
_0802d4c8:
	str		r0, [r3, #0x24]
_0802d4ca:
	ldr		r0, [r3, #0x24]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	str		r0, [r3, #0x28]
	lsl		r0, r4, #0x6
	str		r0, [r3, #0x2c]
	lsl		r0, r5, #0x6
	str		r0, [r3, #0x30]
	ldr		r0, _0802d4e8
	str		r0, [r3, #0x20]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2D4E6, 0x2

_0802d4e8:	.4byte 0x02010400
	thumb_func_end sub_0802d47c

	thumb_func_start sub_0802d4ec
sub_0802d4ec:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r7, [r0, #0x1c]
	cmp		r2, #0x0
	beq		_0802d52e
	add		r6, r1, #0x0
	add		r5, r7, #0x0
	mov		r0, #0xf
	mov		r8, r0
_0802d500:
	ldrh	r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_0802d518
	add		r4, r7, r0
	bl		_DrawFrameRunAudio
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
_0802d518:
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	add		r6, r6, r0
	add		r5, #0x2
	mov		r0, #0x1
	neg		r0, r0
	add		r8, r0
	mov		r0, r8
	cmp		r0, #0x0
	bge		_0802d500
	b		_0802d534
_0802d52e:
	add		r0, r7, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
_0802d534:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2D53E, 0x2
	thumb_func_end sub_0802d4ec

	thumb_func_start sub_0802d540
sub_0802d540:
	ldr		r3, [r0, #0x40]
	str		r3, [r0, #0x48]
	ldr		r3, [r0, #0x44]
	str		r3, [r0, #0x4c]
	str		r1, [r0, #0x40]
	str		r2, [r0, #0x44]
	bx		lr

.incbin "base.gba", 0x2D54E, 0x2
	thumb_func_end sub_0802d540

	thumb_func_start sub_0802d550
sub_0802d550:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	bne		_0802d578
	cmp		r3, #0x0
	ble		_0802d5a2
	mov		r2, #0x0
	ldr		r0, [r6, #0x28]
	lsl		r4, r0, #0x1
_0802d568:
	strh	r2, [r1, #0x0]
	add		r0, r4, r1
	strh	r2, [r0, #0x0]
	add		r1, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bne		_0802d568
	b		_0802d5a2
_0802d578:
	asr		r0, r2, #0x1
	lsl		r0, r0, #0x1
	ldr		r4, [r6, #0x20]
	add		r4, r4, r0
	ldr		r5, _0802d5a8
	and		r5, r3
	add		r0, r4, #0x0
	add		r1, r7, #0x0
	add		r2, r5, #0x0
	bl		sub_08071b6c
	ldr		r0, [r6, #0x2c]
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldr		r1, [r6, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r7, r1
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_08071b6c
_0802d5a2:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802d5a8:	.4byte 0x001FFFFF
	thumb_func_end sub_0802d550

	thumb_func_start sub_0802d5ac
sub_0802d5ac:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r6, r2, #0x0
	add		r5, r3, #0x0
	lsl		r1, r1, #0x1
	mov		r0, #0x96
	lsl		r0, r0, #0x2
	add		r1, r1, r0
	add		r2, r4, r1
	mov		r0, #0x1
	neg		r0, r0
	cmp		r6, r0
	bne		_0802d5e0
	cmp		r5, #0x0
	ble		_0802d612
	mov		r1, #0x0
	ldr		r0, [r4, #0x28]
	lsl		r4, r0, #0x1
_0802d5d0:
	strh	r1, [r2, #0x0]
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bne		_0802d5d0
	b		_0802d612
_0802d5e0:
	asr		r0, r6, #0x1
	lsl		r0, r0, #0x1
	ldr		r1, [r4, #0x20]
	add		r3, r1, r0
	cmp		r5, #0x0
	ble		_0802d612
	ldr		r0, [r4, #0x28]
	lsl		r0, r0, #0x1
	mov		r12, r0
	ldr		r0, [r4, #0x2c]
	lsl		r7, r0, #0x1
	lsl		r6, r0, #0x2
	add		r4, r5, #0x0
_0802d5fa:
	ldrh	r0, [r3, #0x0]
	strh	r0, [r2, #0x0]
	mov		r0, r12
	add		r1, r0, r2
	add		r0, r7, r3
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	add		r2, #0x2
	add		r3, r3, r6
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0802d5fa
_0802d612:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0802d5ac

	thumb_func_start sub_0802d618
sub_0802d618:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	bne		_0802d658
	mov		r0, sp
	mov		r5, #0x0
	strh	r5, [r0, #0x0]
	ldr		r4, _0802d654
	and		r4, r3
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	orr		r4, r0
	mov		r0, sp
	add		r2, r4, #0x0
	bl		sub_08071b6c
	mov		r0, sp
	add		r0, #0x2
	strh	r5, [r0, #0x0]
	ldr		r1, [r6, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r7, r1
	add		r2, r4, #0x0
	bl		sub_08071b6c
	b		_0802d682

_0802d654:	.4byte 0x001FFFFF

_0802d658:
	asr		r0, r2, #0x1
	lsl		r0, r0, #0x1
	ldr		r4, [r6, #0x20]
	add		r4, r4, r0
	ldr		r5, _0802d68c
	and		r5, r3
	add		r0, r4, #0x0
	add		r1, r7, #0x0
	add		r2, r5, #0x0
	bl		sub_08071b6c
	ldr		r0, [r6, #0x2c]
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldr		r1, [r6, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r7, r1
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_08071b6c
_0802d682:
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2D68A, 0x2

_0802d68c:	.4byte 0x001FFFFF
	thumb_func_end sub_0802d618

	thumb_func_start sub_0802d690
sub_0802d690:
	ldr		r1, _0802d69c
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x2D69A, 0x2

_0802d69c:	.4byte 0x08102070
	thumb_func_end sub_0802d690

	thumb_func_start sub_0802d6a0
sub_0802d6a0:
	ldr		r1, _0802d6ac
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x2D6AA, 0x2

_0802d6ac:	.4byte 0x081020d0

.incbin "base.gba", 0x2D6B0, 0x10
	thumb_func_end sub_0802d6a0

	thumb_func_start sub_0802d6c0
sub_0802d6c0:
	ldr		r1, _0802d6cc
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x2D6CA, 0x2

_0802d6cc:	.4byte 0x08102130
	thumb_func_end sub_0802d6c0

	thumb_func_start sub_0802d6d0
sub_0802d6d0:
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1f
	bls		_0802d6dc
	mov		r0, #0x1
	b		_0802d6de
_0802d6dc:
	mov		r0, #0x0
_0802d6de:
	bx		lr
	thumb_func_end sub_0802d6d0

	thumb_func_start sub_0802d6e0
sub_0802d6e0:
	push	{ r4, lr }
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	mov		r3, #0x0
	mov		r0, #0x1
	cmp		r2, #0x1f
	bhi		_0802d6f0
	mov		r0, #0x0
_0802d6f0:
	cmp		r0, #0x0
	bne		_0802d714
	mov		r1, #0x0
	ldr		r4, _0802d710
_0802d6f8:
	lsl		r0, r1, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, r2
	bne		_0802d704
	add		r3, r1, #0x0
_0802d704:
	add		r0, r1, #0x1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x13
	bls		_0802d6f8
	b		_0802d72e

_0802d710:	.4byte 0x08102070

_0802d714:
	mov		r1, #0x0
	ldr		r4, _0802d738
_0802d718:
	lsl		r0, r1, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, r2
	bne		_0802d724
	add		r3, r1, #0x0
_0802d724:
	add		r0, r1, #0x1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x13
	bls		_0802d718
_0802d72e:
	add		r0, r3, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2D736, 0x2

_0802d738:	.4byte 0x081020d0
	thumb_func_end sub_0802d6e0

	thumb_func_start sub_0802d73c
sub_0802d73c:
	push	{ r4, lr }
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	mov		r3, #0x0
	mov		r0, #0x1
	cmp		r2, #0x1f
	bhi		_0802d74c
	mov		r0, #0x0
_0802d74c:
	cmp		r0, #0x0
	bne		_0802d770
	mov		r1, #0x0
	ldr		r4, _0802d76c
_0802d754:
	lsl		r0, r1, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, r2
	bne		_0802d760
	add		r3, r1, #0x0
_0802d760:
	add		r0, r1, #0x1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x13
	bls		_0802d754
	b		_0802d78a

_0802d76c:	.4byte 0x08102070

_0802d770:
	mov		r1, #0x0
	ldr		r4, _0802d794
_0802d774:
	lsl		r0, r1, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, r2
	bne		_0802d780
	add		r3, r1, #0x0
_0802d780:
	add		r0, r1, #0x1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x13
	bls		_0802d774
_0802d78a:
	lsl		r0, r3, #0x18
	lsr		r0, r0, #0x1a
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0802d794:	.4byte 0x081020d0
	thumb_func_end sub_0802d73c

	thumb_func_start sub_0802d798
sub_0802d798:
	push	{ r4, lr }
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	mov		r3, #0x0
	mov		r0, #0x1
	cmp		r2, #0x1f
	bhi		_0802d7a8
	mov		r0, #0x0
_0802d7a8:
	cmp		r0, #0x0
	bne		_0802d7cc
	mov		r1, #0x0
	ldr		r4, _0802d7c8
_0802d7b0:
	lsl		r0, r1, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, r2
	bne		_0802d7bc
	add		r3, r1, #0x0
_0802d7bc:
	add		r0, r1, #0x1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x13
	bls		_0802d7b0
	b		_0802d7e6

_0802d7c8:	.4byte 0x08102070

_0802d7cc:
	mov		r1, #0x0
	ldr		r4, _0802d7f4
_0802d7d0:
	lsl		r0, r1, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, r2
	bne		_0802d7dc
	add		r3, r1, #0x0
_0802d7dc:
	add		r0, r1, #0x1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x13
	bls		_0802d7d0
_0802d7e6:
	mov		r0, #0x3
	and		r3, r0
	add		r0, r3, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x2D7F2, 0x2

_0802d7f4:	.4byte 0x081020d0
	thumb_func_end sub_0802d798

	thumb_func_start sub_0802d7f8
sub_0802d7f8:
	push	{ r4, r5, r6, r7, lr }
	ldr		r0, [r0, #0x4]
	lsl		r0, r0, #0x2
	ldr		r1, _0802d84c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r5, r0, r1
	bl		_DrawFrameRunAudio
	ldrb	r1, [r5, #0x1]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802d864
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802d854
	ldr		r0, [r5, #0x4]
	ldr		r7, _0802d850
	add		r4, r5, r0
	mov		r6, #0x4
_0802d824:
	ldrh	r1, [r4, #0x0]
	cmp		r1, #0x0
	beq		_0802d83a
	ldr		r0, [r5, #0x4]
	add		r0, r5, r0
	add		r0, r0, r1
	add		r1, r7, #0x0
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	bl		_DrawFrameRunAudio
_0802d83a:
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	add		r7, r7, r0
	add		r4, #0x2
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0802d824
	b		_0802d872

.incbin "base.gba", 0x2D84A, 0x2

_0802d84c:	.4byte 0x08234000
_0802d850:	.4byte 0x06004000

_0802d854:
	ldr		r0, [r5, #0x4]
	add		r0, r5, r0
	ldr		r1, _0802d860
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	b		_0802d872

_0802d860:	.4byte 0x06004000

_0802d864:
	ldr		r0, [r5, #0x4]
	add		r0, r5, r0
	ldr		r1, _0802d8a8
	mov		r2, #0xb0
	lsl		r2, r2, #0x4
	bl		_CallHardwareSetCpuFast
_0802d872:
	ldr		r4, [r5, #0x14]
	add		r4, r5, r4
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xc0
	add		r0, r4, #0x0
	mov		r2, #0x3f
	bl		sub_08071b6c
	bl		_DrawFrameRunAudio
	ldrb	r1, [r5, #0x0]
	cmp		r1, #0x8
	bne		_0802d894
	b		_0802d998
_0802d894:
	cmp		r1, #0x8
	bgt		_0802d8b6
	cmp		r1, #0x2
	beq		_0802d918
	cmp		r1, #0x2
	bgt		_0802d8ac
	cmp		r1, #0x1
	beq		_0802d8d2
	b		_0802d9e2

.incbin "base.gba", 0x2D8A6, 0x2

_0802d8a8:	.4byte 0x06004000

_0802d8ac:
	cmp		r1, #0x4
	beq		_0802d98c
	cmp		r1, #0x7
	beq		_0802d96c
	b		_0802d9e2
_0802d8b6:
	cmp		r1, #0x20
	beq		_0802d98c
	cmp		r1, #0x20
	bgt		_0802d8c6
	cmp		r1, #0x10
	bne		_0802d8c4
	b		_0802d9c4
_0802d8c4:
	b		_0802d9e2
_0802d8c6:
	cmp		r1, #0x40
	beq		_0802d998
	cmp		r1, #0x80
	bne		_0802d8d0
	b		_0802d9c4
_0802d8d0:
	b		_0802d9e2
_0802d8d2:
	ldrb	r0, [r5, #0x1]
	and		r1, r0
	cmp		r1, #0x0
	beq		_0802d8f8
	ldr		r0, [r5, #0x8]
	add		r0, r5, r0
	ldr		r1, _0802d8f0
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r0, [r5, #0xC]
	add		r0, r5, r0
	ldr		r1, _0802d8f4
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	b		_0802d9e2

_0802d8f0:	.4byte 0x06007800
_0802d8f4:	.4byte 0x06007000

_0802d8f8:
	ldr		r0, [r5, #0x8]
	add		r0, r5, r0
	ldr		r1, _0802d910
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r2, r4, #0x0
	bl		_CallHardwareSetCpuFast
	ldr		r0, [r5, #0xC]
	add		r0, r5, r0
	ldr		r1, _0802d914
	b		_0802d956

_0802d910:	.4byte 0x06007800
_0802d914:	.4byte 0x06007000

_0802d918:
	ldrb	r1, [r5, #0x1]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802d934
	ldr		r0, [r5, #0x8]
	add		r0, r5, r0
	ldr		r1, _0802d930
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	b		_0802d96c

.incbin "base.gba", 0x2D92E, 0x2

_0802d930:	.4byte 0x06007800

_0802d934:
	ldr		r0, [r5, #0x8]
	add		r0, r5, r0
	ldr		r1, _0802d960
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r2, r4, #0x0
	bl		_CallHardwareSetCpuFast
	ldr		r0, [r5, #0xC]
	add		r0, r5, r0
	ldr		r1, _0802d964
	add		r2, r4, #0x0
	bl		_CallHardwareSetCpuFast
	ldr		r0, [r5, #0x10]
	add		r0, r5, r0
	ldr		r1, _0802d968
_0802d956:
	add		r2, r4, #0x0
	bl		_CallHardwareSetCpuFast
	b		_0802d9e2

.incbin "base.gba", 0x2D95E, 0x2

_0802d960:	.4byte 0x06007800
_0802d964:	.4byte 0x06007000
_0802d968:	.4byte 0x06006800

_0802d96c:
	ldr		r0, [r5, #0xC]
	add		r0, r5, r0
	ldr		r1, _0802d984
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r0, [r5, #0x10]
	add		r0, r5, r0
	ldr		r1, _0802d988
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	b		_0802d9e2

.incbin "base.gba", 0x2D982, 0x2

_0802d984:	.4byte 0x06007000
_0802d988:	.4byte 0x06006800

_0802d98c:
	ldr		r0, [r5, #0x8]
	add		r0, r5, r0
	ldr		r1, _0802d994
	b		_0802d99e

_0802d994:	.4byte 0x06007000

_0802d998:
	ldr		r0, [r5, #0x8]
	add		r0, r5, r0
	ldr		r1, _0802d9b8
_0802d99e:
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r0, [r5, #0xC]
	add		r0, r5, r0
	ldr		r1, _0802d9bc
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r0, [r5, #0x10]
	add		r0, r5, r0
	ldr		r1, _0802d9c0
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	b		_0802d9e2

_0802d9b8:	.4byte 0x06007800
_0802d9bc:	.4byte 0x06006800
_0802d9c0:	.4byte 0x06006000

_0802d9c4:
	ldr		r0, [r5, #0x8]
	add		r0, r5, r0
	ldr		r1, _0802d9ec
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r0, [r5, #0xC]
	add		r0, r5, r0
	ldr		r1, _0802d9f0
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r0, [r5, #0x10]
	add		r0, r5, r0
	ldr		r1, _0802d9f4
	bl		_CallHardwareLZ77DecompressToMemory16Bit
_0802d9e2:
	bl		_DrawFrameRunAudio
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802d9ec:	.4byte 0x06007800
_0802d9f0:	.4byte 0x06007000
_0802d9f4:	.4byte 0x06006000
	thumb_func_end sub_0802d7f8

	thumb_func_start sub_0802d9f8
sub_0802d9f8:
	push	{ r4, r5, r6, r7, lr }
	ldr		r1, _0802da3c
	ldr		r2, _0802da40
	ldr		r3, _0802da44
	add		r0, r2, r3
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x4]
	lsl		r0, r0, #0x2
	ldr		r1, _0802da48
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r0, r0, r1
	ldr		r1, _0802da4c
	add		r5, r2, r1
	mov		r3, #0x0
	mov		r12, r3
	mov		r6, #0x0
	mov		r7, #0x0
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x10
	beq		_0802da8a
	cmp		r1, #0x10
	bgt		_0802da56
	cmp		r1, #0x7
	beq		_0802da76
	cmp		r1, #0x7
	bgt		_0802da50
	cmp		r1, #0x4
	beq		_0802da70
	b		_0802da90

.incbin "base.gba", 0x2DA3A, 0x2

_0802da3c:	.4byte 0x08102bf8
_0802da40:	.4byte RunGameLogic_CallBack
_0802da44:	.4byte 0x00000801
_0802da48:	.4byte 0x08234000
_0802da4c:	.4byte 0x0000057C

_0802da50:
	cmp		r1, #0x8
	beq		_0802da7c
	b		_0802da90
_0802da56:
	cmp		r1, #0x40
	beq		_0802da76
	cmp		r1, #0x40
	bgt		_0802da64
	cmp		r1, #0x20
	beq		_0802da6a
	b		_0802da90
_0802da64:
	cmp		r1, #0x80
	beq		_0802da82
	b		_0802da90
_0802da6a:
	mov		r7, #0x80
	lsl		r7, r7, #0x7
	b		_0802da90
_0802da70:
	mov		r7, #0x80
	lsl		r7, r7, #0x8
	b		_0802da90
_0802da76:
	mov		r6, #0x80
	lsl		r6, r6, #0x7
	b		_0802da90
_0802da7c:
	mov		r6, #0x80
	lsl		r6, r6, #0x8
	b		_0802da90
_0802da82:
	mov		r1, #0x80
	lsl		r1, r1, #0x7
	mov		r12, r1
	b		_0802da90
_0802da8a:
	mov		r3, #0x80
	lsl		r3, r3, #0x8
	mov		r12, r3
_0802da90:
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x10
	beq		_0802dad6
	cmp		r0, #0x10
	bgt		_0802daae
	cmp		r0, #0x7
	beq		_0802dac2
	cmp		r0, #0x7
	bgt		_0802daa8
	cmp		r0, #0x4
	beq		_0802daca
	b		_0802dade
_0802daa8:
	cmp		r0, #0x8
	beq		_0802dace
	b		_0802dade
_0802daae:
	cmp		r0, #0x40
	beq		_0802dace
	cmp		r0, #0x40
	bgt		_0802dabc
	cmp		r0, #0x20
	beq		_0802daca
	b		_0802dade
_0802dabc:
	cmp		r0, #0x80
	beq		_0802dad6
	b		_0802dade
_0802dac2:
	mov		r0, #0xd
	mov		r3, #0xe
	mov		r4, #0xe
	b		_0802dae4
_0802daca:
	mov		r0, #0xe
	b		_0802dad0
_0802dace:
	mov		r0, #0xf
_0802dad0:
	mov		r3, #0xd
	mov		r4, #0xc
	b		_0802dae4
_0802dad6:
	mov		r0, #0xf
	mov		r3, #0xe
	mov		r4, #0xc
	b		_0802dae4
_0802dade:
	mov		r0, #0xf
	mov		r3, #0xe
	mov		r4, #0xd
_0802dae4:
	ldr		r2, _0802db24
	mov		r1, #0x7
	orr		r7, r1
	lsl		r0, r0, #0x8
	orr		r7, r0
	ldrh	r0, [r5, #0x8]
	strh	r7, [r5, #0x8]
	ldrh	r0, [r5, #0x8]
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	orr		r6, r1
	lsl		r0, r3, #0x8
	orr		r6, r0
	ldrh	r0, [r5, #0xa]
	strh	r6, [r5, #0xa]
	ldrh	r0, [r5, #0xa]
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	mov		r0, r12
	orr		r0, r1
	mov		r12, r0
	lsl		r0, r4, #0x8
	mov		r1, r12
	orr		r1, r0
	ldrh	r0, [r5, #0xc]
	strh	r1, [r5, #0xc]
	ldrh	r0, [r5, #0xc]
	strh	r0, [r2, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2DB22, 0x2

_0802db24:	.4byte BG1Control
	thumb_func_end sub_0802d9f8

	thumb_func_start sub_0802db28
sub_0802db28:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	ldr		r2, _0802db94
	ldr		r0, _0802db98
	add		r3, r2, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	ldrh	r1, [r0, #0x0]
	ldr		r0, _0802db9c
	and		r0, r1
	ldrh	r1, [r3, #0x0]
	mov		r4, #0x0
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x2
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x3
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldr		r0, _0802dba0
	add		r2, r2, r0
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x2
	beq		_0802dba4
	ldrh	r0, [r3, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	b		_0802dbae

.incbin "base.gba", 0x2DB92, 0x2

_0802db94:	.4byte RunGameLogic_CallBack
_0802db98:	.4byte 0x0000057C
_0802db9c:	.4byte 0x0000FFF8
_0802dba0:	.4byte 0x0000080D

_0802dba4:
	ldrh	r0, [r3, #0x0]
	ldr		r1, _0802dc1c
	and		r1, r0
	ldrh	r0, [r3, #0x0]
	strh	r1, [r3, #0x0]
_0802dbae:
	mov		r0, #0x0
	str		r0, [r3, #0x4]
	ldr		r0, _0802dc20
	str		r0, [sp, #0x0]
	ldr		r0, _0802dc24
	str		r0, [sp, #0x4]
	ldr		r0, _0802dc28
	str		r0, [sp, #0x8]
	mov		r0, sp
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0x8]
	strh	r0, [r3, #0x8]
	add		r0, sp, #0x4
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0xa]
	strh	r0, [r3, #0xa]
	add		r0, sp, #0x8
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0xc]
	strh	r0, [r3, #0xc]
	lsl		r0, r5, #0x10
	asr		r2, r0, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0802dbe2
	add		r0, #0x3f
_0802dbe2:
	asr		r0, r0, #0x6
	sub		r0, #0x28
	ldrh	r1, [r3, #0xe]
	strh	r0, [r3, #0xe]
	ldrh	r0, [r3, #0x10]
	mov		r4, #0x26
	strh	r4, [r3, #0x10]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0802dbf8
	add		r0, #0x7f
_0802dbf8:
	asr		r0, r0, #0x7
	ldrh	r1, [r3, #0x12]
	strh	r0, [r3, #0x12]
	ldrh	r0, [r3, #0x14]
	strh	r4, [r3, #0x14]
	add		r0, r2, #0x0
	cmp		r0, #0x0
	bge		_0802dc0a
	add		r0, #0xff
_0802dc0a:
	asr		r0, r0, #0x8
	ldrh	r1, [r3, #0x16]
	strh	r0, [r3, #0x16]
	ldrh	r0, [r3, #0x18]
	strh	r4, [r3, #0x18]
	add		sp, #0xc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0802dc1c:	.4byte 0x0000F7FF
_0802dc20:	.4byte 0x00000F07
_0802dc24:	.4byte 0x00000E07
_0802dc28:	.4byte 0x00000D07

.incbin "base.gba", 0x2DC2C, 0xDC
	thumb_func_end sub_0802db28

	thumb_func_start sub_0802dd08
sub_0802dd08:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	str		r0, [sp, #0xC]
	ldr		r2, _0802dd7c
	ldr		r0, _0802dd80
	add		r7, r2, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	ldrh	r1, [r0, #0x0]
	ldr		r0, _0802dd84
	and		r0, r1
	ldrh	r1, [r7, #0x0]
	mov		r3, #0x0
	strh	r0, [r7, #0x0]
	ldrh	r0, [r7, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r1, r4, #0x0
	orr		r0, r1
	ldrh	r1, [r7, #0x0]
	orr		r0, r3
	strh	r0, [r7, #0x0]
	ldrh	r0, [r7, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0x2
	add		r1, r4, #0x0
	orr		r0, r1
	ldrh	r1, [r7, #0x0]
	orr		r0, r3
	strh	r0, [r7, #0x0]
	ldrh	r0, [r7, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0x3
	add		r1, r4, #0x0
	orr		r0, r1
	ldrh	r1, [r7, #0x0]
	orr		r0, r3
	strh	r0, [r7, #0x0]
	ldr		r0, _0802dd88
	add		r2, r2, r0
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x2
	beq		_0802dd8c
	ldrh	r0, [r7, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r7, #0x0]
	orr		r0, r3
	strh	r0, [r7, #0x0]
	b		_0802dd96

_0802dd7c:	.4byte RunGameLogic_CallBack
_0802dd80:	.4byte 0x0000057C
_0802dd84:	.4byte 0x0000FFF8
_0802dd88:	.4byte 0x0000080D

_0802dd8c:
	ldrh	r0, [r7, #0x0]
	ldr		r1, _0802de1c
	and		r1, r0
	ldrh	r0, [r7, #0x0]
	strh	r1, [r7, #0x0]
_0802dd96:
	mov		r1, #0x0
	str		r1, [r7, #0x4]
	ldr		r0, _0802de20
	str		r0, [sp, #0x0]
	ldr		r0, _0802de24
	str		r0, [sp, #0x4]
	ldr		r0, _0802de28
	str		r0, [sp, #0x8]
	mov		r0, sp
	ldrh	r0, [r0, #0x0]
	ldrh	r2, [r7, #0x8]
	strh	r0, [r7, #0x8]
	add		r0, sp, #0x4
	ldrh	r0, [r0, #0x0]
	ldrh	r2, [r7, #0xa]
	strh	r0, [r7, #0xa]
	add		r0, sp, #0x8
	ldrh	r0, [r0, #0x0]
	ldrh	r2, [r7, #0xc]
	strh	r0, [r7, #0xc]
	ldrh	r0, [r7, #0xe]
	strh	r1, [r7, #0xe]
	ldrh	r0, [r7, #0x10]
	mov		r0, #0x26
	strh	r0, [r7, #0x10]
	ldr		r4, _0802de2c
	ldr		r1, _0802de30
	add		r0, r4, r1
	ldr		r6, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xbc
	ldr		r2, [r0, #0x0]
	sub		r0, #0x30
	ldr		r0, [r0, #0x0]
	mov		r1, #0x3
	str		r2, [sp, #0x10]
	bl		sub_0807d80c
	add		r3, r0, #0x0
	ldr		r1, _0802de34
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	add		r1, #0x4
	add		r0, r4, r1
	ldr		r5, [r0, #0x0]
	ldr		r0, _0802de38
	add		r4, r4, r0
	ldr		r4, [r4, #0x0]
	mov		r9, r4
	ldr		r2, [sp, #0x10]
	cmp		r2, #0x0
	bne		_0802de02
	mov		r5, #0x0
_0802de02:
	ldr		r0, [r6, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0802de5c
	cmp		r5, #0x1
	beq		_0802de4a
	cmp		r5, #0x1
	bgt		_0802de3c
	cmp		r5, #0x0
	beq		_0802de42
	b		_0802de6a

.incbin "base.gba", 0x2DE1A, 0x2

_0802de1c:	.4byte 0x0000F7FF
_0802de20:	.4byte 0x00000F04
_0802de24:	.4byte 0x00004D07
_0802de28:	.4byte 0x00000C07
_0802de2c:	.4byte RunGameLogic_CallBack
_0802de30:	.4byte 0x00000838
_0802de34:	.4byte 0x0000054C
_0802de38:	.4byte 0x00000554

_0802de3c:
	cmp		r5, #0x2
	beq		_0802de60
	b		_0802de6a
_0802de42:
	cmp		r2, r3
	ble		_0802de6a
	mov		r1, #0x6
	b		_0802de66
_0802de4a:
	mov		r4, #0x1
	neg		r4, r4
	add		r8, r4
	mov		r0, r8
	cmp		r0, #0x0
	bgt		_0802de6a
	mov		r5, #0x2
	cmp		r2, r3
	bge		_0802de6a
_0802de5c:
	mov		r5, #0x0
	b		_0802de6a
_0802de60:
	cmp		r2, r3
	bge		_0802de6a
	mov		r1, #0x3
_0802de66:
	mov		r8, r1
	mov		r5, #0x1
_0802de6a:
	mov		r2, #0x1
	add		r9, r2
	mov		r4, r9
	cmp		r4, #0x1
	ble		_0802dea8
	ldr		r0, _0802def0
	ldr		r1, _0802def4
	add		r0, r0, r1
	mov		r10, r0
	ldr		r4, [r0, #0x0]
	ldr		r1, PTR_PTR_0802def8
	lsl		r0, r5, #0x2
	add		r0, r0, r1
	ldr		r6, [r0, #0x0]
	mov		r2, #0x0
	mov		r9, r2
	add		r4, #0x1
	cmp		r4, #0x5
	ble		_0802de92
	mov		r4, #0x0
_0802de92:
	bl		sub_08029f34
	lsl		r1, r4, #0x2
	add		r1, r1, r6
	ldr		r1, [r1, #0x0]
	ldr		r2, _0802defc
	ldr		r3, _0802df00
	bl		sub_08029ee4
	mov		r0, r10
	str		r4, [r0, #0x0]
_0802dea8:
	ldr		r1, _0802def0
	mov		r2, #0xa5
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	mov		r4, r8
	str		r4, [r0, #0x0]
	add		r2, #0x4
	add		r0, r1, r2
	str		r5, [r0, #0x0]
	mov		r4, #0xa6
	lsl		r4, r4, #0x3
	add		r0, r1, r4
	mov		r1, r9
	str		r1, [r0, #0x0]
	mov		r2, #0x0
	mov		r9, r2
	mov		r6, #0x0
	ldr		r1, _0802df04
	mov		r4, #0x24
	add		r4, r4, r1
	mov		r10, r4
	mov		r2, #0xab
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	ldr		r3, [r0, #0x0]
	ldr		r4, _0802df08
	add		r0, r1, r4
	ldr		r4, [r0, #0x0]
	mov		r8, r1
	cmp		r4, #0x1
	beq		_0802df34
	cmp		r4, #0x1
	bgt		_0802df0c
	cmp		r4, #0x0
	beq		_0802df12
	b		_0802df8e

_0802def0:	.4byte 0x030031C4
_0802def4:	.4byte 0x0000053C
PTR_PTR_0802def8:	.4byte 0x08102d30
_0802defc:	.4byte 0x06005CA0
_0802df00:	.4byte 0x800001A0
_0802df04:	.4byte RunGameLogic_CallBack
_0802df08:	.4byte 0x0000055C

_0802df0c:
	cmp		r4, #0x2
	beq		_0802df5c
	b		_0802df8e
_0802df12:
	mov		r3, #0x0
	mov		r9, r3
	mov		r6, #0x0
	ldr		r0, _0802df30
	add		r0, r8
	ldr		r0, [r0, #0x0]
	add		r0, #0xc6
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x8
	sub		r0, #0x7f
	cmp		r0, #0x2
	ble		_0802df8e
	mov		r4, #0x1
	b		_0802df8e

.incbin "base.gba", 0x2DF2E, 0x2

_0802df30:	.4byte 0x00000838

_0802df34:
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_0802df3c
	add		r0, r3, #0x7
_0802df3c:
	asr		r0, r0, #0x3
	mov		r9, r0
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_0802df48
	add		r0, #0x1f
_0802df48:
	asr		r6, r0, #0x5
	add		r3, #0x1
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r3, r0
	ble		_0802df8e
	mov		r0, r8
	ldr		r3, [r0, #0x10]
	mov		r4, #0x2
	b		_0802df8e
_0802df5c:
	mov		r2, r8
	ldr		r1, [r2, #0x10]
	sub		r1, r1, r3
	lsl		r0, r1, #0x14
	lsr		r0, r0, #0x17
	add		r0, #0x80
	mov		r9, r0
	ldr		r2, _0802e038
	lsl		r1, r1, #0x19
	asr		r0, r1, #0x10
	cmp		r0, #0x0
	bge		_0802df76
	add		r0, #0x3f
_0802df76:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0802df88
	ldr		r1, _0802e03c
	add		r0, r0, r1
_0802df88:
	asr		r0, r0, #0xe
	add		r6, r0, #0x0
	add		r6, #0x20
_0802df8e:
	ldr		r2, [sp, #0xC]
	lsl		r0, r2, #0x10
	asr		r2, r0, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0802df9c
	add		r0, #0xff
_0802df9c:
	asr		r5, r0, #0x8
	lsl		r0, r5, #0x1
	add		r0, r9
	ldrh	r1, [r7, #0x12]
	strh	r0, [r7, #0x12]
	add		r0, r6, #0x0
	sub		r0, #0xa
	ldrh	r1, [r7, #0x14]
	strh	r0, [r7, #0x14]
	ldr		r0, _0802e040
	add		r0, r10
	str		r3, [r0, #0x0]
	mov		r0, #0xa7
	lsl		r0, r0, #0x3
	add		r0, r10
	str		r4, [r0, #0x0]
	mov		r3, r8
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0802dfc6
	add		r0, #0x7f
_0802dfc6:
	asr		r0, r0, #0x7
	ldrh	r1, [r7, #0x16]
	strh	r0, [r7, #0x16]
	ldrh	r0, [r7, #0x18]
	mov		r0, #0x26
	strh	r0, [r7, #0x18]
	mov		r4, #0xa8
	lsl		r4, r4, #0x3
	add		r0, r3, r4
	str		r5, [r0, #0x0]
	ldr		r0, _0802e044
	add		r0, r8
	ldr		r6, [r0, #0x0]
	mov		r0, #0xad
	lsl		r0, r0, #0x3
	add		r0, r8
	ldr		r5, [r0, #0x0]
	add		r6, #0x1
	cmp		r6, #0x1
	ble		_0802dff8
	mov		r6, #0x0
	add		r5, #0x1
	cmp		r5, #0x3
	bls		_0802dff8
	mov		r5, #0x0
_0802dff8:
	ldr		r1, _0802e048
	lsl		r0, r5, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x54
	add		r0, r4, #0x0
	mov		r2, #0x4
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r0, _0802e04c
	ldr		r2, _0802e044
	add		r1, r0, r2
	str		r6, [r1, #0x0]
	mov		r4, #0xad
	lsl		r4, r4, #0x3
	add		r0, r0, r4
	str		r5, [r0, #0x0]
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802e038:	.4byte 0x08101068
_0802e03c:	.4byte 0x00003FFF
_0802e040:	.4byte 0x00000534
_0802e044:	.4byte 0x00000564
_0802e048:	.4byte 0x08102cd8
_0802e04c:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_0802dd08

	thumb_func_start sub_0802e050
sub_0802e050:
	push	{ r4, lr }
	ldr		r4, _0802e088
	ldr		r1, _0802e08c
	mov		r0, #0x17
	bl		sub_08029fcc
	mov		r2, #0xa9
	lsl		r2, r2, #0x3
	add		r1, r4, r2
	str		r0, [r1, #0x0]
	mov		r1, #0xac
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	add		r2, #0x1c
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	ldr		r0, [r4, #0x24]
	mov		r1, #0x1
	orr		r0, r1
	str		r0, [r4, #0x24]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0802e088:	.4byte RunGameLogic_CallBack
_0802e08c:	.4byte 0x0802e091
	sub		sp, #0x4
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0x0]
	ldr		r1, _0802e0bc
	cmp		r0, #0x31
	bgt		_0802e0aa
_0802e09e:
	ldr		r0, [sp, #0x0]
	add		r0, #0x1
	str		r0, [sp, #0x0]
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x31
	ble		_0802e09e
_0802e0aa:
	ldr		r0, _0802e0c0
	mov		r2, #0xa8
	lsl		r2, r2, #0x3
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	strh	r1, [r0, #0x0]
	add		sp, #0x4
	bx		lr

.incbin "base.gba", 0x2E0BA, 0x2

_0802e0bc:	.4byte RunGameLogic_CallBack
_0802e0c0:	.4byte BG3X_Offset
	thumb_func_end sub_0802e050

	thumb_func_start sub_0802e0c4
sub_0802e0c4:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	ldr		r2, _0802e130
	ldr		r0, _0802e134
	add		r4, r2, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	ldrh	r1, [r0, #0x0]
	ldr		r0, _0802e138
	and		r0, r1
	ldrh	r1, [r4, #0x0]
	mov		r3, #0x0
	strh	r0, [r4, #0x0]
	ldrh	r0, [r4, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r4, #0x0]
	orr		r0, r3
	strh	r0, [r4, #0x0]
	ldrh	r0, [r4, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x2
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r4, #0x0]
	orr		r0, r3
	strh	r0, [r4, #0x0]
	ldrh	r0, [r4, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x3
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r4, #0x0]
	orr		r0, r3
	strh	r0, [r4, #0x0]
	ldr		r1, _0802e13c
	add		r0, r2, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_0802e140
	ldrh	r0, [r4, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x4
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r4, #0x0]
	orr		r0, r3
	strh	r0, [r4, #0x0]
	b		_0802e14a

.incbin "base.gba", 0x2E12E, 0x2

_0802e130:	.4byte RunGameLogic_CallBack
_0802e134:	.4byte 0x0000057C
_0802e138:	.4byte 0x0000FFF8
_0802e13c:	.4byte 0x0000080D

_0802e140:
	ldrh	r0, [r4, #0x0]
	ldr		r1, _0802e24c
	and		r1, r0
	ldrh	r0, [r4, #0x0]
	strh	r1, [r4, #0x0]
_0802e14a:
	mov		r0, #0x0
	str		r0, [r4, #0x4]
	ldr		r0, _0802e250
	str		r0, [sp, #0x0]
	ldr		r0, _0802e254
	str		r0, [sp, #0x4]
	ldr		r0, _0802e258
	str		r0, [sp, #0x8]
	mov		r0, sp
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0x8]
	strh	r0, [r4, #0x8]
	add		r0, sp, #0x4
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xa]
	strh	r0, [r4, #0xa]
	add		r0, sp, #0x8
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	lsl		r0, r5, #0x10
	asr		r3, r0, #0x10
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_0802e17e
	add		r0, #0x3f
_0802e17e:
	asr		r0, r0, #0x6
	ldrh	r1, [r4, #0xe]
	strh	r0, [r4, #0xe]
	ldrh	r0, [r4, #0x10]
	mov		r5, #0x26
	strh	r5, [r4, #0x10]
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_0802e192
	add		r0, #0x7f
_0802e192:
	asr		r0, r0, #0x7
	ldrh	r1, [r4, #0x12]
	strh	r0, [r4, #0x12]
	ldrh	r0, [r4, #0x14]
	strh	r5, [r4, #0x14]
	add		r0, r3, #0x0
	cmp		r0, #0x0
	bge		_0802e1a4
	add		r0, #0xff
_0802e1a4:
	asr		r0, r0, #0x8
	ldrh	r1, [r4, #0x16]
	strh	r0, [r4, #0x16]
	ldrh	r0, [r4, #0x18]
	strh	r5, [r4, #0x18]
	ldr		r1, _0802e25c
	add		r0, r2, r1
	ldr		r6, [r0, #0x0]
	add		r1, #0x4
	add		r0, r2, r1
	ldr		r5, [r0, #0x0]
	add		r6, #0x1
	cmp		r6, #0xf
	ble		_0802e1ca
	mov		r6, #0x0
	add		r5, #0x1
	cmp		r5, #0xb
	bls		_0802e1ca
	mov		r5, #0x0
_0802e1ca:
	ldr		r1, _0802e260
	lsl		r0, r5, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xee
	add		r0, r4, #0x0
	mov		r2, #0x9
	bl		sub_08071b6c
	ldr		r1, _0802e264
	ldr		r2, _0802e25c
	add		r0, r1, r2
	str		r6, [r0, #0x0]
	mov		r6, #0xa8
	lsl		r6, r6, #0x3
	add		r0, r1, r6
	str		r5, [r0, #0x0]
	add		r2, #0x8
	add		r0, r1, r2
	ldr		r6, [r0, #0x0]
	mov		r0, #0xa9
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	ldr		r5, [r1, #0x0]
	add		r6, #0x1
	cmp		r6, #0xf
	ble		_0802e212
	mov		r6, #0x0
	add		r5, #0x1
	cmp		r5, #0xb
	bls		_0802e212
	mov		r5, #0x0
_0802e212:
	ldr		r1, _0802e268
	lsl		r0, r5, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xc0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	ldr		r0, _0802e264
	ldr		r2, _0802e26c
	add		r1, r0, r2
	str		r6, [r1, #0x0]
	mov		r6, #0xa9
	lsl		r6, r6, #0x3
	add		r0, r0, r6
	str		r5, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	add		sp, #0xc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2E24A, 0x2

_0802e24c:	.4byte 0x0000F7FF
_0802e250:	.4byte 0x00000F07
_0802e254:	.4byte 0x00000E07
_0802e258:	.4byte 0x00000D07
_0802e25c:	.4byte 0x0000053C
_0802e260:	.4byte 0x08102d3c
_0802e264:	.4byte RunGameLogic_CallBack
_0802e268:	.4byte 0x08102d6c
_0802e26c:	.4byte 0x00000544

.incbin "base.gba", 0x2E270, 0x3B0
_0802e620:	.4byte 0x0802e640

.incbin "base.gba", 0x2E624, 0x1C

_0802e640:
.incbin "base.gba", 0x2E640, 0x4
.incbin "base.gba", 0x2E644, 0x4

.incbin "base.gba", 0x2E648, 0x4
	thumb_func_end sub_0802e0c4


.incbin "base.gba", 0x2E64C, 0xE

_0802e65a:

.incbin "base.gba", 0x2E65A, 0x8
_0802e662:

.incbin "base.gba", 0x2E662, 0x8
_0802e66a:

.incbin "base.gba", 0x2E66A, 0x8
_0802e672:

.incbin "base.gba", 0x2E672, 0x8
_0802e67a:

.incbin "base.gba", 0x2E67A, 0x3CA
	thumb_func_start sub_0802ea44
sub_0802ea44:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r2, #0x0
	add		r7, r3, #0x0
	ldr		r5, _0802ea84
	lsl		r4, r0, #0x3
	add		r2, r4, r5
	mov		r3, #0x3
_0802ea52:
	ldrh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	add		r1, #0x2
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0802ea52
	add		r2, r5, #0x6
	add		r2, r4, r2
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0802ea88
	and		r0, r1
	lsl		r1, r6, #0xa
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r1, r5, #0x4
	add		r1, r4, r1
	lsl		r0, r7, #0xc
	ldrh	r2, [r1, #0x0]
	orr		r0, r2
	strh	r0, [r1, #0x0]
	add		r0, r4, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0802ea84:	.4byte 0x030021A0
_0802ea88:	.4byte 0x0000F3FF
	thumb_func_end sub_0802ea44

	thumb_func_start sub_0802ea8c
sub_0802ea8c:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	ldr		r2, _0802eaf8
	ldr		r0, _0802eafc
	add		r3, r2, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	ldrh	r1, [r0, #0x0]
	ldr		r0, _0802eb00
	and		r0, r1
	ldrh	r1, [r3, #0x0]
	mov		r4, #0x0
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x2
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x3
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldr		r0, _0802eb04
	add		r2, r2, r0
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x2
	beq		_0802eb08
	ldrh	r0, [r3, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	b		_0802eb12

.incbin "base.gba", 0x2EAF6, 0x2

_0802eaf8:	.4byte RunGameLogic_CallBack
_0802eafc:	.4byte 0x0000057C
_0802eb00:	.4byte 0x0000FFF8
_0802eb04:	.4byte 0x0000080D

_0802eb08:
	ldrh	r0, [r3, #0x0]
	ldr		r1, _0802eb80
	and		r1, r0
	ldrh	r0, [r3, #0x0]
	strh	r1, [r3, #0x0]
_0802eb12:
	mov		r0, #0x0
	str		r0, [r3, #0x4]
	ldr		r0, _0802eb84
	str		r0, [sp, #0x0]
	ldr		r0, _0802eb88
	str		r0, [sp, #0x4]
	ldr		r0, _0802eb8c
	str		r0, [sp, #0x8]
	mov		r0, sp
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0x8]
	strh	r0, [r3, #0x8]
	add		r0, sp, #0x4
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0xa]
	strh	r0, [r3, #0xa]
	add		r0, sp, #0x8
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0xc]
	strh	r0, [r3, #0xc]
	lsl		r0, r5, #0x10
	asr		r2, r0, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0802eb46
	add		r0, #0x3f
_0802eb46:
	asr		r0, r0, #0x6
	ldrh	r1, [r3, #0xe]
	strh	r0, [r3, #0xe]
	ldrh	r0, [r3, #0x10]
	mov		r4, #0x26
	strh	r4, [r3, #0x10]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0802eb5a
	add		r0, #0x7f
_0802eb5a:
	asr		r0, r0, #0x7
	sub		r0, #0x28
	ldrh	r1, [r3, #0x12]
	strh	r0, [r3, #0x12]
	ldrh	r0, [r3, #0x14]
	strh	r4, [r3, #0x14]
	add		r0, r2, #0x0
	cmp		r0, #0x0
	bge		_0802eb6e
	add		r0, #0xff
_0802eb6e:
	asr		r0, r0, #0x8
	ldrh	r1, [r3, #0x16]
	strh	r0, [r3, #0x16]
	ldrh	r0, [r3, #0x18]
	strh	r4, [r3, #0x18]
	add		sp, #0xc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0802eb80:	.4byte 0x0000F7FF
_0802eb84:	.4byte 0x00000F07
_0802eb88:	.4byte 0x00000E07
_0802eb8c:	.4byte 0x00000D07
	thumb_func_end sub_0802ea8c

	thumb_func_start sub_0802eb90
sub_0802eb90:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	ldr		r4, _0802ec68
	ldr		r1, _0802ec6c
	add		r0, r4, r1
	ldrh	r7, [r0, #0x14]
	ldr		r2, _0802ec70
	add		r0, r4, r2
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	mov		r3, #0x24
	add		r3, r3, r4
	mov		r10, r3
	ldr		r6, _0802ec74
	add		r0, r4, r6
	ldr		r5, [r0, #0x0]
	mov		r0, #0xaa
	mul		r0, r5
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	bl		sub_0807d80c
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r3, _0802ec78
	ldr		r1, [sp, #0x8]
	and		r1, r3
	orr		r1, r0
	str		r1, [sp, #0x8]
	add		r0, sp, #0x8
	ldrh	r0, [r0, #0x0]
	mov		r6, #0x8a
	lsl		r6, r6, #0x1
	add		r2, r0, r6
	lsl		r0, r7, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0802ebe6
	add		r0, #0x7f
_0802ebe6:
	asr		r0, r0, #0x7
	sub		r0, r2, r0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	add		r2, r3, #0x0
	and		r2, r1
	orr		r2, r0
	str		r2, [sp, #0x8]
	ldr		r3, _0802ec7c
	lsl		r0, r5, #0x19
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0802ec02
	add		r0, #0x3f
_0802ec02:
	asr		r0, r0, #0x6
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	sub		r0, r6, r0
	ldr		r1, _0802ec80
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x3
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	sub		r0, r0, r1
	asr		r0, r0, #0xf
	mov		r9, r0
	add		r0, #0x48
	add		r0, r8
	lsl		r0, r0, #0x10
	ldr		r1, _0802ec84
	and		r2, r1
	orr		r2, r0
	str		r2, [sp, #0x8]
	add		r5, #0x1
	ldr		r0, _0802ec88
	cmp		r5, r0
	ble		_0802ec38
	mov		r5, #0x0
_0802ec38:
	ldr		r1, _0802ec8c
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	lsl		r4, r5, #0x9
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	add		r4, r4, r2
	cmp		r0, #0x9
	bgt		_0802ec98
	ldr		r1, _0802ec90
	mov		r0, #0x0
	mov		r2, #0x3
	mov		r3, #0x0
	bl		sub_0802ea44
	str		r4, [sp, #0x0]
	ldr		r1, _0802ec94
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	add		r2, r6, #0x0
	add		r3, r6, #0x0
	bl		sub_0802951c
	b		_0802ecb4

_0802ec68:	.4byte RunGameLogic_CallBack
_0802ec6c:	.4byte 0x00000848
_0802ec70:	.4byte 0x00000BC8
_0802ec74:	.4byte 0x0000053C
_0802ec78:	.4byte 0xffff0000
_0802ec7c:	.4byte 0x08101068
_0802ec80:	.4byte 0x000003FF
_0802ec84:	.4byte 0x0000FFFF
_0802ec88:	.4byte 0x0000017F
_0802ec8c:	.4byte 0x0000055C
_0802ec90:	.4byte 0x0809839c
_0802ec94:	.4byte 0x08102de4

_0802ec98:
	ldr		r1, _0802ed28
	mov		r0, #0x0
	mov		r2, #0x3
	mov		r3, #0x0
	bl		sub_0802ea44
	str		r4, [sp, #0x0]
	ldr		r1, _0802ed2c
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	add		r2, r6, #0x0
	add		r3, r6, #0x0
	bl		sub_0802951c
_0802ecb4:
	mov		r3, r9
	cmp		r3, #0x0
	bne		_0802ecec
	mov		r2, #0xa5
	lsl		r2, r2, #0x3
	add		r2, r10
	lsl		r0, r7, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0802ecca
	add		r0, #0x7f
_0802ecca:
	asr		r0, r0, #0x7
	lsl		r0, r0, #0x10
	add		r1, sp, #0x8
	mov		r6, #0x0
	ldrsh	r1, [r1, r6]
	orr		r0, r1
	str		r0, [r2, #0x0]
	ldr		r1, _0802ed30
	add		r1, r10
	mov		r0, r8
	add		r0, #0x40
	str		r0, [r1, #0x0]
	ldr		r1, _0802ed34
	mov		r0, #0x0
	mov		r2, #0x0
	bl		sub_08029d24
_0802ecec:
	mov		r0, #0xa3
	lsl		r0, r0, #0x3
	add		r0, r10
	str		r5, [r0, #0x0]
	ldr		r0, _0802ed38
	mov		r2, #0xa8
	lsl		r2, r2, #0x3
	add		r1, r0, r2
	ldr		r4, [r1, #0x0]
	ldr		r3, _0802ed3c
	add		r1, r0, r3
	ldr		r5, [r1, #0x0]
	mov		r6, #0xa9
	lsl		r6, r6, #0x3
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	mov		r10, r0
	mov		r0, #0x0
	str		r0, [sp, #0x10]
	mov		r9, r0
	mov		r1, #0x0
	str		r1, [sp, #0x14]
	cmp		r5, #0x7
	bls		_0802ed1e
	b		_0802efce
_0802ed1e:
	lsl		r0, r5, #0x2
	ldr		r1, _0802ed40
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0802ed28:	.4byte 0x080983a4
_0802ed2c:	.4byte 0x08102de4
_0802ed30:	.4byte 0x0000052C
_0802ed34:	.4byte 0x08102e2c
_0802ed38:	.4byte RunGameLogic_CallBack
_0802ed3c:	.4byte 0x00000544
_0802ed40:	.4byte 0x0802ed44
_0802ed44:	.4byte 0x0802ed64

.incbin "base.gba", 0x2ED48, 0x1C
	thumb_func_end sub_0802eb90


.incbin "base.gba", 0x2ED64, 0x26A

_0802efce:

.incbin "base.gba", 0x2EFCE, 0x3E
_0802f00c:	.4byte 0x030031C4
_0802f010:	.4byte 0x0809839c
_0802f014:	.4byte 0x08102de4

_0802f018:

.incbin "base.gba", 0x2F018, 0x20
_0802f038:

.incbin "base.gba", 0x2F038, 0x28
_0802f060:

.incbin "base.gba", 0x2F060, 0x14
_0802f074:	.4byte 0x080983a4
_0802f078:	.4byte 0x08102de4
_0802f07c:	.4byte 0x030031C4
_0802f080:	.4byte 0x0000051C
_0802f084:	.4byte 0x00000524
	thumb_func_start sub_0802f088
sub_0802f088:
	push	{ r4, r5, r6, r7, lr }
	add		r3, r0, #0x0
	ldr		r0, [r3, #0x68]
	add		r6, r3, #0x0
	ldr		r2, _0802f0b0
	ldr		r4, _0802f0b4
	add		r1, r2, r4
	ldrh	r5, [r1, #0x14]
	ldr		r7, _0802f0b8
	add		r1, r2, r7
	ldr		r1, [r1, #0x0]
	mov		r12, r1
	cmp		r0, #0x0
	bne		_0802f0c0
	ldr		r0, _0802f0bc
	add		r1, r2, r0
	ldrh	r4, [r1, #0x0]
	mov		r7, #0xaa
	lsl		r7, r7, #0x3
	b		_0802f0ca

_0802f0b0:	.4byte RunGameLogic_CallBack
_0802f0b4:	.4byte 0x00000848
_0802f0b8:	.4byte 0x00000BC8
_0802f0bc:	.4byte 0x0000054C

_0802f0c0:
	ldr		r4, _0802f0f8
	add		r1, r2, r4
	ldrh	r4, [r1, #0x0]
	mov		r7, #0xab
	lsl		r7, r7, #0x3
_0802f0ca:
	add		r0, r2, r7
	ldr		r2, [r0, #0x0]
	mov		r0, #0x2
	ldrsh	r1, [r1, r0]
	lsl		r0, r5, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0802f0dc
	add		r0, #0x7f
_0802f0dc:
	asr		r0, r0, #0x7
	sub		r0, r1, r0
	add		r0, r4, r0
	strh	r0, [r6, #0x20]
	mov		r1, r12
	add		r0, r2, r1
	strh	r0, [r6, #0x22]
	ldrh	r1, [r3, #0x34]
	mov		r0, #0x1
	orr		r0, r1
	strh	r0, [r3, #0x34]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0802f0f8:	.4byte 0x00000554
	thumb_func_end sub_0802f088

	thumb_func_start sub_0802f0fc
sub_0802f0fc:
	push	{ r4, lr }
	ldr		r4, _0802f130
	mov		r1, #0xe8
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	bl		sub_08049164
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_0802f12a
	add		r1, r2, #0x0
	add		r1, #0x4c
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r1, _0802f134
	add		r0, r4, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_0802f12a
	ldr		r0, _0802f138
	str		r0, [r2, #0x14]
_0802f12a:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0802f130:	.4byte RunGameLogic_CallBack
_0802f134:	.4byte 0x000007FE
_0802f138:	.4byte 0x0802EB91
	thumb_func_end sub_0802f0fc

	thumb_func_start sub_0802f13c
sub_0802f13c:
	push	{ r4, lr }
	ldr		r4, _0802f1a8
	mov		r1, #0xe8
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	bl		sub_08049164
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_0802f15a
	add		r0, #0x4c
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r0, _0802f1ac
	str		r0, [r2, #0x14]
_0802f15a:
	ldr		r2, _0802f1b0
	add		r0, r4, r2
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	sub		r2, #0x14
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	add		r2, #0x14
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	ldr		r0, [r4, #0x24]
	mov		r1, #0x1
	orr		r0, r1
	str		r0, [r4, #0x24]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2F1A6, 0x2

_0802f1a8:	.4byte RunGameLogic_CallBack
_0802f1ac:	.4byte sub_0802f2cc
_0802f1b0:	.4byte 0x00000544
	thumb_func_end sub_0802f13c

	thumb_func_start sub_0802f1b4
sub_0802f1b4:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	ldr		r2, _0802f220
	ldr		r0, _0802f224
	add		r3, r2, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	ldrh	r1, [r0, #0x0]
	ldr		r0, _0802f228
	and		r0, r1
	ldrh	r1, [r3, #0x0]
	mov		r4, #0x0
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x2
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x3
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldr		r0, _0802f22c
	add		r2, r2, r0
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x2
	beq		_0802f230
	ldrh	r0, [r3, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	b		_0802f23a

.incbin "base.gba", 0x2F21E, 0x2

_0802f220:	.4byte RunGameLogic_CallBack
_0802f224:	.4byte 0x0000057C
_0802f228:	.4byte 0x0000FFF8
_0802f22c:	.4byte 0x0000080D

_0802f230:
	ldrh	r0, [r3, #0x0]
	ldr		r1, _0802f2b8
	and		r1, r0
	ldrh	r0, [r3, #0x0]
	strh	r1, [r3, #0x0]
_0802f23a:
	mov		r0, #0x0
	str		r0, [r3, #0x4]
	ldr		r0, _0802f2bc
	str		r0, [sp, #0x0]
	ldr		r0, _0802f2c0
	str		r0, [sp, #0x4]
	ldr		r0, _0802f2c4
	str		r0, [sp, #0x8]
	mov		r0, sp
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0x8]
	strh	r0, [r3, #0x8]
	add		r0, sp, #0x4
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0xa]
	strh	r0, [r3, #0xa]
	add		r0, sp, #0x8
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0xc]
	strh	r0, [r3, #0xc]
	lsl		r0, r5, #0x10
	asr		r2, r0, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0802f26e
	add		r0, #0x3f
_0802f26e:
	asr		r0, r0, #0x6
	sub		r0, #0x28
	ldrh	r1, [r3, #0xe]
	strh	r0, [r3, #0xe]
	ldrh	r0, [r3, #0x10]
	mov		r4, #0x26
	strh	r4, [r3, #0x10]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0802f284
	add		r0, #0x7f
_0802f284:
	asr		r0, r0, #0x7
	ldrh	r1, [r3, #0x12]
	strh	r0, [r3, #0x12]
	ldrh	r0, [r3, #0x14]
	strh	r4, [r3, #0x14]
	add		r0, r2, #0x0
	cmp		r0, #0x0
	bge		_0802f296
	add		r0, #0xff
_0802f296:
	asr		r0, r0, #0x8
	ldrh	r1, [r3, #0x16]
	strh	r0, [r3, #0x16]
	ldrh	r0, [r3, #0x18]
	strh	r4, [r3, #0x18]
	ldrh	r0, [r3, #0x4]
	mov		r0, #0xfd
	lsl		r0, r0, #0x6
	strh	r0, [r3, #0x4]
	ldrh	r0, [r3, #0x6]
	ldr		r0, _0802f2c8
	strh	r0, [r3, #0x6]
	add		sp, #0xc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2F2B6, 0x2

_0802f2b8:	.4byte 0x0000F7FF
_0802f2bc:	.4byte 0x00000F07
_0802f2c0:	.4byte 0x00004D07
_0802f2c4:	.4byte 0x00000C07
_0802f2c8:	.4byte 0x00001004
	thumb_func_end sub_0802f1b4

	thumb_func_start sub_0802f2cc
sub_0802f2cc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x30
	ldr		r0, _0802f364
	ldr		r1, _0802f368
	add		r1, r1, r0
	mov		r9, r1
	ldr		r3, _0802f36c
	add		r2, r0, r3
	ldr		r5, _0802f370
	add		r1, r0, r5
	ldr		r4, [r1, #0x0]
	ldr		r1, _0802f374
	add		r6, r0, r1
	ldr		r5, [r6, #0x0]
	ldrh	r3, [r2, #0x14]
	mov		r10, r3
	mov		r3, #0x14
	ldrsh	r1, [r2, r3]
	add		r7, r0, #0x0
	cmp		r1, #0x0
	bge		_0802f300
	add		r1, #0xff
_0802f300:
	asr		r0, r1, #0x8
	mov		r1, #0xed
	sub		r1, r1, r0
	mov		r0, #0xff
	and		r1, r0
	mov		r0, #0xab
	lsl		r0, r0, #0x3
	add		r3, r7, r0
	ldr		r2, [r3, #0x0]
	sub		r0, r5, r1
	cmp		r0, #0x0
	bge		_0802f31a
	neg		r0, r0
_0802f31a:
	cmp		r0, #0x80
	ble		_0802f322
	mov		r0, #0x1
	sub		r2, r0, r2
_0802f322:
	str		r1, [r6, #0x0]
	str		r2, [r3, #0x0]
	ldr		r1, _0802f378
	add		r0, r7, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802f336
	b		_0802f5b8
_0802f336:
	cmp		r2, #0x0
	bne		_0802f33c
	b		_0802f5b8
_0802f33c:
	ldr		r2, _0802f37c
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	mov		r3, #0xa8
	lsl		r3, r3, #0x3
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0xC]
	ldr		r5, _0802f380
	add		r0, r7, r5
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x3
	beq		_0802f390
	cmp		r0, #0x3
	bgt		_0802f384
	cmp		r0, #0x0
	beq		_0802f38a
	b		_0802f39c

.incbin "base.gba", 0x2F362, 0x2

_0802f364:	.4byte RunGameLogic_CallBack
_0802f368:	.4byte 0x0000057C
_0802f36c:	.4byte 0x00000848
_0802f370:	.4byte 0x00000BC8
_0802f374:	.4byte 0x00000554
_0802f378:	.4byte 0x000007FE
_0802f37c:	.4byte 0x0000053C
_0802f380:	.4byte 0x00000C08

_0802f384:
	cmp		r0, #0x5
	beq		_0802f396
	b		_0802f39c
_0802f38a:
	mov		r0, #0x0
	mov		r8, r0
	b		_0802f39c
_0802f390:
	mov		r1, #0x1
	add		r8, r1
	b		_0802f39c
_0802f396:
	mov		r2, #0x2
	neg		r2, r2
	add		r8, r2
_0802f39c:
	mov		r0, r8
	mov		r1, #0x30
	bl		sub_0807d80c
	mov		r1, #0x26
	sub		r1, r1, r0
	mov		r3, r9
	ldrh	r0, [r3, #0x18]
	strh	r1, [r3, #0x18]
	mov		r0, r8
	cmp		r0, #0x0
	bge		_0802f3b6
	add		r0, #0x1f
_0802f3b6:
	asr		r0, r0, #0x5
	add		r0, r0, r4
	cmp		r0, #0x1
	bgt		_0802f3c0
	b		_0802f5a0
_0802f3c0:
	ldr		r5, _0802f56c
	mov		r1, #0xa4
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	mov		r9, r0
	ldr		r2, _0802f570
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x10]
	mov		r3, #0xa5
	lsl		r3, r3, #0x3
	add		r0, r5, r3
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x14]
	add		r1, #0xc
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x18]
	add		r2, r5, #0x0
	ldr		r3, _0802f574
	add		r0, r2, r3
	ldr		r3, [r0, #0x0]
	mov		r5, r10
	lsl		r0, r5, #0x10
	asr		r1, r0, #0x10
	str		r0, [sp, #0x28]
	cmp		r1, #0x0
	bge		_0802f3fc
	add		r1, #0xff
_0802f3fc:
	asr		r1, r1, #0x8
	mov		r0, #0xed
	sub		r0, r0, r1
	mov		r1, #0xff
	and		r0, r1
	sub		r4, #0x3
	mov		r5, #0x20
	ldrsh	r2, [r3, r5]
	and		r2, r1
	mov		r5, #0x22
	ldrsh	r1, [r3, r5]
	sub		r0, r0, r2
	sub		r1, r4, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_08028738
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r2, #0x80
	lsl		r2, r2, #0x7
	add		r1, r0, r2
	ldr		r0, _0802f578
	and		r1, r0
	str		r4, [sp, #0x24]
	ldr		r0, [sp, #0xC]
	cmp		r0, #0x0
	bne		_0802f448
	mov		r3, #0xa0
	lsl		r3, r3, #0x6
	str		r3, [sp, #0x18]
	cmp		r1, r2
	ble		_0802f448
	mov		r5, #0xb0
	lsl		r5, r5, #0x7
	str		r5, [sp, #0x18]
_0802f448:
	ldr		r0, [sp, #0xC]
	add		r0, #0x1
	str		r0, [sp, #0xC]
	ldr		r1, [sp, #0x10]
	add		r1, #0x1
	str		r1, [sp, #0x10]
	ldr		r0, _0802f57c
	mov		r2, r9
	lsl		r1, r2, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	ldr		r3, [sp, #0x10]
	cmp		r3, r0
	ble		_0802f47c
	mov		r5, #0x0
	str		r5, [sp, #0x10]
	mov		r0, #0x1
	add		r9, r0
	mov		r1, r9
	cmp		r1, #0x11
	bls		_0802f474
	mov		r9, r5
_0802f474:
	mov		r0, #0x1
	ldr		r2, [sp, #0x14]
	sub		r2, r0, r2
	str		r2, [sp, #0x14]
_0802f47c:
	ldr		r3, [sp, #0x14]
	cmp		r3, #0x0
	bne		_0802f540
	mov		r7, #0x0
	ldr		r5, [sp, #0x18]
	lsl		r5, r5, #0x10
	str		r5, [sp, #0x20]
	mov		r0, sp
	add		r0, #0x8
	str		r0, [sp, #0x1C]
	mov		r1, #0x0
	str		r1, [sp, #0x2C]
	mov		r10, r1
_0802f496:
	ldr		r3, [sp, #0x20]
	asr		r2, r3, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0802f4a2
	add		r0, #0x3f
_0802f4a2:
	asr		r3, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r4, _0802f580
	and		r0, r4
	lsl		r0, r0, #0x2
	ldr		r5, _0802f584
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, r10
	mul		r1, r0
	add		r0, r1, #0x0
	asr		r1, r0, #0xf
	ldr		r5, [sp, #0x28]
	asr		r0, r5, #0x10
	cmp		r0, #0x0
	bge		_0802f4c8
	add		r0, #0xff
_0802f4c8:
	asr		r0, r0, #0x8
	sub		r0, #0xed
	sub		r0, r1, r0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r6, _0802f588
	ldr		r5, [sp, #0x8]
	and		r5, r6
	orr		r5, r0
	str		r5, [sp, #0x8]
	add		r0, r3, #0x0
	and		r0, r4
	lsl		r0, r0, #0x2
	ldr		r1, _0802f584
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	ldr		r0, [sp, #0x2C]
	mov		r1, #0x17
	bl		sub_0807d80c
	add		r1, r0, #0x0
	mul		r1, r4
	asr		r1, r1, #0xf
	ldr		r2, [sp, #0x24]
	add		r1, r1, r2
	lsl		r1, r1, #0x10
	ldr		r0, _0802f578
	and		r0, r5
	orr		r0, r1
	str		r0, [sp, #0x8]
	ldr		r3, [sp, #0x1C]
	ldrb	r1, [r3, #0x0]
	and		r0, r6
	orr		r0, r1
	str		r0, [sp, #0x8]
	ldr		r1, _0802f58c
	lsl		r0, r7, #0x2
	add		r0, r0, r1
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x0
	beq		_0802f52c
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	ldr		r0, _0802f590
	str		r0, [sp, #0x4]
	ldr		r0, _0802f594
	add		r1, sp, #0x8
	add		r2, r3, #0x0
	bl		sub_0802951c
_0802f52c:
	ldr		r5, [sp, #0x2C]
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r5, r5, r0
	str		r5, [sp, #0x2C]
	mov		r1, #0x1e
	add		r10, r1
	add		r7, #0x1
	cmp		r7, #0x5
	bls		_0802f496
_0802f540:
	ldr		r2, _0802f56c
	mov		r3, #0xa4
	lsl		r3, r3, #0x3
	add		r0, r2, r3
	mov		r5, r9
	str		r5, [r0, #0x0]
	ldr		r1, _0802f570
	add		r0, r2, r1
	ldr		r2, [sp, #0x10]
	str		r2, [r0, #0x0]
	ldr		r3, _0802f56c
	mov		r5, #0xa5
	lsl		r5, r5, #0x3
	add		r0, r3, r5
	ldr		r1, [sp, #0x14]
	str		r1, [r0, #0x0]
	ldr		r2, _0802f598
	add		r0, r3, r2
	ldr		r3, [sp, #0x18]
	str		r3, [r0, #0x0]
	ldr		r7, _0802f59c
	b		_0802f5a4

_0802f56c:	.4byte 0x030031C4
_0802f570:	.4byte 0x00000524
_0802f574:	.4byte 0x00000814
_0802f578:	.4byte 0x0000FFFF
_0802f57c:	.4byte 0x08102eac
_0802f580:	.4byte 0x000003FF
_0802f584:	.4byte 0x08101068
_0802f588:	.4byte 0xffff0000
_0802f58c:	.4byte 0x08102e94
_0802f590:	.4byte 0x08102e8c
_0802f594:	.4byte 0x08102ef4
_0802f598:	.4byte 0x0000052C
_0802f59c:	.4byte RunGameLogic_CallBack

_0802f5a0:
	mov		r5, #0x0
	str		r5, [sp, #0xC]
_0802f5a4:
	ldr		r1, _0802f618
	mov		r2, #0xa3
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	mov		r3, r8
	str		r3, [r0, #0x0]
	ldr		r5, _0802f61c
	add		r0, r1, r5
	ldr		r1, [sp, #0xC]
	str		r1, [r0, #0x0]
_0802f5b8:
	ldr		r2, _0802f620
	add		r0, r7, r2
	ldr		r6, [r0, #0x0]
	mov		r3, #0xac
	lsl		r3, r3, #0x3
	add		r0, r7, r3
	ldr		r5, [r0, #0x0]
	add		r6, #0x1
	cmp		r6, #0x5
	ble		_0802f5d6
	mov		r6, #0x0
	add		r5, #0x1
	cmp		r5, #0x7
	bls		_0802f5d6
	mov		r5, #0x0
_0802f5d6:
	ldr		r1, _0802f624
	lsl		r0, r5, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x42
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r0, _0802f628
	ldr		r2, _0802f620
	add		r1, r0, r2
	str		r6, [r1, #0x0]
	mov		r3, #0xac
	lsl		r3, r3, #0x3
	add		r0, r0, r3
	str		r5, [r0, #0x0]
	add		sp, #0x30
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2F616, 0x2

_0802f618:	.4byte 0x030031C4
_0802f61c:	.4byte 0x0000051C
_0802f620:	.4byte 0x0000055C
_0802f624:	.4byte 0x08102e6c
_0802f628:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_0802f2cc

	thumb_func_start sub_0802f62c
sub_0802f62c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0xc
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	ldr		r2, _0802f69c
	ldr		r0, _0802f6a0
	add		r4, r2, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	ldrh	r1, [r0, #0x0]
	ldr		r0, _0802f6a4
	and		r0, r1
	ldrh	r1, [r4, #0x0]
	mov		r3, #0x0
	strh	r0, [r4, #0x0]
	ldrh	r0, [r4, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r4, #0x0]
	orr		r0, r3
	strh	r0, [r4, #0x0]
	ldrh	r0, [r4, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x3
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r4, #0x0]
	orr		r0, r3
	strh	r0, [r4, #0x0]
	ldrh	r0, [r4, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x4
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r4, #0x0]
	orr		r0, r3
	strh	r0, [r4, #0x0]
	ldr		r1, _0802f6a8
	add		r0, r2, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_0802f6ac
	ldrh	r0, [r4, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x2
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r4, #0x0]
	orr		r0, r3
	strh	r0, [r4, #0x0]
	b		_0802f6b6

.incbin "base.gba", 0x2F69A, 0x2

_0802f69c:	.4byte RunGameLogic_CallBack
_0802f6a0:	.4byte 0x0000057C
_0802f6a4:	.4byte 0x0000FFF8
_0802f6a8:	.4byte 0x0000080D

_0802f6ac:
	ldrh	r0, [r4, #0x0]
	ldr		r1, _0802f728
	and		r1, r0
	ldrh	r0, [r4, #0x0]
	strh	r1, [r4, #0x0]
_0802f6b6:
	mov		r0, #0x0
	str		r0, [r4, #0x4]
	ldr		r0, _0802f72c
	str		r0, [sp, #0x0]
	ldr		r0, _0802f730
	str		r0, [sp, #0x4]
	add		r0, #0xff
	str		r0, [sp, #0x8]
	mov		r0, sp
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0x8]
	strh	r0, [r4, #0x8]
	add		r0, sp, #0x4
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xa]
	strh	r0, [r4, #0xa]
	add		r0, sp, #0x8
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	lsl		r0, r5, #0x10
	asr		r5, r0, #0x10
	add		r0, r5, #0x0
	cmp		r5, #0x0
	bge		_0802f6ea
	add		r0, #0x7f
_0802f6ea:
	asr		r0, r0, #0x7
	ldrh	r1, [r4, #0x12]
	strh	r0, [r4, #0x12]
	ldrh	r0, [r4, #0x14]
	mov		r3, #0x6
	strh	r3, [r4, #0x14]
	add		r0, r5, #0x0
	cmp		r5, #0x0
	bge		_0802f6fe
	add		r0, #0x3f
_0802f6fe:
	asr		r0, r0, #0x6
	ldrh	r1, [r4, #0x16]
	strh	r0, [r4, #0x16]
	ldrh	r0, [r4, #0x18]
	strh	r3, [r4, #0x18]
	add		r0, r2, #0x0
	mov		r1, #0x24
	add		r1, r1, r0
	mov		r8, r1
	ldr		r3, _0802f734
	add		r1, r0, r3
	ldr		r7, [r1, #0x0]
	mov		r6, #0xa8
	lsl		r6, r6, #0x3
	add		r0, r0, r6
	ldr		r6, [r0, #0x0]
	cmp		r7, #0x0
	beq		_0802f738
	cmp		r7, #0x1
	beq		_0802f774
	b		_0802f7b8

_0802f728:	.4byte 0x0000FDFF
_0802f72c:	.4byte 0x00008C07
_0802f730:	.4byte 0x00000E06
_0802f734:	.4byte 0x0000053C

_0802f738:
	ldrh	r0, [r4, #0x10]
	mov		r0, #0xb0
	lsl		r0, r0, #0x1
	strh	r0, [r4, #0x10]
	add		r0, r5, #0x0
	cmp		r5, #0x0
	bge		_0802f748
	add		r0, #0xff
_0802f748:
	asr		r0, r0, #0x8
	ldrh	r1, [r4, #0xe]
	strh	r0, [r4, #0xe]
	ldr		r1, _0802f770
	add		r0, r2, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0802f76a
	add		r6, #0x1
	mov		r0, #0x96
	lsl		r0, r0, #0x1
	cmp		r6, r0
	ble		_0802f7b8
	mov		r6, #0x0
_0802f76a:
	mov		r7, #0x1
	b		_0802f7b8

.incbin "base.gba", 0x2F76E, 0x2

_0802f770:	.4byte 0x000007FE

_0802f774:
	mov		r1, #0xe1
	lsl		r1, r1, #0x5
	cmp		r6, r1
	bgt		_0802f79a
	lsl		r0, r6, #0x2
	add		r0, r0, r6
	lsl		r0, r0, #0x6
	neg		r0, r0
	bl		sub_0807d80c
	mov		r3, #0xb0
	lsl		r3, r3, #0x1
	add		r0, r0, r3
	ldrh	r1, [r4, #0x10]
	strh	r0, [r4, #0x10]
	add		r0, r5, #0x0
	cmp		r5, #0x0
	bge		_0802f7a8
	b		_0802f7a6
_0802f79a:
	ldrh	r0, [r4, #0x10]
	mov		r0, #0x20
	strh	r0, [r4, #0x10]
	add		r0, r5, #0x0
	cmp		r0, #0x0
	bge		_0802f7a8
_0802f7a6:
	add		r0, #0xff
_0802f7a8:
	asr		r0, r0, #0x8
	ldrh	r1, [r4, #0xe]
	strh	r0, [r4, #0xe]
	mov		r0, #0xe1
	lsl		r0, r0, #0x5
	cmp		r6, r0
	bgt		_0802f7b8
	add		r6, #0x1
_0802f7b8:
	mov		r0, #0xa3
	lsl		r0, r0, #0x3
	add		r0, r8
	str		r7, [r0, #0x0]
	ldr		r0, _0802f7d4
	add		r0, r8
	str		r6, [r0, #0x0]
	add		sp, #0xc
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2F7D2, 0x2

_0802f7d4:	.4byte 0x0000051C
	thumb_func_end sub_0802f62c

	thumb_func_start sub_0802f7d8
sub_0802f7d8:
	push	{ r4, r5, lr }
	ldr		r5, _0802f818
	ldr		r4, _0802f81c
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x0
	bl		sub_08028130
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r1, _0802f820
	add		r0, r5, r1
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	mov		r2, #0xa8
	lsl		r2, r2, #0x3
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	ldr		r0, [r5, #0x24]
	mov		r1, #0x1
	orr		r0, r1
	str		r0, [r5, #0x24]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x2F816, 0x2

_0802f818:	.4byte RunGameLogic_CallBack
_0802f81c:	.4byte 0x080920c8
_0802f820:	.4byte 0x0000053C
	thumb_func_end sub_0802f7d8

	thumb_func_start sub_0802f824
sub_0802f824:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r9, r0
	ldr		r2, _0802f87c
	mov		r0, #0x24
	add		r0, r0, r2
	mov		r8, r0
	ldr		r1, _0802f880
	add		r6, r2, r1
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	ldrh	r1, [r0, #0x0]
	ldr		r0, _0802f884
	and		r0, r1
	ldrh	r1, [r6, #0x0]
	strh	r0, [r6, #0x0]
	ldrh	r1, [r6, #0x0]
	mov		r3, #0xf0
	lsl		r3, r3, #0x4
	add		r0, r3, #0x0
	ldrh	r3, [r6, #0x0]
	orr		r0, r1
	strh	r0, [r6, #0x0]
	mov		r7, r8
	mov		r1, #0xaa
	lsl		r1, r1, #0x3
	add		r0, r2, r1
	ldr		r5, [r0, #0x0]
	ldr		r3, _0802f888
	add		r2, r2, r3
	ldr		r4, [r2, #0x0]
	cmp		r5, #0x5
	bls		_0802f870
	b		_0802f9a4
_0802f870:
	lsl		r0, r5, #0x2
	ldr		r1, _0802f88c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x2F87A, 0x2

_0802f87c:	.4byte RunGameLogic_CallBack
_0802f880:	.4byte 0x0000057C
_0802f884:	.4byte 0x0000FFF8
_0802f888:	.4byte 0x0000054C
_0802f88c:	.4byte 0x0802f890
_0802f890:	.4byte 0x0802f8a8

.incbin "base.gba", 0x2F894, 0x14
	thumb_func_end sub_0802f824


.incbin "base.gba", 0x2F8A8, 0xFC

_0802f9a4:

.incbin "base.gba", 0x2F9A4, 0x1A
_0802f9be:

.incbin "base.gba", 0x2F9BE, 0x1A
_0802f9d8:	.4byte 0x0000052C
_0802f9dc:	.4byte 0x00000524
_0802f9e0:	.4byte 0x08102f1c

_0802f9e4:

.incbin "base.gba", 0x2F9E4, 0x2
_0802f9e6:

.incbin "base.gba", 0x2F9E6, 0x2C
_0802fa12:

.incbin "base.gba", 0x2FA12, 0x18
_0802fa2a:

.incbin "base.gba", 0x2FA2A, 0x36
_0802fa60:

.incbin "base.gba", 0x2FA60, 0x42
_0802faa2:

.incbin "base.gba", 0x2FAA2, 0xE
_0802fab0:	.4byte 0x00002844
_0802fab4:	.4byte 0x00000524
_0802fab8:	.4byte 0x000001FF
_0802fabc:	.4byte RunGameLogic_CallBack
_0802fac0:	.4byte 0x00000544
_0802fac4:	.4byte 0x08102efc
_0802fac8:	.4byte 0x0000053C

_0802facc:

.incbin "base.gba", 0x2FACC, 0x8
_0802fad4:	.4byte 0x080924d8

_0802fad8:

.incbin "base.gba", 0x2FAD8, 0x2
_0802fada:

.incbin "base.gba", 0x2FADA, 0x16
_0802faf0:	.4byte 0x080924c0

_0802faf4:

.incbin "base.gba", 0x2FAF4, 0x14
_0802fb08:

.incbin "base.gba", 0x2FB08, 0x14
_0802fb1c:	.4byte 0x080924a8

.incbin "base.gba", 0x2FB20, 0x2B8
_0802fdd8:	.4byte 0x0802fdf4

.incbin "base.gba", 0x2FDDC, 0xD70
	thumb_func_start sub_08030b4c
sub_08030b4c:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	ldr		r2, _08030bb8
	ldr		r0, _08030bbc
	add		r3, r2, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	ldrh	r1, [r0, #0x0]
	ldr		r0, _08030bc0
	and		r0, r1
	ldrh	r1, [r3, #0x0]
	mov		r4, #0x0
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x2
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x3
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldr		r0, _08030bc4
	add		r2, r2, r0
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x2
	beq		_08030bc8
	ldrh	r0, [r3, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	b		_08030bd2

.incbin "base.gba", 0x30BB6, 0x2

_08030bb8:	.4byte RunGameLogic_CallBack
_08030bbc:	.4byte 0x0000057C
_08030bc0:	.4byte 0x0000FFF8
_08030bc4:	.4byte 0x0000080D

_08030bc8:
	ldrh	r0, [r3, #0x0]
	ldr		r1, _08030c3c
	and		r1, r0
	ldrh	r0, [r3, #0x0]
	strh	r1, [r3, #0x0]
_08030bd2:
	ldr		r0, _08030c40
	str		r0, [sp, #0x0]
	ldr		r0, _08030c44
	str		r0, [sp, #0x4]
	ldr		r0, _08030c48
	str		r0, [sp, #0x8]
	mov		r0, sp
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0x8]
	strh	r0, [r3, #0x8]
	add		r0, sp, #0x4
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0xa]
	strh	r0, [r3, #0xa]
	add		r0, sp, #0x8
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0xc]
	strh	r0, [r3, #0xc]
	lsl		r0, r5, #0x10
	asr		r2, r0, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08030c02
	add		r0, #0x3f
_08030c02:
	asr		r0, r0, #0x6
	sub		r0, #0x28
	ldrh	r1, [r3, #0xe]
	strh	r0, [r3, #0xe]
	ldrh	r0, [r3, #0x10]
	mov		r4, #0x46
	strh	r4, [r3, #0x10]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08030c18
	add		r0, #0x7f
_08030c18:
	asr		r0, r0, #0x7
	ldrh	r1, [r3, #0x12]
	strh	r0, [r3, #0x12]
	ldrh	r0, [r3, #0x14]
	strh	r4, [r3, #0x14]
	add		r0, r2, #0x0
	cmp		r0, #0x0
	bge		_08030c2a
	add		r0, #0xff
_08030c2a:
	asr		r0, r0, #0x8
	ldrh	r1, [r3, #0x16]
	strh	r0, [r3, #0x16]
	ldrh	r0, [r3, #0x18]
	strh	r4, [r3, #0x18]
	add		sp, #0xc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08030c3c:	.4byte 0x0000F7FF
_08030c40:	.4byte 0x00000F07
_08030c44:	.4byte 0x00000D07
_08030c48:	.4byte 0x00000C07
	thumb_func_end sub_08030b4c

	thumb_func_start sub_08030c4c
sub_08030c4c:
	push	{ lr }
	ldr		r0, _08030c6c
	ldr		r1, _08030c70
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r0, _08030c74
	ldr		r1, _08030c78
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r2, _08030c7c
	ldr		r0, [r2, #0x24]
	mov		r1, #0x1
	orr		r0, r1
	str		r0, [r2, #0x24]
	pop		{ r0 }
	bx		r0

_08030c6c:	.4byte 0x080ddc68
_08030c70:	.4byte 0x06007000
_08030c74:	.4byte 0x080ddfdc
_08030c78:	.4byte 0x06007C80
_08030c7c:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_08030c4c

	thumb_func_start sub_08030c80
sub_08030c80:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	ldr		r2, _08030cec
	ldr		r0, _08030cf0
	add		r4, r2, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	ldrh	r1, [r0, #0x0]
	ldr		r0, _08030cf4
	and		r0, r1
	ldrh	r1, [r4, #0x0]
	mov		r3, #0x0
	strh	r0, [r4, #0x0]
	ldrh	r0, [r4, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r4, #0x0]
	orr		r0, r3
	strh	r0, [r4, #0x0]
	ldrh	r0, [r4, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x2
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r4, #0x0]
	orr		r0, r3
	strh	r0, [r4, #0x0]
	ldrh	r0, [r4, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x3
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r4, #0x0]
	orr		r0, r3
	strh	r0, [r4, #0x0]
	ldr		r1, _08030cf8
	add		r0, r2, r1
	ldrb	r0, [r0, #0x0]
	add		r6, r2, #0x0
	cmp		r0, #0x2
	beq		_08030cfc
	ldrh	r0, [r4, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r4, #0x0]
	orr		r0, r3
	strh	r0, [r4, #0x0]
	b		_08030d06

_08030cec:	.4byte RunGameLogic_CallBack
_08030cf0:	.4byte 0x0000057C
_08030cf4:	.4byte 0x0000FFF8
_08030cf8:	.4byte 0x0000080D

_08030cfc:
	ldrh	r0, [r4, #0x0]
	ldr		r1, _08030d84
	and		r1, r0
	ldrh	r0, [r4, #0x0]
	strh	r1, [r4, #0x0]
_08030d06:
	mov		r0, #0x0
	str		r0, [r4, #0x4]
	ldr		r0, _08030d88
	str		r0, [sp, #0x0]
	ldr		r0, _08030d8c
	str		r0, [sp, #0x4]
	ldr		r0, _08030d90
	str		r0, [sp, #0x8]
	mov		r0, sp
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0x8]
	strh	r0, [r4, #0x8]
	add		r0, sp, #0x4
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xa]
	strh	r0, [r4, #0xa]
	add		r0, sp, #0x8
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	lsl		r0, r5, #0x10
	asr		r3, r0, #0x10
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_08030d3a
	add		r0, #0x3f
_08030d3a:
	asr		r0, r0, #0x6
	sub		r0, #0x28
	ldrh	r1, [r4, #0xe]
	strh	r0, [r4, #0xe]
	ldrh	r0, [r4, #0x10]
	mov		r2, #0x26
	strh	r2, [r4, #0x10]
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_08030d50
	add		r0, #0x7f
_08030d50:
	asr		r0, r0, #0x7
	ldrh	r1, [r4, #0x12]
	strh	r0, [r4, #0x12]
	ldrh	r0, [r4, #0x14]
	strh	r2, [r4, #0x14]
	add		r0, r3, #0x0
	cmp		r0, #0x0
	bge		_08030d62
	add		r0, #0xff
_08030d62:
	asr		r0, r0, #0x8
	ldrh	r1, [r4, #0x16]
	strh	r0, [r4, #0x16]
	ldrh	r0, [r4, #0x18]
	strh	r2, [r4, #0x18]
	add		r5, r6, #0x0
	add		r5, #0x24
	ldr		r1, _08030d94
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_08030d9c
	ldr		r2, _08030d98
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	b		_08030da4

.incbin "base.gba", 0x30D82, 0x2

_08030d84:	.4byte 0x0000F7FF
_08030d88:	.4byte 0x00000F07
_08030d8c:	.4byte 0x00000E07
_08030d90:	.4byte 0x00000D07
_08030d94:	.4byte 0x000007FB
_08030d98:	.4byte 0x00000838

_08030d9c:
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_08044894
_08030da4:
	mov		r6, #0xa5
	lsl		r6, r6, #0x3
	add		r2, r5, r6
	ldr		r1, [r2, #0x0]
	add		r0, #0xc6
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x8
	sub		r0, #0x7f
	cmp		r1, #0x0
	bne		_08030dc4
	cmp		r0, #0x1
	ble		_08030dc0
	mov		r1, #0x1
	str		r1, [r2, #0x0]
_08030dc0:
	cmp		r1, #0x0
	beq		_08030de2
_08030dc4:
	ldrh	r0, [r4, #0x12]
	add		r2, r0, #0x0
	ldr		r0, _08030dd8
	ldr		r0, [r0, #0x10]
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08030ddc
	add		r1, r2, #0x1
	b		_08030dde

_08030dd8:	.4byte RunGameLogic_CallBack

_08030ddc:
	sub		r1, r2, #0x1
_08030dde:
	ldrh	r0, [r4, #0x12]
	strh	r1, [r4, #0x12]
_08030de2:
	add		sp, #0xc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x30DEA, 0xE6

_08030ed0:	.4byte 0x08030ee4

.incbin "base.gba", 0x30ED4, 0x10
	thumb_func_end sub_08030c80


.incbin "base.gba", 0x30EE4, 0x3E4
	thumb_func_start sub_080312c8
sub_080312c8:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	ldr		r2, _08031334
	ldr		r0, _08031338
	add		r3, r2, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	ldrh	r1, [r0, #0x0]
	ldr		r0, _0803133c
	and		r0, r1
	ldrh	r1, [r3, #0x0]
	mov		r4, #0x0
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x3
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x4
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldr		r0, _08031340
	add		r2, r2, r0
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x2
	beq		_08031344
	ldrh	r0, [r3, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	b		_0803134e

.incbin "base.gba", 0x31332, 0x2

_08031334:	.4byte RunGameLogic_CallBack
_08031338:	.4byte 0x0000057C
_0803133c:	.4byte 0x0000FFF8
_08031340:	.4byte 0x0000080D

_08031344:
	ldrh	r0, [r3, #0x0]
	ldr		r1, _080313c0
	and		r1, r0
	ldrh	r0, [r3, #0x0]
	strh	r1, [r3, #0x0]
_0803134e:
	mov		r0, #0x0
	str		r0, [r3, #0x4]
	ldr		r0, _080313c4
	str		r0, [sp, #0x0]
	ldr		r0, _080313c8
	str		r0, [sp, #0x4]
	add		r0, #0xff
	str		r0, [sp, #0x8]
	mov		r0, sp
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0x8]
	strh	r0, [r3, #0x8]
	add		r0, sp, #0x4
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0xa]
	strh	r0, [r3, #0xa]
	add		r0, sp, #0x8
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0xc]
	strh	r0, [r3, #0xc]
	lsl		r0, r5, #0x10
	asr		r2, r0, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08031382
	add		r0, #0xff
_08031382:
	asr		r0, r0, #0x8
	ldrh	r1, [r3, #0xe]
	strh	r0, [r3, #0xe]
	ldrh	r0, [r3, #0x10]
	mov		r0, #0x20
	strh	r0, [r3, #0x10]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08031396
	add		r0, #0x7f
_08031396:
	asr		r0, r0, #0x7
	ldrh	r1, [r3, #0x12]
	strh	r0, [r3, #0x12]
	ldrh	r0, [r3, #0x14]
	ldr		r0, _080313cc
	strh	r0, [r3, #0x14]
	add		r0, r2, #0x0
	cmp		r0, #0x0
	bge		_080313aa
	add		r0, #0x3f
_080313aa:
	asr		r0, r0, #0x6
	ldrh	r1, [r3, #0x16]
	strh	r0, [r3, #0x16]
	ldrh	r0, [r3, #0x18]
	mov		r0, #0x6
	strh	r0, [r3, #0x18]
	add		sp, #0xc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x313BE, 0x2

_080313c0:	.4byte 0x0000FDFF
_080313c4:	.4byte 0x00008C07
_080313c8:	.4byte 0x00000E06
_080313cc:	.4byte 0x0000FFA8

.incbin "base.gba", 0x313D0, 0x10
	thumb_func_end sub_080312c8

	thumb_func_start sub_080313e0
sub_080313e0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	ldr		r0, _08031440
	mov		r1, #0x24
	add		r1, r1, r0
	mov		r9, r1
	ldr		r2, _08031444
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	ldrh	r5, [r0, #0x20]
	ldrh	r6, [r0, #0x22]
	mov		r2, #0x0
	ldrh	r7, [r0, #0x24]
	cmp		r4, r0
	bne		_080314fe
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_080314fe
	add		r1, r4, #0x0
	add		r1, #0x5a
	ldrh	r3, [r1, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r3
	mov		r8, r1
	cmp		r0, #0x0
	beq		_080314fe
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r3
	cmp		r0, #0x0
	beq		_080314c6
	add		r0, r4, #0x0
	add		r0, #0x5c
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_08031458
	cmp		r0, #0x1
	bgt		_08031448
	cmp		r0, #0x0
	beq		_08031452
	b		_08031478

.incbin "base.gba", 0x3143E, 0x2

_08031440:	.4byte RunGameLogic_CallBack
_08031444:	.4byte 0x00000838

_08031448:
	cmp		r0, #0x2
	beq		_08031462
	cmp		r0, #0x3
	beq		_0803146c
	b		_08031478
_08031452:
	add		r0, r4, #0x0
	add		r0, #0x50
	b		_08031470
_08031458:
	add		r0, r4, #0x0
	add		r0, #0x50
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	b		_08031476
_08031462:
	add		r0, r4, #0x0
	add		r0, #0x4e
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	b		_08031476
_0803146c:
	add		r0, r4, #0x0
	add		r0, #0x4e
_08031470:
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mvn		r0, r0
_08031476:
	lsr		r2, r0, #0x1f
_08031478:
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x0
	bge		_08031486
	mov		r0, #0x1
	eor		r2, r0
_08031486:
	cmp		r2, #0x0
	beq		_080314a4
	lsl		r0, r5, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r6, #0x10
	asr		r1, r1, #0x10
	lsl		r2, r7, #0x10
	mov		r5, #0x80
	lsl		r5, r5, #0x9
	add		r2, r2, r5
	asr		r2, r2, #0x10
	lsr		r3, r3, #0x1f
	bl		sub_08054f68
	b		_080314bc
_080314a4:
	lsl		r0, r5, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r6, #0x10
	asr		r1, r1, #0x10
	lsl		r2, r7, #0x10
	mov		r5, #0x80
	lsl		r5, r5, #0x9
	add		r2, r2, r5
	asr		r2, r2, #0x10
	lsr		r3, r3, #0x1f
	bl		sub_08054fcc
_080314bc:
	add		r0, r4, #0x0
	mov		r1, r9
	bl		sub_0803ce18
	b		_080314f8
_080314c6:
	sub		r0, r3, #0x4
	ldr		r2, _0803150c
	add		r1, r2, #0x0
	and		r0, r1
	mov		r3, r8
	strh	r0, [r3, #0x0]
	lsl		r0, r5, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r6, #0x10
	asr		r1, r1, #0x10
	lsl		r2, r7, #0x10
	mov		r5, #0x80
	lsl		r5, r5, #0x9
	add		r2, r2, r5
	asr		r2, r2, #0x10
	add		r3, r4, #0x0
	add		r3, #0xbc
	ldr		r3, [r3, #0x0]
	lsr		r3, r3, #0x1f
	bl		sub_08054f04
	add		r0, r4, #0x0
	mov		r1, r9
	bl		sub_0803cddc
_080314f8:
	mov		r0, #0x0
	mov		r1, r8
	strh	r0, [r1, #0x0]
_080314fe:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3150A, 0x2

_0803150c:	.4byte 0x00003FFF
	thumb_func_end sub_080313e0

	thumb_func_start sub_08031510
sub_08031510:
	add		r3, r0, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x7
	bhi		_0803158e
	lsl		r0, r0, #0x2
	ldr		r1, _08031524
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08031524:	.4byte 0x08031528
_08031528:	.4byte 0x0803158e

.incbin "base.gba", 0x3152C, 0x1C
	thumb_func_end sub_08031510


.incbin "base.gba", 0x31548, 0x46

_0803158e:

.incbin "base.gba", 0x3158E, 0x6
	thumb_func_start sub_08031594
sub_08031594:
	add		r2, r0, #0x0
	mov		r1, #0xce
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080315b8
	ldr		r1, _080315b4
	add		r0, r2, #0x0
	add		r0, #0x76
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrh	r1, [r0, #0x0]
	b		_080315ea

.incbin "base.gba", 0x315B2, 0x2

_080315b4:	.4byte 0x08107308

_080315b8:
	cmp		r0, #0x1
	bne		_080315d4
	ldr		r1, _080315d0
	add		r0, r2, #0x0
	add		r0, #0x76
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x11
	b		_080315e6

_080315d0:	.4byte 0x08107308

_080315d4:
	ldr		r1, _080315fc
	add		r0, r2, #0x0
	add		r0, #0x76
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x12
_080315e6:
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
_080315ea:
	add		r0, r2, #0x0
	add		r0, #0x68
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	bne		_08031600
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	b		_08031612

_080315fc:	.4byte 0x08107308

_08031600:
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x7
	cmp		r0, #0x0
	bge		_08031610
	add		r0, #0xff
_08031610:
	asr		r0, r0, #0x8
_08031612:
	bx		lr
	thumb_func_end sub_08031594

	thumb_func_start sub_08031614
sub_08031614:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r1, r4, #0x0
	add		r1, #0x6a
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x0
	beq		_08031680
	sub		r0, r2, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_08031642
	add		r0, r4, #0x0
	add		r0, #0x58
	ldrh	r1, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x8
	add		r2, r3, #0x0
	orr		r1, r2
	strh	r1, [r0, #0x0]
	b		_08031680
_08031642:
	add		r5, r4, #0x0
	add		r5, #0xb4
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r1
	strh	r0, [r5, #0x0]
	add		r2, r4, #0x0
	add		r2, #0x58
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08031734
	and		r0, r1
	strh	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x78
	ldrb	r1, [r0, #0x0]
	add		r0, #0xc
	strb	r1, [r0, #0x0]
	ldr		r0, _08031738
	ldr		r1, _0803173c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08031678
	mov		r0, #0x10
	bl		sub_0804bdb0
_08031678:
	ldrh	r1, [r5, #0x0]
	ldr		r0, _08031740
	and		r0, r1
	strh	r0, [r5, #0x0]
_08031680:
	add		r0, r4, #0x0
	add		r0, #0xac
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r6, r0, #0x0
	cmp		r1, #0x0
	beq		_080316a8
	add		r0, #0xa
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0xff
	bgt		_080316a4
	add		r0, r4, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_080316a8
_080316a4:
	mov		r0, #0x0
	strh	r0, [r6, #0x0]
_080316a8:
	add		r1, r4, #0x0
	add		r1, #0x66
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x0
	beq		_080316d2
	sub		r0, r2, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_080316d2
	ldr		r0, _08031738
	ldr		r1, _0803173c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_080316d2
	mov		r0, #0x8
	bl		sub_0804bdb0
_080316d2:
	add		r0, r4, #0x0
	add		r0, #0x68
	ldrh	r2, [r0, #0x0]
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	add		r5, r0, #0x0
	cmp		r1, #0x0
	ble		_08031710
	sub		r0, r2, #0x1
	strh	r0, [r5, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08031710
	add		r0, r4, #0x0
	mov		r1, #0x4
	bl		sub_08036c1c
	ldr		r0, _08031738
	ldr		r1, _0803173c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08031710
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08031710
	mov		r0, #0x85
	bl		sub_0807073c
_08031710:
	add		r1, r5, #0x0
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x0
	bge		_0803171e
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
_0803171e:
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	cmp		r0, #0x0
	beq		_08031748
	add		r2, r4, #0x0
	add		r2, #0x58
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08031744
	add		r3, r1, #0x0
	and		r3, r0
	b		_08031754

_08031734:	.4byte 0x00007FFF
_08031738:	.4byte RunGameLogic_CallBack
_0803173c:	.4byte 0x00000838
_08031740:	.4byte 0x0000FFFC
_08031744:	.4byte 0x0000FFEF

_08031748:
	add		r2, r4, #0x0
	add		r2, #0x58
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x10
	add		r3, r1, #0x0
	orr		r3, r0
_08031754:
	strh	r3, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x84
	ldrb	r1, [r0, #0x0]
	add		r5, r0, #0x0
	cmp		r1, #0x8
	bne		_0803176a
	mov		r0, #0x20
	add		r1, r3, #0x0
	orr		r1, r0
	b		_08031770
_0803176a:
	ldr		r0, _08031780
	add		r1, r3, #0x0
	and		r1, r0
_08031770:
	strh	r1, [r2, #0x0]
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0xa
	bne		_08031788
	ldr		r0, _08031784
	and		r0, r1
	b		_0803178c

.incbin "base.gba", 0x3177E, 0x2

_08031780:	.4byte 0x0000FFDF
_08031784:	.4byte 0x0000FFBF

_08031788:
	mov		r0, #0x40
	orr		r0, r1
_0803178c:
	strh	r0, [r2, #0x0]
	add		r2, r6, #0x0
	ldrh	r5, [r2, #0x0]
	mov		r0, #0x0
	ldrsh	r3, [r2, r0]
	cmp		r3, #0x0
	beq		_080317b8
	add		r0, r4, #0x0
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_080317b8
	cmp		r3, #0x9
	ble		_080317b4
	add		r0, r5, #0x0
	sub		r0, #0xa
	strh	r0, [r2, #0x0]
	b		_080317b8
_080317b4:
	mov		r0, #0x0
	strh	r0, [r6, #0x0]
_080317b8:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x317BE, 0x2
	thumb_func_end sub_08031614

	thumb_func_start sub_080317c0
sub_080317c0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r1, _080317fc
	add		r1, #0x24
	bl		sub_080356ac
	ldr		r1, _08031800
	and		r1, r0
	add		r5, r4, #0x0
	add		r5, #0xca
	strh	r1, [r5, #0x0]
	add		r0, r4, #0x0
	bl		sub_08035570
	add		r1, r4, #0x0
	add		r1, #0x7c
	ldrh	r0, [r5, #0x0]
	ldrh	r1, [r1, #0x0]
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x10
	ldr		r0, _08031804
	cmp		r1, r0
	ble		_08031808
	add		r1, r4, #0x0
	add		r1, #0x96
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	b		_08031822

.incbin "base.gba", 0x317FA, 0x2

_080317fc:	.4byte RunGameLogic_CallBack
_08031800:	.4byte 0xFFFFFF00
_08031804:	.4byte 0x000005FF

_08031808:
	ldr		r0, _08031818
	cmp		r1, r0
	bge		_0803181c
	add		r1, r4, #0x0
	add		r1, #0x96
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	b		_08031822

_08031818:	.4byte 0xFFFFFA00

_0803181c:
	add		r1, r4, #0x0
	add		r1, #0x96
	mov		r0, #0x0
_08031822:
	strh	r0, [r1, #0x0]
	add		r2, r1, #0x0
	ldrh	r3, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	ldr		r0, _0803183c
	cmp		r1, r0
	bgt		_08031840
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	b		_08031844

.incbin "base.gba", 0x3183A, 0x2

_0803183c:	.4byte 0x01FFFFFF

_08031840:
	mov		r0, #0x80
	lsl		r0, r0, #0x7
_08031844:
	orr		r0, r3
	strh	r0, [r2, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3184E, 0x2
	thumb_func_end sub_080317c0

	thumb_func_start sub_08031850
sub_08031850:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r0, #0xbd
	lsl		r0, r0, #0x1
	add		r6, r4, r0
	ldrh	r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_08031862
	b		_08031ab6
_08031862:
	cmp		r0, #0x1
	bne		_08031868
	b		_08031ab6
_08031868:
	add		r0, r4, #0x0
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_08031878
	b		_08031ab6
_08031878:
	ldr		r1, [r4, #0x48]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08031886
	b		_08031ab6
_08031886:
	mov		r2, #0xbe
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08031894
	b		_08031ab6
_08031894:
	mov		r0, #0x80
	lsl		r0, r0, #0x9
	and		r1, r0
	cmp		r1, #0x0
	beq		_080318a0
	b		_08031ab6
_080318a0:
	ldr		r5, _080318f8
	ldr		r1, _080318fc
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_080318b0
	bl		sub_08046d7c
_080318b0:
	mov		r2, #0xe6
	lsl		r2, r2, #0x3
	add		r0, r5, r2
	bl		sub_08049164
	add		r2, r0, #0x0
	str		r4, [r2, #0x54]
	ldrh	r1, [r6, #0x0]
	ldr		r0, _08031900
	cmp		r1, r0
	bne		_080318c8
	b		_08031a60
_080318c8:
	cmp		r1, r0
	bgt		_08031954
	sub		r0, #0x7
	cmp		r1, r0
	bne		_080318d4
	b		_08031a14
_080318d4:
	cmp		r1, r0
	bgt		_08031918
	sub		r0, #0x3
	cmp		r1, r0
	bne		_080318e0
	b		_080319dc
_080318e0:
	cmp		r1, r0
	bgt		_08031904
	sub		r0, #0x2
	cmp		r1, r0
	bne		_080318ec
	b		_080319d4
_080318ec:
	add		r0, #0x1
	cmp		r1, r0
	bne		_080318f4
	b		_080319e4
_080318f4:
	b		_08031aa8

.incbin "base.gba", 0x318F6, 0x2

_080318f8:	.4byte RunGameLogic_CallBack
_080318fc:	.4byte 0x00000838
_08031900:	.4byte 0x0000100C

_08031904:
	ldr		r0, _08031914
	cmp		r1, r0
	beq		_080319ec
	add		r0, #0x1
	cmp		r1, r0
	bne		_08031912
	b		_08031a0c
_08031912:
	b		_08031aa8

_08031914:	.4byte 0x00001003

_08031918:
	ldr		r0, _08031930
	cmp		r1, r0
	bne		_08031920
	b		_08031a4c
_08031920:
	cmp		r1, r0
	bgt		_08031934
	sub		r0, #0x2
	cmp		r1, r0
	bne		_0803192c
	b		_08031a1c
_0803192c:
	add		r0, #0x1
	b		_080319bc

_08031930:	.4byte 0x00001008

_08031934:
	ldr		r0, _0803194c
	cmp		r1, r0
	bne		_0803193c
	b		_08031a80
_0803193c:
	cmp		r1, r0
	ble		_08031942
	b		_08031aa0
_08031942:
	add		r0, r2, #0x0
	bl		sub_08041cac
	ldr		r1, _08031950
	b		_08031a54

_0803194c:	.4byte 0x0000100A
_08031950:	.4byte 0x0000100E

_08031954:
	ldr		r0, _08031978
	cmp		r1, r0
	beq		_080319ec
	cmp		r1, r0
	bgt		_08031994
	sub		r0, #0x3
	cmp		r1, r0
	beq		_080319d4
	cmp		r1, r0
	bgt		_08031980
	ldr		r0, _0803197c
	cmp		r1, r0
	beq		_08031a34
	add		r0, #0x1
	cmp		r1, r0
	beq		_08031a3c
	b		_08031aa8

.incbin "base.gba", 0x31976, 0x2

_08031978:	.4byte 0x00002003
_0803197c:	.4byte 0x0000100E

_08031980:
	ldr		r0, _08031990
	cmp		r1, r0
	beq		_080319e4
	add		r0, #0x1
	cmp		r1, r0
	beq		_080319dc
	b		_08031aa8

.incbin "base.gba", 0x3198E, 0x2

_08031990:	.4byte 0x00002001

_08031994:
	ldr		r0, _080319ac
	cmp		r1, r0
	beq		_08031a1c
	cmp		r1, r0
	bgt		_080319b0
	sub		r0, #0x2
	cmp		r1, r0
	beq		_08031a0c
	add		r0, #0x1
	cmp		r1, r0
	beq		_08031a14
	b		_08031aa8

_080319ac:	.4byte 0x00002006

_080319b0:
	ldr		r0, _080319c4
	cmp		r1, r0
	beq		_08031a80
	cmp		r1, r0
	bgt		_080319c8
	sub		r0, #0x3
_080319bc:
	cmp		r1, r0
	beq		_08031a24
	b		_08031aa8

.incbin "base.gba", 0x319C2, 0x2

_080319c4:	.4byte 0x0000200A

_080319c8:
	ldr		r0, _080319d0
	cmp		r1, r0
	beq		_08031a60
	b		_08031aa8

_080319d0:	.4byte 0x0000200C

_080319d4:
	add		r0, r2, #0x0
	bl		sub_08040d5c
	b		_08031a2a
_080319dc:
	add		r0, r2, #0x0
	bl		sub_08040ec0
	b		_08031a2a
_080319e4:
	add		r0, r2, #0x0
	bl		sub_08040df0
	b		_08031a2a
_080319ec:
	add		r0, r2, #0x0
	bl		sub_08040f54
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080373dc
	ldr		r1, _08031a08
	add		r1, #0x24
	add		r0, r4, #0x0
	bl		sub_0803cd04
	b		_08031ab6

.incbin "base.gba", 0x31A06, 0x2

_08031a08:	.4byte RunGameLogic_CallBack

_08031a0c:
	add		r0, r2, #0x0
	bl		sub_08041024
	b		_08031a2a
_08031a14:
	add		r0, r2, #0x0
	bl		sub_08041a84
	b		_08031a2a
_08031a1c:
	add		r0, r2, #0x0
	bl		sub_08041b28
	b		_08031a2a
_08031a24:
	add		r0, r2, #0x0
	bl		sub_08041c88
_08031a2a:
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080373dc
	b		_08031ab6
_08031a34:
	add		r0, r2, #0x0
	bl		sub_08041cd4
	b		_08031ab6
_08031a3c:
	add		r0, r2, #0x0
	bl		sub_08041d64
	ldr		r1, _08031a48
	b		_08031a54

.incbin "base.gba", 0x31A46, 0x2

_08031a48:	.4byte 0x00001007

_08031a4c:
	add		r0, r2, #0x0
	bl		sub_08041d34
	ldr		r1, _08031a5c
_08031a54:
	add		r0, r4, #0x0
	bl		sub_080373dc
	b		_08031ab6

_08031a5c:	.4byte 0x0000100F

_08031a60:
	add		r0, r2, #0x0
	bl		sub_08041d94
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080373dc
	ldr		r1, _08031a7c
	add		r1, #0x24
	add		r0, r4, #0x0
	bl		sub_0803cd6c
	b		_08031ab6

.incbin "base.gba", 0x31A7A, 0x2

_08031a7c:	.4byte RunGameLogic_CallBack

_08031a80:
	add		r0, r2, #0x0
	bl		sub_08041fd0
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080373dc
	ldr		r1, _08031a9c
	add		r1, #0x24
	add		r0, r4, #0x0
	bl		sub_0803cd38
	b		_08031ab6

.incbin "base.gba", 0x31A9A, 0x2

_08031a9c:	.4byte RunGameLogic_CallBack

_08031aa0:
	add		r0, r2, #0x0
	bl		sub_08042088
	b		_08031ab6
_08031aa8:
	add		r0, r2, #0x0
	bl		sub_08041a84
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080373dc
_08031ab6:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08031850

	thumb_func_start sub_08031abc
sub_08031abc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r4, r1, #0x10
	mov		r0, #0xbc
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x40
	ble		_08031ad8
	mov		r0, #0x40
_08031ad8:
	ldrh	r1, [r1, #0x0]
	cmp		r1, #0x4
	bhi		_08031ae2
	lsl		r2, r0, #0xf
	b		_08031b12
_08031ae2:
	cmp		r1, #0x14
	bhi		_08031af4
	lsl		r0, r0, #0x11
	ldr		r1, _08031af0
	add		r2, r0, r1
	b		_08031b12

.incbin "base.gba", 0x31AEE, 0x2

_08031af0:	.4byte 0xFFF60000

_08031af4:
	cmp		r1, #0x24
	bhi		_08031b02
	lsl		r0, r0, #0x10
	mov		r1, #0x90
	lsl		r1, r1, #0xd
	add		r2, r0, r1
	b		_08031b12
_08031b02:
	cmp		r1, #0x40
	bhi		_08031b10
	lsl		r0, r0, #0xf
	mov		r1, #0x88
	lsl		r1, r1, #0xe
	add		r2, r0, r1
	b		_08031b12
_08031b10:
	mov		r2, #0x0
_08031b12:
	add		r1, r7, #0x0
	add		r1, #0xa8
	add		r0, r7, #0x0
	add		r0, #0x8c
	ldr		r0, [r0, #0x0]
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	ldr		r1, [r7, #0x48]
	cmp		r1, #0x0
	bne		_08031b28
	b		_08031cd6
_08031b28:
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	beq		_08031b34
	b		_08031cd6
_08031b34:
	mov		r2, #0x20
	and		r1, r2
	cmp		r1, #0x0
	beq		_08031b3e
	b		_08031ca0
_08031b3e:
	add		r1, r7, #0x0
	add		r1, #0x96
	strh	r4, [r1, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	and		r0, r4
	mov		r9, r1
	cmp		r0, #0x0
	beq		_08031c06
	ldr		r0, _08031b80
	add		r4, r0, #0x0
	add		r4, #0x24
	ldr		r1, _08031b84
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	ldr		r0, [r1, #0x48]
	and		r0, r2
	cmp		r0, #0x0
	bne		_08031c06
	cmp		r7, r1
	bne		_08031b8c
	ldr		r2, _08031b88
	add		r0, r7, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r0, r0, #0x1
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	bl		sub_0807073c
	b		_08031c06

_08031b80:	.4byte RunGameLogic_CallBack
_08031b84:	.4byte 0x00000838
_08031b88:	.4byte 0x08107784

_08031b8c:
	add		r0, r4, #0x0
	add		r1, r7, #0x0
	bl		sub_08045bf4
	add		r5, r0, #0x0
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	add		r0, r4, #0x0
	add		r1, r7, #0x0
	bl		sub_080466c4
	add		r6, r0, #0x0
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	ldr		r2, _08031c2c
	add		r0, r7, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r0, r0, #0x1
	add		r0, r0, r2
	ldrh	r4, [r0, #0x0]
	lsl		r5, r5, #0x10
	asr		r5, r5, #0x10
	add		r0, r4, #0x0
	bl		sub_0807073c
	ldr		r0, _08031c30
	mov		r8, r0
	ldr		r0, _08031c34
	lsl		r4, r4, #0x3
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r5, #0x0
	bl		sub_08071704
_08031c06:
	mov		r0, r9
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_08031c1c
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08031c38
_08031c1c:
	add		r1, r7, #0x0
	add		r1, #0xb0
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	sub		r1, #0x5c
	mov		r0, #0x7
	strb	r0, [r1, #0x0]
	b		_08031c8e

_08031c2c:	.4byte 0x08107784
_08031c30:	.4byte 0x08124544
_08031c34:	.4byte 0x081245c8

_08031c38:
	add		r0, r7, #0x0
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	cmp		r3, #0x0
	beq		_08031c58
	add		r0, r7, #0x0
	add		r0, #0xb0
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	sub		r0, #0x5c
	strb	r1, [r0, #0x0]
	b		_08031c8e
_08031c58:
	add		r0, r7, #0x0
	add		r0, #0xb0
	strb	r3, [r0, #0x0]
	sub		r0, #0x64
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x7
	and		r1, r0
	ldr		r2, _08031c98
	add		r0, r7, #0x0
	add		r0, #0x86
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r2, [r0, #0x0]
	ldr		r0, _08031c9c
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	add		r2, r2, r0
	add		r1, r7, #0x0
	add		r1, #0x54
	strb	r2, [r1, #0x0]
	mov		r0, #0x80
	and		r2, r0
	cmp		r2, #0x0
	beq		_08031c8e
	strb	r3, [r1, #0x0]
_08031c8e:
	add		r0, r7, #0x0
	bl		sub_08031850
	b		_08031cc4

.incbin "base.gba", 0x31C96, 0x2

_08031c98:	.4byte 0x08106df4
_08031c9c:	.4byte 0x08106e34

_08031ca0:
	add		r0, r7, #0x0
	bl		sub_080317c0
	add		r3, r7, #0x0
	add		r3, #0x96
	mov		r0, #0x40
	and		r0, r4
	ldrh	r1, [r3, #0x0]
	orr		r0, r1
	mov		r2, #0x0
	strh	r0, [r3, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xb0
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x54
	strb	r2, [r0, #0x0]
_08031cc4:
	add		r0, r7, #0x0
	bl		sub_08032918
	add		r0, r7, #0x0
	bl		sub_080325e0
	add		r0, r7, #0x0
	bl		sub_08031d7c
_08031cd6:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31CE2, 0x2
	thumb_func_end sub_08031abc

	thumb_func_start sub_08031ce4
sub_08031ce4:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	add		r2, r3, #0x0
	add		r2, #0xbc
	add		r0, #0xc0
	ldr		r1, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	add		r1, r1, r0
	str		r1, [r2, #0x0]
	mov		r0, #0xfc
	lsl		r0, r0, #0x13
	cmp		r1, r0
	ble		_08031d00
	str		r0, [r2, #0x0]
_08031d00:
	mov		r0, #0x7a
	add		r0, r0, r3
	mov		r12, r0
	ldr		r4, _08031d70
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bge		_08031d12
	add		r0, #0x3f
_08031d12:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	ldr		r1, [r0, #0x0]
	mov		r5, #0x2
	ldrsh	r0, [r2, r5]
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08031d2a
	ldr		r1, _08031d74
	add		r0, r0, r1
_08031d2a:
	asr		r0, r0, #0xf
	add		r1, r3, #0x0
	add		r1, #0x4e
	strh	r0, [r1, #0x0]
	mov		r5, r12
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	cmp		r1, #0x0
	bge		_08031d3e
	add		r1, #0x3f
_08031d3e:
	asr		r1, r1, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r1
	ldr		r1, _08031d78
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	mov		r4, #0x2
	ldrsh	r1, [r2, r4]
	neg		r0, r0
	mul		r1, r0
	cmp		r1, #0x0
	bge		_08031d60
	ldr		r5, _08031d74
	add		r1, r1, r5
_08031d60:
	asr		r1, r1, #0xf
	add		r0, r3, #0x0
	add		r0, #0x50
	strh	r1, [r0, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31D6E, 0x2

_08031d70:	.4byte 0x08101068
_08031d74:	.4byte 0x00007FFF
_08031d78:	.4byte 0x000003FF
	thumb_func_end sub_08031ce4

	thumb_func_start sub_08031d7c
sub_08031d7c:
	push	{ r4, r5, r6, r7, lr }
	add		r3, r0, #0x0
	ldr		r0, [r3, #0x48]
	mov		r1, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_08031dd0
	add		r2, r3, #0x0
	add		r2, #0xbc
	ldr		r1, [r2, #0x0]
	ldr		r0, _08031da0
	cmp		r1, r0
	ble		_08031da8
	add		r0, r3, #0x0
	add		r0, #0xc0
	ldrh	r1, [r0, #0x0]
	ldr		r2, _08031da4
	b		_08031db8

_08031da0:	.4byte 0x001FFFFF
_08031da4:	.4byte 0xFFF00000

_08031da8:
	ldr		r0, _08031dc0
	cmp		r1, r0
	bgt		_08031dc4
	add		r0, r3, #0x0
	add		r0, #0xc0
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0xd
_08031db8:
	orr		r1, r2
	str		r1, [r0, #0x0]
	b		_0803211c

.incbin "base.gba", 0x31DBE, 0x2

_08031dc0:	.4byte 0xFFE00000

_08031dc4:
	add		r1, r3, #0x0
	add		r1, #0xc0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	b		_0803211c
_08031dd0:
	add		r0, r3, #0x0
	add		r0, #0x84
	ldrb	r1, [r0, #0x0]
	add		r7, r0, #0x0
	cmp		r1, #0xb
	bhi		_08031ea6
	lsl		r0, r1, #0x2
	ldr		r1, _08031de8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x31DE6, 0x2

_08031de8:	.4byte 0x08031dec
_08031dec:	.4byte 0x08031e1c

.incbin "base.gba", 0x31DF0, 0x2C
	thumb_func_end sub_08031d7c


.incbin "base.gba", 0x31E1C, 0x8A

_08031ea6:

.incbin "base.gba", 0x31EA6, 0x18
_08031ebe:

.incbin "base.gba", 0x31EBE, 0x8
_08031ec6:

.incbin "base.gba", 0x31EC6, 0xA
_08031ed0:	.4byte 0x08031ed4
_08031ed4:	.4byte 0x08031f08

.incbin "base.gba", 0x31ED8, 0x1D0

_080320a8:

.incbin "base.gba", 0x320A8, 0x8
_080320b0:

.incbin "base.gba", 0x320B0, 0x4
_080320b4:

.incbin "base.gba", 0x320B4, 0x58

_0803210c:

.incbin "base.gba", 0x3210C, 0xA
_08032116:

.incbin "base.gba", 0x32116, 0x6
_0803211c:

.incbin "base.gba", 0x3211C, 0xF4
_08032210:	.4byte 0x08032250

.incbin "base.gba", 0x32214, 0x292

_080324a6:

.incbin "base.gba", 0x324A6, 0x8
_080324ae:

.incbin "base.gba", 0x324AE, 0x3E
	thumb_func_start sub_080324ec
sub_080324ec:
	mov		r12, r0
	mov		r2, r12
	add		r2, #0xbc
	ldr		r1, [r2, #0x0]
	cmp		r1, #0x0
	bge		_080324fa
	neg		r1, r1
_080324fa:
	ldr		r0, _08032528
	cmp		r1, r0
	bgt		_08032514
	mov		r0, r12
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	beq		_0803252c
_08032514:
	mov		r0, r12
	add		r0, #0x88
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bge		_08032522
	add		r0, #0x7
_08032522:
	lsl		r0, r0, #0xd
	lsr		r1, r0, #0x10
	b		_08032596

_08032528:	.4byte 0x006FFFFF

_0803252c:
	mov		r0, r12
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x4
	beq		_08032548
	mov		r0, r12
	add		r0, #0x88
	strh	r1, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bge		_08032544
	neg		r0, r0
_08032544:
	asr		r2, r0, #0x14
	b		_0803254a
_08032548:
	mov		r2, #0x8
_0803254a:
	mov		r1, r12
	ldr		r0, [r1, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	and		r0, r1
	cmp		r0, #0x0
	bne		_08032594
	mov		r0, r12
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803257c
	ldr		r0, _08032578
	lsl		r1, r2, #0x1
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	neg		r0, r0
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	b		_08032596

_08032578:	.4byte 0x08107328

_0803257c:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08032594
	ldr		r1, _08032590
	lsl		r0, r2, #0x1
	add		r0, r0, r1
	ldrh	r1, [r0, #0x0]
	b		_08032596

_08032590:	.4byte 0x08107328

_08032594:
	mov		r1, #0x0
_08032596:
	mov		r0, r12
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_080325a6
	lsl		r0, r1, #0x10
	neg		r0, r0
	lsr		r1, r0, #0x10
_080325a6:
	mov		r3, r12
	add		r3, #0x7c
	ldrh	r0, [r3, #0x0]
	add		r2, r0, r1
	strh	r2, [r3, #0x0]
	mov		r1, r12
	ldr		r0, [r1, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	and		r0, r1
	cmp		r0, #0x0
	bne		_080325dc
	mov		r0, r12
	add		r0, #0x80
	ldrh	r0, [r0, #0x0]
	add		r0, r2, r0
	mov		r2, r12
	add		r2, #0x7a
	strh	r0, [r2, #0x0]
	mov		r1, r12
	add		r1, #0x82
	ldrh	r0, [r3, #0x0]
	ldrh	r1, [r1, #0x0]
	sub		r0, r0, r1
	mov		r1, r12
	add		r1, #0x56
	strh	r0, [r1, #0x0]
_080325dc:
	bx		lr

.incbin "base.gba", 0x325DE, 0x2
	thumb_func_end sub_080324ec

	thumb_func_start sub_080325e0
sub_080325e0:
	push	{ r4, r5, r6, lr }
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x48]
	mov		r1, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_080325f8
	add		r1, r2, #0x0
	add		r1, #0x88
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	b		_080326d2
_080325f8:
	add		r0, r2, #0x0
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0x3
	and		r0, r1
	mov		r4, #0x80
	lsl		r4, r4, #0x2
	cmp		r0, r4
	beq		_080326d2
	add		r0, r2, #0x0
	add		r0, #0xb0
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x3
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	add		r3, r2, r0
	add		r0, r2, #0x0
	add		r0, #0x7e
	ldrb	r1, [r0, #0x0]
	sub		r0, r1, #0x5
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x3
	bls		_080326d2
	cmp		r1, #0xd
	beq		_080326d2
	add		r0, r2, #0x0
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803266e
	add		r0, r2, #0x0
	add		r0, #0x88
	ldrh	r2, [r0, #0x0]
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	add		r4, r0, #0x0
	cmp		r1, #0x0
	bgt		_08032666
	mov		r5, #0x0
	ldrsh	r0, [r4, r5]
	neg		r0, r0
	mov		r6, #0x0
	ldrsh	r1, [r3, r6]
	cmp		r0, r1
	blt		_08032662
	ldrh	r0, [r3, #0x0]
	neg		r0, r0
	b		_0803266a
_08032662:
	ldrh	r0, [r3, #0x4]
	b		_08032668
_08032666:
	ldrh	r0, [r3, #0x2]
_08032668:
	sub		r0, r2, r0
_0803266a:
	strh	r0, [r4, #0x0]
	b		_080326d2
_0803266e:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	cmp		r4, #0x0
	beq		_080326a8
	add		r1, r2, #0x0
	add		r1, #0x88
	ldrh	r5, [r1, #0x0]
	mov		r0, #0x0
	ldrsh	r2, [r1, r0]
	add		r4, r1, #0x0
	cmp		r2, #0x0
	blt		_080326a0
	ldrh	r1, [r3, #0x0]
	mov		r6, #0x0
	ldrsh	r0, [r3, r6]
	cmp		r2, r0
	blt		_0803269a
	add		r0, r1, #0x0
	b		_0803266a
_0803269a:
	ldrh	r3, [r3, #0x4]
	add		r0, r5, r3
	b		_0803266a
_080326a0:
	ldrh	r0, [r3, #0x2]
	add		r0, r5, r0
	strh	r0, [r1, #0x0]
	b		_080326d2
_080326a8:
	add		r1, r2, #0x0
	add		r1, #0x88
	ldrh	r2, [r1, #0x0]
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	cmp		r0, #0x0
	bge		_080326c4
	ldrh	r0, [r3, #0x6]
	add		r0, r2, r0
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	ble		_080326d2
	b		_080326d0
_080326c4:
	ldrh	r0, [r3, #0x6]
	sub		r0, r2, r0
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_080326d2
_080326d0:
	strh	r4, [r1, #0x0]
_080326d2:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080325e0

	thumb_func_start sub_080326d8
sub_080326d8:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r2, r4, #0x0
	add		r2, #0xb8
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r0, #0x0
	bne		_080326ec
	b		_08032900
_080326ec:
	sub		r0, r1, #0x1
	strh	r0, [r2, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x3b
	bne		_08032710
	add		r1, r4, #0x0
	add		r1, #0x82
	ldr		r3, _0803279c
	add		r0, r3, #0x0
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	ldr		r1, _080327a0
	cmp		r0, r1
	bls		_08032710
	mov		r0, #0x0
	strh	r0, [r2, #0x0]
_08032710:
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	mov		r0, #0xa0
	lsl		r0, r0, #0x12
	add		r2, r4, #0x0
	add		r2, #0xb8
	cmp		r1, r0
	bgt		_08032726
	mov		r0, #0x0
	strh	r0, [r2, #0x0]
_08032726:
	ldr		r3, [r4, #0x48]
	mov		r0, #0x20
	and		r3, r0
	cmp		r3, #0x0
	bne		_080327b8
	add		r0, r4, #0x0
	add		r0, #0x96
	ldrh	r0, [r0, #0x0]
	mov		r1, #0x86
	lsl		r1, r1, #0x7
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	cmp		r1, r0
	bne		_080327b8
	ldr		r0, _080327a4
	strh	r3, [r2, #0x0]
	add		r2, r4, #0x0
	add		r2, #0x7e
	mov		r1, #0xe
	strb	r1, [r2, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x82
	strh	r3, [r1, #0x0]
	ldr		r1, _080327a8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_0803284c
	mov		r2, #0x20
	ldrsh	r0, [r4, r2]
	mov		r3, #0x22
	ldrsh	r1, [r4, r3]
	mov		r3, #0x24
	ldrsh	r2, [r4, r3]
	sub		r2, #0x5
	lsl		r2, r2, #0x10
	asr		r2, r2, #0x10
	bl		sub_08055fac
	ldr		r0, _080327ac
	ldrh	r0, [r0, #0x0]
	ldr		r2, _080327b0
	ldr		r1, _080327b4
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	bl		sub_08070f0c
	mov		r0, #0xa5
	bl		sub_0807073c
	b		_0803284c

.incbin "base.gba", 0x3279A, 0x2

_0803279c:	.4byte 0x000012FF
_080327a0:	.4byte 0x25FE0000
_080327a4:	.4byte RunGameLogic_CallBack
_080327a8:	.4byte 0x00000838
_080327ac:	.4byte 0x0810777c
_080327b0:	.4byte 0x08124544
_080327b4:	.4byte 0x081245c8

_080327b8:
	mov		r0, #0x0
	ldrsh	r5, [r2, r0]
	cmp		r5, #0x0
	beq		_08032850
	cmp		r5, #0x37
	ble		_080327d4
	add		r1, r4, #0x0
	add		r1, #0x82
	mov		r2, #0xc0
	lsl		r2, r2, #0x3
	add		r0, r2, #0x0
	ldrh	r3, [r1, #0x0]
	add		r0, r0, r3
	b		_0803284a
_080327d4:
	cmp		r5, #0x2f
	ble		_080327ec
	add		r1, r4, #0x0
	add		r1, #0x82
	ldr		r2, _080327e8
	add		r0, r2, #0x0
	ldrh	r3, [r1, #0x0]
	add		r0, r0, r3
	b		_0803284a

.incbin "base.gba", 0x327E6, 0x2

_080327e8:	.4byte 0xFFFFFA00

_080327ec:
	cmp		r5, #0x27
	ble		_08032800
	add		r1, r4, #0x0
	add		r1, #0x82
	mov		r2, #0xc0
	lsl		r2, r2, #0x3
	add		r0, r2, #0x0
	ldrh	r3, [r1, #0x0]
	add		r0, r0, r3
	b		_0803284a
_08032800:
	cmp		r5, #0x1f
	ble		_08032818
	add		r1, r4, #0x0
	add		r1, #0x82
	ldr		r2, _08032814
	add		r0, r2, #0x0
	ldrh	r3, [r1, #0x0]
	add		r0, r0, r3
	b		_0803284a

.incbin "base.gba", 0x32812, 0x2

_08032814:	.4byte 0xFFFFFA00

_08032818:
	cmp		r5, #0x17
	ble		_0803282c
	add		r1, r4, #0x0
	add		r1, #0x82
	mov		r2, #0xc0
	lsl		r2, r2, #0x3
	add		r0, r2, #0x0
	ldrh	r3, [r1, #0x0]
	add		r0, r0, r3
	b		_0803284a
_0803282c:
	cmp		r5, #0xf
	ble		_0803284c
	add		r1, r4, #0x0
	add		r1, #0x82
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x0
	ble		_08032848
	ldr		r3, _08032844
	add		r0, r2, r3
	b		_0803284a

_08032844:	.4byte 0xFFFFFA00

_08032848:
	mov		r0, #0x0
_0803284a:
	strh	r0, [r1, #0x0]
_0803284c:
	mov		r0, #0x1
	b		_08032902
_08032850:
	add		r0, r4, #0x0
	add		r0, #0x7e
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x5
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	bhi		_0803287e
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_08036eec
	add		r2, r4, #0x0
	add		r2, #0x74
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x3
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r1, _08032908
	add		r1, #0x24
	add		r0, r4, #0x0
	bl		sub_0803ce54
_0803287e:
	add		r0, r4, #0x0
	add		r0, #0x92
	strh	r5, [r0, #0x0]
	add		r0, #0x2
	strh	r5, [r0, #0x0]
	ldr		r0, _08032908
	ldr		r1, _0803290c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08032900
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08032900
	mov		r6, #0x0
	mov		r5, #0x0
	ldr		r2, _08032910
	ldr		r3, _08032914
	mov		r0, #0xa2
	lsl		r0, r0, #0x3
	add		r4, r3, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_080328c8
	ldr		r1, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	cmp		r1, r0
	bne		_080328c8
	mov		r5, #0x1
_080328c8:
	cmp		r5, #0x0
	beq		_080328f6
	mov		r4, #0x0
	mov		r1, #0xa2
	lsl		r1, r1, #0x3
	add		r3, r3, r1
	ldrh	r0, [r3, #0x4]
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	ldr		r0, [r1, #0x4]
	cmp		r0, #0x0
	bge		_080328f0
	ldr		r1, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	bne		_080328f0
	mov		r4, #0x1
_080328f0:
	cmp		r4, #0x0
	bne		_080328f6
	mov		r6, #0x1
_080328f6:
	cmp		r6, #0x0
	bne		_08032900
	mov		r0, #0xa2
	bl		sub_0807073c
_08032900:
	mov		r0, #0x0
_08032902:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08032908:	.4byte RunGameLogic_CallBack
_0803290c:	.4byte 0x00000838
_08032910:	.4byte 0x08124544
_08032914:	.4byte 0x081245c8
	thumb_func_end sub_080326d8

	thumb_func_start sub_08032918
sub_08032918:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	add		r0, #0x54
	ldrb	r7, [r0, #0x0]
	add		r2, r5, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803293a
	ldr		r0, _08032954
	and		r0, r1
	strh	r0, [r2, #0x0]
_0803293a:
	add		r0, r5, #0x0
	add		r0, #0x7e
	ldrb	r1, [r0, #0x0]
	mov		r8, r0
	cmp		r1, #0xf
	bls		_0803294a
	bl		sub_08033168
_0803294a:
	lsl		r0, r1, #0x2
	ldr		r1, _08032958
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08032954:	.4byte 0x0000FFD3
_08032958:	.4byte 0x0803295c
_0803295c:	.4byte 0x080329aa

.incbin "base.gba", 0x32960, 0x3C
	thumb_func_end sub_08032918


.incbin "base.gba", 0x3299C, 0x7CC
	thumb_func_start sub_08033168
sub_08033168:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08033168

	thumb_func_start sub_08033174
sub_08033174:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r3, r4, #0x0
	add		r3, #0x82
	ldrh	r5, [r3, #0x0]
	mov		r0, #0x0
	ldrsh	r2, [r3, r0]
	ldr		r7, _080331ac
	cmp		r2, #0x0
	beq		_080331c6
	lsl		r0, r6, #0x4
	add		r0, r0, r7
	ldrh	r0, [r0, #0xc]
	add		r1, r0, #0x0
	cmp		r2, #0x0
	ble		_080331b0
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	sub		r0, r5, r0
	strh	r0, [r3, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_080331c6
	b		_080331c2

.incbin "base.gba", 0x331AA, 0x2

_080331ac:	.4byte 0x08106a34

_080331b0:
	cmp		r2, #0x0
	bge		_080331c6
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	add		r0, r0, r5
	strh	r0, [r3, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	ble		_080331c6
_080331c2:
	mov		r0, #0x0
	strh	r0, [r3, #0x0]
_080331c6:
	lsl		r0, r6, #0x4
	add		r0, r0, r7
	ldrh	r1, [r0, #0x8]
	mov		r12, r1
	mov		r7, #0x0
	mov		r5, #0x0
	add		r0, r4, #0x0
	add		r0, #0x80
	ldrh	r3, [r0, #0x0]
	mov		r6, #0x0
	ldrsh	r2, [r0, r6]
	mov		r8, r0
	cmp		r2, #0x0
	ble		_080331f4
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	sub		r0, r3, r0
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	asr		r0, r0, #0x10
	mvn		r0, r0
	lsr		r5, r0, #0x1f
	b		_0803320a
_080331f4:
	cmp		r2, #0x0
	bge		_0803320a
	mov		r1, r12
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	add		r0, r0, r3
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	cmp		r0, #0x0
	bgt		_0803320a
	mov		r5, #0x1
_0803320a:
	cmp		r5, #0x0
	beq		_08033214
	mov		r2, r8
	strh	r7, [r2, #0x0]
	b		_08033302
_08033214:
	ldr		r3, _080332cc
	add		r7, r3, #0x0
	add		r7, #0x24
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x40
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	add		r5, r2, #0x0
	cmp		r1, #0x0
	beq		_080332fc
	add		r1, r4, #0x0
	add		r1, #0xbc
	add		r0, r4, #0x0
	add		r0, #0xa8
	ldr		r0, [r0, #0x0]
	ldr		r6, _080332d0
	add		r0, r0, r6
	ldr		r1, [r1, #0x0]
	cmp		r1, r0
	blt		_080332e0
	add		r0, r4, #0x0
	add		r0, #0x84
	ldrb	r1, [r0, #0x0]
	add		r6, r0, #0x0
	cmp		r1, #0x8
	beq		_080332e0
	ldr		r1, [r4, #0x48]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	bne		_08033302
	ldr		r2, _080332d4
	add		r0, r3, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, r4
	bne		_08033272
	mov		r0, #0x20
	and		r1, r0
	cmp		r1, #0x0
	bne		_08033272
	mov		r0, #0x8c
	bl		sub_0807073c
_08033272:
	add		r0, r4, #0x0
	add		r0, #0xb0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	beq		_0803329c
	ldr		r3, _080332d8
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_0803329c
	mov		r1, #0x20
	ldrsh	r0, [r4, r1]
	mov		r2, #0x22
	ldrsh	r1, [r4, r2]
	mov		r3, #0x24
	ldrsh	r2, [r4, r3]
	sub		r2, #0x1
	lsl		r2, r2, #0x10
	asr		r2, r2, #0x10
	bl		sub_0805572c
_0803329c:
	add		r2, r4, #0x0
	add		r2, #0x7e
	mov		r1, #0x0
	mov		r0, #0xe
	strb	r0, [r2, #0x0]
	mov		r0, r8
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0xcc
	mov		r0, #0x30
	strh	r0, [r1, #0x0]
	mov		r0, #0xc
	strb	r0, [r6, #0x0]
	ldrh	r1, [r5, #0x0]
	ldr		r0, _080332dc
	and		r0, r1
	strh	r0, [r5, #0x0]
	ldr		r1, _080332cc
	add		r1, #0x24
	add		r0, r4, #0x0
	bl		sub_0803cecc
	b		_08033302

.incbin "base.gba", 0x332CA, 0x2

_080332cc:	.4byte RunGameLogic_CallBack
_080332d0:	.4byte 0xFF800000
_080332d4:	.4byte 0x00000838
_080332d8:	.4byte 0x00000814
_080332dc:	.4byte 0x0000FFBF

_080332e0:
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	and		r0, r1
	cmp		r0, #0x0
	bne		_08033302
	ldrh	r1, [r5, #0x0]
	ldr		r0, _080332f8
	and		r0, r1
	strh	r0, [r5, #0x0]
	b		_08033302

.incbin "base.gba", 0x332F6, 0x2

_080332f8:	.4byte 0x0000FFBF

_080332fc:
	add		r0, r4, #0x0
	add		r0, #0x7e
	strb	r1, [r0, #0x0]
_08033302:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08033174

	thumb_func_start sub_0803330c
sub_0803330c:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	ldr		r0, _08033374
	add		r7, r0, #0x0
	add		r7, #0x24
	add		r0, r6, #0x0
	add		r0, #0x90
	ldrb	r5, [r0, #0x0]
	ldrb	r1, [r0, #0x0]
	ldrh	r0, [r7, #0x14]
	sub		r0, #0x1
	cmp		r1, r0
	bne		_08033328
	sub		r5, #0x1
_08033328:
	lsl		r5, r5, #0x18
	lsr		r5, r5, #0x18
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_0802c5d0
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_0802c610
	add		r5, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0xd
	lsl		r5, r5, #0x10
	asr		r5, r5, #0xd
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_0802c35c
	add		r1, r6, #0x0
	add		r1, #0xa2
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x9e
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r5, [r0, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x33372, 0x2

_08033374:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_0803330c

	thumb_func_start sub_08033378
sub_08033378:
	push	{ r4, r5, r6, lr }
	mov		r12, r0
	mov		r2, r12
	add		r2, #0x7c
	add		r0, #0xa2
	ldrh	r4, [r2, #0x0]
	ldrh	r3, [r0, #0x0]
	sub		r0, r4, r3
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	add		r5, r1, #0x0
	mov		r6, #0x0
	cmp		r1, #0x0
	beq		_080333c4
	lsl		r0, r1, #0x10
	cmp		r0, #0x0
	ble		_080333ac
	ldr		r0, _080333a4
	cmp		r1, r0
	bls		_080333c0
	ldr		r1, _080333a8
	b		_080333b6

_080333a4:	.4byte 0x000001FF
_080333a8:	.4byte 0xFFFFFEC0

_080333ac:
	ldr		r0, _080333bc
	cmp		r5, r0
	bhi		_080333c0
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
_080333b6:
	add		r0, r4, r1
	strh	r0, [r2, #0x0]
	b		_080333c2

_080333bc:	.4byte 0x0000FDFF

_080333c0:
	strh	r3, [r2, #0x0]
_080333c2:
	mov		r6, #0x1
_080333c4:
	mov		r1, r12
	add		r1, #0x7c
	ldrh	r0, [r1, #0x0]
	mov		r2, r12
	add		r2, #0x56
	strh	r0, [r2, #0x0]
	ldrh	r1, [r1, #0x0]
	mov		r0, r12
	add		r0, #0x7a
	strh	r1, [r0, #0x0]
	mov		r0, #0x0
	cmp		r6, #0x0
	bne		_080333e0
	mov		r0, #0x1
_080333e0:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x333E6, 0x236
	thumb_func_end sub_08033378

	thumb_func_start sub_0803361c
sub_0803361c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	ldr		r0, _08033648
	add		r7, r0, #0x0
	add		r7, #0x24
	add		r0, r6, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x9
	bls		_0803363c
	bl		sub_08034394
_0803363c:
	lsl		r0, r0, #0x2
	ldr		r1, _0803364c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x33646, 0x2

_08033648:	.4byte RunGameLogic_CallBack
_0803364c:	.4byte 0x08033650
_08033650:	.4byte 0x08033678

.incbin "base.gba", 0x33654, 0x24
	thumb_func_end sub_0803361c


.incbin "base.gba", 0x33678, 0xCF4

_0803436c:

.incbin "base.gba", 0x3436C, 0x28
	thumb_func_start sub_08034394
sub_08034394:
	add		r0, r6, #0x0
	add		r0, #0xbc
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	sub		r0, #0x38
	mov		r2, #0x0
	strh	r1, [r0, #0x0]
	sub		r0, #0xa
	strb	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	sub		r0, #0x34
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	ldr		r0, [r6, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x7
	orr		r0, r1
	str		r0, [r6, #0x48]
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x343D2, 0x4C6
	thumb_func_end sub_08034394

	thumb_func_start sub_08034898
sub_08034898:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r3, r4, #0x0
	add		r3, #0xb4
	ldrh	r7, [r3, #0x0]
	mov		r0, #0x1
	and		r0, r7
	cmp		r0, #0x0
	beq		_08034920
	add		r0, r4, #0x0
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	mov		r6, #0x40
	neg		r6, r6
	cmp		r0, #0x0
	beq		_080348c0
	add		r6, #0x30
_080348c0:
	add		r2, r4, #0x0
	add		r2, #0x92
	ldrh	r5, [r2, #0x0]
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	ldr		r0, _080348e0
	cmp		r1, r0
	ble		_080348e4
	add		r0, r5, r6
	strh	r0, [r2, #0x0]
	ldrh	r1, [r3, #0x0]
	mov		r0, #0x20
	orr		r0, r1
	strh	r0, [r3, #0x0]
	b		_08034920

.incbin "base.gba", 0x348DE, 0x2

_080348e0:	.4byte 0x000001FF

_080348e4:
	ldr		r0, _08034928
	and		r0, r7
	strh	r0, [r3, #0x0]
	add		r2, r4, #0x0
	add		r2, #0xb2
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0803492c
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r0, _08034930
	ldr		r1, _08034934
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08034912
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08034912
	mov		r0, #0xa3
	bl		sub_08070808
_08034912:
	mov		r0, #0xcd
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xef
	and		r0, r1
	strb	r0, [r2, #0x0]
_08034920:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x34926, 0x2

_08034928:	.4byte 0x0000FFDE
_0803492c:	.4byte 0x0000FFFD
_08034930:	.4byte RunGameLogic_CallBack
_08034934:	.4byte 0x00000838
	thumb_func_end sub_08034898

	thumb_func_start sub_08034938
sub_08034938:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r0, r6, #0x0
	bl		sub_0802c7d0
	cmp		r0, #0x0
	bne		_08034a30
	add		r0, r4, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08034956
	cmp		r0, #0x7
	bne		_08034a30
_08034956:
	ldr		r0, _080349d4
	add		r1, r4, #0x0
	add		r1, #0x7e
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08034a30
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_080356ac
	add		r1, r4, #0x0
	add		r1, #0x56
	ldrh	r1, [r1, #0x0]
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_080356ac
	add		r1, r4, #0x0
	add		r1, #0x7a
	ldrh	r1, [r1, #0x0]
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	lsl		r0, r5, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0803499a
	neg		r0, r0
_0803499a:
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_080349a8
	neg		r0, r0
_080349a8:
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	add		r0, r4, #0x0
	add		r0, #0xb0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	bne		_080349dc
	ldr		r1, [r4, #0x48]
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	beq		_08034a30
	ldr		r0, _080349d8
	and		r1, r0
	str		r1, [r4, #0x48]
	add		r2, r4, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x4
	b		_08034a2a

_080349d4:	.4byte 0x08106e8c
_080349d8:	.4byte 0xfffffbff

_080349dc:
	ldr		r2, [r4, #0x48]
	mov		r6, #0x80
	lsl		r6, r6, #0x3
	add		r0, r2, #0x0
	and		r0, r6
	cmp		r0, #0x0
	beq		_08034a0c
	lsl		r1, r5, #0x10
	ldr		r0, _08034a04
	cmp		r1, r0
	bgt		_08034a30
	ldr		r0, _08034a08
	and		r2, r0
	str		r2, [r4, #0x48]
	add		r2, r4, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x4
	b		_08034a2a

_08034a04:	.4byte 0x2FFF0000
_08034a08:	.4byte 0xfffffbff

_08034a0c:
	lsl		r1, r5, #0x10
	ldr		r0, _08034a38
	cmp		r1, r0
	ble		_08034a30
	lsl		r1, r3, #0x10
	ldr		r0, _08034a3c
	cmp		r1, r0
	ble		_08034a30
	orr		r2, r6
	str		r2, [r4, #0x48]
	add		r2, r4, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x5
_08034a2a:
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
_08034a30:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x34A36, 0x2

_08034a38:	.4byte 0x67FF0000
_08034a3c:	.4byte 0x57FF0000
	thumb_func_end sub_08034938

	thumb_func_start sub_08034a40
sub_08034a40:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	cmp		r2, #0x7
	bhi		_08034b1e
	lsl		r0, r2, #0x2
	ldr		r1, _08034a5c
	add		r1, r0, r1
	ldr		r1, [r1, #0x0]
	mov		r9, r0
	mov		pc, r1

_08034a5c:	.4byte 0x08034a60
_08034a60:	.4byte 0x08034af0

.incbin "base.gba", 0x34A64, 0x1C
	thumb_func_end sub_08034a40


.incbin "base.gba", 0x34A80, 0x9E

_08034b1e:

.incbin "base.gba", 0x34B1E, 0x16
_08034b34:	.4byte 0x0000C007
	thumb_func_start sub_08034b38
sub_08034b38:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	add		r0, #0x85
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x8f
	bls		_08034b4a
	b		_08034cd0
_08034b4a:
	cmp		r0, #0x81
	bhi		_08034b50
	b		_08034cd0
_08034b50:
	cmp		r0, #0x84
	beq		_08034bbc
	ldr		r0, _08034b90
	add		r5, r0, #0x0
	add		r5, #0x24
	ldr		r1, [r7, #0x0]
	cmp		r1, #0x0
	bge		_08034b64
	ldr		r0, _08034b94
	add		r1, r1, r0
_08034b64:
	asr		r6, r1, #0x10
	ldr		r0, [r7, #0x4]
	cmp		r0, #0x0
	bge		_08034b70
	ldr		r1, _08034b94
	add		r0, r0, r1
_08034b70:
	asr		r4, r0, #0x10
	add		r0, r5, #0x0
	bl		sub_0802c72c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x8
	beq		_08034b98
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	mov		r3, #0x0
	bl		sub_0802c298
	b		_08034ba4

.incbin "base.gba", 0x34B8E, 0x2

_08034b90:	.4byte RunGameLogic_CallBack
_08034b94:	.4byte 0x0000FFFF

_08034b98:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	mov		r3, #0x8
	bl		sub_0802c298
_08034ba4:
	ldr		r0, _08034bb4
	ldr		r1, _08034bb8
	add		r0, r0, r1
	ldrh	r2, [r0, #0x0]
	mov		r1, #0x1
	orr		r1, r2
	strh	r1, [r0, #0x0]
	b		_08034cd0

_08034bb4:	.4byte RunGameLogic_CallBack
_08034bb8:	.4byte 0x00000C12

_08034bbc:
	ldr		r0, _08034bf8
	add		r5, r0, #0x0
	add		r5, #0x24
	ldr		r1, [r7, #0x0]
	cmp		r1, #0x0
	bge		_08034bcc
	ldr		r0, _08034bfc
	add		r1, r1, r0
_08034bcc:
	asr		r6, r1, #0x10
	ldr		r2, [r7, #0x4]
	cmp		r2, #0x0
	bge		_08034bd8
	ldr		r1, _08034bfc
	add		r2, r2, r1
_08034bd8:
	asr		r4, r2, #0x10
	add		r0, r5, #0x0
	bl		sub_0802c72c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x8
	beq		_08034c00
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	mov		r3, #0x0
	bl		sub_0802c298
	b		_08034c0c

.incbin "base.gba", 0x34BF6, 0x2

_08034bf8:	.4byte RunGameLogic_CallBack
_08034bfc:	.4byte 0x0000FFFF

_08034c00:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	mov		r3, #0x8
	bl		sub_0802c298
_08034c0c:
	ldr		r1, _08034cb8
	ldr		r0, _08034cbc
	add		r3, r1, r0
	ldrh	r2, [r3, #0x0]
	mov		r0, #0x1
	orr		r0, r2
	strh	r0, [r3, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xbc
	ldr		r4, [r0, #0x0]
	ldr		r0, _08034cc0
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r7, r0
	bne		_08034ca6
	ldr		r0, [r7, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08034ca6
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_08034c3c
	neg		r0, r4
_08034c3c:
	lsl		r0, r0, #0x6
	lsr		r0, r0, #0x16
	ldr		r1, _08034cc4
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	add		r0, r4, #0x0
	cmp		r0, #0x0
	bge		_08034c50
	neg		r0, r0
_08034c50:
	asr		r4, r0, #0x14
	mov		r0, #0x3f
	and		r4, r0
	add		r4, #0xc0
	lsl		r6, r6, #0x10
	asr		r6, r6, #0x10
	mov		r0, #0x7c
	bl		sub_0807073c
	ldr		r0, _08034cc8
	mov		r8, r0
	ldr		r5, _08034ccc
	mov		r1, #0xf8
	lsl		r1, r1, #0x2
	add		r5, r5, r1
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r4, #0x0
	bl		sub_0807169c
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08071704
_08034ca6:
	add		r0, r7, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_08034cd0
	mov		r0, #0x0
	b		_08034cd2

.incbin "base.gba", 0x34CB6, 0x2

_08034cb8:	.4byte RunGameLogic_CallBack
_08034cbc:	.4byte 0x00000C12
_08034cc0:	.4byte 0x00000838
_08034cc4:	.4byte 0xFFFFFE00
_08034cc8:	.4byte 0x08124544
_08034ccc:	.4byte 0x081245c8

_08034cd0:
	mov		r0, #0x1
_08034cd2:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08034b38

	thumb_func_start sub_08034cdc
sub_08034cdc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	mov		r9, r1
	ldr		r1, [r7, #0x8]
	mov		r2, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	cmp		r1, r0
	ble		_08034cf8
	mov		r2, #0x1
_08034cf8:
	cmp		r2, #0x0
	beq		_08034cfe
	b		_08034f5e
_08034cfe:
	ldr		r1, [r7, #0x0]
	ldr		r2, [r7, #0x4]
	mov		r0, r9
	mov		r3, #0x0
	bl		sub_0802c750
	cmp		r0, #0x0
	beq		_08034d24
	ldr		r0, [r7, #0x48]
	mov		r1, #0x1
	orr		r0, r1
	str		r0, [r7, #0x48]
	mov		r0, r9
	mov		r1, #0x0
	bl		sub_0802c474
	add		r1, r7, #0x0
	add		r1, #0x85
	b		_08034f64
_08034d24:
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x0
	bge		_08034d2e
	ldr		r1, _08034ddc
	add		r0, r0, r1
_08034d2e:
	lsr		r1, r0, #0x10
	ldr		r2, [r7, #0x4]
	cmp		r2, #0x0
	bge		_08034d3a
	ldr		r4, _08034ddc
	add		r2, r2, r4
_08034d3a:
	asr		r2, r2, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08034d44
	add		r0, r2, #0x7
_08034d44:
	asr		r0, r0, #0x3
	lsl		r3, r0, #0x8
	lsl		r0, r1, #0x10
	asr		r1, r0, #0x10
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08034d54
	add		r0, r1, #0x7
_08034d54:
	asr		r0, r0, #0x3
	add		r3, r3, r0
	mov		r10, r3
	mov		r0, r9
	mov		r3, #0x0
	bl		sub_0802c490
	add		r2, r7, #0x0
	add		r2, #0x85
	strb	r0, [r2, #0x0]
	mov		r1, #0x90
	and		r1, r0
	add		r5, r2, #0x0
	cmp		r1, #0x80
	beq		_08034d74
	b		_08034f4a
_08034d74:
	add		r0, r7, #0x0
	bl		sub_08034b38
	cmp		r0, #0x0
	bne		_08034d80
	b		_08034f66
_08034d80:
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08034de0
	add		r0, r7, #0x0
	add		r0, #0x7e
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x5
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	bhi		_08034de0
	add		r2, r7, #0x0
	add		r2, #0x4e
	ldrh	r3, [r2, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	add		r1, r7, #0x0
	add		r1, #0x50
	cmp		r0, #0x0
	bne		_08034db6
	mov		r4, #0x0
	ldrsh	r0, [r1, r4]
	cmp		r0, #0x0
	beq		_08034dd0
_08034db6:
	neg		r0, r3
	strh	r0, [r2, #0x0]
	ldrh	r0, [r1, #0x0]
	neg		r0, r0
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0xa
	orr		r0, r1
	str		r0, [r7, #0x48]
	add		r0, r7, #0x0
	bl		sub_0803a75c
_08034dd0:
	add		r1, r7, #0x0
	add		r1, #0x60
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	b		_08034f68

.incbin "base.gba", 0x34DDA, 0x2

_08034ddc:	.4byte 0x0000FFFF

_08034de0:
	add		r2, r7, #0x0
	add		r2, #0x62
	mov		r1, #0x0
	mov		r0, #0x8
	strh	r0, [r2, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x9c
	strh	r1, [r0, #0x0]
	add		r2, #0x52
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08034e14
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r4, _08034e18
	add		r4, #0x24
	mov		r0, r9
	bl		sub_0802c72c
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	mov		r8, r4
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x84
	bne		_08034e1c
	mov		r3, #0x7c
	b		_08034e2e

_08034e14:	.4byte 0x0000FFBF
_08034e18:	.4byte RunGameLogic_CallBack

_08034e1c:
	cmp		r1, #0x0
	beq		_08034e28
	cmp		r1, #0xc
	bne		_08034e2c
	mov		r3, #0xa9
	b		_08034e2e
_08034e28:
	mov		r3, #0xaa
	b		_08034e2e
_08034e2c:
	mov		r3, #0xa8
_08034e2e:
	lsl		r3, r3, #0x10
	mov		r5, #0x0
	ldr		r2, _08034f0c
	ldr		r1, _08034f10
	lsr		r0, r3, #0xd
	add		r6, r0, r1
	ldrh	r1, [r6, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_08034e56
	ldr		r1, [r1, #0x0]
	ldr		r0, [r6, #0x0]
	cmp		r1, r0
	bne		_08034e56
	mov		r5, #0x1
_08034e56:
	cmp		r5, #0x0
	bne		_08034ee6
	lsr		r5, r3, #0x10
	add		r0, r7, #0x0
	add		r0, #0xbc
	ldr		r4, [r0, #0x0]
	ldr		r0, _08034f14
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r7, r0
	bne		_08034ee6
	ldr		r0, [r7, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08034ee6
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_08034e7e
	neg		r0, r4
_08034e7e:
	lsl		r0, r0, #0x6
	lsr		r0, r0, #0x16
	ldr		r1, _08034f18
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	add		r0, r4, #0x0
	cmp		r0, #0x0
	bge		_08034e92
	neg		r0, r0
_08034e92:
	asr		r4, r0, #0x14
	mov		r0, #0x3f
	and		r4, r0
	add		r4, #0xc0
	lsl		r6, r6, #0x10
	asr		r6, r6, #0x10
	add		r0, r5, #0x0
	bl		sub_0807073c
	ldr		r2, _08034f0c
	mov		r8, r2
	ldr		r0, _08034f10
	lsl		r5, r5, #0x3
	add		r5, r5, r0
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r4, #0x0
	bl		sub_0807169c
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08071704
_08034ee6:
	add		r1, r7, #0x0
	add		r1, #0x5e
	ldrh	r0, [r1, #0x0]
	mov		r4, r10
	sub		r0, r4, r0
	strh	r4, [r1, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08034f20
	neg		r0, r0
	lsl		r0, r0, #0x10
	ldr		r1, _08034f1c
	add		r0, r0, r1
	lsr		r2, r0, #0x10
	cmp		r0, #0x0
	bge		_08034f32
	mov		r2, #0x4
	b		_08034f32

_08034f0c:	.4byte 0x08124544
_08034f10:	.4byte 0x081245c8
_08034f14:	.4byte 0x00000814
_08034f18:	.4byte 0xFFFFFE00
_08034f1c:	.4byte 0xFF060000

_08034f20:
	sub		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_08034f32
	sub		r0, #0xfd
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_08034f32:
	lsl		r2, r2, #0x10
	lsr		r0, r2, #0x10
	cmp		r0, #0x7
	bls		_08034f3e
	mov		r0, #0x1
	b		_08034f68
_08034f3e:
	asr		r2, r2, #0x10
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_08034a40
	b		_08034f68
_08034f4a:
	ldr		r0, [r7, #0x48]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r7, #0x48]
	add		r0, r7, #0x0
	add		r0, #0x5e
	mov		r2, r10
	strh	r2, [r0, #0x0]
	b		_08034f66
_08034f5e:
	add		r1, r7, #0x0
	add		r1, #0x85
	mov		r0, #0x40
_08034f64:
	strb	r0, [r1, #0x0]
_08034f66:
	mov		r0, #0x0
_08034f68:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x34F76, 0x2
	thumb_func_end sub_08034cdc

	thumb_func_start sub_08034f78
sub_08034f78:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r7, r1, #0x0
	add		r5, r4, #0x0
	add		r5, #0x60
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	beq		_08034f90
	b		_080350cc
_08034f90:
	add		r0, r4, #0x0
	add		r1, r7, #0x0
	bl		sub_08034cdc
	cmp		r0, #0x0
	beq		_08034fcc
	ldrh	r2, [r5, #0x0]
	ldrb	r1, [r5, #0x0]
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	and		r0, r2
	strh	r0, [r5, #0x0]
	add		r1, #0x1
	lsl		r1, r1, #0x18
	lsr		r2, r1, #0x18
	ldrh	r1, [r5, #0x0]
	cmp		r2, #0x7
	bhi		_08034fba
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	b		_08034fbe
_08034fba:
	mov		r0, #0xc0
	lsl		r0, r0, #0x8
_08034fbe:
	orr		r1, r0
	orr		r1, r2
	add		r0, r4, #0x0
	add		r0, #0x60
	strh	r1, [r0, #0x0]
	add		r5, r0, #0x0
	b		_08035112
_08034fcc:
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_080350bc
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r4, #0x48]
	add		r5, r4, #0x0
	add		r5, #0x4e
	mov		r0, #0x0
	ldrsh	r2, [r5, r0]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08034ff2
	neg		r0, r2
_08034ff2:
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	add		r0, r4, #0x0
	add		r0, #0x50
	mov		r6, #0x0
	ldrsh	r1, [r0, r6]
	add		r6, r0, #0x0
	cmp		r1, #0x0
	bge		_08035006
	neg		r1, r1
_08035006:
	lsl		r0, r1, #0x10
	lsr		r1, r0, #0x10
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0xbf
	bgt		_0803501a
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0xbf
	ble		_0803508c
_0803501a:
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	ldr		r0, _08035044
	cmp		r1, r0
	ble		_08035048
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0803502e
	add		r0, r2, #0x3
_0803502e:
	asr		r0, r0, #0x2
	strh	r0, [r5, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp		r0, #0x0
	bge		_0803503c
	add		r0, #0x3
_0803503c:
	asr		r0, r0, #0x2
	strh	r0, [r6, #0x0]
	b		_080350bc

.incbin "base.gba", 0x35042, 0x2

_08035044:	.4byte 0x04FFFFFF

_08035048:
	ldr		r0, _08035084
	add		r3, r4, #0x0
	add		r3, #0x5c
	ldrh	r1, [r3, #0x0]
	lsl		r1, r1, #0x1
	add		r0, r1, r0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mul		r0, r2
	cmp		r0, #0x0
	bge		_08035060
	add		r0, #0xff
_08035060:
	asr		r0, r0, #0x8
	strh	r0, [r5, #0x0]
	mov		r0, #0x0
	ldrsh	r2, [r6, r0]
	ldr		r1, _08035088
	ldrh	r0, [r3, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mul		r0, r2
	cmp		r0, #0x0
	bge		_0803507c
	add		r0, #0xff
_0803507c:
	asr		r0, r0, #0x8
	strh	r0, [r6, #0x0]
	b		_080350bc

.incbin "base.gba", 0x35082, 0x2

_08035084:	.4byte 0x0810738c
_08035088:	.4byte 0x08107394

_0803508c:
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	cmp		r0, #0x0
	beq		_080350a4
	ldr		r2, _080350c8
	add		r1, r2, #0x0
	cmp		r0, #0x0
	blt		_080350a2
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r1, r0, #0x0
_080350a2:
	strh	r1, [r5, #0x0]
_080350a4:
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp		r0, #0x0
	beq		_080350bc
	ldr		r2, _080350c8
	add		r1, r2, #0x0
	cmp		r0, #0x0
	blt		_080350ba
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r1, r0, #0x0
_080350ba:
	strh	r1, [r6, #0x0]
_080350bc:
	add		r1, r4, #0x0
	add		r1, #0x60
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r5, r1, #0x0
	b		_08035112

_080350c8:	.4byte 0xFFFFFF00

_080350cc:
	add		r0, r4, #0x0
	add		r1, r7, #0x0
	bl		sub_08034cdc
	cmp		r0, #0x0
	beq		_08035110
	add		r0, r4, #0x0
	add		r0, #0x56
	ldrh	r1, [r0, #0x0]
	lsr		r1, r1, #0xe
	ldr		r0, _08035108
	lsl		r1, r1, #0x1
	add		r0, r1, r0
	ldrh	r0, [r0, #0x0]
	add		r3, r4, #0x0
	add		r3, #0x4e
	mov		r2, #0x0
	strh	r0, [r3, #0x0]
	ldr		r0, _0803510c
	add		r1, r1, r0
	ldrh	r1, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x50
	strh	r1, [r0, #0x0]
	add		r0, #0xa
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	b		_08035112

.incbin "base.gba", 0x35106, 0x2

_08035108:	.4byte 0x0810737c
_0803510c:	.4byte 0x08107384

_08035110:
	strh	r0, [r5, #0x0]
_08035112:
	ldr		r1, [r4, #0x8]
	mov		r2, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	cmp		r1, r0
	ble		_08035120
	mov		r2, #0x1
_08035120:
	cmp		r2, #0x0
	bne		_08035198
	ldr		r1, [r4, #0x0]
	ldr		r2, [r4, #0x4]
	add		r0, r7, #0x0
	mov		r3, #0x0
	bl		sub_0802c750
	cmp		r0, #0x0
	beq		_0803514c
	ldr		r0, [r4, #0x48]
	mov		r1, #0x1
	orr		r0, r1
	str		r0, [r4, #0x48]
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_0802c474
	add		r1, r4, #0x0
	add		r1, #0x85
	strb	r0, [r1, #0x0]
	b		_08035198
_0803514c:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bge		_08035156
	ldr		r1, _080351b0
	add		r0, r0, r1
_08035156:
	lsr		r2, r0, #0x10
	ldr		r0, [r4, #0x4]
	cmp		r0, #0x0
	bge		_08035162
	ldr		r6, _080351b0
	add		r0, r0, r6
_08035162:
	lsr		r3, r0, #0x10
	add		r0, r4, #0x0
	add		r0, #0x85
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x90
	and		r0, r1
	cmp		r0, #0x90
	bne		_08035198
	lsl		r0, r2, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0803517c
	add		r0, #0x7
_0803517c:
	asr		r0, r0, #0x3
	lsl		r0, r0, #0x3
	add		r1, r0, #0x4
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0803518c
	add		r0, #0x7
_0803518c:
	asr		r2, r0, #0x3
	lsl		r2, r2, #0x3
	add		r2, #0x4
	add		r0, r4, #0x0
	bl		sub_0803a210
_08035198:
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_080351d0
	ldrh	r0, [r4, #0x38]
	cmp		r0, #0x0
	beq		_080351b4
	sub		r0, #0x1
	strh	r0, [r4, #0x38]
	b		_080351d0

_080351b0:	.4byte 0x0000FFFF

_080351b4:
	add		r1, r4, #0x0
	add		r1, #0x62
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_080351cc
	ldr		r0, [r4, #0x48]
	ldr		r1, _080351c8
	and		r0, r1
	b		_080351d8

.incbin "base.gba", 0x351C6, 0x2

_080351c8:	.4byte 0xffffbfff

_080351cc:
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
_080351d0:
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x7
	orr		r0, r1
_080351d8:
	str		r0, [r4, #0x48]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08034f78

	thumb_func_start sub_080351e0
sub_080351e0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	mov		r8, r1
	ldr		r1, _08035250
	add		r6, r1, #0x0
	add		r6, #0x24
	add		r0, #0xf0
	mov		r2, #0x0
	ldrsh	r5, [r0, r2]
	mov		r3, #0x6
	ldrsh	r7, [r4, r3]
	ldr		r0, _08035254
	add		r1, r1, r0
	ldrh	r1, [r1, #0x0]
	add		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803520a
	b		_080353a0
_0803520a:
	ldr		r1, [r4, #0x48]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08035216
	b		_080353a0
_08035216:
	add		r0, r4, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x6
	bne		_08035222
	b		_080353a0
_08035222:
	mov		r0, #0xc1
	neg		r0, r0
	and		r1, r0
	str		r1, [r4, #0x48]
	mov		r0, r8
	bl		sub_0802c4b8
	cmp		r0, r5
	beq		_08035258
	cmp		r0, r5
	blt		_08035258
	cmp		r0, r7
	ble		_0803523e
	b		_080353a0
_0803523e:
	add		r2, r4, #0x0
	add		r2, #0x91
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x74
	bhi		_0803524a
	b		_080353a0
_0803524a:
	sub		r0, #0x1
	strb	r0, [r2, #0x0]
	b		_080353a0

_08035250:	.4byte RunGameLogic_CallBack
_08035254:	.4byte 0x000007FE

_08035258:
	cmp		r0, r7
	bgt		_0803525e
	b		_080353a0
_0803525e:
	add		r2, r4, #0x0
	add		r2, #0x91
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	mov		r1, #0x0
	strb	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x90
	strb	r1, [r0, #0x0]
	sub		r0, #0x5a
	strb	r1, [r0, #0x0]
	ldrb	r0, [r2, #0x0]
	lsl		r2, r0, #0x8
	add		r1, r4, #0x0
	add		r1, #0xc6
	ldrh	r3, [r1, #0x0]
	cmp		r2, r3
	bgt		_08035284
	b		_080353a0
_08035284:
	mov		r7, #0x0
	strh	r2, [r1, #0x0]
	mov		r5, #0x80
	lsl		r5, r5, #0x8
	cmp		r0, #0x80
	bne		_08035292
	b		_080353a0
_08035292:
	ldr		r2, _08035300
	add		r0, r6, r2
	ldrh	r2, [r0, #0x0]
	ldrh	r1, [r1, #0x0]
	sub		r0, r1, r2
	cmp		r0, #0x0
	blt		_08035310
	ldr		r5, [r4, #0x48]
	mov		r0, #0x20
	and		r5, r0
	cmp		r5, #0x0
	bne		_08035386
	ldr		r3, _08035304
	add		r0, r6, r3
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_080352d0
	add		r2, r4, #0x0
	add		r2, #0xa4
	ldrh	r0, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x7
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	bl		sub_08048a34
	mov		r1, #0x8
	ldr		r2, _08035308
	add		r0, r6, r2
	str		r1, [r0, #0x0]
_080352d0:
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_080376f8
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_0803cae0
	ldr		r0, [r4, #0x48]
	mov		r1, #0x39
	neg		r1, r1
	and		r0, r1
	ldr		r1, _0803530c
	orr		r0, r1
	str		r0, [r4, #0x48]
	add		r0, r4, #0x0
	add		r0, #0x82
	strh	r5, [r0, #0x0]
	sub		r0, #0x2
	strh	r5, [r0, #0x0]
	sub		r0, #0x2
	strb	r7, [r0, #0x0]
	b		_08035386

.incbin "base.gba", 0x352FE, 0x2

_08035300:	.4byte 0x000007E6
_08035304:	.4byte 0x00000814
_08035308:	.4byte 0x00000BE4
_0803530c:	.4byte 0x00002038

_08035310:
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r0, r1, r3
	cmp		r0, r2
	bne		_08035354
	ldr		r0, [r4, #0x48]
	mov		r1, #0x8
	orr		r0, r1
	str		r0, [r4, #0x48]
	ldr		r3, _0803534c
	add		r0, r6, r3
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08035336
	ldr		r1, _08035350
	mov		r0, #0x0
	mov		r2, #0x0
	bl		sub_08029d24
_08035336:
	add		r0, r4, #0x0
	add		r0, #0xa4
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x80
	orr		r1, r2
	strh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_080376f8
	b		_08035386

_0803534c:	.4byte 0x00000814
_08035350:	.4byte 0x0810739c

_08035354:
	ldr		r0, [r4, #0x48]
	mov		r1, #0x4
	orr		r0, r1
	str		r0, [r4, #0x48]
	and		r0, r5
	cmp		r0, #0x0
	beq		_08035386
	add		r2, r4, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r1, _080353ac
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_0803537e
	mov		r0, #0x6b
	bl		sub_0807073c
_0803537e:
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_080376f8
_08035386:
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	and		r0, r1
	cmp		r0, #0x0
	beq		_080353a0
	add		r0, r4, #0x0
	mov		r1, r8
	bl		sub_080376ac
	ldr		r2, _080353b0
	add		r1, r4, r2
	strb	r0, [r1, #0x0]
_080353a0:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x353AA, 0x2

_080353ac:	.4byte 0x00000814
_080353b0:	.4byte 0x00000191
	thumb_func_end sub_080351e0

	thumb_func_start sub_080353b4
sub_080353b4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	ldr		r0, [r5, #0x48]
	mov		r1, #0x4
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x48]
	ldr		r1, [r5, #0x0]
	cmp		r1, #0x0
	bge		_080353d2
	ldr		r0, _08035400
	add		r1, r1, r0
_080353d2:
	lsr		r7, r1, #0x10
	ldr		r2, [r5, #0x4]
	cmp		r2, #0x0
	bge		_080353de
	ldr		r1, _08035400
	add		r2, r2, r1
_080353de:
	lsr		r4, r2, #0x10
	ldr		r2, _08035404
	add		r2, r2, r5
	mov		r8, r2
	mov		r0, #0x0
	strb	r0, [r2, #0x0]
	ldr		r1, [r5, #0x0]
	ldr		r2, [r5, #0x4]
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_0802c750
	cmp		r0, #0x0
	beq		_08035408
	ldr		r0, [r5, #0x48]
	mov		r1, #0x1
	b		_08035490

_08035400:	.4byte 0x0000FFFF
_08035404:	.4byte 0x0000019B

_08035408:
	lsl		r1, r7, #0x10
	asr		r1, r1, #0x10
	lsl		r2, r4, #0x10
	asr		r2, r2, #0x10
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_0802c3d4
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	mov		r7, #0x80
	add		r0, r4, #0x0
	and		r0, r7
	cmp		r0, #0x0
	beq		_0803545c
	mov		r1, #0x7f
	and		r4, r1
	cmp		r4, #0x7f
	bne		_08035438
	ldr		r0, [r5, #0x48]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r5, #0x48]
	b		_0803544a
_08035438:
	add		r0, r5, #0x0
	add		r0, #0x90
	ldrb	r2, [r0, #0x0]
	cmp		r4, r2
	beq		_0803544a
	strb	r4, [r0, #0x0]
	and		r4, r1
	sub		r0, #0x5a
	strb	r4, [r0, #0x0]
_0803544a:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_080351e0
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_080448fc
	b		_080354b4
_0803545c:
	cmp		r4, #0x7f
	beq		_0803548c
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_080448fc
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_0802c650
	mov		r1, r8
	strb	r0, [r1, #0x0]
	and		r0, r7
	cmp		r0, #0x0
	beq		_08035496
	ldr		r1, [r5, #0x8]
	mov		r2, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	cmp		r1, r0
	ble		_08035488
	mov		r2, #0x1
_08035488:
	cmp		r2, #0x0
	beq		_08035496
_0803548c:
	ldr		r0, [r5, #0x48]
	mov		r1, #0x2
_08035490:
	orr		r0, r1
	str		r0, [r5, #0x48]
	b		_080354b4
_08035496:
	add		r0, r5, #0x0
	add		r0, #0x90
	ldrb	r2, [r0, #0x0]
	cmp		r4, r2
	beq		_080354b4
	strb	r4, [r0, #0x0]
	mov		r0, #0x7f
	and		r4, r0
	add		r0, r5, #0x0
	add		r0, #0x36
	strb	r4, [r0, #0x0]
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_080448fc
_080354b4:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x354BE, 0x2
	thumb_func_end sub_080353b4

	thumb_func_start sub_080354c0
sub_080354c0:
	push	{ r4, r5, r6, lr }
	mov		r12, r0
	add		r0, #0xb6
	ldrh	r2, [r0, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	cmp		r0, r1
	ble		_080354d6
	add		r2, r1, #0x0
_080354d6:
	lsl		r0, r2, #0x10
	asr		r3, r0, #0x10
	mov		r2, r12
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r1
	add		r6, r2, #0x0
	cmp		r0, #0x0
	bne		_080354f2
	neg		r0, r3
	lsl		r0, r0, #0x10
	b		_080354f4
_080354f2:
	lsl		r0, r3, #0x10
_080354f4:
	lsr		r1, r0, #0x10
	mov		r0, r12
	add		r0, #0x82
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	ldrh	r2, [r0, #0x0]
	add		r3, r1, r2
	strh	r3, [r0, #0x0]
	mov		r2, r12
	add		r2, #0xb6
	ldrh	r5, [r2, #0x0]
	mov		r4, #0x0
	ldrsh	r1, [r2, r4]
	add		r4, r0, #0x0
	cmp		r1, #0xff
	ble		_0803551c
	add		r0, r5, #0x0
	sub		r0, #0x40
	strh	r0, [r2, #0x0]
	b		_08035566
_0803551c:
	lsl		r0, r3, #0x10
	cmp		r0, #0x0
	blt		_08035534
	ldr		r1, _08035530
	add		r0, r3, r1
	strh	r0, [r4, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08035566
	b		_08035542

_08035530:	.4byte 0xFFFFFB80

_08035534:
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	add		r0, r3, r2
	strh	r0, [r4, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	blt		_08035566
_08035542:
	mov		r0, r12
	add		r0, #0x84
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	mov		r2, #0x0
	strh	r1, [r4, #0x0]
	sub		r0, #0x4
	strh	r1, [r0, #0x0]
	sub		r0, #0x2
	strb	r2, [r0, #0x0]
	ldrh	r1, [r6, #0x0]
	ldr		r0, _0803556c
	and		r0, r1
	mov		r4, #0x80
	lsl		r4, r4, #0x3
	add		r1, r4, #0x0
	orr		r0, r1
	strh	r0, [r6, #0x0]
_08035566:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0803556c:	.4byte 0x000040FF
	thumb_func_end sub_080354c0

	thumb_func_start sub_08035570
sub_08035570:
	push	{ r4, lr }
	mov		r12, r0
	mov		r2, r12
	add		r2, #0xca
	mov		r1, r12
	add		r1, #0x7a
	ldrh	r0, [r2, #0x0]
	ldrh	r4, [r1, #0x0]
	sub		r0, r0, r4
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x10
	cmp		r1, #0x0
	blt		_080355c8
	ldr		r0, _080355c4
	cmp		r1, r0
	ble		_08035614
	cmp		r1, r0
	ble		_08035596
	add		r1, r0, #0x0
_08035596:
	mov		r0, #0xba
	lsl		r0, r0, #0x1
	add		r0, r12
	ldr		r2, [r0, #0x0]
	asr		r1, r1, #0x6
	mov		r0, #0x7
	and		r1, r0
	mov		r0, r12
	add		r0, #0x9a
	ldrb	r3, [r0, #0x0]
	mov		r0, #0xf
	and		r0, r3
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	add		r2, r2, r1
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r4, r0
	b		_08035606

.incbin "base.gba", 0x355C2, 0x2

_080355c4:	.4byte 0x000001FF

_080355c8:
	ldr		r0, _0803560c
	cmp		r1, r0
	bge		_08035614
	neg		r0, r1
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x10
	ldr		r0, _08035610
	cmp		r1, r0
	ble		_080355dc
	add		r1, r0, #0x0
_080355dc:
	mov		r0, #0xba
	lsl		r0, r0, #0x1
	add		r0, r12
	ldr		r2, [r0, #0x0]
	asr		r1, r1, #0x6
	mov		r0, #0x7
	and		r1, r0
	mov		r0, r12
	add		r0, #0x9a
	ldrb	r3, [r0, #0x0]
	mov		r0, #0xf
	and		r0, r3
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	add		r2, r2, r1
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r4, r0
_08035606:
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	b		_08035616

_0803560c:	.4byte 0xFFFFFE00
_08035610:	.4byte 0x000001FF

_08035614:
	ldrh	r1, [r2, #0x0]
_08035616:
	mov		r0, r12
	add		r0, #0x7a
	strh	r1, [r0, #0x0]
	sub		r0, #0x24
	strh	r1, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x35626, 0x2
	thumb_func_end sub_08035570

	thumb_func_start sub_08035628
sub_08035628:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0xa0
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08035656
	add		r0, r4, #0x0
	bl		sub_080354c0
	add		r1, r4, #0x0
	add		r1, #0x7a
	add		r0, r4, #0x0
	add		r0, #0x82
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	add		r1, r4, #0x0
	add		r1, #0x56
	strh	r0, [r1, #0x0]
	b		_080356a6
_08035656:
	add		r0, r4, #0x0
	add		r0, #0x56
	add		r1, r4, #0x0
	add		r1, #0x7a
	ldrh	r3, [r0, #0x0]
	ldrh	r5, [r1, #0x0]
	sub		r0, r3, r5
	lsl		r0, r0, #0x10
	asr		r2, r0, #0x10
	add		r6, r1, #0x0
	cmp		r2, #0x0
	beq		_080356a0
	cmp		r2, #0x0
	ble		_08035684
	ldr		r0, _08035680
	cmp		r2, r0
	ble		_0803568c
	mov		r1, #0xc0
	lsl		r1, r1, #0x3
	b		_08035696

.incbin "base.gba", 0x3567E, 0x2

_08035680:	.4byte 0x000007FF

_08035684:
	neg		r1, r2
	ldr		r0, _08035690
	cmp		r1, r0
	bgt		_08035694
_0803568c:
	add		r0, r3, #0x0
	b		_08035698

_08035690:	.4byte 0x000007FF

_08035694:
	ldr		r1, _0803569c
_08035696:
	add		r0, r5, r1
_08035698:
	strh	r0, [r6, #0x0]
	b		_080356a6

_0803569c:	.4byte 0xFFFFFA00

_080356a0:
	add		r0, r4, #0x0
	bl		sub_08035570
_080356a6:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08035628

	thumb_func_start sub_080356ac
sub_080356ac:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, [r4, #0x48]
	mov		r1, #0x3
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803570c
	add		r6, r4, #0x0
	add		r6, #0x90
	ldrb	r1, [r6, #0x0]
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_0802c5d0
	lsl		r1, r0, #0x3
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bge		_080356d6
	ldr		r2, _08035708
	add		r0, r0, r2
_080356d6:
	asr		r0, r0, #0x10
	sub		r0, r1, r0
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	ldrb	r1, [r6, #0x0]
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_0802c610
	lsl		r2, r0, #0x3
	ldr		r0, [r4, #0x4]
	cmp		r0, #0x0
	bge		_080356f4
	ldr		r3, _08035708
	add		r0, r0, r3
_080356f4:
	asr		r1, r0, #0x10
	sub		r1, r2, r1
	lsl		r0, r7, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_08028738
	b		_08035734

.incbin "base.gba", 0x35706, 0x2

_08035708:	.4byte 0x0000FFFF

_0803570c:
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	bge		_08035716
	ldr		r0, _08035744
	add		r1, r1, r0
_08035716:
	lsr		r1, r1, #0x10
	ldr		r2, [r4, #0x4]
	cmp		r2, #0x0
	bge		_08035722
	ldr		r3, _08035744
	add		r2, r2, r3
_08035722:
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	asr		r2, r2, #0x10
	ldr		r3, _08035748
	add		r0, r4, r3
	ldrb	r3, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_0802c35c
_08035734:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x35742, 0x2

_08035744:	.4byte 0x0000FFFF
_08035748:	.4byte 0x00000191
	thumb_func_end sub_080356ac

	thumb_func_start sub_0803574c
sub_0803574c:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	bl		sub_080356ac
	ldr		r1, _08035780
	and		r1, r0
	add		r0, r4, #0x0
	add		r0, #0xca
	mov		r6, #0x0
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x96
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	strh	r0, [r1, #0x0]
	add		r5, r4, #0x0
	add		r5, #0x84
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x1
	bne		_08035776
	b		_080358b0
_08035776:
	cmp		r0, #0x1
	bgt		_08035784
	cmp		r0, #0x0
	beq		_08035790
	b		_08035950

_08035780:	.4byte 0xFFFFFF00

_08035784:
	cmp		r0, #0x8
	beq		_08035868
	cmp		r0, #0xb
	bne		_0803578e
	b		_080358ba
_0803578e:
	b		_08035950
_08035790:
	ldr		r1, _08035828
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x3
	and		r1, r0
	mov		r2, #0xbc
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldrh	r5, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x4c
	ldrb	r0, [r0, #0x0]
	mov		r6, #0x7
	and		r6, r0
	mov		r3, #0xba
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	ldr		r2, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x9a
	ldrb	r3, [r0, #0x0]
	mov		r7, #0xf
	add		r0, r7, #0x0
	and		r0, r3
	lsl		r0, r0, #0x2
	add		r1, r1, r0
	lsl		r0, r6, #0x2
	add		r0, r0, r6
	lsl		r0, r0, #0x2
	add		r1, r1, r0
	add		r2, #0x80
	add		r2, r2, r1
	ldrb	r0, [r2, #0x0]
	lsl		r2, r0, #0x4
	cmp		r5, #0x10
	ble		_080357da
	mov		r5, #0x10
_080357da:
	lsl		r0, r5, #0x1
	ldr		r3, _0803582c
	add		r1, r4, r3
	ldrb	r1, [r1, #0x0]
	add		r1, r2, r1
	add		r1, r1, r0
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_080357f6
	ldr		r3, _08035830
	add		r0, r2, r3
_080357f6:
	asr		r0, r0, #0x10
	sub		r0, r1, r0
	cmp		r0, #0x0
	blt		_08035838
	asr		r0, r2, #0x10
	ldr		r1, _08035834
	cmp		r0, r1
	ble		_08035808
	add		r0, r1, #0x0
_08035808:
	asr		r2, r0, #0x6
	and		r2, r7
	add		r3, r4, #0x0
	add		r3, #0xc0
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	lsl		r1, r6, #0x4
	add		r2, r2, r1
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0xc
	str		r0, [r3, #0x0]
	b		_08035956

.incbin "base.gba", 0x35826, 0x2

_08035828:	.4byte 0x0000019B
_0803582c:	.4byte 0x0000019D
_08035830:	.4byte 0x0000FFFF
_08035834:	.4byte 0x000003FF

_08035838:
	neg		r0, r0
	ldr		r1, _08035860
	cmp		r0, r1
	ble		_08035842
	add		r0, r1, #0x0
_08035842:
	add		r2, r4, #0x0
	add		r2, #0xc0
	ldrh	r1, [r2, #0x0]
	str		r1, [r2, #0x0]
	ldr		r3, _08035864
	asr		r0, r0, #0x6
	lsl		r0, r0, #0x1
	add		r0, r0, r3
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x10
	orr		r1, r0
	str		r1, [r2, #0x0]
	b		_08035956

.incbin "base.gba", 0x3585E, 0x2

_08035860:	.4byte 0x000001FF
_08035864:	.4byte 0x081073bc

_08035868:
	add		r1, r4, #0x0
	add		r1, #0xcc
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_0803589a
	sub		r1, #0x10
	ldr		r0, [r1, #0x0]
	mov		r2, #0xfc
	lsl		r2, r2, #0x13
	cmp		r0, r2
	ble		_0803588a
	str		r2, [r1, #0x0]
	add		r1, #0x4
	b		_080358b4
_0803588a:
	add		r0, r4, #0x0
	add		r0, #0xc0
	ldrh	r1, [r0, #0x0]
	mov		r2, #0xc8
	lsl		r2, r2, #0xe
	orr		r1, r2
	str		r1, [r0, #0x0]
	b		_08035956
_0803589a:
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _080358ac
	and		r0, r1
	strh	r0, [r2, #0x0]
_080358a6:
	strb	r6, [r5, #0x0]
	b		_08035956

.incbin "base.gba", 0x358AA, 0x2

_080358ac:	.4byte 0x0000FF3F

_080358b0:
	add		r1, r4, #0x0
	add		r1, #0xc0
_080358b4:
	ldrh	r0, [r1, #0x0]
	str		r0, [r1, #0x0]
	b		_08035956
_080358ba:
	ldr		r2, [r4, #0x48]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r2, r0
	cmp		r2, #0x0
	bne		_08035956
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	ldr		r0, _080358f4
	add		r3, r4, #0x0
	add		r3, #0x82
	cmp		r1, r0
	bgt		_080358d8
	strh	r2, [r3, #0x0]
_080358d8:
	ldrh	r0, [r3, #0x0]
	mov		r2, #0x0
	ldrsh	r1, [r3, r2]
	cmp		r1, #0x0
	bge		_080358f8
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	strh	r0, [r3, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	blt		_0803591c
	b		_080358a6

.incbin "base.gba", 0x358F2, 0x2

_080358f4:	.4byte 0x00FFFFFF

_080358f8:
	cmp		r1, #0x0
	ble		_08035908
	ldr		r2, _08035918
	add		r0, r0, r2
	strh	r0, [r3, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	blt		_080358a6
_08035908:
	mov		r0, #0x0
	ldrsh	r1, [r3, r0]
	cmp		r1, #0x0
	bne		_0803591c
	add		r0, r4, #0x0
	add		r0, #0x84
	strb	r1, [r0, #0x0]
	b		_08035956

_08035918:	.4byte 0xFFFFFC00

_0803591c:
	mov		r2, #0x0
	ldrsh	r1, [r3, r2]
	cmp		r1, #0x0
	bge		_08035926
	neg		r1, r1
_08035926:
	ldr		r0, _08035948
	cmp		r1, r0
	ble		_08035930
	mov		r1, #0xfc
	lsl		r1, r1, #0x6
_08035930:
	asr		r0, r1, #0xb
	mov		r1, #0x7
	and		r0, r1
	add		r2, r4, #0x0
	add		r2, #0xc0
	ldr		r1, _0803594c
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	str		r0, [r2, #0x0]
	b		_08035956

_08035948:	.4byte 0x00003FFF
_0803594c:	.4byte 0x08106e54

_08035950:
	add		r0, r4, #0x0
	bl		sub_08031d7c
_08035956:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803574c

	thumb_func_start sub_0803595c
sub_0803595c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x28
	add		r6, r0, #0x0
	str		r1, [sp, #0x0]
	add		r0, #0xbc
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	sub		r0, #0x6a
	mov		r5, #0x0
	strh	r4, [r0, #0x0]
	sub		r0, #0x2
	strh	r4, [r0, #0x0]
	sub		r0, #0x2
	strh	r4, [r0, #0x0]
	add		r0, #0x72
	str		r4, [r0, #0x0]
	sub		r0, #0x38
	strh	r4, [r0, #0x0]
	sub		r0, #0xa
	strb	r5, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	add		r0, #0x46
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	sub		r0, #0x34
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	sub		r0, #0x6
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	sub		r0, #0x40
	strb	r5, [r0, #0x0]
	add		r0, #0x24
	strb	r5, [r0, #0x0]
	add		r0, #0x22
	strb	r5, [r0, #0x0]
	sub		r0, #0x16
	strb	r5, [r0, #0x0]
	sub		r0, #0x18
	strh	r4, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_08036e88
	add		r0, r6, #0x0
	add		r0, #0xb2
	strh	r4, [r0, #0x0]
	sub		r0, #0x16
	strh	r4, [r0, #0x0]
	add		r0, #0x30
	strh	r4, [r0, #0x0]
	sub		r0, #0x16
	strh	r4, [r0, #0x0]
	sub		r0, #0x12
	strh	r4, [r0, #0x0]
	sub		r0, #0x2
	strh	r4, [r0, #0x0]
	sub		r0, #0x2
	strh	r4, [r0, #0x0]
	sub		r0, #0x2
	strh	r4, [r0, #0x0]
	add		r2, r6, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r0, [r6, #0x48]
	mov		r1, #0x41
	neg		r1, r1
	and		r0, r1
	str		r0, [r6, #0x48]
	ldr		r1, [r6, #0x0]
	cmp		r1, #0x0
	bge		_08035a0a
	ldr		r0, _08035b18
	add		r1, r1, r0
_08035a0a:
	asr		r1, r1, #0x10
	ldr		r2, [r6, #0x4]
	cmp		r2, #0x0
	bge		_08035a16
	ldr		r3, _08035b18
	add		r2, r2, r3
_08035a16:
	asr		r2, r2, #0x10
	ldr		r0, [sp, #0x0]
	mov		r3, #0x0
	bl		sub_0802c3d4
	add		r2, r6, #0x0
	add		r2, #0x90
	strb	r0, [r2, #0x0]
	mov		r1, #0x7f
	and		r0, r1
	add		r3, r6, #0x0
	add		r3, #0x36
	strb	r0, [r3, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x91
	strb	r1, [r0, #0x0]
	ldrb	r0, [r2, #0x0]
	mov		r2, #0xfe
	lsl		r2, r2, #0x7
	add		r1, r2, #0x0
	orr		r0, r1
	add		r1, r6, #0x0
	add		r1, #0xc6
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xb0
	strb	r5, [r0, #0x0]
	add		r3, #0xb2
	mov		r0, #0x68
	add		r0, r0, r6
	mov		r9, r0
	mov		r1, #0x6a
	add		r1, r1, r6
	mov		r10, r1
	mov		r2, #0x66
	add		r2, r2, r6
	mov		r8, r2
	add		r5, r6, #0x0
	add		r5, #0x5a
	add		r0, r6, #0x0
	add		r0, #0x74
	str		r0, [sp, #0x20]
	mov		r1, #0x64
	add		r1, r1, r6
	mov		r12, r1
	add		r4, r6, #0x0
	add		r4, #0xac
	add		r2, r6, #0x0
	add		r2, #0xb8
	str		r2, [sp, #0xC]
	add		r0, #0x2
	str		r0, [sp, #0x24]
	add		r1, r6, #0x0
	add		r1, #0xd0
	str		r1, [sp, #0x10]
	add		r2, #0x1c
	str		r2, [sp, #0x14]
	sub		r0, #0x14
	str		r0, [sp, #0x1C]
	add		r7, r6, #0x0
	add		r7, #0xd8
	sub		r1, #0x4b
	str		r1, [sp, #0x4]
	sub		r2, #0x2c
	str		r2, [sp, #0x8]
	sub		r0, #0x6
	str		r0, [sp, #0x18]
	add		r1, #0x57
	mov		r2, #0x0
	add		r0, #0x88
_08035aa2:
	strh	r2, [r0, #0x0]
	sub		r0, #0x2
	cmp		r0, r1
	bge		_08035aa2
	mov		r0, #0x0
	str		r0, [r3, #0x0]
	mov		r1, #0x0
	mov		r2, r9
	strh	r0, [r2, #0x0]
	mov		r3, r10
	strh	r0, [r3, #0x0]
	mov		r2, r8
	strh	r0, [r2, #0x0]
	strh	r0, [r5, #0x0]
	ldr		r3, [sp, #0x20]
	strh	r0, [r3, #0x0]
	mov		r2, r12
	strb	r1, [r2, #0x0]
	strh	r0, [r4, #0x0]
	strh	r0, [r6, #0x38]
	mov		r3, #0xc9
	lsl		r3, r3, #0x1
	add		r2, r6, r3
	strb	r1, [r2, #0x0]
	ldr		r1, [sp, #0xC]
	strh	r0, [r1, #0x0]
	ldr		r2, [sp, #0x24]
	strh	r0, [r2, #0x0]
	ldr		r0, _08035b1c
	ldr		r3, _08035b20
	add		r0, r0, r3
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08035b28
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08035b04
	mov		r1, #0x0
	ldr		r0, _08035b24
	ldrh	r0, [r0, #0x12]
	cmp		r0, #0x0
	bne		_08035b00
	mov		r1, #0x1
_08035b00:
	cmp		r1, #0x0
	beq		_08035b28
_08035b04:
	add		r0, r6, #0x0
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x2
	add		r0, #0x2
	mov		r2, #0xbc
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	b		_08035b30

.incbin "base.gba", 0x35B16, 0x2

_08035b18:	.4byte 0x0000FFFF
_08035b1c:	.4byte RunGameLogic_CallBack
_08035b20:	.4byte 0x000007FE
_08035b24:	.4byte 0x03002FE0

_08035b28:
	mov		r3, #0xbc
	lsl		r3, r3, #0x1
	add		r1, r6, r3
	mov		r0, #0x0
_08035b30:
	strh	r0, [r1, #0x0]
	mov		r4, #0x0
	ldr		r0, [sp, #0x10]
	str		r4, [r0, #0x0]
	ldr		r1, [sp, #0x14]
	str		r4, [r1, #0x0]
	mov		r2, #0xca
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	mov		r5, #0x0
	strh	r4, [r0, #0x0]
	mov		r3, #0xcb
	lsl		r3, r3, #0x1
	add		r0, r6, r3
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	strh	r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r6, r2
	strh	r1, [r0, #0x0]
	add		r3, #0x4
	add		r0, r6, r3
	strb	r5, [r0, #0x0]
	add		r0, r6, #0x0
	ldr		r1, [sp, #0x0]
	bl		sub_080376ac
	ldr		r2, _08035bb8
	add		r1, r6, r2
	strb	r0, [r1, #0x0]
	ldr		r3, [sp, #0x1C]
	strh	r4, [r3, #0x0]
	ldrb	r1, [r7, #0x0]
	mov		r0, #0x4
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strb	r0, [r7, #0x0]
	ldrh	r1, [r7, #0x0]
	ldr		r0, _08035bbc
	and		r0, r1
	strh	r0, [r7, #0x0]
	ldrb	r1, [r7, #0x1]
	mov		r0, #0x1f
	and		r0, r1
	strb	r0, [r7, #0x1]
	ldr		r0, [sp, #0x4]
	strb	r5, [r0, #0x0]
	ldr		r1, _08035bc0
	add		r0, r6, r1
	strb	r5, [r0, #0x0]
	ldr		r2, [sp, #0x8]
	str		r4, [r2, #0x0]
	ldr		r3, [sp, #0x18]
	strh	r4, [r3, #0x0]
	ldrh	r0, [r6, #0x34]
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r6, #0x34]
	add		sp, #0x28
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08035bb8:	.4byte 0x00000191
_08035bbc:	.4byte 0xFFFFE003
_08035bc0:	.4byte 0x0000019B
	thumb_func_end sub_0803595c

	thumb_func_start sub_08035bc4
sub_08035bc4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	mov		r9, r1
	ldr		r0, _08035c80
	add		r0, r9
	ldrb	r5, [r0, #0x0]
	add		r4, r6, #0x0
	add		r4, #0x4c
	ldrb	r0, [r4, #0x0]
	mov		r1, #0x7
	and		r1, r0
	add		r3, r6, #0x0
	add		r3, #0x8c
	ldr		r0, _08035c84
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r2, _08035c88
	lsl		r0, r5, #0x1
	add		r0, r0, r2
	mov		r7, #0x0
	ldrsh	r2, [r0, r7]
	ldr		r0, [r1, #0x0]
	add		r0, r0, r2
	lsl		r0, r0, #0x10
	str		r0, [r3, #0x0]
	ldr		r0, _08035c8c
	mov		r10, r0
	ldr		r3, _08035c90
	str		r4, [sp, #0x0]
	mov		r2, #0x0
	mov		r4, #0xf
_08035c0c:
	add		r0, r6, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r0, r0, #0x5
	add		r0, r2, r0
	add		r0, r0, r3
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r1, r0, #0x4
	cmp		r5, #0x1
	ble		_08035c30
	asr		r0, r1, #0x1
	add		r1, r1, r0
	cmp		r1, #0x31
	bgt		_08035c30
	mov		r1, #0xe0
_08035c30:
	add		r0, r6, #0x0
	add		r0, #0xf4
	add		r0, r0, r2
	strh	r1, [r0, #0x0]
	add		r2, #0x2
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08035c0c
	mov		r4, #0x0
	lsl		r2, r5, #0x2
	mov		r8, r2
	ldr		r7, _08035c94
	mov		r12, r7
	mov		r0, #0x8a
	lsl		r0, r0, #0x1
	add		r2, r6, r0
	mov		r3, #0x14
	neg		r3, r3
_08035c54:
	cmp		r4, #0x9
	ble		_08035ca4
	ldr		r1, [sp, #0x0]
	ldrb	r0, [r1, #0x0]
	mov		r1, #0x7
	and		r1, r0
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r3, r0
	add		r0, r12
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	lsl		r0, r0, #0x4
	cmp		r5, #0x1
	beq		_08035ca8
	cmp		r5, #0x1
	bgt		_08035c98
	cmp		r5, #0x0
	beq		_08035ca0
	b		_08035ca8

.incbin "base.gba", 0x35C7E, 0x2

_08035c80:	.4byte 0x000007DC
_08035c84:	.4byte 0x08106b64
_08035c88:	.4byte 0x081073cc
_08035c8c:	.4byte 0x08106f0c
_08035c90:	.4byte 0x08106b84
_08035c94:	.4byte 0x08106c84

_08035c98:
	cmp		r5, #0x3
	bgt		_08035ca8
	add		r0, #0xa0
	b		_08035ca8
_08035ca0:
	sub		r0, #0x80
	b		_08035ca8
_08035ca4:
	mov		r0, #0x1
	neg		r0, r0
_08035ca8:
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	add		r3, #0x2
	add		r4, #0x1
	cmp		r4, #0xf
	ble		_08035c54
	mov		r4, #0x0
	ldr		r0, _08035d24
	mov		r12, r0
	add		r3, r6, #0x0
_08035cbc:
	ldr		r2, [sp, #0x0]
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r1, r4, #0x3
	lsl		r0, r0, #0x5
	add		r1, r1, r0
	add		r1, r12
	ldrh	r2, [r1, #0x0]
	mov		r7, #0x9a
	lsl		r7, r7, #0x1
	add		r0, r3, r7
	strh	r2, [r0, #0x0]
	ldrh	r0, [r1, #0x2]
	add		r7, #0x2
	add		r2, r3, r7
	strh	r0, [r2, #0x0]
	ldrh	r2, [r1, #0x4]
	add		r7, #0x2
	add		r0, r3, r7
	strh	r2, [r0, #0x0]
	ldrh	r0, [r1, #0x6]
	mov		r2, #0x9d
	lsl		r2, r2, #0x1
	add		r1, r3, r2
	strh	r0, [r1, #0x0]
	add		r3, #0x8
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_08035cbc
	add		r7, #0x3c
	add		r1, r6, r7
	mov		r2, r8
	add		r0, r2, r5
	lsl		r0, r0, #0x3
	add		r0, r0, r5
	lsl		r0, r0, #0x3
	add		r0, r10
	str		r0, [r1, #0x0]
	ldr		r0, _08035d28
	add		r0, r9
	ldrb	r0, [r0, #0x0]
	bl		sub_0802c6c8
	cmp		r0, #0x0
	beq		_08035d30
	ldr		r0, _08035d2c
	add		r0, r5, r0
	ldrb	r0, [r0, #0x0]
	add		r7, #0x29
	add		r1, r6, r7
	b		_08035d34

_08035d24:	.4byte 0x08106ce4
_08035d28:	.4byte 0x000007DD
_08035d2c:	.4byte 0x081072e4

_08035d30:
	ldr		r2, _08035d48
	add		r1, r6, r2
_08035d34:
	strb	r0, [r1, #0x0]
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x35D46, 0x2

_08035d48:	.4byte 0x0000019D
	thumb_func_end sub_08035bc4

	thumb_func_start sub_08035d4c
sub_08035d4c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	mov		r8, r1
	add		r6, r2, #0x0
	add		r5, r3, #0x0
	ldr		r0, _08035d90
	add		r7, r0, #0x0
	add		r7, #0x24
	ldr		r1, _08035d94
	add		r0, r0, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08035d76
	add		r0, r4, #0x0
	bl		sub_08055408
_08035d76:
	add		r0, r4, #0x0
	add		r0, #0x4c
	strb	r6, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r7, #0x0
	bl		sub_08035bc4
	cmp		r5, #0x0
	beq		_08035da0
	ldr		r0, _08035d98
	str		r0, [r4, #0x48]
	ldr		r0, _08035d9c
	b		_08035da8

_08035d90:	.4byte RunGameLogic_CallBack
_08035d94:	.4byte 0x000007FE
_08035d98:	.4byte 0x00008040
_08035d9c:	.4byte 0x00002001

_08035da0:
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	str		r0, [r4, #0x48]
	add		r0, #0x2
_08035da8:
	strh	r0, [r4, #0x10]
	mov		r0, #0xa
	strb	r0, [r4, #0xe]
	strb	r0, [r4, #0xd]
	strb	r0, [r4, #0xc]
	ldr		r0, _08035e3c
	str		r0, [r4, #0x18]
	ldr		r1, _08035e40
	lsl		r0, r6, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r2, r4, #0x0
	add		r2, #0x58
	mov		r5, #0x0
	mov		r3, #0x0
	strh	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	beq		_08035de8
	add		r1, r4, #0x0
	add		r1, #0x68
	ldr		r0, _08035e44
	strh	r0, [r1, #0x0]
	ldrh	r1, [r2, #0x0]
	sub		r0, #0x10
	and		r0, r1
	strh	r0, [r2, #0x0]
_08035de8:
	ldr		r0, _08035e48
	add		r1, r4, r0
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xec
	mov		r1, r8
	strb	r1, [r0, #0x0]
	ldrh	r0, [r4, #0x34]
	mov		r1, #0x1
	orr		r0, r1
	strh	r0, [r4, #0x34]
	mov		r1, #0xbd
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	strh	r3, [r0, #0x0]
	add		r1, #0x2
	add		r0, r4, r1
	strb	r5, [r0, #0x0]
	add		r1, #0x4
	add		r0, r4, r1
	str		r3, [r0, #0x0]
	add		r1, #0x4
	add		r0, r4, r1
	str		r3, [r0, #0x0]
	add		r1, #0x4
	add		r0, r4, r1
	str		r3, [r0, #0x0]
	add		r1, #0x4
	add		r0, r4, r1
	strh	r3, [r0, #0x0]
	add		r1, #0x2
	add		r0, r4, r1
	strh	r3, [r0, #0x0]
	add		r1, #0x2
	add		r0, r4, r1
	strb	r5, [r0, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08035e3c:	.4byte sub_08037760
_08035e40:	.4byte 0x081072e8
_08035e44:	.4byte 0x0000FFFF
_08035e48:	.4byte 0x0000017D
	thumb_func_end sub_08035d4c

	thumb_func_start sub_08035e4c
sub_08035e4c:
	push	{ r4, r5, r6, r7, lr }
	add		r2, r0, #0x0
	add		r5, r2, #0x0
	add		r5, #0x74
	ldrh	r1, [r5, #0x0]
	mov		r7, #0x80
	lsl		r7, r7, #0x8
	add		r0, r7, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08035e6c
	ldr		r0, _08035e68
	and		r0, r1
	b		_08035eb2

_08035e68:	.4byte 0x00007FFF

_08035e6c:
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08035eb4
	ldr		r0, _08035ebc
	and		r0, r1
	strh	r0, [r5, #0x0]
	ldr		r0, _08035ec0
	mov		r1, #0xff
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0xf
	and		r0, r1
	cmp		r0, #0x4
	beq		_08035eb4
	ldr		r0, _08035ec4
	add		r6, r2, r0
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	cmp		r0, #0x0
	beq		_08035eb4
	sub		r0, #0x1
	lsl		r4, r0, #0x18
	cmp		r4, #0x0
	bne		_08035ea8
	add		r0, r2, #0x0
	mov		r1, #0xf
	bl		sub_08036c1c
_08035ea8:
	lsr		r0, r4, #0x18
	strb	r0, [r6, #0x0]
	ldrh	r1, [r5, #0x0]
	add		r0, r7, #0x0
	orr		r0, r1
_08035eb2:
	strh	r0, [r5, #0x0]
_08035eb4:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x35EBA, 0x2

_08035ebc:	.4byte 0x0000FFFE
_08035ec0:	.4byte RunGameLogic_CallBack
_08035ec4:	.4byte 0x0000017D
	thumb_func_end sub_08035e4c

	thumb_func_start sub_08035ec8
sub_08035ec8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r9, r1
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	str		r2, [sp, #0x0]
	mov		r10, r9
	ldr		r1, [r5, #0x48]
	mov		r0, #0x80
	lsl		r0, r0, #0xa
	and		r0, r1
	cmp		r0, #0x0
	beq		_08035f0e
	ldr		r0, _08035f7c
	and		r1, r0
	str		r1, [r5, #0x48]
	add		r0, r5, #0x0
	add		r0, #0x4e
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xb8
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x1
	ble		_08035f0e
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
_08035f0e:
	ldr		r1, [r5, #0x4]
	cmp		r1, #0x0
	bge		_08035f18
	ldr		r3, _08035f80
	add		r1, r1, r3
_08035f18:
	asr		r1, r1, #0x10
	add		r0, r5, #0x0
	add		r0, #0xf0
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bge		_08035f2a
	ldr		r4, _08035f80
	add		r0, r0, r4
_08035f2a:
	asr		r0, r0, #0x10
	add		r1, r5, #0x0
	add		r1, #0xee
	strh	r0, [r1, #0x0]
	ldr		r1, [r5, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x4e
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	str		r1, [r5, #0x0]
	ldr		r1, [r5, #0x4]
	add		r0, r5, #0x0
	add		r0, #0x50
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	str		r1, [r5, #0x4]
	add		r0, r5, #0x0
	mov		r1, r9
	bl		sub_080353b4
	ldr		r0, [r5, #0x48]
	mov		r3, #0x80
	lsl		r3, r3, #0x8
	and		r0, r3
	cmp		r0, #0x0
	beq		_08035f84
	add		r0, r5, #0x0
	bl		sub_08031614
	add		r0, r5, #0x0
	bl		sub_080313e0
	mov		r4, #0x78
	add		r4, r4, r5
	mov		r8, r4
	b		_08036076

.incbin "base.gba", 0x35F7A, 0x2

_08035f7c:	.4byte 0xfffdffff
_08035f80:	.4byte 0x0000FFFF

_08035f84:
	add		r1, r5, #0x0
	add		r1, #0x6a
	ldrh	r2, [r1, #0x0]
	mov		r4, #0x0
	ldrsh	r0, [r1, r4]
	add		r6, r5, #0x0
	add		r6, #0x58
	mov		r4, #0x78
	add		r4, r4, r5
	mov		r8, r4
	add		r7, r5, #0x0
	add		r7, #0x84
	cmp		r0, #0x0
	beq		_08035fea
	sub		r0, r2, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_08035fb4
	ldrh	r1, [r6, #0x0]
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r6, #0x0]
	b		_08035fea
_08035fb4:
	add		r4, r5, #0x0
	add		r4, #0xb4
	ldrh	r1, [r4, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r1
	strh	r0, [r4, #0x0]
	ldrh	r1, [r6, #0x0]
	ldr		r0, _0803602c
	and		r0, r1
	strh	r0, [r6, #0x0]
	mov		r1, r8
	ldrb	r0, [r1, #0x0]
	strb	r0, [r7, #0x0]
	ldr		r0, _08036030
	ldr		r2, _08036034
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	bne		_08035fe2
	mov		r0, #0x10
	bl		sub_0804bdb0
_08035fe2:
	ldrh	r1, [r4, #0x0]
	ldr		r0, _08036038
	and		r0, r1
	strh	r0, [r4, #0x0]
_08035fea:
	add		r1, r5, #0x0
	add		r1, #0x66
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x0
	beq		_08035ffc
	sub		r0, r2, #0x1
	strh	r0, [r1, #0x0]
_08035ffc:
	add		r1, r5, #0x0
	add		r1, #0x68
	ldrh	r2, [r1, #0x0]
	mov		r4, #0x0
	ldrsh	r0, [r1, r4]
	cmp		r0, #0x0
	ble		_0803600e
	sub		r0, r2, #0x1
	strh	r0, [r1, #0x0]
_0803600e:
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x0
	bge		_0803601a
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
_0803601a:
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x0
	beq		_08036040
	ldrh	r1, [r6, #0x0]
	ldr		r0, _0803603c
	and		r1, r0
	b		_08036046

.incbin "base.gba", 0x3602A, 0x2

_0803602c:	.4byte 0x00007FFF
_08036030:	.4byte RunGameLogic_CallBack
_08036034:	.4byte 0x00000838
_08036038:	.4byte 0x0000FFFC
_0803603c:	.4byte 0x0000FFEF

_08036040:
	ldrh	r1, [r6, #0x0]
	mov		r0, #0x10
	orr		r1, r0
_08036046:
	strh	r1, [r6, #0x0]
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x8
	bne		_08036054
	mov		r0, #0x20
	orr		r1, r0
	b		_08036058
_08036054:
	ldr		r0, _08036068
	and		r1, r0
_08036058:
	strh	r1, [r6, #0x0]
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0xa
	bne		_08036070
	ldr		r0, _0803606c
	and		r0, r1
	b		_08036074

.incbin "base.gba", 0x36066, 0x2

_08036068:	.4byte 0x0000FFDF
_0803606c:	.4byte 0x0000FFBF

_08036070:
	mov		r0, #0x40
	orr		r0, r1
_08036074:
	strh	r0, [r6, #0x0]
_08036076:
	add		r0, r5, #0x0
	mov		r1, r10
	bl		sub_08034f78
	add		r2, r5, #0x0
	add		r2, #0x64
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_080360a0
	ldrh	r1, [r5, #0x38]
	mov		r0, #0xdf
	lsl		r0, r0, #0x7
	cmp		r1, r0
	bne		_080360a0
	mov		r4, #0x0
	strb	r4, [r2, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x7
	bl		sub_08036c1c
	strh	r4, [r5, #0x38]
_080360a0:
	ldr		r1, [r5, #0x48]
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	and		r1, r0
	cmp		r1, #0x0
	bne		_08036190
	mov		r4, r8
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x2
	bne		_080360d6
	add		r1, r5, #0x0
	add		r1, #0x76
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0xe
	bhi		_080360c2
	add		r0, #0x1
	strh	r0, [r1, #0x0]
_080360c2:
	ldrh	r0, [r1, #0x0]
	neg		r0, r0
	lsl		r0, r0, #0xf
	str		r0, [r5, #0x8]
	ldrh	r0, [r1, #0x0]
	lsl		r0, r0, #0xb
	add		r1, r5, #0x0
	add		r1, #0x82
	strh	r0, [r1, #0x0]
	b		_080360dc
_080360d6:
	add		r0, r5, #0x0
	add		r0, #0x76
	strh	r1, [r0, #0x0]
_080360dc:
	add		r0, r5, #0x0
	bl		sub_08031510
	ldr		r0, _0803613c
	add		r0, r9
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_080360f8
	add		r0, r5, #0x0
	bl		sub_08035e4c
_080360f8:
	ldr		r0, [r5, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803610a
	add		r0, r5, #0x0
	bl		sub_08031ce4
_0803610a:
	add		r0, r5, #0x0
	bl		sub_0803361c
	add		r0, r5, #0x0
	bl		sub_080324ec
	add		r0, r5, #0x0
	ldr		r1, [sp, #0x0]
	bl		sub_08031abc
	add		r4, r5, #0x0
	add		r4, #0xac
	ldrh	r1, [r4, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	cmp		r0, #0x0
	beq		_08036156
	add		r0, r5, #0x0
	add		r0, #0x6a
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x0
	beq		_08036140
	mov		r0, #0x0
	b		_08036154

_0803613c:	.4byte 0x000007DA

_08036140:
	mov		r0, #0x3f
	and		r0, r1
	cmp		r0, #0x0
	bne		_08036150
	add		r0, r5, #0x0
	mov		r1, #0x5
	bl		sub_08036eec
_08036150:
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x1
_08036154:
	strh	r0, [r4, #0x0]
_08036156:
	add		r0, r5, #0x0
	bl		sub_08034898
	add		r0, r5, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08036170
	add		r0, r5, #0x0
	bl		sub_08036a14
_08036170:
	ldr		r0, _0803618c
	ldr		r0, [r0, #0x10]
	mov		r1, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_08036242
	add		r0, r5, #0x0
	mov		r1, r10
	bl		sub_08034938
	add		r0, r5, #0x0
	bl		sub_0803a9e0
	b		_08036242

_0803618c:	.4byte RunGameLogic_CallBack

_08036190:
	mov		r4, r8
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x2
	bne		_080361b8
	add		r1, r5, #0x0
	add		r1, #0x76
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0xe
	bhi		_080361a6
	add		r0, #0x1
	strh	r0, [r1, #0x0]
_080361a6:
	ldrh	r0, [r1, #0x0]
	neg		r0, r0
	lsl		r0, r0, #0xf
	str		r0, [r5, #0x8]
	ldrh	r0, [r1, #0x0]
	lsl		r0, r0, #0xb
	add		r1, r5, #0x0
	add		r1, #0x82
	b		_080361be
_080361b8:
	add		r1, r5, #0x0
	add		r1, #0x76
	mov		r0, #0x0
_080361be:
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_0803361c
	add		r0, r5, #0x0
	bl		sub_08035628
	ldr		r0, [r5, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_080361de
	add		r0, r5, #0x0
	bl		sub_08031ce4
_080361de:
	add		r0, r5, #0x0
	mov		r1, r10
	bl		sub_0803574c
	ldr		r0, [r5, #0x48]
	mov		r1, #0xc0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	cmp		r0, r1
	bne		_08036208
	add		r2, r5, #0x0
	add		r2, #0x96
	mov		r0, #0xc4
	lsl		r0, r0, #0x4
	ldr		r1, [sp, #0x0]
	and		r0, r1
	ldrh	r1, [r2, #0x0]
	orr		r0, r1
	strh	r0, [r2, #0x0]
_08036208:
	add		r4, r5, #0x0
	add		r4, #0xac
	ldrh	r1, [r4, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	cmp		r0, #0x0
	beq		_0803623c
	add		r0, r5, #0x0
	add		r0, #0x6a
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x0
	beq		_08036226
	mov		r0, #0x0
	b		_0803623a
_08036226:
	mov		r0, #0x3f
	and		r0, r1
	cmp		r0, #0x0
	bne		_08036236
	add		r0, r5, #0x0
	mov		r1, #0x5
	bl		sub_08036eec
_08036236:
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x1
_0803623a:
	strh	r0, [r4, #0x0]
_0803623c:
	add		r0, r5, #0x0
	bl		sub_0803c4d8
_08036242:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x36252, 0x2
	thumb_func_end sub_08035ec8

	thumb_func_start sub_08036254
sub_08036254:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r2, _0803627c
	add		r5, r2, #0x0
	add		r5, #0x24
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_08036280
	ldr		r0, [r2, #0x10]
	lsr		r0, r0, #0x2
	mov		r1, #0x3
	and		r0, r1
	lsl		r0, r0, #0x15
	mov		r3, #0x80
	lsl		r3, r3, #0xe
	add		r0, r0, r3
	lsr		r1, r0, #0x10
	b		_08036326

_0803627c:	.4byte RunGameLogic_CallBack

_08036280:
	add		r0, r4, #0x0
	add		r0, #0x68
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	ldr		r0, _080362a0
	cmp		r1, r0
	ble		_080362a4
	ldr		r0, [r2, #0x10]
	lsr		r0, r0, #0x2
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_080362a4
	mov		r1, #0x20
	b		_08036326

.incbin "base.gba", 0x3629E, 0x2

_080362a0:	.4byte 0x00000127

_080362a4:
	mov		r0, #0xca
	lsl		r0, r0, #0x1
	add		r3, r4, r0
	ldrh	r2, [r3, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r2
	cmp		r0, #0x0
	beq		_080362c4
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	ldr		r0, _080362c0
	b		_08036318

.incbin "base.gba", 0x362BE, 0x2

_080362c0:	.4byte 0x0000F7FF

_080362c4:
	mov		r0, #0xc0
	lsl		r0, r0, #0x7
	and		r0, r2
	cmp		r0, #0x0
	beq		_080362e4
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	and		r0, r2
	mov		r1, #0xc0
	cmp		r0, #0x0
	beq		_080362dc
	mov		r1, #0xa0
_080362dc:
	ldr		r0, _080362e0
	b		_08036318

_080362e0:	.4byte 0x00009FFF

_080362e4:
	add		r0, r4, #0x0
	add		r0, #0x85
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x50
	bne		_08036302
	add		r0, r5, #0x0
	bl		sub_0802c72c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0xc
	bne		_08036302
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	b		_08036326
_08036302:
	mov		r1, #0xca
	lsl		r1, r1, #0x1
	add		r3, r4, r1
	ldrh	r2, [r3, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r2
	cmp		r0, #0x0
	beq		_08036324
	mov		r1, #0xe0
	ldr		r0, _08036320
_08036318:
	and		r0, r2
	strh	r0, [r3, #0x0]
	b		_08036326

.incbin "base.gba", 0x3631E, 0x2

_08036320:	.4byte 0x00007FFF

_08036324:
	mov		r1, #0x0
_08036326:
	add		r0, r1, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3632E, 0x2
	thumb_func_end sub_08036254

	thumb_func_start sub_08036330
sub_08036330:
	push	{ r4, r5, r6, lr }
	mov		r12, r0
	add		r0, #0x4c
	ldrb	r0, [r0, #0x0]
	mov		r6, #0x7
	and		r6, r0
	mov		r0, r12
	add		r0, #0xec
	ldrb	r4, [r0, #0x0]
	sub		r0, #0x30
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0803634c
	neg		r0, r0
_0803634c:
	lsr		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_0803636c
	cmp		r0, #0xf
	bls		_08036358
	mov		r0, #0xf
_08036358:
	ldr		r1, _08036368
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrh	r1, [r0, #0x0]
	mov		r3, r12
	add		r3, #0xd8
	b		_08036380

.incbin "base.gba", 0x36366, 0x2

_08036368:	.4byte 0x08107432

_0803636c:
	mov		r2, r12
	add		r2, #0xd8
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x3
	and		r0, r1
	mov		r1, #0x0
	add		r3, r2, #0x0
	cmp		r0, #0x2
	bne		_08036380
	mov		r1, #0x1
_08036380:
	ldrh	r5, [r3, #0x0]
	ldr		r0, _080363bc
	and		r0, r5
	cmp		r0, #0x0
	beq		_080363c8
	ldr		r0, [r3, #0x0]
	lsl		r0, r0, #0x13
	lsr		r0, r0, #0x15
	sub		r0, #0x1
	ldr		r2, _080363c0
	add		r4, r2, #0x0
	and		r0, r4
	lsl		r0, r0, #0x2
	ldr		r6, _080363c4
	add		r2, r6, #0x0
	and		r2, r5
	orr		r2, r0
	strh	r2, [r3, #0x0]
	ldr		r0, [r3, #0x0]
	lsl		r0, r0, #0x13
	lsr		r0, r0, #0x15
	cmp		r0, r1
	bls		_08036476
	and		r1, r4
	lsl		r0, r1, #0x2
	and		r2, r6
	orr		r2, r0
	strh	r2, [r3, #0x0]
	b		_08036476

.incbin "base.gba", 0x363BA, 0x2

_080363bc:	.4byte 0x00001FFC
_080363c0:	.4byte 0x000007FF
_080363c4:	.4byte 0xFFFFE003

_080363c8:
	cmp		r1, #0x0
	beq		_08036476
	ldr		r0, _080363ec
	and		r1, r0
	lsl		r1, r1, #0x2
	ldr		r0, _080363f0
	and		r0, r5
	orr		r0, r1
	strh	r0, [r3, #0x0]
	add		r5, r3, #0x0
	ldr		r0, [r3, #0x0]
	lsl		r1, r0, #0x1e
	lsr		r0, r1, #0x1e
	cmp		r0, #0x1
	bhi		_080363f4
	add		r0, #0x1
	b		_080363f6

.incbin "base.gba", 0x363EA, 0x2

_080363ec:	.4byte 0x000007FF
_080363f0:	.4byte 0xFFFFE003

_080363f4:
	mov		r0, #0x0
_080363f6:
	mov		r1, #0x3
	and		r1, r0
	ldrb	r2, [r5, #0x0]
	mov		r0, #0x4
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
	strb	r0, [r5, #0x0]
	ldr		r1, [r3, #0x0]
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x1d
	add		r1, #0x1
	lsl		r1, r1, #0x5
	ldrb	r2, [r3, #0x1]
	mov		r0, #0x1f
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x1]
	mov		r0, #0xca
	lsl		r0, r0, #0x1
	add		r0, r12
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803643c
	lsl		r0, r6, #0x9
	ldr		r1, [r3, #0x0]
	lsl		r1, r1, #0x1e
	lsr		r1, r1, #0x1d
	ldr		r2, _08036438
	b		_08036446

_08036438:	.4byte 0x083447c0

_0803643c:
	lsl		r0, r6, #0x9
	ldr		r1, [r3, #0x0]
	lsl		r1, r1, #0x1e
	lsr		r1, r1, #0x1d
	ldr		r2, _0803647c
_08036446:
	add		r1, r1, r2
	add		r5, r0, r1
	mov		r0, #0x1
	bl		sub_08028130
	lsl		r4, r4, #0x5
	add		r0, r4, r0
	mov		r2, #0x81
	lsl		r2, r2, #0x1
	add		r1, r0, r2
	ldrh	r0, [r5, #0x0]
	strh	r0, [r1, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r4, r4, r0
	mov		r0, #0x82
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r0, [r4, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
_08036476:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0803647c:	.4byte 0x083447e0
	thumb_func_end sub_08036330

	thumb_func_start sub_08036480
sub_08036480:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r6, _0803651c
	ldr		r0, _08036520
	add		r5, r6, r0
	cmp		r5, #0x0
	bne		_08036490
	b		_080365e0
_08036490:
	add		r0, r4, #0x0
	bl		sub_08037310
	cmp		r0, #0x0
	beq		_0803649c
	b		_080365cc
_0803649c:
	ldr		r1, _08036524
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	beq		_080364a8
	b		_080365cc
_080364a8:
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_080364b4
	b		_080365cc
_080364b4:
	mov		r3, #0x14
	ldrsh	r0, [r5, r3]
	add		r1, r4, #0x0
	add		r1, #0x56
	ldrh	r1, [r1, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	add		r0, r4, #0x0
	add		r0, #0x88
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	add		r7, r0, #0x0
	cmp		r1, #0x0
	bge		_080364d6
	neg		r1, r1
_080364d6:
	lsl		r0, r1, #0x8
	lsr		r1, r0, #0x10
	cmp		r1, #0xe
	bls		_080364e0
	mov		r1, #0xe
_080364e0:
	ldr		r0, _08036528
	add		r0, r1, r0
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	add		r5, r0, #0x0
	cmp		r1, #0x0
	bge		_080364f4
	neg		r1, r1
_080364f4:
	asr		r1, r1, #0x15
	cmp		r1, #0xe
	ble		_080364fc
	mov		r1, #0xe
_080364fc:
	ldr		r0, _0803652c
	add		r0, r1, r0
	ldrb	r0, [r0, #0x0]
	cmp		r3, r0
	bls		_08036508
	add		r3, r0, #0x0
_08036508:
	ldr		r1, _08036530
	add		r0, r6, r1
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	blt		_08036534
	asr		r0, r0, #0x18
	add		r0, r3, r0
	b		_08036538

.incbin "base.gba", 0x3651A, 0x2

_0803651c:	.4byte RunGameLogic_CallBack
_08036520:	.4byte 0x00000848
_08036524:	.4byte 0x00000838
_08036528:	.4byte 0x08107452
_0803652c:	.4byte 0x08107461
_08036530:	.4byte 0x00000BDA

_08036534:
	asr		r0, r0, #0x18
	sub		r0, r3, r0
_08036538:
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	add		r0, r4, #0x0
	add		r0, #0x82
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bge		_0803654c
	neg		r0, r0
_0803654c:
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x12
	ble		_08036558
	mov		r1, #0x12
_08036558:
	mov		r0, #0x12
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	sub		r0, r0, r1
	lsl		r1, r0, #0x10
	asr		r0, r1, #0x10
	cmp		r3, r0
	ble		_0803656a
	lsr		r3, r1, #0x10
_0803656a:
	cmp		r2, #0x0
	beq		_0803659c
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bge		_08036576
	mov		r3, #0x0
_08036576:
	cmp		r3, #0x0
	beq		_08036590
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	cmp		r0, #0x0
	blt		_08036588
	add		r0, r3, #0x2
	sub		r0, r2, r0
	b		_0803658c
_08036588:
	add		r0, r3, #0x2
	add		r0, r2, r0
_0803658c:
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
_08036590:
	lsl		r0, r2, #0x18
	asr		r1, r0, #0x18
	lsr		r0, r0, #0x1f
	add		r1, r1, r0
	asr		r2, r1, #0x1
	b		_080365da
_0803659c:
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	cmp		r0, #0x0
	blt		_080365ae
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bge		_080365b8
	add		r0, r2, r3
	b		_080365bc
_080365ae:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	blt		_080365b8
	add		r0, r2, r3
	b		_080365bc
_080365b8:
	add		r0, r3, #0x2
	sub		r0, r2, r0
_080365bc:
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	lsl		r0, r2, #0x18
	asr		r1, r0, #0x18
	lsr		r0, r0, #0x1f
	add		r1, r1, r0
	asr		r2, r1, #0x1
	b		_080365da
_080365cc:
	mov		r3, #0x14
	ldrsh	r0, [r5, r3]
	add		r1, r4, #0x0
	add		r1, #0x56
	ldrh	r1, [r1, #0x0]
	sub		r0, r0, r1
	asr		r2, r0, #0x9
_080365da:
	mov		r0, #0x7f
	and		r2, r0
	b		_080365e2
_080365e0:
	mov		r2, #0x0
_080365e2:
	add		r0, r2, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x365EA, 0x2
	thumb_func_end sub_08036480

	thumb_func_start sub_080365ec
sub_080365ec:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	mov		r12, r1
	add		r0, #0xd8
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x1d
	ldr		r0, [r4, #0x48]
	mov		r1, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_08036624
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	ldr		r0, _0803661c
	cmp		r1, r0
	bgt		_08036624
	ldr		r0, _08036620
	ldr		r3, [r0, #0x10]
	mov		r0, #0x1
	and		r3, r0
	b		_08036626

.incbin "base.gba", 0x3661A, 0x2

_0803661c:	.4byte 0x009FFFFF
_08036620:	.4byte RunGameLogic_CallBack

_08036624:
	mov		r3, #0x0
_08036626:
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	add		r7, r2, #0x0
	cmp		r0, #0x0
	bne		_08036658
	mov		r5, #0x1
	and		r5, r6
	sub		r2, #0x2f
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x1e
	and		r0, r1
	cmp		r0, #0xc
	bls		_08036654
	lsr		r0, r6, #0x1
	mov		r1, #0x1
	and		r0, r1
	add		r0, r5, r0
	add		r3, r3, r0
	b		_0803665c
_08036654:
	add		r3, r3, r5
	b		_0803665c
_08036658:
	add		r2, r4, #0x0
	add		r2, #0x85
_0803665c:
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x5c
	bne		_08036674
	ldrh	r1, [r7, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08036674
	add		r0, r3, #0x4
	lsl		r0, r0, #0x18
	b		_08036676
_08036674:
	lsl		r0, r3, #0x18
_08036676:
	lsr		r1, r0, #0x18
	mov		r2, r12
	ldrh	r0, [r2, #0x2]
	add		r0, r0, r1
	strh	r0, [r2, #0x2]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x36686, 0x2
	thumb_func_end sub_080365ec

	thumb_func_start sub_08036688
sub_08036688:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r12, r0
	mov		r9, r2
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r8, r1
	ldr		r0, [r0, #0x6c]
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x19
	mov		r0, r12
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	asr		r0, r0, #0x17
	mov		r1, #0x14
	sub		r5, r1, r0
	mov		r2, #0xcd
	lsl		r2, r2, #0x1
	add		r2, r12
	ldrb	r0, [r2, #0x0]
	mov		r3, #0xf3
	and		r3, r0
	mov		r7, #0x0
	strb	r3, [r2, #0x0]
	add		r4, #0x1
	cmp		r4, r5
	ble		_080366c4
	mov		r4, #0x0
_080366c4:
	cmp		r4, #0x0
	bne		_080366d4
	mov		r1, #0x8
	add		r0, r3, #0x0
	orr		r0, r1
	strb	r0, [r2, #0x0]
	asr		r6, r5, #0x1f
	b		_080366e8
_080366d4:
	asr		r1, r5, #0x1f
	sub		r0, r5, r1
	asr		r0, r0, #0x1
	add		r6, r1, #0x0
	cmp		r4, r0
	bne		_080366e8
	mov		r1, #0x4
	add		r0, r3, #0x0
	orr		r0, r1
	strb	r0, [r2, #0x0]
_080366e8:
	mov		r3, r12
	add		r3, #0x6d
	lsl		r2, r4, #0x1
	ldrb	r1, [r3, #0x0]
	mov		r0, #0x1
	and		r0, r1
	orr		r0, r2
	strb	r0, [r3, #0x0]
	mov		r0, #0xce
	lsl		r0, r0, #0x1
	add		r0, r12
	ldrb	r0, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	cmp		r0, #0x0
	beq		_08036712
	mov		r2, #0x80
	cmp		r0, #0x1
	bne		_08036712
	mov		r2, #0x80
	lsl		r2, r2, #0x2
_08036712:
	mov		r0, #0x3f
	mov		r1, r8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08036728
	cmp		r0, #0x3f
	beq		_08036728
	lsr		r1, r1, #0x6
	mov		r0, #0x1
	and		r1, r0
	b		_08036734
_08036728:
	mov		r0, r12
	add		r0, #0x88
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mvn		r0, r0
	lsr		r1, r0, #0x1f
_08036734:
	sub		r0, r5, r6
	asr		r0, r0, #0x1
	cmp		r4, r0
	bge		_08036744
	mov		r0, #0x1
	sub		r0, r0, r1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
_08036744:
	mov		r0, r9
	cmp		r1, #0x0
	beq		_0803674c
	add		r0, r0, r2
_0803674c:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08036688

	thumb_func_start sub_08036758
sub_08036758:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r10, r2
	ldr		r5, _080367fc
	add		r4, r6, #0x0
	add		r4, #0xec
	ldrb	r0, [r4, #0x0]
	mov		r8, r0
	bl		sub_0803d0e4
	add		r7, r0, #0x0
	ldr		r1, _08036800
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, r6
	beq		_080367de
	ldr		r2, _08036804
	add		r0, r5, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	and		r0, r1
	cmp		r0, #0x0
	bne		_080367de
	ldr		r1, _08036808
	add		r0, r6, #0x0
	add		r0, #0x7e
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x0
	bne		_080367b6
	ldr		r0, [r5, #0x10]
	mov		r1, #0x7
	and		r0, r1
	ldrb	r2, [r4, #0x0]
	and		r1, r2
	cmp		r0, r1
	beq		_080367de
_080367b6:
	mov		r0, #0x1
	neg		r0, r0
	mov		r1, r8
	lsl		r1, r1, #0x3
	str		r1, [sp, #0x0]
	mov		r2, #0xff
	lsl		r2, r2, #0x3
	add		r2, r2, r5
	mov		r9, r2
	cmp		r3, r0
	beq		_080367ce
	b		_08036938
_080367ce:
	ldr		r0, [r5, #0x10]
	mov		r1, #0x3
	and		r0, r1
	ldrb	r2, [r4, #0x0]
	and		r1, r2
	cmp		r0, r1
	beq		_080367de
	b		_08036938
_080367de:
	add		r0, r6, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	strb	r1, [r7, #0x0]
	mov		r1, r10
	strb	r1, [r7, #0x1]
	mov		r1, #0x24
	ldrsh	r2, [r6, r1]
	ldr		r1, _0803680c
	mov		r9, r0
	cmp		r2, r1
	bgt		_08036810
	mov		r1, #0x0
	b		_08036822

.incbin "base.gba", 0x367FA, 0x2

_080367fc:	.4byte RunGameLogic_CallBack
_08036800:	.4byte 0x00000838
_08036804:	.4byte 0x000007FE
_08036808:	.4byte 0x08106ecc
_0803680c:	.4byte 0x000001FF

_08036810:
	ldr		r0, _0803681c
	cmp		r2, r0
	bgt		_08036820
	mov		r1, #0x1
	b		_08036822

.incbin "base.gba", 0x3681A, 0x2

_0803681c:	.4byte 0x000003FF

_08036820:
	mov		r1, #0x2
_08036822:
	strb	r1, [r7, #0x2]
	mov		r2, #0xce
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	strb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_08037310
	cmp		r0, #0x0
	beq		_0803683c
	add		r0, r6, #0x0
	add		r0, #0x6c
	ldrb	r0, [r0, #0x0]
_0803683c:
	strb	r0, [r7, #0x3]
	mov		r0, r8
	lsl		r4, r0, #0x3
	ldr		r5, _08036888
	add		r5, r4, r5
	mov		r2, r8
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_0803d0fc
	add		r7, r0, #0x0
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_080365ec
	mov		r1, #0x0
	mov		r0, #0x3f
	mov		r2, r10
	and		r0, r2
	str		r4, [sp, #0x0]
	cmp		r0, #0x0
	beq		_0803686c
	cmp		r0, #0x3f
	bne		_0803689e
_0803686c:
	add		r0, r6, #0x0
	bl		sub_08037310
	cmp		r0, #0x0
	beq		_0803688c
	add		r0, r6, #0x0
	add		r0, #0x6d
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x1
	and		r1, r0
	neg		r0, r1
	orr		r0, r1
	b		_08036896

.incbin "base.gba", 0x36886, 0x2

_08036888:	.4byte 0x030022D0

_0803688c:
	add		r0, r6, #0x0
	add		r0, #0x88
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mvn		r0, r0
_08036896:
	asr		r1, r0, #0x1f
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	and		r1, r0
_0803689e:
	ldrh	r0, [r5, #0x4]
	orr		r1, r0
	strh	r1, [r5, #0x4]
	ldr		r0, _080369a4
	ldr		r1, [sp, #0x0]
	add		r2, r1, r0
	add		r0, r6, #0x0
	add		r0, #0x76
	ldrh	r0, [r0, #0x0]
	mov		r1, #0x1
	cmp		r0, #0x0
	beq		_080368b8
	mov		r1, #0x3
_080368b8:
	lsl		r0, r1, #0xa
	ldrh	r1, [r2, #0x6]
	orr		r0, r1
	strh	r0, [r2, #0x6]
	mov		r2, r9
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_080368d8
	add		r0, r6, #0x0
	mov		r1, r10
	add		r2, r7, #0x0
	bl		sub_08036688
	add		r7, r0, #0x0
_080368d8:
	ldr		r0, _080369a8
	ldr		r1, _080369ac
	add		r2, r0, r1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x40
	and		r0, r1
	mov		r9, r2
	cmp		r0, #0x0
	beq		_080368ec
	b		_080369f6
_080368ec:
	add		r0, r6, #0x0
	add		r0, #0xec
	ldrb	r2, [r0, #0x0]
	sub		r0, #0x1c
	ldr		r1, [r0, #0x0]
	mov		r8, r0
	cmp		r1, #0x0
	beq		_08036900
	cmp		r7, r1
	beq		_08036938
_08036900:
	lsl		r0, r2, #0xb
	ldr		r2, _080369b0
	add		r5, r0, r2
	mov		r1, #0xce
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0x4
	cmp		r0, #0x0
	beq		_08036920
	mov		r4, #0x80
	cmp		r0, #0x1
	bne		_08036920
	mov		r4, #0x80
	lsl		r4, r4, #0x2
_08036920:
	bl		sub_08029f34
	lsr		r3, r4, #0x1
	mov		r1, #0x80
	lsl		r1, r1, #0x18
	orr		r3, r1
	add		r1, r7, #0x0
	add		r2, r5, #0x0
	bl		sub_08029ee4
	mov		r2, r8
	str		r7, [r2, #0x0]
_08036938:
	mov		r0, r9
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_080369f6
	add		r4, r6, #0x0
	add		r4, #0x4c
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_080369b8
	add		r0, r6, #0x0
	bl		sub_08036330
	ldrb	r0, [r4, #0x0]
	mov		r4, #0x7
	and		r4, r0
	add		r0, r6, #0x0
	bl		sub_08036254
	lsl		r4, r4, #0x9
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	add		r0, r0, r4
	ldr		r1, _080369b4
	add		r4, r0, r1
	add		r1, r6, #0x0
	add		r1, #0xd4
	ldr		r0, [r1, #0x0]
	cmp		r0, r4
	beq		_080369f6
	str		r4, [r1, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r6, #0x0
	add		r0, #0xec
	ldrb	r0, [r0, #0x0]
	add		r0, #0x8
	lsl		r0, r0, #0x5
	add		r0, #0x6
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0xd
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	b		_080369f6

.incbin "base.gba", 0x369A2, 0x2

_080369a4:	.4byte 0x030022D0
_080369a8:	.4byte 0x030031C4
_080369ac:	.4byte 0x000007D4
_080369b0:	.4byte 0x06014000
_080369b4:	.4byte 0x08344606

_080369b8:
	add		r0, r6, #0x0
	bl		sub_08036254
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r2, _08036a0c
	add		r4, r0, r2
	add		r1, r6, #0x0
	add		r1, #0xd4
	ldr		r0, [r1, #0x0]
	cmp		r0, r4
	beq		_080369f6
	str		r4, [r1, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r6, #0x0
	add		r0, #0xec
	ldrb	r0, [r0, #0x0]
	add		r0, #0x8
	lsl		r0, r0, #0x5
	add		r0, #0x6
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0xd
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
_080369f6:
	ldr		r0, _08036a10
	ldr		r1, [sp, #0x0]
	add		r0, r1, r0
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08036a0c:	.4byte 0x08345606
_08036a10:	.4byte 0x030022D0
	thumb_func_end sub_08036758

	thumb_func_start sub_08036a14
sub_08036a14:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r7, r0, #0x0
	ldr		r0, _08036ac8
	mov		r1, #0x0
	mov		r9, r1
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	mov		r10, r2
	mov		r8, r1
	ldr		r3, _08036acc
	add		r0, r0, r3
	ldrb	r0, [r0, #0x0]
	cmp		r9, r0
	bge		_08036b20
_08036a3a:
	mov		r0, r8
	lsl		r1, r0, #0x2
	ldr		r2, _08036ad0
	ldr		r3, _08036ad4
	add		r0, r2, r3
	add		r0, r0, r1
	ldr		r6, [r0, #0x0]
	cmp		r7, r6
	beq		_08036b10
	ldr		r0, _08036ac8
	add		r2, r0, #0x0
	add		r2, #0x24
	add		r0, r7, #0x0
	add		r0, #0x90
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x7f
	add		r4, r1, #0x0
	and		r4, r0
	add		r0, r6, #0x0
	add		r0, #0x90
	ldrb	r0, [r0, #0x0]
	add		r5, r1, #0x0
	and		r5, r0
	cmp		r4, r5
	beq		_08036a90
	add		r0, r2, #0x0
	add		r1, r4, #0x0
	str		r2, [sp, #0x0]
	bl		sub_0802c78c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	ldr		r2, [sp, #0x0]
	cmp		r0, r5
	beq		_08036a90
	add		r0, r2, #0x0
	add		r1, r4, #0x0
	bl		sub_0802c774
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, r5
	bne		_08036b10
_08036a90:
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_080290f4
	cmp		r0, #0x0
	beq		_08036afc
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_0802911c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x37
	bgt		_08036b10
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_080290f4
	cmp		r0, #0x0
	beq		_08036adc
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_08029108
	cmp		r0, #0x0
	beq		_08036ad8
	add		r0, r7, #0x0
	b		_08036aea

_08036ac8:	.4byte RunGameLogic_CallBack
_08036acc:	.4byte 0x00000815
_08036ad0:	.4byte 0x030031C4
_08036ad4:	.4byte 0x000007F4

_08036ad8:
	add		r0, r7, #0x0
	b		_08036af4
_08036adc:
	add		r0, r6, #0x0
	add		r1, r7, #0x0
	bl		sub_08029108
	cmp		r0, #0x0
	beq		_08036af2
	add		r0, r6, #0x0
_08036aea:
	mov		r1, #0x9
	bl		sub_08036c1c
	b		_08036b10
_08036af2:
	add		r0, r6, #0x0
_08036af4:
	mov		r1, #0x8
	bl		sub_08036c1c
	b		_08036b10
_08036afc:
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_0802911c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r10, r0
	ble		_08036b10
	mov		r10, r0
	mov		r9, r6
_08036b10:
	mov		r0, #0x1
	add		r8, r0
	ldr		r1, _08036b44
	ldr		r2, _08036b48
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	cmp		r8, r0
	blt		_08036a3a
_08036b20:
	mov		r3, r9
	cmp		r3, #0x0
	beq		_08036b74
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_080290f4
	cmp		r0, #0x0
	beq		_08036b56
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_08029108
	cmp		r0, #0x0
	beq		_08036b4c
	add		r0, r7, #0x0
	b		_08036b64

.incbin "base.gba", 0x36B42, 0x2

_08036b44:	.4byte 0x030031C4
_08036b48:	.4byte 0x000007F1

_08036b4c:
	add		r0, r7, #0x0
	mov		r1, #0x8
	bl		sub_08036c1c
	b		_08036b74
_08036b56:
	mov		r0, r9
	add		r1, r7, #0x0
	bl		sub_08029108
	cmp		r0, #0x0
	beq		_08036b6c
	mov		r0, r9
_08036b64:
	mov		r1, #0x9
	bl		sub_08036c1c
	b		_08036b74
_08036b6c:
	mov		r0, r9
	mov		r1, #0x8
	bl		sub_08036c1c
_08036b74:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08036a14

	thumb_func_start sub_08036b84
sub_08036b84:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	ldr		r1, _08036c04
	add		r0, r1, #0x0
	add		r0, #0x24
	mov		r2, #0x0
	mov		r8, r2
	mov		r7, #0x80
	lsl		r7, r7, #0x5
	mov		r2, #0xe7
	lsl		r2, r2, #0x3
	add		r1, r1, r2
	ldr		r4, [r1, #0x0]
	add		r1, r4, #0x0
	bl		sub_0802c404
	add		r6, r0, #0x0
	mov		r0, #0x7f
	and		r6, r0
	cmp		r4, #0x0
	beq		_08036be8
_08036bb2:
	ldr		r0, [r4, #0x54]
	cmp		r0, r5
	beq		_08036be2
	add		r0, r5, #0x0
	add		r0, #0x90
	ldrb	r0, [r0, #0x0]
	cmp		r0, r6
	bne		_08036be2
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_080290f4
	cmp		r0, #0x0
	beq		_08036be2
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0802911c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r7, r0
	ble		_08036be2
	add		r7, r0, #0x0
	mov		r8, r4
_08036be2:
	ldr		r4, [r4, #0x3c]
	cmp		r4, #0x0
	bne		_08036bb2
_08036be8:
	mov		r0, r8
	cmp		r0, #0x0
	beq		_08036c10
	add		r0, r5, #0x0
	mov		r1, r8
	bl		sub_08029108
	cmp		r0, #0x0
	beq		_08036c08
	add		r0, r5, #0x0
	mov		r1, #0x9
	bl		sub_08036c1c
	b		_08036c10

_08036c04:	.4byte RunGameLogic_CallBack

_08036c08:
	add		r0, r5, #0x0
	mov		r1, #0x8
	bl		sub_08036c1c
_08036c10:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x36C1A, 0x2
	thumb_func_end sub_08036b84

	thumb_func_start sub_08036c1c
sub_08036c1c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r5, r1, #0x18
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08036c68
	cmp		r5, #0x8
	beq		_08036c56
	cmp		r5, #0x8
	bgt		_08036c3e
	cmp		r5, #0x2
	beq		_08036c4e
	b		_08036c68
_08036c3e:
	cmp		r5, #0x9
	beq		_08036c60
	cmp		r5, #0xf
	bne		_08036c68
	add		r0, r4, #0x0
	bl		sub_080549d0
	b		_08036c68
_08036c4e:
	add		r0, r4, #0x0
	bl		sub_080543c0
	b		_08036c68
_08036c56:
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0805441c
	b		_08036c68
_08036c60:
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_0805441c
_08036c68:
	sub		r0, r5, #0x1
	cmp		r0, #0x6
	bhi		_08036cbe
	lsl		r0, r0, #0x2
	ldr		r1, _08036c78
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08036c78:	.4byte 0x08036c7c
_08036c7c:	.4byte 0x08036c98

.incbin "base.gba", 0x36C80, 0x18

_08036c98:
.incbin "base.gba", 0x36C98, 0x4
.incbin "base.gba", 0x36C9C, 0x4
_08036ca0:
.incbin "base.gba", 0x36CA0, 0x4
.incbin "base.gba", 0x36CA4, 0x4
_08036ca8:
.incbin "base.gba", 0x36CA8, 0x4
.incbin "base.gba", 0x36CAC, 0x4
_08036cb0:
.incbin "base.gba", 0x36CB0, 0x4
.incbin "base.gba", 0x36CB4, 0x4

.incbin "base.gba", 0x36CB8, 0x6

_08036cbe:
	sub		r0, r5, #0x3
	cmp		r0, #0xb
	bhi		_08036d2a
	lsl		r0, r0, #0x2
	ldr		r1, _08036cd0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x36CCE, 0x2

_08036cd0:	.4byte 0x08036cd4
_08036cd4:	.4byte 0x08036d04

.incbin "base.gba", 0x36CD8, 0x2C
	thumb_func_end sub_08036c1c


.incbin "base.gba", 0x36D04, 0x8

_08036d0c:

.incbin "base.gba", 0x36D0C, 0x1E

_08036d2a:

.incbin "base.gba", 0x36D2A, 0x6
	thumb_func_start sub_08036d30
sub_08036d30:
	push	{ r4, lr }
	add		r4, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r3, r2, #0x18
	ldrh	r2, [r4, #0x24]
	add		r0, #0x6e
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x1c
	lsr		r0, r0, #0x1c
	sub		r0, #0x2
	cmp		r0, #0xd
	bhi		_08036db2
	lsl		r0, r0, #0x2
	ldr		r1, _08036d54
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x36D52, 0x2

_08036d54:	.4byte 0x08036d58
_08036d58:	.4byte 0x08036d98

.incbin "base.gba", 0x36D5C, 0x34
	thumb_func_end sub_08036d30


.incbin "base.gba", 0x36D90, 0x12

_08036da2:

.incbin "base.gba", 0x36DA2, 0x10

_08036db2:

.incbin "base.gba", 0x36DB2, 0x16
_08036dc8:	.4byte 0x08036dcc
_08036dcc:	.4byte 0x08036de8

.incbin "base.gba", 0x36DD0, 0x20

_08036df0:

.incbin "base.gba", 0x36DF0, 0x10

_08036e00:

.incbin "base.gba", 0x36E00, 0xE

_08036e0e:

.incbin "base.gba", 0x36E0E, 0x1A
_08036e28:	.4byte 0x08036e2c
_08036e2c:	.4byte 0x08036e5c

.incbin "base.gba", 0x36E30, 0x34

_08036e64:

.incbin "base.gba", 0x36E64, 0x8
_08036e6c:

.incbin "base.gba", 0x36E6C, 0x8
_08036e74:

.incbin "base.gba", 0x36E74, 0xE

_08036e82:

.incbin "base.gba", 0x36E82, 0x6
	thumb_func_start sub_08036e88
sub_08036e88:
	push	{ r4, r5, lr }
	mov		r12, r0
	mov		r2, r12
	add		r2, #0x6e
	ldrb	r1, [r2, #0x0]
	mov		r5, #0x10
	neg		r5, r5
	add		r0, r5, #0x0
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldrh	r1, [r2, #0x0]
	ldr		r4, _08036ee8
	add		r0, r4, #0x0
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldrb	r1, [r2, #0x1]
	mov		r3, #0x1
	add		r0, r3, #0x0
	and		r0, r1
	strb	r0, [r2, #0x1]
	mov		r1, r12
	add		r1, #0x70
	ldrb	r2, [r1, #0x0]
	add		r0, r5, #0x0
	and		r0, r2
	strb	r0, [r1, #0x0]
	ldrh	r2, [r1, #0x0]
	add		r0, r4, #0x0
	and		r0, r2
	strh	r0, [r1, #0x0]
	ldrb	r2, [r1, #0x1]
	add		r0, r3, #0x0
	and		r0, r2
	strb	r0, [r1, #0x1]
	mov		r0, r12
	add		r0, #0x72
	ldrb	r1, [r0, #0x0]
	and		r5, r1
	strb	r5, [r0, #0x0]
	ldrh	r1, [r0, #0x0]
	and		r4, r1
	strh	r4, [r0, #0x0]
	ldrb	r1, [r0, #0x1]
	and		r3, r1
	strb	r3, [r0, #0x1]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08036ee8:	.4byte 0xFFFFFE0F
	thumb_func_end sub_08036e88

	thumb_func_start sub_08036eec
sub_08036eec:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r5, r1, #0x18
	mov		r3, #0x0
	ldr		r1, [r7, #0x48]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08036f02
	b		_080370ae
_08036f02:
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r1, r0
	cmp		r1, #0x0
	bne		_08036f0e
	b		_080370ae
_08036f0e:
	ldr		r1, _08036f34
	mov		r4, #0x0
	ldr		r2, _08036f38
	add		r0, r1, r2
	ldr		r2, [r0, #0x0]
	mov		r12, r1
	cmp		r2, #0x0
	bge		_08036f3c
	mov		r0, #0x1
	and		r0, r2
	cmp		r0, #0x0
	bne		_08036f98
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	and		r2, r0
	cmp		r2, #0x0
	beq		_08036f92
	b		_08036f98

.incbin "base.gba", 0x36F32, 0x2

_08036f34:	.4byte RunGameLogic_CallBack
_08036f38:	.4byte 0x00000CAC

_08036f3c:
	ldr		r0, _08036f5c
	add		r0, r12
	ldrh	r2, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_08036f60
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_08036f80
	b		_08036f92

.incbin "base.gba", 0x36F5A, 0x2

_08036f5c:	.4byte 0x000007FE

_08036f60:
	mov		r0, #0x10
	and		r0, r2
	cmp		r0, #0x0
	beq		_08036f98
	mov		r1, #0x0
	ldr		r0, _08036f7c
	ldrh	r0, [r0, #0x12]
	cmp		r0, #0x0
	bne		_08036f74
	mov		r1, #0x1
_08036f74:
	mov		r4, #0x0
	cmp		r1, #0x0
	beq		_08036f92
	b		_08036f98

_08036f7c:	.4byte 0x03002FE0

_08036f80:
	mov		r1, #0x0
	ldr		r0, _08036fa8
	ldrh	r0, [r0, #0xc]
	cmp		r0, #0x0
	bne		_08036f8c
	mov		r1, #0x1
_08036f8c:
	cmp		r1, #0x0
	beq		_08036f92
	mov		r4, #0x1
_08036f92:
	cmp		r4, #0x0
	bne		_08036f98
	b		_080370ae
_08036f98:
	sub		r6, r5, #0x1
	cmp		r6, #0x4
	bhi		_08036fd2
	lsl		r0, r6, #0x2
	ldr		r1, _08036fac
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08036fa8:	.4byte 0x03002FE0
_08036fac:	.4byte 0x08036fb0
_08036fb0:	.4byte 0x08036fc8

.incbin "base.gba", 0x36FB4, 0x10
	thumb_func_end sub_08036eec


.incbin "base.gba", 0x36FC4, 0xE

_08036fd2:

.incbin "base.gba", 0x36FD2, 0xE
_08036fe0:

.incbin "base.gba", 0x36FE0, 0x28
_08037008:	.4byte 0x00000838
_0803700c:	.4byte 0x08037010
_08037010:	.4byte 0x08037060

.incbin "base.gba", 0x37014, 0x9A

_080370ae:

.incbin "base.gba", 0x370AE, 0x6
	thumb_func_start sub_080370b4
sub_080370b4:
	add		r1, r0, #0x0
	ldr		r0, _080370d8
	cmp		r1, r0
	beq		_0803710a
	cmp		r1, r0
	bgt		_080370f0
	sub		r0, #0x3
	cmp		r1, r0
	beq		_0803710a
	cmp		r1, r0
	bgt		_080370dc
_080370ca:
	sub		r0, #0x2
	cmp		r1, r0
	beq		_0803710a
	add		r0, #0x1
	cmp		r1, r0
	beq		_08037118
	b		_0803711c

_080370d8:	.4byte 0x00001005

_080370dc:
	ldr		r0, _080370ec
	cmp		r1, r0
	beq		_08037118
	add		r0, #0x1
	cmp		r1, r0
	beq		_0803710a
	b		_0803711c

.incbin "base.gba", 0x370EA, 0x2

_080370ec:	.4byte 0x00001003

_080370f0:
	ldr		r0, _08037110
	cmp		r1, r0
	beq		_0803710a
	cmp		r1, r0
	ble		_080370ca
	ldr		r0, _08037114
	cmp		r1, r0
	beq		_0803710a
	cmp		r1, r0
	blt		_08037118
	add		r0, #0x1
	cmp		r1, r0
	bne		_0803711c
_0803710a:
	mov		r0, #0x1
	b		_0803711e

.incbin "base.gba", 0x3710E, 0x2

_08037110:	.4byte 0x00002002
_08037114:	.4byte 0x00002004

_08037118:
	mov		r0, #0x3
	b		_0803711e
_0803711c:
	mov		r0, #0x0
_0803711e:
	bx		lr
	thumb_func_end sub_080370b4

	thumb_func_start sub_08037120
sub_08037120:
	push	{ r4, lr }
	mov		r12, r0
	ldr		r4, [sp, #0x0+0x8]
	str		r1, [r0, #0x0]
	str		r2, [r0, #0x4]
	str		r3, [r0, #0x8]
	cmp		r2, #0x0
	bge		_08037134
	ldr		r0, _0803715c
	add		r2, r2, r0
_08037134:
	asr		r1, r2, #0x10
	mov		r0, r12
	add		r0, #0xf0
	strh	r1, [r0, #0x0]
	sub		r0, #0x9a
	strh	r4, [r0, #0x0]
	ldr		r0, _0803715c
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	and		r0, r1
	mov		r2, r12
	add		r2, #0x7a
	strh	r0, [r2, #0x0]
	and		r0, r1
	mov		r1, r12
	add		r1, #0x7c
	strh	r0, [r1, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0803715c:	.4byte 0x0000FFFF
	thumb_func_end sub_08037120

	thumb_func_start sub_08037160
sub_08037160:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r4, #0xec
	ldrb	r0, [r4, #0x0]
	add		r0, #0x8
	lsl		r0, r0, #0x5
	add		r1, r1, r0
	add		r0, r5, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3718C, 0x94
	thumb_func_end sub_08037160

	thumb_func_start sub_08037220
sub_08037220:
	add		r1, r0, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x3
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	bhi		_08037236
	ldr		r0, [r1, #0x8]
	cmp		r0, #0x0
	beq		_08037254
_08037236:
	add		r0, r1, #0x0
	add		r0, #0x76
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0xf
	beq		_08037254
	add		r0, r1, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x8
	bne		_08037258
	add		r0, r1, #0x0
	add		r0, #0x9c
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x3c
	bhi		_08037258
_08037254:
	mov		r0, #0x1
	b		_0803725a
_08037258:
	mov		r0, #0x0
_0803725a:
	bx		lr
	thumb_func_end sub_08037220

	thumb_func_start sub_0803725c
sub_0803725c:
	push	{ lr }
	cmp		r1, #0x0
	beq		_0803726a
	mov		r1, #0x9
	bl		sub_08036c1c
	b		_08037270
_0803726a:
	mov		r1, #0x8
	bl		sub_08036c1c
_08037270:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803725c

	thumb_func_start sub_08037274
sub_08037274:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_080290f4
	cmp		r0, #0x0
	beq		_0803729c
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08029108
	cmp		r0, #0x0
	beq		_08037292
	add		r0, r5, #0x0
	b		_080372aa
_08037292:
	add		r0, r5, #0x0
	mov		r1, #0x8
	bl		sub_08036c1c
	b		_080372ba
_0803729c:
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08029108
	cmp		r0, #0x0
	beq		_080372b2
	add		r0, r4, #0x0
_080372aa:
	mov		r1, #0x9
	bl		sub_08036c1c
	b		_080372ba
_080372b2:
	add		r0, r4, #0x0
	mov		r1, #0x8
	bl		sub_08036c1c
_080372ba:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08037274

	thumb_func_start sub_080372c0
sub_080372c0:
	push	{ r4, r5, r6, lr }
	ldr		r2, _08037304
	add		r6, r2, #0x0
	add		r6, #0x24
	add		r0, #0x90
	ldrb	r0, [r0, #0x0]
	mov		r2, #0x7f
	add		r4, r2, #0x0
	and		r4, r0
	add		r1, #0x90
	ldrb	r0, [r1, #0x0]
	add		r5, r2, #0x0
	and		r5, r0
	cmp		r4, r5
	beq		_080372fe
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_0802c78c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, r5
	beq		_080372fe
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_0802c774
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, r5
	bne		_08037308
_080372fe:
	mov		r0, #0x1
	b		_0803730a

.incbin "base.gba", 0x37302, 0x2

_08037304:	.4byte RunGameLogic_CallBack

_08037308:
	mov		r0, #0x0
_0803730a:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080372c0

	thumb_func_start sub_08037310
sub_08037310:
	add		r1, r0, #0x0
	add		r1, #0x6e
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x1c
	lsr		r0, r0, #0x1c
	cmp		r0, #0x2
	beq		_0803732a
	cmp		r0, #0x2
	blt		_0803733a
	cmp		r0, #0x9
	bgt		_0803733a
	cmp		r0, #0x8
	blt		_0803733a
_0803732a:
	ldrh	r0, [r1, #0x0]
	mov		r1, #0xf8
	lsl		r1, r1, #0x1
	and		r1, r0
	neg		r0, r1
	orr		r0, r1
	lsr		r0, r0, #0x1f
	b		_0803733c
_0803733a:
	mov		r0, #0x0
_0803733c:
	bx		lr

.incbin "base.gba", 0x3733E, 0x2
	thumb_func_end sub_08037310

	thumb_func_start sub_08037340
sub_08037340:
	ldr		r0, [r0, #0x70]
	lsl		r0, r0, #0x1c
	lsr		r0, r0, #0x1c
	mov		r1, #0x0
	cmp		r0, #0x6
	bgt		_08037352
	cmp		r0, #0x5
	blt		_08037352
	mov		r1, #0x1
_08037352:
	add		r0, r1, #0x0
	bx		lr

.incbin "base.gba", 0x37356, 0x2
	thumb_func_end sub_08037340

	thumb_func_start sub_08037358
sub_08037358:
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x17
	add		r1, r1, r0
	add		r1, #0x6e
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x10
	neg		r0, r0
	and		r0, r2
	strb	r0, [r1, #0x0]
	ldrh	r2, [r1, #0x0]
	ldr		r0, _0803737c
	and		r0, r2
	strh	r0, [r1, #0x0]
	ldrb	r2, [r1, #0x1]
	mov		r0, #0x1
	and		r0, r2
	strb	r0, [r1, #0x1]
	bx		lr

_0803737c:	.4byte 0xFFFFFE0F
	thumb_func_end sub_08037358

	thumb_func_start sub_08037380
sub_08037380:
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	and		r0, r1
	cmp		r0, #0x0
	beq		_080373a0
	add		r1, r2, #0x0
	add		r1, #0x56
	ldr		r2, _0803739c
	add		r0, r2, #0x0
	ldrh	r1, [r1, #0x0]
	b		_080373b2

.incbin "base.gba", 0x3739A, 0x2

_0803739c:	.4byte 0xFFFF8000

_080373a0:
	add		r1, r2, #0x0
	add		r1, #0x7c
	add		r0, r2, #0x0
	add		r0, #0x82
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x8
_080373b2:
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	bx		lr

.incbin "base.gba", 0x373BA, 0x2
	thumb_func_end sub_08037380

	thumb_func_start sub_080373bc
sub_080373bc:
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	and		r0, r1
	cmp		r0, #0x0
	beq		_080373d0
	add		r0, r2, #0x0
	add		r0, #0x56
	b		_080373d4
_080373d0:
	add		r0, r2, #0x0
	add		r0, #0x7c
_080373d4:
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	bx		lr

.incbin "base.gba", 0x373DA, 0x2
	thumb_func_end sub_080373bc

	thumb_func_start sub_080373dc
sub_080373dc:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r6, r0, #0x0
	mov		r8, r1
	ldr		r5, _08037418
	mov		r0, r8
	bl		sub_080370b4
	add		r4, r0, #0x0
	mov		r0, #0xbd
	lsl		r0, r0, #0x1
	add		r6, r6, r0
	ldrh	r0, [r6, #0x0]
	bl		sub_080370b4
	ldr		r1, _0803741c
	add		r5, r5, r1
	sub		r4, r4, r0
	ldrb	r0, [r5, #0x0]
	add		r4, r4, r0
	strb	r4, [r5, #0x0]
	mov		r1, r8
	strh	r1, [r6, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x37416, 0x2

_08037418:	.4byte RunGameLogic_CallBack
_0803741c:	.4byte 0x00000CA8
	thumb_func_end sub_080373dc

	thumb_func_start sub_08037420
sub_08037420:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_08031594
	mov		r2, #0xcb
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	mul		r0, r1
	asr		r0, r0, #0x8
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08037420

	thumb_func_start sub_0803743c
sub_0803743c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_08031594
	add		r1, r0, #0x0
	mov		r0, #0xcc
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	mul		r0, r1
	asr		r1, r0, #0x8
	add		r0, r1, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0803743c

	thumb_func_start sub_0803745c
sub_0803745c:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r0, _08037494
	ldr		r1, [r0, #0x10]
	mov		r0, #0x7
	and		r1, r0
	ldr		r3, _08037498
	add		r0, r2, r3
	ldrb	r0, [r0, #0x0]
	cmp		r1, r0
	bge		_080374ac
	lsl		r1, r1, #0x2
	add		r3, #0x3
	add		r0, r2, r3
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	ldr		r2, [r1, #0x48]
	cmp		r2, #0x0
	beq		_080374ac
	mov		r0, #0x20
	and		r0, r2
	cmp		r0, #0x0
	beq		_0803749c
	add		r0, r1, #0x0
	bl		sub_0803c9f0
	b		_080374ac

.incbin "base.gba", 0x37492, 0x2

_08037494:	.4byte RunGameLogic_CallBack
_08037498:	.4byte 0x000007F1

_0803749c:
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	and		r2, r0
	cmp		r2, #0x0
	beq		_080374ac
	add		r0, r1, #0x0
	bl		sub_0803c9f0
_080374ac:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803745c

	thumb_func_start sub_080374b0
sub_080374b0:
	add		r1, r0, #0x0
	add		r0, #0x91
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	add		r1, #0x90
	ldrb	r1, [r1, #0x0]
	add		r0, r0, r1
	bx		lr
	thumb_func_end sub_080374b0

	thumb_func_start sub_080374c0
sub_080374c0:
	lsl		r1, r1, #0x1
	add		r0, #0xdc
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x374CA, 0x2
	thumb_func_end sub_080374c0

	thumb_func_start sub_080374cc
sub_080374cc:
	mov		r3, #0x0
	add		r1, r0, #0x0
	add		r1, #0xdc
	mov		r2, #0x4
_080374d4:
	ldrh	r0, [r1, #0x0]
	add		r3, r3, r0
	add		r1, #0x2
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_080374d4
	ldr		r0, _080374f0
	cmp		r3, r0
	ble		_080374e8
	add		r3, r0, #0x0
_080374e8:
	lsl		r0, r3, #0x10
	lsr		r0, r0, #0x10
	bx		lr

.incbin "base.gba", 0x374EE, 0x2

_080374f0:	.4byte 0x0000EA5F
	thumb_func_end sub_080374cc

	thumb_func_start sub_080374f4
sub_080374f4:
	push	{ r4, lr }
	add		r2, r0, #0x0
	add		r3, r2, #0x0
	add		r3, #0x7e
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0xb
	bne		_08037544
	add		r1, r2, #0x0
	add		r1, #0x80
	mov		r4, #0x0
	ldrsh	r0, [r1, r4]
	cmp		r0, #0x0
	beq		_08037540
	add		r1, r0, #0x0
	cmp		r1, #0x0
	bge		_08037516
	neg		r1, r1
_08037516:
	ldr		r0, _08037538
	cmp		r1, r0
	ble		_08037520
	mov		r1, #0xfc
	lsl		r1, r1, #0x6
_08037520:
	asr		r0, r1, #0xb
	mov		r1, #0x7
	and		r0, r1
	add		r2, #0xc0
	ldr		r1, _0803753c
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	str		r0, [r2, #0x0]
	b		_0803754c

.incbin "base.gba", 0x37536, 0x2

_08037538:	.4byte 0x00003FFF
_0803753c:	.4byte 0x08106e54

_08037540:
	mov		r0, #0xe
	strb	r0, [r3, #0x0]
_08037544:
	add		r1, r2, #0x0
	add		r1, #0x84
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
_0803754c:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x37552, 0x15A
	thumb_func_end sub_080374f4

	thumb_func_start sub_080376ac
sub_080376ac:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r0, #0x91
	ldrb	r0, [r0, #0x0]
	mov		r5, #0x7f
	and		r5, r0
	cmp		r0, #0x7f
	beq		_080376ea
	ldr		r2, [r4, #0x48]
	mov		r0, #0x20
	and		r0, r2
	cmp		r0, #0x0
	bne		_080376e0
	add		r0, r1, #0x0
	bl		sub_0802c744
	add		r1, r4, #0x0
	add		r1, #0xba
	ldrh	r1, [r1, #0x0]
	lsr		r1, r1, #0x1
	mov		r2, #0x5
	mul		r1, r2
	add		r0, r0, r5
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	b		_080376f0
_080376e0:
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r2, r0
	cmp		r2, #0x0
	bne		_080376ee
_080376ea:
	mov		r0, #0x0
	b		_080376f0
_080376ee:
	mov		r0, #0x1
_080376f0:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x376F6, 0x2
	thumb_func_end sub_080376ac

	thumb_func_start sub_080376f8
sub_080376f8:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	add		r0, #0xc6
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x8
	add		r4, r0, #0x0
	sub		r4, #0x81
	cmp		r4, #0x4
	bhi		_08037756
	bl		sub_08048a48
	add		r2, r5, #0x0
	add		r2, #0xe8
	ldr		r1, [r2, #0x0]
	sub		r0, r0, r1
	ldr		r3, _08037734
	add		r6, r2, #0x0
	cmp		r0, r3
	bhi		_08037738
	bl		sub_08048a48
	lsl		r2, r4, #0x1
	add		r1, r5, #0x0
	add		r1, #0xdc
	add		r1, r1, r2
	ldr		r2, [r6, #0x0]
	sub		r0, r0, r2
	strh	r0, [r1, #0x0]
	b		_08037742

_08037734:	.4byte 0x0000EA5F

_08037738:
	lsl		r1, r4, #0x1
	add		r0, r5, #0x0
	add		r0, #0xdc
	add		r0, r0, r1
	strh	r3, [r0, #0x0]
_08037742:
	ldr		r1, _0803775c
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	bne		_08037750
	bl		sub_08048eec
_08037750:
	bl		sub_08048a48
	str		r0, [r6, #0x0]
_08037756:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803775c:	.4byte 0x00000814
	thumb_func_end sub_080376f8

	thumb_func_start sub_08037760
sub_08037760:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldrh	r4, [r2, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r1, r4
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	cmp		r1, r0
	beq		_080377aa
	cmp		r1, r0
	bgt		_08037784
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	cmp		r1, r0
	beq		_0803778e
	b		_080377c4
_08037784:
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	cmp		r1, r0
	beq		_08037798
	b		_080377c4
_0803778e:
	add		r0, r3, #0x0
	add		r1, r2, #0x0
	bl		sub_08039b28
	b		_080377c4
_08037798:
	mov		r0, #0x88
	lsl		r0, r0, #0x8
	cmp		r4, r0
	beq		_080377c4
	add		r0, r3, #0x0
	add		r1, r2, #0x0
	bl		sub_080392d0
	b		_080377c4
_080377aa:
	ldr		r0, _080377cc
	ldr		r1, _080377d0
	add		r0, r0, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_080377c4
	add		r0, r3, #0x0
	add		r1, r2, #0x0
	bl		sub_08038e58
_080377c4:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x377CA, 0x2

_080377cc:	.4byte RunGameLogic_CallBack
_080377d0:	.4byte 0x000007FE

.incbin "base.gba", 0x377D4, 0x38
	thumb_func_end sub_08037760

	thumb_func_start sub_0803780c
sub_0803780c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldrb	r0, [r2, #0x8]
	mov		r9, r0
	mov		r0, #0x8
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x0
	beq		_0803790c
	ldrh	r0, [r2, #0xa]
	ldr		r7, _080378d0
	lsl		r0, r0, #0x19
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08037832
	add		r0, #0x3f
_08037832:
	asr		r0, r0, #0x6
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	mov		r8, r1
	sub		r0, r1, r0
	ldr		r5, _080378d4
	and		r0, r5
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0803784c
	add		r0, #0x7f
_0803784c:
	asr		r0, r0, #0x7
	ldrh	r1, [r2, #0xc]
	add		r1, r1, r0
	mov		r12, r1
	mov		r6, #0x0
	strh	r1, [r2, #0xc]
	lsl		r0, r3, #0x19
	asr		r3, r0, #0x10
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_08037864
	add		r0, #0x3f
_08037864:
	asr		r4, r0, #0x6
	add		r0, r4, #0x0
	and		r0, r5
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r1, r0, #0x4
	add		r0, r0, r1
	lsl		r1, r0, #0x8
	add		r0, r0, r1
	cmp		r0, #0x0
	bge		_08037884
	ldr		r1, _080378d8
	add		r0, r0, r1
_08037884:
	asr		r0, r0, #0x18
	ldrh	r1, [r2, #0xe]
	add		r0, r0, r1
	strh	r0, [r2, #0xe]
	mov		r1, r8
	sub		r0, r1, r4
	and		r0, r5
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0803789e
	add		r0, #0x3f
_0803789e:
	asr		r0, r0, #0x6
	add		r0, r12
	strh	r0, [r2, #0xc]
	mov		r0, r9
	add		r0, #0x1
	strb	r0, [r2, #0x8]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x1d
	ble		_0803790c
	mov		r0, #0x0
	strb	r0, [r2, #0x8]
	ldr		r3, _080378dc
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x0
	beq		_0803790c
	cmp		r2, r0
	bne		_080378ec
	ldr		r1, _080378e0
	ldr		r0, [r1, #0x0]
	cmp		r2, r0
	bne		_080378e4
	str		r6, [r1, #0x0]
	str		r6, [r3, #0x0]
	b		_0803790c

_080378d0:	.4byte 0x08101068
_080378d4:	.4byte 0x000003FF
_080378d8:	.4byte 0x00FFFFFF
_080378dc:	.4byte 0x03005FC0
_080378e0:	.4byte 0x03005FC4

_080378e4:
	ldr		r0, [r2, #0x0]
	str		r0, [r3, #0x0]
	str		r6, [r0, #0x4]
	b		_0803790c
_080378ec:
	ldr		r1, _080378fc
	ldr		r0, [r1, #0x0]
	cmp		r2, r0
	bne		_08037900
	ldr		r0, [r2, #0x4]
	str		r0, [r1, #0x0]
	str		r6, [r0, #0x0]
	b		_0803790c

_080378fc:	.4byte 0x03005FC4

_08037900:
	ldr		r1, [r2, #0x0]
	ldr		r0, [r2, #0x4]
	str		r0, [r1, #0x4]
	ldr		r1, [r2, #0x4]
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
_0803790c:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803780c

	thumb_func_start sub_08037918
sub_08037918:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	add		r3, r0, #0x0
	add		r6, r1, #0x0
	mov		r4, #0x0
	ldrb	r1, [r3, #0x8]
	mov		r0, #0x8
	ldrsb	r0, [r3, r0]
	cmp		r0, #0x0
	bne		_0803792e
	b		_08037a3e
_0803792e:
	ldrb	r0, [r3, #0x9]
	sub		r0, #0x1
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r5, r1, #0x0
	cmp		r0, #0x4
	bhi		_080379f4
	lsl		r0, r0, #0x2
	ldr		r1, _08037948
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x37946, 0x2

_08037948:	.4byte 0x0803794c
_0803794c:	.4byte 0x08037960

.incbin "base.gba", 0x37950, 0x10
	thumb_func_end sub_08037918


.incbin "base.gba", 0x37960, 0x94

_080379f4:

.incbin "base.gba", 0x379F4, 0xA
_080379fe:

.incbin "base.gba", 0x379FE, 0x18
_08037a16:

.incbin "base.gba", 0x37A16, 0x28
_08037a3e:

.incbin "base.gba", 0x37A3E, 0x12
PTR_H_Reset_08037a50:	.4byte 0xffff0000
_08037a54:	.4byte 0x0000FFFF
	thumb_func_start sub_08037a58
sub_08037a58:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r12, r0
	add		r7, r1, #0x0
	mov		r8, r3
	cmp		r3, #0x0
	bne		_08037a6e
	b		_08037b98
_08037a6e:
	ldr		r1, _08037ae0
	add		r0, r7, #0x0
	sub		r0, #0x18
	lsl		r5, r0, #0x19
	ldr		r6, _08037ae4
	ldr		r0, _08037ae8
	mov		r9, r0
	add		r3, r1, #0x0
	add		r0, r7, #0x0
	add		r0, #0x18
	lsl		r4, r0, #0x19
	mov		r0, #0x0
	mov		r10, r0
_08037a88:
	mov		r0, #0x8
	ldrsb	r0, [r3, r0]
	cmp		r0, #0x0
	beq		_08037a92
	b		_08037b8c
_08037a92:
	cmp		r2, #0x0
	bne		_08037af8
	asr		r2, r5, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08037aa0
	add		r0, #0x3f
_08037aa0:
	asr		r4, r0, #0x6
	ldr		r0, _08037aec
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	cmp		r0, #0x0
	bge		_08037abe
	ldr		r1, _08037af0
	add		r0, r0, r1
_08037abe:
	asr		r5, r0, #0x10
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r4
	ldr		r1, _08037aec
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08037ad8
	ldr		r1, _08037af4
	add		r0, r0, r1
_08037ad8:
	asr		r2, r0, #0xb
	sub		r1, r7, #0x4
	b		_08037b40

.incbin "base.gba", 0x37ADE, 0x2

_08037ae0:	.4byte 0x03005F60
_08037ae4:	.4byte 0x08101068
_08037ae8:	.4byte 0x03005FC4
_08037aec:	.4byte 0x000003FF
_08037af0:	.4byte 0x0000FFFF
_08037af4:	.4byte 0x000007FF

_08037af8:
	add		r5, r6, #0x0
	asr		r2, r4, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08037b04
	add		r0, #0x3f
_08037b04:
	asr		r4, r0, #0x6
	ldr		r0, _08037b70
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	cmp		r0, #0x0
	bge		_08037b22
	ldr		r1, _08037b74
	add		r0, r0, r1
_08037b22:
	asr		r5, r0, #0x10
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r4
	ldr		r1, _08037b70
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08037b3c
	ldr		r1, _08037b78
	add		r0, r0, r1
_08037b3c:
	asr		r2, r0, #0xb
	add		r1, r7, #0x4
_08037b40:
	mov		r0, #0x1
	strb	r0, [r3, #0x8]
	strh	r1, [r3, #0xa]
	mov		r0, r8
	strb	r0, [r3, #0x9]
	mov		r1, r12
	ldrh	r0, [r1, #0x0]
	add		r0, r0, r2
	lsl		r0, r0, #0x7
	strh	r0, [r3, #0xc]
	ldrh	r0, [r1, #0x2]
	add		r0, r0, r5
	add		r0, #0x8
	lsl		r0, r0, #0x7
	strh	r0, [r3, #0xe]
	mov		r0, r10
	str		r0, [r3, #0x4]
	str		r0, [r3, #0x0]
	ldr		r1, _08037b7c
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08037b80
	mov		r0, r9
	b		_08037b86

_08037b70:	.4byte 0x000003FF
_08037b74:	.4byte 0x0000FFFF
_08037b78:	.4byte 0x000007FF
_08037b7c:	.4byte 0x03005FC0

_08037b80:
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	str		r0, [r3, #0x4]
_08037b86:
	str		r3, [r0, #0x0]
	str		r3, [r1, #0x0]
	b		_08037b98
_08037b8c:
	add		r3, #0x10
	add		r0, r1, #0x0
	add		r0, #0x50
	cmp		r3, r0
	bgt		_08037b98
	b		_08037a88
_08037b98:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x37BA6, 0x2
	thumb_func_end sub_08037a58

	thumb_func_start sub_08037ba8
sub_08037ba8:
	push	{ r4, r5, r6, lr }
	add		r3, r0, #0x0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, [r3, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08037bf2
	mov		r1, #0x14
	ldrsh	r0, [r4, r1]
	add		r1, r3, #0x0
	add		r1, #0x7a
	ldrh	r1, [r1, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x9
	add		r0, #0x20
	mov		r2, #0x7f
	and		r0, r2
	mov		r1, #0xbf
	sub		r5, r1, r0
	and		r5, r2
	ldr		r0, _08037bf8
	ldr		r4, [r0, #0x0]
	cmp		r4, #0x0
	beq		_08037bf2
_08037bdc:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0803780c
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_08037918
	ldr		r4, [r4, #0x0]
	cmp		r4, #0x0
	bne		_08037bdc
_08037bf2:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08037bf8:	.4byte 0x03005FC0
	thumb_func_end sub_08037ba8

	thumb_func_start sub_08037bfc
sub_08037bfc:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	add		r4, r2, #0x0
	ldr		r5, [sp, #0x0+0xc]
	cmp		r1, #0x0
	beq		_08037c20
	mov		r2, #0x14
	ldrsh	r0, [r1, r2]
	add		r1, r3, #0x0
	add		r1, #0x56
	ldrh	r1, [r1, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x9
	add		r3, r0, #0x0
	add		r3, #0x20
	mov		r0, #0x7f
	and		r3, r0
	b		_08037c22
_08037c20:
	mov		r3, #0x0
_08037c22:
	cmp		r5, #0x0
	beq		_08037c54
	mov		r0, #0xbf
	sub		r3, r0, r3
	mov		r0, #0x7f
	and		r3, r0
	ldr		r2, _08037c5c
	ldr		r0, [r2, #0x0]
	add		r0, #0x1
	mov		r1, #0x3
	and		r0, r1
	str		r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_08037c54
	ldr		r0, _08037c60
	ldr		r2, [r0, #0x0]
	add		r2, #0x1
	mov		r1, #0x1
	and		r2, r1
	str		r2, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r3, #0x0
	add		r3, r5, #0x0
	bl		sub_08037a58
_08037c54:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x37C5A, 0x2

_08037c5c:	.4byte 0x03002314
_08037c60:	.4byte 0x03002310
	thumb_func_end sub_08037bfc

	thumb_func_start sub_08037c64
sub_08037c64:
	ldr		r2, _08037c80
	ldr		r1, _08037c84
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	ldr		r1, _08037c88
	mov		r2, #0x0
	add		r0, r1, #0x0
	add		r0, #0x50
_08037c76:
	strb	r2, [r0, #0x8]
	sub		r0, #0x10
	cmp		r0, r1
	bge		_08037c76
	bx		lr

_08037c80:	.4byte 0x03005FC0
_08037c84:	.4byte 0x03005FC4
_08037c88:	.4byte 0x03005F60
	thumb_func_end sub_08037c64

	thumb_func_start sub_08037c8c
sub_08037c8c:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _08037cb8
	ldr		r4, [r0, #0x0]
	cmp		r4, #0x0
	beq		_08037cb0
_08037c9a:
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_0803780c
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08037918
	ldr		r4, [r4, #0x0]
	cmp		r4, #0x0
	bne		_08037c9a
_08037cb0:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x37CB6, 0x2

_08037cb8:	.4byte 0x03005FC0
	thumb_func_end sub_08037c8c

	thumb_func_start sub_08037cbc
sub_08037cbc:
	push	{ r4, r5, r6, lr }
	ldr		r1, _08037cf0
	add		r3, r1, #0x0
	add		r3, #0x24
	ldr		r4, [r0, #0x54]
	ldr		r0, _08037cf4
	add		r1, r1, r0
	ldr		r2, [r1, #0x0]
	ldr		r0, [r2, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08037d66
	cmp		r2, r4
	beq		_08037cf8
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_08037cec
	mov		r2, #0x40
_08037cec:
	mov		r0, #0x1
	b		_08037cfe

_08037cf0:	.4byte RunGameLogic_CallBack
_08037cf4:	.4byte 0x00000838

_08037cf8:
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r0, #0x0
_08037cfe:
	ldr		r6, _08037d24
	lsl		r5, r0, #0x2
	add		r0, r4, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r3, r0, #0x3
	add		r0, r4, #0x0
	add		r0, #0x58
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_08037d28
	add		r0, r3, #0x2
	add		r0, r5, r0
	b		_08037d2a

.incbin "base.gba", 0x37D22, 0x2

_08037d24:	.4byte 0x081077d4

_08037d28:
	add		r0, r5, r3
_08037d2a:
	add		r0, r6, r0
	ldrh	r4, [r0, #0x0]
	add		r6, r2, #0x0
	cmp		r6, #0x0
	beq		_08037d66
	add		r0, r4, #0x0
	bl		sub_0807073c
	ldr		r5, _08037d6c
	ldr		r0, _08037d70
	lsl		r4, r4, #0x3
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_08037d66:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08037d6c:	.4byte 0x08124544
_08037d70:	.4byte 0x081245c8
	thumb_func_end sub_08037cbc

	thumb_func_start sub_08037d74
sub_08037d74:
	push	{ r4, r5, r6, lr }
	ldr		r1, _08037da8
	add		r3, r1, #0x0
	add		r3, #0x24
	ldr		r4, [r0, #0x54]
	ldr		r0, _08037dac
	add		r1, r1, r0
	ldr		r2, [r1, #0x0]
	ldr		r0, [r2, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08037e1e
	cmp		r2, r4
	beq		_08037db0
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_08037da4
	mov		r2, #0x40
_08037da4:
	mov		r0, #0x1
	b		_08037db6

_08037da8:	.4byte RunGameLogic_CallBack
_08037dac:	.4byte 0x00000838

_08037db0:
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r0, #0x0
_08037db6:
	ldr		r6, _08037ddc
	lsl		r5, r0, #0x2
	add		r0, r4, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r3, r0, #0x3
	add		r0, r4, #0x0
	add		r0, #0x58
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_08037de0
	add		r0, r3, #0x2
	add		r0, r5, r0
	b		_08037de2

.incbin "base.gba", 0x37DDA, 0x2

_08037ddc:	.4byte 0x081077d4

_08037de0:
	add		r0, r5, r3
_08037de2:
	add		r0, r6, r0
	ldrh	r4, [r0, #0x0]
	add		r6, r2, #0x0
	cmp		r6, #0x0
	beq		_08037e1e
	add		r0, r4, #0x0
	bl		sub_0807073c
	ldr		r5, _08037e24
	ldr		r0, _08037e28
	lsl		r4, r4, #0x3
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_08037e1e:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08037e24:	.4byte 0x08124544
_08037e28:	.4byte 0x081245c8
	thumb_func_end sub_08037d74

	thumb_func_start sub_08037e2c
sub_08037e2c:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08037e54
	add		r0, r3, #0x0
	add		r0, #0x58
	ldrh	r2, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r2
	cmp		r0, #0x0
	bne		_08037e4c
	mov		r0, #0x1
	b		_08037e8e
_08037e4c:
	mov		r0, #0x20
	and		r0, r2
	cmp		r0, #0x0
	beq		_08037e5a
_08037e54:
	mov		r0, #0x80
	lsl		r0, r0, #0xa
	b		_08037e8e
_08037e5a:
	ldr		r4, _08037e94
	mov		r1, #0x7
	and		r1, r2
	mov		r0, #0x10
	and		r0, r2
	lsl		r1, r1, #0x3
	cmp		r0, #0x0
	bne		_08037e6c
	add		r1, #0x4
_08037e6c:
	add		r0, r1, r4
	ldr		r2, [r0, #0x0]
	ldr		r0, [r3, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08037e8c
	mov		r1, #0xbc
	lsl		r1, r1, #0x1
	add		r0, r3, r1
	ldrh	r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r2, r2, r0
_08037e8c:
	add		r0, r2, #0x0
_08037e8e:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08037e94:	.4byte 0x081074c0
	thumb_func_end sub_08037e2c

	thumb_func_start sub_08037e98
sub_08037e98:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _08037eb8
	ldr		r0, [r0, #0x10]
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08037ebc
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r3, #0xc0
	lsl		r3, r3, #0x2
	b		_08037ec6

.incbin "base.gba", 0x37EB6, 0x2

_08037eb8:	.4byte RunGameLogic_CallBack

_08037ebc:
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x2
_08037ec6:
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08037ee2
	add		r1, r4, #0x0
	add		r1, #0xb6
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	b		_08037f06
_08037ee2:
	add		r0, r4, #0x0
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x1
	add		r1, r5, #0x0
	bl		sub_0803c9bc
	cmp		r0, #0x0
	beq		_08037efe
	add		r1, r4, #0x0
	add		r1, #0xb6
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	b		_08037f06
_08037efe:
	add		r1, r4, #0x0
	add		r1, #0xb6
	mov		r0, #0x80
	lsl		r0, r0, #0x6
_08037f06:
	strh	r0, [r1, #0x0]
	add		r2, r4, #0x0
	add		r2, #0x74
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x3
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_08036eec
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0803ce54
	ldr		r1, _08037fa0
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08037f9a
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08037f9a
	mov		r6, #0x0
	mov		r5, #0x0
	ldr		r2, _08037fa4
	ldr		r3, _08037fa8
	mov		r0, #0xa2
	lsl		r0, r0, #0x3
	add		r4, r3, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_08037f62
	ldr		r1, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	cmp		r1, r0
	bne		_08037f62
	mov		r5, #0x1
_08037f62:
	cmp		r5, #0x0
	beq		_08037f90
	mov		r4, #0x0
	mov		r1, #0xa2
	lsl		r1, r1, #0x3
	add		r3, r3, r1
	ldrh	r0, [r3, #0x4]
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	ldr		r0, [r1, #0x4]
	cmp		r0, #0x0
	bge		_08037f8a
	ldr		r1, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	bne		_08037f8a
	mov		r4, #0x1
_08037f8a:
	cmp		r4, #0x0
	bne		_08037f90
	mov		r6, #0x1
_08037f90:
	cmp		r6, #0x0
	bne		_08037f9a
	mov		r0, #0xa2
	bl		sub_0807073c
_08037f9a:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08037fa0:	.4byte 0x00000814
_08037fa4:	.4byte 0x08124544
_08037fa8:	.4byte 0x081245c8
	thumb_func_end sub_08037e98

	thumb_func_start sub_08037fac
sub_08037fac:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r3, #0x0
	ldr		r0, [r5, #0x0]
	sub		r0, r0, r1
	cmp		r0, #0x0
	bge		_08037fbe
	ldr		r1, _08037fdc
	add		r0, r0, r1
_08037fbe:
	asr		r1, r0, #0x10
	ldr		r0, [r5, #0x4]
	sub		r0, r0, r2
	cmp		r0, #0x0
	bge		_08037fcc
	ldr		r2, _08037fdc
	add		r0, r0, r2
_08037fcc:
	asr		r2, r0, #0x10
	cmp		r1, #0x0
	bne		_08037fe0
	cmp		r2, #0x0
	bne		_08037fe0
	ldr		r2, [sp, #0x0+0x10]
	b		_08037ff0

.incbin "base.gba", 0x37FDA, 0x2

_08037fdc:	.4byte 0x0000FFFF

_08037fe0:
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r2, #0x10
	asr		r1, r1, #0x10
	bl		sub_08028738
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_08037ff0:
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	cmp		r4, r1
	bgt		_08037ffa
	add		r4, r1, #0x0
_08037ffa:
	ldr		r0, _0803801c
	cmp		r4, r0
	ble		_08038004
	mov		r4, #0x80
	lsl		r4, r4, #0x3
_08038004:
	cmp		r4, r1
	beq		_08038028
	ldr		r0, _08038020
	ldr		r0, [r0, #0x10]
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08038024
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	add		r2, r2, r0
	b		_08038028

_0803801c:	.4byte 0x000003FF
_08038020:	.4byte RunGameLogic_CallBack

_08038024:
	ldr		r1, _08038084
	add		r2, r2, r1
_08038028:
	ldr		r6, _08038088
	lsl		r0, r2, #0x10
	asr		r2, r0, #0x10
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_08038036
	add		r1, #0x3f
_08038036:
	asr		r3, r1, #0x6
	ldr		r1, _0803808c
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r6
	ldr		r0, [r1, #0x0]
	mul		r0, r4
	cmp		r0, #0x0
	bge		_08038050
	ldr		r1, _08038090
	add		r0, r0, r1
_08038050:
	asr		r0, r0, #0xf
	add		r1, r5, #0x0
	add		r1, #0x4e
	strh	r0, [r1, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _0803808c
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	add		r1, r4, #0x0
	mul		r1, r0
	cmp		r1, #0x0
	bge		_08038076
	ldr		r2, _08038090
	add		r1, r1, r2
_08038076:
	asr		r1, r1, #0xf
	add		r0, r5, #0x0
	add		r0, #0x50
	strh	r1, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08038084:	.4byte 0xFFFFC000
_08038088:	.4byte 0x08101068
_0803808c:	.4byte 0x000003FF
_08038090:	.4byte 0x00007FFF
	thumb_func_end sub_08037fac

	thumb_func_start sub_08038094
sub_08038094:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r3, #0x0
	ldr		r0, [sp, #0x0+0x14]
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	ldr		r0, [r6, #0x0]
	sub		r0, r0, r4
	cmp		r0, #0x0
	bge		_080380ae
	ldr		r1, _080380dc
	add		r0, r0, r1
_080380ae:
	asr		r4, r0, #0x10
	ldr		r0, [r6, #0x4]
	sub		r1, r0, r2
	cmp		r1, #0x0
	bge		_080380bc
	ldr		r2, _080380dc
	add		r1, r1, r2
_080380bc:
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	asr		r1, r1, #0x10
	bl		sub_08028738
	lsl		r0, r0, #0x10
	lsl		r1, r7, #0x10
	asr		r1, r1, #0x10
	asr		r0, r0, #0x10
	sub		r0, r1, r0
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	blt		_080380e4
	ldr		r2, _080380e0
	b		_080380e8

.incbin "base.gba", 0x380DA, 0x2

_080380dc:	.4byte 0x0000FFFF
_080380e0:	.4byte 0xFFFFC000

_080380e4:
	mov		r2, #0x80
	lsl		r2, r2, #0x7
_080380e8:
	add		r0, r1, r2
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r2, #0xc0
	lsl		r2, r2, #0x1
	cmp		r5, r2
	bgt		_080380f8
	add		r5, r2, #0x0
_080380f8:
	ldr		r4, _0803815c
	cmp		r5, r4
	ble		_08038102
	mov		r5, #0x80
	lsl		r5, r5, #0x3
_08038102:
	lsl		r0, r0, #0x10
	asr		r7, r0, #0x10
	ldr		r0, _08038160
	mov		r12, r0
	add		r2, r7, #0x0
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08038114
	add		r0, #0x3f
_08038114:
	asr		r3, r0, #0x6
	add		r0, r3, #0x0
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	mul		r0, r5
	cmp		r0, #0x0
	bge		_0803812a
	ldr		r1, _08038164
	add		r0, r0, r1
_0803812a:
	asr		r0, r0, #0xf
	add		r1, r6, #0x0
	add		r1, #0x4e
	strh	r0, [r1, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	mul		r0, r5
	cmp		r0, #0x0
	bge		_0803814c
	ldr		r2, _08038164
	add		r0, r0, r2
_0803814c:
	asr		r1, r0, #0xf
	add		r0, r6, #0x0
	add		r0, #0x50
	strh	r1, [r0, #0x0]
	add		r0, r7, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0803815c:	.4byte 0x000003FF
_08038160:	.4byte 0x08101068
_08038164:	.4byte 0x00007FFF
	thumb_func_end sub_08038094

	thumb_func_start sub_08038168
sub_08038168:
	add		r3, r0, #0x0
	add		r0, #0x4e
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	neg		r1, r2
	cmp		r1, #0x0
	blt		_08038190
	cmp		r1, #0x80
	bgt		_0803817e
	mov		r1, #0x80
	b		_080381a2
_0803817e:
	ldr		r0, _0803818c
	cmp		r1, r0
	ble		_080381a2
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	b		_080381a2

.incbin "base.gba", 0x3818A, 0x2

_0803818c:	.4byte 0x000003FF

_08038190:
	cmp		r2, #0x80
	bgt		_0803819a
	mov		r1, #0x80
	neg		r1, r1
	b		_080381a2
_0803819a:
	ldr		r0, _080381c0
	cmp		r2, r0
	ble		_080381a2
	ldr		r1, _080381c4
_080381a2:
	add		r0, r3, #0x0
	add		r0, #0x4e
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	neg		r1, r2
	add		r3, r0, #0x0
	cmp		r1, #0x0
	blt		_080381d8
	cmp		r1, #0x80
	bgt		_080381c8
	mov		r1, #0x80
	b		_080381ea

.incbin "base.gba", 0x381BE, 0x2

_080381c0:	.4byte 0x000003FF
_080381c4:	.4byte 0xFFFFFC00

_080381c8:
	ldr		r0, _080381d4
	cmp		r1, r0
	ble		_080381ea
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	b		_080381ea

_080381d4:	.4byte 0x000003FF

_080381d8:
	cmp		r2, #0x80
	bgt		_080381e2
	mov		r1, #0x80
	neg		r1, r1
	b		_080381ea
_080381e2:
	ldr		r0, _080381f0
	cmp		r2, r0
	ble		_080381ea
	ldr		r1, _080381f4
_080381ea:
	strh	r1, [r3, #0x0]
	bx		lr

.incbin "base.gba", 0x381EE, 0x2

_080381f0:	.4byte 0x000003FF
_080381f4:	.4byte 0xFFFFFC00
	thumb_func_end sub_08038168

	thumb_func_start sub_080381f8
sub_080381f8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x10
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	ldr		r1, _08038318
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803825c
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	cmp		r5, #0x0
	beq		_0803825c
	mov		r0, #0xc3
	lsl		r0, r0, #0x1
	bl		sub_0807073c
	ldr		r0, _0803831c
	mov		r8, r0
	ldr		r4, _08038320
	mov		r1, #0xc3
	lsl		r1, r1, #0x4
	add		r4, r4, r1
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r5, #0x0
	bl		sub_0807169c
_0803825c:
	ldr		r1, _08038318
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r6, r0
	bne		_0803826c
	add		r0, r6, #0x0
	bl		sub_08055998
_0803826c:
	ldrh	r1, [r6, #0x34]
	ldr		r0, _08038324
	and		r0, r1
	mov		r5, #0x0
	mov		r4, #0x0
	ldr		r1, _08038328
	and		r0, r1
	strh	r0, [r6, #0x34]
	add		r0, r6, #0x0
	add		r0, #0xbc
	str		r4, [r0, #0x0]
	add		r0, #0x4
	str		r4, [r0, #0x0]
	sub		r0, #0x38
	strh	r4, [r0, #0x0]
	sub		r0, #0xa
	strb	r5, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	ldr		r0, _0803832c
	add		r0, #0x24
	add		r1, r6, #0x0
	add		r1, #0xec
	ldrb	r1, [r1, #0x0]
	add		r3, sp, #0x8
	add		r2, sp, #0xc
	str		r2, [sp, #0x0]
	add		r2, sp, #0x4
	bl		sub_0802c5a0
	ldr		r0, [sp, #0xC]
	add		r1, r6, #0x0
	add		r1, #0xa2
	strh	r0, [r1, #0x0]
	ldr		r0, [sp, #0x4]
	cmp		r0, #0x0
	bge		_080382be
	ldr		r1, _08038330
	add		r0, r0, r1
_080382be:
	asr		r0, r0, #0x10
	add		r1, r6, #0x0
	add		r1, #0x9e
	strh	r0, [r1, #0x0]
	ldr		r1, [sp, #0x8]
	cmp		r1, #0x0
	bge		_080382d0
	ldr		r0, _08038330
	add		r1, r1, r0
_080382d0:
	asr		r1, r1, #0x10
	add		r0, r6, #0x0
	add		r0, #0xa0
	strh	r1, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x9c
	mov		r0, #0x3c
	strh	r0, [r1, #0x0]
	add		r0, #0xc4
	str		r0, [r6, #0x8]
	sub		r1, #0x18
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	sub		r1, #0xc
	mov		r0, #0x9
	strb	r0, [r1, #0x0]
	ldr		r0, [r6, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	orr		r0, r1
	str		r0, [r6, #0x48]
	add		r0, r6, #0x0
	add		r0, #0x68
	strh	r4, [r0, #0x0]
	add		r2, r6, #0x0
	add		r2, #0x58
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x10
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		sp, #0x10
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08038318:	.4byte 0x00000814
_0803831c:	.4byte 0x08124544
_08038320:	.4byte 0x081245c8
_08038324:	.4byte 0x0000FFFE
_08038328:	.4byte 0x0000FFFD
_0803832c:	.4byte RunGameLogic_CallBack
_08038330:	.4byte 0x0000FFFF
	thumb_func_end sub_080381f8

	thumb_func_start sub_08038334
sub_08038334:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x40
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	ldr		r2, _08038368
	mov		r0, #0x24
	add		r0, r0, r2
	mov		r9, r0
	mov		r3, #0x0
	ldr		r1, _0803836c
	add		r0, r2, r1
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	bge		_08038370
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_080383b8
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	and		r1, r0
	b		_080383b4

_08038368:	.4byte RunGameLogic_CallBack
_0803836c:	.4byte 0x00000CAC

_08038370:
	ldr		r1, _08038390
	add		r0, r2, r1
	ldrh	r2, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_08038394
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_080383a8
	b		_080383ba

.incbin "base.gba", 0x3838E, 0x2

_08038390:	.4byte 0x000007FE

_08038394:
	mov		r0, #0x10
	and		r0, r2
	cmp		r0, #0x0
	beq		_080383b8
	mov		r1, #0x0
	ldr		r0, _080383a4
	ldrh	r0, [r0, #0x12]
	b		_080383ae

_080383a4:	.4byte 0x03002FE0

_080383a8:
	mov		r1, #0x0
	ldr		r0, _08038444
	ldrh	r0, [r0, #0xc]
_080383ae:
	cmp		r0, #0x0
	bne		_080383b4
	mov		r1, #0x1
_080383b4:
	cmp		r1, #0x0
	beq		_080383ba
_080383b8:
	mov		r3, #0x1
_080383ba:
	mov		r8, r3
	add		r2, r6, #0x0
	add		r2, #0x4c
	ldrb	r1, [r2, #0x0]
	mov		r5, #0x8
	add		r0, r5, #0x0
	and		r0, r1
	str		r2, [sp, #0x20]
	cmp		r0, #0x0
	beq		_08038450
	add		r0, r6, #0x0
	mov		r1, r9
	bl		sub_080381f8
	add		r0, r7, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_080383ec
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_080381f8
_080383ec:
	add		r0, r7, #0x0
	add		r0, #0x58
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	cmp		r4, #0x0
	beq		_08038404
	bl		sub_08038e34
_08038404:
	ldr		r0, _08038448
	add		r0, r9
	ldr		r0, [r0, #0x0]
	cmp		r7, r0
	bne		_08038414
	add		r0, r7, #0x0
	bl		sub_08055998
_08038414:
	add		r1, r7, #0x0
	add		r1, #0x5a
	ldr		r0, _0803844c
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r7, #0x48]
	strh	r5, [r7, #0x38]
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_08037e98
	ldr		r1, [r6, #0x0]
	ldr		r2, [r6, #0x4]
	str		r4, [sp, #0x0]
	add		r0, r7, #0x0
	mov		r3, #0x80
	lsl		r3, r3, #0x2
	bl		sub_08037fac
	b		_080389c6

.incbin "base.gba", 0x38442, 0x2

_08038444:	.4byte 0x03002FE0
_08038448:	.4byte 0x00000814
_0803844c:	.4byte 0x00008007

_08038450:
	add		r0, r7, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_080384c4
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_080381f8
	add		r0, r6, #0x0
	add		r0, #0x58
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	cmp		r4, #0x0
	beq		_0803847e
	bl		sub_08038e34
_0803847e:
	ldr		r0, _080384bc
	add		r0, r9
	ldr		r0, [r0, #0x0]
	cmp		r6, r0
	bne		_0803848e
	add		r0, r6, #0x0
	bl		sub_08055998
_0803848e:
	add		r1, r6, #0x0
	add		r1, #0x5a
	ldr		r0, _080384c0
	strh	r0, [r1, #0x0]
	ldr		r0, [r6, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r6, #0x48]
	strh	r5, [r6, #0x38]
	add		r0, r6, #0x0
	mov		r1, r9
	bl		sub_08037e98
	ldr		r1, [r7, #0x0]
	ldr		r2, [r7, #0x4]
	str		r4, [sp, #0x0]
	add		r0, r6, #0x0
	mov		r3, #0x80
	lsl		r3, r3, #0x2
	bl		sub_08037fac
	b		_08038a1c

_080384bc:	.4byte 0x00000814
_080384c0:	.4byte 0x00008007

_080384c4:
	add		r2, r6, #0x0
	add		r2, #0x58
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x8
	add		r0, r3, #0x0
	and		r0, r1
	mov		r10, r2
	cmp		r0, #0x0
	beq		_08038500
	add		r2, r7, #0x0
	add		r2, #0x58
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08038528
	add		r1, r7, #0x0
	add		r1, #0x5a
	ldr		r0, _080384fc
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r7, #0x48]
	strh	r5, [r7, #0x38]
	b		_080389a6

_080384fc:	.4byte 0x00008007

_08038500:
	add		r2, r7, #0x0
	add		r2, #0x58
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08038528
	add		r1, r6, #0x0
	add		r1, #0x5a
	ldr		r0, _08038524
	strh	r0, [r1, #0x0]
	ldr		r0, [r6, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r6, #0x48]
	strh	r5, [r6, #0x38]
	b		_080389fc

_08038524:	.4byte 0x00008007

_08038528:
	mov		r0, r10
	ldrh	r3, [r0, #0x0]
	mov		r5, #0x80
	lsl		r5, r5, #0x8
	add		r0, r5, #0x0
	and		r0, r3
	cmp		r0, #0x0
	beq		_08038544
	ldrh	r1, [r2, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08038544
	b		_08038af0
_08038544:
	mov		r4, #0x40
	add		r0, r4, #0x0
	and		r0, r3
	cmp		r0, #0x0
	beq		_08038550
	b		_080386ec
_08038550:
	ldrh	r1, [r2, #0x0]
	add		r0, r4, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803855c
	b		_08038704
_0803855c:
	add		r1, r6, #0x0
	add		r1, #0x5a
	ldr		r0, _080385c4
	strh	r0, [r1, #0x0]
	ldr		r0, [r6, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r6, #0x48]
	mov		r0, #0x8
	strh	r0, [r6, #0x38]
	add		r0, r6, #0x0
	mov		r1, r9
	bl		sub_08037e98
	ldr		r1, [r7, #0x0]
	ldr		r2, [r7, #0x4]
	add		r0, r7, #0x0
	add		r0, #0x7a
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	str		r0, [sp, #0x0]
	add		r0, r6, #0x0
	mov		r3, #0x80
	lsl		r3, r3, #0x2
	bl		sub_08038094
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	str		r0, [sp, #0x14]
	ldr		r0, _080385c8
	add		r0, r9
	ldr		r2, [r0, #0x0]
	ldr		r0, [r2, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08038636
	cmp		r2, r6
	beq		_080385cc
	mov		r0, r9
	add		r1, r6, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_080385be
	mov		r2, #0x40
_080385be:
	mov		r0, #0x1
	b		_080385d2

.incbin "base.gba", 0x385C2, 0x2

_080385c4:	.4byte 0x00008007
_080385c8:	.4byte 0x00000814

_080385cc:
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r0, #0x0
_080385d2:
	ldr		r5, _080385f4
	lsl		r4, r0, #0x2
	ldr		r0, [sp, #0x20]
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r3, r0, #0x3
	mov		r0, r10
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_080385f8
	add		r0, r3, #0x2
	add		r0, r4, r0
	b		_080385fa

.incbin "base.gba", 0x385F2, 0x2

_080385f4:	.4byte 0x081077d4

_080385f8:
	add		r0, r4, r3
_080385fa:
	add		r0, r5, r0
	ldrh	r4, [r0, #0x0]
	mov		r8, r2
	cmp		r2, #0x0
	beq		_08038636
	add		r0, r4, #0x0
	bl		sub_0807073c
	ldr		r5, _080386d0
	ldr		r0, _080386d4
	lsl		r4, r4, #0x3
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	mov		r2, r8
	bl		sub_0807169c
_08038636:
	add		r1, r7, #0x0
	add		r1, #0x5a
	ldr		r0, _080386d8
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r7, #0x48]
	mov		r0, #0x8
	strh	r0, [r7, #0x38]
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_08037e98
	ldr		r1, [sp, #0x14]
	lsl		r0, r1, #0x10
	ldr		r4, _080386dc
	mov		r2, #0x80
	lsl		r2, r2, #0x18
	add		r0, r0, r2
	asr		r2, r0, #0x10
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0803866a
	add		r1, #0x3f
_0803866a:
	asr		r3, r1, #0x6
	ldr		r1, _080386e0
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r4
	ldr		r0, [r1, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08038688
	ldr		r1, _080386e4
	add		r0, r0, r1
_08038688:
	asr		r0, r0, #0xf
	add		r1, r7, #0x0
	add		r1, #0x4e
	strh	r0, [r1, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _080386e0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	add		r1, r2, #0x0
	mul		r1, r0
	cmp		r1, #0x0
	bge		_080386b2
	ldr		r3, _080386e4
	add		r1, r1, r3
_080386b2:
	asr		r1, r1, #0xf
	add		r0, r7, #0x0
	add		r0, #0x50
	strh	r1, [r0, #0x0]
	ldr		r4, _080386e8
	mov		r0, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_08029d24
	str		r6, [r0, #0x54]
	mov		r0, #0x0
	add		r1, r4, #0x0
	b		_080389ca

.incbin "base.gba", 0x386CE, 0x2

_080386d0:	.4byte 0x08124544
_080386d4:	.4byte 0x081245c8
_080386d8:	.4byte 0x00008007
_080386dc:	.4byte 0x08101068
_080386e0:	.4byte 0x000003FF
_080386e4:	.4byte 0x00007FFF
_080386e8:	.4byte 0x08107540

_080386ec:
	mov		r1, #0xbc
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080386fa
	b		_080388c0
_080386fa:
	ldr		r0, [r6, #0x48]
	and		r0, r5
	cmp		r0, #0x0
	bne		_08038704
	b		_080388c0
_08038704:
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803872a
	mov		r3, #0xbc
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0803871c
	b		_080388c0
_0803871c:
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803872a
	b		_080388c0
_0803872a:
	mov		r0, r8
	cmp		r0, #0x0
	bne		_08038732
	b		_080388c0
_08038732:
	add		r1, r6, #0x0
	add		r1, #0x5a
	ldr		r0, _08038798
	strh	r0, [r1, #0x0]
	ldr		r0, [r6, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r6, #0x48]
	mov		r0, #0x8
	strh	r0, [r6, #0x38]
	add		r0, r6, #0x0
	mov		r1, r9
	bl		sub_08037e98
	ldr		r1, [r7, #0x0]
	ldr		r2, [r7, #0x4]
	add		r0, r7, #0x0
	add		r0, #0x7a
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	str		r0, [sp, #0x0]
	add		r0, r6, #0x0
	mov		r3, #0x80
	lsl		r3, r3, #0x2
	bl		sub_08038094
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	str		r0, [sp, #0x18]
	ldr		r0, _0803879c
	add		r0, r9
	ldr		r2, [r0, #0x0]
	ldr		r0, [r2, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803880a
	cmp		r2, r6
	beq		_080387a0
	mov		r0, r9
	add		r1, r6, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_08038794
	mov		r2, #0x40
_08038794:
	mov		r0, #0x1
	b		_080387a6

_08038798:	.4byte 0x00008007
_0803879c:	.4byte 0x00000814

_080387a0:
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r0, #0x0
_080387a6:
	ldr		r5, _080387c8
	lsl		r4, r0, #0x2
	ldr		r0, [sp, #0x20]
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r3, r0, #0x3
	mov		r0, r10
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_080387cc
	add		r0, r3, #0x2
	add		r0, r4, r0
	b		_080387ce

.incbin "base.gba", 0x387C6, 0x2

_080387c8:	.4byte 0x081077d4

_080387cc:
	add		r0, r4, r3
_080387ce:
	add		r0, r5, r0
	ldrh	r4, [r0, #0x0]
	mov		r8, r2
	cmp		r2, #0x0
	beq		_0803880a
	add		r0, r4, #0x0
	bl		sub_0807073c
	ldr		r5, _080388a4
	ldr		r0, _080388a8
	lsl		r4, r4, #0x3
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	mov		r2, r8
	bl		sub_0807169c
_0803880a:
	add		r1, r7, #0x0
	add		r1, #0x5a
	ldr		r0, _080388ac
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r7, #0x48]
	mov		r0, #0x8
	strh	r0, [r7, #0x38]
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_08037e98
	ldr		r1, [sp, #0x18]
	lsl		r0, r1, #0x10
	ldr		r4, _080388b0
	mov		r2, #0x80
	lsl		r2, r2, #0x18
	add		r0, r0, r2
	asr		r2, r0, #0x10
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0803883e
	add		r1, #0x3f
_0803883e:
	asr		r3, r1, #0x6
	ldr		r1, _080388b4
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r4
	ldr		r0, [r1, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0803885c
	ldr		r1, _080388b8
	add		r0, r0, r1
_0803885c:
	asr		r0, r0, #0xf
	add		r1, r7, #0x0
	add		r1, #0x4e
	strh	r0, [r1, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _080388b4
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	add		r1, r2, #0x0
	mul		r1, r0
	cmp		r1, #0x0
	bge		_08038886
	ldr		r3, _080388b8
	add		r1, r1, r3
_08038886:
	asr		r1, r1, #0xf
	add		r0, r7, #0x0
	add		r0, #0x50
	strh	r1, [r0, #0x0]
	ldr		r4, _080388bc
	mov		r0, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_08029d24
	str		r6, [r0, #0x54]
	mov		r0, #0x0
	add		r1, r4, #0x0
	b		_080389ca

.incbin "base.gba", 0x388A2, 0x2

_080388a4:	.4byte 0x08124544
_080388a8:	.4byte 0x081245c8
_080388ac:	.4byte 0x00008007
_080388b0:	.4byte 0x08101068
_080388b4:	.4byte 0x000003FF
_080388b8:	.4byte 0x00007FFF
_080388bc:	.4byte 0x08107540

_080388c0:
	mov		r0, r10
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_080388ce
	b		_080389e6
_080388ce:
	mov		r1, #0xbc
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080388ee
	ldr		r0, [r6, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_080388ee
	mov		r3, r8
	cmp		r3, #0x0
	beq		_080388ee
	b		_080389e6
_080388ee:
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_08038928
	add		r1, r7, #0x0
	add		r1, #0x5a
	ldr		r0, _08038924
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r7, #0x48]
	mov		r0, #0x8
	strh	r0, [r7, #0x38]
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_08037e98
	ldr		r1, [r6, #0x0]
	ldr		r2, [r6, #0x4]
	add		r0, r6, #0x0
	add		r0, #0x7a
	mov		r6, #0x0
	ldrsh	r0, [r0, r6]
	b		_080389ba

_08038924:	.4byte 0x00008007

_08038928:
	mov		r1, #0xbc
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08038978
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08038978
	mov		r3, r8
	cmp		r3, #0x0
	beq		_08038978
	add		r1, r7, #0x0
	add		r1, #0x5a
	ldr		r0, _08038974
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r7, #0x48]
	mov		r0, #0x8
	strh	r0, [r7, #0x38]
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_08037e98
	ldr		r1, [r6, #0x0]
	ldr		r2, [r6, #0x4]
	add		r0, r6, #0x0
	add		r0, #0x7a
	mov		r6, #0x0
	ldrsh	r0, [r0, r6]
	b		_080389ba

.incbin "base.gba", 0x38972, 0x2

_08038974:	.4byte 0x00008007

_08038978:
	mov		r0, r10
	ldrh	r1, [r0, #0x0]
	mov		r3, #0x10
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_080389dc
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08038a34
	add		r1, r7, #0x0
	add		r1, #0x5a
	ldr		r0, _080389d4
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r7, #0x48]
	mov		r0, #0x8
	strh	r0, [r7, #0x38]
_080389a6:
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_08037e98
	ldr		r1, [r6, #0x0]
	ldr		r2, [r6, #0x4]
	add		r0, r6, #0x0
	add		r0, #0x7a
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
_080389ba:
	str		r0, [sp, #0x0]
	add		r0, r7, #0x0
	mov		r3, #0x80
	lsl		r3, r3, #0x2
	bl		sub_08038094
_080389c6:
	ldr		r1, _080389d8
	mov		r0, #0x0
_080389ca:
	mov		r2, #0x0
	bl		sub_08029d24
	str		r7, [r0, #0x54]
	b		sub_08038e34

_080389d4:	.4byte 0x00008007
_080389d8:	.4byte 0x08107540

_080389dc:
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08038a34
_080389e6:
	add		r1, r6, #0x0
	add		r1, #0x5a
	ldr		r0, _08038a2c
	strh	r0, [r1, #0x0]
	ldr		r0, [r6, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r6, #0x48]
	mov		r0, #0x8
	strh	r0, [r6, #0x38]
_080389fc:
	add		r0, r6, #0x0
	mov		r1, r9
	bl		sub_08037e98
	ldr		r1, [r7, #0x0]
	ldr		r2, [r7, #0x4]
	add		r0, r7, #0x0
	add		r0, #0x7a
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	str		r0, [sp, #0x0]
	add		r0, r6, #0x0
	mov		r3, #0x80
	lsl		r3, r3, #0x2
	bl		sub_08038094
_08038a1c:
	ldr		r1, _08038a30
	mov		r0, #0x0
	mov		r2, #0x0
	bl		sub_08029d24
	str		r6, [r0, #0x54]
	b		sub_08038e34

.incbin "base.gba", 0x38A2A, 0x2

_08038a2c:	.4byte 0x00008007
_08038a30:	.4byte 0x08107540

_08038a34:
	mov		r0, r10
	ldrh	r1, [r0, #0x0]
	mov		r3, #0x20
	add		r0, r3, #0x0
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r9, r0
	cmp		r0, #0x0
	beq		_08038a9c
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r8, r0
	cmp		r0, #0x0
	bne		_08038af0
	mov		r1, #0x5a
	add		r1, r1, r7
	mov		r9, r1
	ldr		r2, _08038a98
	mov		r10, r2
	mov		r3, r10
	strh	r3, [r1, #0x0]
	ldr		r0, [r7, #0x48]
	mov		r5, #0x80
	lsl		r5, r5, #0x5
	orr		r0, r5
	str		r0, [r7, #0x48]
	mov		r4, #0x8
	strh	r4, [r7, #0x38]
	ldr		r1, [r6, #0x0]
	ldr		r2, [r6, #0x4]
	mov		r3, #0x80
	lsl		r3, r3, #0x2
	mov		r6, r8
	str		r6, [sp, #0x0]
	add		r0, r7, #0x0
	bl		sub_08037fac
	mov		r1, r10
	mov		r0, r9
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x48]
	orr		r0, r5
	str		r0, [r7, #0x48]
	strh	r4, [r7, #0x38]
	add		r0, r7, #0x0
	b		_08038ae4

_08038a98:	.4byte 0x00008007

_08038a9c:
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08038af0
	mov		r2, #0x5a
	add		r2, r2, r6
	mov		r8, r2
	ldr		r3, _08038aec
	mov		r10, r3
	mov		r0, r10
	strh	r0, [r2, #0x0]
	ldr		r0, [r6, #0x48]
	mov		r5, #0x80
	lsl		r5, r5, #0x5
	orr		r0, r5
	str		r0, [r6, #0x48]
	mov		r4, #0x8
	strh	r4, [r6, #0x38]
	ldr		r1, [r7, #0x0]
	ldr		r2, [r7, #0x4]
	mov		r3, #0x80
	lsl		r3, r3, #0x2
	mov		r0, r9
	str		r0, [sp, #0x0]
	add		r0, r6, #0x0
	bl		sub_08037fac
	mov		r2, r10
	mov		r1, r8
	strh	r2, [r1, #0x0]
	ldr		r0, [r6, #0x48]
	orr		r0, r5
	str		r0, [r6, #0x48]
	strh	r4, [r6, #0x38]
	add		r0, r6, #0x0
_08038ae4:
	mov		r1, #0x3
	bl		sub_08036eec
	b		sub_08038e34

_08038aec:	.4byte 0x00008007

_08038af0:
	add		r0, r6, #0x0
	bl		sub_08037e2c
	str		r0, [sp, #0x10]
	add		r0, r7, #0x0
	bl		sub_08037e2c
	mov		r10, r0
	ldr		r3, [sp, #0x10]
	cmp		r3, r10
	bge		_08038b14
	add		r0, r6, #0x0
	add		r1, r3, #0x0
	add		r6, r7, #0x0
	add		r7, r0, #0x0
	mov		r0, r10
	str		r0, [sp, #0x10]
	mov		r10, r1
_08038b14:
	add		r0, r6, #0x0
	add		r0, #0x5a
	ldr		r3, _08038bb0
	strh	r3, [r0, #0x0]
	ldr		r0, [r6, #0x48]
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	orr		r0, r2
	str		r0, [r6, #0x48]
	mov		r1, #0x8
	strh	r1, [r6, #0x38]
	add		r0, r7, #0x0
	add		r0, #0x5a
	strh	r3, [r0, #0x0]
	ldr		r0, [r7, #0x48]
	orr		r0, r2
	str		r0, [r7, #0x48]
	strh	r1, [r7, #0x38]
	add		r0, r6, #0x0
	mov		r1, #0x3
	bl		sub_08036eec
	add		r0, r7, #0x0
	mov		r1, #0x3
	bl		sub_08036eec
	add		r0, r6, #0x0
	add		r0, #0xee
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	add		r1, r7, #0x0
	add		r1, #0xee
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	sub		r0, r0, r1
	add		r1, r6, #0x0
	add		r1, #0xf0
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r2, r7, #0x0
	add		r2, #0xf0
	mov		r3, #0x0
	ldrsh	r2, [r2, r3]
	sub		r1, r1, r2
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_08028738
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	add		r0, r6, #0x0
	add		r0, #0x7a
	ldrh	r4, [r0, #0x0]
	ldr		r0, _08038bb4
	add		r3, r4, r0
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x10
	cmp		r1, #0x0
	blt		_08038bbc
	mov		r5, #0x80
	lsl		r5, r5, #0x6
	cmp		r1, r5
	bgt		_08038ba2
	mov		r1, #0xc0
	lsl		r1, r1, #0x7
	add		r0, r4, r1
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_08038ba2:
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	ldr		r1, _08038bb8
	cmp		r0, r1
	ble		_08038be2
	add		r0, r4, r5
	b		_08038bde

_08038bb0:	.4byte 0x00008007
_08038bb4:	.4byte 0xFFFF8000
_08038bb8:	.4byte 0x5FFF0000

_08038bbc:
	ldr		r0, _08038d1c
	cmp		r1, r0
	blt		_08038bcc
	mov		r2, #0xa0
	lsl		r2, r2, #0x8
	add		r0, r4, r2
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_08038bcc:
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	ldr		r1, _08038d20
	cmp		r0, r1
	bgt		_08038be2
	mov		r3, #0xe0
	lsl		r3, r3, #0x8
	add		r0, r4, r3
_08038bde:
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_08038be2:
	lsl		r0, r2, #0x10
	asr		r4, r0, #0x10
	add		r1, r4, #0x0
	str		r0, [sp, #0x1C]
	cmp		r4, #0x0
	bge		_08038bf0
	add		r1, #0x3f
_08038bf0:
	asr		r5, r1, #0x6
	ldr		r0, _08038d24
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	and		r0, r1
	lsl		r0, r0, #0x2
	ldr		r1, _08038d28
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	sub		r0, r2, r5
	ldr		r3, _08038d24
	and		r0, r3
	lsl		r0, r0, #0x2
	ldr		r2, _08038d28
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	add		r3, r6, #0x0
	add		r3, #0x4e
	mov		r2, #0x0
	ldrsh	r0, [r3, r2]
	mov		r12, r0
	mov		r0, r12
	mul		r0, r1
	str		r0, [sp, #0x34]
	add		r1, r6, #0x0
	add		r1, #0x50
	mov		r0, #0x0
	ldrsh	r2, [r1, r0]
	mov		r9, r2
	mov		r2, r8
	mov		r0, r9
	mul		r0, r2
	ldr		r2, [sp, #0x34]
	sub		r0, r2, r0
	str		r3, [sp, #0x24]
	str		r1, [sp, #0x2C]
	cmp		r0, #0x0
	bge		_08038c46
	ldr		r3, _08038d2c
	add		r0, r0, r3
_08038c46:
	asr		r0, r0, #0xf
	str		r0, [sp, #0x4]
	add		r0, r5, #0x0
	ldr		r1, _08038d24
	and		r0, r1
	lsl		r0, r0, #0x2
	ldr		r2, _08038d28
	add		r0, r0, r2
	ldr		r5, [r0, #0x0]
	mov		r3, r8
	mov		r1, r12
	mul		r1, r3
	mov		r0, r9
	mul		r0, r5
	add		r0, r1, r0
	cmp		r0, #0x0
	bge		_08038c6c
	ldr		r1, _08038d2c
	add		r0, r0, r1
_08038c6c:
	asr		r0, r0, #0xf
	str		r0, [sp, #0x8]
	add		r2, r7, #0x0
	add		r2, #0x4e
	str		r2, [sp, #0x3C]
	mov		r0, #0x0
	ldrsh	r3, [r2, r0]
	mov		r9, r3
	mov		r1, r9
	mul		r1, r5
	str		r1, [sp, #0x34]
	add		r1, r7, #0x0
	add		r1, #0x50
	mov		r3, #0x0
	ldrsh	r2, [r1, r3]
	mov		r12, r2
	mov		r2, r8
	mov		r0, r12
	mul		r0, r2
	ldr		r3, [sp, #0x34]
	sub		r2, r3, r0
	ldr		r0, [sp, #0x3C]
	str		r0, [sp, #0x28]
	str		r1, [sp, #0x30]
	cmp		r2, #0x0
	bge		_08038ca4
	ldr		r1, _08038d2c
	add		r2, r2, r1
_08038ca4:
	asr		r2, r2, #0xf
	str		r2, [sp, #0xC]
	mov		r2, r8
	mov		r1, r9
	mul		r1, r2
	mov		r0, r12
	mul		r0, r5
	add		r0, r1, r0
	cmp		r0, #0x0
	bge		_08038cbc
	ldr		r3, _08038d2c
	add		r0, r0, r3
_08038cbc:
	asr		r0, r0, #0xf
	mov		r9, r0
	ldr		r1, [sp, #0x10]
	mov		r2, r10
	sub		r0, r1, r2
	ldr		r3, [sp, #0x4]
	mul		r0, r3
	ldr		r2, [sp, #0xC]
	lsl		r1, r2, #0x1
	mov		r3, r10
	mul		r3, r1
	add		r1, r3, #0x0
	add		r0, r0, r1
	ldr		r4, [sp, #0x10]
	add		r4, r10
	add		r1, r4, #0x0
	bl		sub_0807d80c
	add		r5, r0, #0x0
	ldr		r1, [sp, #0x4]
	lsl		r0, r1, #0x1
	ldr		r2, [sp, #0x10]
	mul		r0, r2
	mov		r3, r10
	sub		r1, r3, r2
	ldr		r2, [sp, #0xC]
	mul		r1, r2
	add		r0, r0, r1
	add		r1, r4, #0x0
	bl		sub_0807d80c
	add		r4, r0, #0x0
	add		r0, r6, #0x0
	add		r0, #0x58
	add		r1, r7, #0x0
	add		r1, #0x58
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r1, #0x0]
	cmp		r0, r1
	beq		_08038d34
	sub		r1, r5, r4
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	bgt		_08038d5a
	ldr		r3, _08038d30
	add		r4, r5, r3
	b		_08038d5a

_08038d1c:	.4byte 0xFFFFE000
_08038d20:	.4byte 0xFFFFA000
_08038d24:	.4byte 0x000003FF
_08038d28:	.4byte 0x08101068
_08038d2c:	.4byte 0x00007FFF
_08038d30:	.4byte 0xFFFFFE00

_08038d34:
	sub		r1, r5, r4
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	bgt		_08038d5a
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r0, r0, #0x1
	add		r0, r4, r0
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	add		r5, r0, r6
	sub		r0, r5, r4
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r0, r4, r0
	ldr		r1, _08038e44
	add		r4, r0, r1
_08038d5a:
	ldr		r7, _08038e48
	ldr		r2, [sp, #0x1C]
	asr		r3, r2, #0x10
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_08038d68
	add		r0, #0x3f
_08038d68:
	asr		r2, r0, #0x6
	ldr		r6, _08038e4c
	add		r1, r6, #0x0
	add		r0, r2, #0x0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r2
	ldr		r6, _08038e4c
	mov		r10, r6
	and		r0, r6
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r7, [r0, #0x0]
	mul		r1, r5
	ldr		r6, [sp, #0x8]
	add		r0, r6, #0x0
	mul		r0, r7
	add		r0, r1, r0
	cmp		r0, #0x0
	bge		_08038d9c
	ldr		r1, _08038e50
	add		r0, r0, r1
_08038d9c:
	asr		r0, r0, #0xf
	mov		r8, r0
	add		r0, r2, #0x0
	mov		r2, r10
	and		r0, r2
	lsl		r0, r0, #0x2
	ldr		r6, _08038e48
	add		r0, r0, r6
	ldr		r2, [r0, #0x0]
	ldr		r0, [sp, #0x8]
	add		r1, r0, #0x0
	mul		r1, r2
	add		r0, r5, #0x0
	mul		r0, r7
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_08038dc2
	ldr		r1, _08038e50
	add		r0, r0, r1
_08038dc2:
	asr		r6, r0, #0xf
	add		r1, r4, #0x0
	mul		r1, r2
	mov		r0, r9
	mul		r0, r7
	add		r1, r1, r0
	cmp		r1, #0x0
	bge		_08038dd6
	ldr		r0, _08038e50
	add		r1, r1, r0
_08038dd6:
	asr		r5, r1, #0xf
	mov		r1, r9
	mul		r1, r2
	add		r0, r4, #0x0
	mul		r0, r7
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_08038dea
	ldr		r1, _08038e50
	add		r0, r0, r1
_08038dea:
	asr		r0, r0, #0xf
	mov		r4, #0x80
	lsl		r4, r4, #0x3
	cmp		r8, r4
	ble		_08038df6
	mov		r8, r4
_08038df6:
	ldr		r3, _08038e54
	cmp		r8, r3
	bge		_08038dfe
	mov		r8, r3
_08038dfe:
	cmp		r6, r4
	ble		_08038e04
	add		r6, r4, #0x0
_08038e04:
	cmp		r6, r3
	bge		_08038e0a
	add		r6, r3, #0x0
_08038e0a:
	cmp		r5, r4
	ble		_08038e10
	add		r5, r4, #0x0
_08038e10:
	cmp		r5, r3
	bge		_08038e16
	add		r5, r3, #0x0
_08038e16:
	cmp		r0, r4
	ble		_08038e1c
	add		r0, r4, #0x0
_08038e1c:
	cmp		r0, r3
	bge		_08038e22
	add		r0, r3, #0x0
_08038e22:
	mov		r3, r8
	ldr		r2, [sp, #0x24]
	strh	r3, [r2, #0x0]
	ldr		r1, [sp, #0x2C]
	strh	r6, [r1, #0x0]
	ldr		r2, [sp, #0x28]
	strh	r5, [r2, #0x0]
	ldr		r3, [sp, #0x30]
	strh	r0, [r3, #0x0]
	thumb_func_end sub_08038334

	thumb_func_start sub_08038e34
sub_08038e34:
	add		sp, #0x40
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08038e44:	.4byte 0xFFFFFF00
_08038e48:	.4byte 0x08101068
_08038e4c:	.4byte 0x000003FF
_08038e50:	.4byte 0x00007FFF
_08038e54:	.4byte 0xFFFFFC00
	thumb_func_end sub_08038e34

	thumb_func_start sub_08038e58
sub_08038e58:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r9, r0
	mov		r10, r1
	ldrh	r0, [r0, #0x38]
	str		r0, [sp, #0x0]
	ldrh	r0, [r1, #0x38]
	ldr		r1, [sp, #0x0]
	orr		r1, r0
	str		r1, [sp, #0x0]
	cmp		r1, #0x1
	ble		_08038e7a
	b		_0803902a
_08038e7a:
	mov		r0, r9
	add		r0, #0x60
	mov		r1, r10
	add		r1, #0x60
	ldrh	r2, [r0, #0x0]
	ldrh	r0, [r1, #0x0]
	orr		r0, r2
	cmp		r0, #0x0
	beq		_08038e8e
	b		_0803902a
_08038e8e:
	mov		r0, r9
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bls		_08038e9a
	b		_0803902a
_08038e9a:
	mov		r0, r10
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bls		_08038ea6
	b		_0803902a
_08038ea6:
	mov		r2, r9
	ldr		r0, [r2, #0x8]
	ldr		r1, _0803903c
	cmp		r0, r1
	ble		_08038eb2
	b		_0803902a
_08038eb2:
	mov		r2, r10
	ldr		r0, [r2, #0x8]
	cmp		r0, r1
	ble		_08038ebc
	b		_0803902a
_08038ebc:
	mov		r0, r9
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_08038eca
	b		_0803902a
_08038eca:
	mov		r0, r10
	add		r0, #0x66
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	beq		_08038ed8
	b		_0803902a
_08038ed8:
	mov		r0, r9
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x8
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08038eea
	b		_08039020
_08038eea:
	mov		r0, r10
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08038efa
	b		_08039020
_08038efa:
	ldr		r2, _08039040
	mov		r1, r9
	add		r1, #0xbc
	mov		r0, r10
	add		r0, #0xbc
	ldr		r7, [r0, #0x0]
	ldr		r1, [r1, #0x0]
	cmp		r7, r1
	bge		_08038f0e
	add		r7, r1, #0x0
_08038f0e:
	ldr		r1, _08039044
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	cmp		r9, r0
	bne		_08038f96
	mov		r2, r9
	ldr		r0, [r2, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08038f96
	add		r0, r7, #0x0
	cmp		r7, #0x0
	bge		_08038f2c
	neg		r0, r7
_08038f2c:
	lsl		r0, r0, #0x6
	lsr		r0, r0, #0x16
	ldr		r1, _08039048
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	add		r4, r7, #0x0
	cmp		r7, #0x0
	bge		_08038f40
	neg		r4, r7
_08038f40:
	asr		r4, r4, #0x14
	mov		r0, #0x3f
	and		r4, r0
	add		r4, #0xc0
	lsl		r6, r6, #0x10
	asr		r6, r6, #0x10
	mov		r0, #0xa7
	bl		sub_0807073c
	ldr		r2, _0803904c
	mov		r8, r2
	ldr		r5, _08039050
	mov		r0, #0xa7
	lsl		r0, r0, #0x3
	add		r5, r5, r0
	ldrh		r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh		r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r4, #0x0
	bl		sub_0807169c
	ldrh		r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08071704
_08038f96:
	ldr		r1, _08039054
	ldr		r2, _08039058
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	cmp		r10, r0
	bne		_08039020
	mov		r1, r10
	ldr		r0, [r1, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08039020
	add		r0, r7, #0x0
	cmp		r7, #0x0
	bge		_08038fb6
	neg		r0, r7
_08038fb6:
	lsl		r0, r0, #0x6
	lsr		r0, r0, #0x16
	ldr		r2, _08039048
	add		r0, r0, r2
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	add		r0, r7, #0x0
	cmp		r0, #0x0
	bge		_08038fca
	neg		r0, r0
_08038fca:
	asr		r4, r0, #0x14
	mov		r0, #0x3f
	and		r4, r0
	add		r4, #0xc0
	lsl		r6, r6, #0x10
	asr		r6, r6, #0x10
	mov		r0, #0xa7
	bl		sub_0807073c
	ldr		r0, _0803904c
	mov		r8, r0
	ldr		r5, _08039050
	mov		r1, #0xa7
	lsl		r1, r1, #0x3
	add		r5, r5, r1
	ldrh		r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh		r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r4, #0x0
	bl		sub_0807169c
	ldrh		r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08071704
_08039020:
	mov		r0, r9
	mov		r1, r10
	ldr		r2, [sp, #0x0]
	bl		sub_08038334
_0803902a:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3903A, 0x2

_0803903c:	.4byte 0x0004FFFF
_08039040:	.4byte RunGameLogic_CallBack
_08039044:	.4byte 0x00000838
_08039048:	.4byte 0xFFFFFE00
_0803904c:	.4byte 0x08124544
_08039050:	.4byte 0x081245c8
_08039054:	.4byte 0x030031C4
_08039058:	.4byte 0x00000814
	thumb_func_end sub_08038e58

	thumb_func_start sub_0803905c
sub_0803905c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	ldr		r5, _0803911c
	add		r4, r5, #0x0
	add		r4, #0x24
	mov		r0, #0x3
	strh	r0, [r6, #0x38]
	ldr		r0, [r6, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	and		r0, r1
	cmp		r0, #0x0
	bne		_08039130
	add		r2, r6, #0x0
	add		r2, #0xb4
	ldrh	r0, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x5
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xbc
	ldr		r4, [r0, #0x0]
	ldr		r1, _08039120
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r6, r0
	beq		_0803909c
	b		_080391e2
_0803909c:
	ldr		r0, [r6, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_080390a8
	b		_080391e2
_080390a8:
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_080390b0
	neg		r0, r4
_080390b0:
	lsl		r0, r0, #0x6
	lsr		r0, r0, #0x16
	ldr		r3, _08039124
	add		r0, r0, r3
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	add		r0, r4, #0x0
	cmp		r0, #0x0
	bge		_080390c4
	neg		r0, r0
_080390c4:
	asr		r4, r0, #0x14
	mov		r0, #0x3f
	and		r4, r0
	add		r4, #0xc0
	lsl		r6, r6, #0x10
	asr		r6, r6, #0x10
	mov		r0, #0x87
	bl		sub_0807073c
	ldr		r0, _08039128
	mov		r8, r0
	ldr		r5, _0803912c
	mov		r1, #0x87
	lsl		r1, r1, #0x3
	add		r5, r5, r1
	ldrh		r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh		r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r4, #0x0
	bl		sub_0807169c
	ldrh		r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08071704
	b		_080391e2

_0803911c:	.4byte RunGameLogic_CallBack
_08039120:	.4byte 0x00000838
_08039124:	.4byte 0xFFFFFE00
_08039128:	.4byte 0x08124544
_0803912c:	.4byte 0x081245c8

_08039130:
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_08037e98
	ldr		r3, _08039164
	add		r0, r5, r3
	ldr		r2, [r0, #0x0]
	ldr		r0, [r2, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_080391d6
	cmp		r2, r6
	beq		_08039168
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_0803915e
	mov		r2, #0x40
_0803915e:
	mov		r0, #0x1
	b		_0803916e

.incbin "base.gba", 0x39162, 0x2

_08039164:	.4byte 0x00000838

_08039168:
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r0, #0x0
_0803916e:
	ldr		r5, _08039194
	lsl		r4, r0, #0x2
	add		r0, r6, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r3, r0, #0x3
	add		r0, r6, #0x0
	add		r0, #0x58
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_08039198
	add		r0, r3, #0x2
	add		r0, r4, r0
	b		_0803919a

.incbin "base.gba", 0x39192, 0x2

_08039194:	.4byte 0x081077d4

_08039198:
	add		r0, r4, r3
_0803919a:
	add		r0, r5, r0
	ldrh	r4, [r0, #0x0]
	add		r7, r2, #0x0
	cmp		r7, #0x0
	beq		_080391d6
	add		r0, r4, #0x0
	bl		sub_0807073c
	ldr		r5, _080391ec
	ldr		r0, _080391f0
	lsl		r4, r4, #0x3
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r7, #0x0
	bl		sub_0807169c
_080391d6:
	add		r0, r6, #0x0
	add		r0, #0x4e
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
_080391e2:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080391ec:	.4byte 0x08124544
_080391f0:	.4byte 0x081245c8
	thumb_func_end sub_0803905c

	thumb_func_start sub_080391f4
sub_080391f4:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	ldr		r0, _08039220
	add		r7, r0, #0x0
	add		r7, #0x24
	add		r4, r6, #0x0
	ldrh	r1, [r6, #0x10]
	ldr		r0, _08039224
	cmp		r1, r0
	bne		_08039248
	add		r2, r5, #0x0
	add		r2, #0x4e
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	cmp		r0, r1
	ble		_08039228
	add		r3, r0, #0x0
	b		_0803922a

_08039220:	.4byte RunGameLogic_CallBack
_08039224:	.4byte 0x00008403

_08039228:
	add		r3, r1, #0x0
_0803922a:
	add		r2, r5, #0x0
	add		r2, #0x50
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	cmp		r0, r1
	ble		_0803923c
	add		r1, r0, #0x0
_0803923c:
	lsl		r0, r3, #0x7
	str		r0, [r4, #0x28]
	lsl		r0, r1, #0x7
	str		r0, [r4, #0x2c]
	mov		r0, #0x8
	strh	r0, [r4, #0x38]
_08039248:
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	bl		sub_08037e98
	ldr		r1, [r4, #0x0]
	ldr		r2, [r4, #0x4]
	add		r0, r6, #0x0
	add		r0, #0x71
	ldrb	r3, [r0, #0x0]
	lsl		r3, r3, #0x3
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	add		r0, r5, #0x0
	bl		sub_08037fac
	ldr		r1, _080392c4
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_080392ba
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	cmp		r6, #0x0
	beq		_080392ba
	mov		r0, #0x84
	bl		sub_0807073c
	ldr		r5, _080392c8
	ldr		r4, _080392cc
	mov		r0, #0x84
	lsl		r0, r0, #0x3
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_080392ba:
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x392C2, 0x2

_080392c4:	.4byte 0x00000814
_080392c8:	.4byte 0x08124544
_080392cc:	.4byte 0x081245c8
	thumb_func_end sub_080391f4

	thumb_func_start sub_080392d0
sub_080392d0:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r6, _08039384
	add		r7, r6, #0x0
	add		r7, #0x24
	add		r0, #0x60
	add		r1, #0x50
	ldrh	r2, [r0, #0x0]
	ldrh	r0, [r1, #0x0]
	orr		r0, r2
	cmp		r0, #0x0
	beq		_080392ec
	b		_0803942c
_080392ec:
	add		r0, r4, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bls		_080392f8
	b		_0803942c
_080392f8:
	ldr		r0, [r4, #0x8]
	ldr		r1, _08039388
	cmp		r0, r1
	ble		_08039302
	b		_0803942c
_08039302:
	ldr		r0, [r5, #0x8]
	cmp		r0, r1
	ble		_0803930a
	b		_0803942c
_0803930a:
	add		r0, r4, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_08039318
	b		_0803942c
_08039318:
	ldrh	r2, [r5, #0x10]
	ldr		r0, _0803938c
	cmp		r2, r0
	bne		_08039322
	b		_0803942c
_08039322:
	add		r0, r4, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_0803939c
	ldr		r2, _08039390
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803942c
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	cmp		r6, #0x0
	beq		_0803942c
	mov		r0, #0x7c
	bl		sub_0807073c
	ldr		r5, _08039394
	ldr		r4, _08039398
	mov		r0, #0xf8
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
	b		_0803942c

_08039384:	.4byte RunGameLogic_CallBack
_08039388:	.4byte 0x00041FFF
_0803938c:	.4byte 0x00008003
_08039390:	.4byte 0x00000838
_08039394:	.4byte 0x08124544
_08039398:	.4byte 0x081245c8

_0803939c:
	add		r3, r4, #0x0
	add		r3, #0x5a
	ldr		r0, _080393c8
	strh	r0, [r3, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r4, #0x48]
	mov		r0, #0x8
	strh	r0, [r4, #0x38]
	add		r1, r4, #0x0
	add		r1, #0x4c
	ldrb	r1, [r1, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_080393cc
	add		r0, r4, #0x0
	add		r1, r7, #0x0
	bl		sub_080381f8
	b		_0803942c

_080393c8:	.4byte 0x00008007

_080393cc:
	ldr		r0, _080393e4
	cmp		r2, r0
	bne		_080393e8
	ldrh	r1, [r3, #0x0]
	sub		r0, #0x2
	and		r0, r1
	strh	r0, [r3, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0803905c
	b		_0803942c

_080393e4:	.4byte 0x00008001

_080393e8:
	cmp		r2, r0
	blt		_0803942c
	ldr		r0, _08039414
	cmp		r2, r0
	bgt		_0803942c
	sub		r0, #0x2
	cmp		r2, r0
	blt		_0803942c
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_080391f4
	ldr		r1, [r5, #0x54]
	cmp		r1, r4
	beq		_08039420
	ldr		r2, _08039418
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bne		_08039420
	ldr		r1, _0803941c
	b		_08039422

_08039414:	.4byte 0x00008403
_08039418:	.4byte 0x00000838
_0803941c:	.4byte 0x08107500

_08039420:
	ldr		r1, _08039434
_08039422:
	mov		r0, #0x0
	mov		r2, #0x0
	bl		sub_08029d24
	str		r4, [r0, #0x54]
_0803942c:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x39432, 0x2

_08039434:	.4byte 0x08107528
	thumb_func_end sub_080392d0

	thumb_func_start sub_08039438
sub_08039438:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r6, r0, #0x0
	add		r0, #0xee
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bge		_08039456
	ldr		r4, _080394b4
	add		r0, r0, r4
_08039456:
	asr		r0, r0, #0x10
	sub		r2, r2, r0
	add		r0, r6, #0x0
	add		r0, #0xf0
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	ldr		r1, [r1, #0x4]
	cmp		r1, #0x0
	bge		_0803946c
	ldr		r4, _080394b4
	add		r1, r1, r4
_0803946c:
	asr		r1, r1, #0x10
	sub		r1, r0, r1
	lsl		r0, r2, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_08028738
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	add		r0, r6, #0x0
	add		r0, #0x7a
	ldrh	r4, [r0, #0x0]
	ldr		r0, _080394b8
	add		r3, r4, r0
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x10
	cmp		r1, #0x0
	blt		_080394c0
	mov		r5, #0x80
	lsl		r5, r5, #0x4
	cmp		r1, r5
	bgt		_080394a6
	mov		r1, #0xf0
	lsl		r1, r1, #0x7
	add		r0, r4, r1
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_080394a6:
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	ldr		r1, _080394bc
	cmp		r0, r1
	ble		_080394e6
	add		r0, r4, r5
	b		_080394e2

_080394b4:	.4byte 0x0000FFFF
_080394b8:	.4byte 0xFFFF8000
_080394bc:	.4byte 0x77FF0000

_080394c0:
	ldr		r0, _080395ec
	cmp		r1, r0
	blt		_080394d0
	mov		r2, #0x88
	lsl		r2, r2, #0x8
	add		r0, r4, r2
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_080394d0:
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	ldr		r1, _080395f0
	cmp		r0, r1
	bgt		_080394e6
	mov		r3, #0xf8
	lsl		r3, r3, #0x8
	add		r0, r4, r3
_080394e2:
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_080394e6:
	lsl		r0, r2, #0x10
	asr		r4, r0, #0x10
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_080394f2
	add		r0, #0x3f
_080394f2:
	asr		r5, r0, #0x6
	ldr		r0, _080395f4
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	and		r0, r1
	lsl		r0, r0, #0x2
	ldr		r1, _080395f8
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	str		r5, [sp, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r10, r2
	sub		r0, r2, r5
	ldr		r3, _080395f4
	mov		r9, r3
	and		r0, r3
	lsl		r0, r0, #0x2
	ldr		r2, _080395f8
	add		r0, r0, r2
	ldr		r7, [r0, #0x0]
	add		r3, r6, #0x0
	add		r3, #0x4e
	mov		r2, #0x0
	ldrsh	r0, [r3, r2]
	mov		r8, r0
	mov		r2, r8
	mul		r2, r1
	add		r1, r6, #0x0
	add		r1, #0x50
	mov		r0, #0x0
	ldrsh	r6, [r1, r0]
	mov		r12, r6
	mov		r0, r12
	mul		r0, r7
	sub		r0, r2, r0
	str		r3, [sp, #0x4]
	str		r1, [sp, #0x8]
	cmp		r0, #0x0
	bge		_08039546
	ldr		r1, _080395fc
	add		r0, r0, r1
_08039546:
	asr		r2, r0, #0xf
	add		r0, r5, #0x0
	mov		r3, r9
	and		r0, r3
	lsl		r0, r0, #0x2
	ldr		r6, _080395f8
	add		r0, r0, r6
	ldr		r6, [r0, #0x0]
	mov		r1, r8
	mul		r1, r7
	mov		r0, r12
	mul		r0, r6
	add		r0, r1, r0
	cmp		r0, #0x0
	bge		_08039568
	ldr		r1, _080395fc
	add		r0, r0, r1
_08039568:
	asr		r5, r0, #0xf
	lsr		r0, r0, #0x1f
	add		r0, r5, r0
	asr		r5, r0, #0x1
	neg		r0, r2
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r2, r0, #0x1
	cmp		r2, #0xff
	bgt		_0803957e
	mov		r2, r10
_0803957e:
	add		r1, r2, #0x0
	mul		r1, r6
	add		r0, r5, #0x0
	mul		r0, r7
	add		r0, r1, r0
	cmp		r0, #0x0
	bge		_08039590
	ldr		r3, _080395fc
	add		r0, r0, r3
_08039590:
	asr		r3, r0, #0xf
	mov		r4, r10
	ldr		r1, [sp, #0x0]
	sub		r0, r4, r1
	mov		r4, r9
	and		r0, r4
	lsl		r0, r0, #0x2
	ldr		r1, _080395f8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	mul		r1, r6
	mul		r0, r2
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_080395b4
	ldr		r2, _080395fc
	add		r0, r0, r2
_080395b4:
	asr		r0, r0, #0xf
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	cmp		r3, r2
	ble		_080395c0
	add		r3, r2, #0x0
_080395c0:
	ldr		r1, _08039600
	cmp		r3, r1
	bge		_080395c8
	add		r3, r1, #0x0
_080395c8:
	cmp		r0, r2
	ble		_080395ce
	add		r0, r2, #0x0
_080395ce:
	cmp		r0, r1
	bge		_080395d4
	add		r0, r1, #0x0
_080395d4:
	ldr		r4, [sp, #0x4]
	strh	r3, [r4, #0x0]
	ldr		r6, [sp, #0x8]
	strh	r0, [r6, #0x0]
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080395ec:	.4byte 0xFFFFF800
_080395f0:	.4byte 0xFFFF8800
_080395f4:	.4byte 0x000003FF
_080395f8:	.4byte 0x08101068
_080395fc:	.4byte 0x00007FFF
_08039600:	.4byte 0xFFFFFC00
	thumb_func_end sub_08039438

	thumb_func_start sub_08039604
sub_08039604:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r2, r1, #0x0
	ldr		r1, [r5, #0x0]
	ldr		r0, [r2, #0x0]
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_08039618
	ldr		r1, _080396a8
	add		r0, r0, r1
_08039618:
	asr		r3, r0, #0x10
	ldr		r1, [r5, #0x4]
	ldr		r0, [r2, #0x4]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08039628
	ldr		r0, _080396a8
	add		r1, r1, r0
_08039628:
	add		r0, r3, #0x0
	asr		r1, r1, #0x10
	bl		sub_08028738
	ldr		r6, _080396ac
	lsl		r0, r0, #0x10
	asr		r2, r0, #0x10
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0803963e
	add		r1, #0x3f
_0803963e:
	asr		r4, r1, #0x6
	ldr		r1, _080396b0
	add		r0, r1, #0x0
	add		r1, r4, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r6
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x9
	cmp		r0, #0x0
	bge		_08039658
	ldr		r1, _080396b4
	add		r0, r0, r1
_08039658:
	asr		r3, r0, #0xf
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r4
	ldr		r1, _080396b0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x9
	neg		r0, r0
	cmp		r0, #0x0
	bge		_08039676
	ldr		r1, _080396b4
	add		r0, r0, r1
_08039676:
	asr		r1, r0, #0xf
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r3, r0
	ble		_08039682
	add		r3, r0, #0x0
_08039682:
	cmp		r1, r0
	ble		_08039688
	add		r1, r0, #0x0
_08039688:
	ldr		r0, _080396b8
	cmp		r3, r0
	bge		_08039690
	add		r3, r0, #0x0
_08039690:
	cmp		r1, r0
	bge		_08039696
	add		r1, r0, #0x0
_08039696:
	add		r0, r5, #0x0
	add		r0, #0x4e
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x396A6, 0x2

_080396a8:	.4byte 0x0000FFFF
_080396ac:	.4byte 0x08101068
_080396b0:	.4byte 0x000003FF
_080396b4:	.4byte 0x00007FFF
_080396b8:	.4byte 0xFFFFFC00
	thumb_func_end sub_08039604

	thumb_func_start sub_080396bc
sub_080396bc:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	ldr		r4, _08039700
	add		r7, r4, #0x0
	add		r7, #0x24
	add		r1, r7, #0x0
	bl		sub_08037e98
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_08039438
	ldr		r0, _08039704
	add		r4, r4, r0
	ldr		r4, [r4, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08039776
	cmp		r4, r6
	beq		_08039708
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_080396fc
	mov		r2, #0x40
_080396fc:
	mov		r0, #0x1
	b		_0803970e

_08039700:	.4byte RunGameLogic_CallBack
_08039704:	.4byte 0x00000838

_08039708:
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r0, #0x0
_0803970e:
	ldr		r5, _08039734
	lsl		r4, r0, #0x2
	add		r0, r6, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r3, r0, #0x3
	add		r0, r6, #0x0
	add		r0, #0x58
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_08039738
	add		r0, r3, #0x2
	add		r0, r4, r0
	b		_0803973a

.incbin "base.gba", 0x39732, 0x2

_08039734:	.4byte 0x081077d4

_08039738:
	add		r0, r4, r3
_0803973a:
	add		r0, r5, r0
	ldrh	r4, [r0, #0x0]
	add		r6, r2, #0x0
	cmp		r6, #0x0
	beq		_08039776
	add		r0, r4, #0x0
	bl		sub_0807073c
	ldr		r5, _0803977c
	ldr		r0, _08039780
	lsl		r4, r4, #0x3
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_08039776:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803977c:	.4byte 0x08124544
_08039780:	.4byte 0x081245c8
	thumb_func_end sub_080396bc

	thumb_func_start sub_08039784
sub_08039784:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r2, r1, #0x0
	ldr		r1, [r2, #0x8]
	mov		r0, #0x80
	lsl		r0, r0, #0x9
	cmp		r1, r0
	ble		_0803979a
	ldr		r0, [r2, #0x30]
	cmp		r0, #0x0
	blt		_080397c0
_0803979a:
	add		r0, r4, #0x0
	bl		sub_08038168
	add		r2, r4, #0x0
	add		r2, #0x4e
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	strh	r0, [r2, #0x0]
	b		_080398aa
_080397c0:
	add		r0, r4, #0x0
	add		r0, #0x88
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	sub		r0, #0x3a
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08039830
	and		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0xe0
	lsl		r0, r0, #0x7
	strh	r0, [r4, #0x38]
	add		r1, r4, #0x0
	add		r1, #0x64
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	mov		r0, #0xa4
	bl		sub_08070808
	add		r0, r4, #0x0
	mov		r1, #0x5
	bl		sub_08036c1c
	add		r0, r4, #0x0
	mov		r1, #0x4
	bl		sub_08036eec
	ldr		r0, _08039834
	add		r3, r0, #0x0
	add		r3, #0x24
	ldr		r1, _08039838
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	ldr		r0, [r2, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_080398aa
	cmp		r2, r4
	beq		_0803983c
	add		r0, r3, #0x0
	add		r1, r4, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_0803982c
	mov		r2, #0x40
_0803982c:
	mov		r0, #0x1
	b		_08039842

_08039830:	.4byte 0x0000FFD3
_08039834:	.4byte RunGameLogic_CallBack
_08039838:	.4byte 0x00000838

_0803983c:
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r0, #0x0
_08039842:
	ldr		r6, _08039868
	lsl		r5, r0, #0x2
	add		r0, r4, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r3, r0, #0x3
	add		r0, r4, #0x0
	add		r0, #0x58
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803986c
	add		r0, r3, #0x2
	add		r0, r5, r0
	b		_0803986e

.incbin "base.gba", 0x39866, 0x2

_08039868:	.4byte 0x081077d4

_0803986c:
	add		r0, r5, r3
_0803986e:
	add		r0, r6, r0
	ldrh	r4, [r0, #0x0]
	add		r6, r2, #0x0
	cmp		r6, #0x0
	beq		_080398aa
	add		r0, r4, #0x0
	bl		sub_0807073c
	ldr		r5, _080398b0
	ldr		r0, _080398b4
	lsl		r4, r4, #0x3
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_080398aa:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080398b0:	.4byte 0x08124544
_080398b4:	.4byte 0x081245c8
	thumb_func_end sub_08039784

	thumb_func_start sub_080398b8
sub_080398b8:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	ldr		r4, _080398fc
	add		r7, r4, #0x0
	add		r7, #0x24
	add		r1, r7, #0x0
	bl		sub_08037e98
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_08039604
	ldr		r0, _08039900
	add		r4, r4, r0
	ldr		r4, [r4, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08039972
	cmp		r4, r6
	beq		_08039904
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_080398f8
	mov		r2, #0x40
_080398f8:
	mov		r0, #0x1
	b		_0803990a

_080398fc:	.4byte RunGameLogic_CallBack
_08039900:	.4byte 0x00000838

_08039904:
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r0, #0x0
_0803990a:
	ldr		r5, _08039930
	lsl		r4, r0, #0x2
	add		r0, r6, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r3, r0, #0x3
	add		r0, r6, #0x0
	add		r0, #0x58
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_08039934
	add		r0, r3, #0x2
	add		r0, r4, r0
	b		_08039936

.incbin "base.gba", 0x3992E, 0x2

_08039930:	.4byte 0x081077d4

_08039934:
	add		r0, r4, r3
_08039936:
	add		r0, r5, r0
	ldrh	r4, [r0, #0x0]
	add		r6, r2, #0x0
	cmp		r6, #0x0
	beq		_08039972
	add		r0, r4, #0x0
	bl		sub_0807073c
	ldr		r5, _08039978
	ldr		r0, _0803997c
	lsl		r4, r4, #0x3
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_08039972:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08039978:	.4byte 0x08124544
_0803997c:	.4byte 0x081245c8
	thumb_func_end sub_080398b8

	thumb_func_start sub_08039980
sub_08039980:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r5, _080399a8
	add		r6, r5, #0x0
	add		r6, #0x24
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	and		r0, r1
	cmp		r0, #0x0
	bne		_080399ac
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x5
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	b		_08039a52

_080399a8:	.4byte RunGameLogic_CallBack

_080399ac:
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_08037e98
	ldr		r1, _080399e0
	add		r0, r5, r1
	ldr		r2, [r0, #0x0]
	ldr		r0, [r2, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08039a52
	cmp		r2, r4
	beq		_080399e4
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_080399da
	mov		r2, #0x40
_080399da:
	mov		r0, #0x1
	b		_080399ea

.incbin "base.gba", 0x399DE, 0x2

_080399e0:	.4byte 0x00000838

_080399e4:
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r0, #0x0
_080399ea:
	ldr		r6, _08039a10
	lsl		r5, r0, #0x2
	add		r0, r4, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r3, r0, #0x3
	add		r0, r4, #0x0
	add		r0, #0x58
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_08039a14
	add		r0, r3, #0x2
	add		r0, r5, r0
	b		_08039a16

.incbin "base.gba", 0x39A0E, 0x2

_08039a10:	.4byte 0x081077d4

_08039a14:
	add		r0, r5, r3
_08039a16:
	add		r0, r6, r0
	ldrh	r4, [r0, #0x0]
	add		r6, r2, #0x0
	cmp		r6, #0x0
	beq		_08039a52
	add		r0, r4, #0x0
	bl		sub_0807073c
	ldr		r5, _08039a58
	ldr		r0, _08039a5c
	lsl		r4, r4, #0x3
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_08039a52:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08039a58:	.4byte 0x08124544
_08039a5c:	.4byte 0x081245c8
	thumb_func_end sub_08039980

	thumb_func_start sub_08039a60
sub_08039a60:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r4, _08039aa4
	add		r6, r4, #0x0
	add		r6, #0x24
	add		r1, r6, #0x0
	bl		sub_08037e98
	add		r1, r5, #0x0
	add		r1, #0x68
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r0, _08039aa8
	add		r4, r4, r0
	ldr		r4, [r4, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08039b1a
	cmp		r4, r5
	beq		_08039aac
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_08039aa0
	mov		r2, #0x40
_08039aa0:
	mov		r0, #0x1
	b		_08039ab2

_08039aa4:	.4byte RunGameLogic_CallBack
_08039aa8:	.4byte 0x00000838

_08039aac:
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r0, #0x0
_08039ab2:
	ldr		r6, _08039ad8
	lsl		r4, r0, #0x2
	add		r0, r5, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r3, r0, #0x3
	add		r0, r5, #0x0
	add		r0, #0x58
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_08039adc
	add		r0, r3, #0x2
	add		r0, r4, r0
	b		_08039ade

.incbin "base.gba", 0x39AD6, 0x2

_08039ad8:	.4byte 0x081077d4

_08039adc:
	add		r0, r4, r3
_08039ade:
	add		r0, r6, r0
	ldrh	r4, [r0, #0x0]
	add		r6, r2, #0x0
	cmp		r6, #0x0
	beq		_08039b1a
	add		r0, r4, #0x0
	bl		sub_0807073c
	ldr		r5, _08039b20
	ldr		r0, _08039b24
	lsl		r4, r4, #0x3
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_08039b1a:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08039b20:	.4byte 0x08124544
_08039b24:	.4byte 0x081245c8
	thumb_func_end sub_08039a60

	thumb_func_start sub_08039b28
sub_08039b28:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	mov		r9, r1
	ldrh	r2, [r7, #0x38]
	cmp		r2, #0x1
	ble		_08039b3c
	b		_08039f64
_08039b3c:
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bls		_08039b46
	b		_08039f64
_08039b46:
	add		r0, r7, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_08039b54
	b		_08039f64
_08039b54:
	add		r0, r7, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_08039bb4
	ldr		r0, _08039ba8
	ldr		r2, _08039bac
	add		r1, r0, r2
	ldr		r1, [r1, #0x0]
	add		r2, r0, #0x0
	cmp		r7, r1
	beq		_08039b70
	b		_08039f64
_08039b70:
	mov		r0, r9
	ldrh	r1, [r0, #0x10]
	ldr		r0, _08039bb0
	cmp		r1, r0
	bne		_08039b7c
	b		_08039f64
_08039b7c:
	cmp		r1, r0
	blt		_08039b8e
	add		r0, #0x13
	cmp		r1, r0
	bgt		_08039b8e
	sub		r0, #0x1
	cmp		r1, r0
	blt		_08039b8e
	b		_08039f64
_08039b8e:
	ldr		r1, _08039bac
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08039ba0
	b		_08039f64
_08039ba0:
	mov		r0, #0xa0
	bl		sub_0807073c
	b		_08039f64

_08039ba8:	.4byte RunGameLogic_CallBack
_08039bac:	.4byte 0x00000838
_08039bb0:	.4byte 0x00001007

_08039bb4:
	mov		r0, r9
	ldrh	r1, [r0, #0x10]
	ldr		r0, _08039c10
	cmp		r1, r0
	bne		_08039c24
	mov		r4, #0x0
	ldr		r2, _08039c14
	ldr		r0, _08039c18
	mov		r1, #0xbe
	lsl		r1, r1, #0x4
	add		r3, r0, r1
	ldrh	r1, [r3, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_08039be6
	ldr		r1, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	bne		_08039be6
	mov		r4, #0x1
_08039be6:
	cmp		r4, #0x0
	beq		_08039bec
	b		_08039f64
_08039bec:
	ldr		r0, _08039c1c
	ldr		r2, _08039c20
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r7, r0
	beq		_08039bfa
	b		_08039f64
_08039bfa:
	ldr		r0, [r7, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08039c06
	b		_08039f64
_08039c06:
	mov		r0, #0xbe
	lsl		r0, r0, #0x1
	bl		sub_0807073c
	b		_08039f64

_08039c10:	.4byte 0x00001007
_08039c14:	.4byte 0x08124544
_08039c18:	.4byte 0x081245c8
_08039c1c:	.4byte RunGameLogic_CallBack
_08039c20:	.4byte 0x00000838

_08039c24:
	ldr		r0, _08039cbc
	cmp		r1, r0
	bne		_08039cdc
	ldr		r0, _08039cc0
	add		r1, r7, #0x0
	add		r1, #0xbc
	ldr		r4, [r1, #0x0]
	ldr		r1, _08039cc4
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r7, r0
	beq		_08039c3e
	b		_08039f64
_08039c3e:
	ldr		r0, [r7, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08039c4a
	b		_08039f64
_08039c4a:
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_08039c52
	neg		r0, r4
_08039c52:
	lsl		r0, r0, #0x6
	lsr		r0, r0, #0x16
	ldr		r2, _08039cc8
	add		r0, r0, r2
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	add		r1, r4, #0x0
	cmp		r1, #0x0
	bge		_08039c66
	neg		r1, r1
_08039c66:
	asr		r4, r1, #0x14
	mov		r0, #0x3f
	and		r4, r0
	add		r4, #0xc0
	lsl		r6, r6, #0x10
	asr		r6, r6, #0x10
	ldr		r0, _08039ccc
	bl		sub_0807073c
	ldr		r0, _08039cd0
	mov		r8, r0
	ldr		r5, _08039cd4
	ldr		r1, _08039cd8
	add		r5, r5, r1
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r4, #0x0
	bl		sub_0807169c
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08071704
	b		_08039f64

_08039cbc:	.4byte 0x0000100C
_08039cc0:	.4byte RunGameLogic_CallBack
_08039cc4:	.4byte 0x00000838
_08039cc8:	.4byte 0xFFFFFE00
_08039ccc:	.4byte 0x00000181
_08039cd0:	.4byte 0x08124544
_08039cd4:	.4byte 0x081245c8
_08039cd8:	.4byte 0x00000C08

_08039cdc:
	cmp		r2, #0x0
	beq		_08039d04
	add		r1, r7, #0x0
	add		r1, #0x5a
	ldr		r0, _08039d00
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r7, #0x48]
	mov		r0, #0x8
	strh	r0, [r7, #0x38]
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_08039604
	b		_08039f64

_08039d00:	.4byte 0x00008007

_08039d04:
	ldr		r2, _08039d18
	add		r0, r1, r2
	cmp		r0, #0x1d
	bls		_08039d0e
	b		_08039e50
_08039d0e:
	lsl		r0, r0, #0x2
	ldr		r1, _08039d1c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08039d18:	.4byte 0xFFFFF000
_08039d1c:	.4byte 0x08039d20
_08039d20:	.4byte 0x08039dbe

.incbin "base.gba", 0x39D24, 0x74
	thumb_func_end sub_08039b28


.incbin "base.gba", 0x39D98, 0xB8

_08039e50:

.incbin "base.gba", 0x39E50, 0x44
_08039e94:	.4byte 0x00008007
_08039e98:	.4byte 0xFFFFF000
_08039e9c:	.4byte 0x08039ea0
_08039ea0:	.4byte 0x08039f18

.incbin "base.gba", 0x39EA4, 0xC0

_08039f64:

.incbin "base.gba", 0x39F64, 0xC
	thumb_func_start sub_08039f70
sub_08039f70:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r5, r0, #0x0
	add		r0, r1, #0x0
	add		r1, r2, #0x0
	add		r3, r5, #0x0
	add		r3, #0x5a
	ldr		r2, _08039ff0
	strh	r2, [r3, #0x0]
	ldr		r2, [r5, #0x48]
	mov		r3, #0x80
	lsl		r3, r3, #0x5
	orr		r2, r3
	str		r2, [r5, #0x48]
	mov		r2, #0x8
	strh	r2, [r5, #0x38]
	add		r2, r5, #0x0
	add		r2, #0xee
	mov		r3, #0x0
	ldrsh	r2, [r2, r3]
	sub		r0, r2, r0
	add		r2, r5, #0x0
	add		r2, #0xf0
	mov		r4, #0x0
	ldrsh	r2, [r2, r4]
	sub		r1, r2, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_08028738
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	add		r0, r5, #0x0
	add		r0, #0x7a
	ldrh	r4, [r0, #0x0]
	ldr		r0, _08039ff4
	add		r3, r4, r0
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x10
	cmp		r1, #0x0
	blt		_08039ffc
	mov		r6, #0x80
	lsl		r6, r6, #0x4
	cmp		r1, r6
	bgt		_08039fe2
	mov		r1, #0xf0
	lsl		r1, r1, #0x7
	add		r0, r4, r1
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_08039fe2:
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	ldr		r1, _08039ff8
	cmp		r0, r1
	ble		_0803a022
	add		r0, r4, r6
	b		_0803a01e

_08039ff0:	.4byte 0x00008007
_08039ff4:	.4byte 0xFFFF8000
_08039ff8:	.4byte 0x77FF0000

_08039ffc:
	ldr		r0, _0803a124
	cmp		r1, r0
	blt		_0803a00c
	mov		r2, #0x88
	lsl		r2, r2, #0x8
	add		r0, r4, r2
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_0803a00c:
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	ldr		r1, _0803a128
	cmp		r0, r1
	bgt		_0803a022
	mov		r3, #0xf8
	lsl		r3, r3, #0x8
	add		r0, r4, r3
_0803a01e:
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_0803a022:
	ldr		r4, _0803a12c
	mov		r10, r4
	lsl		r0, r2, #0x10
	asr		r4, r0, #0x10
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_0803a032
	add		r0, #0x3f
_0803a032:
	asr		r6, r0, #0x6
	ldr		r0, _0803a130
	add		r1, r0, #0x0
	add		r0, r6, #0x0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r10
	ldr		r1, [r0, #0x0]
	str		r6, [sp, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r9, r2
	sub		r0, r2, r6
	ldr		r3, _0803a130
	mov		r8, r3
	and		r0, r3
	lsl		r0, r0, #0x2
	add		r0, r10
	ldr		r7, [r0, #0x0]
	add		r3, r5, #0x0
	add		r3, #0x4e
	mov		r2, #0x0
	ldrsh	r0, [r3, r2]
	mov		r12, r0
	mov		r2, r12
	mul		r2, r1
	add		r1, r5, #0x0
	add		r1, #0x50
	mov		r0, #0x0
	ldrsh	r5, [r1, r0]
	add		r0, r5, #0x0
	mul		r0, r7
	sub		r0, r2, r0
	str		r3, [sp, #0x4]
	str		r1, [sp, #0x8]
	cmp		r0, #0x0
	bge		_0803a080
	ldr		r1, _0803a134
	add		r0, r0, r1
_0803a080:
	asr		r2, r0, #0xf
	add		r0, r6, #0x0
	mov		r3, r8
	and		r0, r3
	lsl		r0, r0, #0x2
	add		r0, r10
	ldr		r6, [r0, #0x0]
	mov		r1, r12
	mul		r1, r7
	add		r0, r5, #0x0
	mul		r0, r6
	add		r0, r1, r0
	cmp		r0, #0x0
	bge		_0803a0a0
	ldr		r1, _0803a134
	add		r0, r0, r1
_0803a0a0:
	asr		r5, r0, #0xf
	lsr		r0, r0, #0x1f
	add		r0, r5, r0
	asr		r5, r0, #0x1
	neg		r0, r2
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r2, r0, #0x1
	cmp		r2, #0xff
	bgt		_0803a0b6
	mov		r2, r9
_0803a0b6:
	add		r1, r2, #0x0
	mul		r1, r6
	add		r0, r5, #0x0
	mul		r0, r7
	add		r0, r1, r0
	cmp		r0, #0x0
	bge		_0803a0c8
	ldr		r3, _0803a134
	add		r0, r0, r3
_0803a0c8:
	asr		r3, r0, #0xf
	mov		r4, r9
	ldr		r1, [sp, #0x0]
	sub		r0, r4, r1
	mov		r4, r8
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r10
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	mul		r1, r6
	mul		r0, r2
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_0803a0ea
	ldr		r1, _0803a134
	add		r0, r0, r1
_0803a0ea:
	asr		r0, r0, #0xf
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	cmp		r3, r2
	ble		_0803a0f6
	add		r3, r2, #0x0
_0803a0f6:
	ldr		r1, _0803a138
	cmp		r3, r1
	bge		_0803a0fe
	add		r3, r1, #0x0
_0803a0fe:
	cmp		r0, r2
	ble		_0803a104
	add		r0, r2, #0x0
_0803a104:
	cmp		r0, r1
	bge		_0803a10a
	add		r0, r1, #0x0
_0803a10a:
	ldr		r2, [sp, #0x4]
	strh	r3, [r2, #0x0]
	ldr		r3, [sp, #0x8]
	strh	r0, [r3, #0x0]
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3A122, 0x2

_0803a124:	.4byte 0xFFFFF800
_0803a128:	.4byte 0xFFFF8800
_0803a12c:	.4byte 0x08101068
_0803a130:	.4byte 0x000003FF
_0803a134:	.4byte 0x00007FFF
_0803a138:	.4byte 0xFFFFFC00
	thumb_func_end sub_08039f70

	thumb_func_start sub_0803a13c
sub_0803a13c:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	add		r1, r4, #0x0
	add		r1, #0x5a
	ldr		r0, _0803a1f8
	strh	r0, [r1, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r4, #0x48]
	mov		r0, #0x8
	strh	r0, [r4, #0x38]
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bge		_0803a162
	ldr		r1, _0803a1fc
	add		r0, r0, r1
_0803a162:
	asr		r0, r0, #0x10
	sub		r3, r0, r3
	ldr		r0, [r4, #0x4]
	cmp		r0, #0x0
	bge		_0803a170
	ldr		r1, _0803a1fc
	add		r0, r0, r1
_0803a170:
	asr		r0, r0, #0x10
	sub		r2, r0, r2
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r2, #0x10
	asr		r1, r1, #0x10
	bl		sub_08028738
	ldr		r6, _0803a200
	lsl		r0, r0, #0x10
	asr		r2, r0, #0x10
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0803a18e
	add		r1, #0x3f
_0803a18e:
	asr		r5, r1, #0x6
	ldr		r1, _0803a204
	add		r0, r1, #0x0
	add		r1, r5, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r6
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x9
	cmp		r0, #0x0
	bge		_0803a1a8
	ldr		r1, _0803a208
	add		r0, r0, r1
_0803a1a8:
	asr		r3, r0, #0xf
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r5
	ldr		r1, _0803a204
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x9
	neg		r0, r0
	cmp		r0, #0x0
	bge		_0803a1c6
	ldr		r1, _0803a208
	add		r0, r0, r1
_0803a1c6:
	asr		r1, r0, #0xf
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	cmp		r3, r2
	ble		_0803a1d2
	add		r3, r2, #0x0
_0803a1d2:
	ldr		r0, _0803a20c
	cmp		r3, r0
	bge		_0803a1da
	add		r3, r0, #0x0
_0803a1da:
	cmp		r1, r2
	ble		_0803a1e0
	add		r1, r2, #0x0
_0803a1e0:
	cmp		r1, r0
	bge		_0803a1e6
	add		r1, r0, #0x0
_0803a1e6:
	add		r0, r4, #0x0
	add		r0, #0x4e
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3A1F6, 0x2

_0803a1f8:	.4byte 0x00008007
_0803a1fc:	.4byte 0x0000FFFF
_0803a200:	.4byte 0x08101068
_0803a204:	.4byte 0x000003FF
_0803a208:	.4byte 0x00007FFF
_0803a20c:	.4byte 0xFFFFFC00
	thumb_func_end sub_0803a13c

	thumb_func_start sub_0803a210
sub_0803a210:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r7, r0, #0x0
	mov		r9, r1
	str		r2, [sp, #0x0]
	ldrh	r0, [r7, #0x38]
	str		r0, [sp, #0x4]
	cmp		r0, #0x1
	ble		_0803a22c
	b		_0803a426
_0803a22c:
	add		r0, r7, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x6
	bne		_0803a238
	b		_0803a426
_0803a238:
	add		r0, r7, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_0803a246
	b		_0803a426
_0803a246:
	add		r0, r7, #0x0
	add		r0, #0x6a
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	beq		_0803a2e0
	ldr		r0, _0803a2cc
	ldr		r3, _0803a2d0
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	cmp		r7, r0
	bne		_0803a26e
	ldr		r0, [r7, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803a26e
	mov		r0, #0xa0
	bl		sub_0807073c
_0803a26e:
	ldr		r0, _0803a2cc
	mov		r4, #0xe2
	lsl		r4, r4, #0x3
	add		r0, r0, r4
	ldr		r1, [r0, #0x8]
	mov		r0, r9
	cmp		r0, #0x0
	bge		_0803a280
	add		r0, #0x7
_0803a280:
	asr		r3, r0, #0x3
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x0
	bge		_0803a28a
	add		r0, #0x7
_0803a28a:
	asr		r2, r0, #0x3
	cmp		r1, #0x0
	beq		_0803a2b6
_0803a290:
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bge		_0803a29a
	ldr		r5, _0803a2d4
	add		r0, r0, r5
_0803a29a:
	asr		r0, r0, #0x13
	cmp		r0, r3
	bne		_0803a2b0
	ldr		r0, [r1, #0x4]
	cmp		r0, #0x0
	bge		_0803a2aa
	ldr		r4, _0803a2d4
	add		r0, r0, r4
_0803a2aa:
	asr		r0, r0, #0x13
	cmp		r0, r2
	beq		_0803a2d8
_0803a2b0:
	ldr		r1, [r1, #0x3c]
	cmp		r1, #0x0
	bne		_0803a290
_0803a2b6:
	mov		r5, #0x0
	mov		r10, r5
_0803a2ba:
	mov		r0, r10
	ldr		r2, [r0, #0x18]
	cmp		r2, #0x0
	bne		_0803a2c4
	b		_0803a426
_0803a2c4:
	add		r1, r7, #0x0
	bl		sub_0807d7d8
	b		_0803a426

_0803a2cc:	.4byte RunGameLogic_CallBack
_0803a2d0:	.4byte 0x00000838
_0803a2d4:	.4byte 0x0007FFFF

_0803a2d8:
	mov		r10, r1
	b		_0803a2ba
_0803a2dc:
	mov		r10, r2
	b		_0803a32c
_0803a2e0:
	ldr		r1, _0803a3f0
	mov		r2, #0xe2
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	ldr		r2, [r0, #0x8]
	mov		r0, r9
	cmp		r0, #0x0
	bge		_0803a2f2
	add		r0, #0x7
_0803a2f2:
	asr		r4, r0, #0x3
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x0
	bge		_0803a2fc
	add		r0, #0x7
_0803a2fc:
	asr		r3, r0, #0x3
	cmp		r2, #0x0
	beq		_0803a328
_0803a302:
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bge		_0803a30c
	ldr		r5, _0803a3f4
	add		r0, r0, r5
_0803a30c:
	asr		r0, r0, #0x13
	cmp		r0, r4
	bne		_0803a322
	ldr		r0, [r2, #0x4]
	cmp		r0, #0x0
	bge		_0803a31c
	ldr		r5, _0803a3f4
	add		r0, r0, r5
_0803a31c:
	asr		r0, r0, #0x13
	cmp		r0, r3
	beq		_0803a2dc
_0803a322:
	ldr		r2, [r2, #0x3c]
	cmp		r2, #0x0
	bne		_0803a302
_0803a328:
	mov		r0, #0x0
	mov		r10, r0
_0803a32c:
	mov		r2, r10
	ldr		r0, [r2, #0x60]
	cmp		r0, #0x0
	bne		_0803a426
	cmp		r2, #0x0
	beq		_0803a3dc
	ldr		r2, [r2, #0x50]
	ldr		r0, _0803a3f8
	cmp		r2, r0
	blt		_0803a34e
	add		r0, #0x2
	cmp		r2, r0
	ble		_0803a34e
	mov		r0, #0x86
	lsl		r0, r0, #0x10
	cmp		r2, r0
	beq		_0803a3dc
_0803a34e:
	mov		r0, #0xaa
	add		r5, r0, #0x0
	add		r0, r7, #0x0
	add		r0, #0xbc
	ldr		r4, [r0, #0x0]
	ldr		r3, _0803a3fc
	add		r0, r1, r3
	ldr		r0, [r0, #0x0]
	cmp		r7, r0
	bne		_0803a3dc
	ldr		r0, [r7, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803a3dc
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_0803a374
	neg		r0, r4
_0803a374:
	lsl		r0, r0, #0x6
	lsr		r0, r0, #0x16
	ldr		r1, _0803a400
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	add		r0, r4, #0x0
	cmp		r0, #0x0
	bge		_0803a388
	neg		r0, r0
_0803a388:
	asr		r4, r0, #0x14
	mov		r0, #0x3f
	and		r4, r0
	add		r4, #0xc0
	lsl		r6, r6, #0x10
	asr		r6, r6, #0x10
	add		r0, r5, #0x0
	bl		sub_0807073c
	ldr		r2, _0803a404
	mov		r8, r2
	ldr		r0, _0803a408
	lsl		r5, r5, #0x3
	add		r5, r5, r0
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r4, #0x0
	bl		sub_0807169c
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08071704
_0803a3dc:
	ldr		r3, [sp, #0x4]
	cmp		r3, #0x0
	beq		_0803a40c
	add		r0, r7, #0x0
	mov		r1, r9
	ldr		r2, [sp, #0x0]
	bl		sub_0803a13c
	b		_0803a426

.incbin "base.gba", 0x3A3EE, 0x2

_0803a3f0:	.4byte RunGameLogic_CallBack
_0803a3f4:	.4byte 0x0007FFFF
_0803a3f8:	.4byte 0x000A0004
_0803a3fc:	.4byte 0x00000838
_0803a400:	.4byte 0xFFFFFE00
_0803a404:	.4byte 0x08124544
_0803a408:	.4byte 0x081245c8

_0803a40c:
	add		r0, r7, #0x0
	mov		r1, r9
	ldr		r2, [sp, #0x0]
	bl		sub_08039f70
	mov		r4, r10
	ldr		r2, [r4, #0x18]
	cmp		r2, #0x0
	beq		_0803a426
	mov		r0, r10
	add		r1, r7, #0x0
	bl		sub_0807d7d8
_0803a426:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3A436, 0x326
	thumb_func_end sub_0803a210

	thumb_func_start sub_0803a75c
sub_0803a75c:
	add		r2, r0, #0x0
	ldr		r1, [r2, #0x0]
	add		r0, #0x4e
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	str		r1, [r2, #0x0]
	ldr		r1, [r2, #0x4]
	add		r0, r2, #0x0
	add		r0, #0x50
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	str		r1, [r2, #0x4]
	bx		lr

.incbin "base.gba", 0x3A77E, 0x4E
	thumb_func_end sub_0803a75c

	thumb_func_start sub_0803a7cc
sub_0803a7cc:
	mov		r12, r0
	mov		r3, r12
	add		r3, #0x92
	mov		r0, #0x0
	ldrsh	r2, [r3, r0]
	ldr		r0, _0803a7fc
	cmp		r2, r0
	ble		_0803a804
	add		r3, #0x20
	ldrh	r1, [r3, #0x0]
	ldr		r0, _0803a800
	and		r0, r1
	strh	r0, [r3, #0x0]
	mov		r2, r12
	add		r2, #0xb4
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldrh	r1, [r3, #0x0]
	mov		r0, #0x2
	orr		r0, r1
	b		_0803a872

.incbin "base.gba", 0x3A7FA, 0x2

_0803a7fc:	.4byte 0x000005BF
_0803a800:	.4byte 0x0000FFFE

_0803a804:
	ldr		r0, _0803a830
	cmp		r2, r0
	bgt		_0803a854
	mov		r2, #0x0
	ldrsh	r0, [r3, r2]
	cmp		r0, r1
	blt		_0803a854
	mov		r0, r12
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803a834
	mov		r0, r12
	add		r0, #0xb2
	ldrh	r2, [r0, #0x0]
	mov		r1, #0x1
	orr		r1, r2
	b		_0803a83e

.incbin "base.gba", 0x3A82E, 0x2

_0803a830:	.4byte 0x000003BF

_0803a834:
	mov		r0, r12
	add		r0, #0xb2
	ldrh	r2, [r0, #0x0]
	ldr		r1, _0803a850
	and		r1, r2
_0803a83e:
	strh	r1, [r0, #0x0]
	add		r3, r0, #0x0
	mov		r2, r12
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0803a850
	and		r0, r1
	strh	r0, [r2, #0x0]
	b		_0803a86c

_0803a850:	.4byte 0x0000FFFE

_0803a854:
	mov		r3, r12
	add		r3, #0xb2
	ldrh	r2, [r3, #0x0]
	ldr		r1, _0803a878
	add		r0, r1, #0x0
	and		r0, r2
	strh	r0, [r3, #0x0]
	mov		r2, r12
	add		r2, #0xb4
	ldrh	r0, [r2, #0x0]
	and		r1, r0
	strh	r1, [r2, #0x0]
_0803a86c:
	ldrh	r1, [r3, #0x0]
	ldr		r0, _0803a87c
	and		r0, r1
_0803a872:
	strh	r0, [r3, #0x0]
	bx		lr

.incbin "base.gba", 0x3A876, 0x2

_0803a878:	.4byte 0x0000FFFE
_0803a87c:	.4byte 0x0000FFFD
	thumb_func_end sub_0803a7cc

	thumb_func_start sub_0803a880
sub_0803a880:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r4, #0x0
	add		r5, #0x96
	strh	r1, [r5, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	bl		sub_0803a7cc
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803a8bc
	add		r0, r4, #0x0
	add		r0, #0x98
	ldrh	r0, [r0, #0x0]
	add		r3, r4, #0x0
	add		r3, #0x92
	cmp		r0, #0x0
	bne		_0803a900
	ldr		r1, _0803a8b8
	add		r0, r1, #0x0
	ldrh	r2, [r3, #0x0]
	add		r0, r0, r2
	strh	r0, [r3, #0x0]
	b		_0803a900

_0803a8b8:	.4byte 0xFFFFFF00

_0803a8bc:
	add		r5, r4, #0x0
	add		r5, #0x98
	ldrh	r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0803a8e4
	add		r0, r4, #0x0
	add		r0, #0x92
	ldrh	r1, [r0, #0x0]
	add		r1, #0x20
	strh	r1, [r0, #0x0]
	lsl		r1, r1, #0x10
	ldr		r2, _0803a8e0
	add		r3, r0, #0x0
	cmp		r1, r2
	ble		_0803a90e
	ldrh	r0, [r5, #0x0]
	sub		r0, #0x1
	b		_0803a8fe

_0803a8e0:	.4byte 0x0FBF0000

_0803a8e4:
	add		r0, r4, #0x0
	add		r0, #0x92
	ldr		r2, _0803a920
	add		r1, r2, #0x0
	ldrh	r2, [r0, #0x0]
	add		r1, r1, r2
	strh	r1, [r0, #0x0]
	lsl		r1, r1, #0x10
	ldr		r2, _0803a924
	add		r3, r0, #0x0
	cmp		r1, r2
	bgt		_0803a900
	mov		r0, #0x0
_0803a8fe:
	strh	r0, [r5, #0x0]
_0803a900:
	mov		r0, #0x0
	ldrsh	r1, [r3, r0]
	ldr		r0, _0803a928
	cmp		r1, r0
	ble		_0803a90e
	add		r0, #0x1
	strh	r0, [r3, #0x0]
_0803a90e:
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	cmp		r0, #0x0
	bge		_0803a91a
	mov		r0, #0x0
	strh	r0, [r3, #0x0]
_0803a91a:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0803a920:	.4byte 0xFFFFFE00
_0803a924:	.4byte 0x0DBF0000
_0803a928:	.4byte 0x00000FBF
	thumb_func_end sub_0803a880

	thumb_func_start sub_0803a92c
sub_0803a92c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	bl		sub_0803a7cc
	add		r0, r4, #0x0
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803a968
	add		r0, r4, #0x0
	add		r0, #0x98
	ldrh	r0, [r0, #0x0]
	add		r3, r4, #0x0
	add		r3, #0x92
	cmp		r0, #0x0
	bne		_0803a9b4
	ldr		r1, _0803a964
	add		r0, r1, #0x0
	ldrh	r2, [r3, #0x0]
	add		r0, r0, r2
	strh	r0, [r3, #0x0]
	b		_0803a9b4

.incbin "base.gba", 0x3A962, 0x2

_0803a964:	.4byte 0xFFFFF800

_0803a968:
	add		r5, r4, #0x0
	add		r5, #0x98
	ldrh	r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0803a998
	add		r0, r4, #0x0
	add		r0, #0x92
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r2, #0x0
	ldrh	r2, [r0, #0x0]
	add		r1, r1, r2
	strh	r1, [r0, #0x0]
	lsl		r1, r1, #0x10
	ldr		r2, _0803a994
	add		r3, r0, #0x0
	cmp		r1, r2
	ble		_0803a9c2
	ldrh	r0, [r5, #0x0]
	sub		r0, #0x1
	b		_0803a9b2

.incbin "base.gba", 0x3A992, 0x2

_0803a994:	.4byte 0x0FBF0000

_0803a998:
	add		r0, r4, #0x0
	add		r0, #0x92
	ldr		r2, _0803a9d4
	add		r1, r2, #0x0
	ldrh	r2, [r0, #0x0]
	add		r1, r1, r2
	strh	r1, [r0, #0x0]
	lsl		r1, r1, #0x10
	ldr		r2, _0803a9d8
	add		r3, r0, #0x0
	cmp		r1, r2
	bgt		_0803a9b4
	mov		r0, #0x0
_0803a9b2:
	strh	r0, [r5, #0x0]
_0803a9b4:
	mov		r0, #0x0
	ldrsh	r1, [r3, r0]
	ldr		r0, _0803a9dc
	cmp		r1, r0
	ble		_0803a9c2
	add		r0, #0x1
	strh	r0, [r3, #0x0]
_0803a9c2:
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	cmp		r0, #0x0
	bge		_0803a9ce
	mov		r0, #0x0
	strh	r0, [r3, #0x0]
_0803a9ce:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0803a9d4:	.4byte 0xFFFFF000
_0803a9d8:	.4byte 0x0DBF0000
_0803a9dc:	.4byte 0x00000FBF
	thumb_func_end sub_0803a92c

	thumb_func_start sub_0803a9e0
sub_0803a9e0:
	push	{ r4, r5, r6, lr }
	add		r3, r0, #0x0
	add		r0, #0x78
	ldrb	r2, [r0, #0x0]
	cmp		r2, #0x1
	bne		_0803a9ee
	b		_0803ab30
_0803a9ee:
	cmp		r2, #0x2
	bne		_0803a9f4
	b		_0803ab30
_0803a9f4:
	cmp		r2, #0x3
	bne		_0803a9fa
	b		_0803ab30
_0803a9fa:
	cmp		r2, #0x4
	bne		_0803aa00
	b		_0803ab30
_0803aa00:
	cmp		r2, #0x5
	bne		_0803aa06
	b		_0803ab30
_0803aa06:
	cmp		r2, #0x6
	bne		_0803aa0c
	b		_0803ab30
_0803aa0c:
	cmp		r2, #0x7
	bne		_0803aa18
	add		r0, r3, #0x0
	bl		sub_0803a92c
	b		_0803ab30
_0803aa18:
	ldr		r0, _0803aa6c
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	add		r0, r0, r1
	ldrb	r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	ldr		r1, _0803aa70
	add		r4, r0, r1
	cmp		r2, #0x8
	beq		_0803aa50
	add		r0, r3, #0x0
	add		r0, #0x7e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xd
	beq		_0803aa50
	sub		r0, #0x5
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x2
	bhi		_0803aa74
	add		r0, r3, #0x0
	add		r0, #0xb8
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	bne		_0803aa74
_0803aa50:
	add		r1, r3, #0x0
	add		r1, #0x92
	mov		r3, #0x6
	ldrsh	r0, [r4, r3]
	lsl		r0, r0, #0x3
	ldrh	r5, [r1, #0x0]
	add		r0, r0, r5
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0803ab30
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	b		_0803ab30

_0803aa6c:	.4byte RunGameLogic_CallBack
_0803aa70:	.4byte 0x08107558

_0803aa74:
	add		r0, r3, #0x0
	add		r0, #0x96
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xc0
	lsl		r1, r1, #0x8
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	cmp		r1, r0
	bne		_0803aa92
	add		r0, r3, #0x0
	add		r0, #0x64
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0803aa9e
_0803aa92:
	add		r1, r3, #0x0
	add		r1, #0x92
	ldrh	r0, [r4, #0x4]
	ldrh	r6, [r1, #0x0]
	add		r0, r0, r6
	b		_0803aaea
_0803aa9e:
	add		r0, r3, #0x0
	add		r0, #0x86
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x9
	bhi		_0803aaf0
	add		r0, r3, #0x0
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803aae0
	add		r0, r3, #0x0
	add		r0, #0x92
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r3, #0x0
	ldrsh	r1, [r4, r3]
	ldr		r5, _0803aad4
	add		r1, r1, r5
	add		r3, r0, #0x0
	cmp		r2, r1
	blt		_0803aad8
	ldrh	r0, [r4, #0x8]
	ldrh	r6, [r3, #0x0]
	add		r0, r0, r6
	b		_0803ab10

_0803aad4:	.4byte 0xFFFFFE00

_0803aad8:
	ldrh	r0, [r4, #0x2]
	ldrh	r1, [r3, #0x0]
	add		r0, r0, r1
	b		_0803ab10
_0803aae0:
	add		r1, r3, #0x0
	add		r1, #0x92
	ldrh	r0, [r4, #0x2]
	ldrh	r2, [r1, #0x0]
	add		r0, r0, r2
_0803aaea:
	strh	r0, [r1, #0x0]
	add		r3, r1, #0x0
	b		_0803ab12
_0803aaf0:
	mov		r5, #0x0
	ldrsh	r0, [r4, r5]
	add		r3, #0x92
	cmp		r0, #0x0
	bge		_0803aafc
	add		r0, #0x3
_0803aafc:
	ldrh	r2, [r3, #0x0]
	mov		r6, #0x0
	ldrsh	r1, [r3, r6]
	asr		r0, r0, #0x2
	cmp		r1, r0
	blt		_0803ab0c
	ldrh	r0, [r4, #0x6]
	b		_0803ab0e
_0803ab0c:
	ldrh	r0, [r4, #0x2]
_0803ab0e:
	add		r0, r2, r0
_0803ab10:
	strh	r0, [r3, #0x0]
_0803ab12:
	add		r2, r3, #0x0
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	ldrh	r5, [r4, #0x0]
	mov		r6, #0x0
	ldrsh	r0, [r4, r6]
	cmp		r1, r0
	blt		_0803ab24
	strh	r5, [r2, #0x0]
_0803ab24:
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	cmp		r0, #0x0
	bge		_0803ab30
	mov		r0, #0x0
	strh	r0, [r3, #0x0]
_0803ab30:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3AB36, 0x2
	thumb_func_end sub_0803a9e0

	thumb_func_start sub_0803ab38
sub_0803ab38:
	push	{ r4, lr }
	add		r2, r0, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803ab4e
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	b		_0803abb6
_0803ab4e:
	add		r0, r2, #0x0
	add		r0, #0x92
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	mov		r1, #0x0
	sub		r0, #0xe
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xc
	bne		_0803ab64
	mov		r1, #0x80
	lsl		r1, r1, #0x2
_0803ab64:
	cmp		r0, #0x8
	bne		_0803ab6e
	mov		r4, #0x80
	lsl		r4, r4, #0x2
	add		r1, r1, r4
_0803ab6e:
	add		r0, r2, #0x0
	add		r0, #0x68
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	cmp		r0, #0x0
	beq		_0803ab80
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	add		r1, r1, r0
_0803ab80:
	mov		r4, #0xbc
	lsl		r4, r4, #0x1
	add		r0, r2, r4
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	ldr		r0, _0803abbc
	add		r2, r3, r0
	add		r0, r2, #0x0
	mul		r0, r2
	cmp		r0, #0x0
	bge		_0803ab9c
	ldr		r3, _0803abc0
	add		r0, r0, r3
_0803ab9c:
	asr		r0, r0, #0xc
	mul		r0, r2
	cmp		r0, #0x0
	bge		_0803aba8
	ldr		r4, _0803abc0
	add		r0, r0, r4
_0803aba8:
	asr		r0, r0, #0xc
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r1, r1, r2
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
_0803abb6:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0803abbc:	.4byte 0xFFFFF000
_0803abc0:	.4byte 0x00000FFF
	thumb_func_end sub_0803ab38

	thumb_func_start sub_0803abc4
sub_0803abc4:
	add		r2, r0, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803abd8
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	b		_0803ac2c
_0803abd8:
	add		r0, r2, #0x0
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	asr		r3, r0, #0xf
	mov		r1, #0x0
	add		r0, r2, #0x0
	add		r0, #0x84
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x8
	bne		_0803abf0
	mov		r1, #0x80
	lsl		r1, r1, #0x2
_0803abf0:
	add		r0, r2, #0x0
	add		r0, #0x68
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x8
	bne		_0803ac02
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	add		r1, r1, r0
_0803ac02:
	ldr		r0, _0803ac30
	add		r2, r3, r0
	add		r0, r2, #0x0
	mul		r0, r2
	cmp		r0, #0x0
	bge		_0803ac12
	ldr		r3, _0803ac34
	add		r0, r0, r3
_0803ac12:
	asr		r0, r0, #0xc
	mul		r0, r2
	cmp		r0, #0x0
	bge		_0803ac1e
	ldr		r2, _0803ac34
	add		r0, r0, r2
_0803ac1e:
	asr		r0, r0, #0xc
	mov		r3, #0x80
	lsl		r3, r3, #0x5
	add		r1, r1, r3
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
_0803ac2c:
	bx		lr

.incbin "base.gba", 0x3AC2E, 0x2

_0803ac30:	.4byte 0xFFFFF000
_0803ac34:	.4byte 0x00000FFF
	thumb_func_end sub_0803abc4

	thumb_func_start sub_0803ac38
sub_0803ac38:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	add		r3, r1, #0x0
	ldr		r0, [r6, #0x48]
	mov		r5, #0x20
	and		r0, r5
	cmp		r0, #0x0
	beq		_0803aca4
	mov		r0, #0xcd
	lsl		r0, r0, #0x1
	add		r4, r6, r0
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803ac64
	b		_0803b0e6
_0803ac64:
	ldr		r2, _0803ac98
	add		r0, r6, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r0, r0, #0x1
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	ldr		r2, _0803ac9c
	ldr		r1, _0803aca0
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	bl		sub_08070f0c
	ldrb	r1, [r4, #0x0]
	mov		r0, #0xfc
	and		r0, r1
	strb	r0, [r4, #0x0]
	b		_0803b0e6

_0803ac98:	.4byte 0x081077b4
_0803ac9c:	.4byte 0x08124544
_0803aca0:	.4byte 0x081245c8

_0803aca4:
	ldr		r1, _0803ad30
	add		r0, r3, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803ad44
	ldr		r2, _0803ad34
	add		r4, r3, r2
	ldr		r0, [r4, #0x0]
	cmp		r6, r0
	bne		_0803acf4
	ldr		r2, _0803ad38
	add		r0, r6, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r0, r0, #0x1
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	ldr		r2, _0803ad3c
	ldr		r1, _0803ad40
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	bl		sub_08070f0c
	mov		r0, #0xcd
	lsl		r0, r0, #0x1
	add		r2, r6, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfc
	and		r0, r1
	strb	r0, [r2, #0x0]
_0803acf4:
	ldr		r0, [r4, #0x0]
	cmp		r6, r0
	beq		_0803acfc
	b		_0803b0e6
_0803acfc:
	ldr		r0, [r6, #0x48]
	and		r0, r5
	cmp		r0, #0x0
	beq		_0803ad06
	b		_0803b0e6
_0803ad06:
	ldr		r2, _0803ad3c
	ldr		r0, _0803ad40
	mov		r1, #0xa1
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	bl		sub_08070f0c
	mov		r0, #0xcd
	lsl		r0, r0, #0x1
	add		r2, r6, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfc
	and		r0, r1
	mov		r1, #0xdf
	b		_0803b026

_0803ad30:	.4byte 0x000007D4
_0803ad34:	.4byte 0x00000814
_0803ad38:	.4byte 0x081077b4
_0803ad3c:	.4byte 0x08124544
_0803ad40:	.4byte 0x081245c8

_0803ad44:
	add		r0, r6, #0x0
	add		r0, #0x78
	ldrb	r1, [r0, #0x0]
	add		r4, r0, #0x0
	cmp		r1, #0x3
	bne		_0803ad52
	b		_0803b0e6
_0803ad52:
	cmp		r1, #0x4
	bne		_0803add4
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	cmp		r2, #0x0
	beq		_0803ad6c
	b		_0803b0e6
_0803ad6c:
	ldr		r1, _0803adc4
	add		r0, r3, r1
	ldr		r1, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x92
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	cmp		r6, r1
	beq		_0803ad82
	b		_0803b0e6
_0803ad82:
	ldr		r0, [r6, #0x48]
	and		r0, r5
	cmp		r0, #0x0
	beq		_0803ad8c
	b		_0803b0e6
_0803ad8c:
	ldr		r0, _0803adc8
	ldrh	r0, [r0, #0x0]
	ldr		r2, _0803adcc
	ldr		r1, _0803add0
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	bl		sub_08070f0c
	mov		r0, #0xa1
	bl		sub_0807073c
	mov		r0, #0xcd
	lsl		r0, r0, #0x1
	add		r2, r6, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfc
	and		r0, r1
	mov		r1, #0x20
	orr		r0, r1
	strb	r0, [r2, #0x0]
	b		_0803b0e6

.incbin "base.gba", 0x3ADC2, 0x2

_0803adc4:	.4byte 0x00000814
_0803adc8:	.4byte 0x081077b4
_0803adcc:	.4byte 0x08124544
_0803add0:	.4byte 0x081245c8

_0803add4:
	cmp		r1, #0x5
	bne		_0803adda
	b		_0803b0e6
_0803adda:
	cmp		r1, #0x6
	bne		_0803ade0
	b		_0803b0e6
_0803ade0:
	add		r2, r6, #0x0
	add		r2, #0x4c
	ldrb	r1, [r2, #0x0]
	mov		r3, #0x8
	add		r0, r3, #0x0
	and		r0, r1
	mov		r10, r2
	cmp		r0, #0x0
	beq		_0803ae24
	ldr		r0, [r6, #0x8]
	cmp		r0, #0x0
	beq		_0803adfa
	b		_0803b0e6
_0803adfa:
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803ae12
	mov		r0, #0x62
	bl		sub_0807073c
	b		_0803b0e6
_0803ae12:
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803ae1c
	b		_0803b0e6
_0803ae1c:
	mov		r0, #0x61
	bl		sub_0807073c
	b		_0803b0e6
_0803ae24:
	add		r0, r6, #0x0
	bl		sub_0803ab38
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	add		r0, r6, #0x0
	add		r0, #0x94
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r7, r0, #0x0
	cmp		r1, #0x0
	bgt		_0803ae70
	lsl		r0, r5, #0x10
	asr		r0, r0, #0x18
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	cmp		r0, #0x0
	bge		_0803ae4a
	mov		r3, #0x0
_0803ae4a:
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0xf
	ble		_0803ae54
	mov		r3, #0xf
_0803ae54:
	ldr		r2, _0803ae6c
	mov		r1, r10
	ldrb	r0, [r1, #0x0]
	mov		r1, #0x7
	and		r1, r0
	lsl		r0, r3, #0x10
	asr		r0, r0, #0xe
	lsl		r1, r1, #0x6
	add		r0, r0, r1
	add		r0, r0, r2
	ldrh	r2, [r0, #0x0]
	b		_0803aeb4

_0803ae6c:	.4byte 0x0810757c

_0803ae70:
	lsl		r0, r5, #0x10
	asr		r0, r0, #0x18
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	cmp		r0, #0x0
	bge		_0803ae7e
	mov		r3, #0x0
_0803ae7e:
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0xf
	ble		_0803ae88
	mov		r3, #0xf
_0803ae88:
	ldr		r2, _0803af98
	mov		r1, r10
	ldrb	r0, [r1, #0x0]
	mov		r1, #0x7
	and		r1, r0
	lsl		r0, r3, #0x10
	asr		r0, r0, #0xe
	lsl		r1, r1, #0x6
	add		r0, r0, r1
	add		r0, r0, r2
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r7, r2]
	mul		r1, r0
	ldr		r0, _0803af9c
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0803aeb0
	ldr		r1, _0803afa0
	add		r0, r0, r1
_0803aeb0:
	lsl		r0, r0, #0x1
	lsr		r2, r0, #0x10
_0803aeb4:
	ldr		r0, _0803afa4
	add		r3, r0, #0x0
	add		r3, #0x24
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x2
	bne		_0803aee0
	add		r0, r6, #0x0
	add		r0, #0x9c
	ldrh	r0, [r0, #0x0]
	mul		r0, r2
	cmp		r0, #0x0
	bge		_0803aece
	add		r0, #0x3f
_0803aece:
	lsl		r0, r0, #0xa
	lsr		r5, r0, #0x10
	add		r2, r5, #0x0
	lsl		r0, r2, #0x10
	asr		r1, r0, #0x10
	lsr		r0, r0, #0x1f
	add		r1, r1, r0
	lsl		r1, r1, #0xf
	lsr		r5, r1, #0x10
_0803aee0:
	mov		r8, r10
	mov		r0, r8
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r0, r0, #0x1
	ldr		r1, _0803afa8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldr		r1, _0803afac
	mov		r9, r1
	ldr		r4, _0803afb0
	lsl		r0, r0, #0x3
	add		r0, r0, r4
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r9
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	str		r3, [sp, #0x0]
	bl		sub_0807169c
	mov		r2, r8
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r0, r0, #0x1
	ldr		r1, _0803afa8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x3
	add		r0, r0, r4
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r9
	ldr		r0, [r0, #0x0]
	lsl		r2, r5, #0x10
	asr		r2, r2, #0x10
	mov		r1, #0x1
	bl		sub_08071704
	add		r0, r6, #0x0
	add		r0, #0x7e
	ldrb	r0, [r0, #0x0]
	ldr		r3, [sp, #0x0]
	cmp		r0, #0xd
	bne		_0803afbc
	mov		r2, #0xcd
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803af58
	b		_0803b0e6
_0803af58:
	ldr		r1, _0803afb4
	add		r0, r3, r1
	ldr		r0, [r0, #0x0]
	cmp		r6, r0
	bne		_0803af92
	ldr		r0, [r6, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803af92
	ldr		r2, _0803afb8
	mov		r0, r8
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r0, r0, #0x1
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	bl		sub_0807073c
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r2, r6, r1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfe
	and		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strb	r0, [r2, #0x0]
_0803af92:
	mov		r0, #0x0
	b		_0803b0e4

.incbin "base.gba", 0x3AF96, 0x2

_0803af98:	.4byte 0x0810757c
_0803af9c:	.4byte 0x00000155
_0803afa0:	.4byte 0x00007FFF
_0803afa4:	.4byte RunGameLogic_CallBack
_0803afa8:	.4byte 0x081077b4
_0803afac:	.4byte 0x08124544
_0803afb0:	.4byte 0x081245c8
_0803afb4:	.4byte 0x00000814
_0803afb8:	.4byte 0x08107794

_0803afbc:
	mov		r2, #0xc6
	lsl		r2, r2, #0x4
	add		r0, r3, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0803afca
	b		_0803b0e6
_0803afca:
	add		r0, r6, #0x0
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803b034
	mov		r0, #0x0
	strh	r0, [r7, #0x0]
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803aff0
	b		_0803b0e6
_0803aff0:
	ldr		r2, _0803b02c
	add		r0, r3, r2
	ldr		r0, [r0, #0x0]
	cmp		r6, r0
	bne		_0803b0e6
	ldr		r0, [r6, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803b0e6
	mov		r0, r8
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r0, r0, #0x1
	ldr		r1, _0803b030
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	bl		sub_0807073c
	mov		r0, #0xcd
	lsl		r0, r0, #0x1
	add		r2, r6, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x1
	orr		r0, r1
	mov		r1, #0xfd
_0803b026:
	and		r0, r1
	strb	r0, [r2, #0x0]
	b		_0803b0e6

_0803b02c:	.4byte 0x00000814
_0803b030:	.4byte 0x081077b4

_0803b034:
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x2
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803b0d8
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803b090
	mov		r2, #0x0
	ldrsh	r0, [r7, r2]
	cmp		r0, #0x0
	bne		_0803b05a
	mov		r0, #0x60
	strh	r0, [r7, #0x0]
_0803b05a:
	ldrh	r1, [r7, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r7, r2]
	cmp		r0, #0x0
	ble		_0803b068
	sub		r0, r1, #0x1
	strh	r0, [r7, #0x0]
_0803b068:
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	cmp		r1, #0x20
	bne		_0803b0e6
	ldr		r2, _0803b088
	add		r0, r3, r2
	ldr		r0, [r0, #0x0]
	cmp		r6, r0
	bne		_0803b0e6
	ldr		r0, [r6, #0x48]
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803b0e6
	ldr		r2, _0803b08c
	mov		r0, r8
	b		_0803b0ac

_0803b088:	.4byte 0x00000814
_0803b08c:	.4byte 0x08107794

_0803b090:
	ldr		r2, _0803b0d0
	add		r0, r3, r2
	ldr		r0, [r0, #0x0]
	cmp		r6, r0
	bne		_0803b0e6
	ldr		r0, [r6, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803b0e6
	mov		r0, #0x60
	strh	r0, [r7, #0x0]
	ldr		r2, _0803b0d4
	mov		r0, r10
_0803b0ac:
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r0, r0, #0x1
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	bl		sub_0807073c
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r2, r6, r1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfe
	and		r0, r1
	orr		r0, r4
	strb	r0, [r2, #0x0]
	b		_0803b0e6

.incbin "base.gba", 0x3B0CE, 0x2

_0803b0d0:	.4byte 0x00000814
_0803b0d4:	.4byte 0x081077a4

_0803b0d8:
	ldrh	r1, [r7, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r7, r2]
	cmp		r0, #0x5f
	bgt		_0803b0e6
	add		r0, r1, #0x1
_0803b0e4:
	strh	r0, [r7, #0x0]
_0803b0e6:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3B0F6, 0x2
	thumb_func_end sub_0803ac38

	thumb_func_start sub_0803b0f8
sub_0803b0f8:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	ldr		r2, [r4, #0x48]
	mov		r3, #0x80
	lsl		r3, r3, #0x7
	add		r0, r2, #0x0
	and		r0, r3
	cmp		r0, #0x0
	beq		_0803b10e
	b		_0803b298
_0803b10e:
	mov		r0, #0x20
	and		r0, r2
	cmp		r0, #0x0
	bne		_0803b1ce
	add		r0, r4, #0x0
	add		r0, #0x78
	ldrb	r1, [r0, #0x0]
	add		r7, r0, #0x0
	cmp		r1, #0x4
	bne		_0803b124
	b		_0803b298
_0803b124:
	add		r5, r4, #0x0
	add		r5, #0x96
	ldrh	r1, [r5, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803b134
	b		_0803b25c
_0803b134:
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803b1b8
	add		r0, r4, #0x0
	add		r0, #0x7e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xf
	bne		_0803b1b8
	ldr		r1, _0803b1ac
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803b1b8
	mov		r0, #0xcd
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803b17c
	mov		r0, #0x10
	orr		r0, r1
	strb	r0, [r2, #0x0]
	mov		r0, #0xa4
	bl		sub_0807073c
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0xb
	orr		r0, r1
	str		r0, [r4, #0x48]
_0803b17c:
	ldrh	r1, [r5, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0x2
	and		r0, r1
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	cmp		r0, #0x0
	beq		_0803b18e
	add		r2, #0xde
_0803b18e:
	ldr		r3, _0803b1b0
	ldr		r0, _0803b1b4
	mov		r1, #0xa4
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	bl		sub_0807169c
	b		_0803b298

_0803b1ac:	.4byte 0x000007D4
_0803b1b0:	.4byte 0x08124544
_0803b1b4:	.4byte 0x081245c8

_0803b1b8:
	mov		r0, #0xcd
	lsl		r0, r0, #0x1
	add		r5, r4, r0
	ldrb	r1, [r5, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803b1d6
	mov		r0, #0xef
	and		r0, r1
	strb	r0, [r5, #0x0]
_0803b1ce:
	mov		r0, #0xa4
	bl		sub_08070808
	b		_0803b298
_0803b1d6:
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	ble		_0803b1e6
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x0
	beq		_0803b228
_0803b1e6:
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0xb
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803b298
	ldr		r0, _0803b218
	ldrh	r0, [r0, #0x0]
	ldr		r2, _0803b21c
	ldr		r1, _0803b220
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	bl		sub_08070f0c
	ldr		r0, [r4, #0x48]
	ldr		r1, _0803b224
	and		r0, r1
	b		_0803b24c

.incbin "base.gba", 0x3B216, 0x2

_0803b218:	.4byte 0x0810777c
_0803b21c:	.4byte 0x08124544
_0803b220:	.4byte 0x081245c8
_0803b224:	.4byte 0xfffbffff

_0803b228:
	ldr		r0, [r4, #0x48]
	mov		r6, #0x80
	lsl		r6, r6, #0xb
	and		r0, r6
	cmp		r0, #0x0
	bne		_0803b298
	ldr		r2, _0803b258
	asr		r0, r1, #0x18
	cmp		r0, #0x3
	ble		_0803b23e
	mov		r0, #0x3
_0803b23e:
	lsl		r0, r0, #0x1
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	bl		sub_0807073c
	ldr		r0, [r4, #0x48]
	orr		r0, r6
_0803b24c:
	str		r0, [r4, #0x48]
	ldrb	r1, [r5, #0x0]
	mov		r0, #0xef
	and		r0, r1
	strb	r0, [r5, #0x0]
	b		_0803b298

_0803b258:	.4byte 0x0810777c

_0803b25c:
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	and		r2, r0
	cmp		r2, #0x0
	beq		_0803b298
	ldr		r0, _0803b2a0
	ldrh	r0, [r0, #0x0]
	ldr		r2, _0803b2a4
	ldr		r1, _0803b2a8
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	bl		sub_08070f0c
	ldr		r0, [r4, #0x48]
	ldr		r1, _0803b2ac
	and		r0, r1
	str		r0, [r4, #0x48]
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xef
	and		r0, r1
	strb	r0, [r2, #0x0]
_0803b298:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3B29E, 0x2

_0803b2a0:	.4byte 0x0810777c
_0803b2a4:	.4byte 0x08124544
_0803b2a8:	.4byte 0x081245c8
_0803b2ac:	.4byte 0xfffbffff
	thumb_func_end sub_0803b0f8

	thumb_func_start sub_0803b2b0
sub_0803b2b0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	mov		r8, r0
	ldr		r1, _0803b35c
	add		r2, r5, r1
	ldr		r6, _0803b360
	add		r0, r5, r6
	ldr		r0, [r0, #0x0]
	mov		r10, r0
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803b3aa
	ldr		r0, [r2, #0x18]
	mov		r9, r0
	ldr		r2, [r2, #0x1c]
	mov		r12, r2
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0803b33e
	ldr		r7, _0803b364
	ldr		r2, _0803b368
	add		r3, r5, r2
	add		r4, r0, #0x0
_0803b2f4:
	ldr		r2, [r3, #0x0]
	cmp		r2, r10
	beq		_0803b336
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r6, #0x0
	ldrsh	r0, [r0, r6]
	cmp		r0, #0x0
	beq		_0803b336
	ldr		r0, [r2, #0x0]
	mov		r6, r9
	sub		r1, r6, r0
	cmp		r1, #0x0
	bge		_0803b312
	add		r1, r1, r7
_0803b312:
	asr		r1, r1, #0x10
	ldr		r0, [r2, #0x4]
	mov		r2, r12
	sub		r0, r2, r0
	cmp		r0, #0x0
	bge		_0803b320
	add		r0, r0, r7
_0803b320:
	asr		r0, r0, #0x10
	add		r6, r1, #0x0
	mul		r6, r1
	add		r1, r6, #0x0
	add		r2, r0, #0x0
	mul		r2, r0
	add		r0, r2, #0x0
	add		r0, r1, r0
	cmp		r0, r8
	bge		_0803b336
	mov		r8, r0
_0803b336:
	add		r3, #0x4
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0803b2f4
_0803b33e:
	ldr		r0, _0803b36c
	cmp		r8, r0
	bgt		_0803b3aa
	ldr		r6, _0803b370
	add		r1, r5, r6
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0803b374
	mov		r0, #0x18
	strb	r0, [r1, #0x0]
	mov		r0, #0x88
	bl		sub_0807073c
	b		_0803b378

.incbin "base.gba", 0x3B35A, 0x2

_0803b35c:	.4byte 0x00000824
_0803b360:	.4byte 0x00000814
_0803b364:	.4byte 0x0000FFFF
_0803b368:	.4byte 0x000007F4
_0803b36c:	.4byte 0x00007FFF
_0803b370:	.4byte 0x00000C82

_0803b374:
	sub		r0, #0x1
	strb	r0, [r1, #0x0]
_0803b378:
	mov		r0, r8
	cmp		r0, #0x0
	bge		_0803b382
	ldr		r1, _0803b3b8
	add		r0, r0, r1
_0803b382:
	asr		r0, r0, #0xa
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	sub		r2, r2, r0
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	ldr		r3, _0803b3bc
	ldr		r0, _0803b3c0
	mov		r6, #0x88
	lsl		r6, r6, #0x3
	add		r0, r0, r6
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	bl		sub_0807169c
_0803b3aa:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803b3b8:	.4byte 0x000003FF
_0803b3bc:	.4byte 0x08124544
_0803b3c0:	.4byte 0x081245c8
	thumb_func_end sub_0803b2b0

	thumb_func_start sub_0803b3c4
sub_0803b3c4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x18
	lsl		r1, r1, #0x10
	lsr		r3, r1, #0x10
	cmp		r1, #0x0
	bge		_0803b3d6
	mov		r3, #0x0
_0803b3d6:
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0xf
	ble		_0803b3e0
	mov		r3, #0xf
_0803b3e0:
	ldr		r2, _0803b400
	add		r0, r4, #0x0
	add		r0, #0x4c
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x7
	and		r1, r0
	lsl		r0, r3, #0x10
	asr		r0, r0, #0xe
	lsl		r1, r1, #0x6
	add		r0, r0, r1
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3B3FE, 0x2

_0803b400:	.4byte 0x0810757c
	thumb_func_end sub_0803b3c4

	thumb_func_start sub_0803b404
sub_0803b404:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	ldr		r1, _0803b47c
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	str		r0, [sp, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x91
	ldrb	r0, [r0, #0x0]
	add		r0, #0x1
	mov		r8, r0
	mov		r0, #0x7
	mov		r3, r8
	and		r3, r0
	mov		r8, r3
	ldr		r1, _0803b480
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	str		r0, [sp, #0x4]
	add		r0, r6, #0x0
	mov		r1, #0x1
	bl		sub_08044894
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803b466
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x0
	beq		_0803b45a
	b		_0803b558
_0803b45a:
	add		r0, r7, #0x0
	add		r0, #0xae
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x6
	bgt		_0803b522
_0803b466:
	mov		r3, r8
	cmp		r3, #0x1
	bne		_0803b488
	add		r0, r7, #0x0
	add		r0, #0xae
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x2
	bgt		_0803b522
	b		_0803b546

.incbin "base.gba", 0x3B47A, 0x2

_0803b47c:	.4byte 0x00000C64
_0803b480:	.4byte 0x000007DC

_0803b484:
	add		r4, r2, #0x0
	b		_0803b4c4
_0803b488:
	mov		r4, #0x0
	ldr		r3, _0803b528
	add		r0, r6, r3
	mov		r1, #0x91
	add		r1, r1, r7
	mov		r9, r1
	add		r5, r0, #0x0
	mov		r3, #0x90
	add		r3, r3, r7
	mov		r10, r3
	ldrb	r0, [r5, #0x0]
	cmp		r4, r0
	bge		_0803b4c2
_0803b4a2:
	lsl		r1, r4, #0x18
	lsr		r1, r1, #0x18
	add		r0, r6, #0x0
	bl		sub_08044894
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803b484
	add		r4, #0x1
	ldrb	r1, [r5, #0x0]
	cmp		r4, r1
	blt		_0803b4a2
_0803b4c2:
	mov		r4, #0x0
_0803b4c4:
	ldr		r0, _0803b52c
	ldrh	r3, [r0, #0x38]
	mov		r0, r9
	ldrb	r1, [r0, #0x0]
	add		r1, #0x1
	mov		r2, #0x7
	and		r1, r2
	add		r0, r4, #0x0
	add		r0, #0x91
	ldrb	r0, [r0, #0x0]
	add		r0, #0x1
	and		r0, r2
	sub		r1, r1, r0
	add		r2, r3, #0x0
	mul		r2, r1
	mov		r1, r10
	ldrb	r0, [r1, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x90
	ldrb	r1, [r1, #0x0]
	sub		r0, r0, r1
	add		r2, r2, r0
	ldr		r1, _0803b530
	ldr		r3, _0803b534
	add		r0, r6, r3
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r8
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r2, r0
	bge		_0803b558
	add		r0, r7, #0x0
	add		r0, #0xae
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	ldr		r3, _0803b538
	ldr		r1, [sp, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	ldr		r1, [sp, #0x0]
	add		r0, r0, r1
	lsl		r1, r0, #0x2
	add		r0, r1, r3
	ldrb	r0, [r0, #0x0]
	cmp		r2, r0
	blt		_0803b53c
_0803b522:
	mov		r0, #0x1
	b		_0803b55a

.incbin "base.gba", 0x3B526, 0x2

_0803b528:	.4byte 0x000007F1
_0803b52c:	.4byte RunGameLogic_CallBack
_0803b530:	.4byte 0x081078d8
_0803b534:	.4byte 0x000007DC
_0803b538:	.4byte 0x081078b4

_0803b53c:
	add		r0, r3, #0x1
	add		r0, r1, r0
	ldrb	r0, [r0, #0x0]
	cmp		r2, r0
	blt		_0803b54a
_0803b546:
	mov		r0, #0x0
	b		_0803b55a
_0803b54a:
	add		r0, r3, #0x2
	add		r0, r1, r0
	ldrb	r0, [r0, #0x0]
	cmp		r2, r0
	bge		_0803b558
	mov		r0, #0x3
	b		_0803b55a
_0803b558:
	mov		r0, #0x2
_0803b55a:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3B56A, 0x3A2
	thumb_func_end sub_0803b404

	thumb_func_start sub_0803b90c
sub_0803b90c:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r1, r4, #0x0
	add		r1, #0xba
	ldrh	r1, [r1, #0x0]
	lsr		r7, r1, #0x1
	ldr		r1, [r4, #0x48]
	mov		r2, #0x20
	and		r1, r2
	cmp		r1, #0x0
	bne		_0803b994
	add		r1, r4, #0x0
	add		r1, #0x6a
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	cmp		r1, #0x0
	beq		_0803b97c
	mov		r5, #0x0
	cmp		r5, r7
	bge		_0803b956
_0803b936:
	lsl		r1, r5, #0x18
	lsr		r1, r1, #0x18
	add		r0, r6, #0x0
	bl		sub_08044894
	ldr		r0, [r0, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803b950
	mov		r0, #0x4
	b		_0803b9f2
_0803b950:
	add		r5, #0x1
	cmp		r5, r7
	blt		_0803b936
_0803b956:
	cmp		r7, #0x7
	beq		_0803b978
	add		r1, r7, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r6, #0x0
	bl		sub_08044894
	add		r0, #0x90
	add		r1, r4, #0x0
	add		r1, #0x90
	ldrb	r1, [r1, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r1, r0
	bne		_0803b978
	mov		r0, #0x0
	b		_0803b9f2
_0803b978:
	mov		r0, #0x2
	b		_0803b9f2
_0803b97c:
	add		r1, r4, #0x0
	add		r1, #0xac
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	cmp		r1, #0x0
	bne		_0803b994
	add		r1, r4, #0x0
	add		r1, #0x68
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	cmp		r1, #0x0
	beq		_0803b998
_0803b994:
	mov		r0, #0x3
	b		_0803b9f2
_0803b998:
	cmp		r7, #0x7
	bhi		_0803b9f2
	lsl		r0, r7, #0x2
	ldr		r1, _0803b9a8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x3B9A6, 0x2

_0803b9a8:	.4byte 0x0803b9ac
_0803b9ac:	.4byte 0x0803b9cc

.incbin "base.gba", 0x3B9B0, 0x1C
	thumb_func_end sub_0803b90c


.incbin "base.gba", 0x3B9CC, 0x26

_0803b9f2:

.incbin "base.gba", 0x3B9F2, 0x6
	thumb_func_start sub_0803b9f8
sub_0803b9f8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r2, _0803ba10
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0803ba14
	cmp		r0, #0x1
	ble		_0803ba1e
	cmp		r0, #0x2
	beq		_0803ba1a
	b		_0803ba1e

_0803ba10:	.4byte 0x000007DC

_0803ba14:
	mov		r2, #0x87
	lsl		r2, r2, #0x1
	b		_0803ba22
_0803ba1a:
	mov		r2, #0x96
	b		_0803ba22
_0803ba1e:
	mov		r2, #0xff
	lsl		r2, r2, #0x1
_0803ba22:
	ldr		r3, _0803ba54
	add		r0, r1, r3
	strh	r2, [r0, #0x0]
	ldr		r0, _0803ba58
	mov		r1, #0xe6
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08049164
	add		r2, r0, #0x0
	str		r4, [r2, #0x54]
	mov		r3, #0xbd
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	ldrh	r0, [r0, #0x0]
	ldr		r1, _0803ba5c
	add		r0, r0, r1
	cmp		r0, #0xc
	bhi		_0803bad6
	lsl		r0, r0, #0x2
	ldr		r1, _0803ba60
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x3BA52, 0x2

_0803ba54:	.4byte 0x00000C62
_0803ba58:	.4byte RunGameLogic_CallBack
_0803ba5c:	.4byte 0xFFFFF000
_0803ba60:	.4byte 0x0803ba64
_0803ba64:	.4byte 0x0803ba98

.incbin "base.gba", 0x3BA68, 0x30

_0803ba98:
.incbin "base.gba", 0x3BA98, 0x4
.incbin "base.gba", 0x3BA9C, 0x4
_0803baa0:
.incbin "base.gba", 0x3BAA0, 0x4
.incbin "base.gba", 0x3BAA4, 0x4

.incbin "base.gba", 0x3BAA8, 0x8

_0803bab0:
.incbin "base.gba", 0x3BAB0, 0x4
.incbin "base.gba", 0x3BAB4, 0x4
_0803bab8:
.incbin "base.gba", 0x3BAB8, 0x4
.incbin "base.gba", 0x3BABC, 0x4
_0803bac0:
.incbin "base.gba", 0x3BAC0, 0x4
.incbin "base.gba", 0x3BAC4, 0x4
_0803bac8:
.incbin "base.gba", 0x3BAC8, 0x4
.incbin "base.gba", 0x3BACC, 0x4

.incbin "base.gba", 0x3BAD0, 0x6

_0803bad6:
	mov		r2, #0xbd
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldrh	r1, [r0, #0x0]
	ldr		r0, _0803baf4
	cmp		r1, r0
	beq		_0803baec
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080373dc
_0803baec:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3BAF2, 0x2

_0803baf4:	.4byte 0x0000100B
	thumb_func_end sub_0803b9f8

	thumb_func_start sub_0803baf8
sub_0803baf8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	mov		r0, #0x0
	mov		r8, r0
	mov		r7, #0x0
	add		r0, r5, #0x0
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r4, r0, #0x1
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r2, r5, r1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfd
	and		r0, r1
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	mov		r3, #0xc7
	lsl		r3, r3, #0x1
	add		r1, r5, r3
	mov		r0, #0x30
	strh	r0, [r1, #0x0]
	cmp		r4, #0x0
	beq		_0803bb3e
	sub		r1, r4, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r6, #0x0
	bl		sub_08044894
	mov		r8, r0
_0803bb3e:
	cmp		r4, #0x7
	beq		_0803bb50
	add		r1, r4, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r6, #0x0
	bl		sub_08044894
	add		r7, r0, #0x0
_0803bb50:
	cmp		r4, #0x0
	beq		_0803bb66
	mov		r1, r8
	ldr		r0, [r1, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803bb66
	cmp		r4, #0x5
	ble		_0803bbac
_0803bb66:
	cmp		r4, #0x7
	beq		_0803bb76
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803bbac
_0803bb76:
	cmp		r4, #0x0
	beq		_0803bb94
	add		r2, r5, #0x0
	add		r2, #0xae
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	mov		r0, r8
	add		r0, #0xae
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	sub		r1, r1, r0
	add		r7, r2, #0x0
	cmp		r1, #0x1
	ble		_0803bbb6
	b		_0803bbac
_0803bb94:
	add		r2, r5, #0x0
	add		r2, #0xae
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	add		r0, r7, #0x0
	add		r0, #0xae
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	sub		r1, r1, r0
	add		r7, r2, #0x0
	cmp		r1, #0x2
	ble		_0803bbb6
_0803bbac:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_0803b9f8
	b		_0803bbde
_0803bbb6:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_08044894
	ldr		r0, [r0, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803bbde
	cmp		r4, #0x7
	beq		_0803bbd6
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	cmp		r0, #0x2
	ble		_0803bbde
_0803bbd6:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_0803b9f8
_0803bbde:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803baf8

	thumb_func_start sub_0803bbe8
sub_0803bbe8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	add		r7, r1, #0x0
	mov		r6, #0x0
	mov		r8, r6
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r5, r0, #0x1
	mov		r0, #0xc7
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0803bc0e
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	b		_0803be3c
_0803bc0e:
	cmp		r5, #0x0
	beq		_0803bc20
	sub		r1, r5, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r7, #0x0
	bl		sub_08044894
	add		r6, r0, #0x0
_0803bc20:
	cmp		r5, #0x7
	beq		_0803bc32
	add		r1, r5, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r7, #0x0
	bl		sub_08044894
	mov		r8, r0
_0803bc32:
	cmp		r5, #0x0
	beq		_0803bcd6
	ldr		r0, [r6, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803bcd6
	cmp		r5, #0x5
	bgt		_0803bcd6
	ldr		r0, _0803bc98
	ldrh	r3, [r0, #0x38]
	add		r0, r6, #0x0
	add		r0, #0x91
	ldrb	r1, [r0, #0x0]
	add		r1, #0x1
	mov		r2, #0x7
	and		r1, r2
	add		r0, r4, #0x0
	add		r0, #0x91
	ldrb	r0, [r0, #0x0]
	add		r0, #0x1
	and		r0, r2
	sub		r1, r1, r0
	add		r2, r3, #0x0
	mul		r2, r1
	add		r0, r6, #0x0
	add		r0, #0x90
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x90
	ldrb	r1, [r1, #0x0]
	sub		r0, r0, r1
	add		r1, r2, r0
	cmp		r1, #0x0
	bge		_0803bc7c
	b		_0803be3c
_0803bc7c:
	cmp		r1, #0x3
	ble		_0803bc82
	mov		r1, #0x3
_0803bc82:
	ldr		r0, _0803bc9c
	add		r0, r1, r0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0803bcb2
	cmp		r0, #0x1
	bgt		_0803bca0
	cmp		r0, #0x0
	beq		_0803bcaa
	b		_0803be3c

.incbin "base.gba", 0x3BC96, 0x2

_0803bc98:	.4byte RunGameLogic_CallBack
_0803bc9c:	.4byte 0x081078f3

_0803bca0:
	cmp		r0, #0x2
	beq		_0803bcc0
	cmp		r0, #0x3
	beq		_0803bcce
	b		_0803be3c
_0803bcaa:
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	b		_0803bdf2
_0803bcb2:
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r2, r4, r3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	orr		r0, r1
	b		_0803bdf8
_0803bcc0:
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfd
	and		r0, r1
	b		_0803bd7a
_0803bcce:
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	b		_0803bd74
_0803bcd6:
	cmp		r5, #0x7
	beq		_0803bd82
	mov		r3, r8
	ldr		r0, [r3, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803bd82
	ldr		r0, _0803bd38
	ldrh	r3, [r0, #0x38]
	add		r0, r4, #0x0
	add		r0, #0x91
	ldrb	r1, [r0, #0x0]
	add		r1, #0x1
	mov		r2, #0x7
	and		r1, r2
	mov		r0, r8
	add		r0, #0x91
	ldrb	r0, [r0, #0x0]
	add		r0, #0x1
	and		r0, r2
	sub		r1, r1, r0
	add		r2, r3, #0x0
	mul		r2, r1
	add		r0, r4, #0x0
	add		r0, #0x90
	ldrb	r0, [r0, #0x0]
	mov		r1, r8
	add		r1, #0x90
	ldrb	r1, [r1, #0x0]
	sub		r0, r0, r1
	add		r1, r2, r0
	cmp		r1, #0x0
	bge		_0803bd1e
	b		_0803be3c
_0803bd1e:
	cmp		r1, #0x3
	ble		_0803bd24
	mov		r1, #0x3
_0803bd24:
	ldr		r0, _0803bd3c
	add		r0, r1, r0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0803bd52
	cmp		r0, #0x1
	bgt		_0803bd40
	cmp		r0, #0x0
	beq		_0803bd4a
	b		_0803be3c

_0803bd38:	.4byte RunGameLogic_CallBack
_0803bd3c:	.4byte 0x081078f7

_0803bd40:
	cmp		r0, #0x2
	beq		_0803bd60
	cmp		r0, #0x3
	beq		_0803bd6e
	b		_0803be3c
_0803bd4a:
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	b		_0803bdf2
_0803bd52:
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	orr		r0, r1
	b		_0803bdf8
_0803bd60:
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r2, r4, r3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfd
	and		r0, r1
	b		_0803bd7a
_0803bd6e:
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
_0803bd74:
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	orr		r0, r1
_0803bd7a:
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	b		_0803be3c
_0803bd82:
	cmp		r5, #0x0
	beq		_0803bda6
	add		r2, r4, #0x0
	add		r2, #0xae
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	add		r0, r6, #0x0
	add		r0, #0xae
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	sub		r1, r1, r0
	add		r6, r2, #0x0
	cmp		r1, #0x1
	ble		_0803bdcc
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	b		_0803bdf2
_0803bda6:
	add		r2, r4, #0x0
	add		r2, #0xae
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	mov		r0, r8
	add		r0, #0xae
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	sub		r1, r1, r0
	add		r6, r2, #0x0
	cmp		r1, #0x2
	ble		_0803bdcc
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	orr		r0, r1
	b		_0803bdf8
_0803bdcc:
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_08044894
	ldr		r0, [r0, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803be00
	cmp		r5, #0x7
	beq		_0803bdec
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp		r0, #0x2
	ble		_0803be00
_0803bdec:
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r2, r4, r3
_0803bdf2:
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfd
	and		r0, r1
_0803bdf8:
	mov		r1, #0xfe
	and		r0, r1
	strb	r0, [r2, #0x0]
	b		_0803be3c
_0803be00:
	mov		r6, #0x0
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	cmp		r6, r5
	bge		_0803be30
_0803be0c:
	lsl		r1, r6, #0x18
	lsr		r1, r1, #0x18
	add		r0, r7, #0x0
	bl		sub_08044894
	ldr		r0, [r0, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803be2a
	ldrb	r0, [r4, #0x0]
	mov		r1, #0xfd
	and		r1, r0
	b		_0803be36
_0803be2a:
	add		r6, #0x1
	cmp		r6, r5
	blt		_0803be0c
_0803be30:
	ldrb	r0, [r4, #0x0]
	mov		r1, #0x2
	orr		r1, r0
_0803be36:
	mov		r0, #0x1
	orr		r1, r0
	strb	r1, [r4, #0x0]
_0803be3c:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3BE46, 0x2
	thumb_func_end sub_0803bbe8

	thumb_func_start sub_0803be48
sub_0803be48:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	add		r7, r1, #0x0
	mov		r6, #0x0
	mov		r8, r6
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r5, r0, #0x1
	mov		r0, #0xc7
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0803be6e
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	b		_0803c094
_0803be6e:
	cmp		r5, #0x0
	beq		_0803be80
	sub		r1, r5, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r7, #0x0
	bl		sub_08044894
	add		r6, r0, #0x0
_0803be80:
	cmp		r5, #0x7
	beq		_0803be92
	add		r1, r5, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r7, #0x0
	bl		sub_08044894
	mov		r8, r0
_0803be92:
	cmp		r5, #0x0
	beq		_0803bf2e
	ldr		r0, [r6, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803bf2e
	cmp		r5, #0x5
	bgt		_0803bf2e
	ldr		r0, _0803bef8
	ldrh	r3, [r0, #0x38]
	add		r0, r6, #0x0
	add		r0, #0x91
	ldrb	r1, [r0, #0x0]
	add		r1, #0x1
	mov		r2, #0x7
	and		r1, r2
	add		r0, r4, #0x0
	add		r0, #0x91
	ldrb	r0, [r0, #0x0]
	add		r0, #0x1
	and		r0, r2
	sub		r1, r1, r0
	add		r2, r3, #0x0
	mul		r2, r1
	add		r0, r6, #0x0
	add		r0, #0x90
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x90
	ldrb	r1, [r1, #0x0]
	sub		r0, r0, r1
	add		r1, r2, r0
	cmp		r1, #0x0
	bge		_0803bedc
	b		_0803c094
_0803bedc:
	cmp		r1, #0x3
	ble		_0803bee2
	mov		r1, #0x3
_0803bee2:
	ldr		r0, _0803befc
	add		r0, r1, r0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0803beee
	b		_0803c044
_0803beee:
	cmp		r0, #0x1
	bgt		_0803bf00
	cmp		r0, #0x0
	beq		_0803bf0a
	b		_0803c094

_0803bef8:	.4byte RunGameLogic_CallBack
_0803befc:	.4byte 0x081078fb

_0803bf00:
	cmp		r0, #0x2
	beq		_0803bf18
	cmp		r0, #0x3
	beq		_0803bf26
	b		_0803c094
_0803bf0a:
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfd
	and		r0, r1
	b		_0803c050
_0803bf18:
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfd
	and		r0, r1
	b		_0803bfd2
_0803bf26:
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	b		_0803bfcc
_0803bf2e:
	cmp		r5, #0x7
	beq		_0803bfda
	mov		r3, r8
	ldr		r0, [r3, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803bfda
	ldr		r0, _0803bf90
	ldrh	r3, [r0, #0x38]
	add		r0, r4, #0x0
	add		r0, #0x91
	ldrb	r1, [r0, #0x0]
	add		r1, #0x1
	mov		r2, #0x7
	and		r1, r2
	mov		r0, r8
	add		r0, #0x91
	ldrb	r0, [r0, #0x0]
	add		r0, #0x1
	and		r0, r2
	sub		r1, r1, r0
	add		r2, r3, #0x0
	mul		r2, r1
	add		r0, r4, #0x0
	add		r0, #0x90
	ldrb	r0, [r0, #0x0]
	mov		r1, r8
	add		r1, #0x90
	ldrb	r1, [r1, #0x0]
	sub		r0, r0, r1
	add		r1, r2, r0
	cmp		r1, #0x0
	bge		_0803bf76
	b		_0803c094
_0803bf76:
	cmp		r1, #0x3
	ble		_0803bf7c
	mov		r1, #0x3
_0803bf7c:
	ldr		r0, _0803bf94
	add		r0, r1, r0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0803bfb0
	cmp		r0, #0x1
	bgt		_0803bf98
	cmp		r0, #0x0
	beq		_0803bfa2
	b		_0803c094

_0803bf90:	.4byte RunGameLogic_CallBack
_0803bf94:	.4byte 0x081078ff

_0803bf98:
	cmp		r0, #0x2
	beq		_0803bfb8
	cmp		r0, #0x3
	beq		_0803bfc6
	b		_0803c094
_0803bfa2:
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfd
	and		r0, r1
	b		_0803c050
_0803bfb0:
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	b		_0803c04a
_0803bfb8:
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r2, r4, r3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfd
	and		r0, r1
	b		_0803bfd2
_0803bfc6:
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
_0803bfcc:
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	orr		r0, r1
_0803bfd2:
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	b		_0803c094
_0803bfda:
	cmp		r5, #0x0
	beq		_0803c004
	add		r2, r4, #0x0
	add		r2, #0xae
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	add		r0, r6, #0x0
	add		r0, #0xae
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	sub		r1, r1, r0
	add		r6, r2, #0x0
	cmp		r1, #0x1
	ble		_0803c024
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfd
	and		r0, r1
	b		_0803c050
_0803c004:
	add		r2, r4, #0x0
	add		r2, #0xae
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	mov		r0, r8
	add		r0, #0xae
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	sub		r1, r1, r0
	add		r6, r2, #0x0
	cmp		r1, #0x2
	ble		_0803c024
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	b		_0803c04a
_0803c024:
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_08044894
	ldr		r0, [r0, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803c058
	cmp		r5, #0x7
	beq		_0803c044
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp		r0, #0x2
	ble		_0803c058
_0803c044:
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r2, r4, r3
_0803c04a:
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	orr		r0, r1
_0803c050:
	mov		r1, #0xfe
	and		r0, r1
	strb	r0, [r2, #0x0]
	b		_0803c094
_0803c058:
	mov		r6, #0x0
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	cmp		r6, r5
	bge		_0803c088
_0803c064:
	lsl		r1, r6, #0x18
	lsr		r1, r1, #0x18
	add		r0, r7, #0x0
	bl		sub_08044894
	ldr		r0, [r0, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803c082
	ldrb	r0, [r4, #0x0]
	mov		r1, #0xfd
	and		r1, r0
	b		_0803c08e
_0803c082:
	add		r6, #0x1
	cmp		r6, r5
	blt		_0803c064
_0803c088:
	ldrb	r0, [r4, #0x0]
	mov		r1, #0x2
	orr		r1, r0
_0803c08e:
	mov		r0, #0x1
	orr		r1, r0
	strb	r1, [r4, #0x0]
_0803c094:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3C09E, 0xF2
	thumb_func_end sub_0803be48

	thumb_func_start sub_0803c190
sub_0803c190:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	add		r7, r1, #0x0
	mov		r6, #0x0
	mov		r8, r6
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r5, r0, #0x1
	mov		r0, #0xc7
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0803c1b6
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	b		_0803c412
_0803c1b6:
	cmp		r5, #0x0
	beq		_0803c1c8
	sub		r1, r5, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r7, #0x0
	bl		sub_08044894
	add		r6, r0, #0x0
_0803c1c8:
	cmp		r5, #0x7
	beq		_0803c1da
	add		r1, r5, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r7, #0x0
	bl		sub_08044894
	mov		r8, r0
_0803c1da:
	cmp		r5, #0x0
	beq		_0803c286
	ldr		r0, [r6, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803c286
	cmp		r5, #0x5
	bgt		_0803c286
	ldr		r0, _0803c240
	ldrh	r3, [r0, #0x38]
	add		r0, r6, #0x0
	add		r0, #0x91
	ldrb	r1, [r0, #0x0]
	add		r1, #0x1
	mov		r2, #0x7
	and		r1, r2
	add		r0, r4, #0x0
	add		r0, #0x91
	ldrb	r0, [r0, #0x0]
	add		r0, #0x1
	and		r0, r2
	sub		r1, r1, r0
	add		r2, r3, #0x0
	mul		r2, r1
	add		r0, r6, #0x0
	add		r0, #0x90
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x90
	ldrb	r1, [r1, #0x0]
	sub		r0, r0, r1
	add		r1, r2, r0
	cmp		r1, #0x0
	bge		_0803c224
	b		_0803c412
_0803c224:
	cmp		r1, #0x3
	ble		_0803c22a
	mov		r1, #0x3
_0803c22a:
	ldr		r0, _0803c244
	add		r0, r1, r0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0803c266
	cmp		r0, #0x1
	bgt		_0803c248
	cmp		r0, #0x0
	beq		_0803c254
	b		_0803c412

.incbin "base.gba", 0x3C23E, 0x2

_0803c240:	.4byte RunGameLogic_CallBack
_0803c244:	.4byte 0x08107903

_0803c248:
	cmp		r0, #0x2
	beq		_0803c278
	cmp		r0, #0x3
	bne		_0803c252
	b		_0803c400
_0803c252:
	b		_0803c412
_0803c254:
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfd
	and		r0, r1
	mov		r1, #0xfe
	and		r0, r1
	b		_0803c410
_0803c266:
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r2, r4, r3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	orr		r0, r1
	mov		r1, #0xfe
	and		r0, r1
	b		_0803c410
_0803c278:
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfd
	and		r0, r1
	b		_0803c40c
_0803c286:
	cmp		r5, #0x7
	beq		_0803c334
	mov		r3, r8
	ldr		r0, [r3, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803c334
	ldr		r0, _0803c2e8
	ldrh	r3, [r0, #0x38]
	add		r0, r4, #0x0
	add		r0, #0x91
	ldrb	r1, [r0, #0x0]
	add		r1, #0x1
	mov		r2, #0x7
	and		r1, r2
	mov		r0, r8
	add		r0, #0x91
	ldrb	r0, [r0, #0x0]
	add		r0, #0x1
	and		r0, r2
	sub		r1, r1, r0
	add		r2, r3, #0x0
	mul		r2, r1
	add		r0, r4, #0x0
	add		r0, #0x90
	ldrb	r0, [r0, #0x0]
	mov		r1, r8
	add		r1, #0x90
	ldrb	r1, [r1, #0x0]
	sub		r0, r0, r1
	add		r1, r2, r0
	cmp		r1, #0x0
	bge		_0803c2ce
	b		_0803c412
_0803c2ce:
	cmp		r1, #0x3
	ble		_0803c2d4
	mov		r1, #0x3
_0803c2d4:
	ldr		r0, _0803c2ec
	add		r0, r1, r0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0803c30c
	cmp		r0, #0x1
	bgt		_0803c2f0
	cmp		r0, #0x0
	beq		_0803c2fa
	b		_0803c412

_0803c2e8:	.4byte RunGameLogic_CallBack
_0803c2ec:	.4byte 0x08107907

_0803c2f0:
	cmp		r0, #0x2
	beq		_0803c31e
	cmp		r0, #0x3
	beq		_0803c32c
	b		_0803c412
_0803c2fa:
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfd
	and		r0, r1
	mov		r1, #0xfe
	and		r0, r1
	b		_0803c410
_0803c30c:
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	orr		r0, r1
	mov		r1, #0xfe
	and		r0, r1
	b		_0803c410
_0803c31e:
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r2, r4, r3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfd
	and		r0, r1
	b		_0803c40c
_0803c32c:
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	b		_0803c406
_0803c334:
	cmp		r5, #0x0
	beq		_0803c362
	add		r2, r4, #0x0
	add		r2, #0xae
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	add		r0, r6, #0x0
	add		r0, #0xae
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	sub		r1, r1, r0
	add		r6, r2, #0x0
	cmp		r1, #0x1
	ble		_0803c38c
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfd
	and		r0, r1
	mov		r1, #0xfe
	and		r0, r1
	b		_0803c410
_0803c362:
	add		r2, r4, #0x0
	add		r2, #0xae
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	mov		r0, r8
	add		r0, #0xae
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	sub		r1, r1, r0
	add		r6, r2, #0x0
	cmp		r1, #0x2
	ble		_0803c38c
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	orr		r0, r1
	mov		r1, #0xfe
	and		r0, r1
	b		_0803c410
_0803c38c:
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_08044894
	ldr		r0, [r0, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803c3be
	cmp		r5, #0x7
	beq		_0803c3ac
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp		r0, #0x2
	ble		_0803c3be
_0803c3ac:
	mov		r3, #0xc8
	lsl		r3, r3, #0x1
	add		r2, r4, r3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	orr		r0, r1
	mov		r1, #0xfe
	and		r0, r1
	b		_0803c410
_0803c3be:
	cmp		r5, #0x5
	bgt		_0803c400
	mov		r6, #0x0
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	cmp		r6, r5
	bge		_0803c3f2
_0803c3ce:
	lsl		r1, r6, #0x18
	lsr		r1, r1, #0x18
	add		r0, r7, #0x0
	bl		sub_08044894
	ldr		r0, [r0, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803c3ec
	ldrb	r0, [r4, #0x0]
	mov		r1, #0xfd
	and		r1, r0
	b		_0803c3f8
_0803c3ec:
	add		r6, #0x1
	cmp		r6, r5
	blt		_0803c3ce
_0803c3f2:
	ldrb	r0, [r4, #0x0]
	mov		r1, #0x2
	orr		r1, r0
_0803c3f8:
	mov		r0, #0x1
	orr		r1, r0
	strb	r1, [r4, #0x0]
	b		_0803c412
_0803c400:
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r2, r4, r1
_0803c406:
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	orr		r0, r1
_0803c40c:
	mov		r1, #0x1
	orr		r0, r1
_0803c410:
	strb	r0, [r2, #0x0]
_0803c412:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803c190

	thumb_func_start sub_0803c41c
sub_0803c41c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	mov		r0, #0x0
	mov		r8, r0
	mov		r7, #0x0
	add		r0, r4, #0x0
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r6, r0, #0x1
	cmp		r6, #0x0
	beq		_0803c446
	sub		r1, r6, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r5, #0x0
	bl		sub_08044894
	mov		r8, r0
_0803c446:
	cmp		r6, #0x7
	beq		_0803c464
	add		r1, r6, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r5, #0x0
	bl		sub_08044894
	add		r7, r0, #0x0
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803c49a
_0803c464:
	cmp		r6, #0x0
	beq		_0803c482
	mov		r1, r8
	ldr		r0, [r1, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803c49a
	add		r2, r4, #0x0
	add		r2, #0xae
	mov		r3, #0x0
	ldrsh	r1, [r2, r3]
	mov		r0, r8
	b		_0803c48c
_0803c482:
	add		r2, r4, #0x0
	add		r2, #0xae
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	add		r0, r7, #0x0
_0803c48c:
	add		r0, #0xae
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	sub		r1, r1, r0
	add		r7, r2, #0x0
	cmp		r1, #0x1
	ble		_0803c4a4
_0803c49a:
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0803b9f8
	b		_0803c4cc
_0803c4a4:
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_08044894
	ldr		r0, [r0, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803c4cc
	cmp		r6, #0x7
	beq		_0803c4c4
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	cmp		r0, #0x2
	ble		_0803c4cc
_0803c4c4:
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0803b9f8
_0803c4cc:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3C4D6, 0x2
	thumb_func_end sub_0803c41c

	thumb_func_start sub_0803c4d8
sub_0803c4d8:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r1, _0803c530
	add		r6, r1, #0x0
	add		r6, #0x24
	add		r7, r6, #0x0
	mov		r2, #0xbd
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldrh	r0, [r0, #0x0]
	add		r5, r1, #0x0
	cmp		r0, #0x0
	bne		_0803c4f4
	b		_0803c7ce
_0803c4f4:
	ldr		r1, [r4, #0x48]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	add		r2, r1, #0x0
	cmp		r0, #0x0
	beq		_0803c504
	b		_0803c7ce
_0803c504:
	ldr		r1, _0803c534
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803c514
	b		_0803c7ce
_0803c514:
	mov		r1, #0xc6
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrh	r1, [r0, #0x0]
	ldr		r0, _0803c538
	cmp		r1, r0
	beq		_0803c55a
	cmp		r1, r0
	bgt		_0803c53c
	sub		r0, #0x2
	cmp		r1, r0
	beq		_0803c550
	b		_0803c56e

.incbin "base.gba", 0x3C52E, 0x2

_0803c530:	.4byte RunGameLogic_CallBack
_0803c534:	.4byte 0x000007FE
_0803c538:	.4byte 0x00001002

_0803c53c:
	ldr		r0, _0803c54c
	cmp		r1, r0
	beq		_0803c55a
	add		r0, #0x1
	cmp		r1, r0
	beq		_0803c564
	b		_0803c56e

.incbin "base.gba", 0x3C54A, 0x2

_0803c54c:	.4byte 0x00001004

_0803c550:
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_0803bbe8
	b		_0803c7ce
_0803c55a:
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_0803c190
	b		_0803c7ce
_0803c564:
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_0803be48
	b		_0803c7ce
_0803c56e:
	mov		r0, #0x20
	and		r0, r2
	cmp		r0, #0x0
	beq		_0803c578
	b		_0803c7ce
_0803c578:
	mov		r2, #0xbd
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0803c586
	b		_0803c7ce
_0803c586:
	ldr		r1, _0803c5a8
	add		r0, r6, r1
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0803c592
	b		_0803c7ce
_0803c592:
	ldr		r2, _0803c5ac
	add		r0, r6, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0803c5b0
	cmp		r0, #0x1
	ble		_0803c5b8
	cmp		r0, #0x2
	beq		_0803c5b4
	b		_0803c5b8

.incbin "base.gba", 0x3C5A6, 0x2

_0803c5a8:	.4byte 0x00000C62
_0803c5ac:	.4byte 0x000007DC

_0803c5b0:
	mov		r3, #0x80
	b		_0803c5bc
_0803c5b4:
	mov		r3, #0x40
	b		_0803c5bc
_0803c5b8:
	mov		r3, #0x80
	lsl		r3, r3, #0x1
_0803c5bc:
	add		r0, r4, #0x0
	add		r0, #0xec
	ldrb	r0, [r0, #0x0]
	add		r2, r0, #0x0
	mul		r2, r3
	ldr		r1, [r5, #0x10]
	lsl		r0, r3, #0x3
	sub		r0, #0x1
	and		r1, r0
	eor		r2, r1
	neg		r0, r2
	orr		r0, r2
	cmp		r0, #0x0
	bge		_0803c5da
	b		_0803c7ce
_0803c5da:
	add		r2, r4, #0x0
	add		r2, #0x91
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x7f
	and		r0, r1
	mov		r3, #0x0
	cmp		r0, #0x0
	bne		_0803c5fa
	add		r0, r4, #0x0
	add		r0, #0x90
	ldrh	r1, [r7, #0x14]
	ldrb	r0, [r0, #0x0]
	lsr		r1, r1, #0x1
	cmp		r0, r1
	bhi		_0803c5fa
	mov		r3, #0x1
_0803c5fa:
	cmp		r3, #0x0
	beq		_0803c600
	b		_0803c7ce
_0803c600:
	ldrb	r0, [r2, #0x0]
	mov		r2, #0x7f
	and		r2, r0
	ldr		r1, _0803c648
	add		r0, r6, r1
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x8
	mov		r1, #0x7f
	and		r0, r1
	sub		r0, #0x1
	mov		r3, #0x0
	cmp		r2, r0
	bne		_0803c62a
	add		r0, r4, #0x0
	add		r0, #0x90
	ldrh	r1, [r7, #0x14]
	ldrb	r0, [r0, #0x0]
	lsr		r1, r1, #0x1
	cmp		r0, r1
	bcc		_0803c62a
	mov		r3, #0x1
_0803c62a:
	cmp		r3, #0x0
	beq		_0803c630
	b		_0803c7ce
_0803c630:
	mov		r2, #0xbd
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldrh	r1, [r0, #0x0]
	ldr		r0, _0803c64c
	cmp		r1, r0
	beq		_0803c650
	add		r0, #0x2
	cmp		r1, r0
	beq		_0803c660
	b		_0803c668

.incbin "base.gba", 0x3C646, 0x2

_0803c648:	.4byte 0x000007E6
_0803c64c:	.4byte 0x00001001

_0803c650:
	ldr		r1, _0803c65c
	add		r0, r4, #0x0
	bl		sub_080373dc
	b		_0803c668

.incbin "base.gba", 0x3C65A, 0x2

_0803c65c:	.4byte 0x0000100C

_0803c660:
	ldr		r1, _0803c684
	add		r0, r4, #0x0
	bl		sub_080373dc
_0803c668:
	mov		r1, #0xbd
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrh	r0, [r0, #0x0]
	ldr		r2, _0803c688
	add		r0, r0, r2
	cmp		r0, #0xc
	bls		_0803c67a
	b		_0803c7ce
_0803c67a:
	lsl		r0, r0, #0x2
	ldr		r1, _0803c68c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0803c684:	.4byte 0x00001005
_0803c688:	.4byte 0xFFFFF000
_0803c68c:	.4byte 0x0803c690
_0803c690:	.4byte 0x0803c6c4

.incbin "base.gba", 0x3C694, 0x30
	thumb_func_end sub_0803c4d8


.incbin "base.gba", 0x3C6C4, 0x10A

_0803c7ce:

.incbin "base.gba", 0x3C7CE, 0x6
	thumb_func_start sub_0803c7d4
sub_0803c7d4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x44
	str		r0, [sp, #0x40]
	ldr		r0, _0803c800
	mov		r1, #0x24
	add		r1, r1, r0
	mov		r10, r1
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0803c80e
	cmp		r0, #0x1
	bgt		_0803c804
	cmp		r0, #0x0
	beq		_0803c818
	b		_0803c81e

_0803c800:	.4byte RunGameLogic_CallBack

_0803c804:
	cmp		r0, #0x2
	beq		_0803c812
	cmp		r0, #0x3
	beq		_0803c818
	b		_0803c81e
_0803c80e:
	mov		r1, #0x2
	b		_0803c820
_0803c812:
	mov		r2, #0x4
	mov		r9, r2
	b		_0803c822
_0803c818:
	mov		r0, #0x0
	mov		r9, r0
	b		_0803c822
_0803c81e:
	mov		r1, #0x0
_0803c820:
	mov		r9, r1
_0803c822:
	ldr		r2, [sp, #0x40]
	cmp		r2, #0x0
	bne		_0803c8a8
	mov		r3, #0x0
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r0, r10
	ldrb	r1, [r0, #0x0]
	cmp		r3, r1
	bge		_0803c854
	add		r4, r0, #0x0
	ldr		r1, _0803c880
	add		r1, r10
_0803c83c:
	ldmia	r1!, { r2 }
	add		r0, r2, #0x0
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x1
	lsl		r0, r0, #0x2
	add		r0, sp
	str		r2, [r0, #0x0]
	add		r3, #0x1
	ldrb	r2, [r4, #0x0]
	cmp		r3, r2
	blt		_0803c83c
_0803c854:
	mov		r5, #0x8
	mov		r3, #0x0
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r0, r10
	ldrb	r1, [r0, #0x0]
	cmp		r3, r1
	bge		_0803c8a4
	add		r6, r0, #0x0
	mov		r4, sp
	mov		r7, #0x80
	lsl		r7, r7, #0x8
_0803c86c:
	ldr		r2, [r4, #0x0]
	ldr		r0, [r2, #0x48]
	and		r0, r7
	cmp		r0, #0x0
	beq		_0803c884
	add		r1, r2, #0x0
	add		r1, #0xae
	mov		r0, #0x4
	strh	r0, [r1, #0x0]
	b		_0803c89a

_0803c880:	.4byte 0x000007F4

_0803c884:
	mov		r0, r9
	add		r1, r5, r0
	cmp		r3, #0x3
	bgt		_0803c88e
	add		r1, #0x1
_0803c88e:
	add		r0, r2, #0x0
	add		r0, #0xae
	strh	r1, [r0, #0x0]
	cmp		r5, #0x0
	beq		_0803c89a
	sub		r5, #0x2
_0803c89a:
	add		r4, #0x4
	add		r3, #0x1
	ldrb	r1, [r6, #0x0]
	cmp		r3, r1
	blt		_0803c86c
_0803c8a4:
	mov		r1, #0x0
	b		_0803c9a2
_0803c8a8:
	mov		r3, #0x0
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r0, r10
	add		r1, sp, #0x20
	ldrb	r2, [r0, #0x0]
	cmp		r3, r2
	bge		_0803c8d6
	add		r7, r1, #0x0
	mov		r6, sp
	ldr		r5, _0803c960
	add		r5, r10
	add		r4, r0, #0x0
_0803c8c2:
	ldmia	r5!, { r2 }
	stmia	r6!, {  r2 }
	add		r0, r2, #0x0
	add		r0, #0xc4
	ldrb	r0, [r0, #0x0]
	stmia	r7!, { r0 }
	add		r3, #0x1
	ldrb	r0, [r4, #0x0]
	cmp		r3, r0
	blt		_0803c8c2
_0803c8d6:
	mov		r3, #0x0
	add		r6, r1, #0x0
	mov		r12, r6
_0803c8dc:
	lsl		r1, r3, #0x2
	add		r0, r6, r1
	ldr		r4, [r0, #0x0]
	add		r2, r3, #0x1
	add		r7, r1, #0x0
	add		r5, r2, #0x0
	cmp		r5, #0x7
	bgt		_0803c902
	lsl		r0, r5, #0x2
	add		r0, r12
_0803c8f0:
	ldr		r1, [r0, #0x0]
	cmp		r1, r4
	ble		_0803c8fa
	add		r4, r1, #0x0
	add		r3, r2, #0x0
_0803c8fa:
	add		r0, #0x4
	add		r2, #0x1
	cmp		r2, #0x7
	ble		_0803c8f0
_0803c902:
	lsl		r3, r3, #0x2
	add		r2, r6, r3
	add		r1, r6, r7
	ldr		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	str		r4, [r1, #0x0]
	mov		r1, sp
	add		r2, r1, r3
	ldr		r3, [r2, #0x0]
	add		r1, r1, r7
	ldr		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	str		r3, [r1, #0x0]
	add		r3, r5, #0x0
	cmp		r3, #0x6
	ble		_0803c8dc
	mov		r5, #0x8
	mov		r6, #0x1
	neg		r6, r6
	add		r7, r6, #0x0
	mov		r3, #0x0
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r0, r10
	ldrb	r2, [r0, #0x0]
	cmp		r3, r2
	bge		_0803c992
	mov		r12, r6
	mov		r8, r0
	mov		r4, sp
_0803c93e:
	ldr		r2, [r4, #0x0]
	ldr		r0, [r2, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803c964
	cmp		r7, r12
	bne		_0803c956
	add		r0, r2, #0x0
	add		r0, #0xc4
	ldrb	r7, [r0, #0x0]
_0803c956:
	add		r1, r2, #0x0
	add		r1, #0xae
	mov		r0, #0x4
	strh	r0, [r1, #0x0]
	b		_0803c986

_0803c960:	.4byte 0x000007F4

_0803c964:
	cmp		r6, r12
	bne		_0803c96e
	add		r0, r2, #0x0
	add		r0, #0xc4
	ldrb	r6, [r0, #0x0]
_0803c96e:
	mov		r0, r9
	add		r1, r5, r0
	cmp		r3, #0x3
	bgt		_0803c97a
	ldr		r0, [sp, #0x40]
	add		r1, r1, r0
_0803c97a:
	add		r0, r2, #0x0
	add		r0, #0xae
	strh	r1, [r0, #0x0]
	cmp		r5, #0x0
	beq		_0803c986
	sub		r5, #0x2
_0803c986:
	add		r4, #0x4
	add		r3, #0x1
	mov		r1, r8
	ldrb	r1, [r1, #0x0]
	cmp		r3, r1
	blt		_0803c93e
_0803c992:
	sub		r0, r7, r6
	mov		r1, #0x2
	cmp		r0, #0x8
	bgt		_0803c9a2
	mov		r1, #0x0
	cmp		r0, #0x2
	ble		_0803c9a2
	mov		r1, #0x1
_0803c9a2:
	ldr		r0, _0803c9b8
	add		r0, r10
	strb	r1, [r0, #0x0]
	add		sp, #0x44
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803c9b8:	.4byte 0x00000C64
	thumb_func_end sub_0803c7d4

	thumb_func_start sub_0803c9bc
sub_0803c9bc:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	mov		r4, #0x0
	cmp		r4, r5
	bge		_0803c9e8
_0803c9c8:
	lsl		r1, r4, #0x18
	lsr		r1, r1, #0x18
	add		r0, r6, #0x0
	bl		sub_08044894
	ldr		r0, [r0, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803c9e2
	mov		r0, #0x1
	b		_0803c9ea
_0803c9e2:
	add		r4, #0x1
	cmp		r4, r5
	blt		_0803c9c8
_0803c9e8:
	mov		r0, #0x0
_0803c9ea:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0803c9bc

	thumb_func_start sub_0803c9f0
sub_0803c9f0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _0803ca1c
	add		r1, r0, #0x0
	add		r1, #0x24
	ldr		r3, _0803ca20
	add		r2, r0, r3
	ldrh	r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_0803ca08
	sub		r0, #0x1
	strh	r0, [r2, #0x0]
_0803ca08:
	add		r0, r4, #0x0
	bl		sub_0803b90c
	add		r1, r4, #0x0
	add		r1, #0x9a
	strb	r0, [r1, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3CA1A, 0x2

_0803ca1c:	.4byte RunGameLogic_CallBack
_0803ca20:	.4byte 0x00000C86
	thumb_func_end sub_0803c9f0

	thumb_func_start sub_0803ca24
sub_0803ca24:
	ldr		r2, _0803ca54
	add		r1, r0, r2
	mov		r2, #0x0
	mov		r3, #0x0
	strh	r3, [r1, #0x8]
	strb	r2, [r1, #0xa]
	str		r3, [r1, #0xc]
	str		r3, [r1, #0x10]
	strb	r2, [r1, #0x14]
	strb	r2, [r1, #0x15]
	strb	r2, [r1, #0x16]
	strb	r2, [r1, #0x17]
	strb	r2, [r1, #0x18]
	strb	r2, [r1, #0x19]
	strb	r2, [r1, #0x1a]
	strb	r2, [r1, #0x1b]
	strb	r2, [r1, #0x1c]
	str		r3, [r1, #0x20]
	mov		r1, #0xcb
	lsl		r1, r1, #0x4
	add		r0, r0, r1
	strb	r2, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x3CA52, 0x2

_0803ca54:	.4byte 0x00000C8C
	thumb_func_end sub_0803ca24

	thumb_func_start sub_0803ca58
sub_0803ca58:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	ldr		r1, _0803cad0
	add		r0, r2, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_0803cac8
	ldr		r1, _0803cad4
	add		r0, r2, r1
	ldr		r5, [r0, #0x0]
	ldr		r0, [r5, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803cac8
	ldr		r0, _0803cad8
	add		r4, r2, r0
	add		r2, r5, #0x0
	add		r2, #0x96
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803ca9a
	ldr		r3, [r4, #0xc]
	ldr		r0, _0803cadc
	cmp		r3, r0
	bhi		_0803ca9a
	add		r0, r3, #0x1
	str		r0, [r4, #0xc]
_0803ca9a:
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803cab2
	ldr		r1, [r4, #0x10]
	ldr		r0, _0803cadc
	cmp		r1, r0
	bhi		_0803cab2
	add		r0, r1, #0x1
	str		r0, [r4, #0x10]
_0803cab2:
	add		r0, r5, #0x0
	add		r0, #0x85
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x59
	bls		_0803cac8
	ldr		r1, [r4, #0x20]
	ldr		r0, _0803cadc
	cmp		r1, r0
	bhi		_0803cac8
	add		r0, r1, #0x1
	str		r0, [r4, #0x20]
_0803cac8:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3CACE, 0x2

_0803cad0:	.4byte 0x000007DA
_0803cad4:	.4byte 0x00000814
_0803cad8:	.4byte 0x00000C8C
_0803cadc:	.4byte 0x0000FFFF
	thumb_func_end sub_0803ca58

	thumb_func_start sub_0803cae0
sub_0803cae0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r9, r0
	add		r4, r1, #0x0
	ldr		r1, _0803cb54
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	ldr		r2, _0803cb58
	add		r5, r4, r2
	ldrh	r3, [r4, #0x14]
	mov		r10, r3
	sub		r1, #0x37
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	bl		sub_0802c6c8
	mov		r6, #0x0
	cmp		r0, #0x0
	beq		_0803cb10
	mov		r6, #0x64
_0803cb10:
	bl		sub_08002c18
	mov		r1, #0x3
	and		r1, r0
	lsl		r1, r1, #0x5
	add		r1, #0x26
	add		r7, r5, r1
	ldr		r2, _0803cb5c
	add		r0, r4, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_0803cb2e
	b		_0803ccba
_0803cb2e:
	cmp		r8, r9
	beq		_0803cb34
	b		_0803ccba
_0803cb34:
	mov		r0, r8
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x1
	cmp		r0, #0x3
	bhi		_0803cb68
	ldr		r2, _0803cb60
	lsl		r1, r0, #0x2
	ldr		r3, _0803cb64
	add		r0, r4, r3
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	add		r1, r1, r0
	add		r1, r1, r2
	ldr		r2, [r1, #0x0]
	b		_0803cb6a

_0803cb54:	.4byte 0x00000814
_0803cb58:	.4byte 0x00000C8C
_0803cb5c:	.4byte 0x000007DA
_0803cb60:	.4byte 0x0810790c
_0803cb64:	.4byte 0x00000C64

_0803cb68:
	mov		r2, #0x0
_0803cb6a:
	add		r6, r6, r2
	strh	r2, [r7, #0x0]
	mov		r0, #0xbc
	lsl		r0, r0, #0x1
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	lsl		r2, r0, #0x2
	add		r6, r6, r2
	strh	r2, [r7, #0x2]
	ldrb	r1, [r5, #0xa]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r2, r0, #0x3
	add		r6, r6, r2
	strh	r2, [r7, #0x4]
	mov		r0, r8
	bl		sub_080374cc
	mov		r0, r8
	bl		sub_080374cc
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	ldr		r1, _0803cc3c
	ldr		r3, _0803cc40
	add		r0, r4, r3
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r1, r10
	mul		r1, r0
	add		r0, r1, #0x0
	sub		r0, r0, r2
	cmp		r0, #0x0
	bge		_0803cbb4
	add		r0, #0x7
_0803cbb4:
	asr		r2, r0, #0x3
	cmp		r2, #0x0
	bge		_0803cbbc
	mov		r2, #0x0
_0803cbbc:
	add		r6, r6, r2
	strh	r2, [r7, #0x6]
	ldr		r2, _0803cc44
	mov		r0, r8
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r2, [r0, #0x0]
	add		r6, r6, r2
	strh	r2, [r7, #0x8]
	ldr		r0, [r5, #0xc]
	lsr		r2, r0, #0x2
	sub		r6, r6, r2
	strh	r2, [r7, #0xa]
	ldr		r0, [r5, #0x10]
	lsl		r2, r0, #0x1
	sub		r6, r6, r2
	strh	r2, [r7, #0xc]
	ldrb	r1, [r5, #0x14]
	lsl		r0, r1, #0x2
	add		r2, r0, r1
	ldrb	r1, [r5, #0x15]
	lsl		r0, r1, #0x4
	sub		r0, r0, r1
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	ldrb	r1, [r5, #0x16]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	add		r2, r2, r0
	sub		r6, r6, r2
	strh	r2, [r7, #0xe]
	ldrb	r1, [r5, #0x17]
	lsl		r0, r1, #0x4
	sub		r0, r0, r1
	lsl		r2, r0, #0x1
	ldrb	r1, [r5, #0x18]
	lsl		r0, r1, #0x4
	sub		r0, r0, r1
	add		r2, r2, r0
	ldrb	r1, [r5, #0x19]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r2, r2, r0
	ldrb	r1, [r5, #0x1a]
	lsl		r0, r1, #0x4
	sub		r0, r0, r1
	add		r2, r2, r0
	sub		r6, r6, r2
	strh	r2, [r7, #0x10]
	bl		sub_08002c30
	mov		r1, #0x3
	sub		r2, r1, r0
	cmp		r2, #0x0
	ble		_0803cc48
	lsl		r0, r2, #0x4
	sub		r0, r0, r2
	lsl		r0, r0, #0x3
	b		_0803cc4a

_0803cc3c:	.4byte 0x0810793c
_0803cc40:	.4byte 0x000007DC
_0803cc44:	.4byte 0x08107948

_0803cc48:
	mov		r0, #0x0
_0803cc4a:
	add		r2, r0, #0x0
	sub		r6, r6, r2
	strh	r2, [r7, #0x12]
	ldrb	r1, [r5, #0x1b]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x3
	add		r2, r0, r1
	ldrb	r1, [r5, #0x1c]
	lsl		r0, r1, #0x4
	sub		r0, r0, r1
	add		r2, r2, r0
	add		r0, r5, #0x0
	add		r0, #0x24
	ldrb	r1, [r0, #0x0]
	lsl		r0, r1, #0x4
	sub		r0, r0, r1
	add		r2, r2, r0
	add		r6, r6, r2
	strh	r2, [r7, #0x14]
	ldr		r0, [r5, #0x20]
	lsr		r2, r0, #0x2
	sub		r6, r6, r2
	strh	r2, [r7, #0x16]
	bl		sub_08002c18
	mov		r4, #0x3
	and		r0, r4
	lsl		r0, r0, #0x1
	add		r0, r5, r0
	strh	r6, [r0, #0x0]
	strh	r6, [r7, #0x18]
	bl		sub_08002c18
	and		r0, r4
	cmp		r0, #0x3
	bne		_0803ccba
	mov		r2, #0x0
	ldrsh	r0, [r5, r2]
	mov		r3, #0x2
	ldrsh	r1, [r5, r3]
	add		r0, r0, r1
	mov		r2, #0x4
	ldrsh	r1, [r5, r2]
	add		r0, r0, r1
	mov		r3, #0x6
	ldrsh	r1, [r5, r3]
	add		r0, r0, r1
	cmp		r0, #0x0
	bge		_0803ccb0
	add		r0, #0x3
_0803ccb0:
	asr		r2, r0, #0x2
	strh	r2, [r5, #0x8]
	add		r0, r5, #0x0
	add		r0, #0xbe
	strh	r2, [r0, #0x0]
_0803ccba:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803cae0

	thumb_func_start sub_0803ccc8
sub_0803ccc8:
	add		r2, r1, #0x0
	ldr		r3, _0803ccf8
	add		r1, r2, r3
	ldr		r3, [r1, #0x0]
	cmp		r3, r0
	bne		_0803ccf6
	ldr		r1, _0803ccfc
	add		r0, r2, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_0803ccf6
	ldr		r0, [r3, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803ccf6
	ldr		r3, _0803cd00
	add		r1, r2, r3
	ldrb	r0, [r1, #0xa]
	add		r0, #0x1
	strb	r0, [r1, #0xa]
_0803ccf6:
	bx		lr

_0803ccf8:	.4byte 0x00000814
_0803ccfc:	.4byte 0x000007DA
_0803cd00:	.4byte 0x00000C8C
	thumb_func_end sub_0803ccc8

	thumb_func_start sub_0803cd04
sub_0803cd04:
	add		r2, r1, #0x0
	ldr		r3, _0803cd2c
	add		r1, r2, r3
	ldr		r1, [r1, #0x0]
	cmp		r1, r0
	bne		_0803cd28
	ldr		r1, _0803cd30
	add		r0, r2, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_0803cd28
	ldr		r3, _0803cd34
	add		r1, r2, r3
	ldrb	r0, [r1, #0x14]
	add		r0, #0x1
	strb	r0, [r1, #0x14]
_0803cd28:
	bx		lr

.incbin "base.gba", 0x3CD2A, 0x2

_0803cd2c:	.4byte 0x00000814
_0803cd30:	.4byte 0x000007DA
_0803cd34:	.4byte 0x00000C8C
	thumb_func_end sub_0803cd04

	thumb_func_start sub_0803cd38
sub_0803cd38:
	add		r2, r1, #0x0
	ldr		r3, _0803cd60
	add		r1, r2, r3
	ldr		r1, [r1, #0x0]
	cmp		r1, r0
	bne		_0803cd5c
	ldr		r1, _0803cd64
	add		r0, r2, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_0803cd5c
	ldr		r3, _0803cd68
	add		r1, r2, r3
	ldrb	r0, [r1, #0x15]
	add		r0, #0x1
	strb	r0, [r1, #0x15]
_0803cd5c:
	bx		lr

.incbin "base.gba", 0x3CD5E, 0x2

_0803cd60:	.4byte 0x00000814
_0803cd64:	.4byte 0x000007DA
_0803cd68:	.4byte 0x00000C8C
	thumb_func_end sub_0803cd38

	thumb_func_start sub_0803cd6c
sub_0803cd6c:
	add		r2, r1, #0x0
	ldr		r3, _0803cd94
	add		r1, r2, r3
	ldr		r1, [r1, #0x0]
	cmp		r1, r0
	bne		_0803cd90
	ldr		r1, _0803cd98
	add		r0, r2, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_0803cd90
	ldr		r3, _0803cd9c
	add		r1, r2, r3
	ldrb	r0, [r1, #0x16]
	add		r0, #0x1
	strb	r0, [r1, #0x16]
_0803cd90:
	bx		lr

.incbin "base.gba", 0x3CD92, 0x2

_0803cd94:	.4byte 0x00000814
_0803cd98:	.4byte 0x000007DA
_0803cd9c:	.4byte 0x00000C8C

.incbin "base.gba", 0x3CDA0, 0x3C
	thumb_func_end sub_0803cd6c

	thumb_func_start sub_0803cddc
sub_0803cddc:
	add		r2, r1, #0x0
	ldr		r3, _0803ce0c
	add		r1, r2, r3
	ldr		r3, [r1, #0x0]
	cmp		r3, r0
	bne		_0803ce0a
	ldr		r1, _0803ce10
	add		r0, r2, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_0803ce0a
	ldr		r0, [r3, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803ce0a
	ldr		r3, _0803ce14
	add		r1, r2, r3
	ldrb	r0, [r1, #0x18]
	add		r0, #0x1
	strb	r0, [r1, #0x18]
_0803ce0a:
	bx		lr

_0803ce0c:	.4byte 0x00000814
_0803ce10:	.4byte 0x000007DA
_0803ce14:	.4byte 0x00000C8C
	thumb_func_end sub_0803cddc

	thumb_func_start sub_0803ce18
sub_0803ce18:
	add		r2, r1, #0x0
	ldr		r3, _0803ce48
	add		r1, r2, r3
	ldr		r3, [r1, #0x0]
	cmp		r3, r0
	bne		_0803ce46
	ldr		r1, _0803ce4c
	add		r0, r2, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_0803ce46
	ldr		r0, [r3, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803ce46
	ldr		r3, _0803ce50
	add		r1, r2, r3
	ldrb	r0, [r1, #0x19]
	add		r0, #0x1
	strb	r0, [r1, #0x19]
_0803ce46:
	bx		lr

_0803ce48:	.4byte 0x00000814
_0803ce4c:	.4byte 0x000007DA
_0803ce50:	.4byte 0x00000C8C
	thumb_func_end sub_0803ce18

	thumb_func_start sub_0803ce54
sub_0803ce54:
	add		r2, r1, #0x0
	ldr		r3, _0803ce84
	add		r1, r2, r3
	ldr		r3, [r1, #0x0]
	cmp		r3, r0
	bne		_0803ce82
	ldr		r1, _0803ce88
	add		r0, r2, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_0803ce82
	ldr		r0, [r3, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803ce82
	ldr		r3, _0803ce8c
	add		r1, r2, r3
	ldrb	r0, [r1, #0x1a]
	add		r0, #0x1
	strb	r0, [r1, #0x1a]
_0803ce82:
	bx		lr

_0803ce84:	.4byte 0x00000814
_0803ce88:	.4byte 0x000007DA
_0803ce8c:	.4byte 0x00000C8C

.incbin "base.gba", 0x3CE90, 0x3C
	thumb_func_end sub_0803ce54

	thumb_func_start sub_0803cecc
sub_0803cecc:
	add		r2, r1, #0x0
	ldr		r3, _0803cefc
	add		r1, r2, r3
	ldr		r3, [r1, #0x0]
	cmp		r3, r0
	bne		_0803cefa
	ldr		r1, _0803cf00
	add		r0, r2, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_0803cefa
	ldr		r0, [r3, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803cefa
	ldr		r3, _0803cf04
	add		r1, r2, r3
	ldrb	r0, [r1, #0x1c]
	add		r0, #0x1
	strb	r0, [r1, #0x1c]
_0803cefa:
	bx		lr

_0803cefc:	.4byte 0x00000814
_0803cf00:	.4byte 0x000007DA
_0803cf04:	.4byte 0x00000C8C
	thumb_func_end sub_0803cecc

	thumb_func_start sub_0803cf08
sub_0803cf08:
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldr		r1, _0803cf3c
	add		r0, r2, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_0803cf3a
	ldr		r1, _0803cf40
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, r3
	bne		_0803cf3a
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803cf3a
	mov		r0, #0xcb
	lsl		r0, r0, #0x4
	add		r1, r2, r0
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
_0803cf3a:
	bx		lr

_0803cf3c:	.4byte 0x000007DA
_0803cf40:	.4byte 0x00000814

.incbin "base.gba", 0x3CF44, 0x78
	thumb_func_end sub_0803cf08

	thumb_func_start sub_0803cfbc
sub_0803cfbc:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	mov		r4, #0x0
	ldrb	r2, [r3, #0x1]
	add		r5, r2, #0x0
	ldr		r1, [r3, #0x4]
	ldr		r0, _0803cff0
	cmp		r1, r0
	bls		_0803d09a
	ldrb	r1, [r3, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803d048
	mov		r0, #0x3f
	and		r0, r2
	cmp		r0, #0x0
	beq		_0803d000
	cmp		r0, #0x3f
	beq		_0803d000
	ldr		r1, _0803cff4
	cmp		r2, #0x3f
	bls		_0803cff8
	mov		r0, #0x7f
	sub		r0, r0, r2
	b		_0803cffa

_0803cff0:	.4byte 0x07FFFFFF
_0803cff4:	.4byte 0x08107968

_0803cff8:
	add		r0, r2, #0x0
_0803cffa:
	add		r0, r1, r0
	ldrb	r1, [r0, #0x0]
	b		_0803d022
_0803d000:
	ldrb	r1, [r3, #0x3]
	cmp		r1, #0x0
	bne		_0803d022
	add		r0, r5, #0x0
	sub		r0, #0x3f
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x1
	bhi		_0803d01c
	ldr		r0, _0803d018
	add		r0, #0x3f
	b		_0803d01e

_0803d018:	.4byte 0x08107968

_0803d01c:
	ldr		r0, _0803d034
_0803d01e:
	ldrb	r0, [r0, #0x0]
	add		r1, r0, #0x0
_0803d022:
	ldrb	r0, [r3, #0x2]
	cmp		r0, #0x1
	beq		_0803d038
	cmp		r0, #0x1
	ble		_0803d076
	cmp		r0, #0x2
	beq		_0803d040
	b		_0803d0dc

.incbin "base.gba", 0x3D032, 0x2

_0803d034:	.4byte 0x08107968

_0803d038:
	lsl		r0, r1, #0x9
	mov		r1, #0x88
	lsl		r1, r1, #0x9
	b		_0803d0da
_0803d040:
	lsl		r0, r1, #0x7
	mov		r1, #0xa4
	lsl		r1, r1, #0x9
	b		_0803d0da
_0803d048:
	cmp		r2, #0x0
	beq		_0803d062
	ldr		r1, _0803d058
	cmp		r2, #0x3f
	bls		_0803d05c
	mov		r0, #0x7f
	sub		r0, r0, r2
	b		_0803d05e

_0803d058:	.4byte 0x081079a8

_0803d05c:
	add		r0, r2, #0x0
_0803d05e:
	add		r0, r1, r0
	b		_0803d06a
_0803d062:
	ldrb	r1, [r3, #0x3]
	cmp		r1, #0x0
	bne		_0803d06c
	ldr		r0, _0803d07c
_0803d06a:
	ldrb	r1, [r0, #0x0]
_0803d06c:
	ldrb	r0, [r3, #0x2]
	cmp		r0, #0x1
	beq		_0803d08a
	cmp		r0, #0x1
	bgt		_0803d080
_0803d076:
	cmp		r0, #0x0
	beq		_0803d086
	b		_0803d0dc

_0803d07c:	.4byte 0x081079a8

_0803d080:
	cmp		r0, #0x2
	beq		_0803d092
	b		_0803d0dc
_0803d086:
	lsl		r4, r1, #0xb
	b		_0803d0dc
_0803d08a:
	lsl		r0, r1, #0x9
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	b		_0803d0da
_0803d092:
	lsl		r0, r1, #0x7
	mov		r1, #0xa0
	lsl		r1, r1, #0x8
	b		_0803d0da
_0803d09a:
	ldr		r1, _0803d0a8
	cmp		r2, #0x3f
	bls		_0803d0ac
	mov		r0, #0x7f
	sub		r0, r0, r2
	b		_0803d0ae

.incbin "base.gba", 0x3D0A6, 0x2

_0803d0a8:	.4byte 0x08107968

_0803d0ac:
	add		r0, r5, #0x0
_0803d0ae:
	add		r0, r1, r0
	ldrb	r1, [r0, #0x0]
	ldrb	r0, [r3, #0x2]
	cmp		r0, #0x1
	beq		_0803d0cc
	cmp		r0, #0x1
	bgt		_0803d0c2
	cmp		r0, #0x0
	beq		_0803d0c8
	b		_0803d0dc
_0803d0c2:
	cmp		r0, #0x2
	beq		_0803d0d4
	b		_0803d0dc
_0803d0c8:
	lsl		r4, r1, #0x6
	b		_0803d0dc
_0803d0cc:
	lsl		r0, r1, #0x4
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	b		_0803d0da
_0803d0d4:
	lsl		r0, r1, #0x2
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
_0803d0da:
	add		r4, r0, r1
_0803d0dc:
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0803cfbc

	thumb_func_start sub_0803d0e4
sub_0803d0e4:
	ldr		r0, _0803d0e8
	bx		lr

_0803d0e8:	.4byte 0x03002318

.incbin "base.gba", 0x3D0EC, 0x10
	thumb_func_end sub_0803d0e4

	thumb_func_start sub_0803d0fc
sub_0803d0fc:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	lsl		r2, r2, #0x18
	lsr		r5, r2, #0x18
	bl		sub_0803cfbc
	add		r7, r0, #0x0
	mov		r0, #0x1
	strh	r0, [r6, #0x0]
	add		r0, r4, #0x0
	bl		sub_0803d180
	strh	r0, [r6, #0x2]
	add		r0, r4, #0x0
	bl		sub_0803d190
	strh	r0, [r6, #0x4]
	ldr		r2, [r4, #0x4]
	ldr		r0, _0803d158
	cmp		r2, r0
	bls		_0803d166
	add		r0, r5, #0x0
	add		r0, #0x8
	lsl		r0, r0, #0xc
	lsl		r1, r5, #0x6
	mov		r3, #0x80
	lsl		r3, r3, #0x2
	add		r1, r1, r3
	orr		r0, r1
	strh	r0, [r6, #0x6]
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803d15c
	add		r0, r2, r7
	mov		r2, #0x7
	and		r2, r1
	lsl		r1, r2, #0x1
	add		r1, r1, r2
	lsl		r1, r1, #0x2
	sub		r1, r1, r2
	lsl		r1, r1, #0xd
	add		r0, r0, r1
	b		_0803d178

_0803d158:	.4byte 0x07FFFFFF

_0803d15c:
	add		r0, r2, r7
	mov		r1, #0xb0
	lsl		r1, r1, #0xc
	add		r0, r0, r1
	b		_0803d178
_0803d166:
	add		r0, r5, #0x0
	add		r0, #0x8
	lsl		r0, r0, #0xc
	mov		r3, #0x80
	lsl		r3, r3, #0x2
	add		r1, r7, r3
	orr		r0, r1
	strh	r0, [r6, #0x6]
	add		r0, r2, r7
_0803d178:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3D17E, 0x2
	thumb_func_end sub_0803d0fc

	thumb_func_start sub_0803d180
sub_0803d180:
	ldr		r1, _0803d18c
	ldrb	r0, [r0, #0x2]
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x3D18A, 0x2

_0803d18c:	.4byte 0x081079e8
	thumb_func_end sub_0803d180

	thumb_func_start sub_0803d190
sub_0803d190:
	add		r3, r0, #0x0
	mov		r2, #0x0
	ldrb	r1, [r3, #0x1]
	mov		r0, #0x3f
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803d1b4
	cmp		r0, #0x3f
	beq		_0803d1b4
	mov		r0, #0x40
	and		r1, r0
	lsl		r0, r1, #0x18
	lsr		r0, r0, #0x18
	neg		r0, r0
	asr		r2, r0, #0x1f
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	and		r2, r0
_0803d1b4:
	ldr		r0, _0803d1c4
	ldrb	r1, [r3, #0x2]
	lsl		r1, r1, #0x1
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	orr		r2, r0
	add		r0, r2, #0x0
	bx		lr

_0803d1c4:	.4byte 0x081079ec
	thumb_func_end sub_0803d190

	thumb_func_start sub_0803d1c8
sub_0803d1c8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080290c0
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	mov		r1, #0x0
	strh	r0, [r4, #0x10]
	str		r1, [r4, #0x48]
	add		r0, r4, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	mov		r2, #0x0
	mov		r1, #0x4
	add		r0, #0x34
_0803d1e6:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0803d1e6
	mov		r1, #0x0
	add		r0, r4, #0x0
	add		r0, #0x4e
	strb	r1, [r0, #0x0]
	add		r0, #0x2
	mov		r2, #0x0
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	str		r1, [r4, #0x54]
	str		r1, [r4, #0x5c]
	str		r1, [r4, #0x60]
	add		r0, #0x12
	strb	r2, [r0, #0x0]
	str		r1, [r4, #0x68]
	add		r2, r4, #0x0
	add		r2, #0x58
	mov		r0, #0xc0
	strh	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x5a
	strh	r1, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3D222, 0x2
	thumb_func_end sub_0803d1c8

	thumb_func_start sub_0803d224
sub_0803d224:
	ldr		r1, _0803d230
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	str		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x3D22E, 0x2

_0803d230:	.4byte 0x0300232C
	thumb_func_end sub_0803d224

	thumb_func_start sub_0803d234
sub_0803d234:
	ldr		r2, _0803d248
	ldr		r1, [r2, #0x0]
	ldr		r0, _0803d24c
	mul		r0, r1
	ldr		r1, _0803d250
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	lsl		r0, r0, #0x1
	lsr		r0, r0, #0x11
	bx		lr

_0803d248:	.4byte 0x0300232C
_0803d24c:	.4byte 0x41C64E6D
_0803d250:	.4byte 0x00003039
	thumb_func_end sub_0803d234

	thumb_func_start sub_0803d254
sub_0803d254:
	add		r2, r0, #0x0
	add		r2, #0x80
	mov		r1, #0xb6
	str		r1, [r2, #0x0]
	mov		r1, #0x88
	lsl		r1, r1, #0x8
	mov		r2, #0x0
	strh	r1, [r0, #0x10]
	mov		r1, #0x3
	strh	r1, [r0, #0x34]
	mov		r1, #0x1e
	strb	r1, [r0, #0xe]
	strb	r1, [r0, #0xd]
	strb	r1, [r0, #0xc]
	ldr		r1, _0803d284
	str		r1, [r0, #0x14]
	ldr		r1, _0803d288
	str		r1, [r0, #0x18]
	ldr		r1, _0803d28c
	str		r1, [r0, #0x48]
	add		r0, #0x4c
	strh	r2, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x3D282, 0x2

_0803d284:	.4byte 0x0803dd55
_0803d288:	.4byte 0x0803d4a9
_0803d28c:	.4byte 0x08096588
	thumb_func_end sub_0803d254

	thumb_func_start sub_0803d290
sub_0803d290:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0xc
	ldr		r0, _0803d2f0
	mov		r1, #0xff
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803d2a8
	b		_0803d3d6
_0803d2a8:
	ldr		r5, _0803d2f4
	ldr		r1, [r5, #0x0]
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803d2d0
	asr		r0, r1, #0x2
	mov		r1, #0x7
	and		r0, r1
	ldr		r1, _0803d2f8
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	bl		sub_08029f34
	ldr		r2, _0803d2fc
	ldr		r3, _0803d300
	add		r1, r4, #0x0
	bl		sub_08029ee4
_0803d2d0:
	mov		r0, #0x1
	bl		sub_08028130
	add		r6, r0, #0x0
	add		r6, #0xc8
	ldr		r0, [r5, #0x0]
	asr		r7, r0, #0x2
	mov		r1, #0x1f
	and		r7, r1
	add		r5, r1, #0x0
	and		r5, r0
	cmp		r5, #0xf
	bgt		_0803d304
	lsl		r0, r5, #0x1
	b		_0803d308

.incbin "base.gba", 0x3D2EE, 0x2

_0803d2f0:	.4byte RunGameLogic_CallBack
_0803d2f4:	.4byte 0x03002330
_0803d2f8:	.4byte 0x081085b8
_0803d2fc:	.4byte 0x06012C00
_0803d300:	.4byte 0x80000100

_0803d304:
	sub		r0, r1, r5
	lsl		r0, r0, #0x1
_0803d308:
	add		r5, r0, #0x0
	mov		r1, sp
	add		r0, #0xf
	mov		r2, #0x1f
	and		r0, r2
	lsl		r0, r0, #0x5
	mov		r3, #0xf8
	lsl		r3, r3, #0x7
	add		r4, r3, #0x0
	orr		r0, r4
	strh	r0, [r1, #0x0]
	mov		r3, sp
	mov		r1, #0x37
	sub		r1, r1, r5
	and		r1, r2
	lsl		r1, r1, #0x5
	add		r0, r1, #0x0
	orr		r0, r2
	strh		r0, [r3, #0x2]
	add		r0, r5, #0x0
	and		r0, r2
	lsl		r0, r0, #0xa
	orr		r1, r0
	strh		r1, [r3, #0x4]
	sub		r1, r2, r5
	and		r1, r2
	add		r0, r1, #0x0
	orr		r0, r4
	strh		r0, [r3, #0x6]
	mov		r2, sp
	mov		r3, #0xb8
	lsl		r3, r3, #0x2
	add		r0, r3, #0x0
	orr		r1, r0
	strh		r1, [r2, #0x8]
	mov		r0, sp
	ldrh	r0, [r0, #0x0]
	strh	r0, [r6, #0x2]
	cmp		r7, #0x7
	bgt		_0803d364
	mov		r0, sp
	ldrh		r0, [r0, #0x8]
	strh	r0, [r6, #0x0]
	mov		r0, sp
	ldrh		r0, [r0, #0x2]
	b		_0803d38e
_0803d364:
	cmp		r7, #0xf
	bgt		_0803d374
	mov		r0, sp
	ldrh		r0, [r0, #0x2]
	strh	r0, [r6, #0x0]
	mov		r0, sp
	ldrh		r0, [r0, #0x4]
	b		_0803d38e
_0803d374:
	cmp		r7, #0x17
	bgt		_0803d384
	mov		r0, sp
	ldrh		r0, [r0, #0x4]
	strh	r0, [r6, #0x0]
	mov		r0, sp
	ldrh		r0, [r0, #0x6]
	b		_0803d38e
_0803d384:
	mov		r0, sp
	ldrh		r0, [r0, #0x6]
	strh	r0, [r6, #0x0]
	mov		r0, sp
	ldrh		r0, [r0, #0x8]
_0803d38e:
	strh	r0, [r6, #0x4]
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r0, _0803d3e0
	ldr		r1, [r0, #0x0]
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803d3ce
	asr		r0, r1, #0x2
	mov		r1, #0x7
	and		r0, r1
	mov		r6, #0x0
	lsl		r0, r0, #0x7
	ldr		r1, _0803d3e4
	ldr		r5, _0803d3e8
	add		r4, r0, r1
_0803d3b2:
	bl		sub_08029f34
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	ldr		r3, _0803d3ec
	bl		sub_08029ee4
	add		r5, #0x80
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	add		r4, r4, r0
	add		r6, #0x1
	cmp		r6, #0x2
	ble		_0803d3b2
_0803d3ce:
	ldr		r1, _0803d3e0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
_0803d3d6:
	add		sp, #0xc
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3D3DE, 0x2

_0803d3e0:	.4byte 0x03002330
_0803d3e4:	.4byte 0x0808a060
_0803d3e8:	.4byte 0x06012E00
_0803d3ec:	.4byte 0x80000040
	thumb_func_end sub_0803d290

	thumb_func_start sub_0803d3f0
sub_0803d3f0:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	ldr		r5, [r3, #0x70]
	ldr		r2, [r3, #0x74]
	ldr		r4, _0803d464
	cmp		r5, #0x0
	bne		_0803d40e
	cmp		r2, #0x0
	bne		_0803d40e
	ldr		r0, [r4, #0x0]
	str		r0, [r3, #0x48]
	ldr		r2, [r4, #0x4]
	mov		r0, #0xc0
	lsl		r0, r0, #0xc
	str		r0, [r3, #0x8]
_0803d40e:
	lsl		r0, r5, #0x3
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0803d4a0
	sub		r2, #0x1
	cmp		r2, #0x0
	bne		_0803d48a
	add		r5, #0x1
	lsl		r1, r5, #0x3
	add		r0, r4, #0x4
	add		r0, r1, r0
	ldr		r2, [r0, #0x0]
	add		r1, r1, r4
	ldr		r4, [r1, #0x0]
	cmp		r4, #0x0
	bne		_0803d488
	ldr		r2, _0803d468
	ldrh	r1, [r3, #0x34]
	ldr		r0, _0803d46c
	and		r0, r1
	strh	r0, [r3, #0x34]
	str		r4, [r3, #0x8]
	ldr		r0, _0803d470
	str		r0, [r3, #0x48]
	add		r1, r3, #0x0
	add		r1, #0x80
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r0, _0803d474
	add		r2, r2, r0
	ldrh	r1, [r2, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x4
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	cmp		r0, r1
	bne		_0803d478
	mov		r0, #0x78
	b		_0803d47a

.incbin "base.gba", 0x3D462, 0x2

_0803d464:	.4byte 0x081085d8
_0803d468:	.4byte RunGameLogic_CallBack
_0803d46c:	.4byte 0x0000FFFE
_0803d470:	.4byte 0x08096588
_0803d474:	.4byte 0x000007FE

_0803d478:
	mov		r0, #0x2
_0803d47a:
	str		r0, [r3, #0x70]
	ldr		r0, _0803d484
	str		r0, [r3, #0x14]
	b		_0803d4a0

.incbin "base.gba", 0x3D482, 0x2

_0803d484:	.4byte 0x0803de1d

_0803d488:
	str		r4, [r3, #0x48]
_0803d48a:
	str		r5, [r3, #0x70]
	str		r2, [r3, #0x74]
	ldr		r0, [r3, #0x8]
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	add		r0, r0, r1
	str		r0, [r3, #0x8]
	add		r1, r3, #0x0
	add		r1, #0x80
	mov		r0, #0xb6
	str		r0, [r1, #0x0]
_0803d4a0:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3D4A6, 0x2
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	ldrh	r3, [r5, #0x10]
	mov		r0, #0xf0
	lsl		r0, r0, #0x8
	mov		r12, r0
	and		r3, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	cmp		r3, r0
	bne		_0803d596
	ldr		r6, _0803d538
	mov		r1, #0x24
	add		r1, r1, r6
	mov		r8, r1
	add		r4, r5, #0x0
	ldr		r1, [r5, #0x48]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803d552
	ldr		r2, _0803d53c
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	bne		_0803d502
	mov		r0, #0x20
	and		r1, r0
	cmp		r1, #0x0
	bne		_0803d502
	mov		r1, #0xff
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0xf
	and		r0, r1
	cmp		r0, #0x3
	bne		_0803d502
	mov		r0, #0x79
	bl		sub_0807073c
_0803d502:
	mov		r2, #0xbd
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0803d548
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803d548
	ldr		r0, _0803d540
	add		r0, r8
	bl		sub_08049164
	str		r4, [r0, #0x54]
	bl		sub_0803dd78
	ldr		r0, _0803d544
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_0803d58a
	mov		r0, #0x67
	bl		sub_0807073c
	b		_0803d58a

_0803d538:	.4byte RunGameLogic_CallBack
_0803d53c:	.4byte 0x00000838
_0803d540:	.4byte 0x0000070C
_0803d544:	.4byte 0x00000814

_0803d548:
	add		r0, r4, #0x0
	mov		r1, r8
	bl		sub_0803cf08
	b		_0803d58a
_0803d552:
	mov		r2, #0xbd
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldrh	r2, [r0, #0x0]
	cmp		r2, #0x0
	beq		_0803d566
	mov		r0, r12
	and		r0, r2
	cmp		r0, r3
	bne		_0803d58a
_0803d566:
	mov		r0, #0x20
	and		r1, r0
	cmp		r1, #0x0
	bne		_0803d58a
	mov		r1, #0xe6
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	bl		sub_08049164
	add		r4, r0, #0x0
	str		r5, [r4, #0x54]
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_080373dc
	add		r0, r4, #0x0
	bl		sub_0803dd78
_0803d58a:
	mov		r1, #0x0
	str		r1, [r7, #0x70]
	str		r1, [r7, #0x74]
	ldr		r0, _0803d5a0
	str		r0, [r7, #0x14]
	str		r1, [r7, #0x18]
_0803d596:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803d5a0:	.4byte sub_0803d3f0
	thumb_func_end sub_0803d3f0

	thumb_func_start sub_0803d5a4
sub_0803d5a4:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r0, _0803d5c4
	add		r4, r0, #0x0
	add		r4, #0x24
	ldr		r1, _0803d5c8
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	bge		_0803d5d0
	mov		r0, #0x8
	and		r1, r0
	cmp		r1, #0x0
	beq		_0803d5d0
_0803d5c0:
	ldr		r0, _0803d5cc
	b		_0803d7d2

_0803d5c4:	.4byte RunGameLogic_CallBack
_0803d5c8:	.4byte 0x00000CAC
_0803d5cc:	.4byte 0x08107c8c

_0803d5d0:
	ldr		r1, _0803d5f4
	add		r0, r4, r1
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	beq		_0803d60c
	cmp		r1, r0
	bgt		_0803d5f8
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_0803d60c
	b		_0803d7d0

.incbin "base.gba", 0x3D5F2, 0x2

_0803d5f4:	.4byte 0x000007DA

_0803d5f8:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_0803d60c
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r1, r0
	bne		_0803d60a
	b		_0803d7ac
_0803d60a:
	b		_0803d7d0
_0803d60c:
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_08044894
	ldrh	r4, [r4, #0x14]
	add		r1, r0, #0x0
	add		r1, #0x91
	ldrb	r1, [r1, #0x0]
	add		r3, r0, #0x0
	add		r3, #0x90
	add		r2, r1, #0x0
	mul		r2, r4
	ldrb	r3, [r3, #0x0]
	add		r2, r2, r3
	add		r1, r5, #0x0
	add		r1, #0x91
	ldrb	r1, [r1, #0x0]
	add		r3, r5, #0x0
	add		r3, #0x90
	mul		r1, r4
	ldrb	r3, [r3, #0x0]
	add		r1, r1, r3
	sub		r2, r2, r1
	cmp		r5, r0
	bne		_0803d65c
	bl		sub_0803d234
	mov		r1, #0x1
	and		r1, r0
	cmp		r1, #0x0
	beq		_0803d654
	ldr		r0, _0803d650
	b		_0803d7d2

.incbin "base.gba", 0x3D64E, 0x2

_0803d650:	.4byte 0x08107a28

_0803d654:
	ldr		r0, _0803d658
	b		_0803d7d2

_0803d658:	.4byte 0x08107a5c

_0803d65c:
	cmp		r2, #0x3c
	bls		_0803d662
	b		_0803d7a4
_0803d662:
	lsl		r0, r2, #0x2
	ldr		r1, _0803d66c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0803d66c:	.4byte 0x0803d670
_0803d670:	.4byte 0x0803d764

.incbin "base.gba", 0x3D674, 0xF0

_0803d764:
	ldr		r0, _0803d768
	b		_0803d7d2

_0803d768:	.4byte 0x08107a90

.incbin "base.gba", 0x3D76C, 0x8
	thumb_func_end sub_0803d5a4


.incbin "base.gba", 0x3D774, 0x30

_0803d7a4:

.incbin "base.gba", 0x3D7A4, 0x4
_0803d7a8:	.4byte 0x08107c38

_0803d7ac:

.incbin "base.gba", 0x3D7AC, 0xC
_0803d7b8:

.incbin "base.gba", 0x3D7B8, 0x8
_0803d7c0:	.4byte 0x0000017D
_0803d7c4:	.4byte 0x08107c64

_0803d7c8:

.incbin "base.gba", 0x3D7C8, 0x4
_0803d7cc:	.4byte 0x08107c78

_0803d7d0:

.incbin "base.gba", 0x3D7D0, 0x2
_0803d7d2:

.incbin "base.gba", 0x3D7D2, 0x6
_0803d7d8:	.4byte 0x081079fc
	thumb_func_start sub_0803d7dc
sub_0803d7dc:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	ldr		r1, _0803d814
	ldr		r3, _0803d818
	add		r0, r1, r3
	ldrb	r3, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r4, r0, #0x1
	mov		r0, #0x7
	and		r4, r0
	add		r0, r2, #0x0
	add		r0, #0x4c
	ldrb	r0, [r0, #0x0]
	mov		r5, #0x7
	and		r5, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	add		r1, r1, r0
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x1
	beq		_0803d89c
	cmp		r0, #0x1
	bgt		_0803d81c
	cmp		r0, #0x0
	beq		_0803d824
	b		_0803d9dc

_0803d814:	.4byte RunGameLogic_CallBack
_0803d818:	.4byte 0x00000801

_0803d81c:
	cmp		r0, #0x2
	bne		_0803d822
	b		_0803d938
_0803d822:
	b		_0803d9dc
_0803d824:
	sub		r0, r3, #0x4
	cmp		r0, #0x13
	bls		_0803d82c
	b		_0803d9dc
_0803d82c:
	lsl		r0, r0, #0x2
	ldr		r1, _0803d838
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x3D836, 0x2

_0803d838:	.4byte 0x0803d83c
_0803d83c:	.4byte 0x0803d910

.incbin "base.gba", 0x3D840, 0x5C

_0803d89c:
	sub		r0, r3, #0x4
	cmp		r0, #0x13
	bls		_0803d8a4
	b		_0803d9dc
_0803d8a4:
	lsl		r0, r0, #0x2
	ldr		r1, _0803d8b0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x3D8AE, 0x2

_0803d8b0:	.4byte 0x0803d8b4
_0803d8b4:	.4byte 0x0803d9a8

.incbin "base.gba", 0x3D8B8, 0x4C
	thumb_func_end sub_0803d7dc


.incbin "base.gba", 0x3D904, 0x34

_0803d938:

.incbin "base.gba", 0x3D938, 0x10
_0803d948:	.4byte 0x0803d94c
_0803d94c:	.4byte 0x0803d99c

.incbin "base.gba", 0x3D950, 0x80

_0803d9d0:

.incbin "base.gba", 0x3D9D0, 0x8
_0803d9d8:	.4byte 0x00000191

_0803d9dc:

.incbin "base.gba", 0x3D9DC, 0x4
_0803d9e0:

.incbin "base.gba", 0x3D9E0, 0x14
_0803d9f4:	.4byte 0x00000191
_0803d9f8:	.4byte 0x08107cb4

_0803d9fc:

.incbin "base.gba", 0x3D9FC, 0x4
_0803da00:	.4byte 0x08107db4

_0803da04:

.incbin "base.gba", 0x3DA04, 0x2
_0803da06:

.incbin "base.gba", 0x3DA06, 0x12
_0803da18:	.4byte 0x08107eb4
	thumb_func_start sub_0803da1c
sub_0803da1c:
	push	{ r4, r5, r6, lr }
	add		r6, r1, #0x0
	bl		sub_0803d5a4
	add		r5, r0, #0x0
	add		r2, r5, #0x0
	mov		r1, #0x0
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	cmp		r0, #0x0
	beq		_0803da48
_0803da32:
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	ldrh	r1, [r2, #0x2]
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	add		r2, #0x4
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r0, #0x0
	bne		_0803da32
_0803da48:
	lsl		r0, r1, #0x10
	asr		r4, r0, #0x10
	cmp		r4, #0x0
	beq		_0803da6a
	bl		sub_0803d234
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	add		r1, r4, #0x0
	bl		sub_08071b74
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	b		_0803da6c
_0803da64:
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	b		_0803daac
_0803da6a:
	mov		r0, #0x0
_0803da6c:
	add		r2, r5, #0x0
	b		_0803da78
_0803da70:
	ldrh	r1, [r2, #0x2]
	asr		r0, r0, #0x10
	sub		r0, r0, r1
	add		r2, #0x4
_0803da78:
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0803da70
	sub		r2, #0x4
	mov		r3, #0x0
	ldrsh	r4, [r2, r3]
	add		r0, r4, #0x0
	bl		sub_080370b4
	cmp		r0, r6
	ble		_0803daaa
	add		r4, r5, #0x0
	b		_0803daa0
_0803da92:
	mov		r3, #0x0
	ldrsh	r0, [r4, r3]
	bl		sub_080370b4
	cmp		r0, r6
	ble		_0803da64
	add		r4, #0x4
_0803daa0:
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	bne		_0803da92
	ldr		r4, _0803dab4
_0803daaa:
	add		r0, r4, #0x0
_0803daac:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3DAB2, 0x2

_0803dab4:	.4byte 0x00001007
	thumb_func_end sub_0803da1c

	thumb_func_start sub_0803dab8
sub_0803dab8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	ldr		r0, _0803db04
	mov		r1, #0x24
	add		r1, r1, r0
	mov		r8, r1
	ldr		r2, _0803db08
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	mov		r9, r0
	ldr		r6, [r5, #0x54]
	mov		r7, #0x0
	ldr		r4, _0803db0c
	mov		r1, #0x0
	mov		r3, #0x0
	ldrsh	r0, [r4, r3]
	cmp		r0, #0x0
	beq		_0803daf0
	add		r2, r4, #0x0
_0803dae4:
	add		r2, #0x4
	add		r1, #0x1
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r0, #0x0
	bne		_0803dae4
_0803daf0:
	cmp		r1, #0x0
	beq		_0803db10
	ldr		r0, [r5, #0x70]
	bl		sub_08071b74
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	mov		r1, #0x0
	ldrsh	r4, [r0, r1]
	b		_0803db14

_0803db04:	.4byte RunGameLogic_CallBack
_0803db08:	.4byte 0x00000838
_0803db0c:	.4byte 0x081079fc

_0803db10:
	mov		r2, #0x0
	ldrsh	r4, [r4, r2]
_0803db14:
	cmp		r6, r9
	bne		_0803db24
	cmp		r4, #0x0
	beq		_0803db24
	lsl		r0, r4, #0x10
	lsr		r0, r0, #0x10
	bl		sub_08046734
_0803db24:
	ldr		r0, [r5, #0x74]
	sub		r0, #0x1
	str		r0, [r5, #0x74]
	cmp		r0, #0x0
	bgt		_0803db50
	ldr		r2, [r5, #0x78]
	ldr		r1, _0803db40
	lsl		r0, r2, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_0803db44
	mov		r7, #0x1
	b		_0803db50

_0803db40:	.4byte 0x08108610

_0803db44:
	ldr		r0, [r5, #0x70]
	add		r0, #0x1
	str		r0, [r5, #0x70]
	str		r1, [r5, #0x74]
	add		r0, r2, #0x1
	str		r0, [r5, #0x78]
_0803db50:
	add		r0, r6, #0x0
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803db66
	ldr		r0, [r5, #0x78]
	cmp		r0, #0x2
	ble		_0803db66
	mov		r7, #0x1
_0803db66:
	cmp		r7, #0x0
	beq		_0803dc24
	ldr		r0, _0803db80
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x4
	cmp		r0, #0x13
	bhi		_0803dbe8
	lsl		r0, r0, #0x2
	ldr		r1, _0803db84
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0803db80:	.4byte 0x000007DD
_0803db84:	.4byte 0x0803db88
_0803db88:	.4byte 0x0803dbe4

.incbin "base.gba", 0x3DB8C, 0x4C
	thumb_func_end sub_0803dab8


.incbin "base.gba", 0x3DBD8, 0x10

_0803dbe8:

.incbin "base.gba", 0x3DBE8, 0x2E
_0803dc16:

.incbin "base.gba", 0x3DC16, 0xE
_0803dc24:

.incbin "base.gba", 0x3DC24, 0xC
_0803dc30:	.4byte 0x00000C83
_0803dc34:	.4byte 0x00000C84
_0803dc38:	.4byte 0x0000070C
	thumb_func_start sub_0803dc3c
sub_0803dc3c:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	ldr		r1, _0803dc54
	add		r2, r1, #0x0
	add		r2, #0x24
	ldr		r6, [r7, #0x54]
	ldr		r0, [r7, #0x70]
	cmp		r0, #0x0
	beq		_0803dc58
	sub		r0, #0x1
	str		r0, [r7, #0x70]
	b		_0803dd4a

_0803dc54:	.4byte RunGameLogic_CallBack

_0803dc58:
	ldr		r3, _0803dc74
	add		r0, r1, r3
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	bge		_0803dc7c
	mov		r0, #0x8
	and		r1, r0
	cmp		r1, #0x0
	beq		_0803dc7c
	ldr		r1, _0803dc78
	add		r0, r6, #0x0
	bl		sub_080373dc
	b		_0803dd38

_0803dc74:	.4byte 0x00000CAC
_0803dc78:	.4byte 0x00001007

_0803dc7c:
	ldr		r1, _0803dc94
	add		r0, r2, r1
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x4
	cmp		r0, #0x13
	bhi		_0803dcfc
	lsl		r0, r0, #0x2
	ldr		r1, _0803dc98
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x3DC92, 0x2

_0803dc94:	.4byte 0x000007DD
_0803dc98:	.4byte 0x0803dc9c
_0803dc9c:	.4byte 0x0803dcf8

.incbin "base.gba", 0x3DCA0, 0x4C

_0803dcec:
.incbin "base.gba", 0x3DCEC, 0x4
.incbin "base.gba", 0x3DCF0, 0x4
.incbin "base.gba", 0x3DCF4, 0x4
_0803dcf8:
.incbin "base.gba", 0x3DCF8, 0x4
_0803dcfc:
	mov		r1, #0x8
	ldr		r3, _0803dd28
	add		r0, r2, r3
	ldrb	r4, [r0, #0x0]
	sub		r4, r1, r4
	ldr		r1, _0803dd2c
	add		r0, r2, r1
	ldrb	r0, [r0, #0x0]
	sub		r4, r4, r0
	add		r0, r6, #0x0
	bl		sub_0803d7dc
	add		r5, r0, #0x0
	bl		sub_080370b4
	cmp		r0, r4
	bgt		_0803dd30
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_080373dc
	b		_0803dd38

_0803dd28:	.4byte 0x00000C83
_0803dd2c:	.4byte 0x00000C84

_0803dd30:
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080373dc
_0803dd38:
	mov		r0, #0x0
	str		r0, [r7, #0x14]
	ldr		r0, _0803dd50
	mov		r3, #0xe6
	lsl		r3, r3, #0x3
	add		r0, r0, r3
	add		r1, r7, #0x0
	bl		sub_080491c0
_0803dd4a:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803dd50:	.4byte RunGameLogic_CallBack
	add		r1, r0, #0x0
	ldr		r0, [r1, #0x7c]
	add		r0, #0x1
	str		r0, [r1, #0x7c]
	mov		r2, #0x3f
	and		r2, r0
	cmp		r2, #0x1f
	ble		_0803dd6a
	mov		r0, #0x40
	sub		r0, r0, r2
	b		_0803dd6c
_0803dd6a:
	add		r0, r2, #0x0
_0803dd6c:
	add		r1, #0x80
	lsl		r0, r0, #0x1
	add		r0, #0xb6
	str		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x3DD76, 0x2
	thumb_func_end sub_0803dc3c

	thumb_func_start sub_0803dd78
sub_0803dd78:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r3, [r2, #0x54]
	ldrh	r1, [r2, #0x34]
	ldr		r0, _0803ddb0
	and		r0, r1
	ldr		r1, _0803ddb4
	and		r0, r1
	strh	r0, [r2, #0x34]
	ldr		r0, [r3, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803ddbc
	add		r0, r2, #0x0
	add		r0, #0x4c
	ldrh	r1, [r0, #0x0]
	mov		r0, #0xf
	and		r0, r1
	str		r0, [r2, #0x70]
	mov		r0, #0x2
	str		r0, [r2, #0x74]
	mov		r0, #0x0
	str		r0, [r2, #0x78]
	ldr		r0, _0803ddb8
	b		_0803ddc2

.incbin "base.gba", 0x3DDAE, 0x2

_0803ddb0:	.4byte 0x0000FFFE
_0803ddb4:	.4byte 0x0000FFFD
_0803ddb8:	.4byte sub_0803dab8

_0803ddbc:
	mov		r0, #0x1e
	str		r0, [r2, #0x70]
	ldr		r0, _0803ddd4
_0803ddc2:
	str		r0, [r2, #0x14]
	mov		r0, #0x0
	str		r0, [r2, #0x18]
	add		r0, r3, #0x0
	mov		r1, #0x1
	bl		sub_080373dc
	pop		{ r0 }
	bx		r0

_0803ddd4:	.4byte sub_0803dc3c

.incbin "base.gba", 0x3DDD8, 0x1C
	mov		r1, #0x16
	str		r1, [r0, #0x74]
	ldr		r1, _0803de14
	str		r1, [r0, #0x48]
	add		r2, r0, #0x0
	add		r2, #0x4c
	mov		r1, #0x0
	strh	r1, [r2, #0x0]
	ldr		r1, _0803de18
	str		r1, [r0, #0x14]
	add		r0, #0x80
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	str		r1, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x3DE12, 0x2

_0803de14:	.4byte 0x08096588
_0803de18:	.4byte sub_0803de50
	add		r3, r0, #0x0
	ldr		r0, [r3, #0x70]
	cmp		r0, #0x0
	beq		_0803de2e
	sub		r0, #0x1
	str		r0, [r3, #0x70]
	add		r2, r3, #0x0
	add		r2, #0x80
	b		_0803de44
_0803de2e:
	add		r2, r3, #0x0
	add		r2, #0x80
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	str		r0, [r2, #0x0]
	ldrh	r1, [r3, #0x34]
	mov		r0, #0x1
	orr		r0, r1
	strh	r0, [r3, #0x34]
	ldr		r0, _0803de4c
	str		r0, [r3, #0x14]
_0803de44:
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	str		r0, [r2, #0x0]
	bx		lr

_0803de4c:	.4byte 0x0803ddf5
	thumb_func_end sub_0803dd78

	thumb_func_start sub_0803de50
sub_0803de50:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	ldr		r5, [r6, #0x74]
	cmp		r5, #0x0
	ble		_0803de5c
	sub		r5, #0x1
_0803de5c:
	str		r5, [r6, #0x74]
	add		r7, r6, #0x0
	add		r7, #0x80
	ldr		r4, _0803de98
	lsl		r0, r5, #0x8
	mov		r1, #0x16
	bl		sub_0807d80c
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	ldr		r1, [r0, #0x0]
	mov		r0, #0xca
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0803de7e
	ldr		r1, _0803de9c
	add		r0, r0, r1
_0803de7e:
	asr		r0, r0, #0xf
	add		r0, #0xb6
	str		r0, [r7, #0x0]
	cmp		r5, #0x0
	bne		_0803de90
	ldr		r0, _0803dea0
	str		r0, [r6, #0x18]
	ldr		r0, _0803dea4
	str		r0, [r6, #0x14]
_0803de90:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3DE96, 0x2

_0803de98:	.4byte 0x08101068
_0803de9c:	.4byte 0x00007FFF
_0803dea0:	.4byte 0x0803D4A9
_0803dea4:	.4byte 0x0803DD55

.incbin "base.gba", 0x3DEA8, 0x34
_0803dedc:	.4byte 0x0803df38

.incbin "base.gba", 0x3DEE0, 0x4C
	thumb_func_end sub_0803de50


.incbin "base.gba", 0x3DF2C, 0x94
	thumb_func_start sub_0803dfc0
sub_0803dfc0:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x54]
	ldr		r0, _0803e038
	add		r0, #0x24
	mov		r12, r0
	ldrh	r3, [r1, #0x10]
	mov		r6, #0xf0
	lsl		r6, r6, #0x8
	and		r6, r3
	mov		r0, #0x88
	lsl		r0, r0, #0x8
	cmp		r3, r0
	beq		_0803e0d0
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	cmp		r6, r0
	beq		_0803e0d0
	ldr		r0, [r4, #0x8]
	ldr		r2, _0803e03c
	cmp		r0, r2
	bgt		_0803e0d0
	ldr		r0, [r1, #0x8]
	cmp		r0, r2
	bgt		_0803e0d0
	ldrh	r0, [r4, #0x10]
	add		r2, r0, #0x0
	ldr		r0, _0803e040
	add		r7, r2, #0x0
	cmp		r2, r0
	bne		_0803e008
	cmp		r3, r2
	bne		_0803e008
	ldr		r0, [r1, #0x54]
	cmp		r5, r0
	beq		_0803e0d0
_0803e008:
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	cmp		r6, r0
	bne		_0803e050
	add		r0, r1, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_0803e050
	add		r1, r7, #0x0
	ldr		r0, _0803e044
	cmp		r1, r0
	bne		_0803e028
	mov		r0, #0x0
	str		r0, [r4, #0x7c]
_0803e028:
	ldr		r0, _0803e048
	cmp		r1, r0
	bne		_0803e0d0
	ldr		r0, _0803e04c
	str		r0, [r4, #0x14]
	mov		r0, #0x0
	str		r0, [r4, #0x7c]
	b		_0803e0d0

_0803e038:	.4byte RunGameLogic_CallBack
_0803e03c:	.4byte 0x00041FFF
_0803e040:	.4byte 0x00008401
_0803e044:	.4byte 0x00008402
_0803e048:	.4byte 0x00008403
_0803e04c:	.4byte 0x0803E741

_0803e050:
	ldr		r0, [r5, #0x48]
	ldr		r1, _0803e0d8
	and		r0, r1
	str		r0, [r5, #0x48]
	mov		r0, #0xd0
	lsl		r0, r0, #0x8
	add		r1, r4, #0x0
	add		r1, #0x5a
	mov		r3, #0x0
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	strh	r2, [r1, #0x0]
	str		r0, [r4, #0x30]
	ldrh	r1, [r4, #0x34]
	ldr		r0, _0803e0dc
	and		r0, r1
	strh	r0, [r4, #0x34]
	str		r3, [r4, #0x18]
	ldr		r0, _0803e0e0
	str		r0, [r4, #0x14]
	cmp		r6, r2
	bne		_0803e0d0
	ldr		r0, _0803e0e4
	add		r0, r12
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803e0d0
	mov		r0, r12
	add		r1, r4, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	cmp		r6, #0x0
	beq		_0803e0d0
	mov		r0, #0x7c
	bl		sub_0807073c
	ldr		r5, _0803e0e8
	ldr		r4, _0803e0ec
	mov		r0, #0xf8
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_0803e0d0:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3E0D6, 0x2

_0803e0d8:	.4byte 0xfffeffff
_0803e0dc:	.4byte 0x0000FFFD
_0803e0e0:	.4byte 0x0804123D
_0803e0e4:	.4byte 0x00000814
_0803e0e8:	.4byte 0x08124544
_0803e0ec:	.4byte 0x081245c8
	thumb_func_end sub_0803dfc0

	thumb_func_start sub_0803e0f0
sub_0803e0f0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	ldr		r0, [r4, #0x54]
	mov		r12, r0
	ldr		r7, _0803e1e8
	mov		r1, #0x24
	add		r1, r1, r7
	mov		r8, r1
	ldrh	r2, [r3, #0x10]
	add		r1, r2, #0x0
	mov		r5, #0xf0
	lsl		r5, r5, #0x8
	add		r6, r1, #0x0
	and		r6, r5
	mov		r0, #0x88
	lsl		r0, r0, #0x8
	cmp		r1, r0
	beq		_0803e1de
	and		r2, r5
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	cmp		r2, r0
	beq		_0803e1de
	ldr		r0, [r4, #0x8]
	ldr		r1, _0803e1ec
	cmp		r0, r1
	bgt		_0803e1de
	ldr		r0, [r3, #0x8]
	cmp		r0, r1
	bgt		_0803e1de
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	cmp		r6, r0
	bne		_0803e146
	add		r0, r3, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0803e1de
_0803e146:
	mov		r1, r12
	ldr		r0, [r1, #0x48]
	ldr		r1, _0803e1f0
	and		r0, r1
	mov		r1, r12
	str		r0, [r1, #0x48]
	mov		r0, #0xd0
	lsl		r0, r0, #0x8
	add		r1, r4, #0x0
	add		r1, #0x5a
	mov		r2, #0x0
	mov		r3, #0x80
	lsl		r3, r3, #0x8
	strh	r3, [r1, #0x0]
	str		r0, [r4, #0x30]
	ldrh	r1, [r4, #0x34]
	ldr		r0, _0803e1f4
	and		r0, r1
	strh	r0, [r4, #0x34]
	str		r2, [r4, #0x18]
	ldr		r0, _0803e1f8
	str		r0, [r4, #0x14]
	mov		r1, #0xbe
	lsl		r1, r1, #0x1
	add		r1, r12
	ldrb	r0, [r1, #0x0]
	sub		r0, #0x1
	strb	r0, [r1, #0x0]
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r0, r12
	strh	r2, [r0, #0x0]
	cmp		r6, r3
	bne		_0803e1de
	ldr		r1, _0803e1fc
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803e1de
	mov		r0, r8
	add		r1, r4, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	cmp		r6, #0x0
	beq		_0803e1de
	mov		r0, #0x7c
	bl		sub_0807073c
	ldr		r5, _0803e200
	ldr		r4, _0803e204
	mov		r0, #0xf8
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_0803e1de:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803e1e8:	.4byte RunGameLogic_CallBack
_0803e1ec:	.4byte 0x00041FFF
_0803e1f0:	.4byte 0xfffeffff
_0803e1f4:	.4byte 0x0000FFFD
_0803e1f8:	.4byte 0x0804123D
_0803e1fc:	.4byte 0x00000838
_0803e200:	.4byte 0x08124544
_0803e204:	.4byte 0x081245c8
	thumb_func_end sub_0803e0f0

	thumb_func_start sub_0803e208
sub_0803e208:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _0803e264
	add		r0, #0x24
	mov		r8, r0
	ldrh	r1, [r4, #0x10]
	add		r7, r1, #0x0
	mov		r2, #0xf0
	lsl		r2, r2, #0x8
	add		r6, r7, #0x0
	and		r6, r2
	mov		r0, #0x88
	lsl		r0, r0, #0x8
	cmp		r7, r0
	beq		_0803e2fa
	and		r1, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	cmp		r1, r0
	beq		_0803e2fa
	ldr		r0, [r5, #0x8]
	ldr		r1, _0803e268
	cmp		r0, r1
	bgt		_0803e2fa
	ldr		r0, [r4, #0x8]
	cmp		r0, r1
	bgt		_0803e2fa
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	cmp		r6, r0
	bne		_0803e290
	add		r0, r4, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_0803e270
	ldr		r0, _0803e26c
	str		r0, [r5, #0x14]
	mov		r0, #0x0
	str		r0, [r5, #0x7c]
	b		_0803e2fa

.incbin "base.gba", 0x3E262, 0x2

_0803e264:	.4byte RunGameLogic_CallBack
_0803e268:	.4byte 0x00041FFF
_0803e26c:	.4byte 0x0803E741

_0803e270:
	add		r0, r4, #0x0
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x1
	cmp		r0, #0x0
	beq		_0803e288
	add		r0, r4, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_0803e290
_0803e288:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0803dfc0
_0803e290:
	ldr		r0, _0803e304
	cmp		r7, r0
	bne		_0803e29e
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0803dfc0
_0803e29e:
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	cmp		r6, r0
	bne		_0803e2fa
	ldr		r0, _0803e308
	add		r0, r8
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803e2fa
	mov		r0, r8
	add		r1, r5, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	cmp		r6, #0x0
	beq		_0803e2fa
	mov		r0, #0x7c
	bl		sub_0807073c
	ldr		r5, _0803e30c
	ldr		r4, _0803e310
	mov		r0, #0xf8
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_0803e2fa:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803e304:	.4byte 0x00008403
_0803e308:	.4byte 0x00000814
_0803e30c:	.4byte 0x08124544
_0803e310:	.4byte 0x081245c8
	thumb_func_end sub_0803e208

	thumb_func_start sub_0803e314
sub_0803e314:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r9, r0
	add		r6, r1, #0x0
	mov		r5, r9
	cmp		r2, #0x7
	bhi		_0803e3d2
	lsl		r0, r2, #0x2
	ldr		r1, _0803e334
	add		r1, r0, r1
	ldr		r1, [r1, #0x0]
	mov		r8, r0
	mov		pc, r1

.incbin "base.gba", 0x3E332, 0x2

_0803e334:	.4byte 0x0803e338
_0803e338:	.4byte 0x0803e3c4

.incbin "base.gba", 0x3E33C, 0x1C
	thumb_func_end sub_0803e314


.incbin "base.gba", 0x3E358, 0x7A

_0803e3d2:

.incbin "base.gba", 0x3E3D2, 0xE
	thumb_func_start sub_0803e3e0
sub_0803e3e0:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	ldr		r1, [r4, #0x8]
	ldr		r0, _0803e408
	cmp		r1, r0
	bgt		_0803e48e
	ldr		r1, [r4, #0x0]
	ldr		r2, [r4, #0x4]
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_0802c750
	cmp		r0, #0x0
	beq		_0803e40c
	add		r1, r4, #0x0
	add		r1, #0x4e
	mov		r0, #0x26
	b		_0803e494

.incbin "base.gba", 0x3E406, 0x2

_0803e408:	.4byte 0x0004FFFF

_0803e40c:
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bge		_0803e416
	ldr		r1, _0803e470
	add		r0, r0, r1
_0803e416:
	lsr		r1, r0, #0x10
	ldr		r2, [r4, #0x4]
	cmp		r2, #0x0
	bge		_0803e422
	ldr		r0, _0803e470
	add		r2, r2, r0
_0803e422:
	asr		r2, r2, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0803e42c
	add		r0, r2, #0x7
_0803e42c:
	asr		r0, r0, #0x3
	lsl		r3, r0, #0x8
	lsl		r0, r1, #0x10
	asr		r1, r0, #0x10
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0803e43c
	add		r0, r1, #0x7
_0803e43c:
	asr		r0, r0, #0x3
	add		r5, r3, r0
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_0802c490
	add		r1, r4, #0x0
	add		r1, #0x4e
	strb	r0, [r1, #0x0]
	mov		r1, #0x90
	and		r1, r0
	cmp		r1, #0x80
	bne		_0803e486
	add		r1, r4, #0x0
	add		r1, #0x52
	ldrh	r0, [r1, #0x0]
	sub		r2, r5, r0
	strh	r5, [r1, #0x0]
	cmp		r2, #0x0
	bge		_0803e474
	neg		r2, r2
	sub		r2, #0xfa
	cmp		r2, #0x0
	bge		_0803e47c
	mov		r2, #0x4
	b		_0803e47c

_0803e470:	.4byte 0x0000FFFF

_0803e474:
	sub		r2, #0x1
	cmp		r2, #0x0
	beq		_0803e47c
	sub		r2, #0xfd
_0803e47c:
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_0803e314
	b		_0803e498
_0803e486:
	add		r0, r4, #0x0
	add		r0, #0x52
	strh	r5, [r0, #0x0]
	b		_0803e496
_0803e48e:
	add		r1, r4, #0x0
	add		r1, #0x4e
	mov		r0, #0x40
_0803e494:
	strb	r0, [r1, #0x0]
_0803e496:
	mov		r0, #0x0
_0803e498:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3E49E, 0x2
	thumb_func_end sub_0803e3e0

	thumb_func_start sub_0803e4a0
sub_0803e4a0:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r2, r1, #0x0
	ldr		r0, _0803e4e4
	add		r5, r0, #0x0
	add		r5, #0x24
	ldr		r0, [r6, #0x8]
	cmp		r0, #0x0
	bne		_0803e58e
	add		r4, r6, #0x0
	add		r4, #0x50
	ldrh	r1, [r4, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803e580
	add		r0, r6, #0x0
	add		r1, r2, #0x0
	bl		sub_0803e3e0
	cmp		r0, #0x0
	beq		_0803e58c
	ldrh	r1, [r4, #0x0]
	mov		r2, #0x7
	and		r2, r1
	add		r2, #0x1
	cmp		r2, #0x7
	bhi		_0803e4f0
	ldr		r0, _0803e4e8
	and		r0, r1
	ldr		r3, _0803e4ec
	b		_0803e4f6

.incbin "base.gba", 0x3E4E2, 0x2

_0803e4e4:	.4byte RunGameLogic_CallBack
_0803e4e8:	.4byte 0x0000FFF8
_0803e4ec:	.4byte 0xFFFF8000

_0803e4f0:
	ldr		r0, _0803e568
	and		r0, r1
	ldr		r3, _0803e56c
_0803e4f6:
	add		r1, r3, #0x0
	orr		r0, r1
	orr		r0, r2
	strh	r0, [r4, #0x0]
	ldr		r1, _0803e570
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803e552
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	cmp		r7, #0x0
	beq		_0803e552
	mov		r0, #0x7c
	bl		sub_0807073c
	ldr		r5, _0803e574
	ldr		r4, _0803e578
	mov		r3, #0xf8
	lsl		r3, r3, #0x2
	add		r4, r4, r3
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r7, #0x0
	bl		sub_0807169c
_0803e552:
	add		r1, r6, #0x0
	add		r1, #0x74
	ldrb	r0, [r1, #0x0]
	sub		r0, #0x1
	strb	r0, [r1, #0x0]
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_0803e58e
	ldr		r0, _0803e57c
	str		r0, [r6, #0x14]
	b		_0803e58e

_0803e568:	.4byte 0x0000FFF8
_0803e56c:	.4byte 0xFFFFC000
_0803e570:	.4byte 0x00000814
_0803e574:	.4byte 0x08124544
_0803e578:	.4byte 0x081245c8
_0803e57c:	.4byte sub_08041278

_0803e580:
	add		r0, r6, #0x0
	add		r1, r2, #0x0
	bl		sub_0803e3e0
	cmp		r0, #0x0
	bne		_0803e58e
_0803e58c:
	strh	r0, [r4, #0x0]
_0803e58e:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803e4a0

	thumb_func_start sub_0803e594
sub_0803e594:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r5, r4, #0x0
	ldr		r6, [r4, #0x54]
	ldr		r0, _0803e638
	add		r7, r0, #0x0
	add		r7, #0x24
	add		r0, r4, #0x0
	add		r1, r7, #0x0
	bl		sub_0803e4a0
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	bge		_0803e5b4
	ldr		r0, _0803e63c
	add		r1, r1, r0
_0803e5b4:
	asr		r1, r1, #0x10
	ldr		r2, [r4, #0x4]
	cmp		r2, #0x0
	bge		_0803e5c0
	ldr		r0, _0803e63c
	add		r2, r2, r0
_0803e5c0:
	asr		r2, r2, #0x10
	ldr		r3, [r4, #0x8]
	cmp		r3, #0x0
	bge		_0803e5cc
	ldr		r0, _0803e63c
	add		r3, r3, r0
_0803e5cc:
	asr		r3, r3, #0x10
	add		r0, r7, #0x0
	bl		sub_0802c3d4
	add		r1, r0, #0x0
	cmp		r1, #0x7f
	beq		_0803e5e4
	mov		r0, #0x7f
	and		r1, r0
	add		r0, r4, #0x0
	add		r0, #0x36
	strb	r1, [r0, #0x0]
_0803e5e4:
	ldrh	r0, [r4, #0x38]
	cmp		r0, #0x0
	beq		_0803e5ee
	sub		r0, #0x1
	strh	r0, [r4, #0x38]
_0803e5ee:
	mov		r2, #0x0
	add		r0, r4, #0x0
	add		r0, #0x4e
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803e60c
	mov		r0, #0x0
	cmp		r1, #0x26
	bne		_0803e606
	mov		r0, #0x1
_0803e606:
	cmp		r0, #0x0
	bne		_0803e60c
	mov		r2, #0x1
_0803e60c:
	cmp		r2, #0x0
	bne		_0803e622
	mov		r1, #0x0
	add		r0, r5, #0x0
	add		r0, #0x4e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x26
	bne		_0803e61e
	mov		r1, #0x1
_0803e61e:
	cmp		r1, #0x0
	beq		_0803e648
_0803e622:
	ldr		r0, [r6, #0x48]
	ldr		r1, _0803e640
	and		r0, r1
	str		r0, [r6, #0x48]
	ldr		r1, _0803e644
	add		r0, r7, r1
	add		r1, r5, #0x0
	bl		sub_080491c0
	b		_0803e6ea

.incbin "base.gba", 0x3E636, 0x2

_0803e638:	.4byte RunGameLogic_CallBack
_0803e63c:	.4byte 0x0000FFFF
_0803e640:	.4byte 0xfffeffff
_0803e644:	.4byte 0x0000070C

_0803e648:
	ldrh	r1, [r4, #0x34]
	mov		r0, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r4, #0x34]
	add		r2, r5, #0x0
	add		r2, #0x4c
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x7
	and		r0, r1
	add		r7, r2, #0x0
	cmp		r0, #0x0
	bne		_0803e6c4
	add		r0, r5, #0x0
	add		r0, #0x70
	ldrb	r3, [r0, #0x0]
	ldrh	r1, [r5, #0x10]
	ldr		r2, _0803e680
	mov		r12, r0
	cmp		r1, r2
	beq		_0803e69c
	cmp		r1, r2
	bgt		_0803e688
	ldr		r0, _0803e684
	cmp		r1, r0
	beq		_0803e694
	b		_0803e6b4

_0803e680:	.4byte 0x00008402
_0803e684:	.4byte 0x00008401

_0803e688:
	ldr		r0, _0803e690
	cmp		r1, r0
	beq		_0803e6a4
	b		_0803e6b4

_0803e690:	.4byte 0x00008403

_0803e694:
	ldr		r1, _0803e698
	b		_0803e6a6

_0803e698:	.4byte 0x081086c0

_0803e69c:
	ldr		r1, _0803e6a0
	b		_0803e6a6

_0803e6a0:	.4byte 0x081086d8

_0803e6a4:
	ldr		r1, _0803e6b0
_0803e6a6:
	lsl		r0, r3, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_0803e6b6

.incbin "base.gba", 0x3E6AE, 0x2

_0803e6b0:	.4byte 0x081086f0

_0803e6b4:
	mov		r0, #0x0
_0803e6b6:
	str		r0, [r5, #0x48]
	add		r3, #0x1
	cmp		r3, #0x5
	ble		_0803e6c0
	mov		r3, #0x0
_0803e6c0:
	mov		r0, r12
	strb	r3, [r0, #0x0]
_0803e6c4:
	ldrh	r0, [r7, #0x0]
	add		r0, #0x1
	strh	r0, [r7, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x10
	bne		_0803e6da
	ldr		r0, [r6, #0x48]
	ldr		r1, _0803e6f0
	and		r0, r1
	str		r0, [r6, #0x48]
_0803e6da:
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x28]
	add		r0, r0, r1
	str		r0, [r4, #0x0]
	ldr		r0, [r4, #0x4]
	ldr		r1, [r4, #0x2c]
	add		r0, r0, r1
	str		r0, [r4, #0x4]
_0803e6ea:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803e6f0:	.4byte 0xfffeffff
	thumb_func_end sub_0803e594

	thumb_func_start sub_0803e6f4
sub_0803e6f4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r0, #0x26
	ldrsh	r3, [r4, r0]
	lsl		r1, r1, #0x10
	asr		r2, r1, #0x10
	sub		r0, r2, r3
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0803e720
	sub		r0, r2, r3
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	ldr		r1, _0803e718
	cmp		r0, r1
	bgt		_0803e738
	ldr		r1, _0803e71c
	b		_0803e72e

_0803e718:	.4byte 0xFFFFF800
_0803e71c:	.4byte 0xFFFFFC00

_0803e720:
	sub		r0, r2, r3
	lsl		r0, r0, #0x10
	ldr		r1, _0803e734
	cmp		r0, r1
	ble		_0803e738
	mov		r1, #0x80
	lsl		r1, r1, #0x3
_0803e72e:
	add		r0, r3, r1
	strh	r0, [r4, #0x26]
	b		_0803e73a

_0803e734:	.4byte 0x07FF0000

_0803e738:
	strh	r2, [r4, #0x26]
_0803e73a:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0803e6f4

	thumb_func_start sub_0803e740
sub_0803e740:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	mov		r8, r0
	ldr		r0, [r0, #0x7c]
	str		r0, [sp, #0x4]
	mov		r9, r8
	mov		r1, r9
	ldr		r1, [r1, #0x54]
	str		r1, [sp, #0x8]
	mov		r0, r9
	ldr		r1, _0803e7fc
	bl		sub_0803e4a0
	mov		r2, r9
	ldr		r1, [r2, #0x0]
	cmp		r1, #0x0
	bge		_0803e76e
	ldr		r3, _0803e800
	add		r1, r1, r3
_0803e76e:
	asr		r1, r1, #0x10
	mov		r4, r9
	ldr		r2, [r4, #0x4]
	cmp		r2, #0x0
	bge		_0803e77c
	ldr		r5, _0803e800
	add		r2, r2, r5
_0803e77c:
	asr		r2, r2, #0x10
	mov		r6, r9
	ldr		r3, [r6, #0x8]
	cmp		r3, #0x0
	bge		_0803e78a
	ldr		r7, _0803e800
	add		r3, r3, r7
_0803e78a:
	asr		r3, r3, #0x10
	ldr		r0, _0803e7fc
	bl		sub_0802c3d4
	add		r1, r0, #0x0
	cmp		r1, #0x7f
	beq		_0803e7a2
	mov		r0, #0x7f
	and		r1, r0
	mov		r0, r9
	add		r0, #0x36
	strb	r1, [r0, #0x0]
_0803e7a2:
	mov		r1, r9
	ldrh	r0, [r1, #0x38]
	cmp		r0, #0x0
	beq		_0803e7ae
	sub		r0, #0x1
	strh	r0, [r1, #0x38]
_0803e7ae:
	mov		r2, #0x0
	mov		r0, r9
	add		r0, #0x4e
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803e7cc
	mov		r0, #0x0
	cmp		r1, #0x26
	bne		_0803e7c6
	mov		r0, #0x1
_0803e7c6:
	cmp		r0, #0x0
	bne		_0803e7cc
	mov		r2, #0x1
_0803e7cc:
	cmp		r2, #0x0
	bne		_0803e7e2
	mov		r1, #0x0
	mov		r0, r8
	add		r0, #0x4e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x26
	bne		_0803e7de
	mov		r1, #0x1
_0803e7de:
	cmp		r1, #0x0
	beq		_0803e80c
_0803e7e2:
	ldr		r2, [sp, #0x8]
	ldr		r0, [r2, #0x48]
	ldr		r1, _0803e804
	and		r0, r1
	str		r0, [r2, #0x48]
	ldr		r3, _0803e7fc
	ldr		r4, _0803e808
	add		r0, r3, r4
	mov		r1, r8
	bl		sub_080491c0
	b		_0803ed58

.incbin "base.gba", 0x3E7FA, 0x2

_0803e7fc:	.4byte 0x030031C4
_0803e800:	.4byte 0x0000FFFF
_0803e804:	.4byte 0xfffeffff
_0803e808:	.4byte 0x0000070C

_0803e80c:
	mov		r5, r9
	ldrh	r1, [r5, #0x34]
	mov		r0, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r5, #0x34]
	ldr		r6, _0803e8d0
	ldr		r7, _0803e8d4
	add		r0, r6, r7
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803e82e
	b		_0803e9b0
_0803e82e:
	mov		r0, #0x71
	add		r0, r8
	mov		r10, r0
	ldr		r1, _0803e8d8
	add		r1, r6, r1
	str		r1, [sp, #0x14]
	mov		r2, r8
	add		r2, #0x4c
	str		r2, [sp, #0x10]
	ldr		r3, [sp, #0x4]
	cmp		r3, #0x0
	bne		_0803e904
	mov		r4, #0x0
	mov		r12, r4
	mov		r5, #0xfe
	lsl		r5, r5, #0x3
	add		r0, r6, r5
	ldrb	r6, [r0, #0x0]
	cmp		r3, r6
	bge		_0803e8b4
	str		r0, [sp, #0xC]
	ldr		r7, _0803e8d0
	ldr		r0, _0803e8dc
	add		r3, r7, r0
_0803e85e:
	ldr		r2, [r3, #0x0]
	ldr		r1, [sp, #0x8]
	cmp		r2, r1
	beq		_0803e8a6
	ldr		r1, [r2, #0x0]
	mov		r4, r9
	ldr		r0, [r4, #0x0]
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_0803e876
	ldr		r5, _0803e8e0
	add		r0, r0, r5
_0803e876:
	asr		r7, r0, #0x10
	ldr		r1, [r2, #0x4]
	mov		r6, r9
	ldr		r0, [r6, #0x4]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_0803e888
	ldr		r0, _0803e8e0
	add		r1, r1, r0
_0803e888:
	asr		r4, r1, #0x10
	add		r6, r7, #0x0
	cmp		r6, #0x0
	bge		_0803e892
	neg		r6, r6
_0803e892:
	add		r5, r4, #0x0
	cmp		r5, #0x0
	bge		_0803e89a
	neg		r5, r5
_0803e89a:
	cmp		r6, #0x40
	bgt		_0803e8a6
	cmp		r5, #0x40
	bgt		_0803e8a6
	mov		r1, r8
	str		r2, [r1, #0x7c]
_0803e8a6:
	add		r3, #0x4
	mov		r2, #0x1
	add		r12, r2
	ldr		r4, [sp, #0xC]
	ldrb	r4, [r4, #0x0]
	cmp		r12, r4
	blt		_0803e85e
_0803e8b4:
	ldr		r5, [sp, #0x4]
	cmp		r5, #0x0
	bne		_0803e904
	mov		r2, #0x74
	mov		r6, r10
	ldrb	r0, [r6, #0x0]
	ldr		r7, [sp, #0x14]
	ldrb	r1, [r7, #0x0]
	cmp		r1, #0x0
	beq		_0803e8e4
	cmp		r1, #0x2
	beq		_0803e8e8
	b		_0803e8ea

.incbin "base.gba", 0x3E8CE, 0x2

_0803e8d0:	.4byte 0x030031C4
_0803e8d4:	.4byte 0x000007DA
_0803e8d8:	.4byte 0x000007DC
_0803e8dc:	.4byte 0x000007F4
_0803e8e0:	.4byte 0x0000FFFF

_0803e8e4:
	mov		r2, #0x6c
	b		_0803e8ea
_0803e8e8:
	mov		r2, #0x7e
_0803e8ea:
	cmp		r0, r2
	blt		_0803e8f6
	sub		r0, #0x10
	cmp		r0, r2
	bge		_0803e8fe
	b		_0803e8fc
_0803e8f6:
	add		r0, #0x4
	cmp		r0, r2
	ble		_0803e8fe
_0803e8fc:
	add		r0, r2, #0x0
_0803e8fe:
	mov		r1, r10
	strb	r0, [r1, #0x0]
	b		_0803ec60
_0803e904:
	ldr		r2, [sp, #0x4]
	ldr		r1, [r2, #0x0]
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_0803e916
	ldr		r4, _0803e95c
	add		r0, r0, r4
_0803e916:
	asr		r7, r0, #0x10
	ldr		r5, [sp, #0x4]
	ldr		r1, [r5, #0x4]
	mov		r6, r9
	ldr		r0, [r6, #0x4]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_0803e92a
	ldr		r0, _0803e95c
	add		r1, r1, r0
_0803e92a:
	asr		r4, r1, #0x10
	add		r6, r7, #0x0
	cmp		r6, #0x0
	bge		_0803e934
	neg		r6, r6
_0803e934:
	add		r5, r4, #0x0
	cmp		r5, #0x0
	bge		_0803e93c
	neg		r5, r5
_0803e93c:
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_08028738
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	mov		r2, #0x3c
	mov		r1, r10
	ldrb	r0, [r1, #0x0]
	ldr		r3, [sp, #0x14]
	ldrb	r1, [r3, #0x0]
	cmp		r1, #0x0
	beq		_0803e960
	cmp		r1, #0x2
	beq		_0803e964
	b		_0803e966

_0803e95c:	.4byte 0x0000FFFF

_0803e960:
	mov		r2, #0x34
	b		_0803e966
_0803e964:
	mov		r2, #0x46
_0803e966:
	cmp		r0, r2
	blt		_0803e972
	sub		r0, #0x10
	cmp		r0, r2
	bge		_0803e97a
	b		_0803e978
_0803e972:
	add		r0, #0x4
	cmp		r0, r2
	ble		_0803e97a
_0803e978:
	add		r0, r2, #0x0
_0803e97a:
	mov		r7, r10
	strb	r0, [r7, #0x0]
	mov		r1, r8
	add		r1, #0x7a
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0803e98e
	sub		r0, #0x1
	strb	r0, [r1, #0x0]
	b		_0803e99e
_0803e98e:
	ldr		r1, [sp, #0x4]
	ldr		r0, [r1, #0x8]
	cmp		r0, #0x0
	bne		_0803e99e
	cmp		r6, #0xc
	bgt		_0803e99e
	cmp		r5, #0xc
	ble		_0803e9aa
_0803e99e:
	lsl		r1, r4, #0x10
	asr		r1, r1, #0x10
	mov		r0, r8
	bl		sub_0803e6f4
	b		_0803ec60
_0803e9aa:
	mov		r2, r9
	strh	r4, [r2, #0x26]
	b		_0803ec60
_0803e9b0:
	ldr		r3, [sp, #0x4]
	cmp		r3, #0x0
	bne		_0803e9fc
	mov		r3, #0x74
	mov		r1, r8
	add		r1, #0x71
	ldrb	r2, [r1, #0x0]
	ldr		r4, _0803e9d4
	ldr		r5, _0803e9d8
	add		r0, r4, r5
	ldrb	r0, [r0, #0x0]
	mov		r10, r1
	cmp		r0, #0x0
	beq		_0803e9dc
	cmp		r0, #0x2
	beq		_0803e9e0
	b		_0803e9e2

.incbin "base.gba", 0x3E9D2, 0x2

_0803e9d4:	.4byte 0x030031C4
_0803e9d8:	.4byte 0x000007DC

_0803e9dc:
	mov		r3, #0x6c
	b		_0803e9e2
_0803e9e0:
	mov		r3, #0x7e
_0803e9e2:
	cmp		r2, r3
	blt		_0803e9ee
	sub		r2, #0x10
	cmp		r2, r3
	bge		_0803e9f6
	b		_0803e9f4
_0803e9ee:
	add		r2, #0x4
	cmp		r2, r3
	ble		_0803e9f6
_0803e9f4:
	add		r2, r3, #0x0
_0803e9f6:
	mov		r6, r10
	strb	r2, [r6, #0x0]
	b		_0803ec5a
_0803e9fc:
	ldr		r0, [sp, #0x4]
	ldr		r1, [r0, #0x0]
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_0803ea0e
	ldr		r3, _0803ea88
	add		r0, r0, r3
_0803ea0e:
	asr		r7, r0, #0x10
	ldr		r4, [sp, #0x4]
	ldr		r1, [r4, #0x4]
	mov		r5, r9
	ldr		r0, [r5, #0x4]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_0803ea22
	ldr		r6, _0803ea88
	add		r1, r1, r6
_0803ea22:
	asr		r4, r1, #0x10
	add		r6, r7, #0x0
	cmp		r6, #0x0
	bge		_0803ea2c
	neg		r6, r6
_0803ea2c:
	add		r5, r4, #0x0
	cmp		r5, #0x0
	bge		_0803ea34
	neg		r5, r5
_0803ea34:
	add		r0, r7, #0x0
	mul		r0, r7
	add		r1, r4, #0x0
	mul		r1, r4
	add		r0, r0, r1
	str		r0, [sp, #0x0]
	mov		r0, #0x36
	add		r0, r8
	mov		r12, r0
	ldrb	r3, [r0, #0x0]
	mov		r2, r8
	add		r2, #0x79
	ldrb	r0, [r2, #0x0]
	mov		r1, r8
	add		r1, #0x78
	cmp		r0, r3
	beq		_0803ea5e
	strb	r3, [r2, #0x0]
	ldrb	r0, [r1, #0x0]
	sub		r0, #0x1
	strb	r0, [r1, #0x0]
_0803ea5e:
	ldrb	r3, [r1, #0x0]
	cmp		r3, #0x0
	bne		_0803ea94
	mov		r1, #0xd0
	lsl		r1, r1, #0x8
	mov		r2, r8
	add		r2, #0x5a
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	strh	r0, [r2, #0x0]
	mov		r2, r8
	str		r1, [r2, #0x30]
	ldrh	r1, [r2, #0x34]
	ldr		r0, _0803ea8c
	and		r0, r1
	strh	r0, [r2, #0x34]
	str		r3, [r2, #0x18]
	ldr		r0, _0803ea90
	str		r0, [r2, #0x14]
	b		_0803ed58

.incbin "base.gba", 0x3EA86, 0x2

_0803ea88:	.4byte 0x0000FFFF
_0803ea8c:	.4byte 0x0000FFFD
_0803ea90:	.4byte 0x0804123D

_0803ea94:
	ldr		r0, _0803eb24
	ldrh	r3, [r0, #0x14]
	mov		r2, r12
	ldrb	r1, [r2, #0x0]
	add		r0, r1, #0x1
	cmp		r0, r3
	blt		_0803eaa6
	sub		r0, r3, #0x1
	sub		r0, r1, r0
_0803eaa6:
	mov		r10, r0
	add		r0, r1, #0x2
	cmp		r0, r3
	blt		_0803eab2
	sub		r0, r3, #0x2
	sub		r0, r1, r0
_0803eab2:
	mov		r12, r0
	sub		r2, r1, #0x1
	cmp		r2, #0x0
	bge		_0803eabe
	sub		r0, r3, #0x1
	add		r2, r1, r0
_0803eabe:
	ldr		r0, [sp, #0x4]
	add		r0, #0x90
	ldrb	r0, [r0, #0x0]
	cmp		r0, r1
	beq		_0803eb5e
	cmp		r0, r10
	beq		_0803eb5e
	cmp		r0, r12
	beq		_0803eb5e
	mov		r1, #0x0
	cmp		r0, r2
	bne		_0803ead8
	mov		r1, #0x1
_0803ead8:
	cmp		r1, #0x0
	bne		_0803eb5e
	ldr		r0, _0803eb28
	add		r0, #0x24
	mov		r3, r8
	ldr		r1, [r3, #0x0]
	cmp		r1, #0x0
	bge		_0803eaec
	ldr		r4, _0803eb2c
	add		r1, r1, r4
_0803eaec:
	asr		r1, r1, #0x10
	mov		r5, r8
	ldr		r2, [r5, #0x4]
	cmp		r2, #0x0
	bge		_0803eafa
	ldr		r6, _0803eb2c
	add		r2, r2, r6
_0803eafa:
	asr		r2, r2, #0x10
	mov		r3, #0x1
	bl		sub_0802c35c
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	mov		r3, #0x74
	mov		r1, r8
	add		r1, #0x71
	ldrb	r2, [r1, #0x0]
	ldr		r7, _0803eb24
	ldr		r5, _0803eb30
	add		r0, r7, r5
	ldrb	r0, [r0, #0x0]
	mov		r10, r1
	cmp		r0, #0x0
	beq		_0803eb34
	cmp		r0, #0x2
	beq		_0803eb38
	b		_0803eb3a

.incbin "base.gba", 0x3EB22, 0x2

_0803eb24:	.4byte 0x030031C4
_0803eb28:	.4byte RunGameLogic_CallBack
_0803eb2c:	.4byte 0x0000FFFF
_0803eb30:	.4byte 0x000007DC

_0803eb34:
	mov		r3, #0x6c
	b		_0803eb3a
_0803eb38:
	mov		r3, #0x7e
_0803eb3a:
	cmp		r2, r3
	blt		_0803eb46
	sub		r2, #0x10
	cmp		r2, r3
	bge		_0803eb4e
	b		_0803eb4c
_0803eb46:
	add		r2, #0x4
	cmp		r2, r3
	ble		_0803eb4e
_0803eb4c:
	add		r2, r3, #0x0
_0803eb4e:
	mov		r6, r10
	strb	r2, [r6, #0x0]
	lsl		r1, r4, #0x10
	asr		r1, r1, #0x10
	mov		r0, r8
	bl		sub_0803e6f4
	b		_0803ec5a
_0803eb5e:
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_08028738
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	ldr		r0, _0803eb90
	ldr		r1, [sp, #0x0]
	cmp		r1, r0
	ble		_0803ebae
	mov		r3, #0x74
	mov		r1, r8
	add		r1, #0x71
	ldrb	r2, [r1, #0x0]
	ldr		r7, _0803eb94
	ldr		r0, _0803eb98
	add		r7, r7, r0
	ldrb	r0, [r7, #0x0]
	mov		r10, r1
	cmp		r0, #0x0
	beq		_0803eb9c
	cmp		r0, #0x2
	beq		_0803eba0
	b		_0803eba2

.incbin "base.gba", 0x3EB8E, 0x2

_0803eb90:	.4byte 0x0000018F
_0803eb94:	.4byte 0x030031C4
_0803eb98:	.4byte 0x000007DC

_0803eb9c:
	mov		r3, #0x6c
	b		_0803eba2
_0803eba0:
	mov		r3, #0x7e
_0803eba2:
	cmp		r2, r3
	blt		_0803ebf6
	sub		r2, #0x10
	cmp		r2, r3
	bge		_0803ebfe
	b		_0803ebfc
_0803ebae:
	ldr		r2, [sp, #0x4]
	ldr		r0, [r2, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x4c
	cmp		r0, #0x0
	beq		_0803ebc0
	mov		r1, #0x3c
_0803ebc0:
	add		r3, r1, #0x0
	mov		r1, r8
	add		r1, #0x71
	ldrb	r2, [r1, #0x0]
	ldr		r7, _0803ebdc
	ldr		r0, _0803ebe0
	add		r7, r7, r0
	ldrb	r0, [r7, #0x0]
	mov		r10, r1
	cmp		r0, #0x0
	beq		_0803ebe4
	cmp		r0, #0x2
	beq		_0803ebe8
	b		_0803ebea

_0803ebdc:	.4byte 0x030031C4
_0803ebe0:	.4byte 0x000007DC

_0803ebe4:
	sub		r3, #0x8
	b		_0803ebea
_0803ebe8:
	add		r3, #0xa
_0803ebea:
	cmp		r2, r3
	blt		_0803ebf6
	sub		r2, #0x10
	cmp		r2, r3
	bge		_0803ebfe
	b		_0803ebfc
_0803ebf6:
	add		r2, #0x4
	cmp		r2, r3
	ble		_0803ebfe
_0803ebfc:
	add		r2, r3, #0x0
_0803ebfe:
	mov		r1, r10
	strb	r2, [r1, #0x0]
	mov		r1, r8
	add		r1, #0x7a
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0803ec22
	sub		r0, #0x1
	strb	r0, [r1, #0x0]
	lsl		r1, r4, #0x10
	asr		r1, r1, #0x10
	mov		r0, r8
	bl		sub_0803e6f4
	mov		r2, r8
	add		r2, #0x4c
	str		r2, [sp, #0x10]
	b		_0803ec60
_0803ec22:
	ldr		r3, [sp, #0x4]
	ldr		r0, [r3, #0x8]
	cmp		r0, #0x0
	beq		_0803ec3c
	lsl		r1, r4, #0x10
	asr		r1, r1, #0x10
	mov		r0, r8
	bl		sub_0803e6f4
	mov		r4, r8
	add		r4, #0x4c
	str		r4, [sp, #0x10]
	b		_0803ec60
_0803ec3c:
	cmp		r6, #0xc
	bgt		_0803ec44
	cmp		r5, #0xc
	ble		_0803ec56
_0803ec44:
	lsl		r1, r4, #0x10
	asr		r1, r1, #0x10
	mov		r0, r8
	bl		sub_0803e6f4
	mov		r5, r8
	add		r5, #0x4c
	str		r5, [sp, #0x10]
	b		_0803ec60
_0803ec56:
	mov		r6, r9
	strh	r4, [r6, #0x26]
_0803ec5a:
	mov		r7, r8
	add		r7, #0x4c
	str		r7, [sp, #0x10]
_0803ec60:
	mov		r1, r10
	ldrb	r0, [r1, #0x0]
	lsl		r4, r0, #0x4
	add		r5, r4, #0x0
	ldr		r6, _0803ece0
	mov		r3, r9
	mov		r7, #0x26
	ldrsh	r2, [r3, r7]
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0803ec78
	add		r1, #0x3f
_0803ec78:
	asr		r3, r1, #0x6
	ldr		r1, _0803ece4
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r6
	ldr		r0, [r1, #0x0]
	mul		r0, r4
	cmp		r0, #0x0
	bge		_0803ec90
	add		r0, #0x7f
_0803ec90:
	asr		r0, r0, #0x7
	mov		r4, r9
	str		r0, [r4, #0x28]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _0803ece4
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	mul		r0, r5
	cmp		r0, #0x0
	bge		_0803ecb0
	add		r0, #0x7f
_0803ecb0:
	asr		r0, r0, #0x7
	mov		r5, r9
	str		r0, [r5, #0x2c]
	ldr		r6, [sp, #0x10]
	ldrh	r1, [r6, #0x0]
	mov		r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803ed2c
	mov		r0, r8
	add		r0, #0x70
	ldrb	r2, [r0, #0x0]
	mov		r7, r8
	ldrh	r1, [r7, #0x10]
	ldr		r3, _0803ece8
	add		r4, r0, #0x0
	cmp		r1, r3
	beq		_0803ed04
	cmp		r1, r3
	bgt		_0803ecf0
	ldr		r0, _0803ecec
	cmp		r1, r0
	beq		_0803ecfc
	b		_0803ed1c

_0803ece0:	.4byte 0x08101068
_0803ece4:	.4byte 0x000003FF
_0803ece8:	.4byte 0x00008402
_0803ecec:	.4byte 0x00008401

_0803ecf0:
	ldr		r0, _0803ecf8
	cmp		r1, r0
	beq		_0803ed0c
	b		_0803ed1c

_0803ecf8:	.4byte 0x00008403

_0803ecfc:
	ldr		r1, _0803ed00
	b		_0803ed0e

_0803ed00:	.4byte 0x081086c0

_0803ed04:
	ldr		r1, _0803ed08
	b		_0803ed0e

_0803ed08:	.4byte 0x081086d8

_0803ed0c:
	ldr		r1, _0803ed18
_0803ed0e:
	lsl		r0, r2, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_0803ed1e

.incbin "base.gba", 0x3ED16, 0x2

_0803ed18:	.4byte 0x081086f0

_0803ed1c:
	mov		r0, #0x0
_0803ed1e:
	mov		r1, r8
	str		r0, [r1, #0x48]
	add		r2, #0x1
	cmp		r2, #0x5
	ble		_0803ed2a
	mov		r2, #0x0
_0803ed2a:
	strb	r2, [r4, #0x0]
_0803ed2c:
	ldr		r2, [sp, #0x10]
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	strh	r0, [r2, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x10
	bne		_0803ed46
	ldr		r3, [sp, #0x8]
	ldr		r0, [r3, #0x48]
	ldr		r1, _0803ed68
	and		r0, r1
	str		r0, [r3, #0x48]
_0803ed46:
	mov		r4, r9
	ldr		r0, [r4, #0x0]
	ldr		r1, [r4, #0x28]
	add		r0, r0, r1
	str		r0, [r4, #0x0]
	ldr		r0, [r4, #0x4]
	ldr		r1, [r4, #0x2c]
	add		r0, r0, r1
	str		r0, [r4, #0x4]
_0803ed58:
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803ed68:	.4byte 0xfffeffff
	thumb_func_end sub_0803e740

	thumb_func_start sub_0803ed6c
sub_0803ed6c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	ldr		r0, [r6, #0x7c]
	mov		r10, r0
	add		r5, r6, #0x0
	ldr		r4, [r5, #0x54]
	add		r0, r5, #0x0
	ldr		r1, _0803ee18
	bl		sub_0803e4a0
	ldr		r1, [r5, #0x0]
	cmp		r1, #0x0
	bge		_0803ed92
	ldr		r2, _0803ee1c
	add		r1, r1, r2
_0803ed92:
	asr		r1, r1, #0x10
	ldr		r2, [r5, #0x4]
	cmp		r2, #0x0
	bge		_0803ed9e
	ldr		r0, _0803ee1c
	add		r2, r2, r0
_0803ed9e:
	asr		r2, r2, #0x10
	ldr		r3, [r5, #0x8]
	cmp		r3, #0x0
	bge		_0803edaa
	ldr		r0, _0803ee1c
	add		r3, r3, r0
_0803edaa:
	asr		r3, r3, #0x10
	ldr		r0, _0803ee18
	bl		sub_0802c3d4
	add		r1, r0, #0x0
	cmp		r1, #0x7f
	beq		_0803edc2
	mov		r0, #0x7f
	and		r1, r0
	add		r0, r5, #0x0
	add		r0, #0x36
	strb	r1, [r0, #0x0]
_0803edc2:
	ldrh	r0, [r5, #0x38]
	cmp		r0, #0x0
	beq		_0803edcc
	sub		r0, #0x1
	strh	r0, [r5, #0x38]
_0803edcc:
	mov		r2, #0x0
	add		r0, r5, #0x0
	add		r0, #0x4e
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803edea
	mov		r0, #0x0
	cmp		r1, #0x26
	bne		_0803ede4
	mov		r0, #0x1
_0803ede4:
	cmp		r0, #0x0
	bne		_0803edea
	mov		r2, #0x1
_0803edea:
	cmp		r2, #0x0
	bne		_0803ee00
	mov		r1, #0x0
	add		r0, r6, #0x0
	add		r0, #0x4e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x26
	bne		_0803edfc
	mov		r1, #0x1
_0803edfc:
	cmp		r1, #0x0
	beq		_0803ee28
_0803ee00:
	ldr		r0, [r4, #0x48]
	ldr		r1, _0803ee20
	and		r0, r1
	str		r0, [r4, #0x48]
	ldr		r1, _0803ee18
	ldr		r2, _0803ee24
	add		r0, r1, r2
	add		r1, r6, #0x0
	bl		sub_080491c0
	b		_0803f028

.incbin "base.gba", 0x3EE16, 0x2

_0803ee18:	.4byte 0x030031C4
_0803ee1c:	.4byte 0x0000FFFF
_0803ee20:	.4byte 0xfffeffff
_0803ee24:	.4byte 0x0000070C

_0803ee28:
	ldrh	r1, [r5, #0x34]
	mov		r0, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r5, #0x34]
	mov		r4, r10
	ldr		r1, [r4, #0x0]
	ldr		r0, [r5, #0x0]
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_0803ee44
	ldr		r1, _0803eea8
	add		r0, r0, r1
_0803ee44:
	asr		r2, r0, #0x10
	mov		r4, r10
	ldr		r1, [r4, #0x4]
	ldr		r0, [r5, #0x4]
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_0803ee56
	ldr		r1, _0803eea8
	add		r0, r0, r1
_0803ee56:
	asr		r1, r0, #0x10
	mov		r9, r2
	cmp		r2, #0x0
	bge		_0803ee64
	mov		r4, r9
	neg		r4, r4
	mov		r9, r4
_0803ee64:
	mov		r8, r1
	cmp		r1, #0x0
	bge		_0803ee70
	mov		r0, r8
	neg		r0, r0
	mov		r8, r0
_0803ee70:
	add		r4, r2, #0x0
	mul		r4, r2
	add		r0, r1, #0x0
	mul		r0, r1
	add		r4, r4, r0
	add		r0, r2, #0x0
	bl		sub_08028738
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	ldr		r0, _0803eeac
	cmp		r4, r0
	ble		_0803eeca
	mov		r3, #0x74
	add		r1, r6, #0x0
	add		r1, #0x71
	ldrb	r2, [r1, #0x0]
	ldr		r4, _0803eeb0
	ldr		r0, _0803eeb4
	add		r4, r4, r0
	ldrb	r0, [r4, #0x0]
	add		r4, r1, #0x0
	cmp		r0, #0x0
	beq		_0803eeb8
	cmp		r0, #0x2
	beq		_0803eebc
	b		_0803eebe

.incbin "base.gba", 0x3EEA6, 0x2

_0803eea8:	.4byte 0x0000FFFF
_0803eeac:	.4byte 0x0000018F
_0803eeb0:	.4byte 0x030031C4
_0803eeb4:	.4byte 0x000007DC

_0803eeb8:
	mov		r3, #0x6c
	b		_0803eebe
_0803eebc:
	mov		r3, #0x7e
_0803eebe:
	cmp		r2, r3
	blt		_0803ef12
	sub		r2, #0x10
	cmp		r2, r3
	bge		_0803ef1a
	b		_0803ef18
_0803eeca:
	mov		r1, r10
	ldr		r0, [r1, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x4c
	cmp		r0, #0x0
	beq		_0803eedc
	mov		r1, #0x3c
_0803eedc:
	add		r3, r1, #0x0
	add		r1, r6, #0x0
	add		r1, #0x71
	ldrb	r2, [r1, #0x0]
	ldr		r4, _0803eef8
	ldr		r0, _0803eefc
	add		r4, r4, r0
	ldrb	r0, [r4, #0x0]
	add		r4, r1, #0x0
	cmp		r0, #0x0
	beq		_0803ef00
	cmp		r0, #0x2
	beq		_0803ef04
	b		_0803ef06

_0803eef8:	.4byte 0x030031C4
_0803eefc:	.4byte 0x000007DC

_0803ef00:
	sub		r3, #0x8
	b		_0803ef06
_0803ef04:
	add		r3, #0xa
_0803ef06:
	cmp		r2, r3
	blt		_0803ef12
	sub		r2, #0x10
	cmp		r2, r3
	bge		_0803ef1a
	b		_0803ef18
_0803ef12:
	add		r2, #0x4
	cmp		r2, r3
	ble		_0803ef1a
_0803ef18:
	add		r2, r3, #0x0
_0803ef1a:
	strb	r2, [r4, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x7a
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0803ef2c
	sub		r0, #0x1
	strb	r0, [r1, #0x0]
	b		_0803ef40
_0803ef2c:
	mov		r1, r10
	ldr		r0, [r1, #0x8]
	cmp		r0, #0x0
	bne		_0803ef40
	mov		r2, r9
	cmp		r2, #0xc
	bgt		_0803ef40
	mov		r0, r8
	cmp		r0, #0xc
	ble		_0803ef4c
_0803ef40:
	lsl		r1, r7, #0x10
	asr		r1, r1, #0x10
	add		r0, r6, #0x0
	bl		sub_0803e6f4
	b		_0803ef4e
_0803ef4c:
	strh	r7, [r5, #0x26]
_0803ef4e:
	ldrb	r0, [r4, #0x0]
	lsl		r4, r0, #0x4
	add		r7, r4, #0x0
	ldr		r1, _0803efc8
	mov		r8, r1
	mov		r0, #0x26
	ldrsh	r2, [r5, r0]
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0803ef64
	add		r1, #0x3f
_0803ef64:
	asr		r3, r1, #0x6
	ldr		r1, _0803efcc
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r8
	ldr		r0, [r1, #0x0]
	mul		r0, r4
	cmp		r0, #0x0
	bge		_0803ef7c
	add		r0, #0x7f
_0803ef7c:
	asr		r0, r0, #0x7
	str		r0, [r5, #0x28]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _0803efcc
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	mul		r0, r7
	cmp		r0, #0x0
	bge		_0803ef9a
	add		r0, #0x7f
_0803ef9a:
	asr		r0, r0, #0x7
	str		r0, [r5, #0x2c]
	add		r2, r6, #0x0
	add		r2, #0x4c
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803f012
	add		r0, r6, #0x0
	add		r0, #0x70
	ldrb	r3, [r0, #0x0]
	ldrh	r1, [r6, #0x10]
	ldr		r4, _0803efd0
	add		r7, r0, #0x0
	cmp		r1, r4
	beq		_0803efec
	cmp		r1, r4
	bgt		_0803efd8
	ldr		r0, _0803efd4
	cmp		r1, r0
	beq		_0803efe4
	b		_0803f004

_0803efc8:	.4byte 0x08101068
_0803efcc:	.4byte 0x000003FF
_0803efd0:	.4byte 0x00008402
_0803efd4:	.4byte 0x00008401

_0803efd8:
	ldr		r0, _0803efe0
	cmp		r1, r0
	beq		_0803eff4
	b		_0803f004

_0803efe0:	.4byte 0x00008403

_0803efe4:
	ldr		r1, _0803efe8
	b		_0803eff6

_0803efe8:	.4byte 0x081086c0

_0803efec:
	ldr		r1, _0803eff0
	b		_0803eff6

_0803eff0:	.4byte 0x081086d8

_0803eff4:
	ldr		r1, _0803f000
_0803eff6:
	lsl		r0, r3, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_0803f006

.incbin "base.gba", 0x3EFFE, 0x2

_0803f000:	.4byte 0x081086f0

_0803f004:
	mov		r0, #0x0
_0803f006:
	str		r0, [r6, #0x48]
	add		r3, #0x1
	cmp		r3, #0x5
	ble		_0803f010
	mov		r3, #0x0
_0803f010:
	strb	r3, [r7, #0x0]
_0803f012:
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	strh	r0, [r2, #0x0]
	ldr		r0, [r5, #0x0]
	ldr		r1, [r5, #0x28]
	add		r0, r0, r1
	str		r0, [r5, #0x0]
	ldr		r0, [r5, #0x4]
	ldr		r1, [r5, #0x2c]
	add		r0, r0, r1
	str		r0, [r5, #0x4]
_0803f028:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3F036, 0x2
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	add		r7, r5, #0x0
	ldr		r4, [r5, #0x54]
	ldr		r1, _0803f0dc
	bl		sub_0803e4a0
	ldr		r1, [r5, #0x0]
	cmp		r1, #0x0
	bge		_0803f058
	ldr		r0, _0803f0e0
	add		r1, r1, r0
_0803f058:
	asr		r1, r1, #0x10
	ldr		r2, [r5, #0x4]
	cmp		r2, #0x0
	bge		_0803f064
	ldr		r0, _0803f0e0
	add		r2, r2, r0
_0803f064:
	asr		r2, r2, #0x10
	ldr		r3, [r5, #0x8]
	cmp		r3, #0x0
	bge		_0803f070
	ldr		r0, _0803f0e0
	add		r3, r3, r0
_0803f070:
	asr		r3, r3, #0x10
	ldr		r0, _0803f0dc
	bl		sub_0802c3d4
	add		r1, r0, #0x0
	cmp		r1, #0x7f
	beq		_0803f088
	mov		r0, #0x7f
	and		r1, r0
	add		r0, r5, #0x0
	add		r0, #0x36
	strb	r1, [r0, #0x0]
_0803f088:
	ldrh	r0, [r5, #0x38]
	cmp		r0, #0x0
	beq		_0803f092
	sub		r0, #0x1
	strh	r0, [r5, #0x38]
_0803f092:
	mov		r2, #0x0
	add		r0, r5, #0x0
	add		r0, #0x4e
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803f0b0
	mov		r0, #0x0
	cmp		r1, #0x26
	bne		_0803f0aa
	mov		r0, #0x1
_0803f0aa:
	cmp		r0, #0x0
	bne		_0803f0b0
	mov		r2, #0x1
_0803f0b0:
	cmp		r2, #0x0
	bne		_0803f0c6
	mov		r1, #0x0
	add		r0, r7, #0x0
	add		r0, #0x4e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x26
	bne		_0803f0c2
	mov		r1, #0x1
_0803f0c2:
	cmp		r1, #0x0
	beq		_0803f0ec
_0803f0c6:
	ldr		r0, [r4, #0x48]
	ldr		r1, _0803f0e4
	and		r0, r1
	str		r0, [r4, #0x48]
	ldr		r1, _0803f0dc
	ldr		r2, _0803f0e8
	add		r0, r1, r2
	add		r1, r7, #0x0
	bl		sub_080491c0
	b		_0803f2f4

_0803f0dc:	.4byte 0x030031C4
_0803f0e0:	.4byte 0x0000FFFF
_0803f0e4:	.4byte 0xfffeffff
_0803f0e8:	.4byte 0x0000070C

_0803f0ec:
	ldrh	r1, [r5, #0x34]
	mov		r0, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r5, #0x34]
	ldr		r0, _0803f174
	mov		r1, #0x0
	bl		sub_08044894
	mov		r10, r0
	ldr		r1, [r0, #0x0]
	ldr		r0, [r5, #0x0]
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_0803f110
	ldr		r4, _0803f178
	add		r0, r0, r4
_0803f110:
	asr		r2, r0, #0x10
	mov		r0, r10
	ldr		r1, [r0, #0x4]
	ldr		r0, [r5, #0x4]
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_0803f122
	ldr		r1, _0803f178
	add		r0, r0, r1
_0803f122:
	asr		r1, r0, #0x10
	mov		r9, r2
	cmp		r2, #0x0
	bge		_0803f130
	mov		r4, r9
	neg		r4, r4
	mov		r9, r4
_0803f130:
	mov		r8, r1
	cmp		r1, #0x0
	bge		_0803f13c
	mov		r0, r8
	neg		r0, r0
	mov		r8, r0
_0803f13c:
	add		r4, r2, #0x0
	mul		r4, r2
	add		r0, r1, #0x0
	mul		r0, r1
	add		r4, r4, r0
	add		r0, r2, #0x0
	bl		sub_08028738
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	ldr		r0, _0803f17c
	cmp		r4, r0
	ble		_0803f196
	mov		r3, #0x74
	add		r1, r7, #0x0
	add		r1, #0x71
	ldrb	r2, [r1, #0x0]
	ldr		r4, _0803f174
	ldr		r0, _0803f180
	add		r4, r4, r0
	ldrb	r0, [r4, #0x0]
	add		r4, r1, #0x0
	cmp		r0, #0x0
	beq		_0803f184
	cmp		r0, #0x2
	beq		_0803f188
	b		_0803f18a

.incbin "base.gba", 0x3F172, 0x2

_0803f174:	.4byte 0x030031C4
_0803f178:	.4byte 0x0000FFFF
_0803f17c:	.4byte 0x0000018F
_0803f180:	.4byte 0x000007DC

_0803f184:
	mov		r3, #0x6c
	b		_0803f18a
_0803f188:
	mov		r3, #0x7e
_0803f18a:
	cmp		r2, r3
	blt		_0803f1de
	sub		r2, #0x10
	cmp		r2, r3
	bge		_0803f1e6
	b		_0803f1e4
_0803f196:
	mov		r1, r10
	ldr		r0, [r1, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x4c
	cmp		r0, #0x0
	beq		_0803f1a8
	mov		r1, #0x3c
_0803f1a8:
	add		r3, r1, #0x0
	add		r1, r7, #0x0
	add		r1, #0x71
	ldrb	r2, [r1, #0x0]
	ldr		r4, _0803f1c4
	ldr		r0, _0803f1c8
	add		r4, r4, r0
	ldrb	r0, [r4, #0x0]
	add		r4, r1, #0x0
	cmp		r0, #0x0
	beq		_0803f1cc
	cmp		r0, #0x2
	beq		_0803f1d0
	b		_0803f1d2

_0803f1c4:	.4byte 0x030031C4
_0803f1c8:	.4byte 0x000007DC

_0803f1cc:
	sub		r3, #0x8
	b		_0803f1d2
_0803f1d0:
	add		r3, #0xa
_0803f1d2:
	cmp		r2, r3
	blt		_0803f1de
	sub		r2, #0x10
	cmp		r2, r3
	bge		_0803f1e6
	b		_0803f1e4
_0803f1de:
	add		r2, #0x4
	cmp		r2, r3
	ble		_0803f1e6
_0803f1e4:
	add		r2, r3, #0x0
_0803f1e6:
	strb	r2, [r4, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x7a
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0803f1f8
	sub		r0, #0x1
	strb	r0, [r1, #0x0]
	b		_0803f20c
_0803f1f8:
	mov		r1, r10
	ldr		r0, [r1, #0x8]
	cmp		r0, #0x0
	bne		_0803f20c
	mov		r2, r9
	cmp		r2, #0xc
	bgt		_0803f20c
	mov		r0, r8
	cmp		r0, #0xc
	ble		_0803f218
_0803f20c:
	lsl		r1, r6, #0x10
	asr		r1, r1, #0x10
	add		r0, r7, #0x0
	bl		sub_0803e6f4
	b		_0803f21a
_0803f218:
	strh	r6, [r5, #0x26]
_0803f21a:
	ldrb	r0, [r4, #0x0]
	lsl		r4, r0, #0x4
	add		r6, r4, #0x0
	ldr		r1, _0803f294
	mov		r8, r1
	mov		r0, #0x26
	ldrsh	r2, [r5, r0]
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0803f230
	add		r1, #0x3f
_0803f230:
	asr		r3, r1, #0x6
	ldr		r1, _0803f298
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r8
	ldr		r0, [r1, #0x0]
	mul		r0, r4
	cmp		r0, #0x0
	bge		_0803f248
	add		r0, #0x7f
_0803f248:
	asr		r0, r0, #0x7
	str		r0, [r5, #0x28]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _0803f298
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	mul		r0, r6
	cmp		r0, #0x0
	bge		_0803f266
	add		r0, #0x7f
_0803f266:
	asr		r0, r0, #0x7
	str		r0, [r5, #0x2c]
	add		r2, r7, #0x0
	add		r2, #0x4c
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803f2de
	add		r0, r7, #0x0
	add		r0, #0x70
	ldrb	r3, [r0, #0x0]
	ldrh	r1, [r7, #0x10]
	ldr		r4, _0803f29c
	add		r6, r0, #0x0
	cmp		r1, r4
	beq		_0803f2b8
	cmp		r1, r4
	bgt		_0803f2a4
	ldr		r0, _0803f2a0
	cmp		r1, r0
	beq		_0803f2b0
	b		_0803f2d0

_0803f294:	.4byte 0x08101068
_0803f298:	.4byte 0x000003FF
_0803f29c:	.4byte 0x00008402
_0803f2a0:	.4byte 0x00008401

_0803f2a4:
	ldr		r0, _0803f2ac
	cmp		r1, r0
	beq		_0803f2c0
	b		_0803f2d0

_0803f2ac:	.4byte 0x00008403

_0803f2b0:
	ldr		r1, _0803f2b4
	b		_0803f2c2

_0803f2b4:	.4byte 0x081086c0

_0803f2b8:
	ldr		r1, _0803f2bc
	b		_0803f2c2

_0803f2bc:	.4byte 0x081086d8

_0803f2c0:
	ldr		r1, _0803f2cc
_0803f2c2:
	lsl		r0, r3, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_0803f2d2

.incbin "base.gba", 0x3F2CA, 0x2

_0803f2cc:	.4byte 0x081086f0

_0803f2d0:
	mov		r0, #0x0
_0803f2d2:
	str		r0, [r7, #0x48]
	add		r3, #0x1
	cmp		r3, #0x5
	ble		_0803f2dc
	mov		r3, #0x0
_0803f2dc:
	strb	r3, [r6, #0x0]
_0803f2de:
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	strh	r0, [r2, #0x0]
	ldr		r0, [r5, #0x0]
	ldr		r1, [r5, #0x28]
	add		r0, r0, r1
	str		r0, [r5, #0x0]
	ldr		r0, [r5, #0x4]
	ldr		r1, [r5, #0x2c]
	add		r0, r0, r1
	str		r0, [r5, #0x4]
_0803f2f4:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3F302, 0x2
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	ldr		r7, [r4, #0x7c]
	add		r6, r4, #0x0
	ldr		r0, _0803f340
	add		r0, #0x24
	mov		r8, r0
	add		r0, r4, #0x0
	add		r0, #0x4c
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803f386
	add		r0, r4, #0x0
	add		r0, #0x70
	ldrb	r2, [r0, #0x0]
	ldrh	r1, [r4, #0x10]
	ldr		r3, _0803f344
	add		r5, r0, #0x0
	cmp		r1, r3
	beq		_0803f360
	cmp		r1, r3
	bgt		_0803f34c
	ldr		r0, _0803f348
	cmp		r1, r0
	beq		_0803f358
	b		_0803f378

_0803f340:	.4byte RunGameLogic_CallBack
_0803f344:	.4byte 0x00008402
_0803f348:	.4byte 0x00008401

_0803f34c:
	ldr		r0, _0803f354
	cmp		r1, r0
	beq		_0803f368
	b		_0803f378

_0803f354:	.4byte 0x00008403

_0803f358:
	ldr		r1, _0803f35c
	b		_0803f36a

_0803f35c:	.4byte 0x081086c0

_0803f360:
	ldr		r1, _0803f364
	b		_0803f36a

_0803f364:	.4byte 0x081086d8

_0803f368:
	ldr		r1, _0803f374
_0803f36a:
	lsl		r0, r2, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_0803f37a

.incbin "base.gba", 0x3F372, 0x2

_0803f374:	.4byte 0x081086f0

_0803f378:
	mov		r0, #0x0
_0803f37a:
	str		r0, [r4, #0x48]
	add		r2, #0x1
	cmp		r2, #0x5
	ble		_0803f384
	mov		r2, #0x0
_0803f384:
	strb	r2, [r5, #0x0]
_0803f386:
	add		r5, r4, #0x0
	add		r5, #0x4c
	ldrh	r0, [r5, #0x0]
	add		r0, #0x1
	strh	r0, [r5, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x1e
	bne		_0803f420
	ldr		r1, [r7, #0x0]
	ldr		r0, [r6, #0x0]
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_0803f3a6
	ldr		r1, _0803f3d8
	add		r0, r0, r1
_0803f3a6:
	asr		r2, r0, #0x10
	ldr		r1, [r7, #0x4]
	ldr		r0, [r6, #0x4]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_0803f3b6
	ldr		r0, _0803f3d8
	add		r1, r1, r0
_0803f3b6:
	add		r0, r2, #0x0
	asr		r1, r1, #0x10
	bl		sub_08028738
	strh	r0, [r6, #0x26]
	mov		r0, #0x0
	strh	r0, [r5, #0x0]
	ldr		r0, _0803f3dc
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0803f3ee
	cmp		r0, #0x1
	bgt		_0803f3e0
	cmp		r0, #0x0
	beq		_0803f3e6
	b		_0803f3fe

_0803f3d8:	.4byte 0x0000FFFF
_0803f3dc:	.4byte 0x000007DC

_0803f3e0:
	cmp		r0, #0x2
	beq		_0803f3f6
	b		_0803f3fe
_0803f3e6:
	add		r1, r4, #0x0
	add		r1, #0x71
	mov		r0, #0x40
	b		_0803f3fc
_0803f3ee:
	add		r1, r4, #0x0
	add		r1, #0x71
	mov		r0, #0x48
	b		_0803f3fc
_0803f3f6:
	add		r1, r4, #0x0
	add		r1, #0x71
	mov		r0, #0x52
_0803f3fc:
	strb	r0, [r1, #0x0]
_0803f3fe:
	ldrh	r1, [r6, #0x10]
	ldr		r0, _0803f410
	cmp		r1, r0
	beq		_0803f414
	add		r0, #0x1
	cmp		r1, r0
	beq		_0803f41c
	b		_0803f420

.incbin "base.gba", 0x3F40E, 0x2

_0803f410:	.4byte 0x00008402

_0803f414:
	ldr		r0, _0803f418
	b		_0803f41e

_0803f418:	.4byte sub_0803ed6c

_0803f41c:
	ldr		r0, _0803f42c
_0803f41e:
	str		r0, [r4, #0x14]
_0803f420:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3F42A, 0x2

_0803f42c:	.4byte 0x0803f039
	thumb_func_end sub_0803ed6c

	thumb_func_start sub_0803f430
sub_0803f430:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	add		r5, r0, #0x0
	mov		r8, r5
	ldr		r0, _0803f470
	add		r7, r0, #0x0
	add		r7, #0x24
	add		r0, r5, #0x0
	add		r0, #0x4c
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803f4b6
	add		r0, r5, #0x0
	add		r0, #0x70
	ldrb	r2, [r0, #0x0]
	ldrh	r1, [r5, #0x10]
	ldr		r3, _0803f474
	add		r4, r0, #0x0
	cmp		r1, r3
	beq		_0803f490
	cmp		r1, r3
	bgt		_0803f47c
	ldr		r0, _0803f478
	cmp		r1, r0
	beq		_0803f488
	b		_0803f4a8

_0803f470:	.4byte RunGameLogic_CallBack
_0803f474:	.4byte 0x00008402
_0803f478:	.4byte 0x00008401

_0803f47c:
	ldr		r0, _0803f484
	cmp		r1, r0
	beq		_0803f498
	b		_0803f4a8

_0803f484:	.4byte 0x00008403

_0803f488:
	ldr		r1, _0803f48c
	b		_0803f49a

_0803f48c:	.4byte 0x081086c0

_0803f490:
	ldr		r1, _0803f494
	b		_0803f49a

_0803f494:	.4byte 0x081086d8

_0803f498:
	ldr		r1, _0803f4a4
_0803f49a:
	lsl		r0, r2, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_0803f4aa

.incbin "base.gba", 0x3F4A2, 0x2

_0803f4a4:	.4byte 0x081086f0

_0803f4a8:
	mov		r0, #0x0
_0803f4aa:
	str		r0, [r5, #0x48]
	add		r2, #0x1
	cmp		r2, #0x5
	ble		_0803f4b4
	mov		r2, #0x0
_0803f4b4:
	strb	r2, [r4, #0x0]
_0803f4b6:
	add		r0, r5, #0x0
	add		r0, #0x4c
	ldrh	r1, [r0, #0x0]
	add		r1, #0x1
	strh	r1, [r0, #0x0]
	mov		r2, r8
	add		r2, #0x36
	ldrb	r2, [r2, #0x0]
	str		r2, [sp, #0x0]
	lsl		r1, r1, #0x10
	ldr		r2, _0803f4f4
	str		r0, [sp, #0x4]
	cmp		r1, r2
	ble		_0803f500
	mov		r1, #0xd0
	lsl		r1, r1, #0x8
	add		r2, r5, #0x0
	add		r2, #0x5a
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	strh	r0, [r2, #0x0]
	str		r1, [r5, #0x30]
	ldrh	r1, [r5, #0x34]
	ldr		r0, _0803f4f8
	and		r0, r1
	strh	r0, [r5, #0x34]
	mov		r0, #0x0
	str		r0, [r5, #0x18]
	ldr		r0, _0803f4fc
	str		r0, [r5, #0x14]
	b		_0803f5e4

_0803f4f4:	.4byte 0x0A8B0000
_0803f4f8:	.4byte 0x0000FFFD
_0803f4fc:	.4byte 0x0804123D

_0803f500:
	mov		r6, #0x0
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	ldrb	r0, [r0, #0x0]
	cmp		r6, r0
	bge		_0803f5e4
	ldr		r2, _0803f5f4
	mov		r10, r2
	ldr		r0, _0803f5f8
	mov		r9, r0
_0803f516:
	lsl		r1, r6, #0x2
	ldr		r2, _0803f5fc
	add		r0, r7, r2
	add		r0, r0, r1
	ldr		r3, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r4, [r0, r1]
	cmp		r4, #0x0
	bne		_0803f5d6
	add		r0, #0x2a
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7f
	and		r0, r1
	ldr		r2, [sp, #0x0]
	cmp		r2, r0
	bne		_0803f5d6
	ldr		r1, [r3, #0x0]
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_0803f54a
	ldr		r0, _0803f600
	add		r1, r1, r0
_0803f54a:
	asr		r1, r1, #0x10
	mov		r12, r1
	ldr		r1, [r3, #0x4]
	mov		r2, r8
	ldr		r0, [r2, #0x4]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_0803f55e
	ldr		r0, _0803f600
	add		r1, r1, r0
_0803f55e:
	asr		r1, r1, #0x10
	mov		r0, r12
	cmp		r0, #0x0
	bge		_0803f568
	neg		r0, r0
_0803f568:
	cmp		r1, #0x0
	bge		_0803f56e
	neg		r1, r1
_0803f56e:
	cmp		r0, #0x20
	bgt		_0803f5d6
	cmp		r1, #0x20
	bgt		_0803f5d6
	str		r3, [r5, #0x7c]
	ldr		r1, [sp, #0x4]
	strh	r4, [r1, #0x0]
	ldr		r0, _0803f604
	str		r0, [r5, #0x14]
	ldr		r2, _0803f608
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803f5d6
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_0803f5a2
	mov		r2, #0x40
_0803f5a2:
	add		r4, r2, #0x0
	cmp		r4, #0x0
	beq		_0803f5d6
	mov		r0, #0x7f
	bl		sub_0807073c
	mov		r0, r9
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r10
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	mov		r2, r9
	ldrh	r1, [r2, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r10
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r4, #0x0
	bl		sub_0807169c
_0803f5d6:
	add		r6, #0x1
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	ldrb	r0, [r0, #0x0]
	cmp		r6, r0
	blt		_0803f516
_0803f5e4:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0803f5f4:	.4byte 0x08124544
_0803f5f8:	.4byte 0x081249c0
_0803f5fc:	.4byte 0x000007F4
_0803f600:	.4byte 0x0000FFFF
_0803f604:	.4byte 0x0803f305
_0803f608:	.4byte 0x00000814
	thumb_func_end sub_0803f430

	thumb_func_start sub_0803f60c
sub_0803f60c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	add		r5, r4, #0x0
	ldr		r0, [r4, #0x54]
	mov		r9, r0
	ldr		r0, _0803f65c
	add		r0, #0x24
	mov		r10, r0
	ldrh	r0, [r4, #0x38]
	cmp		r0, #0x0
	beq		_0803f62e
	sub		r0, #0x1
	strh	r0, [r4, #0x38]
_0803f62e:
	add		r2, r4, #0x0
	add		r2, #0x4c
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x7
	and		r0, r1
	add		r7, r2, #0x0
	cmp		r0, #0x0
	bne		_0803f6a2
	add		r0, r4, #0x0
	add		r0, #0x70
	ldrb	r2, [r0, #0x0]
	ldrh	r1, [r4, #0x10]
	ldr		r3, _0803f660
	add		r6, r0, #0x0
	cmp		r1, r3
	beq		_0803f67c
	cmp		r1, r3
	bgt		_0803f668
	ldr		r0, _0803f664
	cmp		r1, r0
	beq		_0803f674
	b		_0803f694

.incbin "base.gba", 0x3F65A, 0x2

_0803f65c:	.4byte RunGameLogic_CallBack
_0803f660:	.4byte 0x00008402
_0803f664:	.4byte 0x00008401

_0803f668:
	ldr		r0, _0803f670
	cmp		r1, r0
	beq		_0803f684
	b		_0803f694

_0803f670:	.4byte 0x00008403

_0803f674:
	ldr		r1, _0803f678
	b		_0803f686

_0803f678:	.4byte 0x081086c0

_0803f67c:
	ldr		r1, _0803f680
	b		_0803f686

_0803f680:	.4byte 0x081086d8

_0803f684:
	ldr		r1, _0803f690
_0803f686:
	lsl		r0, r2, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_0803f696

.incbin "base.gba", 0x3F68E, 0x2

_0803f690:	.4byte 0x081086f0

_0803f694:
	mov		r0, #0x0
_0803f696:
	str		r0, [r4, #0x48]
	add		r2, #0x1
	cmp		r2, #0x5
	ble		_0803f6a0
	mov		r2, #0x0
_0803f6a0:
	strb	r2, [r6, #0x0]
_0803f6a2:
	ldrh	r0, [r7, #0x0]
	add		r0, #0x1
	strh	r0, [r7, #0x0]
	ldr		r1, [r5, #0x0]
	ldr		r2, [r5, #0x4]
	mov		r0, r10
	mov		r3, #0x0
	bl		sub_0802c750
	cmp		r0, #0x0
	beq		_0803f6c0
	add		r1, r5, #0x0
	add		r1, #0x4e
	mov		r0, #0x26
	b		_0803f6e8
_0803f6c0:
	ldr		r1, [r5, #0x0]
	cmp		r1, #0x0
	bge		_0803f6ca
	ldr		r2, _0803f708
	add		r1, r1, r2
_0803f6ca:
	lsr		r1, r1, #0x10
	ldr		r2, [r5, #0x4]
	cmp		r2, #0x0
	bge		_0803f6d6
	ldr		r0, _0803f708
	add		r2, r2, r0
_0803f6d6:
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	asr		r2, r2, #0x10
	mov		r0, r10
	mov		r3, #0x0
	bl		sub_0802c490
	add		r1, r5, #0x0
	add		r1, #0x4e
_0803f6e8:
	strb	r0, [r1, #0x0]
	mov		r3, #0x0
	add		r1, r4, #0x0
	add		r1, #0x4e
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x90
	and		r0, r2
	add		r6, r1, #0x0
	cmp		r0, #0x80
	bne		_0803f6fe
	mov		r3, #0x1
_0803f6fe:
	cmp		r3, #0x0
	beq		_0803f710
	ldr		r0, _0803f70c
	b		_0803f7d2

.incbin "base.gba", 0x3F706, 0x2

_0803f708:	.4byte 0x0000FFFF
_0803f70c:	.4byte sub_08041278

_0803f710:
	mov		r1, #0x0
	mov		r0, #0x20
	and		r0, r2
	cmp		r0, #0x0
	beq		_0803f72c
	mov		r3, #0x0
	lsl		r0, r2, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x26
	bne		_0803f726
	mov		r3, #0x1
_0803f726:
	cmp		r3, #0x0
	bne		_0803f72c
	mov		r1, #0x1
_0803f72c:
	cmp		r1, #0x0
	bne		_0803f744
	mov		r1, #0x0
	mov		r8, r1
	ldrb	r0, [r6, #0x0]
	cmp		r0, #0x26
	bne		_0803f73e
	mov		r2, #0x1
	mov		r8, r2
_0803f73e:
	mov		r0, r8
	cmp		r0, #0x0
	beq		_0803f76c
_0803f744:
	mov		r1, r9
	ldr		r0, [r1, #0x48]
	ldr		r1, _0803f760
	and		r0, r1
	mov		r2, r9
	str		r0, [r2, #0x48]
	ldr		r1, _0803f764
	ldr		r2, _0803f768
	add		r0, r1, r2
	add		r1, r4, #0x0
	bl		sub_080491c0
	b		_0803f7d4

.incbin "base.gba", 0x3F75E, 0x2

_0803f760:	.4byte 0xfffeffff
_0803f764:	.4byte 0x030031C4
_0803f768:	.4byte 0x0000070C

_0803f76c:
	ldrh	r0, [r5, #0x34]
	mov		r1, #0x1
	orr		r1, r0
	mov		r0, #0x2
	orr		r1, r0
	strh	r1, [r5, #0x34]
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	bge		_0803f782
	ldr		r0, _0803f7e4
	add		r1, r1, r0
_0803f782:
	asr		r1, r1, #0x10
	ldr		r2, [r4, #0x4]
	cmp		r2, #0x0
	bge		_0803f78e
	ldr		r0, _0803f7e4
	add		r2, r2, r0
_0803f78e:
	asr		r2, r2, #0x10
	ldr		r3, [r4, #0x8]
	cmp		r3, #0x0
	bge		_0803f79a
	ldr		r0, _0803f7e4
	add		r3, r3, r0
_0803f79a:
	asr		r3, r3, #0x10
	mov		r0, r10
	bl		sub_0802c3d4
	add		r1, r0, #0x0
	cmp		r1, #0x7f
	beq		_0803f7b2
	mov		r0, #0x7f
	and		r1, r0
	add		r0, r4, #0x0
	add		r0, #0x36
	strb	r1, [r0, #0x0]
_0803f7b2:
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	cmp		r0, #0x10
	bne		_0803f7c4
	mov		r2, r9
	ldr		r0, [r2, #0x48]
	ldr		r1, _0803f7e8
	and		r0, r1
	str		r0, [r2, #0x48]
_0803f7c4:
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	cmp		r0, #0x60
	bne		_0803f7d4
	mov		r2, r8
	strh	r2, [r7, #0x0]
	ldr		r0, _0803f7ec
_0803f7d2:
	str		r0, [r4, #0x14]
_0803f7d4:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3F7E2, 0x2

_0803f7e4:	.4byte 0x0000FFFF
_0803f7e8:	.4byte 0xfffeffff
_0803f7ec:	.4byte sub_0803f430
	thumb_func_end sub_0803f60c

	thumb_func_start sub_0803f7f0
sub_0803f7f0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r7, r0, #0x0
	add		r5, r7, #0x0
	ldr		r0, [r7, #0x54]
	str		r0, [sp, #0x0]
	add		r0, r7, #0x0
	ldr		r1, _0803f89c
	bl		sub_0803e4a0
	ldr		r1, [r7, #0x0]
	cmp		r1, #0x0
	bge		_0803f816
	ldr		r2, _0803f8a0
	add		r1, r1, r2
_0803f816:
	asr		r1, r1, #0x10
	ldr		r2, [r7, #0x4]
	cmp		r2, #0x0
	bge		_0803f822
	ldr		r3, _0803f8a0
	add		r2, r2, r3
_0803f822:
	asr		r2, r2, #0x10
	ldr		r3, [r7, #0x8]
	cmp		r3, #0x0
	bge		_0803f82e
	ldr		r4, _0803f8a0
	add		r3, r3, r4
_0803f82e:
	asr		r3, r3, #0x10
	ldr		r0, _0803f89c
	bl		sub_0802c3d4
	add		r1, r0, #0x0
	cmp		r1, #0x7f
	beq		_0803f846
	mov		r0, #0x7f
	and		r1, r0
	add		r0, r7, #0x0
	add		r0, #0x36
	strb	r1, [r0, #0x0]
_0803f846:
	ldrh	r0, [r7, #0x38]
	cmp		r0, #0x0
	beq		_0803f850
	sub		r0, #0x1
	strh	r0, [r7, #0x38]
_0803f850:
	mov		r2, #0x0
	add		r0, r7, #0x0
	add		r0, #0x4e
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803f86e
	mov		r0, #0x0
	cmp		r1, #0x26
	bne		_0803f868
	mov		r0, #0x1
_0803f868:
	cmp		r0, #0x0
	bne		_0803f86e
	mov		r2, #0x1
_0803f86e:
	cmp		r2, #0x0
	bne		_0803f884
	mov		r1, #0x0
	add		r0, r5, #0x0
	add		r0, #0x4e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x26
	bne		_0803f880
	mov		r1, #0x1
_0803f880:
	cmp		r1, #0x0
	beq		_0803f8ac
_0803f884:
	ldr		r6, [sp, #0x0]
	ldr		r0, [r6, #0x48]
	ldr		r1, _0803f8a4
	and		r0, r1
	str		r0, [r6, #0x48]
	ldr		r1, _0803f89c
	ldr		r2, _0803f8a8
	add		r0, r1, r2
	add		r1, r5, #0x0
	bl		sub_080491c0
	b		_0803fc8a

_0803f89c:	.4byte 0x030031C4
_0803f8a0:	.4byte 0x0000FFFF
_0803f8a4:	.4byte 0xfffeffff
_0803f8a8:	.4byte 0x0000070C

_0803f8ac:
	ldrh	r1, [r7, #0x34]
	mov		r0, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r7, #0x34]
	add		r0, r5, #0x0
	add		r0, #0x36
	ldrb	r4, [r0, #0x0]
	add		r3, r5, #0x0
	add		r3, #0x79
	ldrb	r1, [r3, #0x0]
	mov		r8, r0
	add		r2, r5, #0x0
	add		r2, #0x78
	cmp		r1, r4
	beq		_0803f8d6
	strb	r4, [r3, #0x0]
	ldrb	r0, [r2, #0x0]
	sub		r0, #0x1
	strb	r0, [r2, #0x0]
_0803f8d6:
	ldrb	r3, [r2, #0x0]
	cmp		r3, #0x0
	bne		_0803f904
	mov		r1, #0xd0
	lsl		r1, r1, #0x8
	add		r2, r5, #0x0
	add		r2, #0x5a
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	strh	r0, [r2, #0x0]
	str		r1, [r5, #0x30]
	ldrh	r1, [r5, #0x34]
	ldr		r0, _0803f8fc
	and		r0, r1
	strh	r0, [r5, #0x34]
	str		r3, [r5, #0x18]
	ldr		r0, _0803f900
	str		r0, [r5, #0x14]
	b		_0803fc8a

_0803f8fc:	.4byte 0x0000FFFD
_0803f900:	.4byte 0x0804123D

_0803f904:
	ldr		r6, [r5, #0x7c]
	cmp		r6, #0x0
	beq		_0803f924
	ldr		r0, _0803f91c
	mov		r1, #0x0
	bl		sub_08044894
	add		r6, r0, #0x0
	str		r6, [r5, #0x7c]
	ldr		r0, _0803f920
	b		_0803f926

.incbin "base.gba", 0x3F91A, 0x2

_0803f91c:	.4byte 0x030031C4
_0803f920:	.4byte 0x0803E209

_0803f924:
	ldr		r0, _0803f94c
_0803f926:
	str		r0, [r5, #0x18]
	cmp		r6, #0x0
	beq		_0803f980
	ldr		r4, _0803f950
	ldrh	r3, [r4, #0x14]
	mov		r0, r8
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x1
	cmp		r0, r3
	blt		_0803f93e
	sub		r0, r3, #0x1
	sub		r0, r1, r0
_0803f93e:
	mov		r8, r0
	add		r0, r1, #0x2
	cmp		r0, r3
	bge		_0803f954
	add		r4, r0, #0x0
	b		_0803f958

.incbin "base.gba", 0x3F94A, 0x2

_0803f94c:	.4byte 0x0803DFC1
_0803f950:	.4byte 0x030031C4

_0803f954:
	sub		r0, r3, #0x2
	sub		r4, r1, r0
_0803f958:
	sub		r2, r1, #0x1
	cmp		r2, #0x0
	bge		_0803f962
	sub		r0, r3, #0x1
	add		r2, r1, r0
_0803f962:
	add		r0, r6, #0x0
	add		r0, #0x90
	ldrb	r0, [r0, #0x0]
	cmp		r0, r1
	beq		_0803f9f6
	cmp		r0, r8
	beq		_0803f9f6
	cmp		r0, r4
	beq		_0803f9f6
	mov		r1, #0x0
	cmp		r0, r2
	bne		_0803f97c
	mov		r1, #0x1
_0803f97c:
	cmp		r1, #0x0
	bne		_0803f9f6
_0803f980:
	ldr		r0, _0803f9c4
	add		r0, #0x24
	ldr		r1, [r5, #0x0]
	cmp		r1, #0x0
	bge		_0803f98e
	ldr		r2, _0803f9c8
	add		r1, r1, r2
_0803f98e:
	asr		r1, r1, #0x10
	ldr		r2, [r5, #0x4]
	cmp		r2, #0x0
	bge		_0803f99a
	ldr		r3, _0803f9c8
	add		r2, r2, r3
_0803f99a:
	asr		r2, r2, #0x10
	mov		r3, #0x1
	bl		sub_0802c35c
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r8, r0
	mov		r3, #0x74
	add		r1, r5, #0x0
	add		r1, #0x71
	ldrb	r2, [r1, #0x0]
	ldr		r4, _0803f9cc
	ldr		r6, _0803f9d0
	add		r0, r4, r6
	ldrb	r0, [r0, #0x0]
	add		r4, r1, #0x0
	cmp		r0, #0x0
	beq		_0803f9d4
	cmp		r0, #0x2
	beq		_0803f9d8
	b		_0803f9da

_0803f9c4:	.4byte RunGameLogic_CallBack
_0803f9c8:	.4byte 0x0000FFFF
_0803f9cc:	.4byte 0x030031C4
_0803f9d0:	.4byte 0x000007DC

_0803f9d4:
	mov		r3, #0x6c
	b		_0803f9da
_0803f9d8:
	mov		r3, #0x7e
_0803f9da:
	cmp		r2, r3
	blt		_0803f9e6
	sub		r2, #0x10
	cmp		r2, r3
	bge		_0803f9ee
	b		_0803f9ec
_0803f9e6:
	add		r2, #0x4
	cmp		r2, r3
	ble		_0803f9ee
_0803f9ec:
	add		r2, r3, #0x0
_0803f9ee:
	strb	r2, [r4, #0x0]
	mov		r0, r8
	lsl		r1, r0, #0x10
	b		_0803fb08
_0803f9f6:
	ldr		r1, [r6, #0x0]
	ldr		r0, [r7, #0x0]
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_0803fa04
	ldr		r1, _0803fa68
	add		r0, r0, r1
_0803fa04:
	asr		r2, r0, #0x10
	ldr		r1, [r6, #0x4]
	ldr		r0, [r7, #0x4]
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_0803fa14
	ldr		r3, _0803fa68
	add		r0, r0, r3
_0803fa14:
	asr		r1, r0, #0x10
	mov		r10, r2
	cmp		r2, #0x0
	bge		_0803fa22
	mov		r4, r10
	neg		r4, r4
	mov		r10, r4
_0803fa22:
	mov		r9, r1
	cmp		r1, #0x0
	bge		_0803fa2e
	mov		r0, r9
	neg		r0, r0
	mov		r9, r0
_0803fa2e:
	add		r4, r2, #0x0
	mul		r4, r2
	add		r0, r1, #0x0
	mul		r0, r1
	add		r4, r4, r0
	add		r0, r2, #0x0
	bl		sub_08028738
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r8, r0
	ldr		r0, _0803fa6c
	cmp		r4, r0
	ble		_0803fa8a
	mov		r3, #0x74
	add		r1, r5, #0x0
	add		r1, #0x71
	ldrb	r2, [r1, #0x0]
	ldr		r4, _0803fa70
	ldr		r0, _0803fa74
	add		r4, r4, r0
	ldrb	r0, [r4, #0x0]
	add		r4, r1, #0x0
	cmp		r0, #0x0
	beq		_0803fa78
	cmp		r0, #0x2
	beq		_0803fa7c
	b		_0803fa7e

.incbin "base.gba", 0x3FA66, 0x2

_0803fa68:	.4byte 0x0000FFFF
_0803fa6c:	.4byte 0x0000018F
_0803fa70:	.4byte 0x030031C4
_0803fa74:	.4byte 0x000007DC

_0803fa78:
	mov		r3, #0x6c
	b		_0803fa7e
_0803fa7c:
	mov		r3, #0x7e
_0803fa7e:
	cmp		r2, r3
	blt		_0803fad2
	sub		r2, #0x10
	cmp		r2, r3
	bge		_0803fada
	b		_0803fad8
_0803fa8a:
	ldr		r0, [r6, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x4c
	cmp		r0, #0x0
	beq		_0803fa9a
	mov		r1, #0x3c
_0803fa9a:
	add		r3, r1, #0x0
	add		r1, r5, #0x0
	add		r1, #0x71
	ldrb	r2, [r1, #0x0]
	ldr		r4, _0803fab8
	ldr		r0, _0803fabc
	add		r4, r4, r0
	ldrb	r0, [r4, #0x0]
	add		r4, r1, #0x0
	cmp		r0, #0x0
	beq		_0803fac0
	cmp		r0, #0x2
	beq		_0803fac4
	b		_0803fac6

.incbin "base.gba", 0x3FAB6, 0x2

_0803fab8:	.4byte 0x030031C4
_0803fabc:	.4byte 0x000007DC

_0803fac0:
	sub		r3, #0x8
	b		_0803fac6
_0803fac4:
	add		r3, #0xa
_0803fac6:
	cmp		r2, r3
	blt		_0803fad2
	sub		r2, #0x10
	cmp		r2, r3
	bge		_0803fada
	b		_0803fad8
_0803fad2:
	add		r2, #0x4
	cmp		r2, r3
	ble		_0803fada
_0803fad8:
	add		r2, r3, #0x0
_0803fada:
	strb	r2, [r4, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x7a
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0803faec
	sub		r0, #0x1
	strb	r0, [r1, #0x0]
	b		_0803fb04
_0803faec:
	ldr		r0, [r6, #0x8]
	cmp		r0, #0x0
	beq		_0803faf8
	mov		r3, r8
	lsl		r1, r3, #0x10
	b		_0803fb08
_0803faf8:
	mov		r6, r10
	cmp		r6, #0xc
	bgt		_0803fb04
	mov		r0, r9
	cmp		r0, #0xc
	ble		_0803fb12
_0803fb04:
	mov		r2, r8
	lsl		r1, r2, #0x10
_0803fb08:
	asr		r1, r1, #0x10
	add		r0, r5, #0x0
	bl		sub_0803e6f4
	b		_0803fb16
_0803fb12:
	mov		r3, r8
	strh	r3, [r7, #0x26]
_0803fb16:
	ldrb	r0, [r4, #0x0]
	lsl		r4, r0, #0x4
	add		r6, r4, #0x0
	ldr		r0, _0803fb90
	mov		r8, r0
	mov		r1, #0x26
	ldrsh	r2, [r7, r1]
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0803fb2c
	add		r1, #0x3f
_0803fb2c:
	asr		r3, r1, #0x6
	ldr		r1, _0803fb94
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r8
	ldr		r0, [r1, #0x0]
	mul		r0, r4
	cmp		r0, #0x0
	bge		_0803fb44
	add		r0, #0x7f
_0803fb44:
	asr		r0, r0, #0x7
	str		r0, [r7, #0x28]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _0803fb94
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	mul		r0, r6
	cmp		r0, #0x0
	bge		_0803fb62
	add		r0, #0x7f
_0803fb62:
	asr		r0, r0, #0x7
	str		r0, [r7, #0x2c]
	add		r2, r5, #0x0
	add		r2, #0x4c
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803fbda
	add		r0, r5, #0x0
	add		r0, #0x70
	ldrb	r3, [r0, #0x0]
	ldrh	r1, [r5, #0x10]
	ldr		r4, _0803fb98
	add		r6, r0, #0x0
	cmp		r1, r4
	beq		_0803fbb4
	cmp		r1, r4
	bgt		_0803fba0
	ldr		r0, _0803fb9c
	cmp		r1, r0
	beq		_0803fbac
	b		_0803fbcc

_0803fb90:	.4byte 0x08101068
_0803fb94:	.4byte 0x000003FF
_0803fb98:	.4byte 0x00008402
_0803fb9c:	.4byte 0x00008401

_0803fba0:
	ldr		r0, _0803fba8
	cmp		r1, r0
	beq		_0803fbbc
	b		_0803fbcc

_0803fba8:	.4byte 0x00008403

_0803fbac:
	ldr		r1, _0803fbb0
	b		_0803fbbe

_0803fbb0:	.4byte 0x081086c0

_0803fbb4:
	ldr		r1, _0803fbb8
	b		_0803fbbe

_0803fbb8:	.4byte 0x081086d8

_0803fbbc:
	ldr		r1, _0803fbc8
_0803fbbe:
	lsl		r0, r3, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_0803fbce

.incbin "base.gba", 0x3FBC6, 0x2

_0803fbc8:	.4byte 0x081086f0

_0803fbcc:
	mov		r0, #0x0
_0803fbce:
	str		r0, [r5, #0x48]
	add		r3, #0x1
	cmp		r3, #0x5
	ble		_0803fbd8
	mov		r3, #0x0
_0803fbd8:
	strb	r3, [r6, #0x0]
_0803fbda:
	add		r1, r2, #0x0
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x10
	bne		_0803fbf4
	ldr		r3, [sp, #0x0]
	ldr		r0, [r3, #0x48]
	ldr		r1, _0803fc9c
	and		r0, r1
	str		r0, [r3, #0x48]
_0803fbf4:
	ldrh	r1, [r2, #0x0]
	mov		r0, #0xf
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803fc7a
	ldr		r0, _0803fca0
	ldr		r4, _0803fca4
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803fc7a
	ldr		r0, _0803fca8
	add		r1, r7, #0x0
	bl		sub_08045bf4
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	ldr		r0, _0803fca8
	add		r1, r7, #0x0
	bl		sub_080466c4
	add		r6, r0, #0x0
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	mov		r0, #0x80
	bl		sub_0807073c
	ldr		r0, _0803fcac
	mov		r8, r0
	ldr		r5, _0803fcb0
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	add		r5, r5, r1
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r4, #0x0
	bl		sub_08071704
_0803fc7a:
	ldr		r0, [r7, #0x0]
	ldr		r1, [r7, #0x28]
	add		r0, r0, r1
	str		r0, [r7, #0x0]
	ldr		r0, [r7, #0x4]
	ldr		r1, [r7, #0x2c]
	add		r0, r0, r1
	str		r0, [r7, #0x4]
_0803fc8a:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3FC9A, 0x2

_0803fc9c:	.4byte 0xfffeffff
_0803fca0:	.4byte RunGameLogic_CallBack
_0803fca4:	.4byte 0x00000838
_0803fca8:	.4byte 0x030031C4
_0803fcac:	.4byte 0x08124544
_0803fcb0:	.4byte 0x081245c8
	thumb_func_end sub_0803f7f0

	thumb_func_start sub_0803fcb4
sub_0803fcb4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	add		r7, r4, #0x0
	ldr		r0, _0803fd64
	add		r0, #0x24
	mov		r9, r0
	ldr		r6, [r4, #0x54]
	add		r0, r4, #0x0
	mov		r1, r9
	bl		sub_0803e4a0
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	bge		_0803fcdc
	ldr		r0, _0803fd68
	add		r1, r1, r0
_0803fcdc:
	asr		r1, r1, #0x10
	ldr		r2, [r4, #0x4]
	cmp		r2, #0x0
	bge		_0803fce8
	ldr		r0, _0803fd68
	add		r2, r2, r0
_0803fce8:
	asr		r2, r2, #0x10
	ldr		r3, [r4, #0x8]
	cmp		r3, #0x0
	bge		_0803fcf4
	ldr		r0, _0803fd68
	add		r3, r3, r0
_0803fcf4:
	asr		r3, r3, #0x10
	mov		r0, r9
	bl		sub_0802c3d4
	add		r1, r0, #0x0
	cmp		r1, #0x7f
	beq		_0803fd0c
	mov		r0, #0x7f
	and		r1, r0
	add		r0, r4, #0x0
	add		r0, #0x36
	strb	r1, [r0, #0x0]
_0803fd0c:
	ldrh	r0, [r4, #0x38]
	cmp		r0, #0x0
	beq		_0803fd16
	sub		r0, #0x1
	strh	r0, [r4, #0x38]
_0803fd16:
	ldrh	r0, [r4, #0x38]
	cmp		r0, #0x0
	bne		_0803fd20
	str		r0, [r4, #0x28]
	str		r0, [r4, #0x2c]
_0803fd20:
	mov		r3, #0x0
	add		r1, r4, #0x0
	add		r1, #0x4e
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x20
	and		r0, r2
	cmp		r0, #0x0
	beq		_0803fd3e
	mov		r0, #0x0
	cmp		r2, #0x26
	bne		_0803fd38
	mov		r0, #0x1
_0803fd38:
	cmp		r0, #0x0
	bne		_0803fd3e
	mov		r3, #0x1
_0803fd3e:
	cmp		r3, #0x0
	bne		_0803fd50
	mov		r2, #0x0
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x26
	bne		_0803fd4c
	mov		r2, #0x1
_0803fd4c:
	cmp		r2, #0x0
	beq		_0803fd74
_0803fd50:
	ldr		r0, [r6, #0x48]
	ldr		r1, _0803fd6c
	and		r0, r1
	str		r0, [r6, #0x48]
	ldr		r0, _0803fd70
	add		r0, r9
	add		r1, r4, #0x0
	bl		sub_080491c0
	b		_0803ff58

_0803fd64:	.4byte RunGameLogic_CallBack
_0803fd68:	.4byte 0x0000FFFF
_0803fd6c:	.4byte 0xfffeffff
_0803fd70:	.4byte 0x0000070C

_0803fd74:
	ldrh	r1, [r7, #0x34]
	mov		r0, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r7, #0x34]
	add		r2, r4, #0x0
	add		r2, #0x4c
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x7
	and		r0, r1
	mov		r10, r2
	cmp		r0, #0x0
	bne		_0803fdee
	add		r0, r4, #0x0
	add		r0, #0x70
	ldrb	r2, [r0, #0x0]
	ldrh	r1, [r4, #0x10]
	ldr		r3, _0803fdac
	add		r5, r0, #0x0
	cmp		r1, r3
	beq		_0803fdc8
	cmp		r1, r3
	bgt		_0803fdb4
	ldr		r0, _0803fdb0
	cmp		r1, r0
	beq		_0803fdc0
	b		_0803fde0

_0803fdac:	.4byte 0x00008402
_0803fdb0:	.4byte 0x00008401

_0803fdb4:
	ldr		r0, _0803fdbc
	cmp		r1, r0
	beq		_0803fdd0
	b		_0803fde0

_0803fdbc:	.4byte 0x00008403

_0803fdc0:
	ldr		r1, _0803fdc4
	b		_0803fdd2

_0803fdc4:	.4byte 0x081086c0

_0803fdc8:
	ldr		r1, _0803fdcc
	b		_0803fdd2

_0803fdcc:	.4byte 0x081086d8

_0803fdd0:
	ldr		r1, _0803fddc
_0803fdd2:
	lsl		r0, r2, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_0803fde2

.incbin "base.gba", 0x3FDDA, 0x2

_0803fddc:	.4byte 0x081086f0

_0803fde0:
	mov		r0, #0x0
_0803fde2:
	str		r0, [r4, #0x48]
	add		r2, #0x1
	cmp		r2, #0x5
	ble		_0803fdec
	mov		r2, #0x0
_0803fdec:
	strb	r2, [r5, #0x0]
_0803fdee:
	mov		r5, r10
	ldrh	r0, [r5, #0x0]
	add		r0, #0x1
	strh	r0, [r5, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	mov		r8, r0
	ldr		r0, [r7, #0x0]
	ldr		r1, [r7, #0x28]
	add		r0, r0, r1
	str		r0, [r7, #0x0]
	ldr		r0, [r7, #0x4]
	ldr		r1, [r7, #0x2c]
	add		r0, r0, r1
	str		r0, [r7, #0x4]
	mov		r0, r9
	mov		r1, #0x0
	bl		sub_08044894
	str		r0, [r4, #0x7c]
	add		r6, r0, #0x0
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	ldr		r0, _0803fe90
	cmp		r1, r0
	ble		_0803fea4
	mov		r0, #0x0
	strh	r0, [r5, #0x0]
	ldr		r0, _0803fe94
	str		r0, [r4, #0x14]
	ldr		r0, _0803fe98
	add		r0, r9
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_0803fe3e
	b		_0803ff58
_0803fe3e:
	mov		r0, r9
	add		r1, r4, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_0803fe50
	mov		r2, #0x40
_0803fe50:
	add		r6, r2, #0x0
	cmp		r6, #0x0
	bne		_0803fe58
	b		_0803ff58
_0803fe58:
	mov		r0, #0x7f
	bl		sub_0807073c
	ldr		r5, _0803fe9c
	ldr		r4, _0803fea0
	mov		r1, #0xfe
	lsl		r1, r1, #0x2
	add		r4, r4, r1
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
	b		_0803ff58

.incbin "base.gba", 0x3FE8E, 0x2

_0803fe90:	.4byte 0x00000A8B
_0803fe94:	.4byte 0x0803f305
_0803fe98:	.4byte 0x00000814
_0803fe9c:	.4byte 0x08124544
_0803fea0:	.4byte 0x081245c8

_0803fea4:
	add		r0, r6, #0x0
	add		r0, #0x90
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7f
	and		r0, r1
	cmp		r8, r0
	bne		_0803ff58
	add		r0, r6, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	cmp		r3, #0x0
	bne		_0803ff58
	ldr		r1, [r6, #0x0]
	ldr		r0, [r7, #0x0]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_0803fecc
	ldr		r0, _0803ff68
	add		r1, r1, r0
_0803fecc:
	asr		r2, r1, #0x10
	ldr		r1, [r6, #0x4]
	ldr		r0, [r7, #0x4]
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_0803fedc
	ldr		r1, _0803ff68
	add		r0, r0, r1
_0803fedc:
	asr		r0, r0, #0x10
	add		r1, r2, #0x0
	cmp		r1, #0x0
	bge		_0803fee6
	neg		r1, r1
_0803fee6:
	cmp		r0, #0x0
	bge		_0803feec
	neg		r0, r0
_0803feec:
	cmp		r1, #0x60
	bgt		_0803ff58
	cmp		r0, #0x60
	bgt		_0803ff58
	mov		r0, r10
	strh	r3, [r0, #0x0]
	ldr		r0, _0803ff6c
	str		r0, [r4, #0x14]
	ldr		r0, _0803ff70
	add		r0, r9
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0803ff58
	mov		r0, r9
	add		r1, r4, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_0803ff1e
	mov		r2, #0x40
_0803ff1e:
	add		r6, r2, #0x0
	cmp		r6, #0x0
	beq		_0803ff58
	mov		r0, #0x7f
	bl		sub_0807073c
	ldr		r5, _0803ff74
	ldr		r4, _0803ff78
	mov		r1, #0xfe
	lsl		r1, r1, #0x2
	add		r4, r4, r1
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_0803ff58:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3FF66, 0x2

_0803ff68:	.4byte 0x0000FFFF
_0803ff6c:	.4byte 0x0803f305
_0803ff70:	.4byte 0x00000814
_0803ff74:	.4byte 0x08124544
_0803ff78:	.4byte 0x081245c8
	thumb_func_end sub_0803fcb4

	thumb_func_start sub_0803ff7c
sub_0803ff7c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	add		r5, r4, #0x0
	ldr		r0, [r4, #0x54]
	mov		r9, r0
	ldr		r0, _0803ffcc
	add		r0, #0x24
	mov		r10, r0
	ldrh	r0, [r4, #0x38]
	cmp		r0, #0x0
	beq		_0803ff9e
	sub		r0, #0x1
	strh	r0, [r4, #0x38]
_0803ff9e:
	add		r2, r4, #0x0
	add		r2, #0x4c
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x7
	and		r0, r1
	add		r7, r2, #0x0
	cmp		r0, #0x0
	bne		_08040012
	add		r0, r4, #0x0
	add		r0, #0x70
	ldrb	r2, [r0, #0x0]
	ldrh	r1, [r4, #0x10]
	ldr		r3, _0803ffd0
	add		r6, r0, #0x0
	cmp		r1, r3
	beq		_0803ffec
	cmp		r1, r3
	bgt		_0803ffd8
	ldr		r0, _0803ffd4
	cmp		r1, r0
	beq		_0803ffe4
	b		_08040004

.incbin "base.gba", 0x3FFCA, 0x2

_0803ffcc:	.4byte RunGameLogic_CallBack
_0803ffd0:	.4byte 0x00008402
_0803ffd4:	.4byte 0x00008401

_0803ffd8:
	ldr		r0, _0803ffe0
	cmp		r1, r0
	beq		_0803fff4
	b		_08040004

_0803ffe0:	.4byte 0x00008403

_0803ffe4:
	ldr		r1, _0803ffe8
	b		_0803fff6

_0803ffe8:	.4byte 0x081086c0

_0803ffec:
	ldr		r1, _0803fff0
	b		_0803fff6

_0803fff0:	.4byte 0x081086d8

_0803fff4:
	ldr		r1, _08040000
_0803fff6:
	lsl		r0, r2, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_08040006

.incbin "base.gba", 0x3FFFE, 0x2

_08040000:	.4byte 0x081086f0

_08040004:
	mov		r0, #0x0
_08040006:
	str		r0, [r4, #0x48]
	add		r2, #0x1
	cmp		r2, #0x5
	ble		_08040010
	mov		r2, #0x0
_08040010:
	strb	r2, [r6, #0x0]
_08040012:
	ldrh	r0, [r7, #0x0]
	add		r0, #0x1
	strh	r0, [r7, #0x0]
	ldr		r1, [r5, #0x0]
	ldr		r2, [r5, #0x4]
	mov		r0, r10
	mov		r3, #0x0
	bl		sub_0802c750
	cmp		r0, #0x0
	beq		_08040030
	add		r1, r5, #0x0
	add		r1, #0x4e
	mov		r0, #0x26
	b		_08040058
_08040030:
	ldr		r1, [r5, #0x0]
	cmp		r1, #0x0
	bge		_0804003a
	ldr		r2, _08040078
	add		r1, r1, r2
_0804003a:
	lsr		r1, r1, #0x10
	ldr		r2, [r5, #0x4]
	cmp		r2, #0x0
	bge		_08040046
	ldr		r0, _08040078
	add		r2, r2, r0
_08040046:
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	asr		r2, r2, #0x10
	mov		r0, r10
	mov		r3, #0x0
	bl		sub_0802c490
	add		r1, r5, #0x0
	add		r1, #0x4e
_08040058:
	strb	r0, [r1, #0x0]
	mov		r3, #0x0
	add		r1, r4, #0x0
	add		r1, #0x4e
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x90
	and		r0, r2
	add		r6, r1, #0x0
	cmp		r0, #0x80
	bne		_0804006e
	mov		r3, #0x1
_0804006e:
	cmp		r3, #0x0
	beq		_08040080
	ldr		r0, _0804007c
	b		_08040142

.incbin "base.gba", 0x40076, 0x2

_08040078:	.4byte 0x0000FFFF
_0804007c:	.4byte sub_08041278

_08040080:
	mov		r1, #0x0
	mov		r0, #0x20
	and		r0, r2
	cmp		r0, #0x0
	beq		_0804009c
	mov		r3, #0x0
	lsl		r0, r2, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x26
	bne		_08040096
	mov		r3, #0x1
_08040096:
	cmp		r3, #0x0
	bne		_0804009c
	mov		r1, #0x1
_0804009c:
	cmp		r1, #0x0
	bne		_080400b4
	mov		r1, #0x0
	mov		r8, r1
	ldrb	r0, [r6, #0x0]
	cmp		r0, #0x26
	bne		_080400ae
	mov		r2, #0x1
	mov		r8, r2
_080400ae:
	mov		r0, r8
	cmp		r0, #0x0
	beq		_080400dc
_080400b4:
	mov		r1, r9
	ldr		r0, [r1, #0x48]
	ldr		r1, _080400d0
	and		r0, r1
	mov		r2, r9
	str		r0, [r2, #0x48]
	ldr		r1, _080400d4
	ldr		r2, _080400d8
	add		r0, r1, r2
	add		r1, r4, #0x0
	bl		sub_080491c0
	b		_08040144

.incbin "base.gba", 0x400CE, 0x2

_080400d0:	.4byte 0xfffeffff
_080400d4:	.4byte 0x030031C4
_080400d8:	.4byte 0x0000070C

_080400dc:
	ldrh	r0, [r5, #0x34]
	mov		r1, #0x1
	orr		r1, r0
	mov		r0, #0x2
	orr		r1, r0
	strh	r1, [r5, #0x34]
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	bge		_080400f2
	ldr		r0, _08040154
	add		r1, r1, r0
_080400f2:
	asr		r1, r1, #0x10
	ldr		r2, [r4, #0x4]
	cmp		r2, #0x0
	bge		_080400fe
	ldr		r0, _08040154
	add		r2, r2, r0
_080400fe:
	asr		r2, r2, #0x10
	ldr		r3, [r4, #0x8]
	cmp		r3, #0x0
	bge		_0804010a
	ldr		r0, _08040154
	add		r3, r3, r0
_0804010a:
	asr		r3, r3, #0x10
	mov		r0, r10
	bl		sub_0802c3d4
	add		r1, r0, #0x0
	cmp		r1, #0x7f
	beq		_08040122
	mov		r0, #0x7f
	and		r1, r0
	add		r0, r4, #0x0
	add		r0, #0x36
	strb	r1, [r0, #0x0]
_08040122:
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	cmp		r0, #0x10
	bne		_08040134
	mov		r2, r9
	ldr		r0, [r2, #0x48]
	ldr		r1, _08040158
	and		r0, r1
	str		r0, [r2, #0x48]
_08040134:
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	cmp		r0, #0x60
	bne		_08040144
	mov		r2, r8
	strh	r2, [r7, #0x0]
	ldr		r0, _0804015c
_08040142:
	str		r0, [r4, #0x14]
_08040144:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x40152, 0x2

_08040154:	.4byte 0x0000FFFF
_08040158:	.4byte 0xfffeffff
_0804015c:	.4byte sub_0803fcb4
	thumb_func_end sub_0803ff7c

	thumb_func_start sub_08040160
sub_08040160:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r9, r5
	ldr		r6, [r5, #0x54]
	mov		r0, #0x8
	mov		r1, #0x0
	mov		r10, r1
	mov		r2, #0x0
	mov		r8, r2
	mov		r4, #0x8
	strh	r0, [r5, #0x38]
	ldr		r0, [r6, #0x0]
	str		r0, [r5, #0x0]
	ldr		r2, [r6, #0x4]
	str		r2, [r5, #0x4]
	mov		r1, r8
	str		r1, [r5, #0x8]
	strb	r4, [r5, #0xe]
	strb	r4, [r5, #0xd]
	strb	r4, [r5, #0xc]
	str		r1, [r5, #0x28]
	str		r1, [r5, #0x2c]
	str		r1, [r5, #0x30]
	cmp		r0, #0x0
	bge		_080401a0
	ldr		r1, _08040230
	add		r0, r0, r1
_080401a0:
	asr		r1, r0, #0x10
	cmp		r2, #0x0
	bge		_080401aa
	ldr		r0, _08040230
	add		r2, r2, r0
_080401aa:
	asr		r2, r2, #0x10
	ldr		r0, _08040234
	mov		r3, #0x0
	bl		sub_0802c3d4
	add		r1, r0, #0x0
	cmp		r1, #0x7f
	beq		_080401c4
	mov		r0, #0x7f
	and		r1, r0
	add		r0, r5, #0x0
	add		r0, #0x36
	strb	r1, [r0, #0x0]
_080401c4:
	mov		r2, #0xbe
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	sub		r0, #0x1
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x4c
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	mov		r2, r10
	strb	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x28
	strb	r4, [r0, #0x0]
	add		r2, r5, #0x0
	add		r2, #0x71
	mov		r0, r10
	strb	r0, [r2, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x78
	mov		r0, #0x30
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x79
	mov		r1, r10
	strb	r1, [r0, #0x0]
	mov		r0, r8
	str		r0, [r5, #0x7c]
	add		r4, r5, #0x0
	add		r4, #0x80
	strb	r1, [r4, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x74
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldrh	r3, [r5, #0x10]
	ldr		r0, _08040238
	add		r7, r2, #0x0
	str		r1, [sp, #0x0]
	cmp		r3, r0
	bne		_08040222
	b		_08040368
_08040222:
	cmp		r3, r0
	bgt		_0804023c
	sub		r0, #0x1
	cmp		r3, r0
	beq		_0804024c
	b		_080407a2

.incbin "base.gba", 0x4022E, 0x2

_08040230:	.4byte 0x0000FFFF
_08040234:	.4byte 0x030031C4
_08040238:	.4byte 0x00008402

_0804023c:
	ldr		r0, _08040248
	cmp		r3, r0
	bne		_08040244
	b		_08040594
_08040244:
	b		_080407a2

.incbin "base.gba", 0x40246, 0x2

_08040248:	.4byte 0x00008403

_0804024c:
	mov		r1, #0x26
	ldrsh	r4, [r5, r1]
	add		r0, r6, #0x0
	bl		sub_080373bc
	add		r4, r4, r0
	strh	r4, [r5, #0x26]
	add		r0, r6, #0x0
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08040268
	ldr		r2, _08040344
	add		r0, r0, r2
_08040268:
	asr		r1, r0, #0x10
	mov		r2, #0xc0
	lsl		r2, r2, #0x2
	add		r0, r1, r2
	cmp		r0, #0x0
	bge		_08040278
	add		r2, #0xf
	add		r0, r1, r2
_08040278:
	asr		r0, r0, #0x4
	strb	r0, [r7, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x63
	bls		_08040288
	mov		r0, #0x64
	strb	r0, [r7, #0x0]
_08040288:
	ldrb	r0, [r7, #0x0]
	lsl		r2, r0, #0x4
	ldr		r6, _08040348
	mov		r0, #0x26
	ldrsh	r3, [r5, r0]
	add		r1, r3, #0x0
	cmp		r3, #0x0
	bge		_0804029a
	add		r1, #0x3f
_0804029a:
	asr		r4, r1, #0x6
	ldr		r1, _0804034c
	add		r0, r1, #0x0
	add		r1, r4, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r6
	ldr		r0, [r1, #0x0]
	mul		r0, r2
	cmp		r0, #0x0
	bge		_080402b2
	add		r0, #0x7f
_080402b2:
	asr		r0, r0, #0x7
	mov		r1, r9
	str		r0, [r1, #0x28]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r4
	ldr		r1, _0804034c
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	mul		r0, r2
	cmp		r0, #0x0
	bge		_080402d2
	add		r0, #0x7f
_080402d2:
	asr		r0, r0, #0x7
	mov		r2, r9
	str		r0, [r2, #0x2c]
	mov		r0, #0x7
	ldr		r1, [sp, #0x0]
	strb	r0, [r1, #0x0]
	ldr		r0, _08040350
	str		r0, [r5, #0x14]
	ldr		r0, _08040354
	str		r0, [r5, #0x18]
	ldr		r2, _08040358
	ldr		r1, _0804035c
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_080402fa
	b		_080407a2
_080402fa:
	add		r0, r2, #0x0
	add		r1, r5, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_0804030c
	mov		r2, #0x40
_0804030c:
	add		r6, r2, #0x0
	cmp		r6, #0x0
	bne		_08040314
	b		_080407a2
_08040314:
	mov		r0, #0x7b
	bl		sub_0807073c
	ldr		r5, _08040360
	ldr		r4, _08040364
	mov		r2, #0xf6
	lsl		r2, r2, #0x2
	add		r4, r4, r2
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	b		_08040682

_08040344:	.4byte 0x0000FFFF
_08040348:	.4byte 0x08101068
_0804034c:	.4byte 0x000003FF
_08040350:	.4byte sub_0803e594
_08040354:	.4byte sub_0803dfc0
_08040358:	.4byte 0x030031C4
_0804035c:	.4byte 0x00000814
_08040360:	.4byte 0x08124544
_08040364:	.4byte 0x081245c8

_08040368:
	mov		r0, #0x26
	ldrsh	r1, [r5, r0]
	ldr		r0, _08040418
	cmp		r1, r0
	bne		_08040440
	add		r0, r6, #0x0
	bl		sub_080373bc
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	add		r0, r0, r1
	ldr		r6, _0804041c
	lsl		r0, r0, #0x10
	asr		r2, r0, #0x10
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0804038c
	add		r1, #0x3f
_0804038c:
	asr		r3, r1, #0x6
	ldr		r1, _08040420
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r6
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0xb
	cmp		r0, #0x0
	bge		_080403a4
	add		r0, #0x7f
_080403a4:
	asr		r4, r0, #0x7
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _08040420
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	lsl		r0, r0, #0xb
	cmp		r0, #0x0
	bge		_080403c0
	add		r0, #0x7f
_080403c0:
	asr		r1, r0, #0x7
	ldr		r0, [r5, #0x0]
	add		r0, r0, r4
	str		r0, [r5, #0x0]
	ldr		r0, [r5, #0x4]
	add		r0, r0, r1
	str		r0, [r5, #0x4]
	ldr		r0, _08040424
	str		r0, [r5, #0x14]
	ldr		r0, _08040428
	str		r0, [r5, #0x18]
	ldr		r2, _0804042c
	ldr		r1, _08040430
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_080403ea
	b		_080407a2
_080403ea:
	ldr		r0, _08040434
	add		r1, r5, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_080403fc
	mov		r2, #0x40
_080403fc:
	add		r6, r2, #0x0
	cmp		r6, #0x0
	bne		_08040404
	b		_080407a2
_08040404:
	mov		r0, #0x86
	bl		sub_0807073c
	ldr		r5, _08040438
	ldr		r4, _0804043c
	mov		r2, #0x86
	lsl		r2, r2, #0x3
	add		r4, r4, r2
	b		_08040664

.incbin "base.gba", 0x40416, 0x2

_08040418:	.4byte 0xFFFF8000
_0804041c:	.4byte 0x08101068
_08040420:	.4byte 0x000003FF
_08040424:	.4byte sub_0803f60c
_08040428:	.4byte sub_0803dfc0
_0804042c:	.4byte RunGameLogic_CallBack
_08040430:	.4byte 0x00000838
_08040434:	.4byte 0x030031C4
_08040438:	.4byte 0x08124544
_0804043c:	.4byte 0x081245c8

_08040440:
	ldr		r1, _08040458
	ldr		r2, _0804045c
	add		r0, r1, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08040460
	mov		r0, r8
	b		_0804047e

.incbin "base.gba", 0x40456, 0x2

_08040458:	.4byte RunGameLogic_CallBack
_0804045c:	.4byte 0x000007FE

_08040460:
	add		r0, r6, #0x0
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x1
	add		r2, r0, #0x0
	cmp		r2, #0x0
	bne		_08040472
	str		r2, [r5, #0x7c]
	b		_08040480
_08040472:
	sub		r1, r0, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	ldr		r0, _08040570
	bl		sub_08044894
_0804047e:
	str		r0, [r5, #0x7c]
_08040480:
	add		r0, r6, #0x0
	bl		sub_080373bc
	mov		r1, r9
	strh	r0, [r1, #0x26]
	add		r0, r6, #0x0
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08040498
	ldr		r2, _08040574
	add		r0, r0, r2
_08040498:
	asr		r1, r0, #0x10
	mov		r2, #0xc0
	lsl		r2, r2, #0x2
	add		r0, r1, r2
	cmp		r0, #0x0
	bge		_080404a8
	add		r2, #0xf
	add		r0, r1, r2
_080404a8:
	asr		r0, r0, #0x4
	strb	r0, [r7, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x73
	bls		_080404b8
	mov		r0, #0x74
	strb	r0, [r7, #0x0]
_080404b8:
	ldrb	r0, [r7, #0x0]
	lsl		r2, r0, #0x4
	ldr		r6, _08040578
	mov		r0, r9
	mov		r1, #0x26
	ldrsh	r3, [r0, r1]
	add		r1, r3, #0x0
	cmp		r3, #0x0
	bge		_080404cc
	add		r1, #0x3f
_080404cc:
	asr		r4, r1, #0x6
	ldr		r1, _0804057c
	add		r0, r1, #0x0
	add		r1, r4, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r6
	ldr		r0, [r1, #0x0]
	mul		r0, r2
	cmp		r0, #0x0
	bge		_080404e4
	add		r0, #0x7f
_080404e4:
	asr		r0, r0, #0x7
	mov		r1, r9
	str		r0, [r1, #0x28]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r4
	ldr		r1, _0804057c
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	mul		r0, r2
	cmp		r0, #0x0
	bge		_08040504
	add		r0, #0x7f
_08040504:
	asr		r0, r0, #0x7
	mov		r2, r9
	str		r0, [r2, #0x2c]
	ldr		r0, _08040580
	str		r0, [r5, #0x14]
	ldr		r0, _08040584
	str		r0, [r5, #0x18]
	ldr		r1, _08040570
	ldr		r2, _08040588
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08040526
	b		_080407a2
_08040526:
	ldr		r0, _08040570
	add		r1, r5, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_08040538
	mov		r2, #0x40
_08040538:
	add		r6, r2, #0x0
	cmp		r6, #0x0
	bne		_08040540
	b		_080407a2
_08040540:
	mov		r0, #0x7b
	bl		sub_0807073c
	ldr		r5, _0804058c
	ldr		r4, _08040590
	mov		r0, #0xf6
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	b		_08040682

_08040570:	.4byte 0x030031C4
_08040574:	.4byte 0x0000FFFF
_08040578:	.4byte 0x08101068
_0804057c:	.4byte 0x000003FF
_08040580:	.4byte sub_0803e740
_08040584:	.4byte sub_0803dfc0
_08040588:	.4byte 0x00000814
_0804058c:	.4byte 0x08124544
_08040590:	.4byte 0x081245c8

_08040594:
	add		r0, r6, #0x0
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x1
	cmp		r0, #0x0
	bne		_080405a6
	mov		r1, r10
	strb	r1, [r4, #0x0]
	b		_080405b2
_080405a6:
	mov		r2, r10
	strb	r2, [r4, #0x0]
	ldr		r0, _0804068c
	mov		r1, #0x0
	bl		sub_08044894
_080405b2:
	str		r0, [r5, #0x7c]
	mov		r0, r9
	mov		r2, #0x26
	ldrsh	r1, [r0, r2]
	ldr		r0, _08040690
	cmp		r1, r0
	bne		_080406b0
	add		r0, r6, #0x0
	bl		sub_080373bc
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	add		r0, r0, r1
	ldr		r6, _08040694
	lsl		r0, r0, #0x10
	asr		r2, r0, #0x10
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_080405da
	add		r1, #0x3f
_080405da:
	asr		r3, r1, #0x6
	ldr		r1, _08040698
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r6
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0xb
	cmp		r0, #0x0
	bge		_080405f2
	add		r0, #0x7f
_080405f2:
	asr		r4, r0, #0x7
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _08040698
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	lsl		r0, r0, #0xb
	cmp		r0, #0x0
	bge		_0804060e
	add		r0, #0x7f
_0804060e:
	asr		r1, r0, #0x7
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	add		r0, r0, r4
	str		r0, [r2, #0x0]
	ldr		r0, [r2, #0x4]
	add		r0, r0, r1
	str		r0, [r2, #0x4]
	ldr		r0, _0804069c
	str		r0, [r5, #0x14]
	ldr		r0, _080406a0
	str		r0, [r5, #0x18]
	ldr		r1, _0804068c
	ldr		r2, _080406a4
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804063a
	b		_080407a2
_0804063a:
	ldr		r0, _0804068c
	add		r1, r5, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_0804064c
	mov		r2, #0x40
_0804064c:
	add		r6, r2, #0x0
	cmp		r6, #0x0
	bne		_08040654
	b		_080407a2
_08040654:
	mov		r0, #0x86
	bl		sub_0807073c
	ldr		r5, _080406a8
	ldr		r4, _080406ac
	mov		r0, #0x86
	lsl		r0, r0, #0x3
	add		r4, r4, r0
_08040664:
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x3
_08040682:
	add		r2, r6, #0x0
	bl		sub_0807169c
	b		_080407a2

.incbin "base.gba", 0x4068A, 0x2

_0804068c:	.4byte 0x030031C4
_08040690:	.4byte 0xFFFF8000
_08040694:	.4byte 0x08101068
_08040698:	.4byte 0x000003FF
_0804069c:	.4byte sub_0803ff7c
_080406a0:	.4byte sub_0803e208
_080406a4:	.4byte 0x00000814
_080406a8:	.4byte 0x08124544
_080406ac:	.4byte 0x081245c8

_080406b0:
	add		r0, r6, #0x0
	bl		sub_080373bc
	mov		r1, r9
	strh	r0, [r1, #0x26]
	add		r0, r6, #0x0
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_080406c8
	ldr		r2, _080407b4
	add		r0, r0, r2
_080406c8:
	asr		r1, r0, #0x10
	mov		r2, #0xc0
	lsl		r2, r2, #0x2
	add		r0, r1, r2
	cmp		r0, #0x0
	bge		_080406d8
	add		r2, #0xf
	add		r0, r1, r2
_080406d8:
	asr		r0, r0, #0x4
	add		r1, r7, #0x0
	strb	r0, [r1, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x73
	bls		_080406ea
	mov		r0, #0x74
	strb	r0, [r1, #0x0]
_080406ea:
	ldrb	r0, [r7, #0x0]
	lsl		r2, r0, #0x4
	ldr		r6, _080407b8
	mov		r0, r9
	mov		r1, #0x26
	ldrsh	r3, [r0, r1]
	add		r1, r3, #0x0
	cmp		r3, #0x0
	bge		_080406fe
	add		r1, #0x3f
_080406fe:
	asr		r4, r1, #0x6
	ldr		r1, _080407bc
	add		r0, r1, #0x0
	add		r1, r4, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r6
	ldr		r0, [r1, #0x0]
	mul		r0, r2
	cmp		r0, #0x0
	bge		_08040716
	add		r0, #0x7f
_08040716:
	asr		r0, r0, #0x7
	mov		r1, r9
	str		r0, [r1, #0x28]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r4
	ldr		r1, _080407bc
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	mul		r0, r2
	cmp		r0, #0x0
	bge		_08040736
	add		r0, #0x7f
_08040736:
	asr		r0, r0, #0x7
	mov		r2, r9
	str		r0, [r2, #0x2c]
	ldr		r0, _080407c0
	str		r0, [r5, #0x14]
	ldr		r0, _080407c4
	str		r0, [r5, #0x18]
	ldr		r1, _080407c8
	ldr		r2, _080407cc
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_080407a2
	ldr		r0, _080407c8
	add		r1, r5, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_08040768
	mov		r2, #0x40
_08040768:
	add		r6, r2, #0x0
	cmp		r6, #0x0
	beq		_080407a2
	mov		r0, #0x7b
	bl		sub_0807073c
	ldr		r5, _080407d0
	ldr		r4, _080407d4
	mov		r0, #0xf6
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_080407a2:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x407B2, 0x2

_080407b4:	.4byte 0x0000FFFF
_080407b8:	.4byte 0x08101068
_080407bc:	.4byte 0x000003FF
_080407c0:	.4byte sub_0803f7f0
_080407c4:	.4byte sub_0803e208
_080407c8:	.4byte 0x030031C4
_080407cc:	.4byte 0x00000814
_080407d0:	.4byte 0x08124544
_080407d4:	.4byte 0x081245c8
	thumb_func_end sub_08040160

	thumb_func_start sub_080407d8
sub_080407d8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	ldr		r6, [r5, #0x54]
	mov		r12, r5
	add		r7, r5, #0x0
	add		r7, #0x4c
	mov		r0, #0x0
	ldrsh	r1, [r7, r0]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	mov		r1, #0xe
	mov		r9, r1
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x10
	strh	r0, [r5, #0x26]
	ldr		r4, [r6, #0x0]
	ldr		r1, _08040878
	mov		r8, r1
	add		r2, r0, #0x0
	cmp		r2, #0x0
	bge		_0804080a
	add		r0, #0x3f
_0804080a:
	asr		r3, r0, #0x6
	ldr		r0, _0804087c
	add		r1, r0, #0x0
	add		r0, r3, #0x0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, r9
	mul		r1, r0
	add		r0, r1, #0x0
	add		r0, r4, r0
	str		r0, [r5, #0x0]
	ldr		r4, [r6, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _0804087c
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, r9
	mul		r1, r0
	add		r0, r1, #0x0
	sub		r0, r4, r0
	str		r0, [r5, #0x4]
	ldr		r0, [r6, #0x8]
	str		r0, [r5, #0x8]
	add		r0, r6, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	ldrh	r1, [r7, #0x0]
	mov		r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_080408c2
	add		r0, r5, #0x0
	add		r0, #0x70
	ldrb	r2, [r0, #0x0]
	ldrh	r1, [r5, #0x10]
	ldr		r3, _08040880
	add		r4, r0, #0x0
	cmp		r1, r3
	beq		_0804089c
	cmp		r1, r3
	bgt		_08040888
	ldr		r0, _08040884
	cmp		r1, r0
	beq		_08040894
	b		_080408b4

.incbin "base.gba", 0x40876, 0x2

_08040878:	.4byte 0x08101068
_0804087c:	.4byte 0x000003FF
_08040880:	.4byte 0x00008402
_08040884:	.4byte 0x00008401

_08040888:
	ldr		r0, _08040890
	cmp		r1, r0
	beq		_080408a4
	b		_080408b4

_08040890:	.4byte 0x00008403

_08040894:
	ldr		r1, _08040898
	b		_080408a6

_08040898:	.4byte 0x081086c0

_0804089c:
	ldr		r1, _080408a0
	b		_080408a6

_080408a0:	.4byte 0x081086d8

_080408a4:
	ldr		r1, _080408b0
_080408a6:
	lsl		r0, r2, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_080408b6

.incbin "base.gba", 0x408AE, 0x2

_080408b0:	.4byte 0x081086f0

_080408b4:
	mov		r0, #0x0
_080408b6:
	str		r0, [r5, #0x48]
	add		r2, #0x1
	cmp		r2, #0x5
	ble		_080408c0
	mov		r2, #0x0
_080408c0:
	strb	r2, [r4, #0x0]
_080408c2:
	add		r1, r5, #0x0
	add		r1, #0x4c
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x78
	ldrb	r1, [r0, #0x0]
	add		r2, r0, #0x0
	cmp		r1, #0x3
	bne		_080408de
	ldr		r0, [r6, #0x8]
	cmp		r0, #0x0
	beq		_080408fe
_080408de:
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x4
	bne		_080408ea
	ldr		r0, [r6, #0x8]
	cmp		r0, #0x0
	beq		_080408fe
_080408ea:
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x2
	beq		_080408fe
	mov		r1, r12
	ldrh	r0, [r1, #0x34]
	mov		r1, #0x1
	orr		r1, r0
	mov		r0, #0x2
	orr		r1, r0
	b		_0804090a
_080408fe:
	mov		r1, r12
	ldrh	r0, [r1, #0x34]
	ldr		r1, _08040948
	and		r1, r0
	ldr		r0, _0804094c
	and		r1, r0
_0804090a:
	mov		r0, r12
	strh	r1, [r0, #0x34]
	add		r0, r6, #0x0
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804093c
	ldr		r4, [r6, #0x48]
	mov		r0, #0x84
	lsl		r0, r0, #0x9
	and		r4, r0
	cmp		r4, #0x0
	bne		_0804093c
	strh	r4, [r5, #0x26]
	add		r0, r5, #0x0
	bl		sub_08040160
	ldr		r0, [r6, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	orr		r0, r1
	str		r0, [r6, #0x48]
	str		r4, [r5, #0x6c]
_0804093c:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08040948:	.4byte 0x0000FFFE
_0804094c:	.4byte 0x0000FFFD
	thumb_func_end sub_080407d8

	thumb_func_start sub_08040950
sub_08040950:
	push	{ r4, r5, r6, lr }
	mov		r12, r0
	ldr		r6, [r0, #0x54]
	ldr		r4, _080409d4
	mov		r5, #0x0
	mov		r3, #0xe
	strh	r5, [r0, #0x26]
	ldr		r1, [r6, #0x0]
	ldr		r2, _080409d8
	ldr		r0, [r2, #0x0]
	mul		r0, r3
	add		r1, r1, r0
	mov		r0, r12
	str		r1, [r0, #0x0]
	ldr		r1, [r6, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	add		r2, r2, r0
	ldr		r0, [r2, #0x0]
	mul		r0, r3
	sub		r1, r1, r0
	mov		r0, r12
	str		r1, [r0, #0x4]
	ldr		r0, [r6, #0x8]
	mov		r1, r12
	str		r0, [r1, #0x8]
	add		r0, r6, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	mov		r1, r12
	ldrh	r0, [r1, #0x34]
	mov		r1, #0x1
	mov		r2, #0x0
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	mov		r1, r12
	strh	r0, [r1, #0x34]
	ldr		r0, _080409dc
	str		r0, [r1, #0x18]
	mov		r0, r12
	add		r0, #0x4c
	strh	r5, [r0, #0x0]
	add		r0, #0x25
	strb	r2, [r0, #0x0]
	ldr		r0, _080409e0
	str		r0, [r1, #0x14]
	ldr		r0, _080409e4
	add		r4, r4, r0
	ldr		r4, [r4, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_080409cc
	cmp		r6, r4
	bne		_080409cc
	mov		r0, #0x7a
	bl		sub_0807073c
_080409cc:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x409D2, 0x2

_080409d4:	.4byte RunGameLogic_CallBack
_080409d8:	.4byte 0x08101068
_080409dc:	.4byte 0x0803E0F1
_080409e0:	.4byte sub_080407d8
_080409e4:	.4byte 0x00000838
	thumb_func_end sub_08040950

	thumb_func_start sub_080409e8
sub_080409e8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	ldr		r4, [r5, #0x54]
	mov		r8, r5
	ldr		r0, _08040a10
	add		r1, r4, #0x0
	add		r1, #0x7e
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08040a14
	add		r0, r4, #0x0
	bl		sub_08037380
	b		_08040a22

.incbin "base.gba", 0x40A0E, 0x2

_08040a10:	.4byte 0x08106e8c

_08040a14:
	add		r1, r4, #0x0
	add		r1, #0x56
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	add		r0, r2, #0x0
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
_08040a22:
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r5, #0x26]
	ldr		r6, [r4, #0x0]
	ldr		r7, _08040aa0
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_08040a36
	add		r1, #0x3f
_08040a36:
	asr		r3, r1, #0x6
	ldr		r1, _08040aa4
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r7
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r6, r0
	str		r0, [r5, #0x0]
	ldr		r6, [r4, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _08040aa4
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r6, r0
	str		r0, [r5, #0x4]
	ldr		r0, [r4, #0x8]
	str		r0, [r5, #0x8]
	add		r0, r4, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	add		r2, r5, #0x0
	add		r2, #0x4c
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x7
	and		r0, r1
	add		r6, r2, #0x0
	cmp		r0, #0x0
	bne		_08040aea
	add		r0, r5, #0x0
	add		r0, #0x70
	ldrb	r3, [r0, #0x0]
	ldrh	r1, [r5, #0x10]
	ldr		r2, _08040aa8
	add		r7, r0, #0x0
	cmp		r1, r2
	beq		_08040ac4
	cmp		r1, r2
	bgt		_08040ab0
	ldr		r0, _08040aac
	cmp		r1, r0
	beq		_08040abc
	b		_08040adc

_08040aa0:	.4byte 0x08101068
_08040aa4:	.4byte 0x000003FF
_08040aa8:	.4byte 0x00008402
_08040aac:	.4byte 0x00008401

_08040ab0:
	ldr		r0, _08040ab8
	cmp		r1, r0
	beq		_08040acc
	b		_08040adc

_08040ab8:	.4byte 0x00008403

_08040abc:
	ldr		r1, _08040ac0
	b		_08040ace

_08040ac0:	.4byte 0x081086c0

_08040ac4:
	ldr		r1, _08040ac8
	b		_08040ace

_08040ac8:	.4byte 0x081086d8

_08040acc:
	ldr		r1, _08040ad8
_08040ace:
	lsl		r0, r3, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_08040ade

.incbin "base.gba", 0x40AD6, 0x2

_08040ad8:	.4byte 0x081086f0

_08040adc:
	mov		r0, #0x0
_08040ade:
	str		r0, [r5, #0x48]
	add		r3, #0x1
	cmp		r3, #0x5
	ble		_08040ae8
	mov		r3, #0x0
_08040ae8:
	strb	r3, [r7, #0x0]
_08040aea:
	ldrh	r0, [r6, #0x0]
	add		r0, #0x1
	strh	r0, [r6, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x78
	ldrb	r1, [r0, #0x0]
	add		r3, r0, #0x0
	cmp		r1, #0x3
	bne		_08040b02
	ldr		r0, [r4, #0x8]
	cmp		r0, #0x0
	beq		_08040b22
_08040b02:
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x4
	bne		_08040b0e
	ldr		r0, [r4, #0x8]
	cmp		r0, #0x0
	beq		_08040b22
_08040b0e:
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x2
	beq		_08040b22
	mov		r2, r8
	ldrh	r0, [r2, #0x34]
	mov		r1, #0x1
	orr		r1, r0
	mov		r0, #0x2
	orr		r1, r0
	b		_08040b30
_08040b22:
	mov		r1, r8
	ldrh	r0, [r1, #0x34]
	ldr		r1, _08040b78
	and		r1, r0
	ldr		r0, _08040b7c
	and		r1, r0
	mov		r2, r8
_08040b30:
	strh	r1, [r2, #0x34]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08040b54
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp		r0, #0xf3
	ble		_08040b54
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfe
	and		r0, r1
	strb	r0, [r2, #0x0]
_08040b54:
	add		r0, r4, #0x0
	add		r0, #0x96
	ldrh	r2, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r2
	cmp		r0, #0x0
	bne		_08040bbc
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08040b80
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	and		r0, r2
	b		_08040b94

.incbin "base.gba", 0x40B76, 0x2

_08040b78:	.4byte 0x0000FFFE
_08040b7c:	.4byte 0x0000FFFD

_08040b80:
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_08040bbc
	mov		r0, #0x2
	and		r0, r1
_08040b94:
	mov		r1, #0x0
	cmp		r0, #0x0
	beq		_08040b9e
	ldr		r2, _08040bc8
	add		r1, r2, #0x0
_08040b9e:
	mov		r0, r8
	strh	r1, [r0, #0x26]
	add		r0, r5, #0x0
	bl		sub_08040160
	mov		r2, #0xc6
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	orr		r0, r1
	str		r0, [r4, #0x48]
_08040bbc:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x40BC6, 0x2

_08040bc8:	.4byte 0xFFFF8000
	thumb_func_end sub_080409e8

	thumb_func_start sub_08040bcc
sub_08040bcc:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x54]
	add		r0, r5, #0x0
	bl		sub_08037380
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r1, #0x0
	mov		r12, r1
	strh	r0, [r4, #0x26]
	ldr		r6, [r5, #0x0]
	ldr		r7, _08040c64
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_08040bf0
	add		r1, #0x3f
_08040bf0:
	asr		r3, r1, #0x6
	ldr		r1, _08040c68
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r7
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r6, r0
	str		r0, [r4, #0x0]
	ldr		r6, [r5, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _08040c68
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r6, r0
	str		r0, [r4, #0x4]
	ldr		r0, [r5, #0x8]
	str		r0, [r4, #0x8]
	add		r0, r5, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	ldrh	r0, [r4, #0x34]
	mov		r1, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r4, #0x34]
	ldr		r0, _08040c6c
	str		r0, [r4, #0x18]
	add		r1, r4, #0x0
	add		r1, #0x4c
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x71
	mov		r1, r12
	strb	r1, [r0, #0x0]
	ldrh	r1, [r4, #0x10]
	ldr		r0, _08040c70
	cmp		r1, r0
	beq		_08040c8c
	cmp		r1, r0
	bgt		_08040c74
	sub		r0, #0x1
	cmp		r1, r0
	beq		_08040c80
	b		_08040ca6

.incbin "base.gba", 0x40C62, 0x2

_08040c64:	.4byte 0x08101068
_08040c68:	.4byte 0x000003FF
_08040c6c:	.4byte sub_0803e0f0
_08040c70:	.4byte 0x00008402

_08040c74:
	ldr		r0, _08040c7c
	cmp		r1, r0
	beq		_08040c9c
	b		_08040ca6

_08040c7c:	.4byte 0x00008403

_08040c80:
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	b		_08040ca4
_08040c8c:
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	ldr		r0, _08040c98
	b		_08040ca4

.incbin "base.gba", 0x40C96, 0x2

_08040c98:	.4byte 0x00001002

_08040c9c:
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	ldr		r0, _08040cb0
_08040ca4:
	strh	r0, [r1, #0x0]
_08040ca6:
	ldr		r0, _08040cb4
	str		r0, [r4, #0x14]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08040cb0:	.4byte 0x00001004
_08040cb4:	.4byte sub_080409e8
	thumb_func_end sub_08040bcc

	thumb_func_start sub_08040cb8
sub_08040cb8:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_080290c0
	mov		r2, #0x0
	mov		r1, #0x0
	strh	r4, [r5, #0x10]
	mov		r0, #0x9
	strb	r0, [r5, #0xe]
	strb	r0, [r5, #0xd]
	strb	r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strb	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x8
	strh	r1, [r0, #0x0]
	ldrh	r1, [r5, #0x10]
	ldr		r0, _08040cfc
	cmp		r1, r0
	beq		_08040d18
	cmp		r1, r0
	bgt		_08040d00
	sub		r0, #0x1
	cmp		r1, r0
	beq		_08040d0c
	b		_08040d30

.incbin "base.gba", 0x40CFA, 0x2

_08040cfc:	.4byte 0x00008402

_08040d00:
	ldr		r0, _08040d08
	cmp		r1, r0
	beq		_08040d24
	b		_08040d30

_08040d08:	.4byte 0x00008403

_08040d0c:
	ldr		r0, _08040d14
	ldr		r0, [r0, #0x0]
	b		_08040d32

.incbin "base.gba", 0x40D12, 0x2

_08040d14:	.4byte 0x081086c0

_08040d18:
	ldr		r0, _08040d20
	ldr		r0, [r0, #0x0]
	b		_08040d32

.incbin "base.gba", 0x40D1E, 0x2

_08040d20:	.4byte 0x081086d8

_08040d24:
	ldr		r0, _08040d2c
	ldr		r0, [r0, #0x0]
	b		_08040d32

.incbin "base.gba", 0x40D2A, 0x2

_08040d2c:	.4byte 0x081086f0

_08040d30:
	mov		r0, #0x0
_08040d32:
	str		r0, [r5, #0x48]
	add		r0, r5, #0x0
	add		r0, #0x70
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	add		r0, #0x8
	strb	r1, [r0, #0x0]
	add		r0, #0x1
	strb	r1, [r0, #0x0]
	sub		r0, #0x8
	strb	r1, [r0, #0x0]
	add		r0, #0x9
	strb	r1, [r0, #0x0]
	sub		r0, #0x6
	strb	r1, [r0, #0x0]
	str		r1, [r5, #0x7c]
	add		r0, #0xc
	strb	r1, [r0, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08040cb8

	thumb_func_start sub_08040d5c
sub_08040d5c:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x54]
	ldr		r1, _08040ddc
	bl		sub_08040cb8
	add		r0, r5, #0x0
	bl		sub_08037380
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r4, #0x26]
	ldr		r6, [r5, #0x0]
	ldr		r7, _08040de0
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_08040d82
	add		r1, #0x3f
_08040d82:
	asr		r3, r1, #0x6
	ldr		r1, _08040de4
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r7
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r6, r0
	str		r0, [r4, #0x0]
	ldr		r6, [r5, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _08040de4
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r6, r0
	str		r0, [r4, #0x4]
	ldr		r0, [r5, #0x8]
	str		r0, [r4, #0x8]
	add		r0, r5, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	ldr		r0, _08040de8
	str		r0, [r4, #0x14]
	ldr		r0, [r5, #0x48]
	ldr		r1, _08040dec
	and		r0, r1
	str		r0, [r5, #0x48]
	mov		r0, #0xbe
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08040ddc:	.4byte 0x00008401
_08040de0:	.4byte 0x08101068
_08040de4:	.4byte 0x000003FF
_08040de8:	.4byte 0x08040BCD
_08040dec:	.4byte 0xfffeffff
	thumb_func_end sub_08040d5c

	thumb_func_start sub_08040df0
sub_08040df0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	ldr		r5, [r7, #0x54]
	mov		r6, #0x0
	mov		r0, #0xe
	mov		r8, r0
	ldr		r1, _08040e24
	mov		r9, r1
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	add		r2, r9
	mov		r10, r2
_08040e10:
	cmp		r6, #0x0
	beq		_08040e30
	ldr		r1, _08040e28
	ldr		r2, _08040e2c
	add		r0, r1, r2
	bl		sub_08049164
	add		r4, r0, #0x0
	b		_08040e32

.incbin "base.gba", 0x40E22, 0x2

_08040e24:	.4byte 0x08101068
_08040e28:	.4byte 0x030031C4
_08040e2c:	.4byte 0x0000070C

_08040e30:
	add		r4, r7, #0x0
_08040e32:
	add		r0, r4, #0x0
	ldr		r1, _08040eac
	bl		sub_08040cb8
	str		r5, [r4, #0x54]
	mov		r0, #0x0
	strh	r0, [r4, #0x26]
	ldr		r1, [r5, #0x0]
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	mov		r2, r8
	mul		r2, r0
	add		r0, r2, #0x0
	add		r1, r1, r0
	str		r1, [r4, #0x0]
	ldr		r1, [r5, #0x4]
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	mov		r2, r8
	mul		r2, r0
	add		r0, r2, #0x0
	sub		r1, r1, r0
	str		r1, [r4, #0x4]
	ldr		r0, [r5, #0x8]
	str		r0, [r4, #0x8]
	add		r0, r5, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	ldr		r1, _08040eb0
	lsl		r0, r6, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x74
	strb	r1, [r0, #0x0]
	ldr		r0, _08040eb4
	str		r0, [r4, #0x14]
	ldr		r0, _08040eb8
	str		r0, [r4, #0x6c]
	add		r6, #0x1
	cmp		r6, #0x2
	ble		_08040e10
	ldr		r0, [r5, #0x48]
	ldr		r1, _08040ebc
	and		r0, r1
	str		r0, [r5, #0x48]
	mov		r0, #0xbe
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08040eac:	.4byte 0x00008401
_08040eb0:	.4byte 0x08108708
_08040eb4:	.4byte 0x080412BD
_08040eb8:	.4byte 0x080412dd
_08040ebc:	.4byte 0xfffeffff
	thumb_func_end sub_08040df0

	thumb_func_start sub_08040ec0
sub_08040ec0:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x54]
	ldr		r1, _08040f40
	bl		sub_08040cb8
	add		r0, r5, #0x0
	bl		sub_08037380
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r4, #0x26]
	ldr		r6, [r5, #0x0]
	ldr		r7, _08040f44
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_08040ee6
	add		r1, #0x3f
_08040ee6:
	asr		r3, r1, #0x6
	ldr		r1, _08040f48
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r7
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r6, r0
	str		r0, [r4, #0x0]
	ldr		r6, [r5, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _08040f48
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r6, r0
	str		r0, [r4, #0x4]
	ldr		r0, [r5, #0x8]
	str		r0, [r4, #0x8]
	add		r0, r5, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	ldr		r0, _08040f4c
	str		r0, [r4, #0x14]
	ldr		r0, [r5, #0x48]
	ldr		r1, _08040f50
	and		r0, r1
	str		r0, [r5, #0x48]
	mov		r0, #0xbe
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08040f40:	.4byte 0x00008402
_08040f44:	.4byte 0x08101068
_08040f48:	.4byte 0x000003FF
_08040f4c:	.4byte 0x08040BCD
_08040f50:	.4byte 0xfffeffff
	thumb_func_end sub_08040ec0

	thumb_func_start sub_08040f54
sub_08040f54:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	ldr		r5, [r7, #0x54]
	mov		r6, #0x0
	mov		r0, #0xe
	mov		r8, r0
	ldr		r1, _08040f88
	mov		r9, r1
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	add		r2, r9
	mov		r10, r2
_08040f74:
	cmp		r6, #0x0
	beq		_08040f94
	ldr		r1, _08040f8c
	ldr		r2, _08040f90
	add		r0, r1, r2
	bl		sub_08049164
	add		r4, r0, #0x0
	b		_08040f96

.incbin "base.gba", 0x40F86, 0x2

_08040f88:	.4byte 0x08101068
_08040f8c:	.4byte 0x030031C4
_08040f90:	.4byte 0x0000070C

_08040f94:
	add		r4, r7, #0x0
_08040f96:
	add		r0, r4, #0x0
	ldr		r1, _08041010
	bl		sub_08040cb8
	str		r5, [r4, #0x54]
	mov		r0, #0x0
	strh	r0, [r4, #0x26]
	ldr		r1, [r5, #0x0]
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	mov		r2, r8
	mul		r2, r0
	add		r0, r2, #0x0
	add		r1, r1, r0
	str		r1, [r4, #0x0]
	ldr		r1, [r5, #0x4]
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	mov		r2, r8
	mul		r2, r0
	add		r0, r2, #0x0
	sub		r1, r1, r0
	str		r1, [r4, #0x4]
	ldr		r0, [r5, #0x8]
	str		r0, [r4, #0x8]
	add		r0, r5, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	ldr		r1, _08041014
	lsl		r0, r6, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x74
	strb	r1, [r0, #0x0]
	ldr		r0, _08041018
	str		r0, [r4, #0x14]
	ldr		r0, _0804101c
	str		r0, [r4, #0x6c]
	add		r6, #0x1
	cmp		r6, #0x2
	ble		_08040f74
	ldr		r0, [r5, #0x48]
	ldr		r1, _08041020
	and		r0, r1
	str		r0, [r5, #0x48]
	mov		r0, #0xbe
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08041010:	.4byte 0x00008402
_08041014:	.4byte 0x08108714
_08041018:	.4byte 0x080412BD
_0804101c:	.4byte 0x080412dd
_08041020:	.4byte 0xfffeffff
	thumb_func_end sub_08040f54

	thumb_func_start sub_08041024
sub_08041024:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x54]
	ldr		r1, _080410a4
	bl		sub_08040cb8
	add		r0, r5, #0x0
	bl		sub_08037380
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r4, #0x26]
	ldr		r6, [r5, #0x0]
	ldr		r7, _080410a8
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0804104a
	add		r1, #0x3f
_0804104a:
	asr		r3, r1, #0x6
	ldr		r1, _080410ac
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r7
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r6, r0
	str		r0, [r4, #0x0]
	ldr		r6, [r5, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _080410ac
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r6, r0
	str		r0, [r4, #0x4]
	ldr		r0, [r5, #0x8]
	str		r0, [r4, #0x8]
	add		r0, r5, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	ldr		r0, _080410b0
	str		r0, [r4, #0x14]
	ldr		r0, [r5, #0x48]
	ldr		r1, _080410b4
	and		r0, r1
	str		r0, [r5, #0x48]
	mov		r0, #0xbe
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080410a4:	.4byte 0x00008403
_080410a8:	.4byte 0x08101068
_080410ac:	.4byte 0x000003FF
_080410b0:	.4byte 0x08040BCD
_080410b4:	.4byte 0xfffeffff
	thumb_func_end sub_08041024

	thumb_func_start sub_080410b8
sub_080410b8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r0, r1, #0x0
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	bge		_080410c8
	ldr		r2, _080410fc
	add		r1, r1, r2
_080410c8:
	asr		r1, r1, #0x10
	ldr		r2, [r4, #0x4]
	cmp		r2, #0x0
	bge		_080410d4
	ldr		r3, _080410fc
	add		r2, r2, r3
_080410d4:
	asr		r2, r2, #0x10
	ldr		r3, [r4, #0x8]
	cmp		r3, #0x0
	bge		_080410e0
	ldr		r5, _080410fc
	add		r3, r3, r5
_080410e0:
	asr		r3, r3, #0x10
	bl		sub_0802c3d4
	add		r1, r0, #0x0
	cmp		r1, #0x7f
	beq		_080410f6
	mov		r0, #0x7f
	and		r1, r0
	add		r0, r4, #0x0
	add		r0, #0x36
	strb	r1, [r0, #0x0]
_080410f6:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080410fc:	.4byte 0x0000FFFF
	thumb_func_end sub_080410b8

	thumb_func_start sub_08041100
sub_08041100:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r1, [r4, #0x0]
	ldr		r2, [r4, #0x4]
	add		r0, r5, #0x0
	mov		r3, #0x0
	bl		sub_0802c750
	cmp		r0, #0x0
	beq		_0804111e
	add		r1, r4, #0x0
	add		r1, #0x4e
	mov		r0, #0x26
	b		_08041146
_0804111e:
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	bge		_08041128
	ldr		r0, _08041150
	add		r1, r1, r0
_08041128:
	lsr		r1, r1, #0x10
	ldr		r2, [r4, #0x4]
	cmp		r2, #0x0
	bge		_08041134
	ldr		r0, _08041150
	add		r2, r2, r0
_08041134:
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	asr		r2, r2, #0x10
	add		r0, r5, #0x0
	mov		r3, #0x0
	bl		sub_0802c490
	add		r1, r4, #0x0
	add		r1, #0x4e
_08041146:
	strb	r0, [r1, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4114E, 0x2

_08041150:	.4byte 0x0000FFFF
	thumb_func_end sub_08041100

	thumb_func_start sub_08041154
sub_08041154:
	add		r2, r0, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	bne		_08041164
	ldr		r0, [r2, #0x8]
	cmp		r0, #0x0
	beq		_08041180
_08041164:
	add		r0, r2, #0x0
	add		r0, #0x78
	ldrb	r1, [r0, #0x0]
	add		r3, r0, #0x0
	cmp		r1, #0x4
	bne		_08041176
	ldr		r0, [r2, #0x8]
	cmp		r0, #0x0
	beq		_08041180
_08041176:
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x2
	beq		_08041180
	mov		r0, #0x1
	b		_08041182
_08041180:
	mov		r0, #0x0
_08041182:
	bx		lr
	thumb_func_end sub_08041154

	thumb_func_start sub_08041184
sub_08041184:
	push	{ r4, lr }
	mov		r2, #0x5a
	add		r2, r2, r0
	mov		r12, r2
	mov		r3, #0x0
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	mov		r4, r12
	strh	r2, [r4, #0x0]
	str		r1, [r0, #0x30]
	ldrh	r2, [r0, #0x34]
	ldr		r1, _080411ac
	and		r1, r2
	strh	r1, [r0, #0x34]
	str		r3, [r0, #0x18]
	ldr		r1, _080411b0
	str		r1, [r0, #0x14]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_080411ac:	.4byte 0x0000FFFD
_080411b0:	.4byte 0x0804123d
	thumb_func_end sub_08041184

	thumb_func_start sub_080411b4
sub_080411b4:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r0, #0x4e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x26
	beq		_080411d4
	mov		r0, #0x0
	str		r0, [r3, #0x14]
	ldr		r1, _080411d0
	add		r0, r2, r1
	add		r1, r3, #0x0
	bl		sub_080491c0
	b		_080411ee

_080411d0:	.4byte 0x0000070C

_080411d4:
	mov		r4, #0x5a
	mov		r2, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	strh	r0, [r4, r3]
	str		r1, [r3, #0x30]
	ldrh	r1, [r3, #0x34]
	ldr		r0, _080411f4
	and		r0, r1
	strh	r0, [r3, #0x34]
	str		r2, [r3, #0x18]
	ldr		r0, _080411f8
	str		r0, [r3, #0x14]
_080411ee:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_080411f4:	.4byte 0x0000FFFD
_080411f8:	.4byte 0x0804123D
	thumb_func_end sub_080411b4

	thumb_func_start sub_080411fc
sub_080411fc:
	push	{ lr }
	add		r3, r0, #0x0
	cmp		r2, #0x1
	beq		_0804122c
	cmp		r2, #0x1
	bgt		_0804120e
	cmp		r2, #0x0
	beq		_08041216
	b		_08041234
_0804120e:
	cmp		r2, #0x2
	beq		_08041224
	cmp		r2, #0x3
	bne		_08041234
_08041216:
	ldr		r0, [r3, #0x28]
	neg		r0, r0
	str		r0, [r3, #0x28]
	ldr		r0, [r3, #0x2c]
	neg		r0, r0
	str		r0, [r3, #0x2c]
	b		_08041234
_08041224:
	mov		r2, #0x2
	bl		sub_0803e314
	b		_08041236
_0804122c:
	mov		r2, #0x0
	bl		sub_0803e314
	b		_08041236
_08041234:
	mov		r0, #0x1
_08041236:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x4123A, 0x2
	push	{ r4, lr }
	add		r2, r0, #0x0
	ldr		r3, _08041270
	ldr		r1, [r2, #0x8]
	ldr		r0, [r2, #0x30]
	add		r1, r1, r0
	str		r1, [r2, #0x8]
	ldr		r4, _08041274
	add		r0, r0, r4
	str		r0, [r2, #0x30]
	cmp		r1, #0x0
	bge		_08041268
	mov		r0, #0x0
	str		r0, [r2, #0x8]
	str		r0, [r2, #0x30]
	str		r0, [r2, #0x14]
	mov		r1, #0xe6
	lsl		r1, r1, #0x3
	add		r0, r3, r1
	add		r1, r2, #0x0
	bl		sub_080491c0
_08041268:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4126E, 0x2

_08041270:	.4byte RunGameLogic_CallBack
_08041274:	.4byte 0xFFFFE600
	thumb_func_end sub_080411fc

	thumb_func_start sub_08041278
sub_08041278:
	push	{ r4, lr }
	ldr		r3, [r0, #0x54]
	ldr		r1, [r3, #0x48]
	ldr		r2, _080412b0
	and		r1, r2
	str		r1, [r3, #0x48]
	mov		r2, #0xd0
	lsl		r2, r2, #0x8
	mov		r1, #0x5a
	add		r1, r1, r0
	mov		r12, r1
	mov		r3, #0x0
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	mov		r4, r12
	strh	r1, [r4, #0x0]
	str		r2, [r0, #0x30]
	ldrh	r2, [r0, #0x34]
	ldr		r1, _080412b4
	and		r1, r2
	strh	r1, [r0, #0x34]
	str		r3, [r0, #0x18]
	ldr		r1, _080412b8
	str		r1, [r0, #0x14]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x412AE, 0x2

_080412b0:	.4byte 0xfffeffff
_080412b4:	.4byte 0x0000FFFD
_080412b8:	.4byte 0x0804123D
	thumb_func_end sub_08041278

	thumb_func_start sub_080412bc
sub_080412bc:
	push	{ lr }
	add		r1, r0, #0x0
	add		r2, r1, #0x0
	add		r2, #0x74
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_080412d2
	add		r0, r1, #0x0
	bl		sub_08040950
	b		_080412d6
_080412d2:
	sub		r0, #0x1
	strb	r0, [r2, #0x0]
_080412d6:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x412DA, 0x2
	push	{ r4, lr }
	add		r1, r0, #0x0
	ldr		r4, [r1, #0x54]
	ldr		r0, _08041308
	ldr		r2, [r4, #0x48]
	ldr		r3, _0804130c
	and		r2, r3
	str		r2, [r4, #0x48]
	mov		r2, #0xbe
	lsl		r2, r2, #0x1
	add		r4, r4, r2
	ldrb	r2, [r4, #0x0]
	sub		r2, #0x1
	strb	r2, [r4, #0x0]
	mov		r2, #0xe6
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	bl		sub_080491c0
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08041308:	.4byte RunGameLogic_CallBack
_0804130c:	.4byte 0xfffeffff
	thumb_func_end sub_080412bc

	thumb_func_start sub_08041310
sub_08041310:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r2, r1, #0x0
	ldr		r3, [r5, #0x54]
	ldr		r6, _080413c0
	add		r7, r6, #0x0
	add		r7, #0x24
	ldrh	r1, [r2, #0x10]
	mov		r4, #0xf0
	lsl		r4, r4, #0x8
	and		r4, r1
	mov		r0, #0x88
	lsl		r0, r0, #0x8
	cmp		r1, r0
	beq		_080413b8
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	cmp		r4, r0
	beq		_080413b8
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	cmp		r4, r0
	bne		_0804134a
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_080413b8
_0804134a:
	ldr		r0, [r3, #0x48]
	ldr		r1, _080413c4
	and		r0, r1
	str		r0, [r3, #0x48]
	mov		r1, #0x9c
	lsl		r1, r1, #0x8
	add		r0, r5, #0x0
	bl		sub_08041184
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bne		_080413b8
	ldr		r1, _080413c8
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_080413b8
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	cmp		r6, #0x0
	beq		_080413b8
	mov		r0, #0x7c
	bl		sub_0807073c
	ldr		r5, _080413cc
	ldr		r4, _080413d0
	mov		r0, #0xf8
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_080413b8:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x413BE, 0x2

_080413c0:	.4byte RunGameLogic_CallBack
_080413c4:	.4byte 0xfffeffff
_080413c8:	.4byte 0x00000838
_080413cc:	.4byte 0x08124544
_080413d0:	.4byte 0x081245c8
	thumb_func_end sub_08041310

	thumb_func_start sub_080413d4
sub_080413d4:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r3, r1, #0x0
	ldr		r2, [r5, #0x54]
	ldr		r6, _0804148c
	add		r7, r6, #0x0
	add		r7, #0x24
	ldrh	r1, [r3, #0x10]
	mov		r4, #0xf0
	lsl		r4, r4, #0x8
	and		r4, r1
	mov		r0, #0x88
	lsl		r0, r0, #0x8
	cmp		r1, r0
	beq		_08041486
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	cmp		r4, r0
	beq		_08041486
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	cmp		r4, r0
	bne		_0804140e
	add		r0, r3, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08041486
_0804140e:
	ldr		r0, [r2, #0x48]
	ldr		r1, _08041490
	and		r0, r1
	str		r0, [r2, #0x48]
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r1, r2, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r1, #0x9c
	lsl		r1, r1, #0x8
	add		r0, r5, #0x0
	bl		sub_08041184
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bne		_08041486
	ldr		r1, _08041494
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08041486
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	cmp		r6, #0x0
	beq		_08041486
	mov		r0, #0x7c
	bl		sub_0807073c
	ldr		r5, _08041498
	ldr		r4, _0804149c
	mov		r0, #0xf8
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_08041486:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0804148c:	.4byte RunGameLogic_CallBack
_08041490:	.4byte 0xfffeffff
_08041494:	.4byte 0x00000838
_08041498:	.4byte 0x08124544
_0804149c:	.4byte 0x081245c8
	thumb_func_end sub_080413d4

	thumb_func_start sub_080414a0
sub_080414a0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	mov		r10, r6
	ldr		r0, [r6, #0x54]
	mov		r8, r0
	ldr		r5, _080415a0
	mov		r1, #0x24
	add		r1, r1, r5
	mov		r9, r1
	add		r1, r6, #0x0
	add		r1, #0x4c
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	mov		r4, #0x0
	strh	r0, [r1, #0x0]
	ldrh	r0, [r6, #0x38]
	cmp		r0, #0x0
	beq		_080414d0
	sub		r0, #0x1
	strh	r0, [r6, #0x38]
_080414d0:
	ldr		r0, [r6, #0x0]
	ldr		r1, [r6, #0x28]
	add		r0, r0, r1
	str		r0, [r6, #0x0]
	ldr		r0, [r6, #0x4]
	ldr		r1, [r6, #0x2c]
	add		r0, r0, r1
	str		r0, [r6, #0x4]
	ldr		r0, [r6, #0x8]
	ldr		r1, [r6, #0x30]
	add		r0, r0, r1
	str		r0, [r6, #0x8]
	ldr		r0, _080415a4
	add		r1, r1, r0
	str		r1, [r6, #0x30]
	add		r0, r6, #0x0
	mov		r1, r9
	bl		sub_080410b8
	ldr		r0, [r6, #0x8]
	cmp		r0, #0x0
	bgt		_080415f4
	str		r4, [r6, #0x8]
	str		r4, [r6, #0x30]
	add		r0, r6, #0x0
	mov		r1, r9
	bl		sub_080410b8
	str		r4, [r6, #0x14]
	ldr		r1, _080415a8
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08041566
	mov		r0, r9
	add		r1, r6, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_0804152c
	mov		r2, #0x40
_0804152c:
	add		r7, r2, #0x0
	cmp		r7, #0x0
	beq		_08041566
	mov		r0, #0x7a
	bl		sub_0807073c
	ldr		r5, _080415ac
	ldr		r4, _080415b0
	mov		r0, #0xf4
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r7, #0x0
	bl		sub_0807169c
_08041566:
	mov		r0, r10
	ldr		r1, _080415b4
	bl		sub_08041100
	mov		r2, #0x0
	add		r0, r6, #0x0
	add		r0, #0x4e
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x90
	and		r0, r1
	cmp		r0, #0x80
	bne		_08041580
	mov		r2, #0x1
_08041580:
	cmp		r2, #0x0
	bne		_08041592
	mov		r0, #0x0
	add		r2, r1, #0x0
	cmp		r2, #0x26
	bne		_0804158e
	mov		r0, #0x1
_0804158e:
	cmp		r0, #0x0
	beq		_080415b8
_08041592:
	mov		r1, #0x9c
	lsl		r1, r1, #0x8
	add		r0, r6, #0x0
	bl		sub_08041184
	b		_0804160c

.incbin "base.gba", 0x4159E, 0x2

_080415a0:	.4byte RunGameLogic_CallBack
_080415a4:	.4byte 0xFFFFE600
_080415a8:	.4byte 0x00000838
_080415ac:	.4byte 0x08124544
_080415b0:	.4byte 0x081245c8
_080415b4:	.4byte 0x030031C4

_080415b8:
	mov		r3, #0x0
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_080415d0
	mov		r0, #0x0
	cmp		r2, #0x26
	bne		_080415ca
	mov		r0, #0x1
_080415ca:
	cmp		r0, #0x0
	bne		_080415d0
	mov		r3, #0x1
_080415d0:
	cmp		r3, #0x0
	beq		_080415f4
	mov		r1, r8
	ldr		r0, [r1, #0x48]
	ldr		r1, _080415ec
	and		r0, r1
	mov		r1, r8
	str		r0, [r1, #0x48]
	ldr		r0, _080415f0
	add		r0, r9
	add		r1, r6, #0x0
	bl		sub_080491c0
	b		_0804160c

_080415ec:	.4byte 0xfffeffff
_080415f0:	.4byte 0x0000070C

_080415f4:
	add		r0, r6, #0x0
	add		r0, #0x4c
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x10
	bne		_0804160c
	mov		r1, r8
	ldr		r0, [r1, #0x48]
	ldr		r1, _0804161c
	and		r0, r1
	mov		r1, r8
	str		r0, [r1, #0x48]
_0804160c:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4161A, 0x2

_0804161c:	.4byte 0xfffeffff
	thumb_func_end sub_080414a0

	thumb_func_start sub_08041620
sub_08041620:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	str		r6, [sp, #0x0]
	ldr		r0, [r6, #0x54]
	mov		r8, r0
	ldr		r0, _080416b4
	add		r0, #0x24
	mov		r10, r0
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r0, r8
	mov		r1, #0x0
	mov		r9, r1
	mov		r2, r9
	strh	r2, [r0, #0x0]
	mov		r0, r9
	str		r0, [r6, #0x8]
	mov		r1, r8
	ldr		r0, [r1, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	and		r0, r1
	cmp		r0, #0x0
	bne		_080416c0
	mov		r0, r8
	bl		sub_080373bc
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r6, #0x26]
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	str		r1, [r6, #0x8]
	ldr		r4, _080416b8
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_08041678
	add		r1, #0x3f
_08041678:
	asr		r3, r1, #0x6
	ldr		r1, _080416bc
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r4
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	str		r0, [r6, #0x28]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _080416bc
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	lsl		r0, r0, #0x4
	str		r0, [r6, #0x2c]
	mov		r0, #0xd0
	lsl		r0, r0, #0x9
	str		r0, [r6, #0x30]
	add		r0, r6, #0x0
	mov		r1, r10
	bl		sub_080410b8
	b		_08041734

.incbin "base.gba", 0x416B2, 0x2

_080416b4:	.4byte RunGameLogic_CallBack
_080416b8:	.4byte 0x08101068
_080416bc:	.4byte 0x000003FF

_080416c0:
	mov		r0, r8
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r7, r0, #0x3
	ldr		r0, _080417c4
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	add		r0, #0x1
	mov		r2, r10
	ldrh	r1, [r2, #0x14]
	cmp		r7, r1
	blt		_080416da
	sub		r7, r7, r1
_080416da:
	cmp		r0, #0x3
	bne		_080416e0
	mov		r0, #0x0
_080416e0:
	lsl		r4, r0, #0x18
	lsr		r4, r4, #0x18
	mov		r0, r10
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_0802c5d0
	add		r5, r0, #0x0
	mov		r0, r10
	add		r1, r7, #0x0
	add		r2, r4, #0x0
	bl		sub_0802c610
	add		r2, r0, #0x0
	mov		r0, r9
	strh	r0, [r6, #0x26]
	mov		r0, #0x80
	lsl		r0, r0, #0x9
	str		r0, [r6, #0x8]
	ldr		r0, [r6, #0x0]
	lsl		r5, r5, #0x13
	sub		r0, r5, r0
	cmp		r0, #0x0
	bge		_08041712
	add		r0, #0x1f
_08041712:
	asr		r0, r0, #0x5
	str		r0, [r6, #0x28]
	ldr		r1, [r6, #0x4]
	lsl		r0, r2, #0x13
	sub		r0, r0, r1
	cmp		r0, #0x0
	bge		_08041722
	add		r0, #0x1f
_08041722:
	asr		r0, r0, #0x5
	str		r0, [r6, #0x2c]
	mov		r0, #0xd0
	lsl		r0, r0, #0x9
	str		r0, [r6, #0x30]
	add		r0, r6, #0x0
	mov		r1, r10
	bl		sub_080410b8
_08041734:
	ldr		r0, _080417c8
	str		r0, [r6, #0x18]
	mov		r0, #0x8
	mov		r1, #0x0
	strh	r0, [r6, #0x38]
	ldr		r0, [sp, #0x0]
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	mov		r1, r8
	ldr		r0, [r1, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	orr		r0, r1
	mov		r2, r8
	str		r0, [r2, #0x48]
	ldr		r0, _080417cc
	ldr		r1, [sp, #0x0]
	str		r0, [r1, #0x14]
	ldr		r0, _080417d0
	add		r0, r10
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_080417b4
	mov		r0, r10
	add		r1, r6, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_0804177a
	mov		r2, #0x40
_0804177a:
	add		r6, r2, #0x0
	cmp		r6, #0x0
	beq		_080417b4
	mov		r0, #0x7b
	bl		sub_0807073c
	ldr		r5, _080417d4
	ldr		r4, _080417d8
	mov		r2, #0xf6
	lsl		r2, r2, #0x2
	add		r4, r4, r2
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_080417b4:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080417c4:	.4byte 0x00000191
_080417c8:	.4byte sub_08041310
_080417cc:	.4byte sub_080414a0
_080417d0:	.4byte 0x00000814
_080417d4:	.4byte 0x08124544
_080417d8:	.4byte 0x081245c8
	thumb_func_end sub_08041620

	thumb_func_start sub_080417dc
sub_080417dc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	add		r7, r4, #0x0
	ldr		r6, [r4, #0x54]
	ldr		r0, _08041830
	add		r0, #0x24
	mov		r8, r0
	mov		r9, r8
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, r8
	bl		sub_08041100
	mov		r2, #0x0
	add		r0, r4, #0x0
	add		r0, #0x4e
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x90
	and		r0, r1
	cmp		r0, #0x80
	bne		_08041816
	mov		r2, #0x1
_08041816:
	cmp		r2, #0x0
	beq		_08041838
	ldr		r0, [r6, #0x48]
	ldr		r1, _08041834
	and		r0, r1
	str		r0, [r6, #0x48]
	mov		r1, #0x9c
	lsl		r1, r1, #0x8
	add		r0, r4, #0x0
	bl		sub_08041184
	b		_080418f4

.incbin "base.gba", 0x4182E, 0x2

_08041830:	.4byte RunGameLogic_CallBack
_08041834:	.4byte 0xfffeffff

_08041838:
	mov		r3, #0x0
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08041854
	mov		r2, #0x0
	lsl		r0, r1, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x26
	bne		_0804184e
	mov		r2, #0x1
_0804184e:
	cmp		r2, #0x0
	bne		_08041854
	mov		r3, #0x1
_08041854:
	cmp		r3, #0x0
	bne		_0804186a
	mov		r5, #0x0
	add		r0, r7, #0x0
	add		r0, #0x4e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x26
	bne		_08041866
	mov		r5, #0x1
_08041866:
	cmp		r5, #0x0
	beq		_08041888
_0804186a:
	ldr		r0, [r6, #0x48]
	ldr		r1, _08041880
	and		r0, r1
	str		r0, [r6, #0x48]
	ldr		r0, _08041884
	add		r0, r8
	add		r1, r7, #0x0
	bl		sub_080491c0
	b		_080418f4

.incbin "base.gba", 0x4187E, 0x2

_08041880:	.4byte 0xfffeffff
_08041884:	.4byte 0x0000070C

_08041888:
	str		r5, [r4, #0x8]
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_080410b8
	ldr		r0, _08041900
	str		r0, [r4, #0x18]
	str		r5, [r7, #0x14]
	ldr		r0, _08041904
	add		r0, r8
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_080418f4
	mov		r0, r8
	add		r1, r4, #0x0
	bl		sub_080466c4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_080418ba
	mov		r2, #0x40
_080418ba:
	add		r6, r2, #0x0
	cmp		r6, #0x0
	beq		_080418f4
	mov		r0, #0x7a
	bl		sub_0807073c
	ldr		r5, _08041908
	ldr		r4, _0804190c
	mov		r0, #0xf4
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_080418f4:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08041900:	.4byte sub_08041310
_08041904:	.4byte 0x00000814
_08041908:	.4byte 0x08124544
_0804190c:	.4byte 0x081245c8
	thumb_func_end sub_080417dc

	thumb_func_start sub_08041910
sub_08041910:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	ldr		r4, [r5, #0x54]
	add		r7, r5, #0x0
	add		r1, r5, #0x0
	add		r1, #0x4c
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r1, _0804193c
	add		r0, r4, #0x0
	add		r0, #0x7e
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08041940
	add		r0, r4, #0x0
	bl		sub_08037380
	b		_0804194e

_0804193c:	.4byte 0x08106e8c

_08041940:
	add		r1, r4, #0x0
	add		r1, #0x56
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	add		r0, r2, #0x0
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
_0804194e:
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r5, #0x26]
	ldr		r6, [r4, #0x0]
	ldr		r1, _080419b8
	mov		r12, r1
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_08041964
	add		r1, #0x3f
_08041964:
	asr		r3, r1, #0x6
	ldr		r1, _080419bc
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r12
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r6, r0
	str		r0, [r5, #0x0]
	ldr		r6, [r4, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _080419bc
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r6, r0
	str		r0, [r5, #0x4]
	ldr		r0, [r4, #0x8]
	str		r0, [r5, #0x8]
	add		r0, r4, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	bl		sub_08041154
	cmp		r0, #0x0
	beq		_080419c0
	ldrh	r0, [r7, #0x34]
	mov		r1, #0x1
	orr		r1, r0
	mov		r0, #0x2
	orr		r1, r0
	b		_080419ca

_080419b8:	.4byte 0x08101068
_080419bc:	.4byte 0x000003FF

_080419c0:
	ldrh	r0, [r7, #0x34]
	ldr		r1, _080419f8
	and		r1, r0
	ldr		r0, _080419fc
	and		r1, r0
_080419ca:
	strh	r1, [r7, #0x34]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08041a00
	add		r0, r4, #0x0
	add		r0, #0x96
	ldrh	r2, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r2
	cmp		r0, #0x0
	bne		_08041a40
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r2
	cmp		r0, #0x0
	bne		_08041a32
	add		r0, r5, #0x0
	bl		sub_080417dc
	b		_08041a40

_080419f8:	.4byte 0x0000FFFE
_080419fc:	.4byte 0x0000FFFD

_08041a00:
	add		r0, r5, #0x0
	add		r0, #0x4c
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0xf3
	ble		_08041a1a
	mov		r0, #0xc8
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfe
	and		r0, r1
	strb	r0, [r2, #0x0]
_08041a1a:
	mov		r1, #0xc8
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrb	r2, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r2
	cmp		r0, #0x0
	bne		_08041a40
	mov		r0, #0x2
	and		r0, r2
	cmp		r0, #0x0
	bne		_08041a3a
_08041a32:
	add		r0, r5, #0x0
	bl		sub_08041620
	b		_08041a40
_08041a3a:
	add		r0, r5, #0x0
	bl		sub_080417dc
_08041a40:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x41A46, 0x2
	thumb_func_end sub_08041910

	thumb_func_start sub_08041a48
sub_08041a48:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_080290c0
	mov		r2, #0x0
	mov		r1, #0x0
	strh	r4, [r5, #0x10]
	mov		r0, #0x4
	strb	r0, [r5, #0xe]
	strb	r0, [r5, #0xd]
	strb	r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strb	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x8
	strh	r1, [r0, #0x0]
	ldr		r0, _08041a80
	str		r0, [r5, #0x48]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08041a80:	.4byte 0x08096568
	thumb_func_end sub_08041a48

	thumb_func_start sub_08041a84
sub_08041a84:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r5, r4, #0x0
	ldr		r6, [r4, #0x54]
	ldr		r1, _08041b10
	bl		sub_08041a48
	add		r0, r6, #0x0
	bl		sub_08037380
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r4, #0x26]
	ldr		r7, [r6, #0x0]
	ldr		r1, _08041b14
	mov		r12, r1
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_08041aae
	add		r1, #0x3f
_08041aae:
	asr		r3, r1, #0x6
	ldr		r1, _08041b18
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r12
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r7, r0
	str		r0, [r4, #0x0]
	ldr		r4, [r6, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _08041b18
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r4, r0
	str		r0, [r5, #0x4]
	ldr		r0, [r6, #0x8]
	str		r0, [r5, #0x8]
	add		r0, r6, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	ldr		r0, _08041b1c
	str		r0, [r5, #0x14]
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	ldr		r0, _08041b20
	strh	r0, [r1, #0x0]
	ldrh	r0, [r5, #0x34]
	mov		r1, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r5, #0x34]
	ldr		r0, _08041b24
	str		r0, [r5, #0x18]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08041b10:	.4byte 0x00008001
_08041b14:	.4byte 0x08101068
_08041b18:	.4byte 0x000003FF
_08041b1c:	.4byte sub_08041910
_08041b20:	.4byte 0x00001005
_08041b24:	.4byte sub_080413d4
	thumb_func_end sub_08041a84

	thumb_func_start sub_08041b28
sub_08041b28:
	bx		lr

.incbin "base.gba", 0x41B2A, 0x2
	thumb_func_end sub_08041b28

	thumb_func_start sub_08041b2c
sub_08041b2c:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x54]
	ldr		r2, _08041bb4
	add		r1, r4, #0x0
	add		r1, #0x4c
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x1d
	ble		_08041b56
	mov		r0, #0x0
	str		r0, [r4, #0x14]
	mov		r1, #0xe6
	lsl		r1, r1, #0x3
	add		r0, r2, r1
	add		r1, r4, #0x0
	bl		sub_080491c0
_08041b56:
	add		r0, r5, #0x0
	bl		sub_08037380
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r4, #0x26]
	ldr		r6, [r5, #0x0]
	ldr		r7, _08041bb8
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_08041b70
	add		r1, #0x3f
_08041b70:
	asr		r3, r1, #0x6
	ldr		r1, _08041bbc
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r7
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r6, r0
	str		r0, [r4, #0x0]
	ldr		r6, [r5, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _08041bbc
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r6, r0
	str		r0, [r4, #0x4]
	ldr		r0, [r5, #0x8]
	str		r0, [r4, #0x8]
	add		r0, r5, #0x0
	add		r0, #0x36
	ldrb	r1, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x36
	strb	r1, [r0, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08041bb4:	.4byte RunGameLogic_CallBack
_08041bb8:	.4byte 0x08101068
_08041bbc:	.4byte 0x000003FF
	thumb_func_end sub_08041b2c

	thumb_func_start sub_08041bc0
sub_08041bc0:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_080290c0
	mov		r2, #0x0
	mov		r1, #0x0
	strh	r4, [r5, #0x10]
	mov		r0, #0x8
	strb	r0, [r5, #0xe]
	strb	r0, [r5, #0xd]
	strb	r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strb	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x8
	strh	r1, [r0, #0x0]
	str		r1, [r5, #0x48]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x41BF6, 0x2
	thumb_func_end sub_08041bc0

	thumb_func_start sub_08041bf8
sub_08041bf8:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r4, r5, #0x0
	ldr		r6, [r5, #0x54]
	ldr		r1, _08041c78
	bl		sub_08041bc0
	add		r0, r6, #0x0
	bl		sub_08037380
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r5, #0x26]
	ldr		r7, [r6, #0x0]
	ldr		r1, _08041c7c
	mov		r12, r1
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_08041c22
	add		r1, #0x3f
_08041c22:
	asr		r3, r1, #0x6
	ldr		r1, _08041c80
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r12
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r7, r0
	str		r0, [r5, #0x0]
	ldr		r5, [r6, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _08041c80
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r5, r0
	str		r0, [r4, #0x4]
	ldr		r0, [r6, #0x8]
	str		r0, [r4, #0x8]
	add		r0, r6, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	ldr		r0, _08041c84
	str		r0, [r4, #0x14]
	mov		r0, #0x0
	str		r0, [r4, #0x18]
	ldrh	r0, [r4, #0x34]
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r4, #0x34]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x41C76, 0x2

_08041c78:	.4byte 0x00008003
_08041c7c:	.4byte 0x08101068
_08041c80:	.4byte 0x000003FF
_08041c84:	.4byte 0x08041B2D
	thumb_func_end sub_08041bf8

	thumb_func_start sub_08041c88
sub_08041c88:
	push	{ r4, lr }
	ldr		r2, [r0, #0x54]
	ldr		r1, _08041ca8
	strh	r1, [r0, #0x10]
	add		r2, #0xb2
	ldrh	r3, [r2, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0x8
	add		r1, r4, #0x0
	orr		r1, r3
	strh	r1, [r2, #0x0]
	bl		sub_08041bf8
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08041ca8:	.4byte 0x00008003
	thumb_func_end sub_08041c88

	thumb_func_start sub_08041cac
sub_08041cac:
	push	{ r4, lr }
	ldr		r2, [r0, #0x54]
	add		r2, #0xb2
	ldrh	r3, [r2, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0x8
	add		r1, r4, #0x0
	orr		r1, r3
	strh	r1, [r2, #0x0]
	mov		r1, #0x96
	lsl		r1, r1, #0x2
	str		r1, [r0, #0x70]
	ldr		r1, _08041cd0
	str		r1, [r0, #0x14]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x41CCE, 0x2

_08041cd0:	.4byte sub_08041d04
	thumb_func_end sub_08041cac

	thumb_func_start sub_08041cd4
sub_08041cd4:
	push	{ r4, r5, lr }
	add		r1, r0, #0x0
	ldr		r0, _08041d00
	ldr		r3, [r1, #0x54]
	add		r3, #0xb2
	ldrh	r4, [r3, #0x0]
	mov		r5, #0x80
	lsl		r5, r5, #0x8
	add		r2, r5, #0x0
	mov		r5, #0x0
	orr		r2, r4
	strh	r2, [r3, #0x0]
	str		r5, [r1, #0x14]
	mov		r2, #0xe6
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	bl		sub_080491c0
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x41CFE, 0x2

_08041d00:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_08041cd4

	thumb_func_start sub_08041d04
sub_08041d04:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, _08041d30
	ldr		r1, [r4, #0x54]
	ldr		r0, [r4, #0x70]
	sub		r0, #0x1
	str		r0, [r4, #0x70]
	cmp		r0, #0x0
	bgt		_08041d2a
	add		r0, r1, #0x0
	mov		r1, #0x0
	bl		sub_080373dc
	mov		r1, #0xe6
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	add		r1, r4, #0x0
	bl		sub_080491c0
_08041d2a:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08041d30:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_08041d04

	thumb_func_start sub_08041d34
sub_08041d34:
	push	{ r4, r5, lr }
	add		r1, r0, #0x0
	ldr		r0, _08041d60
	ldr		r3, [r1, #0x54]
	add		r3, #0xb2
	ldrh	r4, [r3, #0x0]
	mov		r5, #0x80
	lsl		r5, r5, #0x8
	add		r2, r5, #0x0
	mov		r5, #0x0
	orr		r2, r4
	strh	r2, [r3, #0x0]
	str		r5, [r1, #0x14]
	mov		r2, #0xe6
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	bl		sub_080491c0
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x41D5E, 0x2

_08041d60:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_08041d34

	thumb_func_start sub_08041d64
sub_08041d64:
	push	{ r4, r5, lr }
	add		r1, r0, #0x0
	ldr		r0, _08041d90
	ldr		r3, [r1, #0x54]
	add		r3, #0xb2
	ldrh	r4, [r3, #0x0]
	mov		r5, #0x80
	lsl		r5, r5, #0x8
	add		r2, r5, #0x0
	mov		r5, #0x0
	orr		r2, r4
	strh	r2, [r3, #0x0]
	str		r5, [r1, #0x14]
	mov		r2, #0xe6
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	bl		sub_080491c0
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x41D8E, 0x2

_08041d90:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_08041d64

	thumb_func_start sub_08041d94
sub_08041d94:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r9, r0
	ldr		r0, [r0, #0x54]
	mov		r8, r0
	ldr		r4, _08041ea4
	mov		r1, #0x24
	add		r1, r1, r4
	mov		r10, r1
	ldr		r2, _08041ea8
	add		r5, r4, r2
	ldr		r0, [r5, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08041dc8
	mov		r0, #0x4
	bl		sub_0804bc78
	mov		r0, #0x7e
	bl		sub_0807073c
_08041dc8:
	mov		r2, r8
	add		r2, #0xb2
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08041eac
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r3, _08041eb0
	add		r1, r4, r3
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r0, _08041eb4
	add		r1, r4, r0
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	mov		r7, #0x0
	ldr		r1, _08041eb8
	add		r0, r4, r1
	ldrb	r2, [r0, #0x0]
	cmp		r7, r2
	bge		_08041e88
_08041df2:
	lsl		r0, r7, #0x2
	ldr		r3, _08041ea4
	ldr		r2, _08041ebc
	add		r1, r3, r2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	cmp		r4, r8
	beq		_08041e7e
	add		r0, r4, #0x0
	add		r0, #0x6a
	mov		r3, #0x0
	ldrsh	r6, [r0, r3]
	cmp		r6, #0x0
	bne		_08041e7e
	add		r5, r4, #0x0
	add		r5, #0x78
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x2
	beq		_08041e7e
	cmp		r0, #0x3
	beq		_08041e7e
	cmp		r0, #0x5
	beq		_08041e7e
	cmp		r0, #0x6
	beq		_08041e7e
	cmp		r0, #0x7
	beq		_08041e7e
	ldr		r1, _08041ec0
	ldr		r0, [r1, #0x0]
	cmp		r0, r4
	bne		_08041e3c
	ldr		r0, _08041ec4
	ldr		r1, _08041ec8
	mov		r2, #0x0
	bl		sub_08029d24
	str		r4, [r0, #0x54]
_08041e3c:
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r0, [r2, #0x0]
	mov		r3, #0xc0
	lsl		r3, r3, #0x2
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r1, r4, #0x0
	add		r1, #0xb6
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	sub		r2, #0x40
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x3
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x1
	bne		_08041e6c
	add		r0, r4, #0x0
	add		r0, #0xbc
	str		r6, [r0, #0x0]
_08041e6c:
	add		r1, r4, #0x0
	add		r1, #0x68
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, r10
	bl		sub_0803ccc8
_08041e7e:
	add		r7, #0x1
	ldr		r0, _08041ecc
	ldrb	r0, [r0, #0x0]
	cmp		r7, r0
	blt		_08041df2
_08041e88:
	mov		r0, #0x0
	mov		r1, r9
	str		r0, [r1, #0x14]
	ldr		r0, _08041ed0
	add		r0, r10
	bl		sub_080491c0
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08041ea4:	.4byte RunGameLogic_CallBack
_08041ea8:	.4byte 0x00000838
_08041eac:	.4byte 0x0000FFBF
_08041eb0:	.4byte 0x00000C82
_08041eb4:	.4byte 0x0000080D
_08041eb8:	.4byte 0x00000814
_08041ebc:	.4byte 0x00000818
_08041ec0:	.4byte 0x030039D8
_08041ec4:	.4byte 0x08041f15
_08041ec8:	.4byte 0x08108720
_08041ecc:	.4byte 0x030039B4
_08041ed0:	.4byte 0x0000070C
	thumb_func_end sub_08041d94

	thumb_func_start sub_08041ed4
sub_08041ed4:
	push	{ r4, r5, lr }
	ldr		r0, _08041ef8
	ldr		r1, _08041efc
	add		r5, r0, r1
	ldrh	r4, [r5, #0x0]
	cmp		r4, #0x0
	beq		_08041ef0
	cmp		r4, #0x1
	bne		_08041eec
	mov		r0, #0x4
	bl		sub_0804bdb0
_08041eec:
	sub		r4, #0x1
	strh	r4, [r5, #0x0]
_08041ef0:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x41EF6, 0x2

_08041ef8:	.4byte RunGameLogic_CallBack
_08041efc:	.4byte 0x00000C82

.incbin "base.gba", 0x41F00, 0x14
	mov		r1, #0x0
	strh	r1, [r0, #0x10]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	strh	r1, [r0, #0x24]
	ldrh	r2, [r0, #0x34]
	mov		r1, #0x1
	orr		r1, r2
	strh	r1, [r0, #0x34]
	ldr		r2, [r0, #0x54]
	mov		r3, #0x20
	ldrsh	r1, [r2, r3]
	strh	r1, [r0, #0x20]
	mov		r3, #0x22
	ldrsh	r1, [r2, r3]
	strh	r1, [r0, #0x22]
	bx		lr

.incbin "base.gba", 0x41F36, 0x9A
	thumb_func_end sub_08041ed4

	thumb_func_start sub_08041fd0
sub_08041fd0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	ldr		r4, [r6, #0x54]
	ldr		r7, _0804207c
	mov		r0, #0x24
	add		r0, r0, r7
	mov		r8, r0
	add		r0, r4, #0x0
	add		r0, #0xac
	mov		r5, #0x0
	strh	r5, [r0, #0x0]
	add		r2, r4, #0x0
	add		r2, #0x58
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x8
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r0, [r4, #0x48]
	add		r1, r3, #0x0
	and		r0, r1
	mov		r1, #0xd2
	cmp		r0, #0x0
	beq		_0804200c
	mov		r0, #0xba
	lsl		r0, r0, #0x1
	add		r1, r0, #0x0
_0804200c:
	add		r0, r4, #0x0
	add		r0, #0x6a
	strh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x2
	bl		sub_08037358
	add		r1, r4, #0x0
	add		r1, #0x66
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x0
	beq		_08042038
	strh	r5, [r1, #0x0]
	ldr		r3, _08042080
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08042038
	mov		r0, #0x8
	bl		sub_0804bdb0
_08042038:
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08042054
	add		r2, r4, #0x0
	add		r2, #0xb2
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x6
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
_08042054:
	ldr		r0, _0804207c
	ldr		r1, _08042080
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08042066
	mov		r0, #0x10
	bl		sub_0804bc78
_08042066:
	ldr		r0, _08042084
	add		r0, r8
	add		r1, r6, #0x0
	bl		sub_080491c0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4207A, 0x2

_0804207c:	.4byte RunGameLogic_CallBack
_08042080:	.4byte 0x00000838
_08042084:	.4byte 0x0000070C
	thumb_func_end sub_08041fd0

	thumb_func_start sub_08042088
sub_08042088:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r8, r0
	ldr		r4, _080420fc
	mov		r0, #0x24
	add		r0, r0, r4
	mov		r9, r0
	mov		r1, r8
	ldr		r6, [r1, #0x54]
	mov		r5, #0x0
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_080373dc
	add		r1, r6, #0x0
	add		r1, #0x66
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r1, _08042100
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r6, r0
	bne		_080420c8
	mov		r0, #0x81
	bl		sub_0807073c
	mov		r0, #0x8
	bl		sub_0804bc78
_080420c8:
	mov		r7, #0x0
	ldr		r1, _08042104
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	cmp		r5, r0
	bge		_08042160
_080420d4:
	lsl		r1, r7, #0x18
	lsr		r1, r1, #0x18
	mov		r0, r9
	bl		sub_08044894
	add		r4, r0, #0x0
	cmp		r6, r4
	beq		_08042154
	mov		r1, #0xbd
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrh	r5, [r0, #0x0]
	cmp		r5, #0x0
	blt		_08042112
	cmp		r5, #0x2
	ble		_0804210c
	ldr		r0, _08042108
	cmp		r5, r0
	beq		_08042110
	b		_08042112

_080420fc:	.4byte RunGameLogic_CallBack
_08042100:	.4byte 0x00000838
_08042104:	.4byte 0x00000815
_08042108:	.4byte 0x0000100E

_0804210c:
	mov		r5, #0x0
	b		_08042154
_08042110:
	ldr		r5, _08042128
_08042112:
	ldr		r0, _0804212c
	add		r0, r9
	ldr		r0, [r0, #0x0]
	cmp		r6, r0
	bne		_08042134
	add		r1, r5, #0x0
	ldr		r0, _08042130
	bl		sub_08048af8
	b		_08042140

.incbin "base.gba", 0x42126, 0x2

_08042128:	.4byte 0x00001009
_0804212c:	.4byte 0x00000814
_08042130:	.4byte 0x0000100B

_08042134:
	cmp		r4, r0
	bne		_08042140
	add		r0, r5, #0x0
	mov		r1, #0x2
	bl		sub_08048af8
_08042140:
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_080373dc
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_080373dc
	cmp		r5, #0x0
	bne		_08042176
_08042154:
	add		r7, #0x1
	ldr		r0, _080421a4
	add		r0, r9
	ldrb	r0, [r0, #0x0]
	cmp		r7, r0
	blt		_080420d4
_08042160:
	cmp		r5, #0x0
	bne		_08042176
	ldr		r0, _080421a8
	add		r0, r9
	ldr		r0, [r0, #0x0]
	cmp		r6, r0
	bne		_08042176
	ldr		r0, _080421ac
	mov		r1, #0x0
	bl		sub_08048af8
_08042176:
	mov		r0, r9
	mov		r1, #0x0
	bl		sub_08044894
	add		r4, r0, #0x0
	cmp		r6, r4
	beq		_080421bc
	mov		r0, r8
	str		r4, [r0, #0x54]
	ldrh	r1, [r0, #0x34]
	ldr		r0, _080421b0
	and		r0, r1
	mov		r2, #0x0
	ldr		r1, _080421b4
	and		r0, r1
	mov		r1, r8
	strh	r0, [r1, #0x34]
	mov		r0, r8
	add		r0, #0x70
	strh	r2, [r0, #0x0]
	ldr		r0, _080421b8
	str		r0, [r1, #0x14]
	b		_080421c6

_080421a4:	.4byte 0x000007F1
_080421a8:	.4byte 0x00000814
_080421ac:	.4byte 0x0000100B
_080421b0:	.4byte 0x0000FFFD
_080421b4:	.4byte 0x0000FFFE
_080421b8:	.4byte sub_08042260

_080421bc:
	ldr		r0, _080421d4
	add		r0, r9
	mov		r1, r8
	bl		sub_080491c0
_080421c6:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x421D2, 0x2

_080421d4:	.4byte 0x0000070C
	thumb_func_end sub_08042088

	thumb_func_start sub_080421d8
sub_080421d8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r3, r0, #0x0
	ldr		r6, [r3, #0x54]
	ldr		r0, [r6, #0x0]
	mov		r12, r0
	ldr		r1, _08042258
	mov		r8, r1
	mov		r7, #0x26
	ldrsh	r2, [r3, r7]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_080421f8
	add		r0, #0x3f
_080421f8:
	asr		r5, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r5
	ldr		r1, _0804225c
	mov		r9, r1
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r1, [r0, #0x0]
	add		r4, r3, #0x0
	add		r4, #0x74
	mov		r7, #0x0
	ldrsh	r0, [r4, r7]
	mul		r1, r0
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	cmp		r0, #0x0
	bge		_08042220
	add		r0, #0xf
_08042220:
	asr		r0, r0, #0x4
	add		r0, r12
	str		r0, [r3, #0x0]
	ldr		r6, [r6, #0x4]
	add		r0, r5, #0x0
	mov		r1, r9
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r1, [r0, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	mul		r1, r0
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	cmp		r0, #0x0
	bge		_08042244
	add		r0, #0xf
_08042244:
	asr		r0, r0, #0x4
	add		r0, r6, r0
	str		r0, [r3, #0x4]
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x42256, 0x2

_08042258:	.4byte 0x08101068
_0804225c:	.4byte 0x000003FF
	thumb_func_end sub_080421d8

	thumb_func_start sub_08042260
sub_08042260:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	ldr		r1, _08042290
	mov		r0, #0x24
	add		r0, r0, r1
	mov		r8, r0
	ldr		r7, [r4, #0x54]
	add		r6, r4, #0x0
	add		r0, r6, #0x0
	add		r0, #0x70
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	add		r2, r1, #0x0
	cmp		r0, #0x7
	bls		_08042286
	b		_08042602
_08042286:
	lsl		r0, r0, #0x2
	ldr		r1, _08042294
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08042290:	.4byte RunGameLogic_CallBack
_08042294:	.4byte 0x08042298
_08042298:	.4byte 0x080422b8

.incbin "base.gba", 0x4229C, 0x1C
	thumb_func_end sub_08042260


.incbin "base.gba", 0x422B8, 0x34A

_08042602:

.incbin "base.gba", 0x42602, 0x1E
	thumb_func_start sub_08042620
sub_08042620:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r0, _08042658
	mov		r1, #0xe6
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08049164
	add		r4, r0, #0x0
	bl		sub_0803d1c8
	str		r5, [r4, #0x54]
	ldrh	r1, [r4, #0x34]
	ldr		r0, _0804265c
	and		r0, r1
	mov		r2, #0x0
	ldr		r1, _08042660
	and		r0, r1
	strh	r0, [r4, #0x34]
	add		r0, r4, #0x0
	add		r0, #0x70
	strh	r2, [r0, #0x0]
	ldr		r0, _08042664
	str		r0, [r4, #0x14]
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_08042658:	.4byte RunGameLogic_CallBack
_0804265c:	.4byte 0x0000FFFD
_08042660:	.4byte 0x0000FFFE
_08042664:	.4byte 0x08042261
	thumb_func_end sub_08042620

	thumb_func_start sub_08042668
sub_08042668:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r0, #0xdc
	lsl		r0, r0, #0x3
	add		r5, r4, r0
	ldr		r1, _08042708
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	add		r0, r5, #0x0
	bl		sub_08027188
	ldr		r0, _0804270c
	add		r1, r4, r0
	mov		r6, #0x0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r0, _08042710
	add		r1, r4, r0
	mov		r2, #0x0
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r0, _08042714
	add		r1, r4, r0
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	ldr		r1, _08042718
	add		r0, r4, r1
	strb	r2, [r0, #0x0]
	ldr		r1, _0804271c
	add		r0, r4, r1
	str		r6, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_080447f4
	bl		sub_0800ec10
	ldr		r0, _08042720
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x80
	orr		r0, r1
	mov		r1, #0xbf
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r1, _08042724
	add		r0, r4, r1
	add		r1, r5, #0x0
	mov		r2, #0x10
	bl		sub_08049108
	ldr		r1, _08042728
	add		r0, r4, r1
	add		r1, r5, #0x0
	mov		r2, #0x10
	bl		sub_08049108
	ldr		r1, _0804272c
	add		r0, r4, r1
	add		r1, r5, #0x0
	bl		sub_08054e58
	ldr		r1, _08042730
	add		r0, r4, r1
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_08049108
	mov		r0, #0xc7
	lsl		r0, r0, #0x4
	add		r1, r4, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r1, _08042734
	add		r4, r4, r1
	str		r6, [r4, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08042708:	.4byte 0x0202A400
_0804270c:	.4byte 0x000007D7
_08042710:	.4byte 0x000007DA
_08042714:	.4byte 0x000007DC
_08042718:	.4byte 0x000007E9
_0804271c:	.4byte 0x00000BE4
_08042720:	.4byte 0x000007D4
_08042724:	.4byte 0x0000070C
_08042728:	.4byte 0x0000071C
_0804272c:	.4byte 0x0000072C
_08042730:	.4byte 0x000006FC
_08042734:	.4byte 0x00000C88
	thumb_func_end sub_08042668

	thumb_func_start sub_08042738
sub_08042738:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r5, r0, #0x0
	bl		sub_08029f34
	ldr		r1, _0804278c
	ldr		r2, _08042790
	ldr		r3, _08042794
	bl		sub_08029ee4
	ldr		r4, _08042798
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x60
	add		r0, r4, #0x0
	mov		r2, #0x28
	bl		_CallHardwareSetCpuFast
	add		r0, r5, #0x0
	bl		sub_080485cc
	add		r0, r5, #0x0
	bl		sub_08043048
	ldr		r1, [r5, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080427bc
	mov		r0, #0x2
	and		r1, r0
	cmp		r1, #0x0
	beq		_080427a0
	ldr		r1, _0804279c
	b		_080427be

.incbin "base.gba", 0x4278A, 0x2

_0804278c:	.4byte 0x08082868
_08042790:	.4byte 0x06012000
_08042794:	.4byte 0x80001000
_08042798:	.4byte 0x080827a8
_0804279c:	.4byte sub_08044afc

_080427a0:
	add		r0, r5, #0x0
	bl		sub_0802c72c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	ldr		r1, _080427b4
	cmp		r0, #0xe
	bne		_080427be
	ldr		r1, _080427b8
	b		_080427be

_080427b4:	.4byte 0x08044a61
_080427b8:	.4byte 0x08044aa9

_080427bc:
	ldr		r1, _08042824
_080427be:
	mov		r2, #0xfa
	lsl		r2, r2, #0x3
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	bl		_DrawFrameRunAudio
	add		r0, r5, #0x0
	bl		sub_0804cca4
	bl		_DrawFrameRunAudio
	add		r0, r5, #0x0
	bl		sub_08045aec
	ldr		r3, _08042828
	add		r2, r5, r3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xf0
	and		r0, r1
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r0, _0804282c
	add		r0, r5, r0
	str		r0, [sp, #0x10]
	ldr		r1, _08042830
	mov		r2, #0x0
	add		r0, r1, #0x0
	add		r0, #0x1c
_080427f8:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	cmp		r0, r1
	bge		_080427f8
	ldr		r1, _08042834
	add		r4, r5, r1
	ldrh	r2, [r4, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	bne		_08042816
	b		_08042930
_08042816:
	cmp		r1, r0
	bgt		_08042838
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_0804284e
	b		_08042b18

_08042824:	.4byte sub_080449d8
_08042828:	.4byte 0x000007D4
_0804282c:	.4byte 0x00000C88
_08042830:	.4byte 0x03005FE0
_08042834:	.4byte 0x000007DA

_08042838:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	bne		_08042842
	b		_08042aac
_08042842:
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r1, r0
	bne		_0804284c
	b		_08042a74
_0804284c:
	b		_08042b18
_0804284e:
	add		r0, r5, #0x0
	bl		sub_080449a4
	ldr		r2, [sp, #0x10]
	ldr		r0, [r2, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x18
	cmp		r0, #0x0
	bge		_080428a4
	mov		r1, #0x6
	ldr		r3, _08042884
	add		r0, r5, r3
	str		r1, [r0, #0x0]
	ldr		r0, [sp, #0x10]
	ldr		r1, [r0, #0x0]
	and		r2, r1
	cmp		r2, #0x0
	beq		_0804288c
	mov		r0, #0x10
	and		r1, r0
	cmp		r1, #0x0
	beq		_0804288c
	ldr		r2, _08042888
	add		r1, r5, r2
	mov		r0, #0x85
	lsl		r0, r0, #0x8
	b		_08042894

_08042884:	.4byte 0x00000BE4
_08042888:	.4byte 0x000007E6

_0804288c:
	ldr		r3, _080428a0
	add		r1, r5, r3
	mov		r0, #0x83
	lsl		r0, r0, #0x8
_08042894:
	strh	r0, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_08048d30
	b		_08042916

.incbin "base.gba", 0x4289E, 0x2

_080428a0:	.4byte 0x000007E6

_080428a4:
	ldr		r1, _080428c0
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_080428c8
	ldr		r2, _080428c4
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	b		_08042916

.incbin "base.gba", 0x428BE, 0x2

_080428c0:	.4byte 0x000007DA
_080428c4:	.4byte 0x00000BE4

_080428c8:
	mov		r1, #0x6
	ldr		r3, _08042900
	add		r0, r5, r3
	str		r1, [r0, #0x0]
	ldr		r0, _08042904
	ldrh	r0, [r0, #0xe]
	mov		r1, #0x3
	cmp		r0, #0x0
	beq		_080428dc
	mov		r1, #0x5
_080428dc:
	lsl		r0, r1, #0x8
	ldr		r2, _08042908
	add		r1, r2, #0x0
	add		r0, r0, r1
	ldr		r3, _0804290c
	add		r1, r5, r3
	strh	r0, [r1, #0x0]
	ldrh	r1, [r4, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08042910
	add		r0, r5, #0x0
	bl		sub_080483a8
	b		_08042916

.incbin "base.gba", 0x428FE, 0x2

_08042900:	.4byte 0x00000BE4
_08042904:	.4byte 0x03002FE0
_08042908:	.4byte 0xFFFF8000
_0804290c:	.4byte 0x000007E6

_08042910:
	add		r0, r5, #0x0
	bl		sub_08048d90
_08042916:
	ldr		r0, _08042928
	add		r1, r5, r0
	mov		r2, #0x0
	mov		r0, #0x8
	strb	r0, [r1, #0x0]
	ldr		r1, _0804292c
	add		r0, r5, r1
	strh	r2, [r0, #0x0]
	b		_08042b18

_08042928:	.4byte 0x000007F1
_0804292c:	.4byte 0x00000BEE

_08042930:
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r2
	cmp		r0, #0x0
	beq		_08042942
	add		r0, r5, #0x0
	bl		sub_080483a8
	b		_0804294e
_08042942:
	add		r0, r5, #0x0
	bl		sub_08048d30
	add		r0, r5, #0x0
	bl		sub_08048d90
_0804294e:
	mov		r0, #0x6
	ldr		r3, _08042a3c
	add		r2, r5, r3
	str		r0, [r2, #0x0]
	ldr		r0, _08042a40
	add		r1, r5, r0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r1, _08042a44
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	mov		r10, r2
	cmp		r0, #0x0
	bne		_08042a06
	ldr		r2, [sp, #0x10]
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	blt		_08042a06
	mov		r3, #0x0
	mov		r9, r3
	mov		r6, #0x0
	mov		r0, #0xbf
	lsl		r0, r0, #0x4
	add		r7, r5, r0
_08042984:
	lsl		r0, r6, #0xc
	ldr		r1, _08042a48
	add		r4, r0, r1
	add		r0, r4, #0x0
	add		r0, #0x8
	ldrh	r2, [r0, #0x2]
	ldrb	r3, [r0, #0x9]
	ldrb	r1, [r4, #0x8]
	mov		r8, r1
	cmp		r6, #0x0
	bne		_080429aa
	mov		r1, #0x0
	ldr		r0, _08042a4c
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080429a6
	mov		r1, #0x1
_080429a6:
	cmp		r1, #0x0
	beq		_080429f0
_080429aa:
	cmp		r6, #0x1
	bne		_080429be
	mov		r1, #0x0
	ldr		r0, _08042a4c
	ldrh	r0, [r0, #0x2]
	cmp		r0, #0x0
	bne		_080429ba
	mov		r1, #0x1
_080429ba:
	cmp		r1, #0x0
	beq		_080429f0
_080429be:
	cmp		r2, #0x0
	beq		_080429f0
	ldr		r2, _08042a50
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, r3
	bne		_080429f0
	mov		r3, #0x1
	mov		r9, r3
	ldr		r0, _08042a40
	add		r1, r5, r0
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	mov		r1, r8
	mov		r2, #0x1
	bl		sub_08044818
	add		r0, r7, #0x0
	add		r7, #0x18
	add		r1, r4, #0x0
	add		r1, #0x28
	bl		sub_0802a300
_080429f0:
	add		r6, #0x1
	cmp		r6, #0x1
	ble		_08042984
	mov		r1, r9
	cmp		r1, #0x0
	beq		_08042a06
	ldr		r2, _08042a44
	add		r1, r5, r2
	mov		r0, #0x88
	lsl		r0, r0, #0x6
	strh	r0, [r1, #0x0]
_08042a06:
	ldr		r3, _08042a54
	add		r0, r5, r3
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r1, [sp, #0x10]
	ldr		r0, [r1, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x18
	cmp		r0, #0x0
	bge		_08042a6c
	mov		r0, #0x6
	mov		r3, r10
	str		r0, [r3, #0x0]
	ldr		r1, [r1, #0x0]
	and		r2, r1
	cmp		r2, #0x0
	beq		_08042a5c
	mov		r0, #0x10
	and		r1, r0
	cmp		r1, #0x0
	beq		_08042a5c
	ldr		r0, _08042a58
	add		r1, r5, r0
	mov		r0, #0x85
	lsl		r0, r0, #0x8
	strh	r0, [r1, #0x0]
	b		_08042b18

_08042a3c:	.4byte 0x00000BE4
_08042a40:	.4byte 0x000007F1
_08042a44:	.4byte 0x000007DA
_08042a48:	.4byte 0x02020400
_08042a4c:	.4byte 0x03002FE0
_08042a50:	.4byte 0x000007DD
_08042a54:	.4byte 0x00000BEE
_08042a58:	.4byte 0x000007E6

_08042a5c:
	ldr		r2, _08042a68
	add		r1, r5, r2
	mov		r0, #0x83
	lsl		r0, r0, #0x8
	strh	r0, [r1, #0x0]
	b		_08042b18

_08042a68:	.4byte 0x000007E6

_08042a6c:
	add		r0, r5, #0x0
	bl		sub_080449a4
	b		_08042b18
_08042a74:
	mov		r1, #0x6
	ldr		r3, _08042a9c
	add		r0, r5, r3
	str		r1, [r0, #0x0]
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	ldrb	r1, [r0, #0x0]
	ldr		r2, _08042aa0
	add		r0, r5, r2
	mov		r2, #0x0
	strb	r1, [r0, #0x0]
	add		r3, #0xa
	add		r0, r5, r3
	strh	r2, [r0, #0x0]
	ldr		r0, _08042aa4
	add		r1, r5, r0
	ldr		r0, _08042aa8
	strh	r0, [r1, #0x0]
	b		_08042b18

_08042a9c:	.4byte 0x00000BE4
_08042aa0:	.4byte 0x000007F1
_08042aa4:	.4byte 0x000007E6
_08042aa8:	.4byte 0x0000FFFF

_08042aac:
	mov		r1, #0x6
	ldr		r2, _08042b64
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	mov		r3, #0xfe
	lsl		r3, r3, #0x3
	add		r0, r5, r3
	ldrb	r0, [r0, #0x0]
	ldr		r1, _08042b68
	add		r6, r5, r1
	mov		r1, #0x0
	strb	r0, [r6, #0x0]
	add		r2, #0xa
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_080449a4
	ldr		r2, _08042b6c
	ldrh	r0, [r2, #0x6]
	mov		r1, #0x3
	cmp		r0, #0x0
	beq		_08042adc
	mov		r1, #0x5
_08042adc:
	lsl		r0, r1, #0x8
	ldr		r3, _08042b70
	add		r1, r3, #0x0
	add		r0, r0, r1
	ldr		r3, _08042b74
	add		r1, r5, r3
	strh	r0, [r1, #0x0]
	mov		r1, #0x0
	ldrh	r0, [r2, #0xa]
	cmp		r0, #0x0
	bne		_08042af4
	mov		r1, #0x1
_08042af4:
	cmp		r1, #0x0
	beq		_08042b18
	mov		r4, #0x0
	ldrb	r6, [r6, #0x0]
	cmp		r4, r6
	bge		_08042b18
	ldr		r0, _08042b78
	add		r6, r5, r0
_08042b04:
	ldmia	r6!, { r0 }
	ldr		r1, _08042b7c
	bl		sub_080373dc
	add		r4, #0x1
	ldr		r1, _08042b68
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	blt		_08042b04
_08042b18:
	ldr		r2, _08042b80
	add		r0, r5, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_08042b2a
	b		_08042d88
_08042b2a:
	bl		sub_08002c18
	mov		r1, #0x3
	and		r1, r0
	cmp		r1, #0x0
	beq		_08042b44
	ldr		r3, _08042b80
	add		r0, r5, r3
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08042c24
_08042b44:
	mov		r7, #0x7
	ldr		r1, _08042b84
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08042b88
	ldr		r2, _08042b78
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	add		r0, #0x4c
	ldrb	r0, [r0, #0x0]
	mov		r8, r7
	mov		r3, r8
	and		r3, r0
	mov		r8, r3
	b		_08042b8c

_08042b64:	.4byte 0x00000BE4
_08042b68:	.4byte 0x000007F1
_08042b6c:	.4byte 0x03002FE0
_08042b70:	.4byte 0xFFFF8000
_08042b74:	.4byte 0x000007E6
_08042b78:	.4byte 0x000007F4
_08042b7c:	.4byte 0x00001008
_08042b80:	.4byte 0x000007DA
_08042b84:	.4byte 0x00000814

_08042b88:
	mov		r0, #0x0
	mov		r8, r0
_08042b8c:
	mov		r6, #0x0
	ldr		r1, _08042c18
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	cmp		r6, r0
	bge		_08042c64
_08042b98:
	lsl		r2, r6, #0x2
	mov		r9, r2
	add		r3, r6, #0x1
	mov		r10, r3
	cmp		r6, #0x0
	ble		_08042bd6
	ldr		r0, _08042c1c
	ldr		r1, _08042c20
	add		r3, r5, r1
	mov		r2, #0x7
	mov		r12, r2
	mov		r2, r8
	lsl		r1, r2, #0x5
	add		r4, r6, #0x0
	lsl		r2, r7, #0x2
	add		r1, r1, r0
	add		r2, r2, r1
_08042bba:
	ldr		r0, [r3, #0x0]
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, r12
	and		r0, r1
	ldr		r1, [r2, #0x0]
	cmp		r0, r1
	bne		_08042bce
	sub		r2, #0x4
	sub		r7, #0x1
_08042bce:
	add		r3, #0x4
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08042bba
_08042bd6:
	mov		r3, #0xfe
	lsl		r3, r3, #0x3
	add		r0, r5, r3
	ldrb	r0, [r0, #0x0]
	cmp		r6, r0
	blt		_08042bfa
	ldr		r2, _08042c1c
	lsl		r1, r7, #0x2
	mov		r3, r8
	lsl		r0, r3, #0x5
	add		r1, r1, r0
	add		r1, r1, r2
	sub		r7, #0x1
	ldr		r1, [r1, #0x0]
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_08044818
_08042bfa:
	ldr		r1, _08042c20
	add		r0, r5, r1
	add		r0, r9
	ldr		r0, [r0, #0x0]
	add		r0, #0xc4
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	mov		r6, r10
	ldr		r2, _08042c18
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	cmp		r6, r0
	blt		_08042b98
	b		_08042c64

.incbin "base.gba", 0x42C16, 0x2

_08042c18:	.4byte 0x000007F1
_08042c1c:	.4byte 0x08108840
_08042c20:	.4byte 0x000007F4

_08042c24:
	mov		r4, #0x0
	ldr		r3, _08042c2c
	add		r0, r5, r3
	b		_08042c5e

_08042c2c:	.4byte 0x000007F1

_08042c30:
	lsl		r0, r4, #0x2
	ldr		r2, _08042c90
	add		r1, r5, r2
	add		r1, r1, r0
	ldr		r1, [r1, #0x0]
	mov		r3, #0xfe
	lsl		r3, r3, #0x3
	add		r0, r5, r3
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	blt		_08042c58
	add		r0, r1, #0x0
	add		r0, #0x4c
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x7
	and		r1, r0
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_08044818
_08042c58:
	add		r4, #0x1
	ldr		r1, _08042c94
	add		r0, r5, r1
_08042c5e:
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	blt		_08042c30
_08042c64:
	ldr		r2, _08042c98
	add		r0, r5, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x90
	and		r0, r1
	cmp		r0, #0x0
	bne		_08042c74
	b		_08042d6e
_08042c74:
	ldr		r3, _08042c9c
	add		r0, r5, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08042ca0
	ldr		r1, _08042c90
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	add		r0, #0x4c
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x7
	and		r1, r0
	b		_08042ca2

.incbin "base.gba", 0x42C8E, 0x2

_08042c90:	.4byte 0x000007F4
_08042c94:	.4byte 0x000007F1
_08042c98:	.4byte 0x000007DA
_08042c9c:	.4byte 0x00000814

_08042ca0:
	mov		r1, #0x0
_08042ca2:
	lsl		r0, r1, #0x5
	ldr		r1, _08042cb4
	add		r0, r0, r1
	mov		r9, r0
	mov		r7, #0x7
	mov		r4, #0x0
	ldr		r2, _08042cb8
	add		r0, r5, r2
	b		_08042cec

_08042cb4:	.4byte 0x08108840
_08042cb8:	.4byte 0x000007F1

_08042cbc:
	lsl		r1, r4, #0x2
	ldr		r3, _08042d08
	add		r0, r5, r3
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	ldr		r0, [r2, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08042ce6
	lsl		r0, r7, #0x1
	add		r1, r2, #0x0
	add		r1, #0xba
	strh	r0, [r1, #0x0]
	lsl		r1, r7, #0x18
	lsr		r1, r1, #0x18
	add		r0, r5, #0x0
	bl		sub_080448a8
	sub		r7, #0x1
_08042ce6:
	add		r4, #0x1
	ldr		r1, _08042d0c
	add		r0, r5, r1
_08042cec:
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	blt		_08042cbc
	mov		r4, #0x7
	ldr		r2, _08042d0c
	add		r2, r2, r5
	mov		r8, r2
_08042cfa:
	lsl		r0, r4, #0x2
	add		r0, r9
	ldr		r6, [r0, #0x0]
	mov		r3, #0x0
	sub		r4, #0x1
	b		_08042d56

.incbin "base.gba", 0x42D06, 0x2

_08042d08:	.4byte 0x000007F4
_08042d0c:	.4byte 0x000007F1

_08042d10:
	lsl		r1, r3, #0x2
	ldr		r2, _08042d50
	add		r0, r5, r2
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	cmp		r0, r6
	bne		_08042d54
	ldr		r0, [r2, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08042d5e
	lsl		r0, r7, #0x1
	add		r1, r2, #0x0
	add		r1, #0xba
	strh	r0, [r1, #0x0]
	ldrh	r1, [r1, #0x0]
	lsr		r1, r1, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r5, #0x0
	bl		sub_080448a8
	sub		r7, #0x1
	b		_08042d5e

.incbin "base.gba", 0x42D4E, 0x2

_08042d50:	.4byte 0x000007F4

_08042d54:
	add		r3, #0x1
_08042d56:
	mov		r0, r8
	ldrb	r0, [r0, #0x0]
	cmp		r3, r0
	blt		_08042d10
_08042d5e:
	cmp		r4, #0x0
	bge		_08042cfa
	ldr		r1, _08042d80
	add		r2, r5, r1
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08042d84
	and		r0, r1
	strh	r0, [r2, #0x0]
_08042d6e:
	bl		sub_08002c18
	add		r1, r0, #0x0
	mov		r0, #0x3
	and		r0, r1
	bl		sub_0803c7d4
	b		_08042dd6

.incbin "base.gba", 0x42D7E, 0x2

_08042d80:	.4byte 0x000007DA
_08042d84:	.4byte 0x0000FF7F

_08042d88:
	mov		r6, #0x0
	ldr		r2, _08042de4
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	cmp		r6, r0
	bge		_08042dd6
	mov		r7, #0x0
_08042d96:
	lsl		r1, r6, #0x2
	ldr		r3, _08042de8
	add		r0, r5, r3
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	lsl		r0, r6, #0x1
	add		r4, r2, #0x0
	add		r4, #0xba
	strh	r0, [r4, #0x0]
	ldrh	r1, [r4, #0x0]
	lsr		r1, r1, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r5, #0x0
	bl		sub_080448a8
	ldr		r1, _08042dec
	add		r0, r5, r1
	ldrh	r0, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x6
	add		r1, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08042dca
	strh	r7, [r4, #0x0]
_08042dca:
	add		r6, #0x1
	ldr		r3, _08042de4
	add		r0, r5, r3
	ldrb	r0, [r0, #0x0]
	cmp		r6, r0
	blt		_08042d96
_08042dd6:
	add		r7, r5, #0x0
	mov		r6, #0x0
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	b		_08042ea0

.incbin "base.gba", 0x42DE2, 0x2

_08042de4:	.4byte 0x000007F1
_08042de8:	.4byte 0x000007F4
_08042dec:	.4byte 0x000007DA

_08042df0:
	lsl		r1, r6, #0x18
	lsr		r1, r1, #0x18
	add		r0, r5, #0x0
	bl		sub_08044894
	add		r4, r0, #0x0
	add		r0, #0xba
	ldrh	r1, [r0, #0x0]
	lsr		r1, r1, #0x1
	add		r0, sp, #0xc
	str		r0, [sp, #0x0]
	add		r0, r7, #0x0
	add		r2, sp, #0x4
	add		r3, sp, #0x8
	bl		sub_0802c5a0
	ldr		r1, [sp, #0x4]
	ldr		r2, [sp, #0x8]
	ldr		r0, [sp, #0xC]
	str		r0, [sp, #0x0]
	add		r0, r4, #0x0
	mov		r3, #0x0
	bl		sub_08037120
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0803595c
	ldr		r2, [sp, #0x10]
	ldr		r1, [r2, #0x0]
	cmp		r1, #0x0
	bge		_08042e46
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	and		r1, r0
	lsr		r1, r1, #0x8
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	mov		r3, #0xbc
	lsl		r3, r3, #0x1
	add		r1, r4, r3
	strh	r0, [r1, #0x0]
	b		_08042e98
_08042e46:
	ldr		r1, _08042ef0
	add		r0, r5, r1
	ldrh	r0, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	add		r1, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08042e72
	mov		r1, #0x0
	ldr		r0, _08042ef4
	ldrh	r0, [r0, #0xc]
	cmp		r0, #0x0
	bne		_08042e64
	mov		r1, #0x1
_08042e64:
	cmp		r1, #0x0
	beq		_08042e72
	mov		r3, #0xbc
	lsl		r3, r3, #0x1
	add		r1, r4, r3
	mov		r0, #0xa
	strh	r0, [r1, #0x0]
_08042e72:
	ldr		r1, _08042ef0
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08042e98
	mov		r1, #0x0
	ldr		r0, _08042ef4
	ldrh	r0, [r0, #0x12]
	cmp		r0, #0x0
	bne		_08042e8c
	mov		r1, #0x1
_08042e8c:
	cmp		r1, #0x0
	bne		_08042e98
	mov		r2, #0xbc
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
_08042e98:
	add		r6, #0x1
	mov		r3, #0xfe
	lsl		r3, r3, #0x3
	add		r0, r5, r3
_08042ea0:
	ldrb	r0, [r0, #0x0]
	cmp		r6, r0
	blt		_08042df0
	ldr		r0, _08042ef8
	add		r4, r5, r0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08042eb8
	ldr		r1, _08042efc
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x0]
_08042eb8:
	add		r0, r5, #0x0
	bl		sub_08048b28
	ldr		r2, _08042ef0
	add		r0, r5, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	cmp		r6, #0x0
	beq		_08042f04
	ldr		r1, _08042f00
	mov		r3, #0xbf
	lsl		r3, r3, #0x4
	add		r0, r5, r3
	bl		sub_0802a300
	mov		r1, #0xc2
	lsl		r1, r1, #0x4
	add		r0, r5, r1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0802a2e0
	b		_08042f2e

.incbin "base.gba", 0x42EEE, 0x2

_08042ef0:	.4byte 0x000007DA
_08042ef4:	.4byte 0x03002FE0
_08042ef8:	.4byte 0x00000814
_08042efc:	.4byte 0x000007F4
_08042f00:	.4byte 0x02024428

_08042f04:
	ldr		r1, _08042f88
	add		r3, r1, #0x0
	add		r3, #0x8
	ldr		r0, [r4, #0x0]
	add		r0, #0x4c
	ldrb	r2, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r2
	strb	r0, [r1, #0x8]
	ldr		r2, _08042f8c
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	strb	r0, [r3, #0x9]
	strh	r6, [r3, #0x2]
	mov		r3, #0xc2
	lsl		r3, r3, #0x4
	add		r0, r5, r3
	add		r1, #0x28
	ldr		r2, _08042f90
	bl		sub_0802a2e0
_08042f2e:
	mov		r0, #0x0
	bl		sub_08037c64
	ldr		r0, [sp, #0x10]
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	bge		_08042fa4
	mov		r0, #0x4
	and		r1, r0
	cmp		r1, #0x0
	beq		_08042fdc
	mov		r4, #0x0
	ldr		r1, _08042f94
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	bge		_08042fdc
_08042f50:
	lsl		r1, r4, #0x2
	ldr		r2, _08042f98
	add		r0, r5, r2
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	ldr		r3, _08042f9c
	add		r0, r5, r3
	ldr		r0, [r0, #0x0]
	cmp		r2, r0
	beq		_08042f72
	add		r0, r2, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08042f7a
_08042f72:
	add		r0, r2, #0x0
	ldr		r1, _08042fa0
	bl		sub_080373dc
_08042f7a:
	add		r4, #0x1
	ldr		r1, _08042f94
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	blt		_08042f50
	b		_08042fdc

_08042f88:	.4byte 0x02024400
_08042f8c:	.4byte 0x000007DD
_08042f90:	.4byte 0x00000FD6
_08042f94:	.4byte 0x000007F1
_08042f98:	.4byte 0x000007F4
_08042f9c:	.4byte 0x00000814
_08042fa0:	.4byte 0x00001008

_08042fa4:
	ldr		r2, _08043030
	add		r0, r5, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x4
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	cmp		r0, r1
	bne		_08042fdc
	mov		r4, #0x0
	ldr		r3, _08043034
	add		r0, r5, r3
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	bge		_08042fdc
	ldr		r0, _08043038
	add		r6, r5, r0
_08042fc8:
	ldmia	r6!, { r0 }
	ldr		r1, _0804303c
	bl		sub_080373dc
	add		r4, #0x1
	ldr		r1, _08043034
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	blt		_08042fc8
_08042fdc:
	add		r0, r5, #0x0
	bl		sub_080459f0
	ldr		r2, _08043040
	add		r0, r5, r2
	mov		r1, #0x0
	mov		r2, #0x0
	strh	r2, [r0, #0x0]
	mov		r3, #0xc6
	lsl		r3, r3, #0x4
	add		r0, r5, r3
	strb	r1, [r0, #0x0]
	add		r3, #0x2
	add		r0, r5, r3
	strh	r2, [r0, #0x0]
	ldr		r2, _08043044
	add		r0, r5, r2
	strb	r1, [r0, #0x0]
	add		r3, #0x20
	add		r0, r5, r3
	strb	r1, [r0, #0x0]
	add		r2, #0x11
	add		r0, r5, r2
	strb	r1, [r0, #0x0]
	add		r3, #0x2
	add		r0, r5, r3
	strb	r1, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_0803d224
	add		r0, r5, #0x0
	bl		sub_0803ca24
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4302E, 0x2

_08043030:	.4byte 0x000007DA
_08043034:	.4byte 0x000007F1
_08043038:	.4byte 0x000007F4
_0804303c:	.4byte 0x00001008
_08043040:	.4byte 0x00000C5E
_08043044:	.4byte 0x00000C72
	thumb_func_end sub_08042738

	thumb_func_start sub_08043048
sub_08043048:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	bl		sub_08029f98
	ldr		r1, _0804308c
	add		r0, r5, r1
	ldrb	r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_0802b490
	ldr		r2, _08043090
	add		r6, r5, r2
	ldr		r1, [r6, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0x18
	cmp		r1, #0x0
	bge		_08043094
	mov		r0, #0x1
	and		r1, r0
	cmp		r1, #0x0
	beq		_08043078
	add		r0, r5, #0x0
	bl		sub_0802c554
_08043078:
	ldr		r1, [r6, #0x0]
	and		r4, r1
	cmp		r4, #0x0
	beq		_08043158
	mov		r0, #0x2
	and		r1, r0
	cmp		r1, #0x0
	beq		_08043158
	b		_08043126

.incbin "base.gba", 0x4308A, 0x2

_0804308c:	.4byte 0x000007DD
_08043090:	.4byte 0x00000C88

_08043094:
	ldr		r1, _080430b8
	add		r0, r5, r1
	ldrh	r2, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	beq		_08043158
	cmp		r1, r0
	bgt		_080430bc
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_080430ce
	b		_08043158

.incbin "base.gba", 0x430B6, 0x2

_080430b8:	.4byte 0x000007DA

_080430bc:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_0804312e
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_08043120
	b		_08043158
_080430ce:
	mov		r0, #0x10
	and		r0, r2
	cmp		r0, #0x0
	beq		_08043100
	mov		r1, #0x0
	ldr		r4, _080430fc
	ldrh	r0, [r4, #0x10]
	cmp		r0, #0x0
	bne		_080430e2
	mov		r1, #0x1
_080430e2:
	cmp		r1, #0x0
	beq		_080430ec
	add		r0, r5, #0x0
	bl		sub_0804cb10
_080430ec:
	mov		r1, #0x0
	ldrh	r0, [r4, #0x12]
	cmp		r0, #0x0
	bne		_080430f6
	mov		r1, #0x1
_080430f6:
	cmp		r1, #0x0
	beq		_08043158
	b		_08043114

_080430fc:	.4byte 0x03002FE0

_08043100:
	ldr		r2, _0804311c
	add		r0, r5, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_08043158
	add		r0, r5, #0x0
	bl		sub_0804cb10
_08043114:
	add		r0, r5, #0x0
	bl		sub_0802c554
	b		_08043158

_0804311c:	.4byte 0x000007DA

_08043120:
	add		r0, r5, #0x0
	bl		sub_0802c554
_08043126:
	add		r0, r5, #0x0
	bl		sub_0804cb10
	b		_08043158
_0804312e:
	mov		r1, #0x0
	ldr		r4, _08043174
	ldrh	r0, [r4, #0x8]
	cmp		r0, #0x0
	bne		_0804313a
	mov		r1, #0x1
_0804313a:
	cmp		r1, #0x0
	beq		_08043144
	add		r0, r5, #0x0
	bl		sub_0804cb10
_08043144:
	mov		r1, #0x0
	ldrh	r0, [r4, #0xc]
	cmp		r0, #0x0
	bne		_0804314e
	mov		r1, #0x1
_0804314e:
	cmp		r1, #0x0
	beq		_08043158
	add		r0, r5, #0x0
	bl		sub_0802c554
_08043158:
	ldr		r1, _08043178
	mov		r0, #0x48
	bl		sub_08029fcc
	ldr		r2, _0804317c
	add		r1, r5, r2
	str		r0, [r1, #0x0]
	mov		r1, #0x49
	add		r2, #0x4
	add		r0, r5, r2
	strb	r1, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08043174:	.4byte 0x03002FE0
_08043178:	.4byte sub_08044934
_0804317c:	.4byte 0x00000BCC
	thumb_func_end sub_08043048

	thumb_func_start sub_08043180
sub_08043180:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r0, _080431bc
	add		r6, r5, r0
	add		r0, r6, #0x0
	bl		sub_08029048
	ldr		r1, _080431c0
	add		r0, r5, r1
	ldr		r4, [r0, #0x0]
	cmp		r4, #0x0
	beq		_080431b0
_08043198:
	ldrh	r0, [r4, #0x34]
	mov		r1, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_080431aa
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_08029000
_080431aa:
	ldr		r4, [r4, #0x3c]
	cmp		r4, #0x0
	bne		_08043198
_080431b0:
	mov		r4, #0x0
	mov		r2, #0xfe
	lsl		r2, r2, #0x3
	add		r0, r5, r2
	b		_080431e8

.incbin "base.gba", 0x431BA, 0x2

_080431bc:	.4byte 0x0000057C
_080431c0:	.4byte 0x00000714

_080431c4:
	lsl		r1, r4, #0x2
	ldr		r2, _08043238
	add		r0, r5, r2
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	ldrh	r0, [r2, #0x34]
	mov		r1, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_080431e0
	add		r0, r6, #0x0
	add		r1, r2, #0x0
	bl		sub_08029000
_080431e0:
	add		r4, #0x1
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r5, r1
_080431e8:
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	blt		_080431c4
	ldr		r2, _0804323c
	add		r0, r5, r2
	ldr		r4, [r0, #0x0]
	cmp		r4, #0x0
	beq		_08043210
_080431f8:
	ldrh	r0, [r4, #0x34]
	mov		r1, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804320a
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_08029024
_0804320a:
	ldr		r4, [r4, #0x3c]
	cmp		r4, #0x0
	bne		_080431f8
_08043210:
	ldr		r1, _08043240
	add		r0, r5, r1
	ldr		r4, [r0, #0x8]
	cmp		r4, #0x0
	beq		_08043232
_0804321a:
	ldrh	r0, [r4, #0x34]
	mov		r1, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804322c
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_08029024
_0804322c:
	ldr		r4, [r4, #0x3c]
	cmp		r4, #0x0
	bne		_0804321a
_08043232:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08043238:	.4byte 0x000007F4
_0804323c:	.4byte 0x00000704
_08043240:	.4byte 0x000006EC
	thumb_func_end sub_08043180

	thumb_func_start sub_08043244
sub_08043244:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r4, #0x0
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0804328a
	ldr		r7, _08043338
	add		r2, r5, r7
	mov		r7, #0x80
	lsl		r7, r7, #0x8
	mov		r3, #0xbc
	lsl		r3, r3, #0x1
	add		r6, r0, #0x0
_0804326e:
	ldr		r1, [r2, #0x0]
	ldr		r0, [r1, #0x48]
	and		r0, r7
	cmp		r0, #0x0
	beq		_08043282
	add		r0, r1, r3
	ldrh	r0, [r0, #0x0]
	cmp		r0, r4
	ble		_08043282
	add		r4, r0, #0x0
_08043282:
	add		r2, #0x4
	sub		r6, #0x1
	cmp		r6, #0x0
	bne		_0804326e
_0804328a:
	mov		r6, #0x0
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	ldr		r2, _0804333c
	add		r2, r5, r2
	str		r2, [sp, #0x0]
	ldrb	r7, [r0, #0x0]
	cmp		r6, r7
	bge		_080432d0
	ldr		r1, _08043340
	mov		r9, r1
	add		r3, r0, #0x0
	ldr		r7, _08043338
	add		r2, r5, r7
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	mov		r8, r0
	mov		r1, #0xbc
	lsl		r1, r1, #0x1
	mov		r10, r1
_080432b4:
	ldr		r1, [r2, #0x0]
	ldr		r0, [r1, #0x48]
	mov		r7, r9
	and		r0, r7
	cmp		r0, r8
	bne		_080432c6
	mov		r7, r10
	add		r0, r1, r7
	strh	r4, [r0, #0x0]
_080432c6:
	add		r2, #0x4
	add		r6, #0x1
	ldrb	r0, [r3, #0x0]
	cmp		r6, r0
	blt		_080432b4
_080432d0:
	mov		r6, #0x0
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	cmp		r6, r0
	blt		_080432e0
	b		_080433f8
_080432e0:
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	mov		r10, r2
	ldr		r7, _08043344
	add		r7, r7, r5
	mov		r9, r7
	ldr		r0, _08043348
	add		r0, r0, r5
	mov		r8, r0
_080432f2:
	lsl		r0, r6, #0x2
	ldr		r2, _08043338
	add		r1, r5, r2
	add		r1, r1, r0
	ldr		r4, [r1, #0x0]
	mov		r7, #0x0
	ldr		r0, [r4, #0x48]
	mov		r1, r10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08043318
	add		r0, r4, #0x0
	add		r0, #0xec
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x1
	add		r2, #0x28
	add		r0, r5, r2
	add		r0, r0, r1
	ldrh	r7, [r0, #0x0]
_08043318:
	ldr		r1, _0804334c
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, r10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08043350
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	cmp		r4, r0
	bne		_0804336e
	mov		r7, #0xbf
	lsl		r7, r7, #0x4
	add		r0, r5, r7
	b		_08043366

.incbin "base.gba", 0x43336, 0x2

_08043338:	.4byte 0x000007F4
_0804333c:	.4byte 0x000007D4
_08043340:	.4byte 0x0000A020
_08043344:	.4byte 0x00000BD8
_08043348:	.4byte 0x00000814
_0804334c:	.4byte 0x000007DA

_08043350:
	mov		r2, #0x80
	lsl		r2, r2, #0x6
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804336e
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	cmp		r4, r0
	beq		_0804336e
	mov		r0, r9
_08043366:
	bl		sub_0802a30c
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
_0804336e:
	ldr		r2, _080433c8
	add		r0, r5, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, r10
	and		r0, r1
	cmp		r0, #0x0
	bne		_080433a6
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	cmp		r4, r0
	bne		_080433a6
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_080433a6
	mov		r2, #0xc2
	lsl		r2, r2, #0x4
	add		r0, r5, r2
	add		r1, r7, #0x0
	bl		sub_0802a274
	cmp		r0, #0x0
	bne		_080433a6
	ldr		r0, _080433cc
	add		r1, r5, r0
	mov		r0, #0x3
	strh	r0, [r1, #0x0]
_080433a6:
	ldr		r1, [sp, #0x0]
	ldrb	r0, [r1, #0x0]
	mov		r1, #0xf
	and		r1, r0
	cmp		r1, #0x2
	beq		_080433d0
	cmp		r1, #0x2
	blt		_080433e4
	cmp		r1, #0x6
	bgt		_080433e4
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	add		r2, r7, #0x0
	bl		sub_08035ec8
	b		_080433e4

.incbin "base.gba", 0x433C6, 0x2

_080433c8:	.4byte 0x000007DA
_080433cc:	.4byte 0x00000BEE

_080433d0:
	mov		r2, #0xc6
	lsl		r2, r2, #0x4
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080433e4
	add		r0, r4, #0x0
	add		r1, r7, #0x0
	bl		sub_0803a880
_080433e4:
	mov		r7, #0x18
	add		r9, r7
	add		r6, #0x1
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	cmp		r6, r0
	bge		_080433f8
	b		_080432f2
_080433f8:
	ldr		r2, [sp, #0x0]
	ldrb	r0, [r2, #0x0]
	mov		r1, #0xf
	and		r1, r0
	cmp		r1, #0x2
	beq		_0804341c
	cmp		r1, #0x2
	blt		_0804341c
	cmp		r1, #0x6
	bgt		_0804341c
	add		r0, r5, #0x0
	bl		sub_0803745c
	add		r0, r5, #0x0
	bl		sub_0803ca58
	bl		sub_08048a14
_0804341c:
	mov		r6, #0x0
	ldr		r7, _08043464
	add		r0, r5, r7
	ldr		r4, [r0, #0x0]
	cmp		r4, #0x0
	beq		_0804343a
_08043428:
	ldr		r1, [r4, #0x14]
	cmp		r1, #0x0
	beq		_08043434
	add		r0, r4, #0x0
	bl		sub_0807d7d4
_08043434:
	ldr		r4, [r4, #0x3c]
	cmp		r4, #0x0
	bne		_08043428
_0804343a:
	ldr		r1, _08043468
	add		r0, r5, r1
	ldr		r4, [r0, #0x0]
	cmp		r4, #0x0
	beq		_08043488
_08043444:
	ldr		r7, [r4, #0x3c]
	ldr		r1, [r4, #0x14]
	cmp		r1, #0x0
	beq		_08043452
	add		r0, r4, #0x0
	bl		sub_0807d7d4
_08043452:
	ldrh	r1, [r4, #0x10]
	ldr		r0, _0804346c
	cmp		r1, r0
	beq		_08043480
	cmp		r1, r0
	bgt		_08043474
	ldr		r0, _08043470
	b		_0804347c

.incbin "base.gba", 0x43462, 0x2

_08043464:	.4byte 0x00000704
_08043468:	.4byte 0x00000714
_0804346c:	.4byte 0x00008401
_08043470:	.4byte 0x00008001

_08043474:
	ldr		r0, _080434ec
	cmp		r1, r0
	beq		_08043480
	add		r0, #0x1
_0804347c:
	cmp		r1, r0
	bne		_08043482
_08043480:
	add		r6, #0x1
_08043482:
	add		r4, r7, #0x0
	cmp		r4, #0x0
	bne		_08043444
_08043488:
	ldr		r2, _080434f0
	add		r0, r5, r2
	strb	r6, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_0804d764
	ldr		r7, _080434f4
	add		r0, r5, r7
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080434b0
_0804349e:
	ldr		r4, [r0, #0x3c]
	ldr		r1, [r0, #0x14]
	cmp		r1, #0x0
	beq		_080434aa
	bl		sub_0807d7d4
_080434aa:
	add		r0, r4, #0x0
	cmp		r0, #0x0
	bne		_0804349e
_080434b0:
	ldr		r0, _080434f8
	add		r5, r5, r0
	mov		r4, #0x0
_080434b6:
	add		r0, r5, r4
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080434d6
	lsl		r1, r4, #0x2
	add		r0, r5, #0x0
	add		r0, #0x20
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_080434d6
	bl		sub_0807d7d4
_080434d6:
	add		r4, #0x1
	cmp		r4, #0x1f
	ble		_080434b6
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080434ec:	.4byte 0x00008402
_080434f0:	.4byte 0x00000C83
_080434f4:	.4byte 0x00000724
_080434f8:	.4byte 0x0000072C
	thumb_func_end sub_08043244

	thumb_func_start sub_080434fc
sub_080434fc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r6, r0, #0x0
	ldr		r1, _08043524
	add		r0, r6, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	bne		_08043528
	mov		r2, #0x6
	mov		r8, r2
	mov		r7, #0x3
	b		_0804352c

.incbin "base.gba", 0x43522, 0x2

_08043524:	.4byte 0x000007DA

_08043528:
	mov		r7, #0x8
	mov		r8, r7
_0804352c:
	ldr		r1, _08043540
	add		r0, r6, r1
	ldr		r4, [r0, #0x0]
	ldr		r2, _08043544
	add		r2, r2, r6
	mov		r9, r2
	cmp		r4, #0x0
	beq		_080435b8
	b		_0804354c

.incbin "base.gba", 0x4353E, 0x2

_08043540:	.4byte 0x00000704
_08043544:	.4byte 0x00000BE8

_08043548:
	cmp		r7, #0x0
	beq		_080435b8
_0804354c:
	ldrh	r0, [r4, #0x34]
	mov		r5, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_080435b2
	add		r0, r4, #0x0
	add		r0, #0x36
	ldrb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_08045a9c
	cmp		r0, #0x0
	beq		_080435b2
	add		r0, r4, #0x0
	bl		sub_08029138
	add		r0, r4, #0x0
	bl		sub_08029174
	cmp		r0, #0x0
	beq		_080435b2
	mov		r1, #0x24
	ldrsh	r0, [r4, r1]
	str		r0, [sp, #0xC]
	str		r5, [sp, #0x10]
	add		r5, r4, #0x0
	add		r5, #0x20
	mov		r2, #0x24
	ldrsh	r1, [r4, r2]
	add		r0, r4, #0x0
	add		r0, #0x80
	ldr		r0, [r0, #0x0]
	mul		r1, r0
	add		r2, r1, #0x0
	cmp		r1, #0x0
	bge		_08043596
	add		r2, #0xff
_08043596:
	asr		r3, r2, #0x8
	ldr		r0, [r4, #0x48]
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	add		r1, sp, #0xc
	str		r1, [sp, #0x4]
	add		r1, r5, #0x0
	add		r2, r3, #0x0
	bl		sub_0802951c
	sub		r7, #0x1
	mov		r2, #0x1
	neg		r2, r2
	add		r8, r2
_080435b2:
	ldr		r4, [r4, #0x3c]
	cmp		r4, #0x0
	bne		_08043548
_080435b8:
	mov		r7, r9
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x0
	beq		_080435cc
	ldr		r1, _080435c8
	add		r0, r6, r1
	ldr		r4, [r0, #0x8]
	b		_080435d2

_080435c8:	.4byte 0x000006EC

_080435cc:
	ldr		r2, _080435dc
	add		r0, r6, r2
	ldr		r4, [r0, #0xc]
_080435d2:
	cmp		r4, #0x0
	beq		_0804367a
	mov		r7, #0x1
	mov		r10, r7
	b		_080435e6

_080435dc:	.4byte 0x000006EC

_080435e0:
	mov		r0, r8
	cmp		r0, #0x0
	beq		_0804367a
_080435e6:
	ldrh	r0, [r4, #0x34]
	mov		r1, r10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08043668
	add		r0, r4, #0x0
	add		r0, #0x36
	ldrb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_08045a9c
	cmp		r0, #0x0
	beq		_08043668
	add		r0, r4, #0x0
	bl		sub_08029138
	add		r0, r4, #0x0
	bl		sub_08029174
	cmp		r0, #0x0
	beq		_08043668
	mov		r2, #0x24
	ldrsh	r0, [r4, r2]
	str		r0, [sp, #0xC]
	mov		r7, r10
	str		r7, [sp, #0x10]
	add		r5, r4, #0x0
	add		r5, #0x20
	mov		r0, #0x24
	ldrsh	r2, [r4, r0]
	add		r0, r4, #0x0
	add		r0, #0x56
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	add		r3, r2, #0x0
	mul		r3, r0
	cmp		r3, #0x0
	bge		_08043634
	add		r3, #0xff
_08043634:
	asr		r3, r3, #0x8
	add		r0, r4, #0x0
	add		r0, #0x58
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	add		r1, r2, #0x0
	mul		r1, r0
	cmp		r1, #0x0
	bge		_08043648
	add		r1, #0xff
_08043648:
	asr		r1, r1, #0x8
	ldr		r0, [r4, #0x4c]
	str		r1, [sp, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x5a
	mov		r7, #0x0
	ldrsh	r1, [r1, r7]
	str		r1, [sp, #0x4]
	add		r1, sp, #0xc
	str		r1, [sp, #0x8]
	add		r1, r5, #0x0
	bl		sub_080299c0
	mov		r2, #0x1
	neg		r2, r2
	add		r8, r2
_08043668:
	mov		r7, r9
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x0
	beq		_08043674
	ldr		r4, [r4, #0x3c]
	b		_08043676
_08043674:
	ldr		r4, [r4, #0x40]
_08043676:
	cmp		r4, #0x0
	bne		_080435e0
_0804367a:
	ldr		r1, _08043760
	add		r0, r6, r1
	ldr		r4, [r0, #0x0]
	cmp		r4, #0x0
	beq		_080436f0
	mov		r7, #0x1
_08043686:
	ldrh	r0, [r4, #0x34]
	and		r0, r7
	cmp		r0, #0x0
	beq		_080436ea
	add		r0, r4, #0x0
	add		r0, #0x36
	ldrb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_08045a9c
	cmp		r0, #0x0
	beq		_080436ea
	add		r0, r4, #0x0
	bl		sub_08029138
	add		r0, r4, #0x0
	bl		sub_08029174
	cmp		r0, #0x0
	beq		_080436ea
	mov		r2, #0x24
	ldrsh	r0, [r4, r2]
	str		r0, [sp, #0xC]
	str		r7, [sp, #0x10]
	add		r5, r4, #0x0
	add		r5, #0x20
	add		r0, r4, #0x0
	add		r0, #0x58
	mov		r2, #0x24
	ldrsh	r1, [r4, r2]
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	mul		r1, r0
	add		r2, r1, #0x0
	cmp		r1, #0x0
	bge		_080436d0
	add		r2, #0xff
_080436d0:
	asr		r3, r2, #0x8
	ldr		r0, [r4, #0x48]
	add		r1, r4, #0x0
	add		r1, #0x5a
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	str		r1, [sp, #0x0]
	add		r1, sp, #0xc
	str		r1, [sp, #0x4]
	add		r1, r5, #0x0
	add		r2, r3, #0x0
	bl		sub_0802951c
_080436ea:
	ldr		r4, [r4, #0x3c]
	cmp		r4, #0x0
	bne		_08043686
_080436f0:
	ldr		r2, _08043764
	add		r0, r6, r2
	ldr		r4, [r0, #0x0]
	cmp		r4, #0x0
	beq		_08043750
	mov		r7, #0x1
_080436fc:
	ldrh	r0, [r4, #0x34]
	and		r0, r7
	cmp		r0, #0x0
	beq		_0804374a
	add		r0, r4, #0x0
	bl		sub_08029174
	cmp		r0, #0x0
	beq		_0804374a
	ldr		r5, [r4, #0x48]
	cmp		r5, #0x0
	beq		_0804374a
	mov		r1, #0x24
	ldrsh	r0, [r4, r1]
	str		r0, [sp, #0xC]
	str		r7, [sp, #0x10]
	add		r6, r4, #0x0
	add		r6, #0x20
	add		r0, r4, #0x0
	add		r0, #0x58
	mov		r2, #0x24
	ldrsh	r1, [r4, r2]
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	mul		r1, r0
	add		r2, r1, #0x0
	cmp		r1, #0x0
	bge		_08043736
	add		r2, #0xff
_08043736:
	asr		r3, r2, #0x8
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	add		r0, sp, #0xc
	str		r0, [sp, #0x4]
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	add		r2, r3, #0x0
	bl		sub_0802951c
_0804374a:
	ldr		r4, [r4, #0x3c]
	cmp		r4, #0x0
	bne		_080436fc
_08043750:
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08043760:	.4byte 0x00000714
_08043764:	.4byte 0x00000724
	thumb_func_end sub_080434fc

	thumb_func_start sub_08043768
sub_08043768:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x58
	mov		r8, r0
	ldr		r0, _08043790
	add		r0, r8
	str		r0, [sp, #0x50]
	mov		r1, #0x0
	mov		r10, r1
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r0, r8
	mov		r2, sp
	add		r2, #0x3c
	str		r2, [sp, #0x54]
	b		_080438f2

.incbin "base.gba", 0x4378E, 0x2

_08043790:	.4byte 0x00000824

_08043794:
	mov		r3, r10
	lsl		r1, r3, #0x2
	ldr		r0, _080437e8
	add		r0, r8
	add		r0, r0, r1
	ldr		r5, [r0, #0x0]
	add		r6, r5, #0x0
	add		r0, r5, #0x0
	bl		sub_08036480
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	mov		r0, #0xc9
	lsl		r0, r0, #0x1
	add		r2, r5, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xca
	and		r0, r1
	strb	r0, [r2, #0x0]
	add		r2, r4, #0x0
	add		r0, r5, #0x0
	ldr		r1, [sp, #0x50]
	bl		sub_08036d30
	add		r0, r5, #0x0
	add		r0, #0x66
	ldrh	r2, [r0, #0x0]
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	cmp		r1, #0x0
	beq		_08043806
	ldr		r0, _080437ec
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	bne		_080437f4
	ldr		r0, _080437f0
	ldr		r0, [r0, #0x14]
	mov		r1, #0x1
	and		r0, r1
	b		_08043802

.incbin "base.gba", 0x437E6, 0x2

_080437e8:	.4byte 0x000007F4
_080437ec:	.4byte 0x00000814
_080437f0:	.4byte RunGameLogic_CallBack

_080437f4:
	cmp		r1, #0x20
	ble		_080437fe
	ldr		r0, _0804381c
	cmp		r1, r0
	ble		_080438e8
_080437fe:
	mov		r0, #0x1
	and		r0, r2
_08043802:
	cmp		r0, #0x0
	bne		_080438e8
_08043806:
	add		r0, r5, #0x0
	bl		sub_08037220
	cmp		r0, #0x0
	beq		_08043820
	add		r0, r6, #0x0
	bl		sub_08029138
	mov		r4, #0x0
	str		r4, [r5, #0x44]
	b		_080438e8

_0804381c:	.4byte 0x00000157

_08043820:
	add		r0, r6, #0x0
	bl		sub_08029138
	add		r2, r4, #0x0
	add		r0, r5, #0x0
	ldr		r1, [sp, #0x50]
	bl		sub_08036758
	str		r0, [r5, #0x44]
	add		r0, r6, #0x0
	bl		sub_08029174
	cmp		r0, #0x0
	beq		_080438e8
	add		r0, r5, #0x0
	bl		sub_08037340
	cmp		r0, #0x0
	beq		_08043850
	ldr		r0, _0804384c
	b		_08043854

.incbin "base.gba", 0x4384A, 0x2

_0804384c:	.4byte 0x00007FFF

_08043850:
	mov		r1, #0x24
	ldrsh	r0, [r6, r1]
_08043854:
	str		r0, [sp, #0x8]
	mov		r2, #0x1
	str		r2, [sp, #0xC]
	ldr		r0, _0804388c
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x6
	add		r1, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08043898
	ldr		r0, _08043890
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	beq		_08043898
	ldr		r0, _08043894
	ldr		r0, [r0, #0x14]
	and		r0, r2
	cmp		r0, #0x0
	beq		_08043898
	mov		r4, #0xc9
	lsl		r4, r4, #0x1
	add		r2, r5, r4
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x20
	b		_080438e4

_0804388c:	.4byte 0x000007DA
_08043890:	.4byte 0x00000814
_08043894:	.4byte RunGameLogic_CallBack

_08043898:
	mov		r0, #0x20
	add		r0, r0, r6
	mov		r9, r0
	mov		r1, #0x24
	ldrsh	r4, [r6, r1]
	add		r0, r5, #0x0
	bl		sub_08037420
	add		r2, r4, #0x0
	mul		r2, r0
	cmp		r2, #0x0
	bge		_080438b2
	add		r2, #0xff
_080438b2:
	asr		r7, r2, #0x8
	mov		r2, #0x24
	ldrsh	r4, [r6, r2]
	add		r0, r5, #0x0
	bl		sub_0803743c
	mul		r0, r4
	cmp		r0, #0x0
	bge		_080438c6
	add		r0, #0xff
_080438c6:
	asr		r3, r0, #0x8
	ldr		r0, [r5, #0x44]
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	add		r1, sp, #0x8
	str		r1, [sp, #0x4]
	mov		r1, r9
	add		r2, r7, #0x0
	bl		sub_0802951c
	mov		r3, #0xc9
	lsl		r3, r3, #0x1
	add		r2, r5, r3
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x35
_080438e4:
	orr		r0, r1
	strb	r0, [r2, #0x0]
_080438e8:
	mov		r4, #0x1
	add		r10, r4
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r0, r8
_080438f2:
	ldrb	r0, [r0, #0x0]
	cmp		r10, r0
	bge		_080438fa
	b		_08043794
_080438fa:
	ldr		r0, _080439b4
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_08043910
	b		_08043aa4
_08043910:
	ldr		r0, _080439b8
	add		r0, r8
	ldr		r2, [r0, #0x0]
	ldr		r0, [r2, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08043922
	b		_08043c0c
_08043922:
	add		r0, r2, #0x0
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r4, r0, #0x1
	add		r6, r2, #0x0
	mov		r1, #0xc9
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_080439cc
	cmp		r4, #0x0
	ble		_080439cc
	add		r7, sp, #0x10
_08043942:
	sub		r4, #0x1
	lsl		r1, r4, #0x18
	lsr		r1, r1, #0x18
	mov		r0, r8
	bl		sub_08044894
	add		r6, r0, #0x0
	add		r0, #0x66
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	bgt		_080439c8
	mov		r3, #0xc9
	lsl		r3, r3, #0x1
	add		r0, r6, r3
	ldrb	r1, [r0, #0x0]
	mov		r3, #0x1
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_080439cc
	add		r2, r6, #0x0
	mov		r4, #0x24
	ldrsh	r0, [r2, r4]
	str		r0, [sp, #0x10]
	str		r3, [r7, #0x4]
	ldrh	r1, [r2, #0x20]
	ldr		r0, _080439bc
	ldr		r4, [sp, #0x18]
	and		r4, r0
	orr		r4, r1
	str		r4, [sp, #0x18]
	mov		r0, #0x22
	ldrsh	r5, [r2, r0]
	mov		r3, #0x24
	ldrsh	r1, [r2, r3]
	mov		r0, #0x90
	lsl		r0, r0, #0x6
	bl		sub_0807d80c
	sub		r5, r5, r0
	lsl		r5, r5, #0x10
	ldr		r0, _080439c0
	and		r4, r0
	orr		r4, r5
	str		r4, [sp, #0x18]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r7, [sp, #0x4]
	ldr		r0, _080439c4
	add		r1, sp, #0x18
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	b		_080439cc

.incbin "base.gba", 0x439B2, 0x2

_080439b4:	.4byte 0x000007DA
_080439b8:	.4byte 0x00000814
_080439bc:	.4byte 0xffff0000
_080439c0:	.4byte 0x0000FFFF
_080439c4:	.4byte 0x080968a0

_080439c8:
	cmp		r4, #0x0
	bgt		_08043942
_080439cc:
	mov		r4, #0xc9
	lsl		r4, r4, #0x1
	add		r0, r6, r4
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_080439de
	b		_08043c0c
_080439de:
	ldr		r0, _08043a8c
	add		r0, r8
	ldr		r0, [r0, #0x0]
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r4, r0, #0x1
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x1
	cmp		r4, r0
	blt		_080439fa
	b		_08043c0c
_080439fa:
	add		r4, #0x1
	lsl		r1, r4, #0x18
	lsr		r1, r1, #0x18
	mov		r0, r8
	bl		sub_08044894
	add		r6, r0, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bgt		_08043a94
	mov		r2, #0xc9
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	bne		_08043a24
	b		_08043c0c
_08043a24:
	add		r2, r6, #0x0
	mov		r3, #0x24
	ldrsh	r0, [r2, r3]
	str		r0, [sp, #0x10]
	add		r7, sp, #0x10
	mov		r0, #0x1
	str		r0, [r7, #0x4]
	mov		r4, #0x20
	ldrsh	r5, [r2, r4]
	mov		r0, #0x0
	mov		r9, r0
	add		r6, sp, #0x18
	strh	r5, [r6, #0x0]
	mov		r1, #0x22
	ldrsh	r4, [r2, r1]
	mov		r3, #0x24
	ldrsh	r1, [r2, r3]
	add		r1, #0x80
	mov		r0, #0xd8
	lsl		r0, r0, #0x6
	bl		sub_0807d80c
	sub		r4, r4, r0
	add		r1, r6, #0x0
	strh		r4, [r1, #0x2]
	cmp		r5, #0xf3
	ble		_08043a5c
	b		_08043c0c
_08043a5c:
	mov		r0, #0x4
	neg		r0, r0
	cmp		r5, r0
	bgt		_08043a66
	b		_08043c0c
_08043a66:
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0xc8
	ble		_08043a70
	b		_08043c0c
_08043a70:
	cmp		r0, #0xa0
	ble		_08043a78
	mov		r0, #0xa0
	strh		r0, [r1, #0x2]
_08043a78:
	mov		r4, r9
	str		r4, [sp, #0x0]
	str		r7, [sp, #0x4]
	ldr		r0, _08043a90
	add		r1, r6, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	b		_08043c0c

_08043a8c:	.4byte 0x00000814
_08043a90:	.4byte 0x080968a8

_08043a94:
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x1
	cmp		r4, r0
	blt		_080439fa
	b		_08043c0c
_08043aa4:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_08043ab6
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_08043ab6
	b		_08043c0c
_08043ab6:
	ldr		r0, _08043ae4
	add		r0, r8
	ldr		r2, [r0, #0x0]
	ldr		r0, [r2, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08043ac8
	b		_08043c0c
_08043ac8:
	mov		r7, #0x0
	mov		r10, r2
	mov		r0, #0xc9
	lsl		r0, r0, #0x1
	add		r0, r10
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_08043ade
	b		_08043c0c
_08043ade:
	mov		r0, #0x0
	mov		r9, r0
	b		_08043bfe

_08043ae4:	.4byte 0x00000814

_08043ae8:
	mov		r2, r9
	lsl		r1, r2, #0x2
	ldr		r0, _08043b8c
	add		r0, r8
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	cmp		r2, r10
	bne		_08043afa
	b		_08043bfa
_08043afa:
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x0
	ble		_08043b08
	b		_08043bf8
_08043b08:
	mov		r4, #0xc9
	lsl		r4, r4, #0x1
	add		r0, r2, r4
	ldrb	r1, [r0, #0x0]
	mov		r3, #0x1
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08043bf8
	mov		r1, #0x24
	ldrsh	r0, [r2, r1]
	str		r0, [sp, #0x1C]
	add		r6, sp, #0x1c
	str		r3, [r6, #0x4]
	ldrh	r1, [r2, #0x20]
	ldr		r0, _08043b90
	ldr		r5, [sp, #0x24]
	and		r5, r0
	orr		r5, r1
	str		r5, [sp, #0x24]
	mov		r3, #0x22
	ldrsh	r4, [r2, r3]
	mov		r0, #0x24
	ldrsh	r1, [r2, r0]
	mov		r0, #0x90
	lsl		r0, r0, #0x6
	bl		sub_0807d80c
	sub		r4, r4, r0
	lsl		r4, r4, #0x10
	ldr		r1, _08043b94
	add		r2, r1, #0x0
	and		r2, r5
	orr		r2, r4
	str		r2, [sp, #0x24]
	add		r0, sp, #0x24
	mov		r4, #0x0
	ldrsh	r3, [r0, r4]
	add		r4, r0, #0x0
	cmp		r3, #0xf3
	bgt		_08043bf8
	mov		r0, #0x4
	neg		r0, r0
	cmp		r3, r0
	ble		_08043bf8
	asr		r0, r2, #0x10
	cmp		r0, #0xc8
	bgt		_08043bf8
	cmp		r0, #0xa0
	ble		_08043b76
	and		r2, r1
	mov		r0, #0xa0
	lsl		r0, r0, #0x10
	orr		r2, r0
	str		r2, [sp, #0x24]
_08043b76:
	mov		r0, r9
	cmp		r0, #0x1
	beq		_08043bb8
	cmp		r7, #0x1
	beq		_08043ba8
	cmp		r7, #0x1
	bgt		_08043b98
	cmp		r7, #0x0
	beq		_08043b9e
	b		_08043be4

.incbin "base.gba", 0x43B8A, 0x2

_08043b8c:	.4byte 0x000007F4
_08043b90:	.4byte 0xffff0000
_08043b94:	.4byte 0x0000FFFF

_08043b98:
	cmp		r7, #0x2
	beq		_08043bb0
	b		_08043be4
_08043b9e:
	ldr		r2, _08043ba4
	b		_08043be6

.incbin "base.gba", 0x43BA2, 0x2

_08043ba4:	.4byte 0x080968b8

_08043ba8:
	ldr		r2, _08043bac
	b		_08043be6

_08043bac:	.4byte 0x080968c0

_08043bb0:
	ldr		r2, _08043bb4
	b		_08043be6

_08043bb4:	.4byte 0x080968c8

_08043bb8:
	cmp		r7, #0x1
	beq		_08043bd4
	cmp		r7, #0x1
	bgt		_08043bc6
	cmp		r7, #0x0
	beq		_08043bcc
	b		_08043be4
_08043bc6:
	cmp		r7, #0x2
	beq		_08043bdc
	b		_08043be4
_08043bcc:
	ldr		r2, _08043bd0
	b		_08043be6

_08043bd0:	.4byte 0x080968d0

_08043bd4:
	ldr		r2, _08043bd8
	b		_08043be6

_08043bd8:	.4byte 0x080968d8

_08043bdc:
	ldr		r2, _08043be0
	b		_08043be6

_08043be0:	.4byte 0x080968e0

_08043be4:
	mov		r2, #0x0
_08043be6:
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r6, [sp, #0x4]
	add		r0, r2, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
_08043bf8:
	add		r7, #0x1
_08043bfa:
	mov		r1, #0x1
	add		r9, r1
_08043bfe:
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	cmp		r9, r0
	bge		_08043c0c
	b		_08043ae8
_08043c0c:
	ldr		r0, _08043ccc
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x4
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	cmp		r0, r1
	bne		_08043cf2
	ldr		r0, _08043cd0
	add		r0, r8
	ldr		r2, [r0, #0x0]
	ldr		r0, [r2, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08043cf2
	mov		r3, #0xc9
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08043cf2
	mov		r4, #0x0
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	bge		_08043cf2
	add		r6, sp, #0x28
_08043c50:
	lsl		r1, r4, #0x2
	ldr		r0, _08043cd4
	add		r0, r8
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	ldr		r0, _08043cd0
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r2, r0
	beq		_08043ce4
	add		r0, r2, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r3, #0x20
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08043ce4
	mov		r4, #0xc9
	lsl		r4, r4, #0x1
	add		r0, r2, r4
	ldrb	r1, [r0, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08043cf2
	mov		r1, #0x24
	ldrsh	r0, [r2, r1]
	str		r0, [sp, #0x28]
	mov		r0, #0x1
	str		r0, [r6, #0x4]
	ldrh	r1, [r2, #0x20]
	ldr		r0, _08043cd8
	ldr		r4, [sp, #0x30]
	and		r4, r0
	orr		r4, r1
	str		r4, [sp, #0x30]
	mov		r3, #0x22
	ldrsh	r5, [r2, r3]
	mov		r0, #0x24
	ldrsh	r1, [r2, r0]
	mov		r0, #0x90
	lsl		r0, r0, #0x6
	bl		sub_0807d80c
	sub		r5, r5, r0
	lsl		r5, r5, #0x10
	ldr		r0, _08043cdc
	and		r4, r0
	orr		r4, r5
	str		r4, [sp, #0x30]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r6, [sp, #0x4]
	ldr		r0, _08043ce0
	add		r1, sp, #0x30
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	b		_08043cf2

.incbin "base.gba", 0x43CCA, 0x2

_08043ccc:	.4byte 0x000007DA
_08043cd0:	.4byte 0x00000814
_08043cd4:	.4byte 0x000007F4
_08043cd8:	.4byte 0xffff0000
_08043cdc:	.4byte 0x0000FFFF
_08043ce0:	.4byte 0x080968e8

_08043ce4:
	add		r4, #0x1
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	blt		_08043c50
_08043cf2:
	ldr		r7, _08043d98
	add		r7, r8
	mov		r5, #0x0
	mov		r1, #0x1
	mov		r9, r1
	add		r6, sp, #0x34
_08043cfe:
	add		r0, r7, r5
	ldrb	r1, [r0, #0x0]
	mov		r0, r9
	and		r0, r1
	cmp		r0, #0x0
	beq		_08043d42
	lsl		r1, r5, #0x2
	add		r0, r7, #0x0
	add		r0, #0x20
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	ldrb	r1, [r4, #0x10]
	mov		r0, r9
	and		r0, r1
	cmp		r0, #0x0
	beq		_08043d42
	ldr		r0, [r4, #0x4]
	cmp		r0, #0x0
	beq		_08043d42
	mov		r2, #0x24
	ldrsh	r0, [r4, r2]
	str		r0, [sp, #0x34]
	mov		r3, r9
	str		r3, [r6, #0x4]
	ldr		r0, [r4, #0x4]
	add		r1, r4, #0x0
	add		r1, #0x14
	ldr		r2, [r4, #0x1c]
	ldr		r3, [r4, #0x20]
	ldr		r4, [r4, #0x18]
	str		r4, [sp, #0x0]
	str		r6, [sp, #0x4]
	bl		sub_0802951c
_08043d42:
	add		r5, #0x1
	cmp		r5, #0x1f
	ble		_08043cfe
	ldr		r0, _08043d9c
	add		r0, r8
	ldr		r5, [r0, #0x0]
	add		r7, r5, #0x0
	add		r7, #0x20
	mov		r4, #0x24
	ldrsh	r0, [r5, r4]
	str		r0, [sp, #0x3C]
	mov		r0, #0x0
	ldr		r1, [sp, #0x54]
	str		r0, [r1, #0x4]
	add		r0, r5, #0x0
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08043d70
	b		_08043e9c
_08043d70:
	ldr		r0, [r5, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08043d7c
	b		_08043e9c
_08043d7c:
	ldr		r2, [r5, #0x8]
	cmp		r2, #0x0
	beq		_08043d84
	b		_08043e9c
_08043d84:
	mov		r6, #0x1
	add		r0, r5, #0x0
	add		r0, #0x85
	ldrb	r1, [r0, #0x0]
	add		r4, r0, #0x0
	cmp		r1, #0x54
	bne		_08043da0
	mov		r6, #0x2
	b		_08043db6

.incbin "base.gba", 0x43D96, 0x2

_08043d98:	.4byte 0x0000072C
_08043d9c:	.4byte 0x00000814

_08043da0:
	cmp		r1, #0x5a
	bne		_08043da8
	mov		r6, #0x3
	b		_08043db6
_08043da8:
	cmp		r1, #0x5c
	bne		_08043db0
	mov		r6, #0x4
	b		_08043db6
_08043db0:
	cmp		r1, #0x58
	bne		_08043db6
	mov		r6, #0x5
_08043db6:
	add		r1, r5, #0x0
	add		r1, #0xb4
	ldrh	r3, [r1, #0x0]
	mov		r0, #0xc
	and		r0, r3
	cmp		r0, #0x0
	bne		_08043ddc
	add		r0, r5, #0x0
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08043dd4
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x4f
	bhi		_08043ddc
_08043dd4:
	mov		r0, #0x1
	and		r0, r3
	cmp		r0, #0x0
	beq		_08043e28
_08043ddc:
	add		r0, r5, #0x0
	add		r0, #0x7e
	ldrb	r3, [r0, #0x0]
	sub		r0, r3, #0x7
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	bls		_08043e28
	add		r0, r3, #0x0
	cmp		r0, #0x5
	beq		_08043e28
	cmp		r0, #0x6
	beq		_08043e28
	cmp		r0, #0xd
	beq		_08043e28
	cmp		r0, #0xf
	bne		_08043e08
	add		r0, r5, #0x0
	add		r0, #0xb0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	bne		_08043e28
_08043e08:
	add		r0, r5, #0x0
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08043e18
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x50
	beq		_08043e44
_08043e18:
	str		r6, [sp, #0x0]
	add		r0, r5, #0x0
	ldr		r1, [sp, #0x50]
	add		r2, r7, #0x0
	ldr		r3, [sp, #0x54]
	bl		sub_08037bfc
	b		_08043e44
_08043e28:
	cmp		r2, #0x0
	bne		_08043e44
	ldrh	r1, [r1, #0x0]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08043e44
	str		r6, [sp, #0x0]
	add		r0, r5, #0x0
	ldr		r1, [sp, #0x50]
	add		r2, r7, #0x0
	ldr		r3, [sp, #0x54]
	bl		sub_08037bfc
_08043e44:
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x5c
	bne		_08043e9c
	ldr		r0, _08043eb8
	ldr		r0, [r0, #0x14]
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08043e9c
	mov		r2, #0x20
	ldrsh	r0, [r5, r2]
	add		r0, #0x2
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r2, _08043ebc
	ldr		r1, [sp, #0x4C]
	and		r1, r2
	orr		r1, r0
	str		r1, [sp, #0x4C]
	mov		r3, #0x22
	ldrsh	r0, [r5, r3]
	add		r0, #0x7
	lsl		r0, r0, #0x10
	ldr		r2, _08043ec0
	and		r1, r2
	orr		r1, r0
	str		r1, [sp, #0x4C]
	mov		r4, #0x24
	ldrsh	r0, [r5, r4]
	str		r0, [sp, #0x44]
	mov		r0, #0x88
	lsl		r0, r0, #0x1
	add		r4, sp, #0x44
	str		r0, [r4, #0x4]
	mov		r0, #0x24
	ldrsh	r3, [r5, r0]
	ldr		r0, _08043ec4
	add		r1, sp, #0x4c
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	str		r4, [sp, #0x4]
	add		r2, r3, #0x0
	bl		sub_0802951c
_08043e9c:
	add		r0, r5, #0x0
	ldr		r1, [sp, #0x50]
	ldr		r2, [sp, #0x54]
	bl		sub_08037ba8
	add		sp, #0x58
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x43EB6, 0x2

_08043eb8:	.4byte RunGameLogic_CallBack
_08043ebc:	.4byte 0xffff0000
_08043ec0:	.4byte 0x0000FFFF
_08043ec4:	.4byte 0x08096838
	thumb_func_end sub_08043768

	thumb_func_start sub_08043ec8
sub_08043ec8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r1, _08043ee8
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	mov		r1, #0xf
	and		r1, r0
	cmp		r1, #0x4
	bne		_08043edc
	b		_080440ea
_08043edc:
	cmp		r1, #0x4
	ble		_08043eec
	cmp		r1, #0x5
	bne		_08043ee6
	b		_08044158
_08043ee6:
	b		_0804415c

_08043ee8:	.4byte 0x000007D4

_08043eec:
	cmp		r1, #0x1
	bge		_08043ef2
	b		_0804415c
_08043ef2:
	ldr		r1, _08043f18
	add		r0, r4, r1
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	bne		_08043f08
	b		_08044068
_08043f08:
	cmp		r1, r0
	bgt		_08043f1c
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_08043f44
	b		_0804415c

.incbin "base.gba", 0x43F16, 0x2

_08043f18:	.4byte 0x000007DA

_08043f1c:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_08043f30
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r1, r0
	bne		_08043f2e
	b		_080440dc
_08043f2e:
	b		_0804415c
_08043f30:
	ldr		r1, _08043f78
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08043f44
	bl		sub_08047d34
_08043f44:
	add		r0, r4, #0x0
	bl		sub_080472e8
	add		r0, r4, #0x0
	bl		sub_08048b94
	ldr		r1, _08043f7c
	add		r0, r4, r1
	ldr		r1, [r0, #0x0]
	add		r5, r0, #0x0
	cmp		r1, #0x0
	bge		_08043f80
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_08043f6e
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	and		r1, r0
	cmp		r1, #0x0
	beq		_08043f86
_08043f6e:
	add		r0, r4, #0x0
	bl		sub_0804741c
	b		_08043f86

.incbin "base.gba", 0x43F76, 0x2

_08043f78:	.4byte 0x00000814
_08043f7c:	.4byte 0x00000C88

_08043f80:
	add		r0, r4, #0x0
	bl		sub_0804741c
_08043f86:
	add		r0, r4, #0x0
	bl		sub_08047e68
	ldr		r1, [r5, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x18
	cmp		r1, #0x0
	bge		_08043fa6
	mov		r0, #0x2
	and		r1, r0
	cmp		r1, #0x0
	beq		_0804403e
	add		r0, r4, #0x0
	bl		sub_08046e50
	b		_0804403e
_08043fa6:
	ldr		r3, _08043fc8
	mov		r5, #0x0
	ldr		r1, _08043fcc
	add		r0, r3, r1
	ldr		r1, [r0, #0x0]
	and		r2, r1
	cmp		r2, #0x0
	beq		_08043fd0
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_08044038
	mov		r0, #0x4
	and		r1, r0
	cmp		r1, #0x0
	bne		_08044038
	b		_0804403e

_08043fc8:	.4byte RunGameLogic_CallBack
_08043fcc:	.4byte 0x00000CAC

_08043fd0:
	ldr		r1, _08043ff0
	add		r0, r3, r1
	ldrh	r2, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_08043ff4
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_08044014
_08043fec:
	mov		r5, #0x1
	b		_08044038

_08043ff0:	.4byte 0x000007FE

_08043ff4:
	mov		r0, #0x10
	and		r0, r2
	cmp		r0, #0x0
	beq		_08043fec
	mov		r1, #0x0
	ldr		r0, _08044010
	ldrh	r0, [r0, #0x10]
	cmp		r0, #0x0
	bne		_08044008
	mov		r1, #0x1
_08044008:
	cmp		r1, #0x0
	beq		_08044034
	b		_08043fec

.incbin "base.gba", 0x4400E, 0x2

_08044010:	.4byte 0x03002FE0

_08044014:
	mov		r1, #0x0
	ldr		r2, _08044060
	ldrh	r0, [r2, #0x8]
	cmp		r0, #0x0
	bne		_08044020
	mov		r1, #0x1
_08044020:
	cmp		r1, #0x0
	bne		_08044032
	mov		r1, #0x0
	ldrh	r0, [r2, #0xa]
	cmp		r0, #0x0
	bne		_0804402e
	mov		r1, #0x1
_0804402e:
	cmp		r1, #0x0
	beq		_08044034
_08044032:
	mov		r5, #0x1
_08044034:
	cmp		r5, #0x0
	beq		_0804403e
_08044038:
	add		r0, r4, #0x0
	bl		sub_08046e50
_0804403e:
	ldr		r1, _08044064
	add		r0, r4, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08044052
	add		r0, r4, #0x0
	bl		sub_080482e4
_08044052:
	add		r0, r4, #0x0
	bl		sub_08047ae0
	add		r0, r4, #0x0
	bl		sub_08048c5c
	b		_08044150

_08044060:	.4byte 0x03002FE0
_08044064:	.4byte 0x000007DA

_08044068:
	add		r0, r4, #0x0
	bl		sub_080472e8
	add		r0, r4, #0x0
	bl		sub_08048b94
	add		r0, r4, #0x0
	bl		sub_08046e50
	ldr		r1, _080440d4
	add		r0, r4, r1
	ldr		r1, [r0, #0x0]
	add		r5, r0, #0x0
	cmp		r1, #0x0
	bge		_0804408e
	mov		r0, #0x1
	and		r1, r0
	cmp		r1, #0x0
	bne		_0804409e
_0804408e:
	ldr		r1, [r5, #0x0]
	cmp		r1, #0x0
	bge		_080440a4
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	and		r1, r0
	cmp		r1, #0x0
	beq		_080440a4
_0804409e:
	add		r0, r4, #0x0
	bl		sub_0804741c
_080440a4:
	add		r0, r4, #0x0
	bl		sub_08047e68
	ldr		r1, _080440d8
	add		r0, r4, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_080440c6
	add		r0, r4, #0x0
	bl		sub_0804825c
	add		r0, r4, #0x0
	bl		sub_080482e4
_080440c6:
	add		r0, r4, #0x0
	bl		sub_08048cdc
	add		r0, r4, #0x0
	bl		sub_08048e4c
	b		_0804415c

_080440d4:	.4byte 0x00000C88
_080440d8:	.4byte 0x000007DA

_080440dc:
	add		r0, r4, #0x0
	bl		sub_08046e50
	add		r0, r4, #0x0
	bl		sub_0804764c
	b		_08044150
_080440ea:
	ldr		r1, _0804410c
	add		r0, r4, r1
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	beq		_0804413c
	cmp		r1, r0
	bgt		_08044110
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_08044122
	b		_08044150

_0804410c:	.4byte 0x000007DA

_08044110:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_08044122
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_0804414a
	b		_08044150
_08044122:
	add		r0, r4, #0x0
	bl		sub_080472e8
	add		r0, r4, #0x0
	bl		sub_08047ae0
	add		r0, r4, #0x0
	bl		sub_08048c5c
	add		r0, r4, #0x0
	bl		sub_0804741c
	b		_08044150
_0804413c:
	add		r0, r4, #0x0
	bl		sub_080472e8
	add		r0, r4, #0x0
	bl		sub_08048eb8
	b		_0804415c
_0804414a:
	add		r0, r4, #0x0
	bl		sub_0804764c
_08044150:
	add		r0, r4, #0x0
	bl		sub_08048cdc
	b		_0804415c
_08044158:
	bl		sub_0801f568
_0804415c:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x44162, 0x2
	thumb_func_end sub_08043ec8

	thumb_func_start sub_08044164
sub_08044164:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	add		r3, r0, #0x0
	lsl		r0, r1, #0x18
	lsr		r2, r0, #0x18
	cmp		r2, #0x0
	beq		_080441e8
	lsr		r0, r0, #0x19
	lsl		r0, r0, #0x2
	ldr		r4, _080441f4
	add		r1, r3, r4
	add		r0, r1, r0
	ldr		r6, [r0, #0x0]
	cmp		r6, #0x0
	beq		_080441e8
	mov		r8, r1
_08044188:
	sub		r7, r2, #0x2
	lsr		r0, r7, #0x1f
	add		r0, r7, r0
	asr		r0, r0, #0x1
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x16
	add		r0, r8
	ldr		r5, [r0, #0x0]
	cmp		r5, #0x0
	beq		_080441e8
	add		r0, r6, #0x0
	str		r2, [sp, #0x0]
	bl		sub_080374b0
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_080374b0
	ldr		r2, [sp, #0x0]
	cmp		r4, r0
	ble		_080441e8
	ldr		r0, [r5, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_080441e8
	lsr		r0, r2, #0x1
	lsl		r0, r0, #0x2
	add		r0, r8
	str		r5, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xba
	strh	r2, [r0, #0x0]
	lsl		r0, r7, #0x18
	lsr		r2, r0, #0x18
	lsr		r0, r0, #0x19
	lsl		r0, r0, #0x2
	mov		r3, r8
	add		r1, r3, r0
	str		r6, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xba
	strh	r2, [r0, #0x0]
	cmp		r2, #0x0
	beq		_080441e8
	ldr		r6, [r1, #0x0]
	cmp		r6, #0x0
	bne		_08044188
_080441e8:
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080441f4:	.4byte 0x00000C38
	thumb_func_end sub_08044164

	thumb_func_start sub_080441f8
sub_080441f8:
	push	{ r4, r5, r6, r7, lr }
	add		r2, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r3, r1, #0x19
	cmp		r3, #0x0
	beq		_08044258
	lsl		r0, r3, #0x2
	ldr		r4, _08044260
	add		r1, r2, r4
	add		r0, r1, r0
	ldr		r4, [r0, #0x0]
	cmp		r4, #0x0
	beq		_08044258
	mov		r12, r1
_08044214:
	sub		r0, r3, #0x1
	lsl		r0, r0, #0x18
	lsr		r6, r0, #0x18
	lsl		r0, r6, #0x2
	mov		r7, r12
	add		r5, r7, r0
	ldr		r2, [r5, #0x0]
	cmp		r2, #0x0
	beq		_08044258
	ldr		r1, _08044264
	add		r0, r4, r1
	add		r1, r2, r1
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bls		_08044258
	lsl		r0, r3, #0x2
	add		r0, r12
	str		r2, [r0, #0x0]
	lsl		r1, r3, #0x1
	add		r0, r2, #0x0
	add		r0, #0xba
	strh	r1, [r0, #0x0]
	add		r3, r6, #0x0
	str		r4, [r5, #0x0]
	lsl		r1, r3, #0x1
	add		r0, r4, #0x0
	add		r0, #0xba
	strh	r1, [r0, #0x0]
	cmp		r3, #0x0
	beq		_08044258
	ldr		r4, [r5, #0x0]
	cmp		r4, #0x0
	bne		_08044214
_08044258:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4425E, 0x2

_08044260:	.4byte 0x00000C38
_08044264:	.4byte 0x0000017D
	thumb_func_end sub_080441f8

	thumb_func_start sub_08044268
sub_08044268:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	ldr		r0, _080442b0
	add		r2, r7, r0
	ldrb	r3, [r2, #0x0]
	mov		r0, #0xf
	and		r0, r3
	cmp		r0, #0x4
	bne		_08044282
	b		_08044658
_08044282:
	cmp		r0, #0x4
	ble		_08044288
	b		_08044676
_08044288:
	cmp		r0, #0x3
	beq		_0804428e
	b		_08044676
_0804428e:
	ldr		r1, _080442b4
	add		r0, r7, r1
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	beq		_080442cc
	cmp		r1, r0
	bgt		_080442b8
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_0804433c
	b		_08044676

_080442b0:	.4byte 0x000007D4
_080442b4:	.4byte 0x000007DA

_080442b8:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	bne		_080442c2
	b		_080444d8
_080442c2:
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_080443b4
	b		_08044676
_080442cc:
	ldr		r3, _08044330
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_080442de
	b		_08044676
_080442de:
	mov		r3, #0x1
	mov		r6, #0xfe
	lsl		r6, r6, #0x3
	add		r0, r7, r6
	add		r5, r2, #0x0
	ldr		r1, _08044334
	mov		r8, r1
	ldrb	r2, [r0, #0x0]
	cmp		r3, r2
	bge		_0804431a
	mov		r6, #0x31
	neg		r6, r6
	mov		r12, r6
	ldr		r1, _08044338
	mov		r9, r1
	mov		r2, #0xff
	lsl		r2, r2, #0x3
	add		r4, r7, r2
	add		r2, r0, #0x0
_08044304:
	ldmia	r4!, { r1 }
	ldr		r0, [r1, #0x48]
	mov		r6, r12
	and		r0, r6
	mov		r6, r9
	orr		r0, r6
	str		r0, [r1, #0x48]
	add		r3, #0x1
	ldrb	r0, [r2, #0x0]
	cmp		r3, r0
	blt		_08044304
_0804431a:
	ldrb	r1, [r5, #0x0]
	mov		r0, #0xf0
	and		r0, r1
	mov		r1, #0x4
	mov		r2, #0x0
	orr		r0, r1
	strb	r0, [r5, #0x0]
	mov		r1, r8
	str		r2, [r1, #0x0]
	b		_08044676

.incbin "base.gba", 0x4432E, 0x2

_08044330:	.4byte 0x00000814
_08044334:	.4byte 0x03002338
_08044338:	.4byte 0x00002030

_0804433c:
	mov		r4, #0x0
	ldr		r3, _080443a0
	add		r0, r7, r3
	ldrb	r6, [r0, #0x0]
	cmp		r4, r6
	bge		_08044370
	add		r5, r0, #0x0
	ldr		r0, _080443a4
	add		r3, r7, r0
	mov		r6, #0x20
	mov		r1, #0x7f
	mov		r12, r1
_08044354:
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x48]
	and		r0, r6
	cmp		r0, #0x0
	beq		_08044366
	ldrb	r1, [r2, #0x0]
	mov		r0, r12
	and		r0, r1
	strb	r0, [r2, #0x0]
_08044366:
	add		r3, #0x4
	add		r4, #0x1
	ldrb	r0, [r5, #0x0]
	cmp		r4, r0
	blt		_08044354
_08044370:
	ldr		r1, _080443a8
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08044382
	b		_08044676
_08044382:
	ldr		r2, _080443ac
	add		r3, r7, r2
	ldrb	r1, [r3, #0x0]
	mov		r0, #0xf0
	and		r0, r1
	mov		r1, #0x4
	mov		r2, #0x0
	orr		r0, r1
	strb	r0, [r3, #0x0]
	ldr		r0, _080443b0
	str		r2, [r0, #0x0]
	bl		sub_08048a34
	b		_08044676

.incbin "base.gba", 0x4439E, 0x2

_080443a0:	.4byte 0x000007D7
_080443a4:	.4byte 0x000007F4
_080443a8:	.4byte 0x00000814
_080443ac:	.4byte 0x000007D4
_080443b0:	.4byte 0x03002338

_080443b4:
	mov		r5, #0x0
	mov		r3, #0xfe
	lsl		r3, r3, #0x3
	add		r0, r7, r3
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_080443de
	ldr		r6, _080443f8
	ldr		r0, _080443fc
	add		r3, r7, r0
	add		r4, r1, #0x0
_080443ca:
	ldr		r2, [r3, #0x0]
	add		r0, r2, r6
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080443d6
	add		r5, #0x1
_080443d6:
	add		r3, #0x4
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_080443ca
_080443de:
	cmp		r5, #0x1
	ble		_080443e4
	b		_08044676
_080443e4:
	mov		r4, #0x0
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	ldr		r2, _08044400
	add		r5, r7, r2
	ldr		r3, _08044404
	add		r6, r7, r3
	b		_08044464

.incbin "base.gba", 0x443F6, 0x2

_080443f8:	.4byte 0x0000017D
_080443fc:	.4byte 0x000007F4
_08044400:	.4byte 0x000007D4
_08044404:	.4byte 0x00000BE4

_08044408:
	lsl		r1, r4, #0x2
	ldr		r2, _08044448
	add		r0, r7, r2
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	ldr		r1, [r2, #0x48]
	mov		r0, #0x38
	orr		r1, r0
	mov		r0, #0x88
	lsl		r0, r0, #0x4
	orr		r1, r0
	str		r1, [r2, #0x48]
	add		r1, r2, #0x0
	add		r1, #0xbc
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r3, _0804444c
	add		r0, r7, r3
	ldrh	r0, [r0, #0x0]
	add		r3, #0x26
	add		r1, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08044450
	add		r0, r2, #0x0
	add		r0, #0xba
	ldrb	r1, [r0, #0x0]
	add		r0, r7, #0x0
	bl		sub_080441f8
	b		_0804445c

.incbin "base.gba", 0x44446, 0x2

_08044448:	.4byte 0x000007F4
_0804444c:	.4byte 0x000007DA

_08044450:
	add		r0, r2, #0x0
	add		r0, #0xba
	ldrb	r1, [r0, #0x0]
	add		r0, r7, #0x0
	bl		sub_08044164
_0804445c:
	add		r4, #0x1
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r7, r1
_08044464:
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	blt		_08044408
	mov		r0, #0x8
	str		r0, [r6, #0x0]
	ldrb	r1, [r5, #0x0]
	mov		r0, #0xf0
	and		r0, r1
	mov		r1, #0x4
	mov		r2, #0x0
	mov		r8, r2
	orr		r0, r1
	strb	r0, [r5, #0x0]
	ldr		r1, _08044498
	mov		r0, #0xb4
	str		r0, [r1, #0x0]
	ldr		r3, _0804449c
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x1
	cmp		r0, #0x0
	bne		_080444a4
	ldr		r6, _080444a0
	b		_080444a6

_08044498:	.4byte 0x03002338
_0804449c:	.4byte 0x00000814
_080444a0:	.4byte 0x080972bc

_080444a4:
	ldr		r6, _080444cc
_080444a6:
	mov		r4, #0x78
	mov		r5, #0x3f
	ldr		r0, _080444d0
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08054e88
	mov		r2, #0x0
	strh	r4, [r0, #0x14]
	strh	r5, [r0, #0x16]
	str		r6, [r0, #0x4]
	mov		r3, r8
	str		r3, [r0, #0xc]
	ldr		r1, _080444d4
	str		r1, [r0, #0x0]
	strb	r2, [r0, #0x10]
	b		_08044676

.incbin "base.gba", 0x444CA, 0x2

_080444cc:	.4byte 0x080972c4
_080444d0:	.4byte RunGameLogic_CallBack
_080444d4:	.4byte 0x08044b69

_080444d8:
	mov		r5, #0x1
	mov		r1, #0x0
	mov		r6, #0xfe
	lsl		r6, r6, #0x3
	add		r0, r7, r6
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x1
	cmp		r1, r0
	bge		_0804450a
	ldr		r2, _08044630
	add		r4, r7, r2
	mov		r6, #0x20
	add		r2, r0, #0x0
_080444f2:
	lsl		r0, r1, #0x18
	lsr		r0, r0, #0x16
	add		r0, r4, r0
	ldr		r3, [r0, #0x0]
	ldr		r0, [r3, #0x48]
	and		r0, r6
	cmp		r0, #0x0
	bne		_08044504
	mov		r5, #0x0
_08044504:
	add		r1, #0x1
	cmp		r1, r2
	blt		_080444f2
_0804450a:
	cmp		r5, #0x0
	bne		_08044510
	b		_08044676
_08044510:
	ldr		r3, _08044634
	add		r2, r7, r3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x7f
	and		r0, r1
	strb	r0, [r2, #0x0]
	mov		r6, #0xfe
	lsl		r6, r6, #0x3
	add		r0, r7, r6
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x1
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x16
	ldr		r3, _08044630
	add		r1, r7, r3
	add		r1, r1, r0
	ldr		r3, [r1, #0x0]
	ldr		r0, [r3, #0x48]
	mov		r1, #0x20
	and		r0, r1
	add		r5, r2, #0x0
	cmp		r0, #0x0
	bne		_08044556
	add		r0, r3, #0x0
	add		r0, #0x7e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xf
	beq		_08044556
	add		r0, r3, #0x0
	add		r0, #0xcc
	ldrh	r0, [r0, #0x0]
	add		r2, r3, #0x0
	add		r2, #0xbc
	cmp		r0, #0x0
	beq		_08044588
_08044556:
	ldr		r0, [r3, #0x48]
	ldr		r1, _08044638
	and		r0, r1
	str		r0, [r3, #0x48]
	add		r2, r3, #0x0
	add		r2, #0xbc
	add		r0, r3, #0x0
	add		r0, #0x50
	mov		r4, #0x0
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	sub		r0, #0x2
	strh	r1, [r0, #0x0]
	str		r1, [r2, #0x0]
	add		r0, #0x7e
	strh	r1, [r0, #0x0]
	add		r1, r3, #0x0
	add		r1, #0x7e
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0xf
	bne		_08044588
	strb	r4, [r1, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x78
	strb	r4, [r0, #0x0]
_08044588:
	ldr		r0, [r3, #0x48]
	mov		r1, #0x88
	lsl		r1, r1, #0x4
	orr		r0, r1
	str		r0, [r3, #0x48]
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_08044676
	add		r0, r3, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08044676
	ldr		r6, _0804463c
	add		r4, r7, r6
	ldr		r0, [r4, #0x0]
	cmp		r0, r3
	bne		_080445de
	ldr		r0, _08044640
	add		r1, r7, r0
	ldr		r2, _08044644
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r6, #0xbb
	lsl		r6, r6, #0x4
	add		r1, r7, r6
	add		r2, #0x4
	add		r0, r7, r2
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r6, #0x14
	add		r0, r7, r6
	ldrh	r1, [r0, #0x0]
	sub		r2, #0xc
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
	add		r6, #0x2
	add		r0, r7, r6
	ldrh	r1, [r0, #0x0]
	add		r2, #0x2
	add		r0, r7, r2
	strh	r1, [r0, #0x0]
_080445de:
	ldr		r1, [r3, #0x48]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_080445f2
	ldr		r0, _08044648
	and		r1, r0
	mov		r0, #0x38
	orr		r1, r0
	str		r1, [r3, #0x48]
_080445f2:
	ldrh	r1, [r3, #0x34]
	ldr		r0, _0804464c
	and		r0, r1
	strh	r0, [r3, #0x34]
	add		r2, r3, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x6
	add		r0, r6, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r0, [r4, #0x0]
	cmp		r3, r0
	bne		_08044618
	mov		r1, #0x12
	ldr		r2, _08044650
	add		r0, r7, r2
	str		r1, [r0, #0x0]
_08044618:
	ldrb	r1, [r5, #0x0]
	mov		r0, #0xf0
	and		r0, r1
	mov		r1, #0x4
	orr		r0, r1
	strb	r0, [r5, #0x0]
	ldr		r1, _08044654
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	str		r0, [r1, #0x0]
	b		_08044676

.incbin "base.gba", 0x4462E, 0x2

_08044630:	.4byte 0x00000C38
_08044634:	.4byte 0x000007D4
_08044638:	.4byte 0xffffdfff
_0804463c:	.4byte 0x00000814
_08044640:	.4byte 0x00000BAC
_08044644:	.4byte 0x00000BBC
_08044648:	.4byte 0xFFFFDFC7
_0804464c:	.4byte 0x0000FFFD
_08044650:	.4byte 0x00000BE4
_08044654:	.4byte 0x03002338

_08044658:
	ldr		r1, _08044668
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0804466c
	sub		r0, #0x1
	str		r0, [r1, #0x0]
	b		_08044676

.incbin "base.gba", 0x44666, 0x2

_08044668:	.4byte 0x03002338

_0804466c:
	mov		r0, #0xf0
	and		r0, r3
	mov		r1, #0x5
	orr		r0, r1
	strb	r0, [r2, #0x0]
_08044676:
	mov		r2, #0x0
	ldr		r3, _080446b4
	add		r0, r7, r3
	ldrb	r6, [r0, #0x0]
	cmp		r2, r6
	bge		_080446a8
	add		r3, r0, #0x0
	ldr		r0, _080446b8
	add		r1, r7, r0
	mov		r5, #0x20
	ldr		r4, _080446bc
_0804468c:
	ldr		r0, [r1, #0x0]
	ldr		r0, [r0, #0x48]
	and		r0, r5
	cmp		r0, #0x0
	beq		_0804469c
	ldr		r0, [r4, #0x0]
	add		r0, #0x1
	str		r0, [r4, #0x0]
_0804469c:
	add		r1, #0x4
	add		r4, #0x4
	add		r2, #0x1
	ldrb	r6, [r3, #0x0]
	cmp		r2, r6
	blt		_0804468c
_080446a8:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080446b4:	.4byte 0x000007D7
_080446b8:	.4byte 0x000007F4
_080446bc:	.4byte 0x03005FE0
	thumb_func_end sub_08044268

	thumb_func_start sub_080446c0
sub_080446c0:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r7, r2, #0x0
	lsl		r1, r1, #0x10
	lsr		r6, r1, #0x10
	add		r4, r5, #0x0
	ldr		r0, _080446f4
	ldr		r1, _080446f8
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_0804476e
	ldr		r2, _080446fc
	add		r0, r4, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	sub		r0, r0, r1
	cmp		r0, #0x30
	bne		_08044704
	ldr		r0, _08044700
	add		r1, r4, r0
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	b		_0804476e

.incbin "base.gba", 0x446F2, 0x2

_080446f4:	.4byte RunGameLogic_CallBack
_080446f8:	.4byte 0x0000080D
_080446fc:	.4byte 0x00000C5E
_08044700:	.4byte 0x000007E9

_08044704:
	cmp		r0, #0x3
	bgt		_08044710
	mov		r1, #0xa0
	lsl		r1, r1, #0x13
	mov		r0, #0x0
	b		_0804476c
_08044710:
	cmp		r0, #0x7
	ble		_08044764
	cmp		r0, #0xb
	bgt		_08044720
	mov		r1, #0xa0
	lsl		r1, r1, #0x13
	mov		r0, #0x0
	b		_0804476c
_08044720:
	cmp		r0, #0xf
	ble		_08044764
	cmp		r0, #0x13
	bgt		_08044730
	mov		r1, #0xa0
	lsl		r1, r1, #0x13
	mov		r0, #0x0
	b		_0804476c
_08044730:
	cmp		r0, #0x17
	ble		_08044764
	cmp		r0, #0x1b
	bgt		_08044740
	mov		r1, #0xa0
	lsl		r1, r1, #0x13
	mov		r0, #0x0
	b		_0804476c
_08044740:
	cmp		r0, #0x1f
	ble		_08044764
	cmp		r0, #0x23
	bgt		_08044750
	mov		r1, #0xa0
	lsl		r1, r1, #0x13
	mov		r0, #0x0
	b		_0804476c
_08044750:
	cmp		r0, #0x27
	ble		_08044764
	cmp		r0, #0x2b
	bgt		_08044760
	mov		r1, #0xa0
	lsl		r1, r1, #0x13
	mov		r0, #0x0
	b		_0804476c
_08044760:
	cmp		r0, #0x2f
	bgt		_0804476e
_08044764:
	mov		r1, #0xa0
	lsl		r1, r1, #0x13
	ldr		r2, _08044784
	add		r0, r2, #0x0
_0804476c:
	strh	r0, [r1, #0x0]
_0804476e:
	ldr		r1, [r4, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080447a8
	mov		r0, #0x2
	and		r1, r0
	cmp		r1, #0x0
	beq		_0804478c
	ldr		r1, _08044788
	b		_080447aa

_08044784:	.4byte 0x00007FFF
_08044788:	.4byte 0x08044AFD

_0804478c:
	add		r0, r4, #0x0
	bl		sub_0802c72c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	ldr		r1, _080447a0
	cmp		r0, #0xe
	bne		_080447aa
	ldr		r1, _080447a4
	b		_080447aa

_080447a0:	.4byte 0x08044A61
_080447a4:	.4byte 0x08044AA9

_080447a8:
	ldr		r1, _080447c4
_080447aa:
	mov		r2, #0xfa
	lsl		r2, r2, #0x3
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	lsl		r1, r6, #0x10
	asr		r1, r1, #0x10
	add		r0, r4, #0x0
	add		r2, r7, #0x0
	bl		sub_0802b914
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080447c4:	.4byte 0x080449D9
	thumb_func_end sub_080446c0

	thumb_func_start sub_080447c8
sub_080447c8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r1, #0x0
	bl		sub_08044894
	ldr		r1, [r0, #0x0]
	ldr		r2, [r0, #0x4]
	add		r0, #0x7c
	mov		r5, #0x80
	lsl		r5, r5, #0x8
	add		r3, r5, #0x0
	ldrh	r0, [r0, #0x0]
	add		r3, r3, r0
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	add		r0, r4, #0x0
	bl		sub_0802c4e0
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x447F2, 0x2
	thumb_func_end sub_080447c8

	thumb_func_start sub_080447f4
sub_080447f4:
	ldr		r2, _08044810
	add		r1, r0, r2
	mov		r2, #0x0
	str		r2, [r1, #0x0]
	mov		r3, #0xfe
	lsl		r3, r3, #0x3
	add		r1, r0, r3
	strb	r2, [r1, #0x0]
	ldr		r1, _08044814
	add		r0, r0, r1
	mov		r1, #0x8
	strb	r1, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x4480E, 0x2

_08044810:	.4byte 0x00000814
_08044814:	.4byte 0x000007F1
	thumb_func_end sub_080447f4

	thumb_func_start sub_08044818
sub_08044818:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	add		r6, r2, #0x0
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r3, r5, r0
	add		r0, #0x1
	add		r1, r5, r0
	ldrb	r0, [r3, #0x0]
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bcs		_0804488c
	ldr		r2, _0804487c
	add		r1, r0, #0x0
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x5
	ldr		r3, _08044880
	add		r0, r0, r3
	add		r4, r0, r2
	lsl		r2, r1, #0x2
	ldr		r3, _08044884
	add		r0, r5, r3
	add		r0, r0, r2
	str		r4, [r0, #0x0]
	add		r0, r4, #0x0
	add		r2, r7, #0x0
	add		r3, r6, #0x0
	bl		sub_08035d4c
	cmp		r6, #0x0
	beq		_0804486a
	ldr		r0, _08044888
	add		r1, r5, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0804486a
	str		r4, [r1, #0x0]
_0804486a:
	mov		r3, #0xfe
	lsl		r3, r3, #0x3
	add		r1, r5, r3
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	mov		r0, #0x1
	b		_0804488e

.incbin "base.gba", 0x4487A, 0x2

_0804487c:	.4byte RunGameLogic_CallBack
_08044880:	.4byte 0x00000D78
_08044884:	.4byte 0x000007F4
_08044888:	.4byte 0x00000814

_0804488c:
	mov		r0, #0x0
_0804488e:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08044818

	thumb_func_start sub_08044894
sub_08044894:
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x16
	ldr		r2, _080448a4
	add		r0, r0, r2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x448A2, 0x2

_080448a4:	.4byte 0x00000C38
	thumb_func_end sub_08044894

	thumb_func_start sub_080448a8
sub_080448a8:
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x16
	ldr		r3, _080448b8
	add		r0, r0, r3
	add		r0, r0, r1
	str		r2, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x448B6, 0x2

_080448b8:	.4byte 0x00000C38
	thumb_func_end sub_080448a8

	thumb_func_start sub_080448bc
sub_080448bc:
	push	{ lr }
	ldr		r1, _080448cc
	add		r0, r0, r1
	bl		sub_08029050
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x448CA, 0x2

_080448cc:	.4byte 0x0000057C
	thumb_func_end sub_080448bc

	thumb_func_start sub_080448d0
sub_080448d0:
	push	{ r4, lr }
	ldr		r4, _080448e0
	add		r0, r0, r4
	bl		sub_0802a73c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_080448e0:	.4byte 0x00000824
	thumb_func_end sub_080448d0

	thumb_func_start sub_080448e4
sub_080448e4:
	push	{ lr }
	add		r0, r1, #0x0
	add		r1, r2, #0x0
	add		r2, r3, #0x0
	ldr		r3, [sp, #0x0+0x4]
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	bl		sub_0802aa88
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x448FA, 0x2
	thumb_func_end sub_080448e4

	thumb_func_start sub_080448fc
sub_080448fc:
	push	{ lr }
	add		r2, r0, #0x0
	add		r3, r1, #0x0
	ldr		r1, _08044920
	add		r0, r2, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08044924
	add		r0, r3, #0x0
	add		r0, #0xba
	ldrb	r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_080441f8
	b		_08044930

_08044920:	.4byte 0x000007DA

_08044924:
	add		r0, r3, #0x0
	add		r0, #0xba
	ldrb	r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_08044164
_08044930:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080448fc

	thumb_func_start sub_08044934
sub_08044934:
	push	{ r4, r5, lr }
	ldr		r5, _08044980
	ldr		r0, _08044984
	add		r4, r5, r0
	add		r0, r4, #0x0
	bl		sub_0802a95c
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		sub_0802a960
	ldr		r2, _08044988
	ldr		r1, _0804498c
	str		r0, [r1, #0x0]
	str		r2, [r1, #0x4]
	ldr		r0, _08044990
	str		r0, [r1, #0x8]
	ldr		r0, [r1, #0x8]
	ldr		r0, _08044994
	mov		r4, #0x2
	strh	r4, [r0, #0x0]
	ldr		r0, _08044998
	add		r5, r5, r0
	ldr		r1, [r5, #0x0]
	cmp		r1, #0x0
	bne		_0804496c
	ldr		r1, _0804499c
_0804496c:
	mov		r0, #0x1
	bl		sub_0807df68
	ldr		r1, _080449a0
	ldrh	r0, [r1, #0x0]
	orr		r0, r4
	strh	r0, [r1, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08044980:	.4byte RunGameLogic_CallBack
_08044984:	.4byte 0x00000848
_08044988:	.4byte BG2Rotation_ScalingParameterA_dx_
_0804498c:	.4byte DMA0SourceAddress
_08044990:	.4byte 0xA6600004
_08044994:	.4byte InterruptRequestFlags_IRQAcknowledge
_08044998:	.4byte 0x000007F4
_0804499c:	.4byte 0x080270F1
_080449a0:	.4byte InterruptEnableRegister
	thumb_func_end sub_08044934

	thumb_func_start sub_080449a4
sub_080449a4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r1, _080449d0
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	bl		sub_0802c6c8
	mov		r2, #0x83
	lsl		r2, r2, #0x8
	add		r1, r2, #0x0
	cmp		r0, #0x0
	beq		_080449c2
	mov		r0, #0x85
	lsl		r0, r0, #0x8
	add		r1, r0, #0x0
_080449c2:
	ldr		r2, _080449d4
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x449CE, 0x2

_080449d0:	.4byte 0x000007DD
_080449d4:	.4byte 0x000007E6
	thumb_func_end sub_080449a4

	thumb_func_start sub_080449d8
sub_080449d8:
	push	{ lr }
	ldr		r0, _08044a34
	ldr		r1, _08044a38
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_080449f4
	mov		r0, #0x0
	bl		sub_08028130
	mov		r1, #0xa0
	lsl		r1, r1, #0x13
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
_080449f4:
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08044a3c
	and		r0, r1
	ldr		r3, _08044a40
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r1, _08044a44
	ldr		r2, _08044a48
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldr		r3, _08044a4c
	add		r0, r3, #0x0
	strh	r0, [r1, #0x0]
	add		r1, #0x44
	ldr		r0, _08044a50
	str		r0, [r1, #0x0]
	ldr		r1, _08044a54
	mov		r0, #0x1
	bl		sub_0807df68
	ldr		r2, _08044a58
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08044a5c
	and		r0, r1
	strh	r0, [r2, #0x0]
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x44A32, 0x2

_08044a34:	.4byte RunGameLogic_CallBack
_08044a38:	.4byte 0x0000080D
_08044a3c:	.4byte 0x0000FFF8
_08044a40:	.4byte 0x00000401
_08044a44:	.4byte BG1Control
_08044a48:	.4byte 0x00002F05
_08044a4c:	.4byte 0x0000F889
_08044a50:	.4byte 0x10082C42
_08044a54:	.4byte 0x080270F1
_08044a58:	.4byte InterruptEnableRegister
_08044a5c:	.4byte 0x0000FFFD
	push	{ lr }
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08044a90
	and		r0, r1
	mov		r1, #0x1
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r1, _08044a94
	ldr		r2, _08044a98
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	ldr		r1, _08044a9c
	mov		r0, #0x1
	bl		sub_0807df68
	ldr		r2, _08044aa0
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08044aa4
	and		r0, r1
	strh	r0, [r2, #0x0]
	pop		{ r0 }
	bx		r0

_08044a90:	.4byte 0x0000FFF8
_08044a94:	.4byte BG2Control
_08044a98:	.4byte 0x0000F889
_08044a9c:	.4byte 0x080270F1
_08044aa0:	.4byte InterruptEnableRegister
_08044aa4:	.4byte 0x0000FFFD
	push	{ lr }
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08044ae0
	and		r0, r1
	mov		r1, #0x1
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r1, _08044ae4
	ldr		r2, _08044ae8
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	add		r1, #0x44
	ldr		r0, _08044aec
	str		r0, [r1, #0x0]
	ldr		r1, _08044af0
	mov		r0, #0x1
	bl		sub_0807df68
	ldr		r2, _08044af4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08044af8
	and		r0, r1
	strh	r0, [r2, #0x0]
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x44ADE, 0x2

_08044ae0:	.4byte 0x0000FFF8
_08044ae4:	.4byte BG2Control
_08044ae8:	.4byte 0x0000F889
_08044aec:	.4byte 0x060D3B44
_08044af0:	.4byte 0x080270F1
_08044af4:	.4byte InterruptEnableRegister
_08044af8:	.4byte 0x0000FFFD
	thumb_func_end sub_080449d8

	thumb_func_start sub_08044afc
sub_08044afc:
	push	{ lr }
	ldr		r0, _08044b48
	ldr		r1, _08044b4c
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_08044b18
	mov		r0, #0x0
	bl		sub_08028130
	mov		r1, #0xa0
	lsl		r1, r1, #0x13
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
_08044b18:
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08044b50
	and		r0, r1
	mov		r1, #0x1
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r1, _08044b54
	ldr		r2, _08044b58
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	ldr		r1, _08044b5c
	mov		r0, #0x1
	bl		sub_0807df68
	ldr		r2, _08044b60
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08044b64
	and		r0, r1
	strh	r0, [r2, #0x0]
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x44B46, 0x2

_08044b48:	.4byte RunGameLogic_CallBack
_08044b4c:	.4byte 0x0000080D
_08044b50:	.4byte 0x0000FFF8
_08044b54:	.4byte BG2Control
_08044b58:	.4byte 0x0000F88B
_08044b5c:	.4byte 0x080270F1
_08044b60:	.4byte InterruptEnableRegister
_08044b64:	.4byte 0x0000FFFD
	add		r2, r0, #0x0
	ldr		r0, [r2, #0xc]
	cmp		r0, #0x0
	beq		_08044b76
	sub		r0, #0x1
	str		r0, [r2, #0xc]
	b		_08044b84
_08044b76:
	str		r0, [r2, #0x2c]
	ldrb	r0, [r2, #0x10]
	mov		r1, #0x5
	orr		r1, r0
	strb	r1, [r2, #0x10]
	ldr		r0, _08044b88
	str		r0, [r2, #0x0]
_08044b84:
	bx		lr

.incbin "base.gba", 0x44B86, 0x2

_08044b88:	.4byte sub_08044b8c
	thumb_func_end sub_08044afc

	thumb_func_start sub_08044b8c
sub_08044b8c:
	push	{ r4, lr }
	add		r2, r0, #0x0
	ldr		r1, [r2, #0x2c]
	ldr		r3, _08044be0
	mov		r4, #0x2c
	ldrsh	r0, [r2, r4]
	cmp		r0, #0x0
	bge		_08044b9e
	add		r0, #0x3f
_08044b9e:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08044bb0
	ldr		r3, _08044be4
	add		r0, r0, r3
_08044bb0:
	asr		r3, r0, #0xd
	ldr		r0, _08044be8
	cmp		r1, r0
	ble		_08044bc0
	mov		r0, #0x78
	str		r0, [r2, #0xc]
	ldr		r0, _08044bec
	str		r0, [r2, #0x0]
_08044bc0:
	ldrh	r0, [r2, #0x16]
	sub		r0, r0, r3
	strh	r0, [r2, #0x16]
	mov		r4, #0x80
	lsl		r4, r4, #0x4
	add		r0, r1, r4
	str		r0, [r2, #0x2c]
	asr		r1, r1, #0x8
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	sub		r0, r0, r1
	str		r0, [r2, #0x1c]
	str		r0, [r2, #0x20]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08044be0:	.4byte 0x08101068
_08044be4:	.4byte 0x00001FFF
_08044be8:	.4byte 0x0000FFFF
_08044bec:	.4byte 0x08044bf1
	add		r1, r0, #0x0
	ldr		r0, [r1, #0xc]
	cmp		r0, #0x0
	beq		_08044bfe
	sub		r0, #0x1
	str		r0, [r1, #0xc]
	b		_08044c04
_08044bfe:
	str		r0, [r1, #0x2c]
	ldr		r0, _08044c08
	str		r0, [r1, #0x0]
_08044c04:
	bx		lr

.incbin "base.gba", 0x44C06, 0x2

_08044c08:	.4byte sub_08044c0c
	thumb_func_end sub_08044b8c

	thumb_func_start sub_08044c0c
sub_08044c0c:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x2c]
	ldr		r1, _08044c68
	mov		r2, #0x2c
	ldrsh	r0, [r4, r2]
	cmp		r0, #0x0
	bge		_08044c1e
	add		r0, #0x3f
_08044c1e:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08044c30
	ldr		r1, _08044c6c
	add		r0, r0, r1
_08044c30:
	asr		r6, r0, #0xd
	ldr		r0, _08044c70
	cmp		r5, r0
	ble		_08044c46
	ldr		r0, _08044c74
	mov		r2, #0xea
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	add		r1, r4, #0x0
	bl		sub_08054ed0
_08044c46:
	ldrh	r0, [r4, #0x16]
	sub		r0, r0, r6
	strh	r0, [r4, #0x16]
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	add		r0, r5, r1
	str		r0, [r4, #0x2c]
	asr		r0, r5, #0x8
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r0, r2
	str		r0, [r4, #0x1c]
	str		r0, [r4, #0x20]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x44C66, 0x2

_08044c68:	.4byte 0x08101068
_08044c6c:	.4byte 0x00001FFF
_08044c70:	.4byte 0x0000FFFF
_08044c74:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_08044c0c

	thumb_func_start sub_08044c78
sub_08044c78:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	mov		r8, r2
	ldr		r1, _08044cdc
	add		r0, r6, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08044ce4
	ldr		r2, _08044ce0
	add		r0, r6, r2
	ldrb	r5, [r0, #0x0]
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_0802c5d0
	add		r4, r0, #0x0
	lsl		r4, r4, #0x3
	lsl		r0, r7, #0x10
	asr		r0, r0, #0x10
	sub		r4, r4, r0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_0802c610
	add		r1, r0, #0x0
	lsl		r1, r1, #0x3
	mov		r2, r8
	lsl		r0, r2, #0x10
	asr		r0, r0, #0x10
	sub		r1, r1, r0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	add		r0, r4, #0x0
	bl		sub_08028738
	b		_08044cf6

_08044cdc:	.4byte 0x00000BA8
_08044ce0:	.4byte 0x00000BAA

_08044ce4:
	lsl		r1, r7, #0x10
	asr		r1, r1, #0x10
	mov		r0, r8
	lsl		r2, r0, #0x10
	asr		r2, r2, #0x10
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_0802c35c
_08044cf6:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08044c78

	thumb_func_start sub_08044d08
sub_08044d08:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r7, r0, #0x0
	ldr		r0, _08044da0
	add		r0, r0, r7
	mov		r8, r0
	str		r7, [sp, #0x0]
	ldr		r4, [r0, #0x18]
	cmp		r4, #0x0
	bge		_08044d28
	ldr		r1, _08044da4
	add		r4, r4, r1
_08044d28:
	lsr		r4, r4, #0x10
	mov		r0, r8
	ldr		r2, [r0, #0x1c]
	cmp		r2, #0x0
	bge		_08044d36
	ldr		r1, _08044da4
	add		r2, r2, r1
_08044d36:
	ldr		r1, _08044da8
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	mov		r10, r0
	lsl		r4, r4, #0x10
	asr		r1, r4, #0x10
	lsr		r0, r2, #0x10
	str		r0, [sp, #0x4]
	asr		r2, r2, #0x10
	add		r0, r7, #0x0
	mov		r3, #0x0
	bl		sub_0802c3d4
	add		r6, r0, #0x0
	mov		r0, #0x7f
	and		r6, r0
	ldr		r1, _08044dac
	add		r0, r7, r1
	ldrh	r5, [r0, #0x0]
	mov		r0, #0x2
	mov		r9, r0
	mov		r0, #0x2
	and		r5, r0
	lsl		r0, r5, #0x10
	lsr		r5, r0, #0x10
	str		r4, [sp, #0x8]
	cmp		r6, #0x7f
	beq		_08044d92
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_0802c650
	mov		r1, #0x80
	and		r1, r0
	cmp		r1, #0x0
	beq		_08044db4
	mov		r0, r10
	ldr		r1, [r0, #0x8]
	mov		r2, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	cmp		r1, r0
	ble		_08044d8e
	mov		r2, #0x1
_08044d8e:
	cmp		r2, #0x0
	beq		_08044db4
_08044d92:
	mov		r1, r9
	orr		r5, r1
	lsl		r0, r5, #0x10
	lsr		r5, r0, #0x10
	ldr		r0, _08044db0
	add		r6, r7, r0
	b		_08044dbc

_08044da0:	.4byte 0x00000824
_08044da4:	.4byte 0x0000FFFF
_08044da8:	.4byte 0x00000814
_08044dac:	.4byte 0x00000BA8
_08044db0:	.4byte 0x00000BAA

_08044db4:
	ldr		r0, _08044dfc
	add		r0, r8
	strb	r6, [r0, #0x0]
	add		r6, r0, #0x0
_08044dbc:
	mov		r0, #0xe1
	lsl		r0, r0, #0x2
	add		r0, r8
	strh	r5, [r0, #0x0]
	mov		r1, r8
	ldrh	r4, [r1, #0x14]
	ldr		r0, [sp, #0x8]
	asr		r1, r0, #0x10
	ldr		r0, [sp, #0x4]
	lsl		r2, r0, #0x10
	asr		r2, r2, #0x10
	add		r0, r7, #0x0
	bl		sub_08044c78
	ldr		r1, _08044e00
	add		r3, r7, r1
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x10
	lsl		r4, r4, #0x10
	asr		r0, r4, #0x10
	sub		r2, r1, r0
	cmp		r2, #0x0
	blt		_08044e04
	mov		r1, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	cmp		r2, r0
	ble		_08044df6
	mov		r1, #0x1
_08044df6:
	str		r1, [r3, #0x0]
	b		_08044e14

.incbin "base.gba", 0x44DFA, 0x2

_08044dfc:	.4byte 0x00000386
_08044e00:	.4byte 0x00000BE8

_08044e04:
	mov		r2, #0x0
	sub		r1, r0, r1
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	cmp		r1, r0
	ble		_08044e12
	mov		r2, #0x1
_08044e12:
	str		r2, [r3, #0x0]
_08044e14:
	ldrb	r2, [r6, #0x0]
	ldr		r1, _08044e3c
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08044e40
	sub		r3, r2, #0x6
	add		r4, r2, #0x0
	add		r4, #0x8
	ldr		r0, [sp, #0x0]
	ldrh	r1, [r0, #0x14]
	cmp		r3, #0x0
	bge		_08044e32
	sub		r0, r2, #0x5
	add		r3, r0, r1
_08044e32:
	cmp		r4, r1
	ble		_08044e5a
	add		r0, r2, #0x7
	b		_08044e58

.incbin "base.gba", 0x44E3A, 0x2

_08044e3c:	.4byte 0x00000BE8

_08044e40:
	add		r3, r2, #0x0
	sub		r3, #0x8
	add		r4, r2, #0x6
	ldr		r0, [sp, #0x0]
	ldrh	r1, [r0, #0x14]
	cmp		r3, #0x0
	bge		_08044e52
	sub		r0, r2, #0x7
	add		r3, r0, r1
_08044e52:
	cmp		r4, r1
	ble		_08044e5a
	add		r0, r2, #0x5
_08044e58:
	sub		r4, r0, r1
_08044e5a:
	ldr		r1, _08044e78
	add		r0, r7, r1
	strb	r3, [r0, #0x0]
	add		r1, #0x1
	add		r0, r7, r1
	strb	r4, [r0, #0x0]
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x44E76, 0x2

_08044e78:	.4byte 0x00000BEC
	thumb_func_end sub_08044d08

	thumb_func_start sub_08044e7c
sub_08044e7c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x30
	add		r7, r0, #0x0
	ldr		r0, _08044eb4
	add		r0, r7, r0
	str		r0, [sp, #0x18]
	ldr		r1, _08044eb8
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	mov		r9, r0
	ldr		r2, [sp, #0x18]
	mov		r10, r2
	ldr		r3, _08044ebc
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x12
	bls		_08044eaa
	bl		sub_080459d0
_08044eaa:
	lsl		r0, r0, #0x2
	ldr		r1, _08044ec0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08044eb4:	.4byte 0x00000824
_08044eb8:	.4byte 0x00000814
_08044ebc:	.4byte 0x00000BE4
_08044ec0:	.4byte 0x08044ec4
_08044ec4:	.4byte 0x08044f10

.incbin "base.gba", 0x44EC8, 0x48
	thumb_func_end sub_08044e7c


.incbin "base.gba", 0x44F10, 0xA0
_08044fb0:	.4byte 0x08044fc8

.incbin "base.gba", 0x44FB4, 0xA1C
	thumb_func_start sub_080459d0
sub_080459d0:
	add		sp, #0x30
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x459E0, 0x10
	thumb_func_end sub_080459d0

	thumb_func_start sub_080459f0
sub_080459f0:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r6, r0, #0x0
	ldr		r0, _08045a5c
	add		r4, r6, r0
	ldr		r1, _08045a60
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	add		r0, r4, #0x0
	bl		sub_0802a980
	ldr		r5, _08045a64
	ldrh	r2, [r5, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x78
	bl		sub_0802aa20
	ldrh	r1, [r5, #0x4]
	add		r0, r4, #0x0
	bl		sub_0802a990
	ldrh	r1, [r5, #0x2]
	add		r0, r4, #0x0
	bl		sub_0802a9a0
	ldrh	r1, [r5, #0x6]
	add		r0, r4, #0x0
	bl		sub_0802a9b0
	mov		r0, r8
	add		r0, #0x7c
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0802a9cc
	mov		r0, r8
	ldr		r1, [r0, #0x0]
	ldr		r2, [r0, #0x4]
	add		r0, r4, #0x0
	bl		sub_0802a9e8
	add		r0, r4, #0x0
	bl		sub_0802ac00
	add		r6, #0xbc
	ldrh	r0, [r5, #0x8]
	str		r0, [r6, #0x3c]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08045a5c:	.4byte 0x00000824
_08045a60:	.4byte 0x00000814
_08045a64:	.4byte 0x08108940
	thumb_func_end sub_080459f0

	thumb_func_start sub_08045a68
sub_08045a68:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r0, _08045a98
	add		r4, r5, r0
	add		r0, r5, #0x0
	bl		sub_08044d08
	add		r0, r5, #0x0
	bl		sub_08044e7c
	add		r0, r4, #0x0
	bl		sub_0802addc
	ldr		r1, [r4, #0x18]
	ldr		r2, [r4, #0x1c]
	mov		r0, #0x14
	ldrsh	r3, [r4, r0]
	add		r0, r5, #0x0
	bl		sub_0802c518
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x45A96, 0x2

_08045a98:	.4byte 0x00000824
	thumb_func_end sub_08045a68

	thumb_func_start sub_08045a9c
sub_08045a9c:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r3, r1, #0x18
	add		r4, r3, #0x0
	ldr		r1, _08045ad0
	add		r0, r2, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	bne		_08045ae4
	ldr		r5, _08045ad4
	add		r0, r2, r5
	add		r5, #0x1
	add		r1, r2, r5
	ldrb	r2, [r0, #0x0]
	ldrb	r0, [r1, #0x0]
	cmp		r2, r0
	bhi		_08045ad8
	cmp		r3, r2
	bcc		_08045ae0
	cmp		r3, r0
	bhi		_08045ae0
	b		_08045ae4

_08045ad0:	.4byte 0x000007DA
_08045ad4:	.4byte 0x00000BEC

_08045ad8:
	cmp		r4, r2
	bcs		_08045ae4
	cmp		r4, r0
	bls		_08045ae4
_08045ae0:
	mov		r0, #0x0
	b		_08045ae6
_08045ae4:
	mov		r0, #0x1
_08045ae6:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08045a9c

	thumb_func_start sub_08045aec
sub_08045aec:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _08045b3c
	mov		r1, #0x0
	strb	r1, [r0, #0x2]
	ldr		r2, _08045b40
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	add		r2, #0x2
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	sub		r2, #0xa
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	add		r2, #0x2
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	add		r2, #0x2
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	add		r2, #0x8
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	ldr		r0, _08045b44
	ldr		r1, _08045b48
	mov		r2, #0x10
	bl		sub_08071b6c
	add		r0, r4, #0x0
	bl		sub_0802c72c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x12
	bhi		_08045bea
	lsl		r0, r0, #0x2
	ldr		r1, _08045b4c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08045b3c:	.4byte 0x03006D70
_08045b40:	.4byte 0x00000C7C
_08045b44:	.4byte 0x0810894c
_08045b48:	.4byte 0x03002368
_08045b4c:	.4byte 0x08045b50
_08045b50:	.4byte 0x08045bc8

.incbin "base.gba", 0x45B54, 0x48
	thumb_func_end sub_08045aec


.incbin "base.gba", 0x45B9C, 0x4E

_08045bea:

.incbin "base.gba", 0x45BEA, 0xA
	thumb_func_start sub_08045bf4
sub_08045bf4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r2, r0, #0x0
	add		r3, r1, #0x0
	ldr		r0, _08045c30
	add		r4, r2, r0
	ldr		r7, [r4, #0x18]
	ldr		r1, [r4, #0x1c]
	mov		r12, r1
	ldr		r1, _08045c34
	add		r0, r2, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0xf
	and		r0, r1
	cmp		r0, #0x3
	bne		_08045c3c
	ldr		r1, _08045c38
	add		r0, r2, r1
	ldr		r2, [r0, #0x0]
	ldr		r0, [r2, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08045c3c
	add		r0, r2, #0x0
	add		r0, #0xbc
	ldr		r5, [r0, #0x0]
	b		_08045c3e

.incbin "base.gba", 0x45C2E, 0x2

_08045c30:	.4byte 0x00000824
_08045c34:	.4byte 0x000007D4
_08045c38:	.4byte 0x00000814

_08045c3c:
	mov		r5, #0x0
_08045c3e:
	mov		r0, #0x14
	ldrsh	r2, [r4, r0]
	mov		r8, r2
	ldrh	r1, [r3, #0x10]
	mov		r2, #0xf0
	lsl		r2, r2, #0x8
	and		r2, r1
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	cmp		r2, r0
	beq		_08045c5e
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	cmp		r2, r0
	beq		_08045c6e
	b		_08045c8e
_08045c5e:
	ldr		r2, [r3, #0x0]
	ldr		r1, [r3, #0x4]
	add		r0, r3, #0x0
	add		r0, #0x7a
	ldrh	r6, [r0, #0x0]
	add		r0, #0x42
	ldr		r4, [r0, #0x0]
	b		_08045c92
_08045c6e:
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	and		r1, r0
	mov		r0, #0x84
	lsl		r0, r0, #0x8
	cmp		r1, r0
	bne		_08045c8e
	ldr		r2, [r3, #0x0]
	ldr		r1, [r3, #0x4]
	mov		r0, #0x26
	ldrsh	r6, [r3, r0]
	add		r0, r3, #0x0
	add		r0, #0x71
	ldrb	r0, [r0, #0x0]
	lsl		r4, r0, #0x4
	b		_08045c92
_08045c8e:
	mov		r0, #0x0
	b		_08045d36
_08045c92:
	sub		r0, r7, r2
	cmp		r0, #0x0
	bge		_08045c9c
	ldr		r2, _08045d40
	add		r0, r0, r2
_08045c9c:
	asr		r0, r0, #0x14
	mov		r2, r12
	sub		r1, r2, r1
	cmp		r1, #0x0
	bge		_08045caa
	ldr		r2, _08045d40
	add		r1, r1, r2
_08045caa:
	asr		r1, r1, #0x14
	bl		sub_08028738
	lsl		r0, r0, #0x10
	add		r1, r4, #0x0
	cmp		r4, #0x0
	bge		_08045cbc
	ldr		r2, _08045d44
	add		r1, r4, r2
_08045cbc:
	asr		r4, r1, #0x17
	cmp		r4, #0x10
	ble		_08045cc4
	mov		r4, #0x10
_08045cc4:
	asr		r2, r0, #0x10
	lsl		r0, r6, #0x10
	asr		r0, r0, #0x10
	sub		r0, r2, r0
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08045cd6
	neg		r0, r0
_08045cd6:
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r3, #0x80
	lsl		r3, r3, #0x7
	mov		r1, #0x0
	cmp		r0, r3
	bgt		_08045ce6
	mov		r1, #0x1
_08045ce6:
	cmp		r1, #0x0
	bne		_08045cec
	neg		r4, r4
_08045cec:
	add		r0, r5, #0x0
	cmp		r5, #0x0
	bge		_08045cf6
	ldr		r1, _08045d44
	add		r0, r5, r1
_08045cf6:
	asr		r5, r0, #0x17
	cmp		r5, #0x10
	ble		_08045cfe
	mov		r5, #0x10
_08045cfe:
	mov		r1, r8
	sub		r0, r2, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08045d0c
	neg		r0, r0
_08045d0c:
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r1, #0x0
	cmp		r0, r3
	bgt		_08045d18
	mov		r1, #0x1
_08045d18:
	cmp		r1, #0x0
	bne		_08045d1e
	neg		r5, r5
_08045d1e:
	ldr		r3, _08045d48
	add		r2, r4, #0x0
	add		r2, #0x10
	add		r1, r5, #0x0
	add		r1, #0x10
	lsl		r0, r1, #0x5
	add		r0, r0, r1
	add		r0, r0, r2
	lsl		r0, r0, #0x1
	add		r0, r0, r3
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
_08045d36:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08045d40:	.4byte 0x000FFFFF
_08045d44:	.4byte 0x007FFFFF
_08045d48:	.4byte 0x0810896c
	thumb_func_end sub_08045bf4

	thumb_func_start sub_08045d4c
sub_08045d4c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	mov		r8, r0
	ldr		r0, _08045e20
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r9, r0
	ldr		r0, _08045e24
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	mov		r1, #0xf
	and		r1, r0
	str		r1, [sp, #0x8]
	ldr		r0, _08045e28
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	mov		r2, #0xf0
	lsl		r2, r2, #0x4
	mov		r10, r2
	mov		r3, r10
	and		r3, r0
	mov		r10, r3
	ldr		r0, _08045e28
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	mov		r1, #0x1
	and		r1, r0
	cmp		r1, #0x0
	beq		_08045d92
	bl		sub_08046668
_08045d92:
	ldr		r2, _08045e2c
	ldrb	r0, [r2, #0x2]
	cmp		r0, #0x0
	beq		_08045da2
	strb	r1, [r2, #0x2]
	mov		r0, #0x1c
	bl		sub_0807073c
_08045da2:
	mov		r0, r9
	add		r0, #0x78
	str		r0, [sp, #0x14]
	ldr		r1, [sp, #0x8]
	cmp		r1, #0x4
	ble		_08045db0
	b		_08045f90
_08045db0:
	cmp		r1, #0x3
	bge		_08045db6
	b		_08045f62
_08045db6:
	mov		r2, r9
	ldr		r1, [r2, #0x48]
	mov		r0, #0x28
	and		r0, r1
	cmp		r0, #0x28
	beq		_08045dc4
	b		_08045f62
_08045dc4:
	mov		r6, #0x0
	mov		r0, #0x9
	neg		r0, r0
	and		r1, r0
	str		r1, [r2, #0x48]
	ldr		r5, _08045e30
	ldr		r0, _08045e34
	ldrh	r1, [r0, #0x2c]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_08070f0c
	mov		r4, #0x5
	ldr		r0, _08045e38
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	ldr		r3, _08045e3c
	add		r3, r8
	str		r3, [sp, #0x10]
	cmp		r4, r0
	bge		_08045e0a
	add		r7, r0, #0x0
	add		r5, #0x3c
_08045df8:
	cmp		r4, #0x8
	beq		_08045e02
	ldr		r0, [r5, #0x0]
	bl		sub_08070f0c
_08045e02:
	add		r5, #0xc
	add		r4, #0x1
	cmp		r4, r7
	blt		_08045df8
_08045e0a:
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r10, r0
	beq		_08045e98
	cmp		r10, r0
	bgt		_08045e40
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r10, r0
	beq		_08045e52
	b		_08045f32

_08045e20:	.4byte 0x00000814
_08045e24:	.4byte 0x000007D4
_08045e28:	.4byte 0x000007DA
_08045e2c:	.4byte 0x03006D70
_08045e30:	.4byte 0x08124544
_08045e34:	.4byte 0x081245c8
_08045e38:	.4byte 0x0000000B
_08045e3c:	.4byte 0x00000C88

_08045e40:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r10, r0
	beq		_08045f14
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r10, r0
	beq		_08045ef8
	b		_08045f32
_08045e52:
	mov		r0, r9
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r2, r0, #0x1
	ldr		r0, _08045e78
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_08045e84
	ldr		r6, _08045e7c
	cmp		r2, #0x3
	bgt		_08045f32
	ldr		r6, _08045e80
	cmp		r2, #0x0
	ble		_08045f32
	b		_08045f30

.incbin "base.gba", 0x45E76, 0x2

_08045e78:	.4byte 0x000007DA
_08045e7c:	.4byte 0x08109230
_08045e80:	.4byte 0x081091f0

_08045e84:
	ldr		r6, _08045e90
	cmp		r2, #0x0
	bne		_08045f32
_08045e8a:
	ldr		r6, _08045e94
	b		_08045f32

.incbin "base.gba", 0x45E8E, 0x2

_08045e90:	.4byte 0x08109210
_08045e94:	.4byte 0x081091f0

_08045e98:
	ldr		r0, _08045eec
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_08045f30
	mov		r7, #0x0
	mov		r0, r9
	bl		sub_080374cc
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	add		r2, sp, #0x4
	mov		r0, r9
	mov		r1, sp
	bl		sub_0801ce24
	ldr		r5, _08045ef0
	add		r5, r8
	ldrb	r0, [r5, #0x0]
	mov		r1, #0x0
	add		r2, r4, #0x0
	bl		sub_08057224
	cmp		r0, #0x0
	bne		_08045ee2
	ldr		r1, [sp, #0x4]
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	ldrb	r0, [r5, #0x0]
	bl		sub_0805729c
	cmp		r0, #0x0
	beq		_08045ee4
_08045ee2:
	mov		r7, #0x1
_08045ee4:
	ldr		r6, _08045ef4
	cmp		r7, #0x0
	beq		_08045f32
	b		_08045e8a

_08045eec:	.4byte 0x000007DA
_08045ef0:	.4byte 0x000007DD
_08045ef4:	.4byte 0x08109210

_08045ef8:
	mov		r0, r9
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x1
	cmp		r0, #0x0
	bne		_08045f0c
	mov		r0, #0x21
	bl		sub_0807073c
	b		_08045f32
_08045f0c:
	mov		r0, #0x22
	bl		sub_0807073c
	b		_08045f32
_08045f14:
	mov		r0, r9
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r1, r0, #0x1
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	cmp		r1, #0x0
	beq		_08045e8a
	sub		r0, #0x1
	ldr		r6, _08045f80
	cmp		r1, r0
	bge		_08045f32
_08045f30:
	ldr		r6, _08045f84
_08045f32:
	ldr		r1, [sp, #0x10]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bge		_08045f54
	mov		r0, r9
	bl		sub_080374cc
	add		r1, r0, #0x0
	ldr		r0, _08045f88
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08069544
	ldr		r6, _08045f84
	cmp		r0, #0x0
	beq		_08045f54
	ldr		r6, _08045f8c
_08045f54:
	cmp		r6, #0x0
	beq		_08045f62
	mov		r0, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x0
	bl		sub_08029d24
_08045f62:
	ldr		r2, [sp, #0x8]
	cmp		r2, #0x4
	bgt		_08045f90
	cmp		r2, #0x2
	blt		_08045f74
	mov		r0, r9
	mov		r1, r8
	bl		sub_0803ac38
_08045f74:
	ldr		r3, [sp, #0x8]
	cmp		r3, #0x3
	bge		_08045fa4
	cmp		r3, #0x2
	beq		_08045f9a
	b		_08046360

_08045f80:	.4byte 0x08109250
_08045f84:	.4byte 0x08109210
_08045f88:	.4byte 0x02022400
_08045f8c:	.4byte 0x081091f0

_08045f90:
	ldr		r0, [sp, #0x8]
	cmp		r0, #0x5
	bne		_08045f98
	b		_0804633c
_08045f98:
	b		_08046360
_08045f9a:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r10, r0
	bne		_08045fa4
	b		_08046360
_08045fa4:
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r10, r0
	bne		_08045fec
	mov		r1, r9
	ldr		r0, [r1, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08045fec
	ldr		r1, _08045fe0
	add		r1, r8
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08045fc4
	b		_08046360
_08045fc4:
	ldr		r3, _08045fe4
	ldr		r2, _08045fe8
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, [r2, #0x8]
	bl		sub_08070e28
	b		_08046360

_08045fe0:	.4byte 0x00000C74
_08045fe4:	.4byte 0x08124544
_08045fe8:	.4byte 0x081245c8

_08045fec:
	ldr		r0, _080460e4
	add		r0, r8
	mov		r6, #0x0
	ldr		r7, [r0, #0x18]
	ldr		r0, [r0, #0x1c]
	mov		r10, r0
	mov		r5, #0x80
	lsl		r5, r5, #0x7
	mov		r4, #0x0
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	cmp		r6, r0
	bge		_0804605c
_0804600a:
	lsl		r1, r4, #0x18
	lsr		r1, r1, #0x18
	mov		r0, r8
	bl		sub_08044894
	add		r2, r0, #0x0
	cmp		r2, r9
	beq		_0804604e
	ldr		r0, [r2, #0x0]
	sub		r1, r7, r0
	cmp		r1, #0x0
	bge		_08046026
	ldr		r3, _080460e8
	add		r1, r1, r3
_08046026:
	asr		r1, r1, #0x10
	ldr		r0, [r2, #0x4]
	mov		r3, r10
	sub		r0, r3, r0
	cmp		r0, #0x0
	bge		_08046036
	ldr		r3, _080460e8
	add		r0, r0, r3
_08046036:
	asr		r0, r0, #0x10
	add		r3, r1, #0x0
	mul		r3, r1
	add		r1, r3, #0x0
	add		r3, r0, #0x0
	mul		r3, r0
	add		r0, r3, #0x0
	add		r0, r1, r0
	cmp		r0, r5
	bge		_0804604e
	add		r6, r2, #0x0
	add		r5, r0, #0x0
_0804604e:
	add		r4, #0x1
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	blt		_0804600a
_0804605c:
	cmp		r6, #0x0
	bne		_08046062
	b		_080462f4
_08046062:
	ldr		r1, _080460ec
	add		r1, r8
	ldr		r0, [r1, #0x0]
	cmp		r6, r0
	beq		_08046076
	str		r6, [r1, #0x0]
	ldr		r1, _080460f0
	add		r1, r8
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
_08046076:
	ldr		r2, _080460f4
	add		r3, r6, #0x0
	add		r3, #0x4c
	ldrb	r1, [r3, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r0, r0, #0x1
	add		r0, r0, r2
	ldrh	r2, [r0, #0x0]
	ldr		r4, _080460f8
	add		r4, r8
	strh	r2, [r4, #0x0]
	ldr		r0, [r6, #0x0]
	sub		r1, r7, r0
	str		r3, [sp, #0x18]
	cmp		r1, #0x0
	bge		_0804609c
	ldr		r0, _080460e8
	add		r1, r1, r0
_0804609c:
	asr		r1, r1, #0x10
	ldr		r0, [r6, #0x4]
	mov		r3, r10
	sub		r0, r3, r0
	cmp		r0, #0x0
	bge		_080460ac
	ldr		r3, _080460e8
	add		r0, r0, r3
_080460ac:
	asr		r0, r0, #0x10
	add		r3, r1, #0x0
	mul		r3, r1
	add		r1, r3, #0x0
	add		r3, r0, #0x0
	mul		r3, r0
	add		r0, r3, #0x0
	add		r5, r1, r0
	ldr		r0, _080460fc
	cmp		r5, r0
	ble		_080460c4
	b		_080462dc
_080460c4:
	mov		r0, r8
	add		r1, r6, #0x0
	bl		sub_08045bf4
	lsl		r0, r0, #0x10
	asr		r4, r0, #0x10
	ldr		r0, [r6, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	and		r0, r1
	cmp		r0, #0x0
	beq		_08046100
	add		r0, r6, #0x0
	bl		sub_0803abc4
	b		_08046106

_080460e4:	.4byte 0x00000824
_080460e8:	.4byte 0x0000FFFF
_080460ec:	.4byte 0x00000C78
_080460f0:	.4byte 0x00000C76
_080460f4:	.4byte 0x081077c4
_080460f8:	.4byte 0x00000C74
_080460fc:	.4byte 0x00003FFF

_08046100:
	add		r0, r6, #0x0
	bl		sub_0803ab38
_08046106:
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	add		r0, r0, r4
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	str		r0, [sp, #0xC]
	lsl		r0, r0, #0x10
	asr		r7, r0, #0x10
	add		r0, r6, #0x0
	add		r1, r7, #0x0
	bl		sub_0803b3c4
	add		r3, r0, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	sub		r1, r0, r5
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08046130
	ldr		r2, _08046188
	add		r0, r1, r2
_08046130:
	asr		r0, r0, #0xb
	lsl		r2, r0, #0x3
	add		r0, r1, #0x0
	cmp		r0, #0x0
	bge		_0804613c
	add		r0, #0x7f
_0804613c:
	asr		r1, r0, #0x7
	lsl		r0, r3, #0x10
	lsr		r0, r0, #0x10
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0804614a
	add		r0, #0xff
_0804614a:
	asr		r0, r0, #0x8
	add		r0, r2, r0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r10, r0
	ldr		r3, [sp, #0x18]
	ldrb	r1, [r3, #0x0]
	mov		r2, #0x8
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804621c
	mov		r1, r9
	ldr		r0, [r1, #0x8]
	cmp		r0, #0x0
	beq		_0804616c
	b		_08046360
_0804616c:
	mov		r3, #0xcd
	lsl		r3, r3, #0x1
	add		r0, r6, r3
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08046190
	ldr		r1, _0804618c
	add		r1, r8
	mov		r0, #0x64
	strh	r0, [r1, #0x0]
	b		_080461b2

.incbin "base.gba", 0x46186, 0x2

_08046188:	.4byte 0x000007FF
_0804618c:	.4byte 0x00000C74

_08046190:
	add		r0, r2, #0x0
	and		r0, r1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x0
	beq		_080461ac
	ldr		r1, _080461a8
	add		r1, r8
	mov		r0, #0x63
	strh	r0, [r1, #0x0]
	b		_080461b2

.incbin "base.gba", 0x461A6, 0x2

_080461a8:	.4byte 0x00000C74

_080461ac:
	ldr		r0, _08046210
	add		r0, r8
	strh	r1, [r0, #0x0]
_080461b2:
	ldr		r1, _08046210
	add		r1, r8
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_080461be
	b		_08046360
_080461be:
	add		r4, r0, #0x0
	ldr		r0, [sp, #0xC]
	lsl		r5, r0, #0x10
	asr		r5, r5, #0x10
	add		r0, r4, #0x0
	bl		sub_0807073c
	ldr		r6, _08046214
	ldr		r0, _08046218
	lsl		r4, r4, #0x3
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	mov		r2, r10
	bl		sub_0807169c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r5, #0x0
	bl		sub_08071704
	b		_08046360

.incbin "base.gba", 0x4620E, 0x2

_08046210:	.4byte 0x00000C74
_08046214:	.4byte 0x08124544
_08046218:	.4byte 0x081245c8

_0804621c:
	ldr		r0, _08046274
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08046284
	ldr		r0, _08046278
	add		r0, r8
	ldrh	r4, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0807073c
	ldr		r5, _0804627c
	ldr		r0, _08046280
	lsl		r4, r4, #0x3
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	mov		r2, r10
	bl		sub_0807169c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	add		r2, r7, #0x0
	mov		r1, #0x1
	bl		sub_08071704
	b		_080462c0

_08046274:	.4byte 0x00000C76
_08046278:	.4byte 0x00000C74
_0804627c:	.4byte 0x08124544
_08046280:	.4byte 0x081245c8

_08046284:
	ldr		r5, _080462cc
	add		r5, r8
	ldrh	r0, [r5, #0x0]
	ldr		r6, _080462d0
	ldr		r4, _080462d4
	lsl		r0, r0, #0x3
	add		r0, r0, r4
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	mov		r2, r10
	bl		sub_0807169c
	ldrh	r0, [r5, #0x0]
	lsl		r0, r0, #0x3
	add		r0, r0, r4
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	add		r2, r7, #0x0
	mov		r1, #0x1
	bl		sub_08071704
_080462c0:
	ldr		r1, _080462d8
	add		r1, r8
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	b		_08046360

.incbin "base.gba", 0x462CA, 0x2

_080462cc:	.4byte 0x00000C74
_080462d0:	.4byte 0x08124544
_080462d4:	.4byte 0x081245c8
_080462d8:	.4byte 0x00000C76

_080462dc:
	ldr		r0, _080462f0
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08046322
	cmp		r2, #0x0
	beq		_08046322
	ldrh	r0, [r4, #0x0]
	b		_08046308

.incbin "base.gba", 0x462EE, 0x2

_080462f0:	.4byte 0x00000C76

_080462f4:
	ldr		r0, _0804632c
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08046322
	ldr		r1, _08046330
	add		r1, r8
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08046322
_08046308:
	ldr		r3, _08046334
	ldr		r2, _08046338
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, [r2, #0x8]
	bl		sub_08070e28
_08046322:
	ldr		r1, _0804632c
	add		r1, r8
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	b		_08046360

_0804632c:	.4byte 0x00000C76
_08046330:	.4byte 0x00000C74
_08046334:	.4byte 0x08124544
_08046338:	.4byte 0x081245c8

_0804633c:
	ldr		r1, _08046444
	add		r1, r8
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08046360
	ldr		r3, _08046448
	ldr		r2, _0804644c
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, [r2, #0x8]
	bl		sub_08070e28
_08046360:
	ldr		r1, [sp, #0x14]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x4
	bne		_0804636a
	b		_080465e0
_0804636a:
	ldr		r0, _08046450
	add		r0, r8
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804637a
	b		_08046580
_0804637a:
	mov		r2, r9
	ldr		r1, [r2, #0x48]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08046388
	b		_08046580
_08046388:
	mov		r0, r9
	add		r0, #0xb4
	ldrh	r3, [r0, #0x0]
	ldr		r0, _08046454
	and		r0, r3
	cmp		r0, #0x0
	beq		_08046398
	b		_08046580
_08046398:
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	and		r1, r0
	cmp		r1, #0x0
	beq		_080463bc
	mov		r0, r9
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	blt		_080463ae
	b		_08046580
_080463ae:
	mov		r0, r9
	add		r0, #0x88
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_080463bc
	b		_08046580
_080463bc:
	mov		r0, r9
	add		r0, #0x7e
	ldrb	r2, [r0, #0x0]
	add		r0, r2, #0x0
	cmp		r0, #0xd
	bne		_080463ca
	b		_08046580
_080463ca:
	cmp		r0, #0x5
	bne		_080463d0
	b		_08046580
_080463d0:
	cmp		r0, #0x6
	bne		_080463d6
	b		_08046580
_080463d6:
	cmp		r0, #0x7
	bne		_080463dc
	b		_08046580
_080463dc:
	cmp		r0, #0x8
	bne		_080463e2
	b		_08046580
_080463e2:
	cmp		r0, #0xf
	bne		_080463e8
	b		_08046580
_080463e8:
	mov		r0, r9
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_08046400
	sub		r0, #0x37
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x50
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0xf
	bls		_08046426
_08046400:
	sub		r0, r2, #0x1
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x3
	bhi		_08046412
	mov		r0, #0x24
	and		r0, r3
	cmp		r0, #0x0
	bne		_08046426
_08046412:
	cmp		r1, #0x0
	blt		_08046418
	b		_08046580
_08046418:
	mov		r0, r9
	add		r0, #0x88
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	bne		_08046426
	b		_08046580
_08046426:
	mov		r0, r9
	add		r0, #0x85
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804645c
	ldr		r0, _08046458
	lsr		r1, r1, #0x1
	mov		r2, #0xf
	and		r1, r2
	lsl		r1, r1, #0x1
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	b		_0804645e

_08046444:	.4byte 0x00000C74
_08046448:	.4byte 0x08124544
_0804644c:	.4byte 0x081245c8
_08046450:	.4byte 0x000007D4
_08046454:	.4byte 0x00008001
_08046458:	.4byte 0x03002368

_0804645c:
	mov		r0, #0x0
_0804645e:
	add		r4, r0, #0x0
	ldr		r5, _08046474
	add		r5, r8
	ldrh	r3, [r5, #0x0]
	cmp		r4, r3
	beq		_0804650c
	cmp		r4, #0x0
	beq		_08046478
	bl		sub_0807073c
	b		_08046494

_08046474:	.4byte 0x00000C7C

_08046478:
	ldr		r3, _080464d8
	ldr		r2, _080464dc
	mov		r1, #0x8c
	lsl		r1, r1, #0x2
	add		r0, r2, r1
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, [r2, #0x8]
	bl		sub_08070e28
_08046494:
	ldr		r5, _080464e0
	add		r5, r8
	strh	r4, [r5, #0x0]
	mov		r2, r9
	ldr		r1, [r2, #0x4]
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bge		_080464a8
	ldr		r3, _080464e4
	add		r0, r0, r3
_080464a8:
	asr		r0, r0, #0x12
	mov		r3, #0x3f
	and		r0, r3
	lsl		r2, r0, #0xa
	add		r0, r1, #0x0
	cmp		r0, #0x0
	bge		_080464ba
	ldr		r1, _080464e4
	add		r0, r0, r1
_080464ba:
	asr		r0, r0, #0x12
	and		r0, r3
	lsl		r1, r0, #0x4
	orr		r1, r2
	ldr		r2, _080464e8
	add		r2, r8
	strh	r1, [r2, #0x0]
	ldrh	r0, [r5, #0x0]
	cmp		r0, #0x53
	bgt		_080464ec
	cmp		r0, #0x52
	bge		_08046504
	cmp		r0, #0x51
	beq		_080464f0
	b		_0804655a

_080464d8:	.4byte 0x08124544
_080464dc:	.4byte 0x081245c8
_080464e0:	.4byte 0x00000C7C
_080464e4:	.4byte 0x0003FFFF
_080464e8:	.4byte 0x00000C7E

_080464ec:
	cmp		r0, #0x89
	bne		_0804655a
_080464f0:
	ldr		r2, _08046500
	add		r2, r8
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x6
	orr		r0, r1
	strh	r0, [r2, #0x0]
	b		_0804655a

.incbin "base.gba", 0x464FE, 0x2

_08046500:	.4byte 0x00000C7E

_08046504:
	mov		r0, #0x4
	orr		r1, r0
	strh	r1, [r2, #0x0]
	b		_0804655a
_0804650c:
	ldrh	r0, [r5, #0x0]
	cmp		r0, #0x51
	blt		_0804655a
	cmp		r0, #0x53
	ble		_0804651a
	cmp		r0, #0x89
	bne		_0804655a
_0804651a:
	mov		r2, r9
	ldr		r1, [r2, #0x4]
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bge		_08046528
	ldr		r3, _08046574
	add		r0, r0, r3
_08046528:
	asr		r0, r0, #0x12
	mov		r3, #0x3f
	and		r0, r3
	lsl		r2, r0, #0xa
	add		r0, r1, #0x0
	cmp		r0, #0x0
	bge		_0804653a
	ldr		r1, _08046574
	add		r0, r0, r1
_0804653a:
	asr		r0, r0, #0x12
	and		r0, r3
	lsl		r1, r0, #0x4
	orr		r1, r2
	ldr		r0, _08046578
	add		r0, r8
	ldrh	r3, [r0, #0x0]
	mov		r2, #0xf
	and		r2, r3
	cmp		r2, #0x0
	bne		_08046568
	ldr		r0, _0804657c
	and		r0, r3
	cmp		r0, r1
	beq		_0804655a
	strh	r2, [r5, #0x0]
_0804655a:
	ldr		r0, _08046578
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	mov		r0, #0xf
	and		r0, r1
	cmp		r0, #0x0
	beq		_080465e0
_08046568:
	ldr		r1, _08046578
	add		r1, r8
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	b		_080465e0

_08046574:	.4byte 0x0003FFFF
_08046578:	.4byte 0x00000C7E
_0804657c:	.4byte 0x0000FFF0

_08046580:
	ldr		r2, _08046648
	add		r2, r8
	ldrh	r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_080465e0
	mov		r3, r9
	ldr		r0, [r3, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0xb
	and		r0, r1
	cmp		r0, #0x0
	bne		_080465d2
	mov		r0, r9
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_080465d2
	ldrh	r0, [r2, #0x0]
	ldr		r3, _0804664c
	ldr		r2, _08046650
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, [r2, #0x8]
	bl		sub_08070e28
	mov		r2, #0xcd
	lsl		r2, r2, #0x1
	add		r2, r9
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xef
	and		r0, r1
	strb	r0, [r2, #0x0]
_080465d2:
	ldr		r0, _08046648
	add		r0, r8
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r0, _08046654
	add		r0, r8
	strh	r1, [r0, #0x0]
_080465e0:
	mov		r0, r9
	mov		r1, r8
	bl		sub_0803b0f8
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	add		r0, r9
	ldr		r2, [r0, #0x0]
	mov		r0, #0xc2
	lsl		r0, r0, #0x1
	add		r0, r9
	ldr		r1, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x8
	and		r1, r0
	ldr		r0, [sp, #0x8]
	cmp		r0, #0x3
	bne		_08046658
	mov		r0, #0xc0
	lsl		r0, r0, #0x8
	cmp		r1, r0
	beq		_08046614
	mov		r0, #0xe0
	lsl		r0, r0, #0x8
	cmp		r1, r0
	bne		_08046658
_08046614:
	mov		r3, #0x22
	ldrsh	r1, [r2, r3]
	mov		r0, #0x18
	neg		r0, r0
	cmp		r1, r0
	ble		_08046658
	mov		r4, #0xc8
	lsl		r4, r4, #0x4
	add		r4, r8
	ldrh	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08046632
	mov		r0, #0x69
	bl		sub_0807073c
_08046632:
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x15
	bls		_08046662
	mov		r0, #0x0
	strh	r0, [r4, #0x0]
	b		_08046662

.incbin "base.gba", 0x46646, 0x2

_08046648:	.4byte 0x00000C7C
_0804664c:	.4byte 0x08124544
_08046650:	.4byte 0x081245c8
_08046654:	.4byte 0x00000C7E

_08046658:
	mov		r1, #0xc8
	lsl		r1, r1, #0x4
	add		r1, r8
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
_08046662:
	mov		r0, r8
	bl		sub_0803b2b0
	thumb_func_end sub_08045d4c

	thumb_func_start sub_08046668
sub_08046668:
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x46678, 0x4C
	thumb_func_end sub_08046668

	thumb_func_start sub_080466c4
sub_080466c4:
	push	{ r4, lr }
	add		r4, r1, #0x0
	ldr		r1, _08046704
	add		r0, r0, r1
	add		r3, r0, #0x0
	ldr		r1, [r4, #0x0]
	ldr		r0, [r3, #0x18]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_080466dc
	ldr		r2, _08046708
	add		r1, r1, r2
_080466dc:
	asr		r2, r1, #0x10
	ldr		r1, [r4, #0x4]
	ldr		r0, [r3, #0x1c]
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_080466ec
	ldr		r1, _08046708
	add		r0, r0, r1
_080466ec:
	asr		r0, r0, #0x10
	add		r1, r2, #0x0
	mul		r1, r2
	add		r2, r0, #0x0
	mul		r2, r0
	add		r0, r2, #0x0
	add		r1, r1, r0
	ldr		r0, _0804670c
	cmp		r1, r0
	ble		_08046710
	mov		r0, #0x0
	b		_08046728

_08046704:	.4byte 0x00000824
_08046708:	.4byte 0x0000FFFF
_0804670c:	.4byte 0x0003FFFF

_08046710:
	add		r0, r1, #0x0
	cmp		r0, #0x0
	bge		_0804671a
	ldr		r1, _08046730
	add		r0, r0, r1
_0804671a:
	asr		r1, r0, #0xa
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r2, #0x0
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
_08046728:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x4672E, 0x2

_08046730:	.4byte 0x000003FF
	thumb_func_end sub_080466c4

	thumb_func_start sub_08046734
sub_08046734:
	push	{ r4, r5, r6, r7, lr }
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	add		r2, r1, #0x0
	ldr		r0, _08046770
	cmp		r1, r0
	bne		_08046744
	b		_08046b7c
_08046744:
	cmp		r1, r0
	bgt		_080467c4
	sub		r0, #0x7
	cmp		r1, r0
	bne		_08046750
	b		_08046a64
_08046750:
	cmp		r1, r0
	bgt		_0804678c
	sub		r0, #0x3
	cmp		r1, r0
	bne		_0804675c
	b		_08046aa4
_0804675c:
	cmp		r1, r0
	bgt		_08046774
	cmp		r1, #0x2
	bne		_08046766
	b		_08046b7c
_08046766:
	sub		r0, #0x1
	cmp		r1, r0
	bne		_0804676e
	b		_08046ae4
_0804676e:
	b		_08046c6c

_08046770:	.4byte 0x0000100B

_08046774:
	ldr		r0, _08046788
	cmp		r1, r0
	bne		_0804677c
	b		_08046bbc
_0804677c:
	add		r0, #0x1
	cmp		r1, r0
	bne		_08046784
	b		_08046bfc
_08046784:
	b		_08046c6c

.incbin "base.gba", 0x46786, 0x2

_08046788:	.4byte 0x00001002

_0804678c:
	ldr		r0, _080467a8
	cmp		r1, r0
	bne		_08046794
	b		_080469a4
_08046794:
	cmp		r1, r0
	bgt		_080467ac
	sub		r0, #0x2
	cmp		r1, r0
	beq		_08046858
	add		r0, #0x1
	cmp		r1, r0
	bne		_080467a6
	b		_08046a24
_080467a6:
	b		_08046c6c

_080467a8:	.4byte 0x00001007

_080467ac:
	ldr		r0, _080467c0
	cmp		r1, r0
	bne		_080467b4
	b		_080469e4
_080467b4:
	cmp		r1, r0
	ble		_080467ba
	b		_080468d0
_080467ba:
	mov		r7, #0x4
	mov		r4, #0x0
	b		_0804690c

_080467c0:	.4byte 0x00001009

_080467c4:
	ldr		r0, _080467ec
	cmp		r1, r0
	bne		_080467cc
	b		_08046bbc
_080467cc:
	cmp		r1, r0
	bgt		_08046814
	ldr		r0, _080467f0
	cmp		r1, r0
	bne		_080467d8
	b		_080469e4
_080467d8:
	cmp		r1, r0
	bgt		_080467f4
	sub		r0, #0x2
	cmp		r1, r0
	beq		_08046894
	add		r0, #0x1
	cmp		r1, r0
	bne		_080467ea
	b		_08046b3c
_080467ea:
	b		_08046c6c

_080467ec:	.4byte 0x00002002
_080467f0:	.4byte 0x0000100E

_080467f4:
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	cmp		r1, r0
	bne		_080467fe
	b		_08046ae4
_080467fe:
	cmp		r1, r0
	ble		_08046804
	b		_08046aa4
_08046804:
	ldr		r0, _08046810
	cmp		r1, r0
	bne		_0804680c
	b		_08046964
_0804680c:
	b		_08046c6c

.incbin "base.gba", 0x4680E, 0x2

_08046810:	.4byte 0x0000100F

_08046814:
	ldr		r0, _08046830
	cmp		r1, r0
	beq		_08046858
	cmp		r1, r0
	bgt		_08046834
	sub		r0, #0x2
	cmp		r1, r0
	bne		_08046826
	b		_08046bfc
_08046826:
	add		r0, #0x1
	cmp		r1, r0
	bne		_0804682e
	b		_08046a64
_0804682e:
	b		_08046c6c

_08046830:	.4byte 0x00002005

_08046834:
	ldr		r0, _08046848
	cmp		r1, r0
	beq		_080468d0
	cmp		r1, r0
	bgt		_0804684c
	sub		r0, #0x3
	cmp		r1, r0
	bne		_08046846
	b		_080469a4
_08046846:
	b		_08046c6c

_08046848:	.4byte 0x0000200A

_0804684c:
	ldr		r0, _08046854
	cmp		r2, r0
	beq		_08046894
	b		_08046c6c

_08046854:	.4byte 0x0000200C

_08046858:
	mov		r6, #0x1
	mov		r4, #0x0
	ldr		r7, _0804688c
	ldr		r0, _08046890
	add		r5, r0, #0x2
_08046862:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_08046872:
	ldrh	r0, [r2, #0x0]
	add		r1, r7, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08046872
	cmp		r4, #0x1
	ble		_08046862
	b		_08046c30

_0804688c:	.4byte 0x00000FFF
_08046890:	.4byte 0x08109268

_08046894:
	mov		r6, #0x2
	mov		r4, #0x0
	ldr		r7, _080468c8
	ldr		r0, _080468cc
	add		r5, r0, #0x4
_0804689e:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_080468ae:
	ldrh	r0, [r2, #0x0]
	add		r1, r7, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_080468ae
	cmp		r4, #0x1
	ble		_0804689e
	b		_08046c30

_080468c8:	.4byte 0x00000FFF
_080468cc:	.4byte 0x08109268

_080468d0:
	mov		r6, #0x3
	mov		r4, #0x0
	ldr		r7, _08046904
	ldr		r0, _08046908
	add		r5, r0, #0x6
_080468da:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_080468ea:
	ldrh	r0, [r2, #0x0]
	add		r1, r7, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_080468ea
	cmp		r4, #0x1
	ble		_080468da
	b		_08046c30

_08046904:	.4byte 0x00000FFF
_08046908:	.4byte 0x08109268

_0804690c:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	add		r5, r4, #0x0
	lsl		r1, r7, #0x1
	ldr		r6, _0804695c
	ldr		r0, _08046960
	add		r4, r1, r0
	mov		r3, #0x1
_08046926:
	ldrh	r0, [r2, #0x0]
	add		r1, r6, #0x0
	and		r1, r0
	ldrh	r0, [r4, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08046926
	add		r4, r5, #0x0
	cmp		r4, #0x1
	ble		_0804690c
	mov		r0, #0x1
	bl		sub_080281fc
	cmp		r7, #0xf
	bne		_0804694c
	mov		r7, #0xb
_0804694c:
	cmp		r7, #0x10
	bne		_08046952
	mov		r7, #0xa
_08046952:
	bl		sub_08029f34
	lsl		r1, r7, #0x7
	b		_08046c48

.incbin "base.gba", 0x4695A, 0x2

_0804695c:	.4byte 0x00000FFF
_08046960:	.4byte 0x08109268

_08046964:
	mov		r6, #0x5
	mov		r4, #0x0
	ldr		r7, _0804699c
	ldr		r0, _080469a0
	add		r5, r0, #0x0
	add		r5, #0xa
_08046970:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_08046980:
	ldrh	r0, [r2, #0x0]
	add		r1, r7, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08046980
	cmp		r4, #0x1
	ble		_08046970
	b		_08046c30

.incbin "base.gba", 0x4699A, 0x2

_0804699c:	.4byte 0x00000FFF
_080469a0:	.4byte 0x08109268

_080469a4:
	mov		r6, #0x6
	mov		r4, #0x0
	ldr		r7, _080469dc
	ldr		r0, _080469e0
	add		r5, r0, #0x0
	add		r5, #0xc
_080469b0:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_080469c0:
	ldrh	r0, [r2, #0x0]
	add		r1, r7, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_080469c0
	cmp		r4, #0x1
	ble		_080469b0
	b		_08046c30

.incbin "base.gba", 0x469DA, 0x2

_080469dc:	.4byte 0x00000FFF
_080469e0:	.4byte 0x08109268

_080469e4:
	mov		r6, #0x7
	mov		r4, #0x0
	ldr		r7, _08046a1c
	ldr		r0, _08046a20
	add		r5, r0, #0x0
	add		r5, #0xe
_080469f0:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_08046a00:
	ldrh	r0, [r2, #0x0]
	add		r1, r7, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08046a00
	cmp		r4, #0x1
	ble		_080469f0
	b		_08046c30

.incbin "base.gba", 0x46A1A, 0x2

_08046a1c:	.4byte 0x00000FFF
_08046a20:	.4byte 0x08109268

_08046a24:
	mov		r6, #0x8
	mov		r4, #0x0
	ldr		r7, _08046a5c
	ldr		r0, _08046a60
	add		r5, r0, #0x0
	add		r5, #0x10
_08046a30:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_08046a40:
	ldrh	r0, [r2, #0x0]
	add		r1, r7, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08046a40
	cmp		r4, #0x1
	ble		_08046a30
	b		_08046c30

.incbin "base.gba", 0x46A5A, 0x2

_08046a5c:	.4byte 0x00000FFF
_08046a60:	.4byte 0x08109268

_08046a64:
	mov		r6, #0x9
	mov		r4, #0x0
	ldr		r7, _08046a9c
	ldr		r0, _08046aa0
	add		r5, r0, #0x0
	add		r5, #0x12
_08046a70:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_08046a80:
	ldrh	r0, [r2, #0x0]
	add		r1, r7, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08046a80
	cmp		r4, #0x1
	ble		_08046a70
	b		_08046c30

.incbin "base.gba", 0x46A9A, 0x2

_08046a9c:	.4byte 0x00000FFF
_08046aa0:	.4byte 0x08109268

_08046aa4:
	mov		r6, #0xa
	mov		r4, #0x0
	ldr		r7, _08046adc
	ldr		r0, _08046ae0
	add		r5, r0, #0x0
	add		r5, #0x14
_08046ab0:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_08046ac0:
	ldrh	r0, [r2, #0x0]
	add		r1, r7, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08046ac0
	cmp		r4, #0x1
	ble		_08046ab0
	b		_08046c30

.incbin "base.gba", 0x46ADA, 0x2

_08046adc:	.4byte 0x00000FFF
_08046ae0:	.4byte 0x08109268

_08046ae4:
	mov		r7, #0xb
	mov		r4, #0x0
	ldr		r6, _08046b34
	ldr		r0, _08046b38
	add		r5, r0, #0x0
	add		r5, #0x16
_08046af0:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_08046b00:
	ldrh	r0, [r2, #0x0]
	add		r1, r6, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08046b00
	cmp		r4, #0x1
	ble		_08046af0
	mov		r0, #0x1
	bl		sub_080281fc
	cmp		r7, #0xf
	bne		_08046b24
	mov		r7, #0xb
_08046b24:
	cmp		r7, #0x10
	bne		_08046b2a
	mov		r7, #0xa
_08046b2a:
	bl		sub_08029f34
	lsl		r1, r7, #0x7
	b		_08046c48

.incbin "base.gba", 0x46B32, 0x2

_08046b34:	.4byte 0x00000FFF
_08046b38:	.4byte 0x08109268

_08046b3c:
	mov		r6, #0xc
	mov		r4, #0x0
	ldr		r7, _08046b74
	ldr		r0, _08046b78
	add		r5, r0, #0x0
	add		r5, #0x18
_08046b48:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_08046b58:
	ldrh	r0, [r2, #0x0]
	add		r1, r7, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08046b58
	cmp		r4, #0x1
	ble		_08046b48
	b		_08046c30

.incbin "base.gba", 0x46B72, 0x2

_08046b74:	.4byte 0x00000FFF
_08046b78:	.4byte 0x08109268

_08046b7c:
	mov		r6, #0xd
	mov		r4, #0x0
	ldr		r7, _08046bb4
	ldr		r0, _08046bb8
	add		r5, r0, #0x0
	add		r5, #0x1a
_08046b88:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_08046b98:
	ldrh	r0, [r2, #0x0]
	add		r1, r7, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08046b98
	cmp		r4, #0x1
	ble		_08046b88
	b		_08046c30

.incbin "base.gba", 0x46BB2, 0x2

_08046bb4:	.4byte 0x00000FFF
_08046bb8:	.4byte 0x08109268

_08046bbc:
	mov		r6, #0xf
	mov		r4, #0x0
	ldr		r7, _08046bf4
	ldr		r0, _08046bf8
	add		r5, r0, #0x0
	add		r5, #0x1e
_08046bc8:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_08046bd8:
	ldrh	r0, [r2, #0x0]
	add		r1, r7, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08046bd8
	cmp		r4, #0x1
	ble		_08046bc8
	b		_08046c30

.incbin "base.gba", 0x46BF2, 0x2

_08046bf4:	.4byte 0x00000FFF
_08046bf8:	.4byte 0x08109268

_08046bfc:
	mov		r6, #0x10
	mov		r4, #0x0
	ldr		r7, _08046c58
	ldr		r0, _08046c5c
	add		r5, r0, #0x0
	add		r5, #0x20
_08046c08:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_08046c18:
	ldrh	r0, [r2, #0x0]
	add		r1, r7, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08046c18
	cmp		r4, #0x1
	ble		_08046c08
_08046c30:
	mov		r0, #0x1
	bl		sub_080281fc
	cmp		r6, #0xf
	bne		_08046c3c
	mov		r6, #0xb
_08046c3c:
	cmp		r6, #0x10
	bne		_08046c42
	mov		r6, #0xa
_08046c42:
	bl		sub_08029f34
	lsl		r1, r6, #0x7
_08046c48:
	ldr		r2, _08046c60
	add		r1, r1, r2
	ldr		r2, _08046c64
	ldr		r3, _08046c68
	bl		sub_08029ee4
	b		_08046cc0

.incbin "base.gba", 0x46C56, 0x2

_08046c58:	.4byte 0x00000FFF
_08046c5c:	.4byte 0x08109268
_08046c60:	.4byte 0x0808ac60
_08046c64:	.4byte 0x06000E00
_08046c68:	.4byte 0x80000040

_08046c6c:
	mov		r7, #0x0
	mov		r4, #0x0
	ldr		r6, _08046cc8
	ldr		r5, _08046ccc
_08046c74:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_08046c84:
	ldrh	r0, [r2, #0x0]
	add		r1, r6, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08046c84
	cmp		r4, #0x1
	ble		_08046c74
	mov		r0, #0x1
	bl		sub_080281fc
	cmp		r7, #0xf
	bne		_08046ca8
	mov		r7, #0xb
_08046ca8:
	cmp		r7, #0x10
	bne		_08046cae
	mov		r7, #0xa
_08046cae:
	bl		sub_08029f34
	lsl		r1, r7, #0x7
	ldr		r2, _08046cd0
	add		r1, r1, r2
	ldr		r2, _08046cd4
	ldr		r3, _08046cd8
	bl		sub_08029ee4
_08046cc0:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x46CC6, 0x2

_08046cc8:	.4byte 0x00000FFF
_08046ccc:	.4byte 0x08109268
_08046cd0:	.4byte 0x0808ac60
_08046cd4:	.4byte 0x06000E00
_08046cd8:	.4byte 0x80000040
	thumb_func_end sub_08046734

	thumb_func_start sub_08046cdc
sub_08046cdc:
	push	{ r4, r5, r6, r7, lr }
	ldr		r1, _08046d58
	ldr		r0, _08046d5c
	add		r2, r1, r0
	mov		r0, #0x0
	strh	r0, [r2, #0x0]
	ldr		r0, _08046d60
	add		r2, r1, r0
	ldr		r0, _08046d64
	strh	r0, [r2, #0x0]
	mov		r0, #0xc9
	lsl		r0, r0, #0x4
	add		r1, r1, r0
	mov		r0, #0x1
	neg		r0, r0
	strh	r0, [r1, #0x0]
	mov		r7, #0x0
	mov		r4, #0x0
	ldr		r6, _08046d68
	ldr		r5, _08046d6c
_08046d04:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_08046d14:
	ldrh	r0, [r2, #0x0]
	add		r1, r6, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08046d14
	cmp		r4, #0x1
	ble		_08046d04
	mov		r0, #0x1
	bl		sub_080281fc
	cmp		r7, #0xf
	bne		_08046d38
	mov		r7, #0xb
_08046d38:
	cmp		r7, #0x10
	bne		_08046d3e
	mov		r7, #0xa
_08046d3e:
	bl		sub_08029f34
	lsl		r1, r7, #0x7
	ldr		r2, _08046d70
	add		r1, r1, r2
	ldr		r2, _08046d74
	ldr		r3, _08046d78
	bl		sub_08029ee4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x46D56, 0x2

_08046d58:	.4byte RunGameLogic_CallBack
_08046d5c:	.4byte 0x00000C92
_08046d60:	.4byte 0x00000C8E
_08046d64:	.4byte 0x0000FFFF
_08046d68:	.4byte 0x00000FFF
_08046d6c:	.4byte 0x08109268
_08046d70:	.4byte 0x0808ac60
_08046d74:	.4byte 0x06000E00
_08046d78:	.4byte 0x80000040
	thumb_func_end sub_08046cdc

	thumb_func_start sub_08046d7c
sub_08046d7c:
	push	{ r4, r5, lr }
	ldr		r2, _08046dac
	ldr		r0, _08046db0
	add		r4, r2, r0
	ldrh	r3, [r4, #0x0]
	add		r1, r3, #0x0
	ldr		r0, _08046db4
	cmp		r1, r0
	bne		_08046dc0
	ldr		r1, _08046db8
	mov		r5, #0xc9
	lsl		r5, r5, #0x4
	add		r0, r2, r5
	strh	r3, [r0, #0x0]
	strh	r1, [r4, #0x0]
	ldr		r0, _08046dbc
	add		r1, r2, r0
	mov		r0, #0xa0
	strh	r0, [r1, #0x0]
	ldrh	r0, [r4, #0x0]
	bl		sub_08046734
	b		_08046dec

.incbin "base.gba", 0x46DAA, 0x2

_08046dac:	.4byte RunGameLogic_CallBack
_08046db0:	.4byte 0x00000C8E
_08046db4:	.4byte 0x00001008
_08046db8:	.4byte 0x0000100F
_08046dbc:	.4byte 0x00000C92

_08046dc0:
	ldr		r0, _08046de0
	cmp		r1, r0
	bne		_08046de8
	sub		r0, #0x8
	mov		r5, #0xc9
	lsl		r5, r5, #0x4
	add		r1, r2, r5
	strh	r3, [r1, #0x0]
	strh	r0, [r4, #0x0]
	ldr		r1, _08046de4
	add		r2, r2, r1
	mov		r1, #0xa0
	strh	r1, [r2, #0x0]
	bl		sub_08046734
	b		_08046dec

_08046de0:	.4byte 0x0000100F
_08046de4:	.4byte 0x00000C92

_08046de8:
	bl		sub_08046cdc
_08046dec:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x46DF2, 0x2
	thumb_func_end sub_08046d7c

	thumb_func_start sub_08046df4
sub_08046df4:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	ldr		r1, _08046e3c
	add		r0, r6, r1
	ldr		r4, [r0, #0x0]
	bl		sub_08046cdc
	mov		r1, #0xbd
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrh	r5, [r0, #0x0]
	cmp		r5, #0x0
	beq		_08046e34
	ldr		r1, _08046e40
	ldr		r4, _08046e44
	add		r2, r1, r4
	ldrh	r3, [r2, #0x0]
	add		r4, #0x2
	add		r0, r1, r4
	mov		r4, #0x0
	strh	r3, [r0, #0x0]
	strh	r5, [r2, #0x0]
	ldr		r0, _08046e48
	add		r1, r1, r0
	mov		r0, #0xa0
	strh	r0, [r1, #0x0]
	ldrh	r0, [r2, #0x0]
	bl		sub_08046734
	ldr		r1, _08046e4c
	add		r0, r6, r1
	strh	r4, [r0, #0x0]
_08046e34:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x46E3A, 0x2

_08046e3c:	.4byte 0x00000814
_08046e40:	.4byte RunGameLogic_CallBack
_08046e44:	.4byte 0x00000C8E
_08046e48:	.4byte 0x00000C92
_08046e4c:	.4byte 0x00000C6E
	thumb_func_end sub_08046df4

	thumb_func_start sub_08046e50
sub_08046e50:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r3, _08046f00
	mov		r1, #0x24
	add		r1, r1, r3
	mov		r8, r1
	ldr		r1, _08046f04
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08046e70
	b		_080470ca
_08046e70:
	ldr		r1, _08046f08
	add		r0, r3, r1
	ldrh	r1, [r0, #0x0]
	add		r2, r1, #0x0
	cmp		r2, #0x0
	bne		_08046e7e
	b		_080470b8
_08046e7e:
	mov		r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	beq		_08046e88
	b		_0804709c
_08046e88:
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08046e92
	b		_08047064
_08046e92:
	mov		r1, #0xc9
	lsl		r1, r1, #0x4
	add		r0, r3, r1
	ldrh	r1, [r0, #0x0]
	ldr		r0, _08046f0c
	cmp		r1, r0
	beq		_08046eb8
	add		r0, #0x7
	cmp		r1, r0
	beq		_08046eb8
	sub		r0, #0x4
	cmp		r1, r0
	beq		_08046ec4
	ldr		r1, _08046f10
	add		r0, r3, r1
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_08046eb8
	b		_08046ff8
_08046eb8:
	ldr		r0, _08046f14
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	ldr		r0, _08046f18
	cmp		r1, r0
	bne		_08046fac
_08046ec4:
	ldr		r0, _08046f1c
	add		r0, r8
	ldrh	r2, [r0, #0x0]
	cmp		r2, #0x2
	bne		_08046f28
	mov		r7, #0x0
	mov		r4, #0x0
	ldr		r6, _08046f20
	ldr		r5, _08046f24
_08046ed6:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_08046ee6:
	ldrh	r0, [r2, #0x0]
	add		r1, r6, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08046ee6
	cmp		r4, #0x1
	ble		_08046ed6
	b		_08046f68

_08046f00:	.4byte RunGameLogic_CallBack
_08046f04:	.4byte 0x00000814
_08046f08:	.4byte 0x00000C92
_08046f0c:	.4byte 0x00001008
_08046f10:	.4byte 0x00000C8E
_08046f14:	.4byte 0x00000C6C
_08046f18:	.4byte 0x0000100B
_08046f1c:	.4byte 0x00000C6A
_08046f20:	.4byte 0x00000FFF
_08046f24:	.4byte 0x08109268

_08046f28:
	ldr		r0, _08046f90
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	ldr		r0, _08046f94
	cmp		r1, r0
	bne		_08046fac
	cmp		r2, r1
	bne		_08046fac
	mov		r7, #0x0
	mov		r4, #0x0
	ldr		r6, _08046f98
	ldr		r5, _08046f9c
_08046f40:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_08046f50:
	ldrh	r0, [r2, #0x0]
	add		r1, r6, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08046f50
	cmp		r4, #0x1
	ble		_08046f40
_08046f68:
	mov		r0, #0x1
	bl		sub_080281fc
	cmp		r7, #0xf
	bne		_08046f74
	mov		r7, #0xb
_08046f74:
	cmp		r7, #0x10
	bne		_08046f7a
	mov		r7, #0xa
_08046f7a:
	bl		sub_08029f34
	lsl		r1, r7, #0x7
	ldr		r2, _08046fa0
	add		r1, r1, r2
	ldr		r2, _08046fa4
	ldr		r3, _08046fa8
	bl		sub_08029ee4
	b		_08046fb6

.incbin "base.gba", 0x46F8E, 0x2

_08046f90:	.4byte 0x00000C6C
_08046f94:	.4byte 0x0000100B
_08046f98:	.4byte 0x00000FFF
_08046f9c:	.4byte 0x08109268
_08046fa0:	.4byte 0x0808ac60
_08046fa4:	.4byte 0x06000E00
_08046fa8:	.4byte 0x80000040

_08046fac:
	ldr		r0, _08046fd4
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	bl		sub_08046734
_08046fb6:
	ldr		r0, _08046fd4
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	ldr		r0, _08046fd8
	cmp		r1, r0
	bne		_08046fe0
	ldr		r0, _08046fdc
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08046fe0
	mov		r0, #0x82
	bl		sub_0807073c
	b		_0804709c

_08046fd4:	.4byte 0x00000C6C
_08046fd8:	.4byte 0x0000100B
_08046fdc:	.4byte 0x00000C6A

_08046fe0:
	ldr		r0, _08046ff4
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_0804709c
	mov		r0, #0x83
	bl		sub_0807073c
	b		_0804709c

.incbin "base.gba", 0x46FF2, 0x2

_08046ff4:	.4byte 0x00000C6A

_08046ff8:
	mov		r7, #0x0
	mov		r4, #0x0
	ldr		r6, _08047050
	ldr		r5, _08047054
_08047000:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	mov		r3, #0x1
_08047010:
	ldrh	r0, [r2, #0x0]
	add		r1, r6, #0x0
	and		r1, r0
	ldrh	r0, [r5, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_08047010
	cmp		r4, #0x1
	ble		_08047000
	mov		r0, #0x1
	bl		sub_080281fc
	cmp		r7, #0xf
	bne		_08047034
	mov		r7, #0xb
_08047034:
	cmp		r7, #0x10
	bne		_0804703a
	mov		r7, #0xa
_0804703a:
	bl		sub_08029f34
	lsl		r1, r7, #0x7
	ldr		r2, _08047058
	add		r1, r1, r2
	ldr		r2, _0804705c
	ldr		r3, _08047060
	bl		sub_08029ee4
	b		_0804709c

.incbin "base.gba", 0x4704E, 0x2

_08047050:	.4byte 0x00000FFF
_08047054:	.4byte 0x08109268
_08047058:	.4byte 0x0808ac60
_0804705c:	.4byte 0x06000E00
_08047060:	.4byte 0x80000040

_08047064:
	cmp		r2, #0x40
	bls		_08047092
	mov		r1, #0xc9
	lsl		r1, r1, #0x4
	add		r0, r3, r1
	ldrh	r1, [r0, #0x0]
	ldr		r0, _080470a8
	cmp		r1, r0
	beq		_08047092
	add		r0, #0x7
	cmp		r1, r0
	beq		_08047092
	sub		r0, #0x4
	cmp		r1, r0
	beq		_08047092
	ldr		r1, _080470ac
	add		r0, r3, r1
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_08047092
	mov		r0, #0x68
	bl		sub_0807073c
_08047092:
	ldr		r0, _080470b0
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	bl		sub_08046734
_0804709c:
	ldr		r1, _080470b4
	add		r1, r8
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	b		_080470ca

_080470a8:	.4byte 0x00001008
_080470ac:	.4byte 0x00000C8E
_080470b0:	.4byte 0x00000C6A
_080470b4:	.4byte 0x00000C6E

_080470b8:
	ldr		r0, _080470d4
	add		r1, r3, r0
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x2
	bne		_080470c4
	strh	r2, [r1, #0x0]
_080470c4:
	ldrh	r0, [r1, #0x0]
	bl		sub_08046734
_080470ca:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080470d4:	.4byte 0x00000C8E
	thumb_func_end sub_08046e50

	thumb_func_start sub_080470d8
sub_080470d8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	str		r1, [sp, #0xC]
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	mov		r10, r2
	mov		r12, sp
	add		r0, sp, #0x4
	mov		r8, r0
	add		r1, sp, #0x8
	mov		r9, r1
	ldr		r0, _08047138
	cmp		r3, r0
	bhi		_08047140
	ldr		r0, _0804713c
	mul		r0, r3
	lsr		r6, r0, #0x13
	mov		r0, #0x64
	mul		r0, r6
	sub		r7, r3, r0
	cmp		r7, #0x63
	bls		_08047118
	sub		r7, #0x64
	add		r6, #0x1
_08047118:
	lsl		r0, r6, #0x4
	add		r0, r0, r6
	lsl		r1, r0, #0x8
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	lsr		r2, r0, #0x13
	lsl		r0, r2, #0x4
	sub		r0, r0, r2
	lsl		r0, r0, #0x2
	sub		r6, r6, r0
	cmp		r6, #0x3b
	bls		_08047146
	sub		r6, #0x3c
	add		r2, #0x1
	b		_08047146

.incbin "base.gba", 0x47136, 0x2

_08047138:	.4byte 0x0000EA5F
_0804713c:	.4byte 0x0000147A

_08047140:
	mov		r2, #0x9
	mov		r6, #0x3b
	mov		r7, #0x63
_08047146:
	ldr		r1, _08047288
	add		r0, r2, #0x0
	mul		r0, r1
	lsr		r3, r0, #0x13
	lsl		r0, r3, #0x2
	add		r0, r0, r3
	lsl		r0, r0, #0x1
	sub		r4, r2, r0
	mov		r5, #0xf
	and		r3, r5
	lsl		r0, r3, #0x4
	and		r4, r5
	add		r2, r0, r4
	add		r0, r6, #0x0
	mul		r0, r1
	lsr		r3, r0, #0x13
	lsl		r0, r3, #0x2
	add		r0, r0, r3
	lsl		r0, r0, #0x1
	sub		r4, r6, r0
	and		r3, r5
	lsl		r0, r3, #0x4
	and		r4, r5
	add		r6, r0, r4
	add		r0, r7, #0x0
	mul		r0, r1
	lsr		r3, r0, #0x13
	lsl		r0, r3, #0x2
	add		r0, r0, r3
	lsl		r0, r0, #0x1
	sub		r4, r7, r0
	and		r3, r5
	lsl		r0, r3, #0x4
	and		r4, r5
	add		r7, r0, r4
	mov		r0, r12
	str		r2, [r0, #0x0]
	mov		r1, r8
	str		r6, [r1, #0x0]
	mov		r6, r9
	str		r7, [r6, #0x0]
	mov		r0, #0x0
	ldr		r1, [sp, #0xC]
	mov		r2, r10
	bl		sub_080281b0
	mov		r12, r0
	ldr		r1, [sp, #0x0]
	lsl		r1, r1, #0x18
	ldr		r4, _0804728c
	lsr		r2, r1, #0x1c
	lsl		r0, r2, #0x1
	add		r0, r0, r4
	ldrh	r0, [r0, #0x0]
	mov		r6, #0xc0
	lsl		r6, r6, #0x8
	add		r3, r6, #0x0
	orr		r0, r3
	mov		r6, r12
	strh	r0, [r6, #0x0]
	lsr		r1, r1, #0x18
	and		r1, r5
	lsl		r0, r1, #0x1
	add		r0, r0, r4
	ldrh	r0, [r0, #0x0]
	orr		r0, r3
	strh	r0, [r6, #0x2]
	add		r6, #0x40
	add		r2, #0xa
	lsl		r2, r2, #0x1
	add		r2, r2, r4
	ldrh	r0, [r2, #0x0]
	orr		r0, r3
	strh	r0, [r6, #0x0]
	add		r1, #0xa
	lsl		r1, r1, #0x1
	add		r1, r1, r4
	ldrh	r0, [r1, #0x0]
	orr		r0, r3
	strh	r0, [r6, #0x2]
	ldr		r1, [sp, #0x4]
	lsl		r1, r1, #0x18
	lsr		r2, r1, #0x1c
	lsl		r0, r2, #0x1
	add		r0, r0, r4
	ldrh	r0, [r0, #0x0]
	orr		r0, r3
	mov		r6, r12
	strh	r0, [r6, #0x6]
	lsr		r1, r1, #0x18
	and		r1, r5
	lsl		r0, r1, #0x1
	add		r0, r0, r4
	ldrh	r0, [r0, #0x0]
	orr		r0, r3
	strh	r0, [r6, #0x8]
	add		r6, #0x46
	add		r2, #0xa
	lsl		r2, r2, #0x1
	add		r2, r2, r4
	ldrh	r0, [r2, #0x0]
	orr		r0, r3
	strh	r0, [r6, #0x0]
	add		r6, #0x2
	add		r1, #0xa
	lsl		r1, r1, #0x1
	add		r1, r1, r4
	ldrh	r0, [r1, #0x0]
	orr		r0, r3
	strh	r0, [r6, #0x0]
	ldr		r1, [sp, #0x8]
	lsl		r1, r1, #0x18
	lsr		r2, r1, #0x1c
	lsl		r0, r2, #0x1
	add		r0, r0, r4
	ldrh	r0, [r0, #0x0]
	orr		r0, r3
	mov		r6, r12
	strh	r0, [r6, #0xc]
	lsr		r1, r1, #0x18
	and		r1, r5
	lsl		r0, r1, #0x1
	add		r0, r0, r4
	ldrh	r0, [r0, #0x0]
	orr		r0, r3
	strh	r0, [r6, #0xe]
	mov		r5, r12
	add		r5, #0x4c
	add		r2, #0xa
	lsl		r2, r2, #0x1
	add		r2, r2, r4
	ldrh	r0, [r2, #0x0]
	orr		r0, r3
	strh	r0, [r5, #0x0]
	add		r5, #0x2
	add		r1, #0xa
	lsl		r1, r1, #0x1
	add		r1, r1, r4
	ldrh	r0, [r1, #0x0]
	orr		r0, r3
	strh	r0, [r5, #0x0]
	ldr		r0, _08047290
	strh	r0, [r6, #0x4]
	sub		r0, #0x3
	strh	r0, [r6, #0xa]
	mov		r1, #0x0
	strh	r1, [r6, #0x0]
	mov		r0, r12
	add		r0, #0x40
	strh	r1, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_080281fc
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08047288:	.4byte 0x0000CCCD
_0804728c:	.4byte 0x0810928a
_08047290:	.4byte 0x0000C05A
	thumb_func_end sub_080470d8

	thumb_func_start sub_08047294
sub_08047294:
	ldr		r2, _080472d8
	ldrb	r1, [r2, #0xC]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080472c0
	ldr		r1, _080472dc
	ldrb	r0, [r2, #0x4]
	add		r0, r0, r1
	ldrb	r1, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	ldrb	r0, [r2, #0x4]
	add		r0, #0x1
	strb	r0, [r2, #0x4]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x3c
	bne		_080472c0
	mov		r0, #0x0
	strb	r0, [r2, #0x4]
_080472c0:
	add		r3, r2, #0x0
	ldrb	r1, [r3, #0xC]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_080472e6
	ldr		r0, [r3, #0x0]
	ldr		r1, _080472e0
	cmp		r0, r1
	bhi		_080472e4
	strh		r0, [r3, #0x6]
	b		_080472e6

_080472d8:	.4byte 0x03006000
_080472dc:	.4byte 0x081092b2
_080472e0:	.4byte 0x0000EA5F

_080472e4:
	strh		r1, [r2, #0x6]
_080472e6:
	bx		lr
	thumb_func_end sub_08047294

	thumb_func_start sub_080472e8
sub_080472e8:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	ldr		r4, _0804734c
	ldrb	r1, [r4, #0x8]
	cmp		r1, #0x0
	beq		_080473d8
	mov		r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_0804738c
	ldrb	r1, [r4, #0xC]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08047354
	mov		r0, #0xf7
	and		r0, r1
	strb	r0, [r4, #0xC]
	ldrh		r0, [r4, #0xA]
	mov		r1, #0x16
	mov		r2, #0x0
	bl		sub_080470d8
	mov		r0, #0x0
	mov		r1, #0x12
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r1, _08047350
	ldrh	r0, [r1, #0x0]
	strh	r0, [r3, #0x0]
	ldrh	r0, [r1, #0x2]
	strh	r0, [r3, #0x2]
	ldrh	r0, [r1, #0x4]
	strh	r0, [r3, #0x4]
	add		r2, r3, #0x0
	add		r2, #0x40
	ldrh	r0, [r1, #0x6]
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	ldrh	r0, [r1, #0x8]
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	ldrh	r0, [r1, #0xa]
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	bl		sub_080281fc
	b		_0804738c

_0804734c:	.4byte 0x03006000
_08047350:	.4byte 0x081092ee

_08047354:
	mov		r0, #0x0
	mov		r1, #0x16
	mov		r2, #0x0
	bl		sub_080281b0
	add		r5, r0, #0x0
	ldrb	r0, [r4, #0xC]
	mov		r1, #0x8
	orr		r0, r1
	strb	r0, [r4, #0xC]
	mov		r0, #0x0
	mov		r3, #0x0
_0804736c:
	add		r2, r0, #0x1
	mov		r1, #0x7
	lsl		r0, r0, #0x6
	add		r0, r0, r5
	add		r0, #0xe
_08047376:
	strh	r3, [r0, #0x0]
	sub		r0, #0x2
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_08047376
	add		r0, r2, #0x0
	cmp		r0, #0x1
	ble		_0804736c
	mov		r0, #0x1
	bl		sub_080281fc
_0804738c:
	ldr		r1, _080473d0
	ldrb	r0, [r1, #0x8]
	sub		r0, #0x1
	strb	r0, [r1, #0x8]
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_08047414
	mov		r0, #0x0
	mov		r1, #0x12
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r1, _080473d4
	ldrh	r0, [r1, #0x0]
	strh	r0, [r3, #0x0]
	ldrh	r0, [r1, #0x2]
	strh	r0, [r3, #0x2]
	ldrh	r0, [r1, #0x4]
	strh	r0, [r3, #0x4]
	add		r2, r3, #0x0
	add		r2, #0x40
	ldrh	r0, [r1, #0x6]
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	ldrh	r0, [r1, #0x8]
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	ldrh	r0, [r1, #0xa]
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	bl		sub_080281fc
	b		_08047414

_080473d0:	.4byte 0x03006000
_080473d4:	.4byte 0x081092fa

_080473d8:
	ldrb	r2, [r4, #0xC]
	mov		r0, #0x10
	and		r0, r2
	cmp		r0, #0x0
	bne		_08047414
	ldr		r1, _08047400
	add		r0, r3, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08047404
	ldrh		r0, [r4, #0x6]
	mov		r1, #0x16
	mov		r2, #0x0
	bl		sub_080470d8
	b		_08047414

.incbin "base.gba", 0x473FE, 0x2

_08047400:	.4byte 0x00000814

_08047404:
	mov		r0, #0x10
	orr		r0, r2
	strb	r0, [r4, #0xC]
	ldrh		r0, [r4, #0x6]
	mov		r1, #0x16
	mov		r2, #0x0
	bl		sub_080470d8
_08047414:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4741A, 0x2
	thumb_func_end sub_080472e8

	thumb_func_start sub_0804741c
sub_0804741c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	ldr		r1, _080474dc
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	mov		r0, #0xbc
	lsl		r0, r0, #0x1
	add		r0, r8
	ldrh	r3, [r0, #0x0]
	ldr		r2, _080474e0
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	blt		_08047482
	sub		r1, #0x3a
	add		r0, r6, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08047460
	mov		r1, #0x0
	ldr		r0, _080474e4
	ldrh	r0, [r0, #0x12]
	cmp		r0, #0x0
	bne		_0804745a
	mov		r1, #0x1
_0804745a:
	cmp		r1, #0x0
	bne		_08047460
	b		_0804757e
_08047460:
	ldr		r2, _080474e8
	add		r0, r6, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	beq		_08047482
	mov		r1, #0x0
	ldr		r0, _080474e4
	ldrh	r0, [r0, #0xc]
	cmp		r0, #0x0
	bne		_0804747c
	mov		r1, #0x1
_0804747c:
	cmp		r1, #0x0
	bne		_08047482
	b		_0804757e
_08047482:
	ldr		r0, _080474ec
	add		r5, r3, #0x0
	mul		r5, r0
	cmp		r5, #0x0
	bge		_08047490
	ldr		r0, _080474f0
	add		r5, r5, r0
_08047490:
	asr		r5, r5, #0x13
	mov		r7, #0xf
	and		r5, r7
	lsl		r4, r5, #0x2
	add		r4, r4, r5
	lsl		r4, r4, #0x1
	sub		r4, r3, r4
	and		r4, r7
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x1
	str		r3, [sp, #0x0]
	bl		sub_080281b0
	ldr		r2, _080474f4
	add		r1, r2, #0x0
	strh	r1, [r0, #0x0]
	add		r5, #0x10
	mov		r2, #0xb0
	lsl		r2, r2, #0x8
	add		r1, r2, #0x0
	orr		r5, r1
	strh	r5, [r0, #0x2]
	add		r4, #0x10
	orr		r4, r1
	strh	r4, [r0, #0x4]
	ldr		r3, [sp, #0x0]
	cmp		r3, #0x1
	bgt		_080474d6
	mov		r1, r8
	ldr		r0, [r1, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_080474fc
_080474d6:
	ldr		r4, _080474f8
	b		_08047544

.incbin "base.gba", 0x474DA, 0x2

_080474dc:	.4byte 0x00000814
_080474e0:	.4byte 0x00000C88
_080474e4:	.4byte 0x03002FE0
_080474e8:	.4byte 0x000007DA
_080474ec:	.4byte 0x0000CCCD
_080474f0:	.4byte 0x0007FFFF
_080474f4:	.4byte 0x0000C020
_080474f8:	.4byte 0x08080600

_080474fc:
	ldr		r0, _08047524
	ldr		r4, [r0, #0x10]
	ldr		r1, _08047528
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	add		r0, r7, #0x0
	and		r0, r1
	cmp		r0, #0x3
	bne		_0804753a
	cmp		r3, #0x0
	bgt		_0804752c
	mov		r0, #0x1f
	and		r0, r4
	cmp		r0, #0x0
	bne		_0804753a
	mov		r0, #0xc2
	bl		sub_0807073c
	b		_0804753a

.incbin "base.gba", 0x47522, 0x2

_08047524:	.4byte RunGameLogic_CallBack
_08047528:	.4byte 0x000007D4

_0804752c:
	mov		r0, #0x3f
	and		r0, r4
	cmp		r0, #0x0
	bne		_0804753a
	mov		r0, #0xc2
	bl		sub_0807073c
_0804753a:
	mov		r0, #0x8
	and		r4, r0
	cmp		r4, #0x0
	beq		_08047560
	ldr		r4, _0804755c
_08047544:
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r2, #0xb1
	lsl		r2, r2, #0x1
	add		r1, r1, r2
	add		r0, r4, #0x0
	mov		r2, #0x3
	bl		sub_08071b6c
	b		_08047578

_0804755c:	.4byte 0x080805f0

_08047560:
	ldr		r4, _0804758c
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r0, #0xb1
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x3
	bl		sub_08071b6c
_08047578:
	mov		r0, #0x1
	bl		sub_08028168
_0804757e:
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4758A, 0x2

_0804758c:	.4byte 0x080805f8
	thumb_func_end sub_0804741c

	thumb_func_start sub_08047590
sub_08047590:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r2, r0, #0x0
	mov		r9, r1
	ldr		r1, _080475c0
	add		r0, r2, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_080475c8
	mov		r3, r9
	lsl		r1, r3, #0x2
	ldr		r7, _080475c4
	add		r0, r2, r7
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_080475d4

.incbin "base.gba", 0x475BE, 0x2

_080475c0:	.4byte 0x000007DA
_080475c4:	.4byte 0x000007F4

_080475c8:
	mov		r0, r9
	lsl		r1, r0, #0x18
	lsr		r1, r1, #0x18
	add		r0, r2, #0x0
	bl		sub_08044894
_080475d4:
	add		r0, #0x4c
	ldrb	r0, [r0, #0x0]
	mov		r3, #0x7
	and		r3, r0
	ldr		r0, _08047640
	add		r0, r9
	ldrb	r0, [r0, #0x0]
	cmp		r0, r3
	beq		_08047630
	ldr		r0, _08047644
	add		r0, r3, r0
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	ldr		r1, _08047648
	add		r5, r0, r1
	mov		r1, #0x0
	mov		r2, r9
	lsl		r0, r2, #0x1
	add		r0, r9
	mov		r8, r0
_080475fc:
	mov		r4, #0x0
	add		r6, r1, #0x3
	add		r1, #0x1
	mov		r10, r1
_08047604:
	add		r4, #0x1
	mov		r0, #0x0
	add		r1, r4, #0x0
	mov		r7, r8
	add		r2, r7, r6
	str		r3, [sp, #0x0]
	bl		sub_080281b0
	strh	r5, [r0, #0x0]
	add		r5, #0x1
	ldr		r3, [sp, #0x0]
	cmp		r4, #0x1
	ble		_08047604
	mov		r1, r10
	cmp		r1, #0x1
	ble		_080475fc
	ldr		r0, _08047640
	add		r0, r9
	strb	r3, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_080281fc
_08047630:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08047640:	.4byte 0x03002390
_08047644:	.4byte 0x08109306
_08047648:	.4byte 0x0000D080
	thumb_func_end sub_08047590

	thumb_func_start sub_0804764c
sub_0804764c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	mov		r8, r0
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	str		r0, [sp, #0xC]
	cmp		r0, #0x4
	ble		_0804766c
	mov		r0, #0x4
	str		r0, [sp, #0xC]
_0804766c:
	mov		r4, #0x0
	ldr		r1, [sp, #0xC]
	cmp		r4, r1
	bge		_08047720
	mov		r0, sp
	add		r0, #0x8
	str		r0, [sp, #0x10]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	mov		r9, r1
_08047680:
	lsl		r1, r4, #0x2
	ldr		r0, _080476e8
	add		r0, r8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, _080476ec
	add		r0, r0, r1
	ldrb	r5, [r0, #0x0]
	mov		r0, r8
	add		r1, r4, #0x0
	bl		sub_08047590
	ldr		r0, _080476f0
	add		r0, r8
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	add		r1, r4, #0x1
	mov		r10, r1
	cmp		r0, #0x0
	bne		_08047718
	cmp		r5, #0x0
	beq		_080476f8
	cmp		r5, #0x0
	beq		_08047718
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0x13
	mov		r1, #0xc0
	lsl		r1, r1, #0xd
	add		r7, r0, r1
	add		r6, r1, #0x0
	add		r4, r5, #0x0
_080476c2:
	lsr		r0, r6, #0x10
	orr		r0, r7
	str		r0, [sp, #0x8]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x4]
	ldr		r0, _080476f4
	add		r1, sp, #0x8
	mov		r2, r9
	mov		r3, r9
	bl		sub_0802951c
	mov		r0, #0xa0
	lsl		r0, r0, #0xb
	add		r6, r6, r0
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_080476c2
	b		_08047718

_080476e8:	.4byte 0x000007F4
_080476ec:	.4byte 0x0000017D
_080476f0:	.4byte 0x000007D4
_080476f4:	.4byte 0x080972cc

_080476f8:
	mov		r0, #0x8
	ldr		r1, [sp, #0x10]
	strh	r0, [r1, #0x0]
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	lsl		r0, r0, #0x3
	add		r0, #0x18
	strh	r0, [r1, #0x2]
	str		r5, [sp, #0x0]
	str		r5, [sp, #0x4]
	ldr		r0, _08047734
	add		r1, sp, #0x8
	mov		r2, r9
	mov		r3, r9
	bl		sub_0802951c
_08047718:
	mov		r4, r10
	ldr		r0, [sp, #0xC]
	cmp		r4, r0
	blt		_08047680
_08047720:
	bl		sub_080478a4
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08047734:	.4byte 0x080972d4
	thumb_func_end sub_0804764c

	thumb_func_start sub_08047738
sub_08047738:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	mov		r2, #0x0
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	ldr		r7, _080477dc
	ldr		r1, _080477e0
	mov		r8, r1
	ldrb	r1, [r0, #0x0]
	cmp		r2, r1
	bge		_0804776a
	ldr		r6, _080477e4
	mov		r4, #0xff
	add		r3, r0, #0x0
_0804775a:
	add		r1, r2, r6
	ldrb	r0, [r1, #0x0]
	orr		r0, r4
	strb	r0, [r1, #0x0]
	add		r2, #0x1
	ldrb	r0, [r3, #0x0]
	cmp		r2, r0
	blt		_0804775a
_0804776a:
	mov		r0, #0x0
	str		r0, [r7, #0x0]
	mov		r1, r8
	str		r0, [r1, #0x0]
	ldr		r2, _080477e8
	add		r0, r5, r2
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_08047800
	ldr		r1, _080477ec
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	add		r2, #0x16
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	sub		r5, r0, #0x1
	add		r4, r1, #0x0
	add		r4, #0xba
	ldrh	r0, [r4, #0x0]
	lsr		r0, r0, #0x1
	cmp		r0, #0x0
	beq		_080477b8
	bl		sub_08029f34
	ldrh	r1, [r4, #0x0]
	lsr		r1, r1, #0x1
	sub		r1, #0x1
	lsl		r1, r1, #0x6
	ldr		r2, _080477f0
	add		r1, r1, r2
	ldr		r2, _080477f4
	ldr		r3, _080477f8
	bl		sub_08029ee4
_080477b8:
	ldrh	r0, [r4, #0x0]
	lsr		r0, r0, #0x1
	cmp		r0, r5
	bge		_08047884
	bl		sub_08029f34
	ldrh	r1, [r4, #0x0]
	lsr		r1, r1, #0x1
	add		r1, #0x1
	lsl		r1, r1, #0x6
	ldr		r2, _080477f0
	add		r1, r1, r2
	ldr		r2, _080477fc
	ldr		r3, _080477f8
	bl		sub_08029ee4
	b		_08047884

.incbin "base.gba", 0x477DA, 0x2

_080477dc:	.4byte 0x03002398
_080477e0:	.4byte 0x0300239C
_080477e4:	.4byte 0x03002390
_080477e8:	.4byte 0x000007DA
_080477ec:	.4byte 0x00000814
_080477f0:	.4byte 0x080884e8
_080477f4:	.4byte 0x06012640
_080477f8:	.4byte 0x80000020
_080477fc:	.4byte 0x06012680

_08047800:
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	bne		_08047824
	bl		sub_08029f34
	ldr		r1, _08047818
	ldr		r2, _0804781c
	ldr		r3, _08047820
	bl		sub_08029ee4
	b		_08047884

_08047818:	.4byte 0x080887e8
_0804781c:	.4byte 0x06012640
_08047820:	.4byte 0x80000040

_08047824:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_08047834
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r1, r0
	bne		_08047884
_08047834:
	ldr		r1, _08047890
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	mov		r4, #0x0
	mov		r7, #0x0
	mov		r2, #0xfe
	lsl		r2, r2, #0x3
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	bge		_08047884
	ldr		r6, _08047894
_0804784e:
	lsl		r0, r4, #0x2
	ldr		r2, _08047898
	add		r1, r5, r2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, r8
	beq		_08047876
	bl		sub_08029f34
	lsl		r1, r4, #0x6
	ldr		r2, _0804789c
	add		r1, r1, r2
	add		r2, r6, #0x0
	ldr		r3, _080478a0
	bl		sub_08029ee4
	add		r6, #0x40
	add		r7, #0x1
	cmp		r7, #0x2
	bgt		_08047884
_08047876:
	add		r4, #0x1
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	blt		_0804784e
_08047884:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4788E, 0x2

_08047890:	.4byte 0x00000814
_08047894:	.4byte 0x06012640
_08047898:	.4byte 0x000007F4
_0804789c:	.4byte 0x080886e8
_080478a0:	.4byte 0x80000020
	thumb_func_end sub_08047738

	thumb_func_start sub_080478a4
sub_080478a4:
	push	{ r4, r5, r6, r7, lr }
	ldr		r0, _080478cc
	mov		r1, #0x24
	add		r1, r1, r0
	mov		r12, r1
	ldr		r2, _080478d0
	add		r1, r0, r2
	ldr		r2, [r1, #0x0]
	ldr		r1, _080478d4
	add		r0, r0, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_080478d8
	add		r0, r2, #0x0
	add		r0, #0xec
	ldrb	r1, [r0, #0x0]
	b		_080478e0

_080478cc:	.4byte RunGameLogic_CallBack
_080478d0:	.4byte 0x00000838
_080478d4:	.4byte 0x000007FE

_080478d8:
	add		r0, r2, #0x0
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r1, r0, #0x1
_080478e0:
	mov		r5, #0x0
	mov		r4, #0x0
	ldr		r2, _08047910
	ldr		r0, [r2, #0x0]
	ldr		r7, _08047914
	cmp		r1, r0
	beq		_080479a0
	str		r1, [r2, #0x0]
	mov		r0, #0x6
	str		r0, [r7, #0x0]
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r0, r12
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_08047918
	cmp		r0, #0x3
	beq		_08047938
	add		r0, r1, #0x0
	cmp		r1, #0x1
	beq		_08047984
	cmp		r1, #0x1
	bgt		_08047972
	b		_0804796c

_08047910:	.4byte 0x0300239C
_08047914:	.4byte 0x03002398

_08047918:
	cmp		r1, #0x0
	beq		_08047928
	cmp		r1, #0x1
	beq		_08047930
	ldr		r4, _08047924
	b		_0804799e

_08047924:	.4byte 0x081093f8

_08047928:
	ldr		r4, _0804792c
	b		_0804799e

_0804792c:	.4byte 0x08109434

_08047930:
	ldr		r4, _08047934
	b		_0804799e

_08047934:	.4byte 0x08109470

_08047938:
	cmp		r1, #0x1
	beq		_08047954
	cmp		r1, #0x1
	bgt		_08047946
	cmp		r1, #0x0
	beq		_0804794c
	b		_08047964
_08047946:
	cmp		r1, #0x2
	beq		_0804795c
	b		_08047964
_0804794c:
	ldr		r4, _08047950
	b		_0804799e

_08047950:	.4byte 0x08109578

_08047954:
	ldr		r4, _08047958
	b		_0804799e

_08047958:	.4byte 0x081095cc

_0804795c:
	ldr		r4, _08047960
	b		_0804799e

_08047960:	.4byte 0x08109620

_08047964:
	ldr		r4, _08047968
	b		_0804799e

_08047968:	.4byte 0x08109524

_0804796c:
	cmp		r0, #0x0
	beq		_0804797c
	b		_0804799c
_08047972:
	cmp		r1, #0x2
	beq		_0804798c
	cmp		r1, #0x3
	beq		_08047994
	b		_0804799c
_0804797c:
	ldr		r4, _08047980
	b		_0804799e

_08047980:	.4byte 0x081097dc

_08047984:
	ldr		r4, _08047988
	b		_0804799e

_08047988:	.4byte 0x08109848

_0804798c:
	ldr		r4, _08047990
	b		_0804799e

_08047990:	.4byte 0x081098b4

_08047994:
	ldr		r4, _08047998
	b		_0804799e

_08047998:	.4byte 0x08109920

_0804799c:
	ldr		r4, _080479c4
_0804799e:
	mov		r5, #0x1
_080479a0:
	ldr		r3, _080479c8
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x0
	bne		_080479aa
	str		r0, [r7, #0x0]
_080479aa:
	add		r6, r7, #0x0
	ldr		r2, [r6, #0x0]
	cmp		r2, #0x0
	ble		_080479cc
	ldrb	r1, [r3, #0xC]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08047a78
	sub		r0, r2, #0x1
	str		r0, [r6, #0x0]
	b		_08047a78

.incbin "base.gba", 0x479C2, 0x2

_080479c4:	.4byte 0x08109770
_080479c8:	.4byte 0x03006000

_080479cc:
	cmp		r2, #0x0
	bne		_08047a78
	sub		r0, r2, #0x1
	str		r0, [r7, #0x0]
	mov		r0, #0xfe
	lsl		r0, r0, #0x3
	add		r0, r12
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_080479ee
	cmp		r0, #0x3
	beq		_08047a10
	cmp		r1, #0x1
	beq		_08047a5c
	cmp		r1, #0x1
	bgt		_08047a4a
	b		_08047a44
_080479ee:
	cmp		r1, #0x0
	beq		_08047a00
	cmp		r1, #0x1
	beq		_08047a08
	ldr		r4, _080479fc
	b		_08047a76

.incbin "base.gba", 0x479FA, 0x2

_080479fc:	.4byte 0x081093f8

_08047a00:
	ldr		r4, _08047a04
	b		_08047a76

_08047a04:	.4byte 0x081094ac

_08047a08:
	ldr		r4, _08047a0c
	b		_08047a76

_08047a0c:	.4byte 0x081094e8

_08047a10:
	cmp		r1, #0x1
	beq		_08047a2c
	cmp		r1, #0x1
	bgt		_08047a1e
	cmp		r1, #0x0
	beq		_08047a24
	b		_08047a3c
_08047a1e:
	cmp		r1, #0x2
	beq		_08047a34
	b		_08047a3c
_08047a24:
	ldr		r4, _08047a28
	b		_08047a76

_08047a28:	.4byte 0x08109674

_08047a2c:
	ldr		r4, _08047a30
	b		_08047a76

_08047a30:	.4byte 0x081096c8

_08047a34:
	ldr		r4, _08047a38
	b		_08047a76

_08047a38:	.4byte 0x0810971c

_08047a3c:
	ldr		r4, _08047a40
	b		_08047a76

_08047a40:	.4byte 0x08109524

_08047a44:
	cmp		r1, #0x0
	beq		_08047a54
	b		_08047a74
_08047a4a:
	cmp		r1, #0x2
	beq		_08047a64
	cmp		r1, #0x3
	beq		_08047a6c
	b		_08047a74
_08047a54:
	ldr		r4, _08047a58
	b		_08047a76

_08047a58:	.4byte 0x0810998c

_08047a5c:
	ldr		r4, _08047a60
	b		_08047a76

_08047a60:	.4byte 0x081099f8

_08047a64:
	ldr		r4, _08047a68
	b		_08047a76

_08047a68:	.4byte 0x08109a64

_08047a6c:
	ldr		r4, _08047a70
	b		_08047a76

_08047a70:	.4byte 0x08109ad0

_08047a74:
	ldr		r4, _08047ad0
_08047a76:
	mov		r5, #0x1
_08047a78:
	cmp		r5, #0x0
	beq		_08047a94
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x2
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		sub_080490ac
	mov		r0, #0x1
	bl		sub_080281fc
_08047a94:
	ldr		r0, _08047ad4
	ldr		r1, [r0, #0x10]
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_08047ac8
	mov		r0, #0x4
	and		r1, r0
	ldr		r4, _08047ad8
	cmp		r1, #0x0
	beq		_08047aac
	ldr		r4, _08047adc
_08047aac:
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r2, #0xb9
	lsl		r2, r2, #0x1
	add		r1, r1, r2
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
_08047ac8:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x47ACE, 0x2

_08047ad0:	.4byte 0x08109770
_08047ad4:	.4byte RunGameLogic_CallBack
_08047ad8:	.4byte 0x080805ec
_08047adc:	.4byte 0x080805e8
	thumb_func_end sub_080478a4

	thumb_func_start sub_08047ae0
sub_08047ae0:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r1, _08047c50
	add		r0, r4, r1
	ldr		r5, [r0, #0x0]
	add		r3, r5, #0x0
	add		r3, #0xba
	ldrh	r0, [r3, #0x0]
	lsr		r7, r0, #0x1
	sub		r1, #0x3a
	add		r0, r4, r1
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_08047b10
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_08047b10
	b		_08047d22
_08047b10:
	ldr		r2, _08047c54
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	cmp		r0, r7
	beq		_08047b72
	ldr		r0, _08047c58
	add		r1, r4, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	ldrh	r0, [r3, #0x0]
	lsr		r1, r0, #0x1
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r1, r0
	ble		_08047b72
	sub		r1, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r4, #0x0
	bl		sub_08044894
	add		r2, r0, #0x0
	ldr		r1, _08047c50
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08047b72
	ldr		r3, _08047c5c
	add		r0, r2, #0x0
	add		r0, #0x4c
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x7
	and		r1, r0
	add		r0, r2, #0x0
	add		r0, #0x58
	ldrh	r2, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r2
	lsl		r1, r1, #0x2
	cmp		r0, #0x0
	bne		_08047b6a
	add		r1, #0x2
_08047b6a:
	add		r0, r1, r3
	ldrh	r0, [r0, #0x0]
	bl		sub_0807073c
_08047b72:
	ldr		r1, _08047c54
	add		r2, r5, #0x0
	add		r2, #0xba
	ldrh	r0, [r2, #0x0]
	lsr		r0, r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r3, _08047c58
	add		r1, r4, r3
	ldr		r0, [r1, #0x0]
	add		r5, r2, #0x0
	cmp		r0, #0x0
	beq		_08047c04
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r1, _08047c60
	add		r0, r4, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x4
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	cmp		r0, r1
	bne		_08047bea
	add		r3, #0x4
	add		r0, r4, r3
	ldrb	r0, [r0, #0x0]
	sub		r6, r0, #0x1
	ldrh	r0, [r5, #0x0]
	lsr		r0, r0, #0x1
	cmp		r0, #0x0
	beq		_08047bca
	bl		sub_08029f34
	ldrh	r1, [r5, #0x0]
	lsr		r1, r1, #0x1
	sub		r1, #0x1
	lsl		r1, r1, #0x6
	ldr		r2, _08047c64
	add		r1, r1, r2
	ldr		r2, _08047c68
	ldr		r3, _08047c6c
	bl		sub_08029ee4
_08047bca:
	ldrh	r0, [r5, #0x0]
	lsr		r0, r0, #0x1
	cmp		r0, r6
	bge		_08047bea
	bl		sub_08029f34
	ldrh	r1, [r5, #0x0]
	lsr		r1, r1, #0x1
	add		r1, #0x1
	lsl		r1, r1, #0x6
	ldr		r2, _08047c64
	add		r1, r1, r2
	ldr		r2, _08047c70
	ldr		r3, _08047c6c
	bl		sub_08029ee4
_08047bea:
	ldr		r1, _08047c74
	mov		r0, #0x20
	strh	r0, [r1, #0x0]
	bl		sub_08029f34
	ldr		r2, _08047c78
	lsl		r1, r7, #0x2
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	ldr		r2, _08047c7c
	ldr		r3, _08047c80
	bl		sub_08029ee4
_08047c04:
	ldr		r2, _08047c74
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r0, #0x0
	bgt		_08047c12
	b		_08047d22
_08047c12:
	sub		r1, #0x1
	strh	r1, [r2, #0x0]
	lsl		r0, r1, #0x10
	cmp		r0, #0x0
	ble		_08047c90
	mov		r0, #0x4
	and		r1, r0
	ldr		r3, _08047c84
	cmp		r1, #0x0
	beq		_08047c28
	sub		r3, #0x8
_08047c28:
	mov		r1, #0x0
	ldr		r6, _08047c88
	ldr		r0, _08047c8c
	add		r5, r4, r0
	add		r4, r6, #0x0
_08047c32:
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r0, #0x1
	add		r1, r1, r4
	ldrh	r2, [r3, #0x0]
	strh	r2, [r1, #0x0]
	add		r3, #0x2
	add		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x3
	ble		_08047c32
	b		_08047ce0

.incbin "base.gba", 0x47C4E, 0x2

_08047c50:	.4byte 0x00000814
_08047c54:	.4byte 0x030023A8
_08047c58:	.4byte 0x000007EC
_08047c5c:	.4byte 0x08107874
_08047c60:	.4byte 0x000007DA
_08047c64:	.4byte 0x080884e8
_08047c68:	.4byte 0x06012640
_08047c6c:	.4byte 0x80000020
_08047c70:	.4byte 0x06012680
_08047c74:	.4byte 0x0203EF04
_08047c78:	.4byte 0x08109310
_08047c7c:	.4byte 0x06001C00
_08047c80:	.4byte 0x800000B0
_08047c84:	.4byte 0x080805e0
_08047c88:	.4byte 0x030023A0
_08047c8c:	.4byte 0x000007D4

_08047c90:
	ldrh	r0, [r5, #0x0]
	lsr		r2, r0, #0x1
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	ldrb	r3, [r0, #0x0]
	add		r1, r2, #0x0
	cmp		r3, #0x1
	ble		_08047cb6
	sub		r0, r3, #0x1
	cmp		r1, r0
	bne		_08047caa
	mov		r1, #0x7
_08047caa:
	cmp		r3, #0x2
	ble		_08047cb6
	sub		r0, r3, #0x2
	cmp		r2, r0
	bne		_08047cb6
	mov		r1, #0x5
_08047cb6:
	lsl		r1, r1, #0x3
	ldr		r0, _08047d28
	add		r3, r1, r0
	mov		r1, #0x0
	ldr		r6, _08047d2c
	ldr		r0, _08047d30
	add		r5, r4, r0
	add		r4, r6, #0x0
_08047cc6:
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r0, #0x1
	add		r1, r1, r4
	ldrh	r2, [r3, #0x0]
	strh	r2, [r1, #0x0]
	add		r3, #0x2
	add		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x3
	ble		_08047cc6
_08047ce0:
	ldrb	r1, [r5, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_08047d22
	mov		r0, #0x0
	bl		sub_08028130
	add		r3, r0, #0x0
	mov		r1, #0xc9
	lsl		r1, r1, #0x1
	add		r2, r3, r1
	ldrh	r0, [r6, #0x0]
	strh	r0, [r2, #0x0]
	mov		r0, #0xca
	lsl		r0, r0, #0x1
	add		r2, r3, r0
	ldrh	r0, [r6, #0x2]
	strh	r0, [r2, #0x0]
	add		r1, r6, #0x4
	mov		r0, #0xcb
	lsl		r0, r0, #0x1
	add		r2, r3, r0
	ldrh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	mov		r0, #0xcc
	lsl		r0, r0, #0x1
	add		r2, r3, r0
	ldrh	r0, [r1, #0x2]
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
_08047d22:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08047d28:	.4byte 0x08080590
_08047d2c:	.4byte 0x030023A0
_08047d30:	.4byte 0x000007D4
	thumb_func_end sub_08047ae0

	thumb_func_start sub_08047d34
sub_08047d34:
	push	{ r4, r5, r6, lr }
	ldr		r4, _08047db8
	add		r5, r4, #0x0
	add		r5, #0x24
	ldr		r1, _08047dbc
	add		r0, r4, r1
	ldr		r3, [r0, #0x0]
	ldr		r1, _08047dc0
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	ldr		r2, _08047dc4
	cmp		r0, #0x0
	bge		_08047d5c
	mov		r0, #0x7
	strh	r0, [r1, #0x0]
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	strh	r0, [r2, #0x0]
_08047d5c:
	mov		r6, #0x0
	ldrsh	r0, [r2, r6]
	cmp		r0, #0x1f
	ble		_08047dd8
	add		r0, r3, #0x0
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r3, r0, #0x1
	ldr		r1, _08047dc8
	add		r0, r4, r1
	ldrb	r2, [r0, #0x0]
	add		r1, r3, #0x0
	cmp		r2, #0x1
	ble		_08047d8c
	sub		r0, r2, #0x1
	cmp		r1, r0
	bne		_08047d80
	mov		r1, #0x7
_08047d80:
	cmp		r2, #0x2
	ble		_08047d8c
	sub		r0, r2, #0x2
	cmp		r3, r0
	bne		_08047d8c
	mov		r1, #0x5
_08047d8c:
	lsl		r1, r1, #0x3
	ldr		r0, _08047dcc
	add		r3, r1, r0
	mov		r1, #0x0
	ldr		r6, _08047dd0
	ldr		r0, _08047dd4
	add		r5, r5, r0
	add		r4, r6, #0x0
_08047d9c:
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r0, #0x1
	add		r1, r1, r4
	ldrh	r2, [r3, #0x0]
	strh	r2, [r1, #0x0]
	add		r3, #0x2
	add		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x3
	ble		_08047d9c
	b		_08047e0c

_08047db8:	.4byte RunGameLogic_CallBack
_08047dbc:	.4byte 0x00000838
_08047dc0:	.4byte 0x0203EF06
_08047dc4:	.4byte 0x030023AA
_08047dc8:	.4byte 0x00000814
_08047dcc:	.4byte 0x08080590
_08047dd0:	.4byte 0x030023A0
_08047dd4:	.4byte 0x000007D4

_08047dd8:
	ldrh	r1, [r1, #0x0]
	mov		r0, #0x4
	and		r0, r1
	ldr		r3, _08047e5c
	cmp		r0, #0x0
	beq		_08047de6
	sub		r3, #0x8
_08047de6:
	mov		r1, #0x0
	ldr		r6, _08047e60
	mov		r0, #0xff
	lsl		r0, r0, #0x3
	add		r5, r4, r0
	add		r4, r6, #0x0
_08047df2:
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r0, #0x1
	add		r1, r1, r4
	ldrh	r2, [r3, #0x0]
	strh	r2, [r1, #0x0]
	add		r3, #0x2
	add		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x3
	ble		_08047df2
_08047e0c:
	ldrb	r1, [r5, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_08047e4e
	mov		r0, #0x0
	bl		sub_08028130
	add		r3, r0, #0x0
	mov		r1, #0xc9
	lsl		r1, r1, #0x1
	add		r2, r3, r1
	ldrh	r0, [r6, #0x0]
	strh	r0, [r2, #0x0]
	mov		r0, #0xca
	lsl		r0, r0, #0x1
	add		r2, r3, r0
	ldrh	r0, [r6, #0x2]
	strh	r0, [r2, #0x0]
	add		r1, r6, #0x4
	mov		r6, #0xcb
	lsl		r6, r6, #0x1
	add		r2, r3, r6
	ldrh	r0, [r1, #0x0]
	strh	r0, [r2, #0x0]
	mov		r0, #0xcc
	lsl		r0, r0, #0x1
	add		r2, r3, r0
	ldrh	r0, [r1, #0x2]
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
_08047e4e:
	ldr		r0, _08047e64
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x47E5A, 0x2

_08047e5c:	.4byte 0x080805e0
_08047e60:	.4byte 0x030023A0
_08047e64:	.4byte 0x0203EF06
	thumb_func_end sub_08047d34

	thumb_func_start sub_08047e68
sub_08047e68:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r9, r0
	ldr		r0, _08047f30
	add		r0, r9
	ldr		r7, [r0, #0x0]
	ldr		r0, _08047f34
	ldr		r4, [r0, #0x0]
	add		r6, r0, #0x0
	cmp		r4, #0x0
	bne		_08047e86
	b		_08048170
_08047e86:
	add		r0, r7, #0x0
	add		r0, #0x90
	ldrb	r3, [r0, #0x0]
	ldr		r1, _08047f38
	ldr		r2, [r1, #0x0]
	mov		r10, r0
	add		r5, r1, #0x0
	cmp		r3, r2
	beq		_08047f7a
	str		r3, [r5, #0x0]
	ldr		r0, [r7, #0x48]
	mov		r1, #0x84
	lsl		r1, r1, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_08047f7a
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0xff
	beq		_08047f7a
	ldr		r0, _08047f3c
	mov		r8, r0
	mov		r3, #0x0
_08047eb2:
	ldr		r1, [r6, #0x0]
	add		r4, r3, r1
	ldrb	r2, [r4, #0x0]
	ldr		r0, [r5, #0x0]
	cmp		r2, r0
	bne		_08047f70
	ldr		r1, _08047f40
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r0, _08047f44
	str		r3, [r0, #0x0]
	ldr		r0, _08047f48
	mov		r6, #0x0
	str		r6, [r0, #0x0]
	ldr		r0, _08047f4c
	str		r2, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xc6
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x8
	sub		r0, #0x7f
	mov		r1, r8
	str		r0, [r1, #0x0]
	ldrb	r4, [r4, #0x2]
	bl		sub_08029f34
	ldr		r2, _08047f50
	mov		r1, #0x81
	neg		r1, r1
	and		r1, r4
	lsl		r1, r1, #0x2
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	ldr		r2, _08047f54
	ldr		r3, _08047f58
	bl		sub_08029ee4
	mov		r0, #0x80
	and		r4, r0
	ldr		r5, _08047f5c
	cmp		r4, #0x0
	beq		_08047f08
	ldr		r5, _08047f60
_08047f08:
	mov		r0, #0x0
	mov		r1, #0xd
	mov		r2, #0x5
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_080490ac
	mov		r0, #0x1
	bl		sub_080281fc
	ldr		r0, _08047f64
	str		r6, [r0, #0x0]
	ldr		r0, _08047f68
	str		r6, [r0, #0x0]
	ldr		r0, _08047f6c
	str		r6, [r0, #0x0]
	b		_08047f7a

.incbin "base.gba", 0x47F2E, 0x2

_08047f30:	.4byte 0x00000814
_08047f34:	.4byte 0x030023AC
_08047f38:	.4byte 0x0203EF08
_08047f3c:	.4byte 0x0203EF10
_08047f40:	.4byte 0x030023B0
_08047f44:	.4byte 0x030023B4
_08047f48:	.4byte 0x030023B8
_08047f4c:	.4byte 0x0203EF0C
_08047f50:	.4byte 0x08109330
_08047f54:	.4byte 0x06000C80
_08047f58:	.4byte 0x800000C0
_08047f5c:	.4byte 0x08109b3c
_08047f60:	.4byte 0x08109b58
_08047f64:	.4byte 0x0203EF14
_08047f68:	.4byte 0x0203EF18
_08047f6c:	.4byte 0x0203EF1C

_08047f70:
	add		r3, #0x4
	add		r0, r3, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	bne		_08047eb2
_08047f7a:
	ldr		r0, _08048000
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08047f84
	b		_08048170
_08047f84:
	ldr		r0, _08048004
	ldr		r1, [r0, #0x0]
	ldr		r0, _08048008
	ldr		r0, [r0, #0x0]
	add		r1, r1, r0
	ldrb	r0, [r1, #0x1]
	lsl		r0, r0, #0x2
	mov		r8, r0
	ldrb	r2, [r1, #0x2]
	mov		r12, r2
	ldrb	r5, [r1, #0x3]
	add		r3, r7, #0x0
	add		r3, #0xc6
	ldrh	r2, [r3, #0x0]
	lsr		r2, r2, #0x8
	sub		r2, #0x7f
	ldr		r0, _0804800c
	add		r0, r9
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x8
	mov		r1, #0x7f
	and		r0, r1
	ldr		r1, _08048010
	mov		r9, r3
	cmp		r2, r0
	bne		_08047fc4
	mov		r0, #0x80
	and		r0, r5
	cmp		r0, #0x0
	beq		_08047fc4
	mov		r0, r8
	str		r0, [r1, #0x0]
_08047fc4:
	mov		r2, #0xc2
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	ldr		r3, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x8
	and		r3, r0
	cmp		r3, #0x0
	beq		_08047fe2
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	cmp		r3, r0
	beq		_08047fe2
	mov		r0, r8
	str		r0, [r1, #0x0]
_08047fe2:
	ldr		r0, [r1, #0x0]
	cmp		r0, r8
	blt		_08047fea
	b		_080480e0
_08047fea:
	mov		r6, #0x0
	mov		r3, #0x0
	mov		r0, #0xf
	and		r0, r5
	cmp		r0, #0x1
	beq		_0804801e
	cmp		r0, #0x1
	bgt		_08048014
	cmp		r0, #0x0
	beq		_0804801a
	b		_08048028

_08048000:	.4byte 0x030023B0
_08048004:	.4byte 0x030023B4
_08048008:	.4byte 0x030023AC
_0804800c:	.4byte 0x000007E6
_08048010:	.4byte 0x030023B8

_08048014:
	cmp		r0, #0x2
	beq		_08048024
	b		_08048028
_0804801a:
	mov		r6, #0x6
	b		_08048026
_0804801e:
	mov		r6, #0x3
	mov		r3, #0x1
	b		_08048028
_08048024:
	mov		r6, #0xa
_08048026:
	mov		r3, #0x2
_08048028:
	ldr		r4, _0804805c
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	bne		_08048068
	ldr		r2, _08048060
	ldr		r0, [r2, #0x0]
	cmp		r0, r6
	ble		_080480a8
	str		r1, [r2, #0x0]
	mov		r0, #0x1
	str		r0, [r4, #0x0]
	ldr		r4, _08048064
	mov		r0, #0x0
	mov		r1, #0xd
	mov		r2, #0x5
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		sub_080490ac
	mov		r0, #0x1
	bl		sub_080281fc
	b		_080480a8

.incbin "base.gba", 0x4805A, 0x2

_0804805c:	.4byte 0x0203EF14
_08048060:	.4byte 0x0203EF18
_08048064:	.4byte 0x08109b74

_08048068:
	ldr		r2, _080480b8
	ldr		r0, [r2, #0x0]
	cmp		r0, r3
	ble		_080480a8
	mov		r0, #0x0
	str		r0, [r2, #0x0]
	mov		r0, #0x1
	sub		r0, r0, r1
	str		r0, [r4, #0x0]
	mov		r0, #0x80
	mov		r1, r12
	and		r1, r0
	ldr		r4, _080480bc
	cmp		r1, #0x0
	beq		_08048088
	ldr		r4, _080480c0
_08048088:
	mov		r0, #0x0
	mov		r1, #0xd
	mov		r2, #0x5
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		sub_080490ac
	mov		r0, #0x1
	bl		sub_080281fc
	ldr		r1, _080480c4
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
_080480a8:
	mov		r0, #0xf
	and		r0, r5
	cmp		r0, #0x1
	beq		_080480c8
	ldr		r1, _080480b8
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	b		_080480fe

_080480b8:	.4byte 0x0203EF18
_080480bc:	.4byte 0x08109b3c
_080480c0:	.4byte 0x08109b58
_080480c4:	.4byte 0x0203EF1C

_080480c8:
	ldr		r0, _080480d8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	bgt		_08048100
	ldr		r1, _080480dc
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	b		_080480fe

_080480d8:	.4byte 0x0203EF1C
_080480dc:	.4byte 0x0203EF18

_080480e0:
	ldr		r4, _08048114
	mov		r0, #0x0
	mov		r1, #0xd
	mov		r2, #0x5
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		sub_080490ac
	mov		r0, #0x1
	bl		sub_080281fc
	ldr		r1, _08048118
	mov		r0, #0x0
_080480fe:
	str		r0, [r1, #0x0]
_08048100:
	mov		r0, #0x40
	and		r0, r5
	cmp		r0, #0x0
	bne		_08048120
	ldr		r1, _0804811c
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	b		_08048170

.incbin "base.gba", 0x48112, 0x2

_08048114:	.4byte 0x08109b74
_08048118:	.4byte 0x030023B0
_0804811c:	.4byte 0x030023B8

_08048120:
	mov		r2, r9
	ldrh	r0, [r2, #0x0]
	lsr		r0, r0, #0x8
	sub		r0, #0x7f
	ldr		r1, _08048144
	ldr		r1, [r1, #0x0]
	cmp		r0, r1
	ble		_08048150
	ldr		r0, _08048148
	mov		r2, r10
	ldrb	r1, [r2, #0x0]
	ldrh	r0, [r0, #0x38]
	add		r1, r1, r0
	ldr		r0, _0804814c
	ldr		r0, [r0, #0x0]
	sub		r1, r1, r0
	b		_0804815a

.incbin "base.gba", 0x48142, 0x2

_08048144:	.4byte 0x0203EF10
_08048148:	.4byte RunGameLogic_CallBack
_0804814c:	.4byte 0x0203EF0C

_08048150:
	mov		r2, r10
	ldrb	r0, [r2, #0x0]
	ldr		r1, _08048180
	ldr		r1, [r1, #0x0]
	sub		r1, r0, r1
_0804815a:
	cmp		r1, #0x0
	bge		_08048160
	neg		r1, r1
_08048160:
	mov		r0, #0x30
	and		r5, r0
	asr		r0, r5, #0x4
	cmp		r1, r0
	ble		_08048170
	ldr		r0, _08048184
	mov		r1, r8
	str		r1, [r0, #0x0]
_08048170:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4817E, 0x2

_08048180:	.4byte 0x0203EF0C
_08048184:	.4byte 0x030023B8
	thumb_func_end sub_08047e68

	thumb_func_start sub_08048188
sub_08048188:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _08048240
	add		r6, r0, #0x0
	add		r6, #0x24
	add		r0, r6, #0x0
	bl		sub_0802c80c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	add		r0, #0x13
	ldr		r2, [r4, #0x0]
	asr		r2, r0
	add		r2, #0xa8
	lsl		r2, r2, #0x10
	ldr		r1, [r4, #0x4]
	asr		r1, r0
	add		r1, #0x58
	lsl		r1, r1, #0x10
	lsr		r2, r2, #0x10
	orr		r2, r1
	str		r2, [sp, #0x8]
	ldr		r3, _08048244
	cmp		r5, #0x0
	bne		_080481cc
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_080481cc
	ldr		r3, _08048248
_080481cc:
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_080481e4
	add		r0, r4, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_080481e6
_080481e4:
	ldr		r3, _0804824c
_080481e6:
	cmp		r5, #0x0
	beq		_080481f8
	ldr		r0, _08048250
	ldr		r0, [r0, #0x0]
	mov		r1, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_080481f8
	ldr		r3, _08048254
_080481f8:
	ldr		r1, _08048258
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x8
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_0804821a
	add		r0, r4, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08048238
_0804821a:
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x4]
	add		r0, r3, #0x0
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	cmp		r5, #0x0
	beq		_08048238
	ldr		r1, _08048250
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
_08048238:
	add		sp, #0xc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08048240:	.4byte RunGameLogic_CallBack
_08048244:	.4byte 0x08109350
_08048248:	.4byte 0x08109360
_0804824c:	.4byte 0x08109368
_08048250:	.4byte 0x03002388
_08048254:	.4byte 0x08109358
_08048258:	.4byte 0x00000814
	thumb_func_end sub_08048188

	thumb_func_start sub_0804825c
sub_0804825c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	ldr		r0, _080482d8
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_080482ce
	ldr		r0, _080482dc
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080482ce
	ldr		r0, _080482e0
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	blt		_080482ce
	mov		r7, #0xa0
	mov		r0, #0x0
_0804828e:
	mov		r4, #0x0
	add		r5, r0, #0x2
	add		r6, r0, #0x1
_08048294:
	add		r1, r4, #0x2
	mov		r0, #0x0
	add		r2, r5, #0x0
	bl		sub_080281b0
	add		r2, r7, #0x0
	add		r1, r2, #0x1
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	mov		r3, #0xf0
	lsl		r3, r3, #0x8
	add		r1, r3, #0x0
	orr		r2, r1
	strh	r2, [r0, #0x0]
	add		r4, #0x1
	cmp		r4, #0x8
	ble		_08048294
	add		r0, r6, #0x0
	cmp		r0, #0x2
	ble		_0804828e
	mov		r0, #0x1
	bl		sub_080281fc
	ldr		r2, _080482d8
	add		r2, r8
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x40
	orr		r0, r1
	strh	r0, [r2, #0x0]
_080482ce:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080482d8:	.4byte 0x00000C68
_080482dc:	.4byte 0x00000BEE
_080482e0:	.4byte 0x00000C88
	thumb_func_end sub_0804825c

	thumb_func_start sub_080482e4
sub_080482e4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	ldr		r0, _08048348
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0804839a
	ldr		r0, _0804834c
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804839a
	ldr		r0, _08048350
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	blt		_08048354
	mov		r7, #0xc0
	mov		r0, #0x0
_08048316:
	mov		r4, #0x0
	add		r5, r0, #0x2
	add		r6, r0, #0x1
_0804831c:
	add		r1, r4, #0x0
	add		r1, #0x13
	mov		r0, #0x0
	add		r2, r5, #0x0
	bl		sub_080281b0
	add		r2, r7, #0x0
	add		r1, r2, #0x1
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	mov		r3, #0xf0
	lsl		r3, r3, #0x8
	add		r1, r3, #0x0
	orr		r2, r1
	strh	r2, [r0, #0x0]
	add		r4, #0x1
	cmp		r4, #0x8
	ble		_0804831c
	add		r0, r6, #0x0
	cmp		r0, #0x2
	ble		_08048316
	b		_08048388

_08048348:	.4byte 0x00000C68
_0804834c:	.4byte 0x00000BEE
_08048350:	.4byte 0x00000C88

_08048354:
	mov		r7, #0xa0
	mov		r0, #0x0
_08048358:
	mov		r4, #0x0
	add		r5, r0, #0x2
	add		r6, r0, #0x1
_0804835e:
	add		r1, r4, #0x0
	add		r1, #0x13
	mov		r0, #0x0
	add		r2, r5, #0x0
	bl		sub_080281b0
	add		r2, r7, #0x0
	add		r1, r2, #0x1
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	mov		r3, #0xf0
	lsl		r3, r3, #0x8
	add		r1, r3, #0x0
	orr		r2, r1
	strh	r2, [r0, #0x0]
	add		r4, #0x1
	cmp		r4, #0x8
	ble		_0804835e
	add		r0, r6, #0x0
	cmp		r0, #0x2
	ble		_08048358
_08048388:
	mov		r0, #0x1
	bl		sub_080281fc
	ldr		r2, _080483a4
	add		r2, r8
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x20
	orr		r0, r1
	strh	r0, [r2, #0x0]
_0804839a:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080483a4:	.4byte 0x00000C68
	thumb_func_end sub_080482e4

	thumb_func_start sub_080483a8
sub_080483a8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	ldr		r2, _0804841c
	add		r2, r8
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08048420
	and		r0, r1
	strh	r0, [r2, #0x0]
	mov		r7, #0xa0
	bl		sub_08029f34
	ldr		r1, _08048424
	ldr		r2, _08048428
	ldr		r3, _0804842c
	bl		sub_08029ee4
	mov		r0, #0x0
_080483ce:
	mov		r4, #0x0
	add		r5, r0, #0x2
	add		r6, r0, #0x1
_080483d4:
	add		r1, r4, #0x0
	add		r1, #0x15
	mov		r0, #0x0
	add		r2, r5, #0x0
	bl		sub_080281b0
	add		r2, r7, #0x0
	add		r1, r2, #0x1
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	mov		r3, #0xd0
	lsl		r3, r3, #0x8
	add		r1, r3, #0x0
	orr		r2, r1
	strh	r2, [r0, #0x0]
	add		r4, #0x1
	cmp		r4, #0x8
	ble		_080483d4
	add		r0, r6, #0x0
	cmp		r0, #0x1
	ble		_080483ce
	mov		r0, #0x1
	bl		sub_080281fc
	ldr		r2, _0804841c
	add		r2, r8
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x10
	orr		r0, r1
	strh	r0, [r2, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4841A, 0x2

_0804841c:	.4byte 0x00000C68
_08048420:	.4byte 0x0000FFEF
_08048424:	.4byte 0x08080968
_08048428:	.4byte 0x06001400
_0804842c:	.4byte 0x80000120
	thumb_func_end sub_080483a8

	thumb_func_start sub_08048430
sub_08048430:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r5, _080484e0
	ldr		r0, _080484e4
	add		r0, r0, r5
	mov		r8, r0
	ldrh	r0, [r0, #0x0]
	mov		r6, #0xf0
	lsl		r6, r6, #0x4
	add		r1, r6, #0x0
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_080484c2
	ldr		r4, _080484e8
	mov		r0, #0x0
	mov		r1, #0x4
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		sub_080490ac
	ldr		r4, _080484ec
	mov		r0, #0x0
	mov		r1, #0x9
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		sub_080490ac
	ldr		r1, _080484f0
	add		r0, r5, r1
	ldrh	r4, [r0, #0x0]
	lsr		r4, r4, #0x8
	mov		r0, #0x7
	and		r4, r0
	mov		r0, #0x0
	mov		r1, #0xa
	mov		r2, #0x0
	bl		sub_080281b0
	ldr		r3, _080484f4
	lsl		r1, r4, #0x1
	add		r1, r1, r3
	ldrh	r1, [r1, #0x0]
	mov		r7, #0xc0
	lsl		r7, r7, #0x8
	add		r2, r7, #0x0
	orr		r1, r2
	strh	r1, [r0, #0x0]
	add		r0, #0x40
	add		r4, #0xa
	lsl		r4, r4, #0x1
	add		r4, r4, r3
	ldrh	r1, [r4, #0x0]
	orr		r1, r2
	strh	r1, [r0, #0x0]
	ldr		r4, _080484f8
	mov		r0, #0x0
	mov		r1, #0x12
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		sub_080490ac
_080484c2:
	mov		r3, #0x0
	ldr		r1, _080484fc
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	bge		_08048500
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_08048560
	mov		r0, #0x4
	and		r1, r0
	cmp		r1, #0x0
	bne		_08048560
	b		_08048574

_080484e0:	.4byte RunGameLogic_CallBack
_080484e4:	.4byte 0x000007FE
_080484e8:	.4byte 0x081093b4
_080484ec:	.4byte 0x08109b90
_080484f0:	.4byte 0x0000080A
_080484f4:	.4byte 0x0810928a
_080484f8:	.4byte 0x081093c4
_080484fc:	.4byte 0x00000CAC

_08048500:
	mov		r7, r8
	ldrh	r2, [r7, #0x0]
	add		r1, r6, #0x0
	and		r1, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_0804851c
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_0804853c
_08048518:
	mov		r3, #0x1
	b		_08048560
_0804851c:
	mov		r0, #0x10
	and		r0, r2
	cmp		r0, #0x0
	beq		_08048518
	mov		r1, #0x0
	ldr		r0, _08048538
	ldrh	r0, [r0, #0x10]
	cmp		r0, #0x0
	bne		_08048530
	mov		r1, #0x1
_08048530:
	cmp		r1, #0x0
	beq		_0804855c
	b		_08048518

.incbin "base.gba", 0x48536, 0x2

_08048538:	.4byte 0x03002FE0

_0804853c:
	mov		r1, #0x0
	ldr		r2, _080485c0
	ldrh	r0, [r2, #0x8]
	cmp		r0, #0x0
	bne		_08048548
	mov		r1, #0x1
_08048548:
	cmp		r1, #0x0
	bne		_0804855a
	mov		r1, #0x0
	ldrh	r0, [r2, #0xa]
	cmp		r0, #0x0
	bne		_08048556
	mov		r1, #0x1
_08048556:
	cmp		r1, #0x0
	beq		_0804855c
_0804855a:
	mov		r3, #0x1
_0804855c:
	cmp		r3, #0x0
	beq		_08048574
_08048560:
	ldr		r4, _080485c4
	mov		r0, #0x0
	mov		r1, #0xd
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		sub_080490ac
_08048574:
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	mov		r0, #0x0
	ldr		r1, _080485c8
	mov		r8, r1
_0804857e:
	mov		r4, #0x0
	add		r5, r0, #0x0
	add		r5, #0xc
	add		r7, r0, #0x1
_08048586:
	add		r1, r4, #0x0
	add		r1, #0x16
	mov		r0, #0x0
	add		r2, r5, #0x0
	bl		sub_080281b0
	add		r1, r6, #0x0
	mov		r2, r8
	orr		r1, r2
	strh	r1, [r0, #0x0]
	add		r6, #0x1
	add		r4, #0x1
	cmp		r4, #0x7
	ble		_08048586
	add		r0, r7, #0x0
	cmp		r0, #0x7
	ble		_0804857e
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x1
	bl		sub_080281fc
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x485BE, 0x2

_080485c0:	.4byte 0x03002FE0
_080485c4:	.4byte 0x081093d4
_080485c8:	.4byte 0xFFFFB000
	thumb_func_end sub_08048430

	thumb_func_start sub_080485cc
sub_080485cc:
	push	{ r4, lr }
	sub		sp, #0x8
	add		r4, r0, #0x0
	ldr		r1, _0804862c
	add		r0, r4, r1
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r2, _08048630
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	sub		r2, #0x2
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	add		r2, #0x4
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	bl		sub_08029f34
	ldr		r1, _08048634
	mov		r2, #0xc0
	lsl		r2, r2, #0x13
	ldr		r3, _08048638
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _0804863c
	ldr		r2, _08048640
	ldr		r3, _08048644
	bl		sub_08029ee4
	ldr		r0, _08048648
	add		r4, r4, r0
	ldrh	r0, [r4, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_0804867e
	cmp		r1, r0
	bgt		_0804864c
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_0804867e
	b		_0804868c

_0804862c:	.4byte 0x00000C68
_08048630:	.4byte 0x00000C6C
_08048634:	.4byte 0x0807e190
_08048638:	.4byte 0x80001000
_0804863c:	.4byte 0x0203EF20
_08048640:	.4byte 0x06001C00
_08048644:	.4byte 0x810000B0
_08048648:	.4byte 0x000007DA

_0804864c:
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r1, r0
	bne		_0804868c
	ldr		r0, _08048704
	ldr		r1, _08048708
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r0, _0804870c
	ldr		r1, _08048710
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r0, _08048714
	ldr		r1, _08048718
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r4, _0804871c
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x18
	bl		_CallHardwareSetCpuFast
_0804867e:
	bl		sub_08029f34
	ldr		r1, _08048720
	ldr		r2, _08048724
	ldr		r3, _08048728
	bl		sub_08029ee4
_0804868c:
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [sp, #0x0]
	ldr		r1, _0804872c
	ldr		r2, _08048730
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
	ldr		r4, _08048734
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r2, #0xa0
	lsl		r2, r2, #0x1
	add		r1, r1, r2
	add		r0, r4, #0x0
	mov		r2, #0x30
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x0
	bl		sub_08028130
	mov		r2, #0x9f
	lsl		r2, r2, #0x1
	add		r1, r0, r2
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r1, _08048738
	mov		r0, #0x0
	bl		sub_080281c4
	ldr		r1, _0804873c
	mov		r0, #0x1
	bl		sub_080281c4
	mov		r0, #0x0
	bl		sub_080281d4
	ldr		r0, _08048740
	str		r0, [sp, #0x4]
	add		r4, sp, #0x4
	mov		r0, #0x1
	bl		sub_080281a4
	add		r1, r0, #0x0
	ldr		r2, _08048744
	add		r0, r4, #0x0
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x3
	bl		sub_080281fc
	add		sp, #0x8
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08048704:	.4byte 0x080889c8
_08048708:	.4byte 0x06011180
_0804870c:	.4byte 0x08088b6c
_08048710:	.4byte 0x06011400
_08048714:	.4byte 0x08088a88
_08048718:	.4byte 0x06011C00
_0804871c:	.4byte 0x08088968
_08048720:	.4byte 0x08080190
_08048724:	.4byte 0x06001000
_08048728:	.4byte 0x80000200
_0804872c:	.4byte 0x06002E00
_08048730:	.4byte 0x01000008
_08048734:	.4byte 0x0807e0d0
_08048738:	.4byte 0x06003800
_0804873c:	.4byte 0x06003000
_08048740:	.4byte 0x91709170
_08048744:	.4byte 0x01000200
	thumb_func_end sub_080485cc

	thumb_func_start sub_08048748
sub_08048748:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	ldr		r4, _080487d0
	mov		r0, #0x24
	add		r0, r0, r4
	mov		r10, r0
	ldr		r0, _080487d4
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	strb	r1, [r0, #0x4]
	mov		r2, #0x0
	strh		r1, [r0, #0x6]
	strb	r2, [r0, #0x8]
	strh		r1, [r0, #0xA]
	strb	r2, [r0, #0xC]
	bl		sub_08048430
	mov		r0, r10
	bl		sub_08046df4
	mov		r1, #0xb3
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xc4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08048790
	add		r0, r1, r0
	ldr		r1, _080487d8
	bl		_CallHardwareLZ77DecompressToMemory16Bit
_08048790:
	ldr		r2, _080487dc
	add		r0, r4, r2
	ldr		r1, [r0, #0x0]
	mov		r3, #0x81
	lsl		r3, r3, #0x4
	add		r2, r4, r3
	mov		r0, #0x1
	str		r0, [r2, #0x0]
	ldr		r2, _080487e0
	add		r1, #0xba
	ldrh	r0, [r1, #0x0]
	lsr		r0, r0, #0x1
	strh	r0, [r2, #0x0]
	ldr		r1, _080487e4
	add		r0, r4, r1
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_080487c6
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	bne		_08048822
_080487c6:
	mov		r7, #0xe0
	mov		r5, #0x0
_080487ca:
	mov		r4, #0x0
	add		r6, r5, #0x1
	b		_08048808

_080487d0:	.4byte RunGameLogic_CallBack
_080487d4:	.4byte 0x03006000
_080487d8:	.4byte 0x06002000
_080487dc:	.4byte 0x00000838
_080487e0:	.4byte 0x030023A8
_080487e4:	.4byte 0x000007FE

_080487e8:
	add		r4, #0x1
	add		r2, r5, #0x0
	add		r2, #0x10
	mov		r0, #0x0
	add		r1, r4, #0x0
	bl		sub_080281b0
	add		r2, r7, #0x0
	add		r1, r2, #0x1
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	mov		r3, #0xc0
	lsl		r3, r3, #0x8
	add		r1, r3, #0x0
	orr		r2, r1
	strh	r2, [r0, #0x0]
_08048808:
	cmp		r5, #0x2
	bne		_08048812
	cmp		r4, #0x4
	ble		_080487e8
	b		_08048816
_08048812:
	cmp		r4, #0x2
	ble		_080487e8
_08048816:
	add		r5, r6, #0x0
	cmp		r5, #0x2
	ble		_080487ca
	mov		r0, #0x1
	bl		sub_080281fc
_08048822:
	mov		r0, r10
	bl		sub_08047738
	ldr		r0, _08048900
	ldr		r1, _08048904
	ldr		r4, _08048908
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	ldr		r3, _0804890c
	ldr		r2, _08048910
	ldr		r1, _08048914
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	str		r0, [r3, #0x0]
	ldr		r1, _08048918
	ldr		r0, [r4, #0x14]
	str		r0, [r1, #0x0]
	ldr		r0, _0804891c
	add		r0, r10
	ldrh	r1, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x4
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	cmp		r0, r1
	bne		_080488b8
	bl		sub_08029f34
	ldr		r1, _08048920
	ldr		r2, _08048924
	ldr		r3, _08048928
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _0804892c
	ldr		r2, _08048930
	ldr		r3, _08048934
	bl		sub_08029ee4
	mov		r7, #0x0
	mov		r0, #0x0
	ldr		r1, _08048938
	mov		r9, r1
_08048884:
	mov		r5, #0x0
	add		r6, r0, #0x0
	add		r6, #0xe
	add		r0, #0x1
	mov		r8, r0
	lsl		r0, r7, #0x1
	mov		r2, r9
	add		r4, r0, r2
_08048894:
	mov		r0, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_080281b0
	ldrh	r1, [r4, #0x0]
	strh	r1, [r0, #0x0]
	add		r4, #0x2
	add		r7, #0x1
	add		r5, #0x1
	cmp		r5, #0x5
	ble		_08048894
	mov		r0, r8
	cmp		r0, #0x4
	ble		_08048884
	mov		r0, #0x1
	bl		sub_080281fc
_080488b8:
	ldr		r0, _0804891c
	add		r0, r10
	ldrh	r1, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x4
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	cmp		r0, r1
	beq		_080488f2
	mov		r0, #0x0
	mov		r1, #0x8
	mov		r2, #0x0
	bl		sub_080281b0
	ldr		r3, _0804893c
	ldrh	r1, [r3, #0x2]
	mov		r4, #0xc0
	lsl		r4, r4, #0x8
	add		r2, r4, #0x0
	orr		r1, r2
	strh	r1, [r0, #0x0]
	add		r0, #0x40
	ldrh	r1, [r3, #0x16]
	orr		r1, r2
	strh	r1, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_080281fc
_080488f2:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08048900:	.4byte RunGameLogic_CallBack
_08048904:	.4byte 0x08102bf8
_08048908:	.4byte 0x00000801
_0804890c:	.4byte 0x030023B0
_08048910:	.4byte 0x030023B4
_08048914:	.4byte 0x030023B8
_08048918:	.4byte 0x030023AC
_0804891c:	.4byte 0x000007DA
_08048920:	.4byte 0x08082568
_08048924:	.4byte 0x06002800
_08048928:	.4byte 0x80000120
_0804892c:	.4byte 0x08081d68
_08048930:	.4byte 0x06017800
_08048934:	.4byte 0x80000400
_08048938:	.4byte 0x08109378
_0804893c:	.4byte 0x0810928a

.incbin "base.gba", 0x48940, 0x18
	thumb_func_end sub_08048748

	thumb_func_start sub_08048958
sub_08048958:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r12, r1
	mov		r8, r2
	mov		r9, r3
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	ldr		r0, _080489a4
	cmp		r1, r0
	bhi		_080489ac
	ldr		r0, _080489a8
	mul		r0, r1
	lsr		r5, r0, #0x13
	mov		r0, #0x64
	mul		r0, r5
	sub		r7, r1, r0
	cmp		r7, #0x63
	bls		_08048984
	sub		r7, #0x64
	add		r5, #0x1
_08048984:
	lsl		r0, r5, #0x4
	add		r0, r0, r5
	lsl		r1, r0, #0x8
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	lsr		r6, r0, #0x13
	lsl		r0, r6, #0x4
	sub		r0, r0, r6
	lsl		r0, r0, #0x2
	sub		r5, r5, r0
	cmp		r5, #0x3b
	bls		_080489b2
	sub		r5, #0x3c
	add		r6, #0x1
	b		_080489b2

.incbin "base.gba", 0x489A2, 0x2

_080489a4:	.4byte 0x0000EA5F
_080489a8:	.4byte 0x0000147A

_080489ac:
	mov		r6, #0x9
	mov		r5, #0x3b
	mov		r7, #0x63
_080489b2:
	ldr		r2, _08048a10
	add		r0, r6, #0x0
	mul		r0, r2
	lsr		r3, r0, #0x13
	lsl		r0, r3, #0x2
	add		r0, r0, r3
	lsl		r0, r0, #0x1
	sub		r4, r6, r0
	mov		r1, #0xf
	and		r3, r1
	lsl		r0, r3, #0x4
	and		r4, r1
	add		r6, r0, r4
	add		r0, r5, #0x0
	mul		r0, r2
	lsr		r3, r0, #0x13
	lsl		r0, r3, #0x2
	add		r0, r0, r3
	lsl		r0, r0, #0x1
	sub		r4, r5, r0
	and		r3, r1
	lsl		r0, r3, #0x4
	and		r4, r1
	add		r5, r0, r4
	add		r0, r7, #0x0
	mul		r0, r2
	lsr		r3, r0, #0x13
	lsl		r0, r3, #0x2
	add		r0, r0, r3
	lsl		r0, r0, #0x1
	sub		r4, r7, r0
	and		r3, r1
	lsl		r0, r3, #0x4
	and		r4, r1
	add		r7, r0, r4
	mov		r0, r12
	str		r6, [r0, #0x0]
	mov		r0, r8
	str		r5, [r0, #0x0]
	mov		r0, r9
	str		r7, [r0, #0x0]
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08048a10:	.4byte 0x0000CCCD
	thumb_func_end sub_08048958

	thumb_func_start sub_08048a14
sub_08048a14:
	ldr		r2, _08048a30
	ldrb	r1, [r2, #0xC]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	bne		_08048a2e
	mov		r0, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	mov		r1, #0x4
	orr		r0, r1
	strb	r0, [r2, #0xC]
_08048a2e:
	bx		lr

_08048a30:	.4byte 0x03006000
	thumb_func_end sub_08048a14

	thumb_func_start sub_08048a34
sub_08048a34:
	ldr		r1, _08048a44
	ldrb	r2, [r1, #0xC]
	mov		r0, #0xfd
	and		r0, r2
	strb	r0, [r1, #0xC]
	ldr		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x48A42, 0x2

_08048a44:	.4byte 0x03006000
	thumb_func_end sub_08048a34

	thumb_func_start sub_08048a48
sub_08048a48:
	ldr		r0, _08048a50
	ldr		r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x48A4E, 0x2

_08048a50:	.4byte 0x03006000

.incbin "base.gba", 0x48A54, 0x70
	thumb_func_end sub_08048a48

	thumb_func_start sub_08048ac4
sub_08048ac4:
	push	{ r4, r5, lr }
	ldr		r2, _08048aec
	ldr		r1, _08048af0
	add		r3, r2, r1
	ldrh	r4, [r3, #0x0]
	mov		r5, #0xc9
	lsl		r5, r5, #0x4
	add		r1, r2, r5
	strh	r4, [r1, #0x0]
	strh	r0, [r3, #0x0]
	ldr		r0, _08048af4
	add		r2, r2, r0
	mov		r0, #0xa0
	strh	r0, [r2, #0x0]
	ldrh	r0, [r3, #0x0]
	bl		sub_08046734
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08048aec:	.4byte RunGameLogic_CallBack
_08048af0:	.4byte 0x00000C8E
_08048af4:	.4byte 0x00000C92
	thumb_func_end sub_08048ac4

	thumb_func_start sub_08048af8
sub_08048af8:
	push	{ r4, lr }
	ldr		r3, _08048b20
	mov		r4, #0xc9
	lsl		r4, r4, #0x4
	add		r2, r3, r4
	strh	r0, [r2, #0x0]
	ldr		r0, _08048b24
	add		r2, r3, r0
	strh	r1, [r2, #0x0]
	add		r4, #0x2
	add		r3, r3, r4
	mov		r0, #0xa0
	strh	r0, [r3, #0x0]
	ldrh	r0, [r2, #0x0]
	bl		sub_08046734
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x48B1E, 0x2

_08048b20:	.4byte RunGameLogic_CallBack
_08048b24:	.4byte 0x00000C8E
	thumb_func_end sub_08048af8

	thumb_func_start sub_08048b28
sub_08048b28:
	ldr		r1, _08048b3c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, _08048b40
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x1
	strh	r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x48B3A, 0x2

_08048b3c:	.4byte 0x00000814
_08048b40:	.4byte 0x030023A8
	thumb_func_end sub_08048b28

	thumb_func_start sub_08048b44
sub_08048b44:
	push	{ r4, r5, lr }
	lsl		r0, r0, #0x10
	mov		r1, #0xe0
	lsl		r1, r1, #0xb
	and		r1, r0
	lsr		r4, r1, #0x10
	cmp		r4, #0x0
	bne		_08048b56
	mov		r4, #0x1
_08048b56:
	mov		r0, #0x0
	mov		r1, #0x8
	mov		r2, #0x0
	bl		sub_080281b0
	ldr		r3, _08048b90
	lsl		r1, r4, #0x1
	add		r1, r1, r3
	ldrh	r1, [r1, #0x0]
	mov		r5, #0xc0
	lsl		r5, r5, #0x8
	add		r2, r5, #0x0
	orr		r1, r2
	strh	r1, [r0, #0x0]
	add		r0, #0x40
	add		r1, r4, #0x0
	add		r1, #0xa
	lsl		r1, r1, #0x1
	add		r1, r1, r3
	ldrh	r1, [r1, #0x0]
	orr		r1, r2
	strh	r1, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_080281fc
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x48B8E, 0x2

_08048b90:	.4byte 0x0810928a
	thumb_func_end sub_08048b44

	thumb_func_start sub_08048b94
sub_08048b94:
	push	{ lr }
	ldr		r1, _08048bbc
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0xc6
	ldrh	r0, [r0, #0x0]
	lsr		r2, r0, #0x8
	add		r3, r2, #0x0
	sub		r3, #0x7f
	ldr		r0, [r1, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08048bc0
	add		r0, r2, #0x0
	sub		r0, #0x80
	lsl		r0, r0, #0x10
	b		_08048bc2

.incbin "base.gba", 0x48BBA, 0x2

_08048bbc:	.4byte 0x00000814

_08048bc0:
	lsl		r0, r3, #0x10
_08048bc2:
	lsr		r0, r0, #0x10
	bl		sub_08048b44
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08048b94

	thumb_func_start sub_08048bcc
sub_08048bcc:
	push	{ r4, r5, r6, r7, lr }
	ldr		r2, _08048c0c
	add		r1, r0, r2
	ldr		r2, [r1, #0x0]
	ldr		r1, _08048c10
	add		r3, r0, r1
	mov		r1, #0x1
	str		r1, [r3, #0x0]
	ldr		r3, _08048c14
	add		r2, #0xba
	ldrh	r1, [r2, #0x0]
	lsr		r1, r1, #0x1
	strh	r1, [r3, #0x0]
	ldr		r2, _08048c18
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_08048c02
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	bne		_08048c56
_08048c02:
	mov		r7, #0xe0
	mov		r5, #0x0
_08048c06:
	mov		r4, #0x0
	add		r6, r5, #0x1
	b		_08048c3c

_08048c0c:	.4byte 0x00000814
_08048c10:	.4byte 0x000007EC
_08048c14:	.4byte 0x030023A8
_08048c18:	.4byte 0x000007DA

_08048c1c:
	add		r4, #0x1
	add		r2, r5, #0x0
	add		r2, #0x10
	mov		r0, #0x0
	add		r1, r4, #0x0
	bl		sub_080281b0
	add		r2, r7, #0x0
	add		r1, r2, #0x1
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	mov		r3, #0xc0
	lsl		r3, r3, #0x8
	add		r1, r3, #0x0
	orr		r2, r1
	strh	r2, [r0, #0x0]
_08048c3c:
	cmp		r5, #0x2
	bne		_08048c46
	cmp		r4, #0x4
	ble		_08048c1c
	b		_08048c4a
_08048c46:
	cmp		r4, #0x2
	ble		_08048c1c
_08048c4a:
	add		r5, r6, #0x0
	cmp		r5, #0x2
	ble		_08048c06
	mov		r0, #0x1
	bl		sub_080281fc
_08048c56:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08048bcc

	thumb_func_start sub_08048c5c
sub_08048c5c:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	ldrb	r5, [r0, #0x0]
	cmp		r5, #0x4
	ble		_08048c6e
	mov		r5, #0x4
_08048c6e:
	mov		r4, #0x0
	cmp		r4, r5
	bge		_08048c82
_08048c74:
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_08047590
	add		r4, #0x1
	cmp		r4, r5
	blt		_08048c74
_08048c82:
	bl		sub_080478a4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08048c5c

	thumb_func_start sub_08048c8c
sub_08048c8c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	mov		r0, #0x0
	ldr		r1, _08048cd8
	mov		r8, r1
_08048c9c:
	mov		r4, #0x0
	add		r5, r0, #0x0
	add		r5, #0xc
	add		r7, r0, #0x1
_08048ca4:
	add		r1, r4, #0x0
	add		r1, #0x16
	mov		r0, #0x0
	add		r2, r5, #0x0
	bl		sub_080281b0
	add		r1, r6, #0x0
	mov		r2, r8
	orr		r1, r2
	strh	r1, [r0, #0x0]
	add		r6, #0x1
	add		r4, #0x1
	cmp		r4, #0x7
	ble		_08048ca4
	add		r0, r7, #0x0
	cmp		r0, #0x7
	ble		_08048c9c
	mov		r0, #0x1
	bl		sub_080281fc
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x48CD6, 0x2

_08048cd8:	.4byte 0xFFFFB000
	thumb_func_end sub_08048c8c

	thumb_func_start sub_08048cdc
sub_08048cdc:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r1, _08048cf8
	add		r0, r4, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_08048d24
	ldr		r2, _08048cfc
	add		r0, r4, r2
	ldr		r6, [r0, #0x0]
	mov		r5, #0x0
	b		_08048d18

_08048cf8:	.4byte 0x000007D4
_08048cfc:	.4byte 0x00000814

_08048d00:
	lsl		r1, r5, #0x2
	ldr		r2, _08048d2c
	add		r0, r4, r2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	cmp		r0, r6
	bne		_08048d12
	mov		r1, #0x1
_08048d12:
	bl		sub_08048188
	add		r5, #0x1
_08048d18:
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	cmp		r5, r0
	blt		_08048d00
_08048d24:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x48D2A, 0x2

_08048d2c:	.4byte 0x000007F4
	thumb_func_end sub_08048cdc

	thumb_func_start sub_08048d30
sub_08048d30:
	push	{ lr }
	ldr		r1, _08048d58
	add		r3, r0, r1
	ldrh	r2, [r3, #0x0]
	ldr		r1, _08048d5c
	and		r1, r2
	strh	r1, [r3, #0x0]
	ldr		r1, _08048d60
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	blt		_08048d70
	bl		sub_08029f34
	ldr		r1, _08048d64
	ldr		r2, _08048d68
	ldr		r3, _08048d6c
	bl		sub_08029ee4
	b		_08048d7e

_08048d58:	.4byte 0x00000C68
_08048d5c:	.4byte 0x0000FFBF
_08048d60:	.4byte 0x00000C88
_08048d64:	.4byte 0x08080608
_08048d68:	.4byte 0x06001400
_08048d6c:	.4byte 0x800001B0

_08048d70:
	bl		sub_08029f34
	ldr		r1, _08048d84
	ldr		r2, _08048d88
	ldr		r3, _08048d8c
	bl		sub_08029ee4
_08048d7e:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x48D82, 0x2

_08048d84:	.4byte 0x08080f08
_08048d88:	.4byte 0x06001400
_08048d8c:	.4byte 0x800001B0
	thumb_func_end sub_08048d30

	thumb_func_start sub_08048d90
sub_08048d90:
	push	{ lr }
	ldr		r1, _08048db0
	add		r0, r0, r1
	ldrh	r2, [r0, #0x0]
	ldr		r1, _08048db4
	and		r1, r2
	strh	r1, [r0, #0x0]
	bl		sub_08029f34
	ldr		r1, _08048db8
	ldr		r2, _08048dbc
	ldr		r3, _08048dc0
	bl		sub_08029ee4
	pop		{ r0 }
	bx		r0

_08048db0:	.4byte 0x00000C68
_08048db4:	.4byte 0x0000FFDF
_08048db8:	.4byte 0x08080ba8
_08048dbc:	.4byte 0x06001800
_08048dc0:	.4byte 0x800001B0
	thumb_func_end sub_08048d90

	thumb_func_start sub_08048dc4
sub_08048dc4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	bl		sub_08029f34
	ldr		r1, _08048e30
	ldr		r2, _08048e34
	ldr		r3, _08048e38
	bl		sub_08029ee4
	bl		sub_08029f34
	ldr		r1, _08048e3c
	ldr		r2, _08048e40
	ldr		r3, _08048e44
	bl		sub_08029ee4
	mov		r7, #0x0
	mov		r0, #0x0
	ldr		r1, _08048e48
	mov		r9, r1
_08048df0:
	mov		r5, #0x0
	add		r6, r0, #0x0
	add		r6, #0xe
	add		r0, #0x1
	mov		r8, r0
	lsl		r0, r7, #0x1
	mov		r1, r9
	add		r4, r0, r1
_08048e00:
	mov		r0, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_080281b0
	ldrh	r1, [r4, #0x0]
	strh	r1, [r0, #0x0]
	add		r4, #0x2
	add		r7, #0x1
	add		r5, #0x1
	cmp		r5, #0x5
	ble		_08048e00
	mov		r0, r8
	cmp		r0, #0x4
	ble		_08048df0
	mov		r0, #0x1
	bl		sub_080281fc
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08048e30:	.4byte 0x08082568
_08048e34:	.4byte 0x06002800
_08048e38:	.4byte 0x80000120
_08048e3c:	.4byte 0x08081d68
_08048e40:	.4byte 0x06017800
_08048e44:	.4byte 0x80000400
_08048e48:	.4byte 0x08109378
	thumb_func_end sub_08048dc4

	thumb_func_start sub_08048e4c
sub_08048e4c:
	push	{ lr }
	sub		sp, #0xc
	ldr		r2, _08048e88
	add		r1, r0, r2
	ldr		r2, [r1, #0x0]
	ldr		r1, _08048e8c
	add		r0, r0, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_08048eac
	ldr		r0, _08048e90
	str		r0, [sp, #0x8]
	add		r0, r2, #0x0
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08048e74
	neg		r0, r0
_08048e74:
	lsl		r0, r0, #0x5
	lsr		r1, r0, #0x10
	mov		r0, #0xc0
	lsl		r0, r0, #0x8
	cmp		r1, r0
	bhi		_08048e94
	mov		r2, #0x80
	lsl		r2, r2, #0x6
	add		r1, r1, r2
	b		_08048e98

_08048e88:	.4byte 0x00000814
_08048e8c:	.4byte 0x000007D4
_08048e90:	.4byte 0x00880018

_08048e94:
	mov		r1, #0xe0
	lsl		r1, r1, #0x8
_08048e98:
	ldr		r0, _08048eb4
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	str		r1, [sp, #0x0]
	mov		r1, #0x0
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	add		r2, r3, #0x0
	bl		sub_0802951c
_08048eac:
	add		sp, #0xc
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x48EB2, 0x2

_08048eb4:	.4byte 0x08109370
	thumb_func_end sub_08048e4c

	thumb_func_start sub_08048eb8
sub_08048eb8:
	push	{ r4, r5, r6, r7, lr }
	mov		r0, #0x0
	mov		r7, #0x0
_08048ebe:
	mov		r4, #0x0
	add		r5, r0, #0x0
	add		r5, #0xe
	add		r6, r0, #0x1
_08048ec6:
	mov		r0, #0x0
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_080281b0
	strh	r7, [r0, #0x0]
	add		r4, #0x1
	cmp		r4, #0x5
	ble		_08048ec6
	add		r0, r6, #0x0
	cmp		r0, #0x4
	ble		_08048ebe
	mov		r0, #0x1
	bl		sub_080281fc
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x48EEA, 0x2
	thumb_func_end sub_08048eb8

	thumb_func_start sub_08048eec
sub_08048eec:
	push	{ r4, lr }
	ldr		r4, _08048f1c
	ldrb	r1, [r4, #0xC]
	mov		r0, #0xf7
	and		r0, r1
	strb	r0, [r4, #0xC]
	mov		r0, #0x78
	strb	r0, [r4, #0x8]
	ldr		r0, _08048f20
	ldr		r1, _08048f24
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xc6
	ldrh	r1, [r1, #0x0]
	lsr		r1, r1, #0x8
	sub		r1, #0x81
	bl		sub_080374c0
	strh		r0, [r4, #0xA]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x48F1A, 0x2

_08048f1c:	.4byte 0x03006000
_08048f20:	.4byte RunGameLogic_CallBack
_08048f24:	.4byte 0x00000838

.incbin "base.gba", 0x48F28, 0xB4
	thumb_func_end sub_08048eec

	thumb_func_start sub_08048fdc
sub_08048fdc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	mov		r4, #0x0
	lsl		r0, r6, #0x1
	mov		r8, r0
	ldr		r7, _08049054
	ldr		r0, _08049058
	mov		r9, r0
_08048ff4:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	add		r5, r4, #0x0
	mov		r0, r8
	add		r0, r9
	ldrh	r4, [r0, #0x0]
	mov		r3, #0x1
_0804900c:
	ldrh	r1, [r2, #0x0]
	add		r0, r7, #0x0
	and		r0, r1
	orr		r0, r4
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_0804900c
	add		r4, r5, #0x0
	cmp		r4, #0x1
	ble		_08048ff4
	mov		r0, #0x1
	bl		sub_080281fc
	cmp		r6, #0xf
	bne		_08049030
	mov		r6, #0xb
_08049030:
	cmp		r6, #0x10
	bne		_08049036
	mov		r6, #0xa
_08049036:
	bl		sub_08029f34
	lsl		r1, r6, #0x7
	ldr		r2, _0804905c
	add		r1, r1, r2
	ldr		r2, _08049060
	ldr		r3, _08049064
	bl		sub_08029ee4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08049054:	.4byte 0x00000FFF
_08049058:	.4byte 0x08109268
_0804905c:	.4byte 0x0808ac60
_08049060:	.4byte 0x06000E00
_08049064:	.4byte 0x80000040
	thumb_func_end sub_08048fdc

	thumb_func_start sub_08049068
sub_08049068:
	push	{ r4, r5, lr }
	ldr		r4, _08049090
	lsl		r2, r0, #0x1
	add		r2, r2, r4
	ldrh	r2, [r2, #0x0]
	mov		r5, #0xc0
	lsl		r5, r5, #0x8
	add		r3, r5, #0x0
	orr		r2, r3
	strh	r2, [r1, #0x0]
	add		r1, #0x40
	add		r0, #0xa
	lsl		r0, r0, #0x1
	add		r0, r0, r4
	ldrh	r0, [r0, #0x0]
	orr		r0, r3
	strh	r0, [r1, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08049090:	.4byte 0x0810928a

.incbin "base.gba", 0x49094, 0x18
	thumb_func_end sub_08049068

	thumb_func_start sub_080490ac
sub_080490ac:
	push	{ r4, r5, r6, r7, lr }
	add		r3, r0, #0x0
	ldrh	r5, [r3, #0x0]
	add		r3, #0x2
	ldrh	r6, [r3, #0x0]
	add		r3, #0x2
	mov		r2, #0x0
	cmp		r2, r6
	bge		_080490ec
	mov		r0, #0x20
	sub		r0, r0, r5
	lsl		r7, r0, #0x1
_080490c4:
	add		r4, r2, #0x1
	cmp		r5, #0x0
	beq		_080490e4
	add		r0, r5, #0x0
_080490cc:
	ldrh	r2, [r3, #0x0]
	cmp		r2, #0x0
	beq		_080490da
	strh	r2, [r1, #0x0]
	add		r3, #0x2
	add		r1, #0x2
	b		_080490de
_080490da:
	add		r1, #0x2
	add		r3, #0x2
_080490de:
	sub		r0, #0x1
	cmp		r0, #0x0
	bne		_080490cc
_080490e4:
	add		r1, r1, r7
	add		r2, r4, #0x0
	cmp		r2, r6
	blt		_080490c4
_080490ec:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x490F2, 0x16
	thumb_func_end sub_080490ac

	thumb_func_start sub_08049108
sub_08049108:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	bl		sub_08028890
	add		r0, r5, #0x0
	add		r0, #0x8
	bl		sub_08028890
	cmp		r4, #0x0
	ble		_08049138
_08049120:
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x84
	bl		sub_080271b8
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_08028898
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08049120
_08049138:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4913E, 0x26
	thumb_func_end sub_08049108

	thumb_func_start sub_08049164
sub_08049164:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	bl		sub_08028880
	cmp		r0, #0x0
	beq		_080491a0
	ldr		r5, [r4, #0xc]
	ldr		r1, [r5, #0x6c]
	cmp		r1, #0x0
	beq		_0804917e
	add		r0, r5, #0x0
	bl		sub_0807d7d4
_0804917e:
	add		r0, r4, #0x0
	bl		sub_08028880
	cmp		r0, #0x0
	beq		_08049196
	ldr		r5, [r4, #0xc]
	add		r4, #0x8
	add		r0, r4, #0x0
	bl		sub_08028914
	add		r0, r4, #0x0
	b		_080491ac
_08049196:
	ldr		r5, [r4, #0x4]
	add		r0, r4, #0x0
	bl		sub_08028914
	b		_080491a8
_080491a0:
	ldr		r5, [r4, #0x4]
	add		r0, r4, #0x0
	bl		sub_08028914
_080491a8:
	add		r0, r4, #0x0
	add		r0, #0x8
_080491ac:
	add		r1, r5, #0x0
	bl		sub_08028898
	add		r0, r5, #0x0
	bl		sub_0803d1c8
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08049164

	thumb_func_start sub_080491c0
sub_080491c0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r0, #0x8
	bl		sub_08028930
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08028898
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x491DA, 0x2
	thumb_func_end sub_080491c0

	thumb_func_start sub_080491dc
sub_080491dc:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	bl		sub_08028890
	add		r0, r5, #0x0
	add		r0, #0x8
	bl		sub_08028890
	cmp		r4, #0x0
	ble		_0804920c
_080491f4:
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x70
	bl		sub_080271b8
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_08028898
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_080491f4
_0804920c:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x49212, 0x2
	thumb_func_end sub_080491dc

	thumb_func_start sub_08049214
sub_08049214:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	bl		sub_08028880
	cmp		r0, #0x0
	beq		_0804923c
	add		r4, r5, #0x0
	add		r4, #0x8
	add		r0, r4, #0x0
	bl		sub_08028880
	cmp		r0, #0x0
	beq		_08049232
	mov		r0, #0x0
	b		_08049252
_08049232:
	ldr		r6, [r5, #0xc]
	add		r0, r4, #0x0
	bl		sub_08028914
	b		_08049248
_0804923c:
	ldr		r6, [r5, #0x0]
	add		r0, r5, #0x0
	bl		sub_080288f8
	add		r4, r5, #0x0
	add		r4, #0x8
_08049248:
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_08028898
	add		r0, r6, #0x0
_08049252:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08049214

	thumb_func_start sub_08049258
sub_08049258:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r0, #0x8
	bl		sub_08028930
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08028898
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x49272, 0x2
	thumb_func_end sub_08049258

	thumb_func_start sub_08049274
sub_08049274:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r4, [r5, #0x54]
	add		r3, r4, #0x0
	add		r3, #0xa4
	ldrh	r1, [r3, #0x0]
	ldr		r0, _080492b8
	and		r0, r1
	mov		r2, #0x0
	ldr		r1, _080492bc
	and		r0, r1
	strh	r0, [r3, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x4c
	strh	r2, [r0, #0x0]
	str		r2, [r5, #0x60]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	strh	r0, [r5, #0x24]
	add		r0, #0x88
	add		r2, r4, r0
	ldr		r0, [r2, #0x0]
	mov		r1, #0x8
	orr		r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, _080492c0
	ldr		r1, _080492c4
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_080492cc
	ldr		r0, _080492c8
	b		_080492ce

.incbin "base.gba", 0x492B6, 0x2

_080492b8:	.4byte 0x0000FF7F
_080492bc:	.4byte 0x0000FEFF
_080492c0:	.4byte RunGameLogic_CallBack
_080492c4:	.4byte 0x00000838
_080492c8:	.4byte 0x0810a08c

_080492cc:
	ldr		r0, _080492d8
_080492ce:
	str		r0, [r5, #0x5c]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x492D6, 0x2

_080492d8:	.4byte 0x0810a144
	thumb_func_end sub_08049274

	thumb_func_start sub_080492dc
sub_080492dc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r3, [r4, #0x54]
	add		r2, r3, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08049314
	and		r0, r1
	mov		r1, #0x0
	strh	r0, [r2, #0x0]
	mov		r0, #0x78
	strh	r0, [r4, #0x20]
	sub		r0, #0x88
	strh	r0, [r4, #0x22]
	ldr		r0, _08049318
	strh	r0, [r4, #0x24]
	add		r0, r4, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	str		r1, [r4, #0x60]
	ldr		r0, _0804931c
	ldr		r1, _08049320
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r3, r0
	bne		_08049328
	ldr		r0, _08049324
	b		_0804932a

_08049314:	.4byte 0x0000FFEF
_08049318:	.4byte 0x00000105
_0804931c:	.4byte RunGameLogic_CallBack
_08049320:	.4byte 0x00000838
_08049324:	.4byte 0x0810a50c

_08049328:
	ldr		r0, _08049334
_0804932a:
	str		r0, [r4, #0x5c]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x49332, 0x2

_08049334:	.4byte 0x0810a544
	thumb_func_end sub_080492dc

	thumb_func_start sub_08049338
sub_08049338:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r4, [r5, #0x54]
	add		r2, r4, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08049374
	and		r0, r1
	mov		r3, #0x0
	ldr		r1, _08049378
	and		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x78
	strh	r0, [r5, #0x20]
	sub		r0, #0x88
	strh	r0, [r5, #0x22]
	ldr		r0, _0804937c
	strh	r0, [r5, #0x24]
	add		r0, r5, #0x0
	add		r0, #0x4c
	strh	r3, [r0, #0x0]
	str		r3, [r5, #0x60]
	ldr		r0, _08049380
	ldr		r1, _08049384
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_0804938c
	ldr		r0, _08049388
	b		_0804938e

_08049374:	.4byte 0x0000FFDF
_08049378:	.4byte 0x0000FBFF
_0804937c:	.4byte 0x00000105
_08049380:	.4byte RunGameLogic_CallBack
_08049384:	.4byte 0x00000838
_08049388:	.4byte 0x0810a55c

_0804938c:
	ldr		r0, _08049398
_0804938e:
	str		r0, [r5, #0x5c]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x49396, 0x2

_08049398:	.4byte 0x0810a594
	thumb_func_end sub_08049338

	thumb_func_start sub_0804939c
sub_0804939c:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r3, [r2, #0x54]
	mov		r1, #0x22
	ldrsh	r0, [r2, r1]
	add		r0, #0x2
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r1, #0x0
	strh	r0, [r2, #0x22]
	cmp		r0, #0x57
	ble		_0804940c
	mov		r0, #0x58
	strh	r0, [r2, #0x22]
	add		r0, r2, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	str		r1, [r2, #0x60]
	ldr		r0, _080493e8
	ldr		r1, _080493ec
	add		r0, r0, r1
	ldr		r1, [r2, #0x54]
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bne		_08049408
	ldr		r0, _080493f0
	str		r0, [r2, #0x5c]
	add		r0, r3, #0x0
	add		r0, #0x72
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x1c
	lsr		r0, r0, #0x1c
	cmp		r0, #0xb
	beq		_080493f4
	cmp		r0, #0xd
	beq		_080493fe
	b		_0804940c

.incbin "base.gba", 0x493E6, 0x2

_080493e8:	.4byte RunGameLogic_CallBack
_080493ec:	.4byte 0x00000838
_080493f0:	.4byte 0x0810a41c

_080493f4:
	add		r0, r3, #0x0
	mov		r1, #0xc
	bl		sub_08036c1c
	b		_0804940c
_080493fe:
	add		r0, r3, #0x0
	mov		r1, #0xe
	bl		sub_08036c1c
	b		_0804940c
_08049408:
	ldr		r0, _08049410
	str		r0, [r2, #0x5c]
_0804940c:
	pop		{ r0 }
	bx		r0

_08049410:	.4byte 0x0810a45c
	thumb_func_end sub_0804939c

	thumb_func_start sub_08049414
sub_08049414:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x54]
	add		r2, r5, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0804946c
	and		r0, r1
	mov		r3, #0x0
	ldr		r1, _08049470
	and		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x78
	strh	r0, [r4, #0x20]
	sub		r0, #0xf8
	strh	r0, [r4, #0x22]
	ldr		r0, _08049474
	strh	r0, [r4, #0x24]
	add		r0, r4, #0x0
	add		r0, #0x4c
	strh	r3, [r0, #0x0]
	ldr		r0, _08049478
	str		r0, [r4, #0x60]
	ldr		r0, _0804947c
	ldr		r1, _08049480
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	bne		_08049488
	ldr		r0, _08049484
	str		r0, [r4, #0x5c]
	add		r0, r5, #0x0
	add		r0, #0x72
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x1c
	lsr		r0, r0, #0x1c
	cmp		r0, #0xe
	bne		_0804948c
	add		r0, r5, #0x0
	mov		r1, #0x2
	bl		sub_08037358
	b		_0804948c

.incbin "base.gba", 0x4946A, 0x2

_0804946c:	.4byte 0x0000FFBF
_08049470:	.4byte 0x0000EFFF
_08049474:	.4byte 0x00000105
_08049478:	.4byte 0x0804a705
_0804947c:	.4byte RunGameLogic_CallBack
_08049480:	.4byte 0x00000838
_08049484:	.4byte 0x0810a5ac

_08049488:
	ldr		r0, _08049494
	str		r0, [r4, #0x5c]
_0804948c:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x49492, 0x2

_08049494:	.4byte 0x0810a5dc
	thumb_func_end sub_08049414

	thumb_func_start sub_08049498
sub_08049498:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	ldr		r4, [r6, #0x54]
	mov		r5, #0x78
	mov		r1, #0x0
	strh	r5, [r6, #0x20]
	mov		r0, #0x32
	neg		r0, r0
	strh	r0, [r6, #0x22]
	ldr		r0, _080494fc
	strh	r0, [r6, #0x24]
	add		r0, r6, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x88
	lsl		r1, r1, #0x4
	orr		r0, r1
	str		r0, [r4, #0x48]
	ldr		r1, _08049500
	mov		r0, #0x0
	mov		r2, #0x0
	bl		sub_08029d24
	mov		r1, #0xfb
	strh	r1, [r0, #0x24]
	str		r0, [r6, #0x74]
	ldr		r1, [r6, #0x54]
	str		r1, [r0, #0x54]
	strh	r5, [r0, #0x20]
	mov		r2, #0x22
	ldrsh	r1, [r6, r2]
	add		r1, #0x28
	strh	r1, [r0, #0x22]
	bl		sub_08029f34
	ldr		r1, _08049504
	ldr		r2, _08049508
	ldr		r3, _0804950c
	bl		sub_08029ee4
	ldr		r0, _08049510
	ldr		r1, _08049514
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_0804951c
	ldr		r0, _08049518
	b		_0804951e

.incbin "base.gba", 0x494FA, 0x2

_080494fc:	.4byte 0x00000105
_08049500:	.4byte 0x0810a6cc
_08049504:	.4byte 0x08088868
_08049508:	.4byte 0x06013600
_0804950c:	.4byte 0x80000080
_08049510:	.4byte RunGameLogic_CallBack
_08049514:	.4byte 0x00000838
_08049518:	.4byte 0x0810a64c

_0804951c:
	ldr		r0, _08049528
_0804951e:
	str		r0, [r6, #0x5c]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x49526, 0x2

_08049528:	.4byte 0x0810a684
	thumb_func_end sub_08049498

	thumb_func_start sub_0804952c
sub_0804952c:
	push	{ r4, r5, r6, lr }
	add		r2, r0, #0x0
	ldr		r5, [r2, #0x74]
	add		r3, r2, #0x0
	add		r3, #0x64
	ldrb	r1, [r3, #0x0]
	mov		r6, #0x2
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08049546
	mov		r0, #0x0
	str		r0, [r2, #0x70]
_08049546:
	ldr		r4, [r2, #0x70]
	add		r4, #0x1
	cmp		r4, #0x40
	bgt		_08049580
	ldr		r1, _0804957c
	lsl		r0, r4, #0x18
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0804955a
	add		r0, #0x3f
_0804955a:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	asr		r0, r0, #0xf
	sub		r0, #0x32
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r2, #0x22]
	add		r0, #0x28
	strh	r0, [r5, #0x22]
	b		_080495a6

.incbin "base.gba", 0x4957A, 0x2

_0804957c:	.4byte 0x08101068

_08049580:
	add		r0, r2, #0x0
	add		r0, #0x4c
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r0, _080495b0
	str		r0, [r2, #0x5c]
	ldrb	r0, [r3, #0x0]
	orr		r0, r6
	strb	r0, [r3, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	ldr		r0, _080495b4
	str		r0, [r5, #0x5c]
	add		r1, r5, #0x0
	add		r1, #0x64
	ldrb	r0, [r1, #0x0]
	orr		r0, r6
	strb	r0, [r1, #0x0]
_080495a6:
	str		r4, [r2, #0x70]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x495AE, 0x2

_080495b0:	.4byte 0x0810a6a4
_080495b4:	.4byte 0x0810a6ec

.incbin "base.gba", 0x495B8, 0x2BC
_08049874:	.4byte 0x080498e8

.incbin "base.gba", 0x49878, 0x70
	thumb_func_end sub_0804952c


.incbin "base.gba", 0x498E8, 0x268

_08049b50:

.incbin "base.gba", 0x49B50, 0x28
_08049b78:

.incbin "base.gba", 0x49B78, 0xC
_08049b84:

.incbin "base.gba", 0x49B84, 0xC
_08049b90:

.incbin "base.gba", 0x49B90, 0x28

_08049bb8:

.incbin "base.gba", 0x49BB8, 0x50

_08049c08:

.incbin "base.gba", 0x49C08, 0x78

_08049c80:

.incbin "base.gba", 0x49C80, 0x50

_08049cd0:

.incbin "base.gba", 0x49CD0, 0x28
_08049cf8:

.incbin "base.gba", 0x49CF8, 0x508
	thumb_func_start sub_0804a200
sub_0804a200:
	add		r1, r0, #0x0
	add		r1, #0x4c
	mov		r2, #0x0
	strh	r2, [r1, #0x0]
	str		r2, [r0, #0x60]
	ldr		r1, _0804a214
	str		r1, [r0, #0x5c]
	str		r2, [r0, #0x70]
	bx		lr

.incbin "base.gba", 0x4A212, 0x2

_0804a214:	.4byte 0x0810a484
	thumb_func_end sub_0804a200

	thumb_func_start sub_0804a218
sub_0804a218:
	add		r3, r0, #0x0
	ldr		r2, _0804a23c
	add		r1, r3, #0x0
	add		r1, #0x4c
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	str		r0, [r3, #0x60]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	strh	r0, [r3, #0x24]
	ldr		r0, _0804a240
	add		r2, r2, r0
	ldr		r1, [r3, #0x54]
	ldr		r0, [r2, #0x0]
	cmp		r1, r0
	bne		_0804a248
	ldr		r0, _0804a244
	b		_0804a24a

_0804a23c:	.4byte RunGameLogic_CallBack
_0804a240:	.4byte 0x00000838
_0804a244:	.4byte 0x08109e04

_0804a248:
	ldr		r0, _0804a250
_0804a24a:
	str		r0, [r3, #0x5c]
	bx		lr

.incbin "base.gba", 0x4A24E, 0x2

_0804a250:	.4byte 0x08109f4c
	thumb_func_end sub_0804a218

	thumb_func_start sub_0804a254
sub_0804a254:
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	add		r1, #0x4c
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	str		r0, [r2, #0x60]
	ldr		r0, _0804a274
	ldr		r1, _0804a278
	add		r0, r0, r1
	ldr		r1, [r2, #0x54]
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bne		_0804a280
	ldr		r0, _0804a27c
	b		_0804a282

.incbin "base.gba", 0x4A272, 0x2

_0804a274:	.4byte RunGameLogic_CallBack
_0804a278:	.4byte 0x00000838
_0804a27c:	.4byte 0x08109cdc

_0804a280:
	ldr		r0, _0804a288
_0804a282:
	str		r0, [r2, #0x5c]
	bx		lr

.incbin "base.gba", 0x4A286, 0x2

_0804a288:	.4byte 0x08109d9c
	thumb_func_end sub_0804a254

	thumb_func_start sub_0804a28c
sub_0804a28c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r3, [r4, #0x54]
	add		r2, r3, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0804a2cc
	and		r0, r1
	mov		r1, #0x0
	strh	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	str		r1, [r4, #0x60]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	strh	r0, [r4, #0x24]
	add		r0, #0x88
	add		r2, r3, r0
	ldr		r0, [r2, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, _0804a2d0
	ldr		r1, _0804a2d4
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r3, r0
	bne		_0804a2dc
	ldr		r0, _0804a2d8
	b		_0804a2de

.incbin "base.gba", 0x4A2CA, 0x2

_0804a2cc:	.4byte 0x0000FEFF
_0804a2d0:	.4byte RunGameLogic_CallBack
_0804a2d4:	.4byte 0x00000838
_0804a2d8:	.4byte 0x08109f94

_0804a2dc:
	ldr		r0, _0804a2e8
_0804a2de:
	str		r0, [r4, #0x5c]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4A2E6, 0x2

_0804a2e8:	.4byte 0x0810a04c
	thumb_func_end sub_0804a28c

	thumb_func_start sub_0804a2ec
sub_0804a2ec:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r3, [r4, #0x54]
	add		r2, r3, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0804a32c
	and		r0, r1
	mov		r1, #0x0
	strh	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	str		r1, [r4, #0x60]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	strh	r0, [r4, #0x24]
	add		r0, #0x88
	add		r2, r3, r0
	ldr		r0, [r2, #0x0]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, _0804a330
	ldr		r1, _0804a334
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r3, r0
	bne		_0804a33c
	ldr		r0, _0804a338
	b		_0804a33e

.incbin "base.gba", 0x4A32A, 0x2

_0804a32c:	.4byte 0x0000FEFF
_0804a330:	.4byte RunGameLogic_CallBack
_0804a334:	.4byte 0x00000838
_0804a338:	.4byte 0x08109f94

_0804a33c:
	ldr		r0, _0804a348
_0804a33e:
	str		r0, [r4, #0x5c]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4A346, 0x2

_0804a348:	.4byte 0x0810a04c
	thumb_func_end sub_0804a2ec

	thumb_func_start sub_0804a34c
sub_0804a34c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r3, [r4, #0x54]
	add		r2, r3, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0804a38c
	and		r0, r1
	mov		r1, #0x0
	strh	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	str		r1, [r4, #0x60]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	strh	r0, [r4, #0x24]
	add		r0, #0x88
	add		r2, r3, r0
	ldr		r0, [r2, #0x0]
	mov		r1, #0x4
	orr		r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, _0804a390
	ldr		r1, _0804a394
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r3, r0
	bne		_0804a39c
	ldr		r0, _0804a398
	b		_0804a39e

.incbin "base.gba", 0x4A38A, 0x2

_0804a38c:	.4byte 0x0000FEFF
_0804a390:	.4byte RunGameLogic_CallBack
_0804a394:	.4byte 0x00000838
_0804a398:	.4byte 0x08109f94

_0804a39c:
	ldr		r0, _0804a3a8
_0804a39e:
	str		r0, [r4, #0x5c]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4A3A6, 0x2

_0804a3a8:	.4byte 0x0810a04c
	thumb_func_end sub_0804a34c

	thumb_func_start sub_0804a3ac
sub_0804a3ac:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r4, [r5, #0x54]
	add		r3, r4, #0x0
	add		r3, #0xa4
	ldrh	r1, [r3, #0x0]
	ldr		r0, _0804a3dc
	and		r0, r1
	mov		r2, #0x0
	ldr		r1, _0804a3e0
	and		r0, r1
	strh	r0, [r3, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x4c
	strh	r2, [r0, #0x0]
	str		r2, [r5, #0x60]
	ldr		r0, _0804a3e4
	ldr		r1, _0804a3e8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_0804a3f0
	ldr		r0, _0804a3ec
	b		_0804a3f2

_0804a3dc:	.4byte 0x0000BFFF
_0804a3e0:	.4byte 0x0000FEFF
_0804a3e4:	.4byte RunGameLogic_CallBack
_0804a3e8:	.4byte 0x00000838
_0804a3ec:	.4byte 0x0810a184

_0804a3f0:
	ldr		r0, _0804a3fc
_0804a3f2:
	str		r0, [r5, #0x5c]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4A3FA, 0x2

_0804a3fc:	.4byte 0x0810a3dc
	thumb_func_end sub_0804a3ac

	thumb_func_start sub_0804a400
sub_0804a400:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r3, [r4, #0x54]
	add		r1, r4, #0x0
	add		r1, #0x4c
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	str		r0, [r4, #0x60]
	add		r2, r3, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0804a42c
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r0, _0804a430
	ldr		r1, _0804a434
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r3, r0
	bne		_0804a43c
	ldr		r0, _0804a438
	b		_0804a43e

_0804a42c:	.4byte 0x0000FBFF
_0804a430:	.4byte RunGameLogic_CallBack
_0804a434:	.4byte 0x00000838
_0804a438:	.4byte 0x0810a4bc

_0804a43c:
	ldr		r0, _0804a448
_0804a43e:
	str		r0, [r4, #0x5c]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4A446, 0x2

_0804a448:	.4byte 0x0810a4f4
	thumb_func_end sub_0804a400

	thumb_func_start sub_0804a44c
sub_0804a44c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r3, [r4, #0x54]
	add		r2, r3, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0804a478
	and		r0, r1
	mov		r1, #0x0
	strh	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	str		r1, [r4, #0x60]
	ldr		r0, _0804a47c
	ldr		r1, _0804a480
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r3, r0
	bne		_0804a488
	ldr		r0, _0804a484
	b		_0804a48a

_0804a478:	.4byte 0x0000FFEF
_0804a47c:	.4byte RunGameLogic_CallBack
_0804a480:	.4byte 0x00000838
_0804a484:	.4byte 0x0810a50c

_0804a488:
	ldr		r0, _0804a494
_0804a48a:
	str		r0, [r4, #0x5c]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4A492, 0x2

_0804a494:	.4byte 0x0810a544

.incbin "base.gba", 0x4A498, 0x4
	thumb_func_end sub_0804a44c

	thumb_func_start sub_0804a49c
sub_0804a49c:
	ldr		r2, [r0, #0x54]
	add		r2, #0xa4
	ldrh	r3, [r2, #0x0]
	ldr		r1, _0804a4bc
	and		r1, r3
	mov		r3, #0x0
	strh	r1, [r2, #0x0]
	add		r1, r0, #0x0
	add		r1, #0x4c
	strh	r3, [r1, #0x0]
	str		r3, [r0, #0x60]
	ldr		r1, _0804a4c0
	str		r1, [r0, #0x5c]
	str		r3, [r0, #0x70]
	bx		lr

.incbin "base.gba", 0x4A4BA, 0x2

_0804a4bc:	.4byte 0x0000FDFF
_0804a4c0:	.4byte 0x0810a484

.incbin "base.gba", 0x4A4C4, 0x240
	push	{ r4, lr }
	add		r3, r0, #0x0
	ldr		r4, [r3, #0x54]
	mov		r1, #0x22
	ldrsh	r0, [r4, r1]
	sub		r0, #0x34
	mov		r1, #0x40
	neg		r1, r1
	cmp		r0, r1
	bgt		_0804a71a
	add		r0, r1, #0x0
_0804a71a:
	strh	r0, [r3, #0x22]
	ldr		r2, [r4, #0x8]
	cmp		r2, #0x0
	bne		_0804a764
	mov		r0, #0xc2
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	ldr		r0, _0804a744
	str		r0, [r1, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x4c
	strh	r2, [r0, #0x0]
	str		r2, [r3, #0x60]
	ldr		r0, _0804a748
	ldr		r1, _0804a74c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_0804a754
	ldr		r0, _0804a750
	b		_0804a756

_0804a744:	.4byte 0x0000E003
_0804a748:	.4byte RunGameLogic_CallBack
_0804a74c:	.4byte 0x00000838
_0804a750:	.4byte 0x0810a5ec

_0804a754:
	ldr		r0, _0804a76c
_0804a756:
	str		r0, [r3, #0x5c]
	mov		r0, #0x0
	str		r0, [r3, #0x70]
	add		r0, r4, #0x0
	mov		r1, #0x2
	bl		sub_08036eec
_0804a764:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4A76A, 0x2

_0804a76c:	.4byte 0x0810a62c

.incbin "base.gba", 0x4A770, 0x1BC
	thumb_func_end sub_0804a49c

	thumb_func_start sub_0804a92c
sub_0804a92c:
	push	{ r4, r5, r6, r7, lr }
	ldr		r0, _0804a994
	add		r7, r0, #0x0
	add		r7, #0x24
	mov		r5, #0x0
	ldr		r1, _0804a998
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r5, r0
	bge		_0804a9c0
	mov		r6, #0x0
_0804a942:
	lsl		r0, r5, #0x2
	ldr		r2, _0804a99c
	add		r1, r7, r2
	add		r1, r1, r0
	ldr		r4, [r1, #0x0]
	ldr		r2, [r4, #0x48]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r2, r0
	cmp		r2, #0x0
	beq		_0804a9ac
	mov		r0, #0x0
	ldr		r1, _0804a9a0
	mov		r2, #0x0
	bl		sub_08029d24
	str		r4, [r0, #0x54]
	mov		r3, #0xc0
	lsl		r3, r3, #0x1
	add		r1, r4, r3
	str		r0, [r1, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	strh	r1, [r0, #0x10]
	strh	r6, [r0, #0x20]
	strh	r6, [r0, #0x22]
	ldr		r1, _0804a9a4
	strh	r1, [r0, #0x24]
	ldrh	r2, [r0, #0x34]
	ldr		r3, _0804a9a8
	add		r1, r3, #0x0
	and		r2, r1
	add		r3, #0x1
	add		r1, r3, #0x0
	and		r2, r1
	strh	r2, [r0, #0x34]
	mov		r1, #0xc4
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	str		r6, [r0, #0x0]
	b		_0804a9b4

_0804a994:	.4byte RunGameLogic_CallBack
_0804a998:	.4byte 0x00000815
_0804a99c:	.4byte 0x000007F4
_0804a9a0:	.4byte 0x0810a4a4
_0804a9a4:	.4byte 0x00000105
_0804a9a8:	.4byte 0x0000FFFD

_0804a9ac:
	mov		r3, #0xc0
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	str		r2, [r0, #0x0]
_0804a9b4:
	add		r5, #0x1
	ldr		r1, _0804a9c8
	add		r0, r7, r1
	ldrb	r0, [r0, #0x0]
	cmp		r5, r0
	blt		_0804a942
_0804a9c0:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4A9C6, 0x2

_0804a9c8:	.4byte 0x000007F1
	thumb_func_end sub_0804a92c

	thumb_func_start sub_0804a9cc
sub_0804a9cc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	ldr		r0, _0804aa44
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	ldr		r2, _0804aa48
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	cmp		r1, r0
	blt		_0804a9ea
	b		_0804ae4a
_0804a9ea:
	ldr		r3, [sp, #0x0]
	lsl		r1, r3, #0x2
	ldr		r2, _0804aa4c
	ldr		r3, _0804aa50
	add		r0, r2, r3
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r12, r0
	mov		r3, #0xc2
	lsl		r3, r3, #0x1
	add		r3, r12
	ldr		r4, [r3, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x8
	and		r4, r0
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	add		r0, r12
	ldr		r6, [r0, #0x0]
	cmp		r6, #0x0
	bne		_0804aa16
	b		_0804ae36
_0804aa16:
	mov		r2, r12
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	and		r0, r1
	add		r7, r2, #0x0
	cmp		r0, #0x0
	beq		_0804aa6c
	mov		r0, #0xe0
	lsl		r0, r0, #0x8
	cmp		r4, r0
	beq		_0804aa6c
	cmp		r4, #0x0
	bne		_0804aa54
	mov		r0, #0x90
	lsl		r0, r0, #0x8
	str		r0, [r3, #0x0]
	add		r0, r6, #0x0
	bl		sub_08049498
	b		_0804ae36

.incbin "base.gba", 0x4AA42, 0x2

_0804aa44:	.4byte RunGameLogic_CallBack
_0804aa48:	.4byte 0x00000815
_0804aa4c:	.4byte 0x030031C4
_0804aa50:	.4byte 0x000007F4

_0804aa54:
	mov		r0, #0x90
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bne		_0804aa5e
	b		_0804ae36
_0804aa5e:
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	cmp		r4, r0
	bne		_0804aa68
	b		_0804ae36
_0804aa68:
	str		r0, [r3, #0x0]
	b		_0804add2
_0804aa6c:
	ldrh	r5, [r7, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r5
	cmp		r0, #0x0
	beq		_0804aa94
	mov		r1, #0xc2
	lsl		r1, r1, #0x1
	add		r1, r12
	mov		r0, #0xd0
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	add		r0, r6, #0x0
	bl		sub_0804a3ac
	ldrh	r1, [r7, #0x0]
	ldr		r0, _0804aa90
	b		_0804ae32

_0804aa90:	.4byte 0x0000FB8F

_0804aa94:
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	mov		r9, r0
	cmp		r4, r9
	bne		_0804aaa0
	b		_0804ae36
_0804aaa0:
	mov		r1, #0xa0
	lsl		r1, r1, #0x8
	mov		r10, r1
	cmp		r4, r10
	bne		_0804aaac
	b		_0804ae36
_0804aaac:
	mov		r2, #0xb0
	lsl		r2, r2, #0x8
	cmp		r4, r2
	bne		_0804aab6
	b		_0804ae36
_0804aab6:
	cmp		r4, r10
	bne		_0804aabc
	b		_0804ae36
_0804aabc:
	mov		r0, #0xd0
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bne		_0804aac6
	b		_0804ae36
_0804aac6:
	mov		r3, #0xc2
	lsl		r3, r3, #0x1
	add		r3, r12
	ldr		r1, [r3, #0x0]
	ldr		r0, _0804ab10
	cmp		r1, r0
	bne		_0804aad6
	b		_0804ae36
_0804aad6:
	add		r0, #0x1
	mov		r8, r0
	cmp		r1, r8
	bne		_0804aae0
	b		_0804ae36
_0804aae0:
	ldr		r0, _0804ab14
	cmp		r1, r0
	bne		_0804aae8
	b		_0804ae36
_0804aae8:
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	and		r0, r5
	cmp		r0, #0x0
	beq		_0804ab2c
	ldr		r2, _0804ab18
	and		r2, r5
	strh	r2, [r7, #0x0]
	ldr		r0, [r3, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0x8
	cmp		r0, r1
	bne		_0804ab1c
	mov		r1, r8
	str		r1, [r3, #0x0]
	add		r0, r6, #0x0
	bl		sub_0804a49c
	b		_0804ae36

.incbin "base.gba", 0x4AB0E, 0x2

_0804ab10:	.4byte 0x0000E003
_0804ab14:	.4byte 0x0000C001
_0804ab18:	.4byte 0x0000FBFF

_0804ab1c:
	cmp		r4, r1
	bne		_0804ab22
	b		_0804ae36
_0804ab22:
	ldr		r0, _0804ab28
	and		r0, r2
	b		_0804ae34

_0804ab28:	.4byte 0x0000FDFF

_0804ab2c:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	and		r0, r5
	cmp		r0, #0x0
	beq		_0804ab58
	cmp		r4, #0x0
	bne		_0804ab48
	mov		r0, #0xe0
	lsl		r0, r0, #0x8
	str		r0, [r3, #0x0]
	add		r0, r6, #0x0
	bl		sub_0804a400
	b		_0804ae36
_0804ab48:
	mov		r0, #0xe0
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bne		_0804ab52
	b		_0804ae36
_0804ab52:
	mov		r2, r9
	str		r2, [r3, #0x0]
	b		_0804add2
_0804ab58:
	mov		r0, #0x10
	and		r0, r5
	cmp		r0, #0x0
	beq		_0804abf4
	cmp		r4, #0x0
	beq		_0804ab6c
	mov		r0, #0xe0
	lsl		r0, r0, #0x8
	cmp		r1, r0
	bne		_0804abe8
_0804ab6c:
	ldr		r0, _0804ab8c
	str		r0, [r3, #0x0]
	ldr		r0, _0804ab90
	add		r0, #0x24
	bl		sub_0802c72c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0xe
	bhi		_0804abd4
	lsl		r0, r0, #0x2
	ldr		r1, _0804ab94
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x4AB8A, 0x2

_0804ab8c:	.4byte 0x0000E001
_0804ab90:	.4byte RunGameLogic_CallBack
_0804ab94:	.4byte 0x0804ab98
_0804ab98:	.4byte 0x0804abd4

.incbin "base.gba", 0x4AB9C, 0x38

_0804abd4:
	cmp		r4, #0x0
	bne		_0804abe0
	add		r0, r6, #0x0
	bl		sub_080492dc
	b		_0804ae36
_0804abe0:
	add		r0, r6, #0x0
	bl		sub_0804a44c
	b		_0804ae36
_0804abe8:
	cmp		r4, r0
	bne		_0804abee
	b		_0804ae36
_0804abee:
	mov		r0, r9
	str		r0, [r3, #0x0]
	b		_0804add2
_0804abf4:
	mov		r2, #0x20
	add		r0, r2, #0x0
	and		r0, r5
	cmp		r0, #0x0
	beq		_0804ac28
	cmp		r4, #0x0
	beq		_0804ac0a
	mov		r0, #0xe0
	lsl		r0, r0, #0x8
	cmp		r1, r0
	bne		_0804ac1c
_0804ac0a:
	ldr		r0, _0804ac18
	str		r0, [r3, #0x0]
	add		r0, r6, #0x0
	bl		sub_08049338
	b		_0804ae36

.incbin "base.gba", 0x4AC16, 0x2

_0804ac18:	.4byte 0x0000E001

_0804ac1c:
	cmp		r4, r0
	bne		_0804ac22
	b		_0804ae36
_0804ac22:
	mov		r1, r9
	str		r1, [r3, #0x0]
	b		_0804add2
_0804ac28:
	mov		r0, #0x40
	and		r0, r5
	cmp		r0, #0x0
	beq		_0804ac60
	cmp		r4, #0x0
	beq		_0804ac3a
	ldr		r0, _0804ac48
	cmp		r1, r0
	bne		_0804ac50
_0804ac3a:
	ldr		r0, _0804ac4c
	str		r0, [r3, #0x0]
	add		r0, r6, #0x0
	bl		sub_08049414
	b		_0804ae36

.incbin "base.gba", 0x4AC46, 0x2

_0804ac48:	.4byte 0x0000E001
_0804ac4c:	.4byte 0x0000E002

_0804ac50:
	mov		r0, #0xe0
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bne		_0804ac5a
	b		_0804ae36
_0804ac5a:
	mov		r2, r9
	str		r2, [r3, #0x0]
	b		_0804add2
_0804ac60:
	mov		r0, #0xe0
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bne		_0804ac6a
	b		_0804ae36
_0804ac6a:
	mov		r1, r12
	ldr		r0, [r1, #0x48]
	and		r0, r2
	cmp		r0, #0x0
	beq		_0804ac76
	b		_0804ae36
_0804ac76:
	mov		r0, r9
	and		r0, r5
	cmp		r0, #0x0
	beq		_0804aca0
	cmp		r4, #0x0
	bne		_0804ac90
	mov		r0, #0xc0
	lsl		r0, r0, #0x8
	str		r0, [r3, #0x0]
	add		r0, r6, #0x0
	bl		sub_0804a254
	b		_0804ae36
_0804ac90:
	mov		r0, #0xc0
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bne		_0804ac9a
	b		_0804ae36
_0804ac9a:
	mov		r2, r9
	str		r2, [r3, #0x0]
	b		_0804add2
_0804aca0:
	mov		r0, #0x80
	and		r0, r5
	cmp		r0, #0x0
	beq		_0804ace4
	mov		r0, #0xc4
	lsl		r0, r0, #0x1
	add		r0, r12
	ldr		r0, [r0, #0x0]
	mov		r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0804acd4
	cmp		r4, #0x0
	bne		_0804acc8
	mov		r0, r10
	str		r0, [r3, #0x0]
	add		r0, r6, #0x0
	bl		sub_08049274
	b		_0804ae36
_0804acc8:
	cmp		r4, r10
	bne		_0804acce
	b		_0804ae36
_0804acce:
	mov		r1, r9
	str		r1, [r3, #0x0]
	b		_0804add2
_0804acd4:
	ldr		r0, _0804acdc
	and		r0, r5
	ldr		r1, _0804ace0
	b		_0804ae32

_0804acdc:	.4byte 0x0000FF7F
_0804ace0:	.4byte 0x0000FEFF

_0804ace4:
	mov		r1, r12
	add		r1, #0xc6
	ldrh	r0, [r1, #0x0]
	lsr		r0, r0, #0x8
	cmp		r0, #0x81
	bne		_0804ad38
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_0804ad38
	mov		r0, #0xc4
	lsl		r0, r0, #0x1
	add		r0, r12
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_0804ad2c
	cmp		r4, #0x0
	bne		_0804ad1c
	mov		r2, #0xb0
	lsl		r2, r2, #0x8
	str		r2, [r3, #0x0]
	add		r0, r6, #0x0
	bl		sub_0804a28c
	b		_0804ae36
_0804ad1c:
	mov		r0, #0xb0
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bne		_0804ad26
	b		_0804ae36
_0804ad26:
	mov		r1, r9
	str		r1, [r3, #0x0]
	b		_0804add2
_0804ad2c:
	ldr		r0, _0804ad34
	and		r0, r5
	b		_0804ae34

.incbin "base.gba", 0x4AD32, 0x2

_0804ad34:	.4byte 0x0000FEFF

_0804ad38:
	ldrh	r0, [r1, #0x0]
	lsr		r0, r0, #0x8
	cmp		r0, #0x82
	bne		_0804ad80
	ldrh	r2, [r7, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r2
	cmp		r0, #0x0
	beq		_0804ad80
	mov		r0, #0xc4
	lsl		r0, r0, #0x1
	add		r0, r12
	ldr		r0, [r0, #0x0]
	mov		r1, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_0804ad74
	cmp		r4, #0x0
	bne		_0804adbe
	mov		r1, #0xc2
	lsl		r1, r1, #0x1
	add		r1, r12
	mov		r0, #0xb0
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	add		r0, r6, #0x0
	bl		sub_0804a2ec
	b		_0804ae36
_0804ad74:
	ldr		r0, _0804ad7c
	and		r0, r2
	b		_0804ae34

.incbin "base.gba", 0x4AD7A, 0x2

_0804ad7c:	.4byte 0x0000FEFF

_0804ad80:
	ldrh	r0, [r1, #0x0]
	lsr		r0, r0, #0x8
	add		r1, r0, #0x0
	sub		r1, #0x7f
	cmp		r1, #0x4
	bne		_0804ade4
	ldrh	r2, [r7, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r2
	cmp		r0, #0x0
	beq		_0804ade4
	mov		r0, #0xc4
	lsl		r0, r0, #0x1
	add		r0, r12
	ldr		r0, [r0, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	bne		_0804adda
	cmp		r4, #0x0
	bne		_0804adbe
	mov		r1, #0xc2
	lsl		r1, r1, #0x1
	add		r1, r12
	mov		r0, #0xb0
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	add		r0, r6, #0x0
	bl		sub_0804a34c
	b		_0804ae36
_0804adbe:
	mov		r0, #0xb0
	lsl		r0, r0, #0x8
	cmp		r4, r0
	beq		_0804ae36
	mov		r1, #0xc2
	lsl		r1, r1, #0x1
	add		r1, r12
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	str		r0, [r1, #0x0]
_0804add2:
	add		r0, r6, #0x0
	bl		sub_0804a200
	b		_0804ae36
_0804adda:
	ldr		r0, _0804ade0
	and		r0, r2
	b		_0804ae34

_0804ade0:	.4byte 0x0000FEFF

_0804ade4:
	ldrh	r0, [r7, #0x0]
	ldr		r1, _0804ae10
	and		r1, r0
	strh	r1, [r7, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804ae36
	cmp		r4, #0x0
	bne		_0804ae14
	mov		r1, #0xc2
	lsl		r1, r1, #0x1
	add		r1, r12
	mov		r0, #0xa0
	lsl		r0, r0, #0x8
	str		r0, [r1, #0x0]
	add		r0, r6, #0x0
	bl		sub_0804a218
	b		_0804ae2e

.incbin "base.gba", 0x4AE0E, 0x2

_0804ae10:	.4byte 0x0000FEFF

_0804ae14:
	mov		r0, #0xa0
	lsl		r0, r0, #0x8
	cmp		r4, r0
	beq		_0804ae2e
	mov		r1, #0xc2
	lsl		r1, r1, #0x1
	add		r1, r12
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	str		r0, [r1, #0x0]
	add		r0, r6, #0x0
	bl		sub_0804a200
_0804ae2e:
	ldrh	r1, [r7, #0x0]
	ldr		r0, _0804ae5c
_0804ae32:
	and		r0, r1
_0804ae34:
	strh	r0, [r7, #0x0]
_0804ae36:
	ldr		r2, [sp, #0x0]
	add		r2, #0x1
	str		r2, [sp, #0x0]
	ldr		r3, _0804ae60
	ldr		r1, _0804ae64
	add		r0, r3, r1
	ldrb	r0, [r0, #0x0]
	cmp		r2, r0
	bge		_0804ae4a
	b		_0804a9ea
_0804ae4a:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4AE5A, 0x2

_0804ae5c:	.4byte 0x00007FFF
_0804ae60:	.4byte 0x030031C4
_0804ae64:	.4byte 0x000007F1
	thumb_func_end sub_0804a9cc

	thumb_func_start sub_0804ae68
sub_0804ae68:
	push	{ r4, r5, lr }
	sub		sp, #0x8
	mov		r0, #0x0
	bl		sub_08028130
	mov		r1, #0x9f
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	mov		r5, #0x0
	strh	r5, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [sp, #0x0]
	ldr		r1, _0804aeec
	ldr		r2, _0804aef0
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
	ldr		r0, _0804aef4
	str		r0, [sp, #0x4]
	add		r4, sp, #0x4
	mov		r0, #0x1
	bl		sub_080281a4
	add		r1, r0, #0x0
	ldr		r2, _0804aef8
	add		r0, r4, #0x0
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x2
	bl		sub_080281fc
	ldr		r1, _0804aefc
	mov		r0, #0xf0
	strh	r0, [r1, #0x0]
	add		r1, #0x4
	mov		r0, #0xa0
	strh	r0, [r1, #0x0]
	add		r1, #0x4
	mov		r0, #0x3e
	strh	r0, [r1, #0x0]
	ldr		r0, _0804af00
	strh	r5, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0804af04
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x6
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r1, #0x1
	ldr		r0, _0804af08
	strb	r1, [r0, #0xe]
	add		sp, #0x8
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4AEEA, 0x2

_0804aeec:	.4byte 0x06002E00
_0804aef0:	.4byte 0x01000008
_0804aef4:	.4byte 0x91709170
_0804aef8:	.4byte 0x01000200
_0804aefc:	.4byte Window0HorizontalDimensions
_0804af00:	.4byte InsideofOBJWindow_OutsideofWindows
_0804af04:	.4byte 0x00009FFF
_0804af08:	.4byte 0x030052F0
	thumb_func_end sub_0804ae68

	thumb_func_start sub_0804af0c
sub_0804af0c:
	push	{ r4, r5, lr }
	ldr		r5, _0804af60
	ldrb	r3, [r5, #0xf]
	ldr		r2, _0804af64
	ldrb	r1, [r2, #0x1]
	mov		r0, #0x20
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x6
	orr		r0, r1
	strb	r0, [r2, #0x1]
	ldr		r4, _0804af68
	lsl		r1, r3, #0x1
	add		r1, r1, r3
	lsl		r2, r1, #0x1
	lsl		r1, r1, #0x9
	mov		r0, #0xf0
	sub		r0, r0, r2
	orr		r1, r0
	strh	r1, [r4, #0x0]
	add		r4, #0x4
	lsl		r2, r3, #0x2
	lsl		r1, r3, #0xa
	mov		r0, #0xa0
	sub		r0, r0, r2
	orr		r1, r0
	strh	r1, [r4, #0x0]
	ldr		r1, _0804af6c
	mov		r0, #0x3e
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	cmp		r3, #0x14
	bne		_0804af5a
	ldr		r0, _0804af70
	str		r0, [r5, #0x0]
	mov		r0, #0x0
	strb	r0, [r5, #0xf]
_0804af5a:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0804af60:	.4byte 0x030052F0
_0804af64:	.4byte BG0Control
_0804af68:	.4byte Window0HorizontalDimensions
_0804af6c:	.4byte InsideofWindow0and1
_0804af70:	.4byte 0x0804b991
	thumb_func_end sub_0804af0c

	thumb_func_start sub_0804af74
sub_0804af74:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	bl		sub_080297c8
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r1, #0xc0
	lsl		r1, r1, #0x13
	ldr		r2, _0804b024
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
	bl		sub_0802813c
	ldr		r0, _0804b028
	mov		r1, #0x18
	bl		sub_0802703c
	ldr		r7, _0804b02c
	ldrb	r1, [r7, #0x0]
	mov		r6, #0x7f
	add		r0, r6, #0x0
	and		r0, r1
	strb	r0, [r7, #0x0]
	ldrb	r1, [r7, #0x1]
	mov		r5, #0x3f
	add		r0, r5, #0x0
	and		r0, r1
	strb	r0, [r7, #0x1]
	ldrb	r1, [r7, #0x0]
	mov		r0, #0x4
	neg		r0, r0
	and		r0, r1
	strb	r0, [r7, #0x0]
	ldrb	r1, [r7, #0x0]
	mov		r4, #0x41
	neg		r4, r4
	add		r0, r4, #0x0
	and		r0, r1
	strb	r0, [r7, #0x0]
	ldrb	r1, [r7, #0x0]
	mov		r2, #0xd
	neg		r2, r2
	add		r0, r2, #0x0
	and		r0, r1
	strb	r0, [r7, #0x0]
	ldrb	r1, [r7, #0x1]
	mov		r3, #0x20
	neg		r3, r3
	add		r0, r3, #0x0
	and		r0, r1
	mov		r1, #0x6
	orr		r0, r1
	strb	r0, [r7, #0x1]
	add		r7, #0x2
	ldrb	r0, [r7, #0x0]
	and		r6, r0
	strb	r6, [r7, #0x0]
	ldrb	r0, [r7, #0x1]
	and		r5, r0
	strb	r5, [r7, #0x1]
	ldrb	r0, [r7, #0x0]
	mov		r1, #0x3
	orr		r0, r1
	strb	r0, [r7, #0x0]
	ldrb	r0, [r7, #0x0]
	and		r4, r0
	strb	r4, [r7, #0x0]
	ldrb	r0, [r7, #0x0]
	and		r2, r0
	mov		r0, #0x4
	orr		r2, r0
	strb	r2, [r7, #0x0]
	ldrb	r0, [r7, #0x1]
	and		r3, r0
	mov		r0, #0xf
	orr		r3, r0
	strb	r3, [r7, #0x1]
	mov		r1, #0x80
	lsl		r1, r1, #0x13
	ldr		r2, _0804b030
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4B022, 0x2

_0804b024:	.4byte 0x01006000
_0804b028:	.4byte 0x0810a890
_0804b02c:	.4byte BG0Control
_0804b030:	.4byte 0x00000141
	thumb_func_end sub_0804af74

	thumb_func_start sub_0804b034
sub_0804b034:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	ldr		r4, _0804b098
	ldr		r0, _0804b09c
	mov		r7, #0x0
	strh	r7, [r0, #0x0]
	mov		r5, #0x0
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	str		r5, [r4, #0xc]
	mov		r0, #0x2
	ldr		r1, _0804b0a0
	bl		sub_0807df78
	bl		_DrawFrameRunAudio
	mov		r0, #0xa0
	lsl		r0, r0, #0x13
	strh	r5, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	strh	r5, [r0, #0x0]
	ldr		r0, _0804b0a4
	add		r6, r4, r0
	ldrb	r0, [r6, #0x0]
	cmp		r0, #0x1
	bls		_0804b0c4
	bl		sub_08027788
	cmp		r0, #0x0
	beq		_0804b08a
	ldr		r1, _0804b0a8
	ldrb	r0, [r1, #0x1]
	ldrb	r6, [r6, #0x0]
	cmp		r0, r6
	beq		_0804b0b0
_0804b08a:
	ldr		r0, _0804b0a8
	strh		r5, [r0, #0x16]
	bl		sub_08027744
	ldr		r1, _0804b0ac
	add		r0, r4, r1
	b		_0804b0c8

_0804b098:	.4byte RunGameLogic_CallBack
_0804b09c:	.4byte 0x030052D0
_0804b0a0:	.4byte 0x00010001
_0804b0a4:	.4byte 0x000007FB
_0804b0a8:	.4byte 0x03003000
_0804b0ac:	.4byte 0x000007FC

_0804b0b0:
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	ldr		r2, _0804b0c0
	add		r0, r4, r2
	strb	r1, [r0, #0x0]
	b		_0804b0ca

.incbin "base.gba", 0x4B0BE, 0x2

_0804b0c0:	.4byte 0x000007FC

_0804b0c4:
	ldr		r3, _0804b168
	add		r0, r4, r3
_0804b0c8:
	strb	r7, [r0, #0x0]
_0804b0ca:
	ldr		r4, _0804b16c
	ldr		r7, _0804b170
	add		r2, r4, r7
	mov		r1, #0xfb
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	ldrb	r1, [r0, #0x0]
	lsl		r1, r1, #0x2
	ldr		r3, _0804b174
	add		r0, r4, r3
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r2, #0x0]
	bl		sub_0804af74
	mov		r0, #0x1
	bl		sub_0802994c
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	ldr		r0, _0804b16c
	bl		sub_08042738
	bl		_DrawFrameRunAudio
	bl		sub_0804a92c
	bl		_DrawFrameRunAudio
	ldr		r0, _0804b16c
	bl		sub_080447c8
	bl		_DrawFrameRunAudio
	sub		r7, #0x3a
	add		r0, r4, r7
	ldrh	r1, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x4
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r2, r7, #0x0
	add		r4, r4, r2
	mov		r10, r4
	cmp		r0, r1
	bne		_0804b13a
	ldrh	r1, [r4, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_0804b13a
	bl		sub_0804bea0
_0804b13a:
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r3, _0804b16c
	ldr		r4, _0804b178
	add		r1, r3, r4
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	bl		sub_08054170
	ldr		r0, _0804b16c
	bl		sub_0802c72c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0xc
	beq		_0804b180
	cmp		r0, #0xc
	bgt		_0804b17c
	cmp		r0, #0x0
	beq		_0804b180
	b		_0804b188

.incbin "base.gba", 0x4B166, 0x2

_0804b168:	.4byte 0x000007FC
_0804b16c:	.4byte 0x030031C4
_0804b170:	.4byte 0x00000814
_0804b174:	.4byte 0x000007F4
_0804b178:	.4byte 0x00000C58

_0804b17c:
	cmp		r0, #0x10
	bne		_0804b188
_0804b180:
	mov		r0, #0x27
	bl		sub_0807073c
	b		_0804b18e
_0804b188:
	mov		r0, #0x26
	bl		sub_0807073c
_0804b18e:
	mov		r7, r10
	ldrh	r2, [r7, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	beq		_0804b1bc
	cmp		r1, r0
	bgt		_0804b1bc
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_0804b1bc
	mov		r0, #0x10
	and		r0, r2
	cmp		r0, #0x0
	bne		_0804b1bc
	mov		r0, #0x3
	bl		sub_0807073c
	b		_0804b1c2
_0804b1bc:
	mov		r0, #0x4
	bl		sub_0807073c
_0804b1c2:
	ldr		r1, _0804b234
	mov		r0, #0x0
	str		r0, [r1, #0x10]
	mov		r0, #0x1
	mov		r9, r0
	mov		r6, #0x0
	ldr		r1, _0804b238
	mov		r2, #0xe0
	lsl		r2, r2, #0x5
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	mov		r4, #0xfd
	lsl		r4, r4, #0x3
	ldr		r3, _0804b23c
	add		r4, r3, r4
	str		r4, [sp, #0x4]
	ldr		r7, _0804b240
	add		r7, r3, r7
	str		r7, [sp, #0x8]
	ldr		r0, _0804b244
	add		r0, r3, r0
	str		r0, [sp, #0xC]
	ldr		r7, _0804b248
	mov		r8, r7
_0804b1f2:
	mov		r4, #0xe0
	lsl		r4, r4, #0x5
	ldrb	r0, [r7, #0x1]
	cmp		r0, #0x0
	beq		_0804b216
	add		r5, r4, #0x0
	mov		r2, r8
	add		r2, #0x2
	mov		r1, r8
	ldrb	r3, [r1, #0x1]
_0804b206:
	ldrh	r1, [r2, #0x0]
	add		r0, r5, #0x0
	and		r0, r1
	and		r4, r0
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bne		_0804b206
_0804b216:
	bl		_DrawFrameRunAudio
	mov		r2, #0xe0
	lsl		r2, r2, #0x5
	cmp		r4, r2
	beq		_0804b24c
	add		r6, #0x1
	cmp		r6, #0xb4
	ble		_0804b250
	mov		r0, #0x0
	strh		r0, [r7, #0x16]
	bl		sub_08027744
	b		_0804b256

.incbin "base.gba", 0x4B232, 0x2

_0804b234:	.4byte RunGameLogic_CallBack
_0804b238:	.4byte 0x030052D0
_0804b23c:	.4byte 0x030031C4
_0804b240:	.4byte 0x00000C88
_0804b244:	.4byte 0x000007D4
_0804b248:	.4byte 0x03003000

_0804b24c:
	mov		r3, #0x0
	mov		r9, r3
_0804b250:
	mov		r4, r9
	cmp		r4, #0x0
	bne		_0804b1f2
_0804b256:
	ldr		r1, _0804b2b8
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r0, [r2, #0x0]
	mov		r7, #0xb0
	lsl		r7, r7, #0x5
	add		r1, r7, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r5, _0804b2bc
	ldr		r4, _0804b2c0
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	str		r5, [r4, #0xc]
	mov		r0, #0x2
	ldr		r1, _0804b2c4
	bl		sub_0807df78
	ldr		r1, _0804b2c8
	mov		r0, #0x2
	bl		sub_0807df78
	ldr		r1, _0804b2cc
	ldr		r2, _0804b2d0
	add		r0, r1, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x4
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	cmp		r0, r1
	bne		_0804b2d4
	mov		r3, r10
	ldrh	r1, [r3, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_0804b2d4
	bl		_DrawFrameRunAudio
	bl		sub_0804c420
	b		_0804b2ea

_0804b2b8:	.4byte 0x030052D0
_0804b2bc:	.4byte sub_0804b958
_0804b2c0:	.4byte RunGameLogic_CallBack
_0804b2c4:	.4byte 0x00010001
_0804b2c8:	.4byte 0x00010004
_0804b2cc:	.4byte 0x030031C4
_0804b2d0:	.4byte 0x000007DA

_0804b2d4:
	ldr		r0, _0804b320
	ldr		r1, _0804b324
	str		r0, [r1, #0x4]
	ldr		r0, _0804b328
	str		r0, [r1, #0x0]
	ldr		r0, _0804b32c
	str		r0, [r1, #0x8]
	mov		r0, #0x3
	strb	r0, [r1, #0xe]
	bl		sub_0802a130
_0804b2ea:
	mov		r4, #0x1
	str		r4, [sp, #0x0]
	ldr		r1, _0804b330
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r7, [sp, #0x4]
	strb	r0, [r7, #0x0]
_0804b2f8:
	ldr		r0, _0804b330
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0804b3ca
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x0
	beq		_0804b3ca
	ldr		r2, [sp, #0x8]
	ldr		r1, [r2, #0x0]
	cmp		r1, #0x0
	bge		_0804b334
	mov		r0, #0x80
	lsl		r0, r0, #0x17
	and		r1, r0
	cmp		r1, #0x0
	beq		_0804b35c
	bl		sub_08014d5c
	b		_0804b35c

.incbin "base.gba", 0x4B31E, 0x2

_0804b320:	.4byte sub_0804b9f4
_0804b324:	.4byte 0x030052F0
_0804b328:	.4byte 0x0804ba51
_0804b32c:	.4byte sub_0804ba88
_0804b330:	.4byte 0x03005FD0

_0804b334:
	ldr		r3, _0804b398
	ldr		r4, _0804b39c
	add		r0, r3, r4
	ldrh	r0, [r0, #0x0]
	mov		r7, #0x80
	lsl		r7, r7, #0x2
	add		r1, r7, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804b35c
	ldr		r1, [sp, #0x4]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x2
	blt		_0804b35c
	cmp		r0, #0x3
	ble		_0804b358
	cmp		r0, #0x5
	bne		_0804b35c
_0804b358:
	bl		sub_08014d5c
_0804b35c:
	ldr		r0, _0804b3a0
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_0804b36e
	add		r0, r1, #0x0
	mov		r1, #0x2
	bl		sub_080708d4
_0804b36e:
	ldr		r2, _0804b398
	ldr		r3, _0804b39c
	add		r0, r2, r3
	ldrh	r1, [r0, #0x0]
	mov		r4, #0xf0
	lsl		r4, r4, #0x4
	add		r0, r4, #0x0
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	cmp		r0, r1
	bne		_0804b3b4
	ldr		r0, _0804b3a4
	ldr		r7, _0804b3a8
	str		r0, [r7, #0x4]
	ldr		r0, _0804b3ac
	str		r0, [r7, #0x0]
	ldr		r0, _0804b3b0
	str		r0, [r7, #0x8]
	b		_0804b3c2

.incbin "base.gba", 0x4B396, 0x2

_0804b398:	.4byte 0x030031C4
_0804b39c:	.4byte 0x000007DA
_0804b3a0:	.4byte 0x08124544
_0804b3a4:	.4byte sub_0804ae68
_0804b3a8:	.4byte 0x030052F0
_0804b3ac:	.4byte sub_0804af0c
_0804b3b0:	.4byte 0x0804b9a5

_0804b3b4:
	ldr		r0, _0804b428
	ldr		r1, _0804b42c
	str		r0, [r1, #0x4]
	ldr		r0, _0804b430
	str		r0, [r1, #0x0]
	ldr		r0, _0804b434
	str		r0, [r1, #0x8]
_0804b3c2:
	bl		sub_0802a130
	mov		r2, #0x0
	str		r2, [sp, #0x0]
_0804b3ca:
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	ldr		r3, [sp, #0xC]
	ldrb	r1, [r3, #0x0]
	mov		r0, #0x40
	and		r0, r1
	mov		r1, #0x0
	cmp		r0, #0x0
	bne		_0804b3e2
	mov		r1, #0x1
_0804b3e2:
	add		r0, r1, #0x0
	bl		sub_0802994c
	ldr		r4, _0804b438
	ldr		r7, _0804b43c
	add		r5, r4, r7
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x1
	bls		_0804b448
	mov		r4, #0x0
	bl		sub_08027788
	cmp		r0, #0x0
	bne		_0804b400
	mov		r4, #0x1
_0804b400:
	ldr		r1, _0804b440
	ldrb	r0, [r1, #0x16]
	cmp		r0, #0x1
	beq		_0804b40a
	mov		r4, #0x1
_0804b40a:
	ldrb	r0, [r1, #0x1]
	ldrb	r5, [r5, #0x0]
	cmp		r0, r5
	beq		_0804b414
	mov		r4, #0x1
_0804b414:
	cmp		r4, #0x0
	beq		_0804b448
	mov		r0, #0xc
	ldr		r1, [sp, #0x4]
	strb	r0, [r1, #0x0]
	ldr		r1, _0804b444
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	b		_0804b6f2

.incbin "base.gba", 0x4B426, 0x2

_0804b428:	.4byte sub_0804baa8
_0804b42c:	.4byte 0x030052F0
_0804b430:	.4byte sub_0804bb3c
_0804b434:	.4byte 0x0804bb99
_0804b438:	.4byte 0x030031C4
_0804b43c:	.4byte 0x000007D7
_0804b440:	.4byte 0x03003000
_0804b444:	.4byte 0x03005FD0

_0804b448:
	mov		r6, #0x0
	ldr		r2, _0804b570
	mov		r12, r2
	mov		r3, #0x10
	mov		r10, r3
	mov		r4, #0x80
	mov		r9, r4
	mov		r7, #0x40
	mov		r8, r7
_0804b45a:
	mov		r1, #0x0
	lsl		r5, r6, #0x1
	ldr		r2, _0804b574
	add		r0, r5, r2
	ldrh	r2, [r0, #0x0]
	add		r0, r2, #0x0
	mov		r3, r10
	and		r0, r3
	cmp		r0, #0x0
	beq		_0804b472
	mov		r1, #0x80
	lsl		r1, r1, #0x1
_0804b472:
	mov		r0, #0x20
	and		r0, r2
	cmp		r0, #0x0
	beq		_0804b482
	mov		r4, #0x80
	lsl		r4, r4, #0x2
	add		r0, r4, #0x0
	orr		r1, r0
_0804b482:
	add		r0, r2, #0x0
	mov		r7, r9
	and		r0, r7
	cmp		r0, #0x0
	beq		_0804b498
	mov		r3, #0x80
	lsl		r3, r3, #0x3
	add		r0, r3, #0x0
	orr		r1, r0
	lsl		r0, r1, #0x10
	lsr		r1, r0, #0x10
_0804b498:
	add		r0, r2, #0x0
	mov		r4, r8
	and		r0, r4
	cmp		r0, #0x0
	beq		_0804b4ae
	mov		r7, #0x80
	lsl		r7, r7, #0x4
	add		r0, r7, #0x0
	orr		r1, r0
	lsl		r0, r1, #0x10
	lsr		r1, r0, #0x10
_0804b4ae:
	mov		r0, #0x2
	and		r0, r2
	cmp		r0, #0x0
	beq		_0804b4c2
	mov		r3, #0x80
	lsl		r3, r3, #0x7
	add		r0, r3, #0x0
	orr		r1, r0
	lsl		r0, r1, #0x10
	lsr		r1, r0, #0x10
_0804b4c2:
	mov		r7, #0x1
	add		r0, r2, #0x0
	and		r0, r7
	cmp		r0, #0x0
	beq		_0804b4d8
	mov		r4, #0x80
	lsl		r4, r4, #0x8
	add		r0, r4, #0x0
	orr		r1, r0
	lsl		r0, r1, #0x10
	lsr		r1, r0, #0x10
_0804b4d8:
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r0, r2, #0x0
	and		r0, r3
	cmp		r0, #0x0
	beq		_0804b4e8
	mov		r0, r10
	orr		r1, r0
_0804b4e8:
	mov		r4, #0x80
	lsl		r4, r4, #0x2
	and		r2, r4
	cmp		r2, #0x0
	beq		_0804b4f6
	mov		r2, r8
	orr		r1, r2
_0804b4f6:
	mov		r2, r12
	add		r0, r5, r2
	ldrh	r2, [r0, #0x0]
	add		r0, r2, #0x0
	and		r0, r3
	cmp		r0, #0x0
	beq		_0804b50c
	mov		r0, #0x4
	orr		r1, r0
	lsl		r0, r1, #0x10
	lsr		r1, r0, #0x10
_0804b50c:
	add		r0, r2, #0x0
	and		r0, r4
	cmp		r0, #0x0
	beq		_0804b518
	mov		r3, r9
	orr		r1, r3
_0804b518:
	mov		r0, #0x4
	and		r0, r2
	cmp		r0, #0x0
	beq		_0804b52c
	mov		r4, #0x80
	lsl		r4, r4, #0x6
	add		r0, r4, #0x0
	orr		r1, r0
	lsl		r0, r1, #0x10
	lsr		r1, r0, #0x10
_0804b52c:
	mov		r3, #0x8
	and		r2, r3
	cmp		r2, #0x0
	beq		_0804b540
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r0, r2, #0x0
	orr		r1, r0
	lsl		r0, r1, #0x10
	lsr		r1, r0, #0x10
_0804b540:
	ldr		r4, _0804b578
	ldr		r2, _0804b57c
	add		r0, r4, r2
	add		r0, r0, r5
	strh	r1, [r0, #0x0]
	add		r6, #0x1
	cmp		r6, #0x3
	ble		_0804b45a
	ldr		r4, [sp, #0xC]
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804b584
	ldr		r0, _0804b578
	bl		sub_08026b7c
	cmp		r0, #0x0
	beq		_0804b568
	b		_0804b6f2
_0804b568:
	ldr		r0, _0804b580
	str		r7, [r0, #0x0]
	b		_0804b6f2

.incbin "base.gba", 0x4B56E, 0x2

_0804b570:	.4byte 0x03005220
_0804b574:	.4byte 0x030052B0
_0804b578:	.4byte 0x030031C4
_0804b57c:	.4byte 0x0000081C
_0804b580:	.4byte 0x03005FD0

_0804b584:
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804b5a4
	mov		r0, #0xf
	and		r0, r1
	cmp		r0, #0x3
	bne		_0804b5a4
	mov		r7, r12
	ldrh	r0, [r7, #0x0]
	and		r0, r3
	cmp		r0, #0x0
	beq		_0804b5a4
	ldr		r0, _0804b720
	bl		sub_08025a98
_0804b5a4:
	ldr		r4, _0804b724
	ldr		r0, [r4, #0x10]
	add		r0, #0x1
	str		r0, [r4, #0x10]
	bl		sub_0803d234
	bl		sub_08047294
	ldr		r0, _0804b720
	bl		sub_08043ec8
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x0
	beq		_0804b5ca
	ldr		r0, _0804b728
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0804b5ca
	b		_0804b6f2
_0804b5ca:
	ldr		r0, _0804b720
	bl		sub_08043180
	ldr		r0, _0804b720
	bl		sub_080448bc
	bl		sub_0804a9cc
	bl		sub_08041ed4
	ldr		r0, _0804b720
	bl		sub_08043244
	ldr		r0, _0804b720
	bl		sub_08044268
	ldr		r0, _0804b720
	bl		sub_08045a68
	ldr		r0, _0804b720
	bl		sub_080434fc
	ldr		r0, _0804b720
	bl		sub_08043768
	ldr		r0, _0804b720
	bl		sub_08045d4c
	bl		sub_0803d290
	ldr		r1, _0804b720
	ldr		r2, _0804b72c
	add		r0, r1, r2
	ldrh	r1, [r0, #0x0]
	mov		r3, #0xf0
	lsl		r3, r3, #0x4
	add		r0, r3, #0x0
	and		r0, r1
	mov		r7, #0x80
	lsl		r7, r7, #0x2
	cmp		r0, r7
	bne		_0804b6e2
	ldr		r0, [r4, #0x10]
	ldr		r2, _0804b730
	lsl		r0, r0, #0x1a
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0804b62c
	add		r0, #0x3f
_0804b62c:
	asr		r1, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r1
	ldr		r1, _0804b734
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	sub		r0, r0, r1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	mov		r8, r0
	mov		r0, #0x0
	mov		r10, r0
	mov		r1, #0x1f
	mov		r9, r1
_0804b654:
	ldr		r0, _0804b738
	mov		r2, r10
	lsl		r3, r2, #0x1
	add		r0, r3, r0
	ldrh	r4, [r0, #0x0]
	add		r6, r4, #0x0
	mov		r7, #0x1f
	and		r6, r7
	lsr		r5, r4, #0x5
	mov		r0, r9
	and		r5, r0
	lsr		r4, r4, #0xa
	and		r4, r0
	ldr		r0, _0804b73c
	add		r0, r3, r0
	ldrh	r2, [r0, #0x0]
	add		r0, r2, #0x0
	and		r0, r7
	lsr		r1, r2, #0x5
	mov		r7, r9
	and		r1, r7
	lsr		r2, r2, #0xa
	and		r2, r7
	sub		r0, r0, r6
	mov		r7, r8
	mul		r7, r0
	add		r0, r7, #0x0
	asr		r0, r0, #0xf
	add		r6, r6, r0
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	sub		r1, r1, r5
	mov		r0, r8
	mul		r0, r1
	asr		r0, r0, #0xf
	add		r5, r5, r0
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	sub		r2, r2, r4
	mov		r0, r8
	mul		r0, r2
	asr		r0, r0, #0xf
	add		r4, r4, r0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	mov		r0, #0x0
	str		r3, [sp, #0x10]
	bl		sub_08028130
	ldr		r3, [sp, #0x10]
	add		r3, r3, r0
	mov		r0, #0xa0
	lsl		r0, r0, #0x1
	add		r3, r3, r0
	mov		r1, #0x1f
	and		r6, r1
	and		r5, r1
	lsl		r5, r5, #0x5
	orr		r6, r5
	and		r4, r1
	lsl		r4, r4, #0xa
	orr		r6, r4
	strh	r6, [r3, #0x0]
	mov		r2, #0x1
	add		r10, r2
	mov		r3, r10
	cmp		r3, #0xf
	ble		_0804b654
	mov		r0, #0x1
	bl		sub_08028168
_0804b6e2:
	ldr		r4, [sp, #0xC]
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804b6f2
	bl		sub_08070870
_0804b6f2:
	ldr		r7, [sp, #0x0]
	cmp		r7, #0x0
	beq		_0804b6fa
	b		_0804b2f8
_0804b6fa:
	ldr		r0, _0804b740
	ldrb	r1, [r0, #0xc]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804b708
	b		_0804b2f8
_0804b708:
	mov		r4, #0x0
	mov		r7, #0x0
	ldr		r2, [sp, #0x8]
	ldr		r1, [r2, #0x0]
	cmp		r1, #0x0
	bge		_0804b744
	mov		r0, #0x80
	lsl		r0, r0, #0x17
	and		r1, r0
	cmp		r1, #0x0
	beq		_0804b768
	b		_0804b762

_0804b720:	.4byte 0x030031C4
_0804b724:	.4byte RunGameLogic_CallBack
_0804b728:	.4byte 0x03005FD0
_0804b72c:	.4byte 0x000007DA
_0804b730:	.4byte 0x08101068
_0804b734:	.4byte 0x000003FF
_0804b738:	.4byte 0x080c6acc
_0804b73c:	.4byte 0x080c6aec
_0804b740:	.4byte 0x030052F0

_0804b744:
	ldr		r3, _0804b780
	ldr		r1, _0804b784
	add		r0, r3, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804b768
	ldr		r2, [sp, #0x4]
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x5
	bgt		_0804b768
	cmp		r0, #0x2
	blt		_0804b768
_0804b762:
	bl		sub_08014d5c
	add		r7, r0, #0x0
_0804b768:
	ldr		r3, [sp, #0x4]
	ldrb	r0, [r3, #0x0]
	sub		r0, #0x1
	cmp		r0, #0xb
	bls		_0804b774
	b		_0804b8a6
_0804b774:
	lsl		r0, r0, #0x2
	ldr		r1, _0804b788
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x4B77E, 0x2

_0804b780:	.4byte 0x030031C4
_0804b784:	.4byte 0x000007DA
_0804b788:	.4byte 0x0804b78c
_0804b78c:	.4byte 0x0804b7bc

.incbin "base.gba", 0x4B790, 0x28
_0804b7b8:	.4byte 0x0804b89c

.incbin "base.gba", 0x4B7BC, 0x4C
	thumb_func_end sub_0804b034


.incbin "base.gba", 0x4B808, 0x94

_0804b89c:

.incbin "base.gba", 0x4B89C, 0x4
_0804b8a0:	.4byte 0x080165D9

.incbin "base.gba", 0x4B8A4, 0x2

_0804b8a6:

.incbin "base.gba", 0x4B8A6, 0x22
_0804b8c8:	.4byte sub_080143ec
_0804b8cc:	.4byte RunGameLogic_CallBack

_0804b8d0:

.incbin "base.gba", 0x4B8D0, 0xE
_0804b8de:

.incbin "base.gba", 0x4B8DE, 0x14
_0804b8f2:

.incbin "base.gba", 0x4B8F2, 0x12
_0804b904:

.incbin "base.gba", 0x4B904, 0x40
_0804b944:	.4byte RunGameLogic_CallBack
_0804b948:	.4byte 0x0000000B
_0804b94c:	.4byte 0x08124544
_0804b950:	.4byte 0x081245c8
_0804b954:	.4byte 0x00010001
	thumb_func_start sub_0804b958
sub_0804b958:
	push	{ r4, r5, r6, lr }
	ldr		r4, _0804b984
	add		r6, r4, #0x0
	add		r6, #0x24
	ldr		r0, _0804b988
	add		r5, r4, r0
	add		r0, r5, #0x0
	bl		sub_0802ade8
	ldr		r0, _0804b98c
	add		r4, r4, r0
	mov		r0, #0x14
	ldrsh	r1, [r5, r0]
	mov		r2, #0x0
	ldrsb	r2, [r4, r2]
	add		r0, r6, #0x0
	bl		sub_080446c0
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4B982, 0x2

_0804b984:	.4byte RunGameLogic_CallBack
_0804b988:	.4byte 0x00000848
_0804b98c:	.4byte 0x00000BC8
	ldr		r1, _0804b9a0
	ldrb	r0, [r1, #0xf]
	cmp		r0, #0x28
	bne		_0804b99c
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_0804b99c:
	bx		lr

.incbin "base.gba", 0x4B99E, 0x2

_0804b9a0:	.4byte 0x030052F0
	push	{ r4, r5, lr }
	mov		r1, #0x5
	neg		r1, r1
	mov		r0, #0x1
	bl		sub_0807df78
	mov		r5, #0x0
	ldr		r4, _0804b9e8
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	str		r5, [r4, #0xc]
	mov		r0, #0x2
	ldr		r1, _0804b9ec
	bl		sub_0807df78
	ldr		r1, _0804b9f0
	mov		r0, #0xff
	strh	r0, [r1, #0x0]
	add		r1, #0x4
	mov		r0, #0x10
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	strh	r5, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0804b9e8:	.4byte RunGameLogic_CallBack
_0804b9ec:	.4byte 0x00010001
_0804b9f0:	.4byte ColorSpecialEffectsSElection
	thumb_func_end sub_0804b958

	thumb_func_start sub_0804b9f4
sub_0804b9f4:
	push	{ lr }
	sub		sp, #0x4
	ldr		r2, _0804ba40
	ldrb	r1, [r2, #0x1]
	mov		r0, #0x20
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x6
	orr		r0, r1
	strb	r0, [r2, #0x1]
	mov		r0, #0x0
	bl		sub_08028130
	mov		r2, #0x9f
	lsl		r2, r2, #0x1
	add		r1, r0, r2
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [sp, #0x0]
	ldr		r1, _0804ba44
	ldr		r2, _0804ba48
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0804ba4c
	and		r0, r1
	strh	r0, [r2, #0x0]
	add		sp, #0x4
	pop		{ r0 }
	bx		r0

_0804ba40:	.4byte BG0Control
_0804ba44:	.4byte 0x06002E00
_0804ba48:	.4byte 0x01000008
_0804ba4c:	.4byte 0x00009FFF
	ldr		r2, _0804ba60
	ldrb	r1, [r2, #0xf]
	cmp		r1, #0x8
	bne		_0804ba64
	mov		r0, #0x0
	str		r0, [r2, #0x0]
	b		_0804ba80

.incbin "base.gba", 0x4BA5E, 0x2

_0804ba60:	.4byte 0x030052F0

_0804ba64:
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804ba74
	asr		r1, r1, #0x1
	mov		r0, #0x7
	sub		r0, r0, r1
	b		_0804ba76
_0804ba74:
	asr		r0, r1, #0x1
_0804ba76:
	lsl		r0, r0, #0x2
	ldr		r2, _0804ba84
	add		r1, r0, r2
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_0804ba80:
	bx		lr

.incbin "base.gba", 0x4BA82, 0x2

_0804ba84:	.4byte 0x06002E00
	thumb_func_end sub_0804b9f4

	thumb_func_start sub_0804ba88
sub_0804ba88:
	push	{ lr }
	ldr		r2, _0804baa4
	ldrb	r1, [r2, #0x1]
	mov		r0, #0x20
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x7
	orr		r0, r1
	strb	r0, [r2, #0x1]
	bl		sub_08048748
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4BAA2, 0x2

_0804baa4:	.4byte BG0Control
	thumb_func_end sub_0804ba88

	thumb_func_start sub_0804baa8
sub_0804baa8:
	push	{ r4, lr }
	sub		sp, #0x8
	mov		r0, #0x0
	bl		sub_08028130
	mov		r2, #0x9f
	lsl		r2, r2, #0x1
	add		r1, r0, r2
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	ldr		r1, _0804bb1c
	ldr		r2, _0804bb20
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
	ldr		r0, _0804bb24
	str		r0, [sp, #0x4]
	add		r4, sp, #0x4
	mov		r0, #0x1
	bl		sub_080281a4
	add		r1, r0, #0x0
	ldr		r2, _0804bb28
	add		r0, r4, #0x0
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x2
	bl		sub_080281fc
	ldr		r1, _0804bb2c
	mov		r0, #0xf0
	strh	r0, [r1, #0x0]
	add		r1, #0x4
	mov		r0, #0xa0
	strh	r0, [r1, #0x0]
	ldr		r0, _0804bb30
	mov		r1, #0x3f
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0804bb34
	and		r0, r1
	strh	r0, [r2, #0x0]
	mov		r1, #0x3
	ldr		r0, _0804bb38
	strb	r1, [r0, #0xe]
	add		sp, #0x8
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0804bb1c:	.4byte 0x06002E00
_0804bb20:	.4byte 0x01000008
_0804bb24:	.4byte 0x91709170
_0804bb28:	.4byte 0x01000200
_0804bb2c:	.4byte Window0HorizontalDimensions
_0804bb30:	.4byte InsideofWindow0and1
_0804bb34:	.4byte 0x00009FFF
_0804bb38:	.4byte 0x030052F0
	thumb_func_end sub_0804baa8

	thumb_func_start sub_0804bb3c
sub_0804bb3c:
	push	{ r4, lr }
	ldr		r4, _0804bb74
	ldrb	r3, [r4, #0xf]
	ldr		r2, _0804bb78
	ldrb	r1, [r2, #0x1]
	mov		r0, #0x20
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x6
	orr		r0, r1
	strb	r0, [r2, #0x1]
	cmp		r3, #0x14
	bne		_0804bb5a
	mov		r0, #0x0
	str		r0, [r4, #0x0]
_0804bb5a:
	cmp		r3, #0x7
	bgt		_0804bb8e
	mov		r0, #0x1
	and		r0, r3
	cmp		r0, #0x0
	beq		_0804bb80
	asr		r1, r3, #0x1
	mov		r0, #0x3
	sub		r0, r0, r1
	lsl		r0, r0, #0x2
	ldr		r2, _0804bb7c
	b		_0804bb86

.incbin "base.gba", 0x4BB72, 0x2

_0804bb74:	.4byte 0x030052F0
_0804bb78:	.4byte BG0Control
_0804bb7c:	.4byte 0x06002E00

_0804bb80:
	asr		r0, r3, #0x1
	lsl		r0, r0, #0x2
	ldr		r2, _0804bb94
_0804bb86:
	add		r1, r0, r2
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r1, #0x0]
_0804bb8e:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0804bb94:	.4byte 0x06002E10
	push	{ r4, r5, lr }
	mov		r1, #0x5
	neg		r1, r1
	mov		r0, #0x1
	bl		sub_0807df78
	mov		r5, #0x0
	ldr		r4, _0804bbe0
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	str		r5, [r4, #0xc]
	mov		r0, #0x2
	ldr		r1, _0804bbe4
	bl		sub_0807df78
	mov		r0, #0x0
	bl		sub_08028130
	add		r4, r0, #0x0
	mov		r0, #0x0
	bl		sub_08028130
	mov		r1, #0x9f
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	strh	r0, [r4, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0804bbe0:	.4byte RunGameLogic_CallBack
_0804bbe4:	.4byte 0x00010001
	thumb_func_end sub_0804bb3c

	thumb_func_start sub_0804bbe8
sub_0804bbe8:
	push	{ r4, lr }
	ldr		r2, _0804bc30
	ldrb	r1, [r2, #0x1]
	mov		r0, #0x20
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x6
	orr		r0, r1
	strb	r0, [r2, #0x1]
	bl		sub_080270d0
	add		r1, r0, #0x0
	mov		r0, #0x3
	and		r0, r1
	lsl		r0, r0, #0x2
	ldr		r1, _0804bc34
	add		r0, r0, r1
	ldr		r4, _0804bc38
	add		r1, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r1, _0804bc3c
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0804bc40
	and		r0, r1
	strh	r0, [r2, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4BC2E, 0x2

_0804bc30:	.4byte BG0Control
_0804bc34:	.4byte 0x0810a880
_0804bc38:	.4byte 0x06002B80
_0804bc3c:	.4byte 0x06000E00
_0804bc40:	.4byte 0x00009FFF
	thumb_func_end sub_0804bbe8

	thumb_func_start sub_0804bc44
sub_0804bc44:
	push	{ lr }
	ldr		r1, _0804bc54
	ldrb	r0, [r1, #0xf]
	cmp		r0, #0x4
	bne		_0804bc58
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	b		_0804bc6e

_0804bc54:	.4byte 0x030052F0

_0804bc58:
	mov		r1, #0xae
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x5
	mov		r1, #0xc0
	lsl		r1, r1, #0x13
	add		r0, r0, r1
	ldr		r1, _0804bc74
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
_0804bc6e:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4BC72, 0x2

_0804bc74:	.4byte 0x06000E00
	thumb_func_end sub_0804bc44

	thumb_func_start sub_0804bc78
sub_0804bc78:
	push	{ r4, r5, r6, lr }
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	ldr		r2, _0804bcb4
	add		r6, r2, #0x0
	add		r6, #0x24
	ldr		r1, _0804bcb8
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804bc96
	b		_0804bda6
_0804bc96:
	cmp		r5, #0x10
	bne		_0804bcc0
	ldr		r0, _0804bcbc
	add		r4, r2, r0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x1f
	bhi		_0804bcc0
	mov		r0, #0xa
	bl		sub_0807073c
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x10
	orr		r0, r1
	strb	r0, [r4, #0x0]
	b		_0804bda6

_0804bcb4:	.4byte RunGameLogic_CallBack
_0804bcb8:	.4byte 0x00000838
_0804bcbc:	.4byte 0x00000C96

_0804bcc0:
	ldr		r1, _0804bcdc
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, r5
	bcs		_0804bd9a
	add		r2, r6, #0x0
	sub		r0, r5, #0x1
	cmp		r0, #0x1f
	bhi		_0804bd9a
	lsl		r0, r0, #0x2
	ldr		r1, _0804bce0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0804bcdc:	.4byte 0x00000C72
_0804bce0:	.4byte 0x0804bce4
_0804bce4:	.4byte 0x0804bd8c

.incbin "base.gba", 0x4BCE8, 0x7C

_0804bd64:
.incbin "base.gba", 0x4BD64, 0x4
.incbin "base.gba", 0x4BD68, 0x4
_0804bd6c:
.incbin "base.gba", 0x4BD6C, 0x4
.incbin "base.gba", 0x4BD70, 0x4
_0804bd74:
.incbin "base.gba", 0x4BD74, 0x4
.incbin "base.gba", 0x4BD78, 0x4

.incbin "base.gba", 0x4BD7C, 0x8
	thumb_func_end sub_0804bc78


.incbin "base.gba", 0x4BD84, 0x16

_0804bd9a:

.incbin "base.gba", 0x4BD9A, 0xC
_0804bda6:

.incbin "base.gba", 0x4BDA6, 0x6
_0804bdac:	.4byte 0x00000C72
	thumb_func_start sub_0804bdb0
sub_0804bdb0:
	push	{ r4, r5, r6, lr }
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	ldr		r1, _0804bdec
	add		r4, r1, #0x0
	add		r4, #0x24
	ldr		r3, _0804bdf0
	add		r0, r1, r3
	ldr		r5, [r0, #0x0]
	ldr		r0, [r5, #0x48]
	mov		r3, #0x20
	and		r0, r3
	cmp		r0, #0x0
	bne		_0804be90
	ldr		r0, _0804bdf4
	add		r1, r1, r0
	ldrb	r0, [r1, #0x0]
	bic		r0, r2
	strb	r0, [r1, #0x0]
	ldrb	r1, [r1, #0x0]
	cmp		r1, r2
	bcs		_0804be90
	add		r0, r1, #0x0
	and		r0, r3
	cmp		r0, #0x0
	beq		_0804bdf8
	mov		r0, #0x13
	bl		sub_0807073c
	b		_0804be90

_0804bdec:	.4byte RunGameLogic_CallBack
_0804bdf0:	.4byte 0x00000838
_0804bdf4:	.4byte 0x00000C96

_0804bdf8:
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804be08
	mov		r0, #0xa
	bl		sub_0807073c
	b		_0804be90
_0804be08:
	mov		r6, #0x8
	add		r0, r1, #0x0
	and		r0, r6
	cmp		r0, #0x0
	beq		_0804be1a
	mov		r0, #0xc
	bl		sub_0807073c
	b		_0804be90
_0804be1a:
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804be2a
	mov		r0, #0xb
	bl		sub_0807073c
	b		_0804be90
_0804be2a:
	mov		r0, #0x2
	and		r1, r0
	cmp		r1, #0x0
	beq		_0804be3a
	mov		r0, #0xd
	bl		sub_0807073c
	b		_0804be90
_0804be3a:
	add		r0, r4, #0x0
	bl		sub_0802c738
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x24
	bne		_0804be4a
	mov		r0, #0x1c
_0804be4a:
	add		r4, r0, #0x0
	ldr		r0, [r5, #0x48]
	and		r0, r6
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r6, r1, #0x0
	cmp		r0, #0x0
	beq		_0804be60
	mov		r3, #0xa0
	lsl		r3, r3, #0x1
	add		r6, r3, #0x0
_0804be60:
	add		r0, r4, #0x0
	bl		sub_0807073c
	ldr		r5, _0804be98
	ldr		r0, _0804be9c
	lsl		r4, r4, #0x3
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	add		r1, r6, #0x0
	bl		sub_08071674
_0804be90:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4BE96, 0x2

_0804be98:	.4byte 0x08124544
_0804be9c:	.4byte 0x081245c8
	thumb_func_end sub_0804bdb0

	thumb_func_start sub_0804bea0
sub_0804bea0:
	push	{ r4, r5, r6, r7, lr }
	ldr		r6, _0804bf30
	ldr		r0, _0804bf34
	add		r5, r6, r0
	ldrb	r0, [r5, #0x0]
	bl		sub_0802d73c
	add		r4, r0, #0x0
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	ldrb	r0, [r5, #0x0]
	bl		sub_0802d798
	lsl		r0, r0, #0x18
	lsr		r7, r0, #0x18
	ldr		r0, _0804bf38
	lsl		r5, r4, #0x2
	add		r0, r5, r0
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r3, #0xa0
	lsl		r3, r3, #0x1
	add		r1, r1, r3
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	add		r0, r6, r1
	ldrb	r4, [r0, #0x0]
	bl		sub_08029f34
	lsl		r1, r4, #0x1
	add		r1, r1, r4
	lsl		r1, r1, #0x6
	ldr		r2, _0804bf3c
	add		r1, r1, r2
	ldr		r2, _0804bf40
	ldr		r3, _0804bf44
	bl		sub_08029ee4
	ldr		r0, _0804bf48
	add		r0, r5, r0
	ldr		r0, [r0, #0x0]
	ldr		r1, _0804bf4c
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r0, _0804bf50
	ldr		r1, _0804bf54
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r3, _0804bf58
	add		r6, r6, r3
	ldr		r0, [r6, #0x0]
	ldr		r0, [r0, #0xc]
	bl		sub_0802c6c8
	cmp		r0, #0x0
	beq		_0804bf60
	ldr		r4, _0804bf5c
	add		r0, r5, r7
	bl		sub_0802d6a0
	b		_0804bf68

.incbin "base.gba", 0x4BF2E, 0x2

_0804bf30:	.4byte RunGameLogic_CallBack
_0804bf34:	.4byte 0x00000801
_0804bf38:	.4byte 0x0810a950
_0804bf3c:	.4byte 0x080b64ac
_0804bf40:	.4byte 0x06000020
_0804bf44:	.4byte 0x84000030
_0804bf48:	.4byte 0x0810a964
_0804bf4c:	.4byte 0x06000400
_0804bf50:	.4byte 0x080927cc
_0804bf54:	.4byte 0x060009C0
_0804bf58:	.4byte 0x0000059C
_0804bf5c:	.4byte 0x08102bf8

_0804bf60:
	ldr		r4, _0804c004
	add		r0, r5, r7
	bl		sub_0802d690
_0804bf68:
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x30]
	ldr		r1, _0804c008
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r4, _0804c00c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x30
	bl		_CallHardwareSetCpuFast
	ldr		r4, _0804c010
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x12
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0x20
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_080281fc
	ldr		r2, _0804c014
	ldrb	r1, [r2, #0x1]
	mov		r0, #0x3f
	and		r0, r1
	mov		r1, #0x40
	orr		r0, r1
	strb	r0, [r2, #0x1]
	ldrb	r1, [r2, #0x1]
	mov		r0, #0x20
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x6
	orr		r0, r1
	strb	r0, [r2, #0x1]
	ldr		r1, _0804c018
	mov		r0, #0x0
	bl		sub_08029fcc
	ldr		r1, _0804c01c
	str		r0, [r1, #0x0]
	ldr		r1, _0804c020
	mov		r0, #0x28
	bl		sub_08029fcc
	ldr		r1, _0804c024
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0804c028
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x6
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0804c004:	.4byte 0x08102bf8
_0804c008:	.4byte 0x060000E0
_0804c00c:	.4byte 0x080927d8
_0804c010:	.4byte 0x08092898
_0804c014:	.4byte BG0Control
_0804c018:	.4byte 0x0804c885
_0804c01c:	.4byte 0x030023BC
_0804c020:	.4byte 0x0804c8b1
_0804c024:	.4byte 0x030023C0
_0804c028:	.4byte 0x00009FFF
	thumb_func_end sub_0804bea0

	thumb_func_start sub_0804c02c
sub_0804c02c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	ldr		r0, _0804c150
	mov		r9, r0
	mov		r1, #0x24
	add		r1, r9
	mov		r12, r1
	ldr		r0, _0804c154
	add		r0, r9
	ldr		r6, [r0, #0x0]
	ldr		r0, _0804c158
	ldr		r0, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x7
	add		r0, r0, r2
	ldr		r5, _0804c15c
	lsl		r0, r0, #0x10
	asr		r2, r0, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0804c060
	add		r0, #0x3f
_0804c060:
	asr		r4, r0, #0x6
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	sub		r0, r3, r4
	ldr		r1, _0804c160
	mov		r10, r1
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r1, [r0, #0x0]
	ldr		r0, _0804c164
	ldr		r3, [r0, #0x0]
	add		r0, r3, #0x0
	mul		r0, r1
	lsl		r0, r0, #0x1
	mov		r8, r0
	add		r0, r4, #0x0
	mov		r2, r10
	and		r0, r2
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mul		r0, r3
	lsl		r7, r0, #0x1
	add		r0, r6, #0x0
	add		r0, #0xba
	ldrh	r1, [r0, #0x0]
	lsr		r1, r1, #0x1
	add		r3, sp, #0x8
	add		r0, sp, #0xc
	str		r0, [sp, #0x0]
	mov		r0, r12
	add		r2, sp, #0x4
	bl		sub_0802c5a0
	add		r0, r6, #0x0
	add		r0, #0x7c
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0804c0b6
	add		r0, #0x3f
_0804c0b6:
	asr		r2, r0, #0x6
	add		r0, r2, #0x0
	mov		r3, r10
	and		r0, r3
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r6, [r0, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	sub		r0, r1, r2
	mov		r2, r10
	and		r0, r2
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r4, [r0, #0x0]
	ldr		r0, _0804c168
	add		r0, r9
	ldr		r5, [r0, #0x0]
	add		r3, r5, #0x0
	mul		r3, r4
	lsr		r0, r3, #0x1f
	add		r3, r3, r0
	asr		r3, r3, #0x1
	ldr		r0, _0804c16c
	add		r0, r9
	ldr		r2, [r0, #0x0]
	add		r0, r2, #0x0
	mul		r0, r6
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r3, r3, r0
	neg		r2, r2
	add		r1, r2, #0x0
	mul		r1, r4
	lsr		r0, r1, #0x1f
	add		r1, r1, r0
	asr		r1, r1, #0x1
	add		r0, r5, #0x0
	mul		r0, r6
	lsr		r2, r0, #0x1f
	add		r0, r0, r2
	asr		r0, r0, #0x1
	add		r1, r1, r0
	ldr		r2, [sp, #0x4]
	add		r3, r2, r3
	add		r8, r3
	ldr		r0, [sp, #0x8]
	add		r1, r0, r1
	add		r7, r7, r1
	mov		r3, r8
	sub		r2, r2, r3
	sub		r1, r0, r7
	cmp		r2, #0x0
	bne		_0804c128
	cmp		r1, #0x0
	beq		_0804c18a
_0804c128:
	mov		r6, #0x80
	lsl		r6, r6, #0x3
	ldr		r5, _0804c170
	mov		r4, r10
	ldr		r3, _0804c174
_0804c132:
	add		r0, r2, r6
	cmp		r0, r5
	bhi		_0804c140
	cmp		r1, r4
	bgt		_0804c140
	cmp		r1, r3
	bge		_0804c178
_0804c140:
	lsr		r0, r2, #0x1f
	add		r0, r2, r0
	asr		r2, r0, #0x1
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r1, r0, #0x1
	b		_0804c132

.incbin "base.gba", 0x4C14E, 0x2

_0804c150:	.4byte RunGameLogic_CallBack
_0804c154:	.4byte 0x00000838
_0804c158:	.4byte 0x0203EF3C
_0804c15c:	.4byte 0x08101068
_0804c160:	.4byte 0x000003FF
_0804c164:	.4byte 0x0203EF40
_0804c168:	.4byte 0x00000BF8
_0804c16c:	.4byte 0x00000BFC
_0804c170:	.4byte 0x000007FF
_0804c174:	.4byte 0xFFFFFC00

_0804c178:
	lsl		r0, r2, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_08028738
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	b		_0804c18c
_0804c18a:
	mov		r4, #0x0
_0804c18c:
	ldr		r0, _0804c1b0
	mov		r1, r8
	add		r2, r7, #0x0
	bl		sub_0802a9e8
	ldr		r0, _0804c1b0
	add		r1, r4, #0x0
	bl		sub_0802a9cc
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4C1AE, 0x2

_0804c1b0:	.4byte 0x030039E8
	thumb_func_end sub_0804c02c

	thumb_func_start sub_0804c1b4
sub_0804c1b4:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	ldr		r5, [r7, #0x68]
	add		r5, #0x1
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	cmp		r5, r1
	bgt		_0804c22c
	ldr		r6, _0804c214
	ldr		r2, _0804c218
	lsl		r0, r5, #0x17
	asr		r4, r0, #0x10
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_0804c1d4
	add		r0, #0x3f
_0804c1d4:
	asr		r0, r0, #0x6
	sub		r0, r1, r0
	ldr		r1, _0804c21c
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r3, [r0, #0x0]
	ldr		r0, _0804c220
	ldr		r2, [r0, #0x0]
	neg		r1, r2
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	sub		r3, r0, r3
	add		r0, r1, #0x0
	mul		r0, r3
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x10
	add		r2, r2, r0
	str		r2, [r6, #0x0]
	ldr		r6, _0804c224
	ldr		r0, _0804c228
	ldr		r2, [r0, #0x0]
	neg		r0, r2
	mul		r0, r3
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x10
	add		r2, r2, r0
	str		r2, [r6, #0x0]
	mov		r0, #0x0
	b		_0804c22e

_0804c214:	.4byte 0x0203EF40
_0804c218:	.4byte 0x08101068
_0804c21c:	.4byte 0x000003FF
_0804c220:	.4byte 0x0203EF38
_0804c224:	.4byte 0x0203EF3C
_0804c228:	.4byte 0x0203EF34

_0804c22c:
	mov		r0, #0x1
_0804c22e:
	str		r5, [r7, #0x68]
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x4C236, 0x2
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x8
	ldr		r0, _0804c338
	ldrb	r7, [r0, #0xf]
	cmp		r7, #0xa
	ble		_0804c246
	b		_0804c34c
_0804c246:
	cmp		r7, #0x7
	bgt		_0804c280
	ldr		r4, _0804c33c
	str		r4, [sp, #0x0]
	mov		r2, #0xa
	sub		r2, r2, r7
	mov		r0, #0x1
	mov		r1, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r5, _0804c340
	mov		r0, sp
	add		r2, r5, #0x0
	bl		_CallHardwareSetCpuFast
	str		r4, [sp, #0x4]
	add		r4, sp, #0x4
	add		r2, r7, #0x0
	add		r2, #0xa
	mov		r0, #0x1
	mov		r1, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		_CallHardwareSetCpuFast
_0804c280:
	sub		r0, r7, #0x1
	cmp		r0, #0x7
	bhi		_0804c2bc
	ldr		r6, _0804c344
	str		r6, [sp, #0x4]
	add		r4, sp, #0x4
	mov		r2, #0xb
	sub		r2, r2, r7
	mov		r0, #0x1
	mov		r1, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r5, _0804c340
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		_CallHardwareSetCpuFast
	str		r6, [sp, #0x0]
	add		r2, r7, #0x0
	add		r2, #0x9
	mov		r0, #0x1
	mov		r1, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	mov		r0, sp
	add		r2, r5, #0x0
	bl		_CallHardwareSetCpuFast
_0804c2bc:
	sub		r0, r7, #0x2
	cmp		r0, #0x7
	bhi		_0804c2f8
	ldr		r6, _0804c348
	str		r6, [sp, #0x4]
	add		r4, sp, #0x4
	mov		r2, #0xc
	sub		r2, r2, r7
	mov		r0, #0x1
	mov		r1, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r5, _0804c340
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		_CallHardwareSetCpuFast
	str		r6, [sp, #0x0]
	add		r2, r7, #0x0
	add		r2, #0x8
	mov		r0, #0x1
	mov		r1, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	mov		r0, sp
	add		r2, r5, #0x0
	bl		_CallHardwareSetCpuFast
_0804c2f8:
	cmp		r7, #0x2
	ble		_0804c330
	mov		r6, #0x0
	str		r6, [sp, #0x4]
	add		r4, sp, #0x4
	mov		r2, #0xd
	sub		r2, r2, r7
	mov		r0, #0x1
	mov		r1, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r5, _0804c340
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		_CallHardwareSetCpuFast
	str		r6, [sp, #0x0]
	add		r2, r7, #0x7
	mov		r0, #0x1
	mov		r1, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	mov		r0, sp
	add		r2, r5, #0x0
	bl		_CallHardwareSetCpuFast
_0804c330:
	mov		r0, #0x2
	bl		sub_080281fc
	b		_0804c37e

_0804c338:	.4byte 0x030052F0
_0804c33c:	.4byte 0x91719171
_0804c340:	.4byte 0x01000010
_0804c344:	.4byte 0x91729172
_0804c348:	.4byte 0x91739173

_0804c34c:
	ldr		r1, _0804c404
	mov		r0, #0xf0
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	sub		r0, #0xb
	lsl		r1, r0, #0x1
	add		r0, r1, r0
	lsl		r0, r0, #0x3
	neg		r0, r0
	cmp		r0, #0x0
	bge		_0804c364
	add		r0, #0x7
_0804c364:
	asr		r0, r0, #0x3
	add		r0, #0x18
	lsl		r0, r0, #0x8
	add		r1, #0x90
	orr		r0, r1
	ldr		r1, _0804c408
	strh	r0, [r1, #0x0]
	add		r1, #0x4
	mov		r0, #0x3e
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x20
	strh	r0, [r1, #0x0]
_0804c37e:
	cmp		r7, #0xa
	bne		_0804c3f2
	mov		r5, #0x0
	str		r5, [sp, #0x4]
	add		r4, sp, #0x4
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r2, _0804c40c
	add		r0, r4, #0x0
	bl		_CallHardwareSetCpuFast
	str		r5, [sp, #0x0]
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x12
	bl		sub_080281b0
	add		r1, r0, #0x0
	ldr		r2, _0804c410
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
	ldr		r1, _0804c404
	mov		r0, #0xf0
	strh	r0, [r1, #0x0]
	add		r1, #0x4
	ldr		r2, _0804c414
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	add		r1, #0x4
	mov		r0, #0x3f
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x21
	strh	r0, [r1, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0804c418
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x6
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	ldr		r1, _0804c41c
	strb	r0, [r1, #0xe]
	ldrb	r2, [r1, #0xc]
	mov		r0, #0x80
	orr		r0, r2
	strb	r0, [r1, #0xc]
_0804c3f2:
	cmp		r7, #0x13
	bne		_0804c3fc
	ldr		r1, _0804c41c
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_0804c3fc:
	add		sp, #0x8
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0804c404:	.4byte Window0HorizontalDimensions
_0804c408:	.4byte Window0VerticalDimensions
_0804c40c:	.4byte 0x01000030
_0804c410:	.4byte 0x01000020
_0804c414:	.4byte 0x00001890
_0804c418:	.4byte 0x00009FFF
_0804c41c:	.4byte 0x030052F0
	thumb_func_end sub_0804c1b4

	thumb_func_start sub_0804c420
sub_0804c420:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	ldr		r0, _0804c474
	ldr		r1, _0804c478
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	bl		sub_0802d798
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x8]
	mov		r2, #0x0
	mov		r8, r2
	mov		r3, #0x0
	str		r3, [sp, #0xC]
	ldr		r0, _0804c47c
	mov		r7, r8
	strh	r7, [r0, #0x0]
	ldr		r0, _0804c480
	mov		r1, r8
	str		r1, [r0, #0x0]
	ldr		r1, _0804c484
	mov		r0, #0x0
	bl		sub_08029d24
	ldr		r2, [sp, #0x8]
	cmp		r2, #0x0
	bne		_0804c490
	ldr		r0, _0804c488
	mov		r3, r8
	str		r3, [r0, #0x0]
	ldr		r1, _0804c48c
	mov		r0, #0x0
	mov		r2, #0x0
	bl		sub_08029d24
	b		_0804c496

.incbin "base.gba", 0x4C472, 0x2

_0804c474:	.4byte RunGameLogic_CallBack
_0804c478:	.4byte 0x00000801
_0804c47c:	.4byte 0x0203EF30
_0804c480:	.4byte 0x0203EF24
_0804c484:	.4byte 0x0810a978
_0804c488:	.4byte 0x0203EF28
_0804c48c:	.4byte 0x0810a9b8

_0804c490:
	ldr		r1, _0804c4b8
	mov		r0, #0x1
	str		r0, [r1, #0x0]
_0804c496:
	ldr		r1, _0804c4bc
	mov		r0, #0x1
	str		r0, [r1, #0x0]
_0804c49c:
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	mov		r7, r8
	cmp		r7, #0xa
	bls		_0804c4ac
	b		_0804c81e
_0804c4ac:
	lsl		r0, r7, #0x2
	ldr		r1, _0804c4c0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x4C4B6, 0x2

_0804c4b8:	.4byte 0x0203EF28
_0804c4bc:	.4byte 0x0203EF2C
_0804c4c0:	.4byte 0x0804c4c4
_0804c4c4:	.4byte 0x0804c4f0

.incbin "base.gba", 0x4C4C8, 0x28

_0804c4f0:
	ldr		r0, _0804c508
	ldr		r1, _0804c50c
	str		r0, [r1, #0x4]
	ldr		r0, _0804c510
	str		r0, [r1, #0x0]
	ldr		r0, _0804c514
	str		r0, [r1, #0x8]
	mov		r0, #0x3
	strb	r0, [r1, #0xe]
	bl		sub_0802a130
	b		_0804c7fa

_0804c508:	.4byte 0x0804ca3d
_0804c50c:	.4byte 0x030052F0
_0804c510:	.4byte 0x0804c239
_0804c514:	.4byte 0x0804ca8d

.incbin "base.gba", 0x4C518, 0x14
	thumb_func_end sub_0804c420


.incbin "base.gba", 0x4C52C, 0x138

_0804c664:

.incbin "base.gba", 0x4C664, 0x196

_0804c7fa:

.incbin "base.gba", 0x4C7FA, 0x24

_0804c81e:

.incbin "base.gba", 0x4C81E, 0x42
_0804c860:

.incbin "base.gba", 0x4C860, 0x18
_0804c878:	.4byte 0x0203EF2C
_0804c87c:	.4byte RunGameLogic_CallBack
_0804c880:	.4byte 0x030031C4

.incbin "base.gba", 0x4C884, 0xE

_0804c892:

.incbin "base.gba", 0x4C892, 0xC
_0804c89e:

.incbin "base.gba", 0x4C89E, 0xA
_0804c8a8:	.4byte 0x0203EF30
_0804c8ac:	.4byte BG0X_Offset

.incbin "base.gba", 0x4C8B0, 0xE

_0804c8be:

.incbin "base.gba", 0x4C8BE, 0xC
_0804c8ca:

.incbin "base.gba", 0x4C8CA, 0x12
_0804c8dc:	.4byte 0x0203EF30
_0804c8e0:	.4byte BG0X_Offset
	thumb_func_start sub_0804c8e4
sub_0804c8e4:
	push	{ r4, r5, lr }
	ldr		r3, _0804c924
	mov		r1, #0x12
	ldr		r2, _0804c928
	add		r0, r3, r2
	str		r1, [r0, #0x0]
	ldr		r2, _0804c92c
	ldr		r1, _0804c930
	mov		r0, #0xee
	lsl		r0, r0, #0x7
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	ldr		r4, _0804c934
	ldr		r5, _0804c938
	mov		r2, #0xd0
	str		r2, [r5, #0x0]
	str		r2, [r4, #0x0]
	ldr		r0, _0804c93c
	add		r3, r3, r0
	ldr		r0, [r3, #0x0]
	add		r0, #0xba
	ldrh	r1, [r0, #0x0]
	lsr		r1, r1, #0x1
	mov		r0, #0x7
	sub		r0, r0, r1
	lsl		r0, r0, #0x4
	sub		r2, r2, r0
	str		r2, [r4, #0x0]
	str		r2, [r5, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0804c924:	.4byte RunGameLogic_CallBack
_0804c928:	.4byte 0x00000C08
_0804c92c:	.4byte 0x0203EF34
_0804c930:	.4byte 0x0203EF3C
_0804c934:	.4byte 0x0203EF38
_0804c938:	.4byte 0x0203EF40
_0804c93c:	.4byte 0x00000838

.incbin "base.gba", 0x4C940, 0xFC
	push	{ lr }
	ldr		r2, _0804ca7c
	ldrb	r1, [r2, #0x1]
	mov		r0, #0x20
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x6
	orr		r0, r1
	strb	r0, [r2, #0x1]
	mov		r0, #0x0
	bl		sub_08028130
	mov		r2, #0x9f
	lsl		r2, r2, #0x1
	add		r1, r0, r2
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r0, _0804ca80
	ldr		r1, _0804ca84
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0804ca88
	and		r0, r1
	strh	r0, [r2, #0x0]
	pop		{ r0 }
	bx		r0

_0804ca7c:	.4byte BG0Control
_0804ca80:	.4byte 0x0810a9d0
_0804ca84:	.4byte 0x06002E00
_0804ca88:	.4byte 0x00009FFF
	push	{ r4, r5, lr }
	mov		r2, #0x80
	lsl		r2, r2, #0x13
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0804cac0
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r1, _0804cac4
	mov		r0, #0xf0
	strh	r0, [r1, #0x0]
	add		r1, #0x4
	mov		r0, #0xa0
	strh	r0, [r1, #0x0]
	ldr		r4, _0804cac8
	add		r4, #0x24
	mov		r0, #0x0
	bl		sub_08028130
	add		r5, r0, #0x0
	add		r0, r4, #0x0
	bl		sub_0802c844
	strh	r0, [r5, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0804cac0:	.4byte 0x00009FFF
_0804cac4:	.4byte Window0HorizontalDimensions
_0804cac8:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_0804c8e4

	thumb_func_start sub_0804cacc
sub_0804cacc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080290c0
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	mov		r2, #0x0
	strh	r0, [r4, #0x10]
	mov		r0, #0x8
	strb	r0, [r4, #0xe]
	strb	r0, [r4, #0xd]
	strb	r0, [r4, #0xc]
	mov		r0, #0x1
	strh	r0, [r4, #0x34]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	str		r2, [r4, #0x5c]
	ldrh	r1, [r4, #0x34]
	ldr		r0, _0804cb0c
	and		r0, r1
	strh	r0, [r4, #0x34]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4CB0A, 0x2

_0804cb0c:	.4byte 0x0000FFFD
	thumb_func_end sub_0804cacc

	thumb_func_start sub_0804cb10
sub_0804cb10:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	mov		r8, r6
	ldr		r1, _0804cb38
	add		r0, r6, r1
	ldrb	r7, [r0, #0x0]
	mov		r4, #0x0
	ldr		r2, _0804cb3c
	add		r0, r6, r2
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x94
	ldr		r0, [r0, #0x0]
	mov		r5, #0x0
	cmp		r0, #0x0
	beq		_0804cb52
	add		r5, r1, r0
	b		_0804cb52

_0804cb38:	.4byte 0x000007DD
_0804cb3c:	.4byte 0x00000574

_0804cb40:
	ldrb	r1, [r5, #0x0]
	add		r0, r7, #0x0
	bl		sub_0804d78c
	ldr		r1, _0804cb84
	cmp		r0, r1
	bne		_0804cb50
	add		r4, #0x1
_0804cb50:
	add		r5, #0x4
_0804cb52:
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0804cb40
	ldr		r1, _0804cb88
	add		r0, r6, r1
	mov		r2, #0xdc
	lsl		r2, r2, #0x3
	add		r1, r6, r2
	add		r2, r4, #0x0
	bl		sub_08049108
	cmp		r4, #0x0
	ble		_0804cbda
	ldr		r0, _0804cb8c
	add		r0, r8
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x94
	ldr		r0, [r0, #0x0]
	mov		r5, #0x0
	cmp		r0, #0x0
	beq		_0804cbd4
	add		r5, r1, r0
	b		_0804cbd4

.incbin "base.gba", 0x4CB82, 0x2

_0804cb84:	.4byte 0xffff0000
_0804cb88:	.4byte 0x000006FC
_0804cb8c:	.4byte 0x00000574

_0804cb90:
	ldrb	r1, [r5, #0x0]
	add		r0, r7, #0x0
	bl		sub_0804d78c
	ldr		r1, _0804cba4
	cmp		r0, r1
	beq		_0804cba8
	add		r5, #0x4
	b		_0804cbd4

.incbin "base.gba", 0x4CBA2, 0x2

_0804cba4:	.4byte 0xffff0000

_0804cba8:
	add		r5, #0x1
	ldr		r1, _0804cbe4
	add		r0, r6, r1
	bl		sub_08049164
	add		r4, r0, #0x0
	bl		sub_0803d254
	ldrb	r0, [r5, #0x0]
	lsl		r0, r0, #0x13
	add		r5, #0x1
	str		r0, [r4, #0x0]
	ldrb	r0, [r5, #0x0]
	lsl		r0, r0, #0x13
	add		r5, #0x1
	str		r0, [r4, #0x4]
	mov		r0, #0x0
	str		r0, [r4, #0x8]
	ldrb	r0, [r5, #0x0]
	add		r4, #0x36
	strb	r0, [r4, #0x0]
	add		r5, #0x1
_0804cbd4:
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0804cb90
_0804cbda:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0804cbe4:	.4byte 0x000006FC
	thumb_func_end sub_0804cb10

	thumb_func_start sub_0804cbe8
sub_0804cbe8:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r7, r2, #0x0
	ldr		r1, _0804cc74
	add		r0, r6, r1
	ldr		r4, [r0, #0x0]
	mov		r2, #0x4
	ldrsh	r1, [r5, r2]
	lsl		r1, r1, #0x3
	mov		r0, #0x6
	ldrsh	r2, [r5, r0]
	lsl		r2, r2, #0x3
	add		r0, r6, #0x0
	bl		sub_0802c7a0
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	strh	r1, [r5, #0x8]
	cmp		r4, r5
	beq		_0804cc30
	mov		r2, #0x8
	ldrsh	r0, [r4, r2]
	cmp		r0, r1
	beq		_0804cc2c
_0804cc1a:
	add		r4, #0xc
	cmp		r4, r5
	beq		_0804cc30
	mov		r0, #0x8
	ldrsh	r1, [r4, r0]
	mov		r2, #0x8
	ldrsh	r0, [r5, r2]
	cmp		r1, r0
	bne		_0804cc1a
_0804cc2c:
	cmp		r4, r5
	bne		_0804cc80
_0804cc30:
	ldr		r3, [r7, #0x0]
	add		r3, #0xd0
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	strh	r3, [r5, #0xa]
	mov		r4, #0x4
	ldrsh	r1, [r5, r4]
	lsl		r1, r1, #0x3
	mov		r0, #0x6
	ldrsh	r2, [r5, r0]
	lsl		r2, r2, #0x3
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	add		r0, r6, #0x0
	bl		sub_0802c298
	bl		sub_08029f34
	mov		r2, #0x8
	ldrsh	r1, [r5, r2]
	lsl		r1, r1, #0x6
	ldr		r3, _0804cc78
	add		r1, r1, r3
	mov		r4, #0xa
	ldrsh	r2, [r5, r4]
	lsl		r2, r2, #0x6
	add		r2, r2, r3
	ldr		r3, _0804cc7c
	bl		sub_08029ee4
	ldr		r0, [r7, #0x0]
	add		r0, #0x1
	str		r0, [r7, #0x0]
	b		_0804cc9c

_0804cc74:	.4byte 0x000007CC
_0804cc78:	.4byte 0x06008000
_0804cc7c:	.4byte 0x80000020

_0804cc80:
	mov		r0, #0xa
	ldrsh	r3, [r4, r0]
	strh	r3, [r5, #0xa]
	mov		r2, #0x4
	ldrsh	r1, [r5, r2]
	lsl		r1, r1, #0x3
	mov		r4, #0x6
	ldrsh	r2, [r5, r4]
	lsl		r2, r2, #0x3
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	add		r0, r6, #0x0
	bl		sub_0802c298
_0804cc9c:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4CCA2, 0x2
	thumb_func_end sub_0804cbe8

	thumb_func_start sub_0804cca4
sub_0804cca4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	str		r0, [sp, #0x4]
	mov		r0, #0x0
	mov		r8, r0
	mov		r5, #0x0
	str		r5, [sp, #0x0]
	ldr		r1, [sp, #0x4]
	ldr		r2, _0804cd50
	add		r0, r1, r2
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x8c
	ldr		r0, [r0, #0x0]
	mov		r7, #0x0
	cmp		r0, #0x0
	beq		_0804ccd0
	add		r7, r1, r0
_0804ccd0:
	cmp		r7, #0x0
	bne		_0804ccd8
	bl		sub_0804d74e
_0804ccd8:
	ldrb	r0, [r7, #0x0]
	ldr		r3, [sp, #0x4]
	ldr		r1, _0804cd54
	add		r3, r3, r1
	mov		r9, r3
	cmp		r0, #0x0
	beq		_0804cdb8
	ldr		r2, [sp, #0x4]
	ldr		r3, _0804cd58
	add		r4, r2, r3
	ldr		r6, _0804cd5c
_0804ccee:
	ldrb	r0, [r4, #0x0]
	ldrb	r1, [r7, #0x0]
	bl		sub_0804d78c
	cmp		r0, r6
	beq		_0804cdb0
	ldrb	r0, [r4, #0x0]
	ldrb	r1, [r7, #0x0]
	bl		sub_0804d78c
	ldr		r1, _0804cd60
	cmp		r0, r1
	beq		_0804cdb0
	ldrb	r0, [r4, #0x0]
	ldrb	r1, [r7, #0x0]
	bl		sub_0804d78c
	and		r0, r6
	ldr		r1, _0804cd64
	cmp		r0, r1
	beq		_0804cdb0
	mov		r0, #0x1
	add		r8, r0
	ldrb	r0, [r4, #0x0]
	ldrb	r1, [r7, #0x0]
	bl		sub_0804d78c
	add		r1, r0, #0x0
	and		r1, r6
	mov		r0, #0xa0
	lsl		r0, r0, #0xc
	cmp		r1, r0
	beq		_0804cdae
	cmp		r1, r0
	bhi		_0804cd76
	mov		r0, #0xc0
	lsl		r0, r0, #0xb
	cmp		r1, r0
	beq		_0804cdae
	cmp		r1, r0
	bhi		_0804cd68
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	cmp		r1, r0
	beq		_0804cdae
	mov		r0, #0xa0
	lsl		r0, r0, #0xb
	b		_0804cda0

.incbin "base.gba", 0x4CD4E, 0x2

_0804cd50:	.4byte 0x00000574
_0804cd54:	.4byte 0x000007CC
_0804cd58:	.4byte 0x000007DD
_0804cd5c:	.4byte 0xffff0000
_0804cd60:	.4byte 0xFFF80000
_0804cd64:	.4byte 0xFFF00000

_0804cd68:
	mov		r0, #0x80
	lsl		r0, r0, #0xc
	cmp		r1, r0
	beq		_0804cdae
	mov		r0, #0x90
	lsl		r0, r0, #0xc
	b		_0804cda0
_0804cd76:
	mov		r0, #0x86
	lsl		r0, r0, #0x10
	cmp		r1, r0
	beq		_0804cdae
	cmp		r1, r0
	bhi		_0804cd90
	mov		r0, #0xc0
	lsl		r0, r0, #0xc
	cmp		r1, r0
	beq		_0804cdae
	mov		r0, #0xe0
	lsl		r0, r0, #0xc
	b		_0804cda0
_0804cd90:
	mov		r0, #0x96
	lsl		r0, r0, #0x10
	cmp		r1, r0
	beq		_0804cdae
	cmp		r1, r0
	bhi		_0804cda6
	mov		r0, #0x95
	lsl		r0, r0, #0x10
_0804cda0:
	cmp		r1, r0
	beq		_0804cdae
	b		_0804cdb0
_0804cda6:
	mov		r0, #0x98
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804cdb0
_0804cdae:
	add		r5, #0x1
_0804cdb0:
	add		r7, #0x4
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x0
	bne		_0804ccee
_0804cdb8:
	cmp		r5, #0x0
	ble		_0804cde0
	ldr		r1, [sp, #0x4]
	mov		r2, #0xdc
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	add		r1, r5, #0x1
	lsl		r2, r1, #0x1
	add		r2, r2, r1
	lsl		r2, r2, #0x2
	mov		r1, #0x1
	bl		sub_080271b8
	mov		r3, r9
	str		r0, [r3, #0x0]
	mov		r10, r0
	mov		r0, #0x0
	mov		r1, r10
	str		r0, [r1, #0x0]
	b		_0804cde8
_0804cde0:
	mov		r0, #0x0
	mov		r2, r9
	str		r0, [r2, #0x0]
	mov		r10, r0
_0804cde8:
	mov		r3, r8
	cmp		r3, #0x0
	bgt		_0804cdf2
	bl		sub_0804d73c
_0804cdf2:
	ldr		r1, [sp, #0x4]
	ldr		r2, _0804ce5c
	add		r0, r1, r2
	mov		r3, #0xdc
	lsl		r3, r3, #0x3
	add		r1, r1, r3
	mov		r2, r8
	bl		sub_080491dc
	ldr		r1, [sp, #0x4]
	ldr		r2, _0804ce60
	add		r0, r1, r2
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x8c
	ldr		r0, [r0, #0x0]
	mov		r7, #0x0
	cmp		r0, #0x0
	beq		_0804ce1a
	add		r7, r1, r0
_0804ce1a:
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x0
	bne		_0804ce24
	bl		sub_0804d74e
_0804ce24:
	mov		r3, #0xe0
	mov		r8, r3
	ldr		r0, _0804ce64
	mov		r9, r0
	thumb_func_end sub_0804cca4

	thumb_func_start sub_0804ce2c
sub_0804ce2c:
	ldr		r1, [sp, #0x4]
	ldr		r2, _0804ce68
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r7, #0x0]
	add		r7, #0x1
	bl		sub_0804d78c
	add		r6, r0, #0x0
	ldr		r1, _0804ce6c
	cmp		r6, r1
	beq		_0804ce54
	ldr		r0, _0804ce70
	cmp		r6, r0
	beq		_0804ce54
	add		r4, r6, #0x0
	and		r4, r1
	ldr		r0, _0804ce74
	cmp		r4, r0
	bne		_0804ce78
_0804ce54:
	add		r7, #0x3
	bl		sub_0804d72c
		
	.2byte	0x0
	
_0804ce5c:
	lsl		r4, r5, #0x1b
		
	.2byte	0x0
	
_0804ce60:
	lsl		r4, r6, #0x15
		
	.2byte	0x0
	
_0804ce64:
	asr		r1, r0, #0x20
		
	.2byte	0x0
	
_0804ce68:
	lsl		r5, r3, #0x1f
		
	.2byte	0x0
	
_0804ce6c:
		
	.2byte	0x0
	

.incbin "base.gba", 0x4CE6E, 0x2

_0804ce70:	.4byte 0xFFF80000
_0804ce74:	.4byte 0xFFF00000

_0804ce78:
	ldr		r3, [sp, #0x4]
	ldr		r1, _0804ceb8
	add		r0, r3, r1
	bl		sub_08049214
	add		r5, r0, #0x0
	bl		sub_0804cacc
	str		r6, [r5, #0x50]
	ldrb	r0, [r7, #0x0]
	lsl		r0, r0, #0x13
	mov		r1, #0x80
	lsl		r1, r1, #0xb
	add		r0, r0, r1
	str		r0, [r5, #0x0]
	mov		r0, #0xa0
	lsl		r0, r0, #0xc
	cmp		r4, r0
	beq		_0804cf02
	cmp		r4, r0
	bhi		_0804ceca
	mov		r0, #0xc0
	lsl		r0, r0, #0xb
	cmp		r4, r0
	beq		_0804cf02
	cmp		r4, r0
	bhi		_0804cebc
	cmp		r4, r1
	beq		_0804cf02
	mov		r0, #0xa0
	lsl		r0, r0, #0xb
	b		_0804cef4

_0804ceb8:	.4byte 0x000006EC

_0804cebc:
	mov		r0, #0x80
	lsl		r0, r0, #0xc
	cmp		r4, r0
	beq		_0804cf02
	mov		r0, #0x90
	lsl		r0, r0, #0xc
	b		_0804cef4
_0804ceca:
	mov		r0, #0x86
	lsl		r0, r0, #0x10
	cmp		r4, r0
	beq		_0804cf02
	cmp		r4, r0
	bhi		_0804cee4
	mov		r0, #0xc0
	lsl		r0, r0, #0xc
	cmp		r4, r0
	beq		_0804cf02
	mov		r0, #0xe0
	lsl		r0, r0, #0xc
	b		_0804cef4
_0804cee4:
	mov		r0, #0x96
	lsl		r0, r0, #0x10
	cmp		r4, r0
	beq		_0804cf02
	cmp		r4, r0
	bhi		_0804cefa
	mov		r0, #0x95
	lsl		r0, r0, #0x10
_0804cef4:
	cmp		r4, r0
	beq		_0804cf02
	b		_0804cf08
_0804cefa:
	mov		r0, #0x98
	lsl		r0, r0, #0x10
	cmp		r4, r0
	bne		_0804cf08
_0804cf02:
	ldrb	r0, [r7, #0x0]
	mov		r2, r10
	strh	r0, [r2, #0x4]
_0804cf08:
	add		r7, #0x1
	ldrb	r0, [r7, #0x0]
	lsl		r0, r0, #0x13
	mov		r2, #0x80
	lsl		r2, r2, #0xb
	add		r0, r0, r2
	str		r0, [r5, #0x4]
	ldr		r1, _0804cf3c
	and		r1, r6
	mov		r0, #0xa0
	lsl		r0, r0, #0xc
	cmp		r1, r0
	beq		_0804cf86
	cmp		r1, r0
	bhi		_0804cf4e
	mov		r0, #0xc0
	lsl		r0, r0, #0xb
	cmp		r1, r0
	beq		_0804cf86
	cmp		r1, r0
	bhi		_0804cf40
	cmp		r1, r2
	beq		_0804cf86
	mov		r0, #0xa0
	lsl		r0, r0, #0xb
	b		_0804cf78

_0804cf3c:	.4byte 0xffff0000

_0804cf40:
	mov		r0, #0x80
	lsl		r0, r0, #0xc
	cmp		r1, r0
	beq		_0804cf86
	mov		r0, #0x90
	lsl		r0, r0, #0xc
	b		_0804cf78
_0804cf4e:
	mov		r0, #0x86
	lsl		r0, r0, #0x10
	cmp		r1, r0
	beq		_0804cf86
	cmp		r1, r0
	bhi		_0804cf68
	mov		r0, #0xc0
	lsl		r0, r0, #0xc
	cmp		r1, r0
	beq		_0804cf86
	mov		r0, #0xe0
	lsl		r0, r0, #0xc
	b		_0804cf78
_0804cf68:
	mov		r0, #0x96
	lsl		r0, r0, #0x10
	cmp		r1, r0
	beq		_0804cf86
	cmp		r1, r0
	bhi		_0804cf7e
	mov		r0, #0x95
	lsl		r0, r0, #0x10
_0804cf78:
	cmp		r1, r0
	beq		_0804cf86
	b		_0804cf8c
_0804cf7e:
	mov		r0, #0x98
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804cf8c
_0804cf86:
	ldrb	r0, [r7, #0x0]
	mov		r3, r10
	strh	r0, [r3, #0x6]
_0804cf8c:
	add		r7, #0x1
	mov		r0, #0x0
	str		r0, [r5, #0x8]
	ldrb	r0, [r7, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	ldrb	r1, [r7, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x54
	strb	r1, [r0, #0x0]
	add		r7, #0x1
	ldr		r1, _0804cfd0
	and		r1, r6
	mov		r0, #0xa0
	lsl		r0, r0, #0xc
	cmp		r1, r0
	beq		_0804d01a
	cmp		r1, r0
	bhi		_0804cfe2
	mov		r0, #0xc0
	lsl		r0, r0, #0xb
	cmp		r1, r0
	beq		_0804d01a
	cmp		r1, r0
	bhi		_0804cfd4
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	cmp		r1, r0
	beq		_0804d01a
	mov		r0, #0xa0
	lsl		r0, r0, #0xb
	b		_0804d00c

.incbin "base.gba", 0x4CFCE, 0x2

_0804cfd0:	.4byte 0xffff0000

_0804cfd4:
	mov		r0, #0x80
	lsl		r0, r0, #0xc
	cmp		r1, r0
	beq		_0804d01a
	mov		r0, #0x90
	lsl		r0, r0, #0xc
	b		_0804d00c
_0804cfe2:
	mov		r0, #0x86
	lsl		r0, r0, #0x10
	cmp		r1, r0
	beq		_0804d01a
	cmp		r1, r0
	bhi		_0804cffc
	mov		r0, #0xc0
	lsl		r0, r0, #0xc
	cmp		r1, r0
	beq		_0804d01a
	mov		r0, #0xe0
	lsl		r0, r0, #0xc
	b		_0804d00c
_0804cffc:
	mov		r0, #0x96
	lsl		r0, r0, #0x10
	cmp		r1, r0
	beq		_0804d01a
	cmp		r1, r0
	bhi		_0804d012
	mov		r0, #0x95
	lsl		r0, r0, #0x10
_0804d00c:
	cmp		r1, r0
	beq		_0804d01a
	b		_0804d032
_0804d012:
	mov		r0, #0x98
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d032
_0804d01a:
	mov		r0, r10
	str		r5, [r0, #0x0]
	ldr		r0, [sp, #0x4]
	mov		r1, r10
	mov		r2, sp
	bl		sub_0804cbe8
	mov		r1, #0xc
	add		r10, r1
	mov		r0, #0x0
	mov		r2, r10
	str		r0, [r2, #0x0]
_0804d032:
	ldr		r1, _0804d088
	and		r1, r6
	mov		r0, #0x89
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d040
	b		_0804d658
_0804d040:
	cmp		r1, r0
	bls		_0804d046
	b		_0804d158
_0804d046:
	mov		r0, #0xc0
	lsl		r0, r0, #0xc
	cmp		r1, r0
	bne		_0804d050
	b		_0804d274
_0804d050:
	cmp		r1, r0
	bhi		_0804d0d0
	mov		r0, #0xc0
	lsl		r0, r0, #0xb
	cmp		r1, r0
	bne		_0804d05e
	b		_0804d274
_0804d05e:
	cmp		r1, r0
	bhi		_0804d09c
	mov		r0, #0xc0
	lsl		r0, r0, #0xa
	cmp		r1, r0
	bne		_0804d06c
	b		_0804d5e0
_0804d06c:
	cmp		r1, r0
	bhi		_0804d08c
	mov		r0, #0x80
	lsl		r0, r0, #0x9
	cmp		r1, r0
	bne		_0804d07a
	b		_0804d5b0
_0804d07a:
	mov		r0, #0x80
	lsl		r0, r0, #0xa
	cmp		r1, r0
	bne		_0804d084
	b		_0804d5d8
_0804d084:
	b		_0804d728

.incbin "base.gba", 0x4D086, 0x2

_0804d088:	.4byte 0xffff0000

_0804d08c:
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	cmp		r1, r0
	bne		_0804d096
	b		_0804d274
_0804d096:
	mov		r0, #0xa0
	lsl		r0, r0, #0xb
	b		_0804d1de
_0804d09c:
	mov		r0, #0x90
	lsl		r0, r0, #0xc
	cmp		r1, r0
	bne		_0804d0a6
	b		_0804d274
_0804d0a6:
	cmp		r1, r0
	bhi		_0804d0ba
	mov		r0, #0xe0
	lsl		r0, r0, #0xb
	cmp		r1, r0
	bne		_0804d0b4
	b		_0804d600
_0804d0b4:
	mov		r0, #0x80
	lsl		r0, r0, #0xc
	b		_0804d1de
_0804d0ba:
	mov		r0, #0xa0
	lsl		r0, r0, #0xc
	cmp		r1, r0
	bne		_0804d0c4
	b		_0804d274
_0804d0c4:
	mov		r0, #0xb0
	lsl		r0, r0, #0xc
	cmp		r1, r0
	bne		_0804d0ce
	b		_0804d5e8
_0804d0ce:
	b		_0804d728
_0804d0d0:
	mov		r0, #0x82
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d0da
	b		_0804d62c
_0804d0da:
	cmp		r1, r0
	bhi		_0804d114
	mov		r0, #0x80
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d0e8
	b		_0804d608
_0804d0e8:
	cmp		r1, r0
	bhi		_0804d0fc
	mov		r0, #0xd0
	lsl		r0, r0, #0xc
	cmp		r1, r0
	bne		_0804d0f6
	b		_0804d6b8
_0804d0f6:
	mov		r0, #0xe0
	lsl		r0, r0, #0xc
	b		_0804d1de
_0804d0fc:
	ldr		r0, _0804d110
	cmp		r1, r0
	bne		_0804d104
	b		_0804d612
_0804d104:
	mov		r0, #0x81
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d10e
	b		_0804d624
_0804d10e:
	b		_0804d728

_0804d110:	.4byte 0x00808000

_0804d114:
	mov		r0, #0x85
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d11e
	b		_0804d648
_0804d11e:
	cmp		r1, r0
	bhi		_0804d138
	mov		r0, #0x83
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d12c
	b		_0804d636
_0804d12c:
	mov		r0, #0x84
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d136
	b		_0804d63e
_0804d136:
	b		_0804d728
_0804d138:
	mov		r0, #0x87
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d142
	b		_0804d6a8
_0804d142:
	cmp		r1, r0
	bhi		_0804d14c
	mov		r0, #0x86
	lsl		r0, r0, #0x10
	b		_0804d1de
_0804d14c:
	mov		r0, #0x88
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d156
	b		_0804d650
_0804d156:
	b		_0804d728
_0804d158:
	mov		r0, #0x97
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d162
	b		_0804d6c8
_0804d162:
	cmp		r1, r0
	bhi		_0804d1e4
	mov		r0, #0x90
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d170
	b		_0804d690
_0804d170:
	cmp		r1, r0
	bhi		_0804d1ae
	mov		r0, #0x8d
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d17e
	b		_0804d678
_0804d17e:
	cmp		r1, r0
	bhi		_0804d198
	mov		r0, #0x8a
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d18c
	b		_0804d660
_0804d18c:
	mov		r0, #0x8c
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d196
	b		_0804d670
_0804d196:
	b		_0804d728
_0804d198:
	mov		r0, #0x8e
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d1a2
	b		_0804d680
_0804d1a2:
	mov		r0, #0x8f
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d1ac
	b		_0804d688
_0804d1ac:
	b		_0804d728
_0804d1ae:
	mov		r0, #0x94
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d1b8
	b		_0804d6c0
_0804d1b8:
	cmp		r1, r0
	bhi		_0804d1d2
	mov		r0, #0x91
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d1c6
	b		_0804d698
_0804d1c6:
	mov		r0, #0x92
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d1d0
	b		_0804d6a0
_0804d1d0:
	b		_0804d728
_0804d1d2:
	mov		r0, #0x95
	lsl		r0, r0, #0x10
	cmp		r1, r0
	beq		_0804d274
	mov		r0, #0x96
	lsl		r0, r0, #0x10
_0804d1de:
	cmp		r1, r0
	beq		_0804d274
	b		_0804d728
_0804d1e4:
	mov		r0, #0x9d
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d1ee
	b		_0804d6f0
_0804d1ee:
	cmp		r1, r0
	bhi		_0804d22a
	mov		r0, #0x9a
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d1fc
	b		_0804d6d8
_0804d1fc:
	cmp		r1, r0
	bhi		_0804d214
	mov		r0, #0x98
	lsl		r0, r0, #0x10
	cmp		r1, r0
	beq		_0804d274
	mov		r0, #0x99
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d212
	b		_0804d6d0
_0804d212:
	b		_0804d728
_0804d214:
	mov		r0, #0x9b
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d21e
	b		_0804d6e0
_0804d21e:
	mov		r0, #0x9c
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d228
	b		_0804d6e8
_0804d228:
	b		_0804d728
_0804d22a:
	mov		r0, #0xa0
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d234
	b		_0804d708
_0804d234:
	cmp		r1, r0
	bhi		_0804d24e
	mov		r0, #0x9e
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d242
	b		_0804d6f8
_0804d242:
	mov		r0, #0x9f
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d24c
	b		_0804d700
_0804d24c:
	b		_0804d728
_0804d24e:
	mov		r0, #0xa2
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d258
	b		_0804d718
_0804d258:
	cmp		r1, r0
	bhi		_0804d268
	mov		r0, #0xa1
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d266
	b		_0804d710
_0804d266:
	b		_0804d728
_0804d268:
	mov		r0, #0xa3
	lsl		r0, r0, #0x10
	cmp		r1, r0
	bne		_0804d272
	b		_0804d720
_0804d272:
	b		_0804d728
_0804d274:
	ldr		r0, _0804d2b4
	cmp		r6, r0
	bne		_0804d27c
	b		_0804d50c
_0804d27c:
	cmp		r6, r0
	bgt		_0804d328
	mov		r0, #0x90
	lsl		r0, r0, #0xc
	cmp		r6, r0
	bne		_0804d28a
	b		_0804d554
_0804d28a:
	cmp		r6, r0
	bgt		_0804d2e4
	ldr		r0, _0804d2b8
	cmp		r6, r0
	bne		_0804d296
	b		_0804d4d4
_0804d296:
	cmp		r6, r0
	bgt		_0804d2bc
	sub		r0, #0x2
	cmp		r6, r0
	bne		_0804d2a2
	b		_0804d4c4
_0804d2a2:
	cmp		r6, r0
	ble		_0804d2a8
	b		_0804d4cc
_0804d2a8:
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	cmp		r6, r0
	bne		_0804d2b2
	b		_0804d590
_0804d2b2:
	b		_0804d59c

_0804d2b4:	.4byte 0x000A0007
_0804d2b8:	.4byte 0x00050002

_0804d2bc:
	ldr		r0, _0804d2d4
	cmp		r6, r0
	bne		_0804d2c4
	b		_0804d52c
_0804d2c4:
	cmp		r6, r0
	bgt		_0804d2d8
	sub		r0, #0x1
	cmp		r6, r0
	bne		_0804d2d0
	b		_0804d514
_0804d2d0:
	b		_0804d59c

.incbin "base.gba", 0x4D2D2, 0x2

_0804d2d4:	.4byte 0x00060001

_0804d2d8:
	mov		r0, #0x80
	lsl		r0, r0, #0xc
	cmp		r6, r0
	bne		_0804d2e2
	b		_0804d544
_0804d2e2:
	b		_0804d59c
_0804d2e4:
	ldr		r0, _0804d308
	cmp		r6, r0
	bne		_0804d2ec
	b		_0804d4f4
_0804d2ec:
	cmp		r6, r0
	bgt		_0804d30c
	sub		r0, #0x2
	cmp		r6, r0
	bne		_0804d2f8
	b		_0804d4e4
_0804d2f8:
	cmp		r6, r0
	ble		_0804d2fe
	b		_0804d4ec
_0804d2fe:
	sub		r0, #0x1
	cmp		r6, r0
	bne		_0804d306
	b		_0804d4dc
_0804d306:
	b		_0804d59c

_0804d308:	.4byte 0x000A0003

_0804d30c:
	ldr		r0, _0804d320
	cmp		r6, r0
	bne		_0804d314
	b		_0804d4fc
_0804d314:
	cmp		r6, r0
	ble		_0804d31a
	b		_0804d504
_0804d31a:
	ldr		r0, _0804d324
	b		_0804d5a2

.incbin "base.gba", 0x4D31E, 0x2

_0804d320:	.4byte 0x000A0005
_0804d324:	.4byte 0x0810af54

_0804d328:
	ldr		r0, _0804d354
	cmp		r6, r0
	bne		_0804d330
	b		_0804d478
_0804d330:
	cmp		r6, r0
	bgt		_0804d380
	sub		r0, #0x4
	cmp		r6, r0
	bne		_0804d33c
	b		_0804d430
_0804d33c:
	cmp		r6, r0
	bgt		_0804d358
	sub		r0, #0x2
	cmp		r6, r0
	beq		_0804d400
	cmp		r6, r0
	bgt		_0804d418
	sub		r0, #0x1
	cmp		r6, r0
	beq		_0804d3e6
	b		_0804d59c

.incbin "base.gba", 0x4D352, 0x2

_0804d354:	.4byte 0x000C0007

_0804d358:
	ldr		r0, _0804d378
	cmp		r6, r0
	beq		_0804d448
	cmp		r6, r0
	ble		_0804d364
	b		_0804d460
_0804d364:
	add		r0, r5, #0x0
	add		r0, #0x56
	mov		r3, r8
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	mov		r0, r9
	strh	r0, [r5, #0x10]
	ldr		r0, _0804d37c
	b		_0804d5a2

_0804d378:	.4byte 0x000C0005
_0804d37c:	.4byte 0x0810b114

_0804d380:
	ldr		r0, _0804d3b0
	cmp		r6, r0
	bne		_0804d388
	b		_0804d4bc
_0804d388:
	cmp		r6, r0
	bgt		_0804d3b8
	sub		r0, #0x2
	cmp		r6, r0
	bne		_0804d394
	b		_0804d48a
_0804d394:
	cmp		r6, r0
	ble		_0804d39a
	b		_0804d4a4
_0804d39a:
	add		r0, r5, #0x0
	add		r0, #0x56
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	mov		r2, r9
	strh	r2, [r5, #0x10]
	ldr		r0, _0804d3b4
	b		_0804d5a2

.incbin "base.gba", 0x4D3AE, 0x2

_0804d3b0:	.4byte 0x000C000B
_0804d3b4:	.4byte 0x0810b954

_0804d3b8:
	mov		r0, #0x86
	lsl		r0, r0, #0x10
	cmp		r6, r0
	bne		_0804d3c2
	b		_0804d57c
_0804d3c2:
	cmp		r6, r0
	bgt		_0804d3d2
	mov		r0, #0xe0
	lsl		r0, r0, #0xc
	cmp		r6, r0
	bne		_0804d3d0
	b		_0804d584
_0804d3d0:
	b		_0804d59c
_0804d3d2:
	mov		r0, #0x98
	lsl		r0, r0, #0x10
	cmp		r6, r0
	bne		_0804d3dc
	b		_0804d564
_0804d3dc:
	add		r0, #0x1
	cmp		r6, r0
	bne		_0804d3e4
	b		_0804d570
_0804d3e4:
	b		_0804d59c
_0804d3e6:
	add		r0, r5, #0x0
	add		r0, #0x56
	mov		r3, r8
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	mov		r0, r9
	strh	r0, [r5, #0x10]
	ldr		r0, _0804d3fc
	b		_0804d5a2

.incbin "base.gba", 0x4D3FA, 0x2

_0804d3fc:	.4byte 0x0810b5f4

_0804d400:
	add		r0, r5, #0x0
	add		r0, #0x56
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	mov		r2, r9
	strh	r2, [r5, #0x10]
	ldr		r0, _0804d414
	b		_0804d5a2

_0804d414:	.4byte 0x0810ad54

_0804d418:
	add		r0, r5, #0x0
	add		r0, #0x56
	mov		r3, r8
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	mov		r0, r9
	strh	r0, [r5, #0x10]
	ldr		r0, _0804d42c
	b		_0804d5a2

_0804d42c:	.4byte 0x0810b0f4

_0804d430:
	add		r0, r5, #0x0
	add		r0, #0x56
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	mov		r2, r9
	strh	r2, [r5, #0x10]
	ldr		r0, _0804d444
	b		_0804d5a2

_0804d444:	.4byte 0x0810a9f4

_0804d448:
	add		r0, r5, #0x0
	add		r0, #0x56
	mov		r3, r8
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	mov		r0, r9
	strh	r0, [r5, #0x10]
	ldr		r0, _0804d45c
	b		_0804d5a2

_0804d45c:	.4byte 0x0810ad74

_0804d460:
	add		r0, r5, #0x0
	add		r0, #0x56
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	mov		r2, r9
	strh	r2, [r5, #0x10]
	ldr		r0, _0804d474
	b		_0804d5a2

_0804d474:	.4byte 0x0810ad94

_0804d478:
	add		r0, r5, #0x0
	add		r0, #0x56
	mov		r3, r8
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	mov		r0, r9
	strh	r0, [r5, #0x10]
	b		_0804d5a0
_0804d48a:
	add		r0, r5, #0x0
	add		r0, #0x56
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	mov		r2, r9
	strh	r2, [r5, #0x10]
	ldr		r0, _0804d4a0
	b		_0804d5a2

.incbin "base.gba", 0x4D49E, 0x2

_0804d4a0:	.4byte 0x0810b9d4

_0804d4a4:
	add		r0, r5, #0x0
	add		r0, #0x56
	mov		r3, r8
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	mov		r0, r9
	strh	r0, [r5, #0x10]
	ldr		r0, _0804d4b8
	b		_0804d5a2

_0804d4b8:	.4byte 0x0810ba14

_0804d4bc:
	ldr		r0, _0804d4c0
	b		_0804d5a2

_0804d4c0:	.4byte 0x0810b054

_0804d4c4:
	ldr		r0, _0804d4c8
	b		_0804d5a2

_0804d4c8:	.4byte 0x0810ae14

_0804d4cc:
	ldr		r0, _0804d4d0
	b		_0804d5a2

_0804d4d0:	.4byte 0x0810ae34

_0804d4d4:
	ldr		r0, _0804d4d8
	b		_0804d5a2

_0804d4d8:	.4byte 0x0810ae54

_0804d4dc:
	ldr		r0, _0804d4e0
	b		_0804d5a2

_0804d4e0:	.4byte 0x0810aed4

_0804d4e4:
	ldr		r0, _0804d4e8
	b		_0804d5a2

_0804d4e8:	.4byte 0x0810aef4

_0804d4ec:
	ldr		r0, _0804d4f0
	b		_0804d5a2

_0804d4f0:	.4byte 0x0810af14

_0804d4f4:
	ldr		r0, _0804d4f8
	b		_0804d5a2

_0804d4f8:	.4byte 0x0810af34

_0804d4fc:
	ldr		r0, _0804d500
	b		_0804d5a2

_0804d500:	.4byte 0x0810af74

_0804d504:
	ldr		r0, _0804d508
	b		_0804d5a2

_0804d508:	.4byte 0x0810af94

_0804d50c:
	ldr		r0, _0804d510
	b		_0804d5a2

_0804d510:	.4byte 0x0810afb4

_0804d514:
	mov		r0, #0xb8
	add		r1, r5, #0x0
	add		r1, #0x56
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	strh	r0, [r1, #0x0]
	mov		r1, r9
	strh	r1, [r5, #0x10]
	ldr		r0, _0804d528
	b		_0804d5a2

_0804d528:	.4byte 0x0810afd4

_0804d52c:
	mov		r0, #0xb8
	add		r1, r5, #0x0
	add		r1, #0x56
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	strh	r0, [r1, #0x0]
	mov		r2, r9
	strh	r2, [r5, #0x10]
	ldr		r0, _0804d540
	b		_0804d5a2

_0804d540:	.4byte 0x0810aff4

_0804d544:
	ldrh	r0, [r5, #0x34]
	mov		r1, #0x2
	orr		r1, r0
	strh	r1, [r5, #0x34]
	ldr		r0, _0804d550
	b		_0804d5a2

_0804d550:	.4byte 0x0810b0b4

_0804d554:
	ldrh	r0, [r5, #0x34]
	mov		r1, #0x2
	orr		r1, r0
	strh	r1, [r5, #0x34]
	ldr		r0, _0804d560
	b		_0804d5a2

_0804d560:	.4byte 0x0810b0d4

_0804d564:
	mov		r3, r9
	strh	r3, [r5, #0x10]
	ldr		r0, _0804d56c
	b		_0804d5a2

_0804d56c:	.4byte 0x0810b6b4

_0804d570:
	mov		r0, r9
	strh	r0, [r5, #0x10]
	ldr		r0, _0804d578
	b		_0804d5a2

_0804d578:	.4byte 0x0810b6d4

_0804d57c:
	add		r0, r5, #0x0
	bl		sub_0804fb38
	b		sub_0804d72c
_0804d584:
	mov		r1, r9
	strh	r1, [r5, #0x10]
	ldr		r0, _0804d58c
	b		_0804d5a2

_0804d58c:	.4byte 0x0810bbd4

_0804d590:
	mov		r2, r9
	strh	r2, [r5, #0x10]
	ldr		r0, _0804d598
	b		_0804d5a2

_0804d598:	.4byte 0x0810bbb4

_0804d59c:
	mov		r3, r9
	strh	r3, [r5, #0x10]
_0804d5a0:
	ldr		r0, _0804d5ac
_0804d5a2:
	str		r0, [r5, #0x4c]
	add		r0, r5, #0x0
	bl		sub_080537fc
	b		sub_0804d72c

_0804d5ac:	.4byte 0x0810adb4

_0804d5b0:
	ldr		r0, [r5, #0x8]
	ldr		r1, _0804d5c4
	add		r0, r0, r1
	str		r0, [r5, #0x8]
	ldr		r0, _0804d5c8
	cmp		r6, r0
	bne		_0804d5d0
	ldr		r0, _0804d5cc
	b		_0804d72a

.incbin "base.gba", 0x4D5C2, 0x2

_0804d5c4:	.4byte 0xFFF80000
_0804d5c8:	.4byte 0x00010001
_0804d5cc:	.4byte 0x0810b2d4

_0804d5d0:
	ldr		r0, _0804d5d4
	b		_0804d72a

_0804d5d4:	.4byte 0x0810b2b4

_0804d5d8:
	ldr		r0, _0804d5dc
	b		_0804d72a

_0804d5dc:	.4byte 0x0810b094

_0804d5e0:
	add		r0, r5, #0x0
	bl		sub_0805243c
	b		sub_0804d72c
_0804d5e8:
	cmp		r6, r1
	bne		_0804d5f8
	mov		r2, r9
	strh	r2, [r5, #0x10]
	ldr		r0, _0804d5f4
	b		_0804d72a

_0804d5f4:	.4byte 0x0810b014

_0804d5f8:
	ldr		r0, _0804d5fc
	b		_0804d72a

_0804d5fc:	.4byte 0x0810b034

_0804d600:
	ldr		r0, _0804d604
	b		_0804d72a

_0804d604:	.4byte 0x0810b074

_0804d608:
	ldr		r1, [r5, #0x50]
	add		r0, r5, #0x0
	bl		sub_0804fce4
	b		sub_0804d72c
_0804d612:
	ldr		r1, [r5, #0x50]
	add		r0, r5, #0x0
	bl		sub_0804fce4
	ldr		r0, _0804d620
	b		_0804d72a

.incbin "base.gba", 0x4D61E, 0x2

_0804d620:	.4byte 0x0810ac14

_0804d624:
	add		r0, r5, #0x0
	bl		sub_0804d8bc
	b		sub_0804d72c
_0804d62c:
	ldr		r1, [r5, #0x50]
	add		r0, r5, #0x0
	bl		sub_0804f738
	b		sub_0804d72c
_0804d636:
	add		r0, r5, #0x0
	bl		sub_080502d0
	b		sub_0804d72c
_0804d63e:
	ldr		r1, [r5, #0x50]
	add		r0, r5, #0x0
	bl		sub_0804fd9c
	b		sub_0804d72c
_0804d648:
	ldr		r0, _0804d64c
	b		_0804d72a

_0804d64c:	.4byte 0x0810aa54

_0804d650:
	add		r0, r5, #0x0
	bl		sub_080505c8
	b		sub_0804d72c
_0804d658:
	add		r0, r5, #0x0
	bl		sub_08050364
	b		sub_0804d72c
_0804d660:
	add		r0, r5, #0x0
	bl		sub_08050a3c
	ldr		r0, _0804d66c
	b		_0804d72a

.incbin "base.gba", 0x4D66A, 0x2

_0804d66c:	.4byte 0x0810b194

_0804d670:
	ldr		r0, _0804d674
	b		_0804d72a

_0804d674:	.4byte 0x0810aa54

_0804d678:
	add		r0, r5, #0x0
	bl		sub_080508b0
	b		sub_0804d72c
_0804d680:
	add		r0, r5, #0x0
	bl		sub_08051dd0
	b		sub_0804d72c
_0804d688:
	add		r0, r5, #0x0
	bl		sub_080511d0
	b		sub_0804d72c
_0804d690:
	ldr		r0, _0804d694
	b		_0804d72a

_0804d694:	.4byte 0x0810aa54

_0804d698:
	add		r0, r5, #0x0
	bl		sub_08050114
	b		sub_0804d72c
_0804d6a0:
	add		r0, r5, #0x0
	bl		sub_080517f0
	b		sub_0804d72c
_0804d6a8:
	add		r0, r5, #0x0
	bl		sub_08050d2c
	ldr		r0, _0804d6b4
	b		_0804d72a

.incbin "base.gba", 0x4D6B2, 0x2

_0804d6b4:	.4byte 0x0810b134

_0804d6b8:
	add		r0, r5, #0x0
	bl		sub_08050c6c
	b		sub_0804d72c
_0804d6c0:
	add		r0, r5, #0x0
	bl		sub_08050f5c
	b		sub_0804d72c
_0804d6c8:
	add		r0, r5, #0x0
	bl		sub_080514cc
	b		sub_0804d72c
_0804d6d0:
	add		r0, r5, #0x0
	bl		sub_08051ab4
	b		sub_0804d72c
_0804d6d8:
	ldr		r0, _0804d6dc
	b		_0804d72a

_0804d6dc:	.4byte 0x0810b7d4

_0804d6e0:
	ldr		r0, _0804d6e4
	b		_0804d72a

_0804d6e4:	.4byte 0x0810b7f4

_0804d6e8:
	add		r0, r5, #0x0
	bl		sub_08052274
	b		sub_0804d72c
_0804d6f0:
	add		r0, r5, #0x0
	bl		sub_080522f4
	b		sub_0804d72c
_0804d6f8:
	add		r0, r5, #0x0
	bl		sub_080529c4
	b		sub_0804d72c
_0804d700:
	add		r0, r5, #0x0
	bl		sub_08052b5c
	b		sub_0804d72c
_0804d708:
	add		r0, r5, #0x0
	bl		sub_08052ca4
	b		sub_0804d72c
_0804d710:
	add		r0, r5, #0x0
	bl		sub_080530d0
	b		sub_0804d72c
_0804d718:
	add		r0, r5, #0x0
	bl		sub_080532f8
	b		sub_0804d72c
_0804d720:
	add		r0, r5, #0x0
	bl		sub_08053848
	b		sub_0804d72c
_0804d728:
	ldr		r0, _0804d738
_0804d72a:
	str		r0, [r5, #0x4c]
	thumb_func_end sub_0804ce2c

	thumb_func_start sub_0804d72c
sub_0804d72c:
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x0
	beq		_0804d736
	bl		sub_0804ce2c
_0804d736:
	b		sub_0804d74e

_0804d738:	.4byte 0x0810aa94
	thumb_func_end sub_0804d72c

	thumb_func_start sub_0804d73c
sub_0804d73c:
	ldr		r3, [sp, #0x4]
	ldr		r1, _0804d760
	add		r0, r3, r1
	mov		r2, #0xdc
	lsl		r2, r2, #0x3
	add		r1, r3, r2
	mov		r2, #0x0
	bl		sub_080491dc
	thumb_func_end sub_0804d73c

	non_word_aligned_thumb_func_start sub_0804d74e
sub_0804d74e:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4D75E, 0x2

.align 2, 0
_0804d760:	.4byte 0x000006EC
	thumb_func_end sub_0804d74e

	non_word_aligned_thumb_func_start sub_0804d764
sub_0804d764:
	push	{ r4, lr }
	ldr		r1, _0804d788
	add		r0, r0, r1
	ldr		r4, [r0, #0x8]
	cmp		r4, #0x0
	beq		_0804d782
_0804d770:
	ldr		r1, [r4, #0x5c]
	cmp		r1, #0x0
	beq		_0804d77c
	add		r0, r4, #0x0
	bl		sub_0807d7d4
_0804d77c:
	ldr		r4, [r4, #0x3c]
	cmp		r4, #0x0
	bne		_0804d770
_0804d782:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0804d788:	.4byte 0x000006EC
	thumb_func_end sub_0804d764

	thumb_func_start sub_0804d78c
sub_0804d78c:
	add		r2, r1, #0x0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	ldr		r3, _0804d7a8
	sub		r0, #0x4
	cmp		r0, #0x18
	bls		_0804d79c
	b		_0804d89c
_0804d79c:
	lsl		r0, r0, #0x2
	ldr		r1, _0804d7ac
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x4D7A6, 0x2

_0804d7a8:	.4byte 0x0810bc1c
_0804d7ac:	.4byte 0x0804d7b0
_0804d7b0:	.4byte 0x0804d814

.incbin "base.gba", 0x4D7B4, 0x60
	thumb_func_end sub_0804d78c


.incbin "base.gba", 0x4D814, 0x88

_0804d89c:

.incbin "base.gba", 0x4D89C, 0xC
_0804d8a8:	.4byte 0x0810bc14

_0804d8ac:

.incbin "base.gba", 0x4D8AC, 0x6
_0804d8b2:

.incbin "base.gba", 0x4D8B2, 0x6
_0804d8b8:	.4byte 0xFFFFFE00
	thumb_func_start sub_0804d8bc
sub_0804d8bc:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r4, r3, #0x0
	ldr		r0, _0804d8fc
	mov		r2, #0x0
	strh	r0, [r3, #0x10]
	mov		r0, #0x14
	strb	r0, [r3, #0xe]
	strb	r0, [r3, #0xd]
	strb	r0, [r3, #0xc]
	ldr		r0, _0804d900
	str		r0, [r3, #0x5c]
	ldr		r0, _0804d904
	str		r0, [r3, #0x4c]
	ldr		r0, _0804d908
	str		r0, [r3, #0x18]
	ldrh	r1, [r3, #0x34]
	mov		r0, #0x2
	orr		r0, r1
	strh	r0, [r3, #0x34]
	str		r2, [r3, #0x60]
	ldr		r0, [r3, #0x50]
	ldr		r1, _0804d90c
	add		r0, r0, r1
	cmp		r0, #0xa
	bls		_0804d8f2
	b		_0804da5c
_0804d8f2:
	lsl		r0, r0, #0x2
	ldr		r1, _0804d910
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0804d8fc:	.4byte 0x00001002
_0804d900:	.4byte 0x0804da69
_0804d904:	.4byte 0x0810aaf4
_0804d908:	.4byte 0x0804f4b1
_0804d90c:	.4byte 0xFF7EFFFF
_0804d910:	.4byte 0x0804d914
_0804d914:	.4byte 0x0804d940

.incbin "base.gba", 0x4D918, 0x28
	thumb_func_end sub_0804d8bc


.incbin "base.gba", 0x4D940, 0x11C

_0804da5c:

.incbin "base.gba", 0x4DA5C, 0x22
_0804da7e:

.incbin "base.gba", 0x4DA7E, 0xA
_0804da88:	.4byte 0x0804da8c
_0804da8c:	.4byte 0x0804db86

.incbin "base.gba", 0x4DA90, 0x30
_0804dac0:	.4byte 0x0804db56

.incbin "base.gba", 0x4DAC4, 0xE8
_0804dbac:	.4byte 0x0804dc42

.incbin "base.gba", 0x4DBB0, 0x168
_0804dd18:	.4byte 0x0804dd9e

.incbin "base.gba", 0x4DD1C, 0xC8

_0804dde4:

.incbin "base.gba", 0x4DDE4, 0x30
_0804de14:	.4byte 0x0804dfba

.incbin "base.gba", 0x4DE18, 0x98
_0804deb0:	.4byte 0x0804df46

.incbin "base.gba", 0x4DEB4, 0x130
_0804dfe4:	.4byte 0x0804e07a

.incbin "base.gba", 0x4DFE8, 0x170
_0804e158:	.4byte 0x0804e1ee

.incbin "base.gba", 0x4E15C, 0x114
_0804e270:	.4byte 0x0804e484

.incbin "base.gba", 0x4E274, 0xF0
_0804e364:	.4byte 0x0804e3fa

.incbin "base.gba", 0x4E368, 0x144
_0804e4ac:	.4byte 0x0804e542

.incbin "base.gba", 0x4E4B0, 0x170
_0804e620:	.4byte 0x0804e6b6

.incbin "base.gba", 0x4E624, 0x114
_0804e738:	.4byte 0x0804e904

.incbin "base.gba", 0x4E73C, 0xA8
_0804e7e4:	.4byte 0x0804e87a

.incbin "base.gba", 0x4E7E8, 0x144
_0804e92c:	.4byte 0x0804e9c2

.incbin "base.gba", 0x4E930, 0x170
_0804eaa0:	.4byte 0x0804eb36

.incbin "base.gba", 0x4EAA4, 0x114
_0804ebb8:	.4byte 0x0804ed70

.incbin "base.gba", 0x4EBBC, 0xA8
_0804ec64:	.4byte 0x0804ecfa

.incbin "base.gba", 0x4EC68, 0x130
_0804ed98:	.4byte 0x0804ee2e

.incbin "base.gba", 0x4ED9C, 0x170
_0804ef0c:	.4byte 0x0804efa2

.incbin "base.gba", 0x4EF10, 0x114
_0804f024:	.4byte 0x0804f21a

.incbin "base.gba", 0x4F028, 0xF0
_0804f118:	.4byte 0x0804f1ae

.incbin "base.gba", 0x4F11C, 0x128
_0804f244:	.4byte 0x0804f2da

.incbin "base.gba", 0x4F248, 0x170
_0804f3b8:	.4byte 0x0804f44e

.incbin "base.gba", 0x4F3BC, 0x154

_0804f510:

.incbin "base.gba", 0x4F510, 0x8
_0804f518:	.4byte 0x0000FFFD
	thumb_func_start sub_0804f51c
sub_0804f51c:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldrh	r0, [r2, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_0804f57c
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0804f57c
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	cmp		r0, #0x0
	beq		_0804f57c
	mov		r0, #0x21
	str		r0, [r3, #0x60]
	add		r0, r2, #0x0
	add		r0, #0x4e
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x7
	str		r0, [r3, #0x28]
	add		r0, r2, #0x0
	add		r0, #0x50
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x7
	str		r0, [r3, #0x2c]
	mov		r0, #0x90
	lsl		r0, r0, #0xa
	str		r0, [r3, #0x30]
	ldrh	r1, [r3, #0x34]
	ldr		r0, _0804f584
	and		r0, r1
	strh	r0, [r3, #0x34]
_0804f57c:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4F582, 0x2

_0804f584:	.4byte 0x0000FFFD
	thumb_func_end sub_0804f51c

	thumb_func_start sub_0804f588
sub_0804f588:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldrh	r0, [r2, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_0804f5e8
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0804f5e8
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	cmp		r0, #0x0
	beq		_0804f5e8
	mov		r0, #0x37
	str		r0, [r3, #0x60]
	add		r0, r2, #0x0
	add		r0, #0x4e
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x7
	str		r0, [r3, #0x28]
	add		r0, r2, #0x0
	add		r0, #0x50
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x7
	str		r0, [r3, #0x2c]
	mov		r0, #0x90
	lsl		r0, r0, #0xa
	str		r0, [r3, #0x30]
	ldrh	r1, [r3, #0x34]
	ldr		r0, _0804f5f0
	and		r0, r1
	strh	r0, [r3, #0x34]
_0804f5e8:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4F5EE, 0x2

_0804f5f0:	.4byte 0x0000FFFD
	thumb_func_end sub_0804f588

	thumb_func_start sub_0804f5f4
sub_0804f5f4:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldrh	r0, [r2, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_0804f654
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0804f654
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	cmp		r0, #0x0
	beq		_0804f654
	mov		r0, #0x25
	str		r0, [r3, #0x60]
	add		r0, r2, #0x0
	add		r0, #0x4e
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x7
	str		r0, [r3, #0x28]
	add		r0, r2, #0x0
	add		r0, #0x50
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x7
	str		r0, [r3, #0x2c]
	mov		r0, #0x90
	lsl		r0, r0, #0xa
	str		r0, [r3, #0x30]
	ldrh	r1, [r3, #0x34]
	ldr		r0, _0804f65c
	and		r0, r1
	strh	r0, [r3, #0x34]
_0804f654:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4F65A, 0x2

_0804f65c:	.4byte 0x0000FFFD
	thumb_func_end sub_0804f5f4

	thumb_func_start sub_0804f660
sub_0804f660:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldrh	r0, [r2, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_0804f6c0
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0804f6c0
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	cmp		r0, #0x0
	beq		_0804f6c0
	mov		r0, #0x25
	str		r0, [r3, #0x60]
	add		r0, r2, #0x0
	add		r0, #0x4e
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x7
	str		r0, [r3, #0x28]
	add		r0, r2, #0x0
	add		r0, #0x50
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x7
	str		r0, [r3, #0x2c]
	mov		r0, #0x90
	lsl		r0, r0, #0xa
	str		r0, [r3, #0x30]
	ldrh	r1, [r3, #0x34]
	ldr		r0, _0804f6c8
	and		r0, r1
	strh	r0, [r3, #0x34]
_0804f6c0:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4F6C6, 0x2

_0804f6c8:	.4byte 0x0000FFFD
	thumb_func_end sub_0804f660

	thumb_func_start sub_0804f6cc
sub_0804f6cc:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldrh	r0, [r2, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_0804f72c
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0804f72c
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	cmp		r0, #0x0
	beq		_0804f72c
	mov		r0, #0x37
	str		r0, [r3, #0x60]
	add		r0, r2, #0x0
	add		r0, #0x4e
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x7
	str		r0, [r3, #0x28]
	add		r0, r2, #0x0
	add		r0, #0x50
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x7
	str		r0, [r3, #0x2c]
	mov		r0, #0x90
	lsl		r0, r0, #0xa
	str		r0, [r3, #0x30]
	ldrh	r1, [r3, #0x34]
	ldr		r0, _0804f734
	and		r0, r1
	strh	r0, [r3, #0x34]
_0804f72c:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4F732, 0x2

_0804f734:	.4byte 0x0000FFFD
	thumb_func_end sub_0804f6cc

	thumb_func_start sub_0804f738
sub_0804f738:
	add		r3, r0, #0x0
	ldr		r0, _0804f774
	strh	r0, [r3, #0x10]
	ldr		r0, _0804f778
	str		r0, [r3, #0x5c]
	ldr		r0, _0804f77c
	str		r0, [r3, #0x18]
	ldr		r0, _0804f780
	str		r0, [r3, #0x4c]
	ldrh	r2, [r3, #0x34]
	ldr		r0, _0804f784
	and		r0, r2
	ldr		r2, _0804f788
	and		r0, r2
	strh	r0, [r3, #0x34]
	mov		r0, #0x10
	strb	r0, [r3, #0xe]
	strb	r0, [r3, #0xd]
	strb	r0, [r3, #0xc]
	mov		r0, #0x1
	str		r0, [r3, #0x60]
	ldr		r2, _0804f78c
	add		r0, r1, r2
	cmp		r0, #0xb
	bhi		_0804f81a
	lsl		r0, r0, #0x2
	ldr		r1, _0804f790
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0804f774:	.4byte 0x00001004
_0804f778:	.4byte 0x0804F825
_0804f77c:	.4byte 0x0804f93d
_0804f780:	.4byte 0x0810ab14
_0804f784:	.4byte 0x0000FFFD
_0804f788:	.4byte 0x0000FFFE
_0804f78c:	.4byte 0xFF7DFFFF
_0804f790:	.4byte 0x0804f794
_0804f794:	.4byte 0x0804f7c4

.incbin "base.gba", 0x4F798, 0x2C
	thumb_func_end sub_0804f738


.incbin "base.gba", 0x4F7C4, 0x56

_0804f81a:

.incbin "base.gba", 0x4F81A, 0xA
	thumb_func_start sub_0804f824
sub_0804f824:
	push	{ r4, lr }
	add		r2, r0, #0x0
	add		r3, r2, #0x0
	ldr		r0, [r2, #0x64]
	sub		r0, #0x1
	str		r0, [r2, #0x64]
	add		r4, r0, #0x0
	ldr		r0, [r2, #0x60]
	cmp		r0, #0x6
	bhi		_0804f92a
	lsl		r0, r0, #0x2
	ldr		r1, _0804f844
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x4F842, 0x2

_0804f844:	.4byte 0x0804f848
_0804f848:	.4byte 0x0804f8ac

.incbin "base.gba", 0x4F84C, 0x18
	thumb_func_end sub_0804f824


.incbin "base.gba", 0x4F864, 0xC6

_0804f92a:

.incbin "base.gba", 0x4F92A, 0x5C
_0804f986:

.incbin "base.gba", 0x4F986, 0x2
	thumb_func_start sub_0804f988
sub_0804f988:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r6, _0804fa58
	bl		sub_080537c0
	ldr		r0, [r4, #0x60]
	cmp		r0, #0x0
	beq		_0804f9a0
	b		_0804fb1a
_0804f9a0:
	ldr		r1, [r4, #0x68]
	mov		r2, #0x1
	add		r0, r1, #0x0
	and		r0, r2
	cmp		r0, #0x0
	beq		_0804fa78
	mov		r0, #0x2
	neg		r0, r0
	and		r1, r0
	str		r1, [r4, #0x68]
	ldr		r0, _0804fa5c
	str		r0, [r4, #0x4c]
	ldrh	r0, [r5, #0x10]
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	and		r0, r1
	cmp		r0, #0x0
	bne		_0804f9c6
	b		_0804fb1a
_0804f9c6:
	ldr		r1, _0804fa60
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	beq		_0804f9d2
	b		_0804fb1a
_0804f9d2:
	ldr		r0, [r5, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804f9de
	b		_0804fb1a
_0804f9de:
	add		r0, r5, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0804f9ec
	neg		r0, r1
_0804f9ec:
	lsl		r0, r0, #0x6
	lsr		r0, r0, #0x16
	ldr		r2, _0804fa64
	add		r0, r0, r2
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	add		r0, r1, #0x0
	cmp		r0, #0x0
	bge		_0804fa00
	neg		r0, r0
_0804fa00:
	asr		r4, r0, #0x14
	mov		r0, #0x3f
	and		r4, r0
	add		r4, #0xc0
	lsl		r6, r6, #0x10
	asr		r6, r6, #0x10
	ldr		r0, _0804fa68
	bl		sub_0807073c
	ldr		r0, _0804fa6c
	mov		r8, r0
	ldr		r5, _0804fa70
	ldr		r1, _0804fa74
	add		r5, r5, r1
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r4, #0x0
	bl		sub_0807169c
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08071704
	b		_0804fb1a

.incbin "base.gba", 0x4FA56, 0x2

_0804fa58:	.4byte RunGameLogic_CallBack
_0804fa5c:	.4byte 0x0810ab94
_0804fa60:	.4byte 0x00000838
_0804fa64:	.4byte 0xFFFFFE00
_0804fa68:	.4byte 0x00000177
_0804fa6c:	.4byte 0x08124544
_0804fa70:	.4byte 0x081245c8
_0804fa74:	.4byte 0x00000BB8

_0804fa78:
	orr		r1, r2
	str		r1, [r4, #0x68]
	ldr		r0, _0804fb24
	str		r0, [r4, #0x4c]
	ldrh	r0, [r5, #0x10]
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	and		r0, r1
	cmp		r0, #0x0
	beq		_0804fb1a
	ldr		r2, _0804fb28
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	bne		_0804fb1a
	ldr		r0, [r5, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0804fb1a
	add		r0, r5, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0804faae
	neg		r0, r1
_0804faae:
	lsl		r0, r0, #0x6
	lsr		r0, r0, #0x16
	ldr		r2, _0804fb2c
	add		r0, r0, r2
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	add		r0, r1, #0x0
	cmp		r0, #0x0
	bge		_0804fac2
	neg		r0, r0
_0804fac2:
	asr		r4, r0, #0x14
	mov		r0, #0x3f
	and		r4, r0
	add		r4, #0xc0
	lsl		r6, r6, #0x10
	asr		r6, r6, #0x10
	mov		r0, #0xbc
	lsl		r0, r0, #0x1
	bl		sub_0807073c
	ldr		r0, _0804fb30
	mov		r8, r0
	ldr		r5, _0804fb34
	mov		r1, #0xbc
	lsl		r1, r1, #0x4
	add		r5, r5, r1
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r4, #0x0
	bl		sub_0807169c
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08071704
_0804fb1a:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0804fb24:	.4byte 0x0810ab74
_0804fb28:	.4byte 0x00000838
_0804fb2c:	.4byte 0xFFFFFE00
_0804fb30:	.4byte 0x08124544
_0804fb34:	.4byte 0x081245c8
	thumb_func_end sub_0804f988

	thumb_func_start sub_0804fb38
sub_0804fb38:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_080537fc
	ldr		r0, _0804fb58
	mov		r1, #0x0
	strh	r0, [r4, #0x10]
	ldr		r0, _0804fb5c
	str		r0, [r4, #0x18]
	ldr		r0, _0804fb60
	str		r0, [r4, #0x4c]
	str		r1, [r4, #0x68]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x4FB56, 0x2

_0804fb58:	.4byte 0x00001001
_0804fb5c:	.4byte 0x0804F989
_0804fb60:	.4byte 0x0810ab94
	thumb_func_end sub_0804fb38

	thumb_func_start sub_0804fb64
sub_0804fb64:
	push	{ r4, lr }
	add		r2, r0, #0x0
	ldr		r3, [r2, #0x68]
	ldrh	r4, [r2, #0x34]
	mov		r0, #0x2
	and		r0, r4
	cmp		r0, #0x0
	bne		_0804fb76
	b		_0804fcb0
_0804fb76:
	cmp		r3, #0x0
	blt		_0804fc40
	cmp		r3, #0x95
	ble		_0804fbb0
	ldr		r0, _0804fbac
	cmp		r3, r0
	bgt		_0804fc40
	cmp		r3, #0xbe
	blt		_0804fc40
	ldr		r0, [r2, #0x0]
	ldr		r1, [r2, #0x28]
	sub		r0, r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, [r2, #0x4]
	ldr		r1, [r2, #0x2c]
	sub		r0, r0, r1
	str		r0, [r2, #0x4]
	ldr		r0, [r2, #0x64]
	add		r0, #0x1
	str		r0, [r2, #0x64]
	cmp		r0, #0x6
	bge		_0804fba4
	b		_0804fc94
_0804fba4:
	ldr		r0, [r2, #0x60]
	cmp		r0, #0x0
	beq		_0804fc2c
	b		_0804fc08

_0804fbac:	.4byte 0x00000153

_0804fbb0:
	ldr		r0, [r2, #0x0]
	ldr		r1, [r2, #0x28]
	add		r0, r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, [r2, #0x4]
	ldr		r1, [r2, #0x2c]
	add		r0, r0, r1
	str		r0, [r2, #0x4]
	ldr		r0, [r2, #0x64]
	add		r0, #0x1
	str		r0, [r2, #0x64]
	cmp		r0, #0x6
	blt		_0804fc94
	ldr		r0, [r2, #0x60]
	cmp		r0, #0x0
	beq		_0804fbf4
	ldr		r1, [r2, #0x50]
	ldr		r0, _0804fbdc
	cmp		r1, r0
	bgt		_0804fbe4
	ldr		r0, _0804fbe0
	b		_0804fbe6

_0804fbdc:	.4byte 0x00807FFF
_0804fbe0:	.4byte 0x0810abd4

_0804fbe4:
	ldr		r0, _0804fbf0
_0804fbe6:
	str		r0, [r2, #0x4c]
	mov		r0, #0x0
	str		r0, [r2, #0x60]
	b		_0804fc92

.incbin "base.gba", 0x4FBEE, 0x2

_0804fbf0:	.4byte 0x0810ac14

_0804fbf4:
	ldr		r1, [r2, #0x50]
	ldr		r0, _0804fc00
	cmp		r1, r0
	bgt		_0804fc88
	ldr		r0, _0804fc04
	b		_0804fc8a

_0804fc00:	.4byte 0x00807FFF
_0804fc04:	.4byte 0x0810abf4

_0804fc08:
	ldr		r1, [r2, #0x50]
	ldr		r0, _0804fc14
	cmp		r1, r0
	bgt		_0804fc1c
	ldr		r0, _0804fc18
	b		_0804fc1e

_0804fc14:	.4byte 0x00807FFF
_0804fc18:	.4byte 0x0810abd4

_0804fc1c:
	ldr		r0, _0804fc28
_0804fc1e:
	str		r0, [r2, #0x4c]
	mov		r0, #0x0
	str		r0, [r2, #0x60]
	b		_0804fc92

.incbin "base.gba", 0x4FC26, 0x2

_0804fc28:	.4byte 0x0810ac14

_0804fc2c:
	ldr		r1, [r2, #0x50]
	ldr		r0, _0804fc38
	cmp		r1, r0
	bgt		_0804fc88
	ldr		r0, _0804fc3c
	b		_0804fc8a

_0804fc38:	.4byte 0x00807FFF
_0804fc3c:	.4byte 0x0810abf4

_0804fc40:
	ldr		r0, [r2, #0x64]
	add		r0, #0x1
	str		r0, [r2, #0x64]
	cmp		r0, #0xa
	blt		_0804fc94
	ldr		r0, [r2, #0x60]
	cmp		r0, #0x0
	beq		_0804fc74
	ldr		r1, [r2, #0x50]
	ldr		r0, _0804fc5c
	cmp		r1, r0
	bgt		_0804fc64
	ldr		r0, _0804fc60
	b		_0804fc66

_0804fc5c:	.4byte 0x00807FFF
_0804fc60:	.4byte 0x0810abd4

_0804fc64:
	ldr		r0, _0804fc70
_0804fc66:
	str		r0, [r2, #0x4c]
	mov		r0, #0x0
	str		r0, [r2, #0x60]
	b		_0804fc92

.incbin "base.gba", 0x4FC6E, 0x2

_0804fc70:	.4byte 0x0810ac14

_0804fc74:
	ldr		r1, [r2, #0x50]
	ldr		r0, _0804fc80
	cmp		r1, r0
	bgt		_0804fc88
	ldr		r0, _0804fc84
	b		_0804fc8a

_0804fc80:	.4byte 0x00807FFF
_0804fc84:	.4byte 0x0810abf4

_0804fc88:
	ldr		r0, _0804fca8
_0804fc8a:
	str		r0, [r2, #0x4c]
	mov		r0, #0x1
	str		r0, [r2, #0x60]
	mov		r0, #0x0
_0804fc92:
	str		r0, [r2, #0x64]
_0804fc94:
	ldr		r0, [r2, #0x68]
	add		r0, #0x1
	str		r0, [r2, #0x68]
	ldr		r1, _0804fcac
	cmp		r0, r1
	ble		_0804fcd6
	mov		r0, #0x0
	str		r0, [r2, #0x68]
	b		_0804fcd6

.incbin "base.gba", 0x4FCA6, 0x2

_0804fca8:	.4byte 0x0810ac34
_0804fcac:	.4byte 0x0000017B

_0804fcb0:
	mov		r0, #0x1
	and		r0, r4
	cmp		r0, #0x0
	beq		_0804fcd6
	ldr		r1, _0804fcdc
	lsl		r0, r3, #0x6
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	str		r0, [r2, #0x8]
	sub		r0, r3, #0x1
	str		r0, [r2, #0x68]
	cmp		r0, #0x0
	bge		_0804fcd6
	ldr		r0, _0804fce0
	and		r4, r0
	strh	r4, [r2, #0x34]
_0804fcd6:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0804fcdc:	.4byte 0x08101068
_0804fce0:	.4byte 0x0000FFFE
	thumb_func_end sub_0804fb64

	thumb_func_start sub_0804fce4
sub_0804fce4:
	push	{ r4, lr }
	add		r2, r0, #0x0
	add		r3, r1, #0x0
	ldr		r0, _0804fd28
	mov		r4, #0x0
	strh	r0, [r2, #0x10]
	ldr		r0, _0804fd2c
	str		r0, [r2, #0x4c]
	ldr		r0, _0804fd30
	str		r0, [r2, #0x5c]
	ldr		r0, _0804fd34
	str		r0, [r2, #0x18]
	ldrh	r1, [r2, #0x34]
	mov		r0, #0x2
	orr		r0, r1
	strh	r0, [r2, #0x34]
	str		r4, [r2, #0x60]
	str		r4, [r2, #0x64]
	str		r4, [r2, #0x68]
	ldr		r0, _0804fd38
	cmp		r3, r0
	beq		_0804fd20
	cmp		r3, r0
	ble		_0804fd40
	ldr		r0, _0804fd3c
	cmp		r3, r0
	beq		_0804fd40
	add		r0, #0x1
	cmp		r3, r0
	bne		_0804fd40
_0804fd20:
	str		r4, [r2, #0x28]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	b		_0804fd48

_0804fd28:	.4byte 0x00001003
_0804fd2c:	.4byte 0x0810abd4
_0804fd30:	.4byte sub_0804fb64
_0804fd34:	.4byte 0x0804fd51
_0804fd38:	.4byte 0x00800001
_0804fd3c:	.4byte 0x00808000

_0804fd40:
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	str		r0, [r2, #0x28]
	mov		r0, #0x0
_0804fd48:
	str		r0, [r2, #0x2c]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldrh	r0, [r2, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_0804fd90
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0804fd90
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_0804fd90
	mov		r0, #0x20
	str		r0, [r3, #0x68]
	ldrh	r1, [r3, #0x34]
	ldr		r0, _0804fd94
	and		r0, r1
	strh	r0, [r3, #0x34]
	ldr		r1, _0804fd98
	add		r0, r3, #0x0
	add		r0, #0x58
	strh	r1, [r0, #0x0]
_0804fd90:
	bx		lr

.incbin "base.gba", 0x4FD92, 0x2

_0804fd94:	.4byte 0x0000FFFD
_0804fd98:	.4byte 0xFFFFFF00
	thumb_func_end sub_0804fce4

	thumb_func_start sub_0804fd9c
sub_0804fd9c:
	add		r2, r0, #0x0
	add		r3, r1, #0x0
	ldr		r0, _0804fddc
	strh	r0, [r2, #0x10]
	mov		r0, #0x4
	strb	r0, [r2, #0xe]
	strb	r0, [r2, #0xd]
	strb	r0, [r2, #0xc]
	ldr		r0, _0804fde0
	str		r0, [r2, #0x5c]
	ldr		r0, _0804fde4
	str		r0, [r2, #0x4c]
	ldrh	r1, [r2, #0x34]
	ldr		r0, _0804fde8
	and		r0, r1
	ldr		r1, _0804fdec
	and		r0, r1
	strh	r0, [r2, #0x34]
	mov		r0, #0x1
	str		r0, [r2, #0x60]
	ldr		r0, _0804fdf0
	cmp		r3, r0
	beq		_0804fdf4
	cmp		r3, r0
	ble		_0804fe00
	add		r0, #0x1
	cmp		r3, r0
	beq		_0804fdf8
	add		r0, #0x1
	cmp		r3, r0
	beq		_0804fdfc
	b		_0804fe00

_0804fddc:	.4byte 0x00001013
_0804fde0:	.4byte 0x0804FE09
_0804fde4:	.4byte 0x0810ac54
_0804fde8:	.4byte 0x0000FFFE
_0804fdec:	.4byte 0x0000FFFD
_0804fdf0:	.4byte 0x00840001

_0804fdf4:
	mov		r0, #0x20
	b		_0804fe02
_0804fdf8:
	mov		r0, #0x40
	b		_0804fe02
_0804fdfc:
	mov		r0, #0x60
	b		_0804fe02
_0804fe00:
	mov		r0, #0x0
_0804fe02:
	str		r0, [r2, #0x64]
	bx		lr

.incbin "base.gba", 0x4FE06, 0x2
	thumb_func_end sub_0804fd9c

	thumb_func_start sub_0804fe08
sub_0804fe08:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	ldr		r0, [r6, #0x64]
	sub		r7, r0, #0x1
	ldr		r0, [r6, #0x60]
	cmp		r7, #0x0
	bge		_0804fe24
	add		r0, #0x1
	cmp		r0, #0x5
	ble		_0804fe24
	mov		r0, #0x0
	mov		r7, #0x0
_0804fe24:
	str		r0, [r6, #0x60]
	str		r7, [r6, #0x64]
	cmp		r0, #0x5
	bls		_0804fe2e
	b		_080500fc
_0804fe2e:
	lsl		r0, r0, #0x2
	ldr		r1, _0804fe38
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0804fe38:	.4byte 0x0804fe3c
_0804fe3c:	.4byte 0x0804fe54

.incbin "base.gba", 0x4FE40, 0x14

_0804fe54:
	mov		r0, #0x1
	str		r0, [r6, #0x60]
	mov		r0, #0x40
	str		r0, [r6, #0x64]
	mov		r0, #0x4
	strb	r0, [r6, #0xe]
	strb	r0, [r6, #0xd]
	strb	r0, [r6, #0xc]
	ldrh	r1, [r6, #0x34]
	ldr		r0, _0804fe74
	and		r0, r1
	ldr		r1, _0804fe78
	and		r0, r1
	strh	r0, [r6, #0x34]
	b		_080500fc

.incbin "base.gba", 0x4FE72, 0x2

_0804fe74:	.4byte 0x0000FFFE
_0804fe78:	.4byte 0x0000FFFD

.incbin "base.gba", 0x4FE7C, 0xB4
	thumb_func_end sub_0804fe08


.incbin "base.gba", 0x4FF30, 0x118
_08050048:	.4byte 0x080500f8

.incbin "base.gba", 0x5004C, 0xB0

_080500fc:

.incbin "base.gba", 0x500FC, 0x18
	thumb_func_start sub_08050114
sub_08050114:
	ldr		r1, _08050128
	mov		r2, #0x0
	strh	r1, [r0, #0x10]
	ldr		r1, _0805012c
	str		r1, [r0, #0x5c]
	ldr		r1, _08050130
	str		r1, [r0, #0x4c]
	str		r2, [r0, #0x60]
	bx		lr

.incbin "base.gba", 0x50126, 0x2

_08050128:	.4byte 0x00001001
_0805012c:	.4byte 0x08050135
_08050130:	.4byte 0x0810ae74
	add		r1, r0, #0x0
	ldr		r0, [r1, #0x60]
	add		r0, #0x1
	str		r0, [r1, #0x60]
	cmp		r0, #0x14
	bne		_0805014c
	ldr		r0, _08050148
	str		r0, [r1, #0x4c]
	b		_08050158

.incbin "base.gba", 0x50146, 0x2

_08050148:	.4byte 0x0810ae94

_0805014c:
	cmp		r0, #0x28
	bne		_08050158
	ldr		r0, _0805015c
	str		r0, [r1, #0x4c]
	mov		r0, #0x0
	str		r0, [r1, #0x60]
_08050158:
	bx		lr

.incbin "base.gba", 0x5015A, 0x2

_0805015c:	.4byte 0x0810ae74
	thumb_func_end sub_08050114

	thumb_func_start sub_08050160
sub_08050160:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x60]
	cmp		r5, #0x3c
	bgt		_08050174
	cmp		r5, #0x1
	bge		_08050192
	cmp		r5, #0x0
	beq		_0805017e
	b		_080501fe
_08050174:
	cmp		r5, #0x3d
	beq		_080501cc
	cmp		r5, #0x8c
	bgt		_080501fe
	b		_080501d8
_0805017e:
	mov		r0, #0x10
	str		r0, [r4, #0x64]
	mov		r0, #0xa
	str		r0, [r4, #0x68]
	ldrh	r1, [r4, #0x34]
	ldr		r0, _080501c4
	and		r0, r1
	ldr		r1, _080501c8
	and		r0, r1
	strh	r0, [r4, #0x34]
_08050192:
	cmp		r5, #0x1c
	ble		_080501c0
	add		r2, r5, #0x0
	sub		r2, #0x1c
	lsl		r1, r2, #0x3
	sub		r1, r1, r2
	lsl		r1, r1, #0x3
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	add		r3, r0, #0x0
	sub		r1, r3, r1
	mov		r0, #0x35
	mul		r0, r2
	sub		r3, r3, r0
	ldrh	r2, [r4, #0x34]
	mov		r0, #0x1
	orr		r0, r2
	strh	r0, [r4, #0x34]
	add		r0, r4, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
_080501c0:
	add		r5, #0x1
	b		_080501fe

_080501c4:	.4byte 0x0000FFFE
_080501c8:	.4byte 0x0000FFFD

_080501cc:
	ldrh	r0, [r4, #0x34]
	mov		r1, #0x1
	orr		r1, r0
	mov		r0, #0x2
	orr		r1, r0
	strh	r1, [r4, #0x34]
_080501d8:
	add		r0, r4, #0x0
	bl		sub_08050210
	ldr		r0, [r4, #0x8]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	add		r0, r0, r1
	str		r0, [r4, #0x8]
	add		r5, #0x1
	cmp		r5, #0x8b
	ble		_080501fe
	mov		r5, #0x0
	ldrh	r0, [r4, #0x34]
	ldr		r1, _08050208
	and		r1, r0
	ldr		r0, _0805020c
	and		r1, r0
	strh	r1, [r4, #0x34]
	str		r5, [r4, #0x8]
_080501fe:
	str		r5, [r4, #0x60]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x50206, 0x2

_08050208:	.4byte 0x0000FFFE
_0805020c:	.4byte 0x0000FFFD
	thumb_func_end sub_08050160

	thumb_func_start sub_08050210
sub_08050210:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x64]
	sub		r6, r0, #0x1
	ldr		r0, [r4, #0x68]
	sub		r5, r0, #0x1
	cmp		r6, #0x7
	ble		_08050240
	ldr		r1, _08050238
	lsl		r0, r6, #0x8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r7, r1, #0x0
	cmp		r0, #0x0
	bge		_08050232
	ldr		r1, _0805023c
	add		r0, r0, r1
_08050232:
	asr		r0, r0, #0xa
	b		_08050254

.incbin "base.gba", 0x50236, 0x2

_08050238:	.4byte 0x08101068
_0805023c:	.4byte 0x000003FF

_08050240:
	ldr		r1, _08050284
	lsl		r0, r6, #0x8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r7, r1, #0x0
	cmp		r0, #0x0
	bge		_08050252
	ldr		r1, _08050288
	add		r0, r0, r1
_08050252:
	asr		r0, r0, #0x9
_08050254:
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	add		r1, r4, #0x0
	add		r1, #0x56
	strh	r0, [r1, #0x0]
	cmp		r6, #0x0
	bgt		_08050266
	mov		r6, #0x10
_08050266:
	cmp		r5, #0x9
	ble		_08050290
	lsl		r0, r5, #0xa
	mov		r1, #0x14
	bl		sub_0807d80c
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08050280
	ldr		r1, _0805028c
	add		r0, r0, r1
_08050280:
	asr		r0, r0, #0xa
	b		_080502a8

_08050284:	.4byte 0x08101068
_08050288:	.4byte 0x000001FF
_0805028c:	.4byte 0x000003FF

_08050290:
	lsl		r0, r5, #0xa
	mov		r1, #0x14
	bl		sub_0807d80c
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_080502a6
	ldr		r1, _080502cc
	add		r0, r0, r1
_080502a6:
	asr		r0, r0, #0x9
_080502a8:
	mov		r1, #0x90
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	add		r1, r4, #0x0
	add		r1, #0x58
	strh	r0, [r1, #0x0]
	cmp		r5, #0x0
	bgt		_080502ba
	mov		r5, #0x14
_080502ba:
	add		r1, r4, #0x0
	add		r1, #0x5a
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	str		r6, [r4, #0x64]
	str		r5, [r4, #0x68]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080502cc:	.4byte 0x000001FF
	thumb_func_end sub_08050210

	thumb_func_start sub_080502d0
sub_080502d0:
	ldr		r1, _080502e4
	mov		r2, #0x0
	strh	r1, [r0, #0x10]
	ldr		r1, _080502e8
	str		r1, [r0, #0x5c]
	ldr		r1, _080502ec
	str		r1, [r0, #0x4c]
	str		r2, [r0, #0x8]
	str		r2, [r0, #0x60]
	bx		lr

_080502e4:	.4byte 0x0000100A
_080502e8:	.4byte sub_08050160
_080502ec:	.4byte 0x0810aeb4
	thumb_func_end sub_080502d0

	thumb_func_start sub_080502f0
sub_080502f0:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	ldr		r0, _0805034c
	ldr		r1, _08050350
	add		r0, r0, r1
	ldr		r5, _08050354
	mov		r1, #0x14
	ldrsh	r2, [r0, r1]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0805030a
	add		r0, #0x3f
_0805030a:
	asr		r3, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _08050358
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r4, [r0, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r3, [r0, #0x0]
	add		r0, r6, #0x0
	cmp		r0, #0x0
	bge		_0805032e
	add		r0, #0xff
_0805032e:
	asr		r0, r0, #0x8
	add		r2, r0, #0x0
	mul		r2, r4
	add		r1, r7, #0x0
	cmp		r1, #0x0
	bge		_0805033c
	add		r1, #0xff
_0805033c:
	asr		r0, r1, #0x8
	mul		r0, r3
	sub		r0, r2, r0
	cmp		r0, #0x0
	bge		_0805035c
	mov		r0, #0x0
	b		_0805035e

.incbin "base.gba", 0x5034A, 0x2

_0805034c:	.4byte RunGameLogic_CallBack
_08050350:	.4byte 0x00000848
_08050354:	.4byte 0x08101068
_08050358:	.4byte 0x000003FF

_0805035c:
	mov		r0, #0x1
_0805035e:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080502f0

	thumb_func_start sub_08050364
sub_08050364:
	add		r3, r0, #0x0
	ldr		r0, _080503c8
	mov		r2, #0x0
	mov		r1, #0x0
	strh	r0, [r3, #0x10]
	mov		r0, #0x8
	strb	r0, [r3, #0xe]
	strb	r0, [r3, #0xd]
	strb	r0, [r3, #0xc]
	ldr		r0, _080503cc
	str		r0, [r3, #0x4c]
	add		r0, r3, #0x0
	add		r0, #0x60
	strb	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strb	r2, [r0, #0x0]
	add		r2, r3, #0x0
	add		r2, #0x66
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	strh	r0, [r2, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r2, #0x4
	mov		r0, #0x10
	strb	r0, [r2, #0x0]
	str		r1, [r3, #0x28]
	str		r1, [r3, #0x2c]
	str		r1, [r3, #0x30]
	ldr		r0, _080503d0
	str		r0, [r3, #0x18]
	ldr		r0, _080503d4
	str		r0, [r3, #0x5c]
	ldrh	r0, [r3, #0x34]
	mov		r1, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r3, #0x34]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r3, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	bx		lr

_080503c8:	.4byte 0x00001005
_080503cc:	.4byte 0x0810b254
_080503d0:	.4byte 0x08050591
_080503d4:	.4byte sub_080503d8
	thumb_func_end sub_08050364

	thumb_func_start sub_080503d8
sub_080503d8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r0, #0x60
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x8
	bls		_080503e6
	b		_08050584
_080503e6:
	lsl		r0, r0, #0x2
	ldr		r1, _080503f0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_080503f0:	.4byte 0x080503f4
_080503f4:	.4byte 0x08050418

.incbin "base.gba", 0x503F8, 0x20
	thumb_func_end sub_080503d8


.incbin "base.gba", 0x50418, 0x16C

_08050584:

.incbin "base.gba", 0x50584, 0x40
_080505c4:

.incbin "base.gba", 0x505C4, 0x4
	thumb_func_start sub_080505c8
sub_080505c8:
	mov		r12, r0
	ldr		r0, _08050628
	mov		r3, #0x0
	mov		r1, r12
	strh	r0, [r1, #0x10]
	mov		r0, #0x8
	strb	r0, [r1, #0xe]
	strb	r0, [r1, #0xd]
	strb	r0, [r1, #0xc]
	ldr		r0, _0805062c
	str		r0, [r1, #0x4c]
	ldr		r0, _08050630
	str		r0, [r1, #0x18]
	ldr		r0, _08050634
	str		r0, [r1, #0x5c]
	ldrh	r0, [r1, #0x34]
	mov		r1, #0x1
	mov		r2, #0x0
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	mov		r1, r12
	strh	r0, [r1, #0x34]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	mov		r0, r12
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x8
	strb	r2, [r0, #0x0]
	add		r0, #0x1
	strb	r2, [r0, #0x0]
	add		r0, #0x3
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	mov		r0, r12
	str		r3, [r0, #0x8]
	add		r0, #0x62
	strh	r3, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x50626, 0x2

_08050628:	.4byte 0x00001006
_0805062c:	.4byte 0x0810b234
_08050630:	.4byte 0x08050879
_08050634:	.4byte sub_08050638
	thumb_func_end sub_080505c8

	thumb_func_start sub_08050638
sub_08050638:
	push	{ r4, lr }
	mov		r12, r0
	add		r0, #0x60
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x18
	bls		_08050646
	b		_0805086e
_08050646:
	lsl		r0, r0, #0x2
	ldr		r1, _08050650
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08050650:	.4byte 0x08050654
_08050654:	.4byte 0x080506b8

.incbin "base.gba", 0x50658, 0x60
	thumb_func_end sub_08050638


.incbin "base.gba", 0x506B8, 0x1B6

_0805086e:

.incbin "base.gba", 0x5086E, 0x3E
_080508ac:

.incbin "base.gba", 0x508AC, 0x4
	thumb_func_start sub_080508b0
sub_080508b0:
	add		r3, r0, #0x0
	ldr		r0, _080508f0
	mov		r2, #0x0
	strh	r0, [r3, #0x10]
	mov		r0, #0x24
	mov		r1, #0x40
	strb	r0, [r3, #0xc]
	strb	r0, [r3, #0xd]
	strb	r1, [r3, #0xe]
	ldr		r0, _080508f4
	str		r0, [r3, #0x18]
	ldr		r0, _080508f8
	str		r0, [r3, #0x5c]
	ldr		r0, _080508fc
	str		r0, [r3, #0x4c]
	mov		r0, #0x10
	str		r0, [r3, #0x60]
	str		r2, [r3, #0x64]
	mov		r0, #0x80
	lsl		r0, r0, #0xc
	str		r0, [r3, #0x68]
	ldr		r1, [r3, #0x50]
	mov		r0, #0x8d
	lsl		r0, r0, #0x10
	cmp		r1, r0
	beq		_08050904
	add		r0, #0x1
	cmp		r1, r0
	bne		_08050904
	ldr		r0, _08050900
	b		_08050908

.incbin "base.gba", 0x508EE, 0x2

_080508f0:	.4byte 0x00001007
_080508f4:	.4byte 0x08050a15
_080508f8:	.4byte 0x08050929
_080508fc:	.4byte 0x0810b3b4
_08050900:	.4byte 0xFFFFC000

_08050904:
	mov		r0, #0x80
	lsl		r0, r0, #0x7
_08050908:
	strh	r0, [r3, #0x26]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r3, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	ldrh	r0, [r3, #0x34]
	mov		r1, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r3, #0x34]
	bx		lr

.incbin "base.gba", 0x50926, 0x2
	thumb_func_end sub_080508b0

	thumb_func_start sub_08050928
sub_08050928:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x60]
	cmp		r0, #0xf0
	beq		_080509bc
	cmp		r0, #0xf0
	bgt		_08050940
	cmp		r0, #0x10
	beq		_0805094a
	cmp		r0, #0x11
	beq		_0805094e
	b		_08050a08
_08050940:
	cmp		r0, #0xf2
	beq		_080509f8
	cmp		r0, #0xf2
	blt		_080509d6
	b		_08050a08
_0805094a:
	mov		r0, #0x11
	str		r0, [r2, #0x60]
_0805094e:
	ldr		r3, [r2, #0x64]
	ldr		r1, _0805099c
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0805095c
	add		r0, #0x3f
_0805095c:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	ldr		r1, [r2, #0x68]
	add		r0, r0, r1
	str		r0, [r2, #0x8]
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	add		r0, r3, r1
	str		r0, [r2, #0x64]
	ldr		r4, _080509a0
	ldr		r3, _080509a4
	ldr		r0, _080509a8
	ldr		r5, _080509ac
	add		r0, r0, r5
	mov		r5, #0x26
	ldrsh	r1, [r2, r5]
	mov		r5, #0x14
	ldrsh	r0, [r0, r5]
	sub		r1, r1, r0
	ldr		r0, _080509b0
	and		r1, r0
	ldr		r0, _080509b4
	cmp		r1, r0
	bgt		_080509b8
	str		r4, [r2, #0x4c]
	b		_08050a08

.incbin "base.gba", 0x5099A, 0x2

_0805099c:	.4byte 0x08101068
_080509a0:	.4byte 0x0810b3b4
_080509a4:	.4byte 0x0810b3d4
_080509a8:	.4byte RunGameLogic_CallBack
_080509ac:	.4byte 0x00000848
_080509b0:	.4byte 0x0000FFFF
_080509b4:	.4byte 0x00007FFF

_080509b8:
	str		r3, [r2, #0x4c]
	b		_08050a08
_080509bc:
	mov		r0, #0xf1
	str		r0, [r2, #0x60]
	ldrh	r1, [r2, #0x34]
	ldr		r0, _080509ec
	and		r0, r1
	strh	r0, [r2, #0x34]
	ldr		r1, _080509f0
	add		r0, r2, #0x0
	add		r0, #0x58
	strh	r1, [r0, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0xa
	str		r0, [r2, #0x30]
_080509d6:
	ldr		r0, [r2, #0x8]
	ldr		r1, [r2, #0x30]
	add		r0, r0, r1
	str		r0, [r2, #0x8]
	cmp		r0, #0x0
	blt		_080509f8
	ldr		r3, _080509f4
	add		r0, r1, r3
	str		r0, [r2, #0x30]
	b		_08050a08

.incbin "base.gba", 0x509EA, 0x2

_080509ec:	.4byte 0x0000FFFD
_080509f0:	.4byte 0xFFFFFF00
_080509f4:	.4byte 0xFFFFC000

_080509f8:
	mov		r0, #0xf3
	str		r0, [r2, #0x60]
	mov		r0, #0x0
	str		r0, [r2, #0x18]
	ldrh	r1, [r2, #0x34]
	ldr		r0, _08050a10
	and		r0, r1
	strh	r0, [r2, #0x34]
_08050a08:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x50A0E, 0x2

_08050a10:	.4byte 0x0000FFFE
	add		r2, r1, #0x0
	ldrh	r0, [r2, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_08050a38
	mov		r0, #0xca
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x8
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
_08050a38:
	bx		lr

.incbin "base.gba", 0x50A3A, 0x2
	thumb_func_end sub_08050928

	thumb_func_start sub_08050a3c
sub_08050a3c:
	add		r3, r0, #0x0
	ldr		r0, _08050a70
	mov		r2, #0x0
	strh	r0, [r3, #0x10]
	mov		r0, #0x8
	strb	r0, [r3, #0xe]
	strb	r0, [r3, #0xd]
	strb	r0, [r3, #0xc]
	ldr		r0, _08050a74
	str		r0, [r3, #0x18]
	ldr		r0, _08050a78
	str		r0, [r3, #0x5c]
	ldrh	r1, [r3, #0x34]
	ldr		r0, _08050a7c
	and		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r3, #0x34]
	mov		r1, #0xe0
	add		r0, r3, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	str		r2, [r3, #0x60]
	bx		lr

_08050a70:	.4byte 0x00001009
_08050a74:	.4byte sub_08050bf0
_08050a78:	.4byte sub_08050a80
_08050a7c:	.4byte 0x0000FFFE
	thumb_func_end sub_08050a3c

	thumb_func_start sub_08050a80
sub_08050a80:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r2, r4, #0x0
	ldr		r0, _08050aa8
	add		r3, r0, #0x0
	add		r3, #0x24
	ldr		r0, [r4, #0x60]
	cmp		r0, #0x11
	beq		_08050afc
	cmp		r0, #0x11
	bgt		_08050ab2
	cmp		r0, #0x1
	bne		_08050a9c
	b		_08050be4
_08050a9c:
	cmp		r0, #0x1
	bgt		_08050aac
	cmp		r0, #0x0
	beq		_08050aca
	b		_08050be4

.incbin "base.gba", 0x50AA6, 0x2

_08050aa8:	.4byte RunGameLogic_CallBack

_08050aac:
	cmp		r0, #0x10
	beq		_08050ae0
	b		_08050be4
_08050ab2:
	cmp		r0, #0xf1
	bne		_08050ab8
	b		_08050bb2
_08050ab8:
	cmp		r0, #0xf1
	bgt		_08050ac2
	cmp		r0, #0xf0
	beq		_08050b98
	b		_08050be4
_08050ac2:
	cmp		r0, #0xf2
	bne		_08050ac8
	b		_08050bd4
_08050ac8:
	b		_08050be4
_08050aca:
	mov		r0, #0x1
	str		r0, [r4, #0x60]
	ldrh	r1, [r4, #0x34]
	ldr		r0, _08050adc
	and		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	b		_08050be2

.incbin "base.gba", 0x50ADA, 0x2

_08050adc:	.4byte 0x0000FFFE

_08050ae0:
	mov		r0, #0x11
	str		r0, [r4, #0x60]
	mov		r0, #0x4
	str		r0, [r4, #0x64]
	mov		r0, #0x0
	str		r0, [r4, #0x68]
	ldrh	r1, [r4, #0x34]
	mov		r0, #0x1
	orr		r0, r1
	ldr		r1, _08050b08
	and		r0, r1
	strh	r0, [r4, #0x34]
	ldr		r0, _08050b0c
	str		r0, [r4, #0x4c]
_08050afc:
	ldr		r6, [r4, #0x64]
	ldr		r5, [r4, #0x68]
	cmp		r6, #0x0
	ble		_08050b10
	sub		r6, #0x1
	b		_08050b8c

_08050b08:	.4byte 0x0000FFFD
_08050b0c:	.4byte 0x0810b194

_08050b10:
	add		r5, #0x1
	cmp		r5, #0x2
	bne		_08050b38
	ldr		r1, [r4, #0x6c]
	ldr		r2, _08050b44
	add		r0, r3, r2
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bne		_08050b34
	ldr		r0, [r1, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08050b34
	mov		r0, #0xbd
	lsl		r0, r0, #0x1
	bl		sub_0807073c
_08050b34:
	cmp		r5, #0x2
	beq		_08050b60
_08050b38:
	cmp		r5, #0x2
	bgt		_08050b48
	cmp		r5, #0x1
	beq		_08050b52
	b		_08050b84

.incbin "base.gba", 0x50B42, 0x2

_08050b44:	.4byte 0x00000814

_08050b48:
	cmp		r5, #0x3
	beq		_08050b6c
	cmp		r5, #0x4
	beq		_08050b78
	b		_08050b84
_08050b52:
	mov		r6, #0x3
	ldr		r0, _08050b5c
	str		r0, [r4, #0x4c]
	b		_08050b8c

.incbin "base.gba", 0x50B5A, 0x2

_08050b5c:	.4byte 0x0810b1b4

_08050b60:
	mov		r6, #0x6
	ldr		r0, _08050b68
	str		r0, [r4, #0x4c]
	b		_08050b8c

_08050b68:	.4byte 0x0810b1d4

_08050b6c:
	mov		r6, #0x4
	ldr		r0, _08050b74
	str		r0, [r4, #0x4c]
	b		_08050b8c

_08050b74:	.4byte 0x0810b214

_08050b78:
	mov		r6, #0x2
	ldr		r0, _08050b80
	str		r0, [r4, #0x4c]
	b		_08050b8c

_08050b80:	.4byte 0x0810b1f4

_08050b84:
	ldr		r0, _08050b94
	str		r0, [r4, #0x4c]
	mov		r0, #0x0
	str		r0, [r4, #0x60]
_08050b8c:
	str		r6, [r4, #0x64]
	str		r5, [r4, #0x68]
	b		_08050be4

.incbin "base.gba", 0x50B92, 0x2

_08050b94:	.4byte 0x0810b1f4

_08050b98:
	mov		r0, #0xf1
	str		r0, [r4, #0x60]
	ldrh	r1, [r4, #0x34]
	ldr		r0, _08050bc8
	and		r0, r1
	strh	r0, [r4, #0x34]
	ldr		r1, _08050bcc
	add		r0, r4, #0x0
	add		r0, #0x58
	strh	r1, [r0, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0xa
	str		r0, [r4, #0x30]
_08050bb2:
	ldr		r0, [r2, #0x8]
	ldr		r1, [r4, #0x30]
	add		r0, r0, r1
	str		r0, [r2, #0x8]
	cmp		r0, #0x0
	blt		_08050bd4
	ldr		r0, [r4, #0x30]
	ldr		r1, _08050bd0
	add		r0, r0, r1
	str		r0, [r4, #0x30]
	b		_08050be4

_08050bc8:	.4byte 0x0000FFFD
_08050bcc:	.4byte 0xFFFFFF00
_08050bd0:	.4byte 0xFFFFC000

_08050bd4:
	mov		r0, #0xf3
	str		r0, [r4, #0x60]
	mov		r0, #0x0
	str		r0, [r2, #0x18]
	ldrh	r1, [r4, #0x34]
	ldr		r0, _08050bec
	and		r0, r1
_08050be2:
	strh	r0, [r4, #0x34]
_08050be4:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x50BEA, 0x2

_08050bec:	.4byte 0x0000FFFE
	thumb_func_end sub_08050a80

	thumb_func_start sub_08050bf0
sub_08050bf0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	ldr		r2, _08050c38
	add		r5, r2, #0x0
	add		r5, #0x24
	ldrh	r0, [r3, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_08050c5e
	add		r0, r3, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08050c5e
	ldr		r0, _08050c3c
	add		r2, r2, r0
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x1
	orr		r0, r1
	strh	r0, [r2, #0x0]
	str		r3, [r4, #0x6c]
	add		r0, r3, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_08050c40
	mov		r0, #0xf0
	b		_08050c42

.incbin "base.gba", 0x50C36, 0x2

_08050c38:	.4byte RunGameLogic_CallBack
_08050c3c:	.4byte 0x00000C12

_08050c40:
	mov		r0, #0x10
_08050c42:
	str		r0, [r4, #0x60]
	ldr		r1, _08050c64
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r3, r0
	bne		_08050c5e
	ldr		r0, [r3, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08050c5e
	ldr		r0, _08050c68
	bl		sub_0807073c
_08050c5e:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08050c64:	.4byte 0x00000814
_08050c68:	.4byte 0x00000175
	thumb_func_end sub_08050bf0

	thumb_func_start sub_08050c6c
sub_08050c6c:
	add		r2, r0, #0x0
	ldr		r0, _08050ca0
	mov		r1, #0x0
	strh	r0, [r2, #0x10]
	ldr		r0, _08050ca4
	str		r0, [r2, #0x4c]
	str		r1, [r2, #0x60]
	str		r1, [r2, #0x64]
	str		r1, [r2, #0x8]
	ldr		r0, _08050ca8
	str		r0, [r2, #0x5c]
	mov		r0, #0xa0
	add		r1, r2, #0x0
	add		r1, #0x56
	strh	r0, [r1, #0x0]
	mov		r1, #0x80
	add		r0, r2, #0x0
	add		r0, #0x58
	strh	r1, [r0, #0x0]
	ldrh	r0, [r2, #0x34]
	mov		r1, #0x2
	orr		r0, r1
	mov		r1, #0x1
	orr		r0, r1
	strh	r0, [r2, #0x34]
	bx		lr

_08050ca0:	.4byte 0x0000100B
_08050ca4:	.4byte 0x0810b2f4
_08050ca8:	.4byte sub_08050cac
	thumb_func_end sub_08050c6c

	thumb_func_start sub_08050cac
sub_08050cac:
	push	{ r4, lr }
	add		r2, r0, #0x0
	ldr		r4, [r2, #0x60]
	ldr		r3, [r2, #0x64]
	add		r4, #0x1
	cmp		r4, #0x5
	ble		_08050d1c
	mov		r4, #0x0
	add		r3, #0x1
	cmp		r3, #0x5
	ble		_08050cc4
	mov		r3, #0x0
_08050cc4:
	cmp		r3, #0x5
	bhi		_08050d18
	lsl		r0, r3, #0x2
	ldr		r1, _08050cd4
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x50CD2, 0x2

_08050cd4:	.4byte 0x08050cd8
_08050cd8:	.4byte 0x08050d18

.incbin "base.gba", 0x50CDC, 0x14
	thumb_func_end sub_08050cac


.incbin "base.gba", 0x50CF0, 0x28

_08050d18:

.incbin "base.gba", 0x50D18, 0x4
_08050d1c:

.incbin "base.gba", 0x50D1C, 0xC
_08050d28:	.4byte 0x0810b2f4
	thumb_func_start sub_08050d2c
sub_08050d2c:
	add		r2, r0, #0x0
	ldr		r0, _08050d70
	mov		r1, #0x0
	strh	r0, [r2, #0x10]
	mov		r0, #0x8
	strb	r0, [r2, #0xe]
	strb	r0, [r2, #0xd]
	strb	r0, [r2, #0xc]
	ldr		r0, _08050d74
	str		r0, [r2, #0x18]
	ldr		r0, _08050d78
	str		r0, [r2, #0x5c]
	ldr		r0, _08050d7c
	str		r0, [r2, #0x4c]
	str		r1, [r2, #0x60]
	str		r1, [r2, #0x64]
	str		r1, [r2, #0x68]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	strh	r0, [r2, #0x26]
	mov		r1, #0xe0
	add		r0, r2, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	ldrh	r0, [r2, #0x34]
	mov		r1, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r2, #0x34]
	bx		lr

.incbin "base.gba", 0x50D6E, 0x2

_08050d70:	.4byte 0x0000100C
_08050d74:	.4byte 0x08050f1d
_08050d78:	.4byte 0x08050d81
_08050d7c:	.4byte 0x0810b134
	add		r2, r0, #0x0
	ldr		r3, [r2, #0x60]
	cmp		r3, #0x11
	beq		_08050e1a
	cmp		r3, #0x11
	bgt		_08050da0
	cmp		r3, #0x1
	beq		_08050dcc
	cmp		r3, #0x1
	bgt		_08050d9a
	cmp		r3, #0x0
	beq		_08050dba
	b		_08050f14
_08050d9a:
	cmp		r3, #0x10
	beq		_08050e10
	b		_08050f14
_08050da0:
	cmp		r3, #0xf1
	bne		_08050da6
	b		_08050ee2
_08050da6:
	cmp		r3, #0xf1
	bgt		_08050db2
	cmp		r3, #0xf0
	bne		_08050db0
	b		_08050ec8
_08050db0:
	b		_08050f14
_08050db2:
	cmp		r3, #0xf2
	bne		_08050db8
	b		_08050f04
_08050db8:
	b		_08050f14
_08050dba:
	mov		r0, #0x1
	str		r0, [r2, #0x60]
	ldrh	r1, [r2, #0x34]
	mov		r0, #0x2
	orr		r0, r1
	strh	r0, [r2, #0x34]
	ldr		r0, _08050dec
	str		r0, [r2, #0x4c]
	str		r3, [r2, #0x8]
_08050dcc:
	ldr		r0, _08050df0
	ldr		r1, _08050df4
	add		r0, r0, r1
	mov		r3, #0x26
	ldrsh	r1, [r2, r3]
	mov		r3, #0x14
	ldrsh	r0, [r0, r3]
	sub		r1, r1, r0
	ldr		r0, _08050df8
	and		r1, r0
	ldr		r0, _08050dfc
	cmp		r1, r0
	bgt		_08050e00
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	b		_08050e02

_08050dec:	.4byte 0x0810b134
_08050df0:	.4byte RunGameLogic_CallBack
_08050df4:	.4byte 0x00000848
_08050df8:	.4byte 0x0000FFFF
_08050dfc:	.4byte 0x00007FFF

_08050e00:
	ldr		r1, _08050e0c
_08050e02:
	add		r0, r2, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	b		_08050f14

.incbin "base.gba", 0x50E0A, 0x2

_08050e0c:	.4byte 0xFFFFFF00

_08050e10:
	mov		r0, #0x11
	str		r0, [r2, #0x60]
	mov		r0, #0x0
	str		r0, [r2, #0x64]
	str		r0, [r2, #0x68]
_08050e1a:
	ldr		r0, _08050e3c
	ldr		r1, _08050e40
	add		r0, r0, r1
	mov		r3, #0x26
	ldrsh	r1, [r2, r3]
	mov		r3, #0x14
	ldrsh	r0, [r0, r3]
	sub		r1, r1, r0
	ldr		r0, _08050e44
	and		r1, r0
	ldr		r0, _08050e48
	cmp		r1, r0
	bgt		_08050e4c
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	b		_08050e4e

.incbin "base.gba", 0x50E3A, 0x2

_08050e3c:	.4byte RunGameLogic_CallBack
_08050e40:	.4byte 0x00000848
_08050e44:	.4byte 0x0000FFFF
_08050e48:	.4byte 0x00007FFF

_08050e4c:
	ldr		r0, _08050e60
_08050e4e:
	add		r1, r2, #0x0
	add		r1, #0x56
	strh	r0, [r1, #0x0]
	ldr		r0, [r2, #0x64]
	cmp		r0, #0x3
	bgt		_08050e64
	add		r0, #0x1
	str		r0, [r2, #0x64]
	b		_08050e6e

_08050e60:	.4byte 0xFFFFFF00

_08050e64:
	mov		r0, #0x0
	str		r0, [r2, #0x64]
	ldr		r0, [r2, #0x68]
	add		r0, #0x1
	str		r0, [r2, #0x68]
_08050e6e:
	ldr		r1, [r2, #0x68]
	cmp		r1, #0x7
	bgt		_08050e98
	cmp		r1, #0x0
	blt		_08050e98
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08050e8c
	ldr		r0, _08050e88
	str		r0, [r2, #0x4c]
	b		_08050e9c

.incbin "base.gba", 0x50E86, 0x2

_08050e88:	.4byte 0x0810b174

_08050e8c:
	ldr		r0, _08050e94
	str		r0, [r2, #0x4c]
	b		_08050e9c

.incbin "base.gba", 0x50E92, 0x2

_08050e94:	.4byte 0x0810b154

_08050e98:
	mov		r0, #0x0
	str		r0, [r2, #0x60]
_08050e9c:
	lsl		r0, r1, #0x2
	ldr		r1, [r2, #0x64]
	add		r0, r0, r1
	ldr		r1, _08050ec4
	lsl		r0, r0, #0x1a
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08050eae
	add		r0, #0x3f
_08050eae:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	str		r0, [r2, #0x8]
	b		_08050f14

.incbin "base.gba", 0x50EC2, 0x2

_08050ec4:	.4byte 0x08101068

_08050ec8:
	mov		r0, #0xf1
	str		r0, [r2, #0x60]
	ldrh	r1, [r2, #0x34]
	ldr		r0, _08050ef8
	and		r0, r1
	strh	r0, [r2, #0x34]
	ldr		r1, _08050efc
	add		r0, r2, #0x0
	add		r0, #0x58
	strh	r1, [r0, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0xa
	str		r0, [r2, #0x30]
_08050ee2:
	ldr		r0, [r2, #0x8]
	ldr		r1, [r2, #0x30]
	add		r0, r0, r1
	str		r0, [r2, #0x8]
	cmp		r0, #0x0
	blt		_08050f04
	ldr		r3, _08050f00
	add		r0, r1, r3
	str		r0, [r2, #0x30]
	b		_08050f14

.incbin "base.gba", 0x50EF6, 0x2

_08050ef8:	.4byte 0x0000FFFD
_08050efc:	.4byte 0xFFFFFF00
_08050f00:	.4byte 0xFFFFC000

_08050f04:
	mov		r0, #0xf3
	str		r0, [r2, #0x60]
	mov		r0, #0x0
	str		r0, [r2, #0x18]
	ldrh	r1, [r2, #0x34]
	ldr		r0, _08050f18
	and		r0, r1
	strh	r0, [r2, #0x34]
_08050f14:
	bx		lr

.incbin "base.gba", 0x50F16, 0x2

_08050f18:	.4byte 0x0000FFFE
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldrh	r0, [r2, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_08050f5a
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08050f5a
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_08050f4c
	mov		r0, #0xf0
	b		_08050f58
_08050f4c:
	ldr		r0, [r3, #0x60]
	mov		r1, #0xf0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08050f5a
	mov		r0, #0x10
_08050f58:
	str		r0, [r3, #0x60]
_08050f5a:
	bx		lr
	thumb_func_end sub_08050d2c

	thumb_func_start sub_08050f5c
sub_08050f5c:
	add		r2, r0, #0x0
	ldr		r0, _08050fa0
	mov		r1, #0x0
	strh	r0, [r2, #0x10]
	mov		r0, #0x8
	strb	r0, [r2, #0xe]
	strb	r0, [r2, #0xd]
	strb	r0, [r2, #0xc]
	ldr		r0, _08050fa4
	str		r0, [r2, #0x18]
	ldr		r0, _08050fa8
	str		r0, [r2, #0x5c]
	ldr		r0, _08050fac
	str		r0, [r2, #0x4c]
	str		r1, [r2, #0x60]
	str		r1, [r2, #0x64]
	str		r1, [r2, #0x68]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	strh	r0, [r2, #0x26]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r2, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	ldrh	r0, [r2, #0x34]
	mov		r1, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r2, #0x34]
	bx		lr

_08050fa0:	.4byte 0x0000100D
_08050fa4:	.4byte 0x0805107d
_08050fa8:	.4byte 0x08050fb1
_08050fac:	.4byte 0x0810b454
	add		r2, r0, #0x0
	ldr		r3, [r2, #0x60]
	cmp		r3, #0xf0
	beq		_08051028
	cmp		r3, #0xf0
	bgt		_08050fc6
	cmp		r3, #0x0
	beq		_08050fd0
	cmp		r3, #0x1
	beq		_08050fe2
	b		_08051074
_08050fc6:
	cmp		r3, #0xf2
	beq		_08051064
	cmp		r3, #0xf2
	blt		_08051042
	b		_08051074
_08050fd0:
	mov		r0, #0x1
	str		r0, [r2, #0x60]
	ldrh	r1, [r2, #0x34]
	mov		r0, #0x2
	orr		r0, r1
	strh	r0, [r2, #0x34]
	ldr		r0, _08051004
	str		r0, [r2, #0x4c]
	str		r3, [r2, #0x8]
_08050fe2:
	ldr		r0, _08051008
	ldr		r1, _0805100c
	add		r0, r0, r1
	mov		r3, #0x26
	ldrsh	r1, [r2, r3]
	mov		r3, #0x14
	ldrsh	r0, [r0, r3]
	sub		r1, r1, r0
	ldr		r0, _08051010
	and		r1, r0
	ldr		r0, _08051014
	cmp		r1, r0
	bgt		_08051018
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	b		_0805101a

.incbin "base.gba", 0x51002, 0x2

_08051004:	.4byte 0x0810b454
_08051008:	.4byte RunGameLogic_CallBack
_0805100c:	.4byte 0x00000848
_08051010:	.4byte 0x0000FFFF
_08051014:	.4byte 0x00007FFF

_08051018:
	ldr		r1, _08051024
_0805101a:
	add		r0, r2, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	b		_08051074

.incbin "base.gba", 0x51022, 0x2

_08051024:	.4byte 0xFFFFFF00

_08051028:
	mov		r0, #0xf1
	str		r0, [r2, #0x60]
	ldrh	r1, [r2, #0x34]
	ldr		r0, _08051058
	and		r0, r1
	strh	r0, [r2, #0x34]
	ldr		r1, _0805105c
	add		r0, r2, #0x0
	add		r0, #0x58
	strh	r1, [r0, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0xa
	str		r0, [r2, #0x30]
_08051042:
	ldr		r0, [r2, #0x8]
	ldr		r1, [r2, #0x30]
	add		r0, r0, r1
	str		r0, [r2, #0x8]
	cmp		r0, #0x0
	blt		_08051064
	ldr		r3, _08051060
	add		r0, r1, r3
	str		r0, [r2, #0x30]
	b		_08051074

.incbin "base.gba", 0x51056, 0x2

_08051058:	.4byte 0x0000FFFD
_0805105c:	.4byte 0xFFFFFF00
_08051060:	.4byte 0xFFFFC000

_08051064:
	mov		r0, #0xf3
	str		r0, [r2, #0x60]
	mov		r0, #0x0
	str		r0, [r2, #0x18]
	ldrh	r1, [r2, #0x34]
	ldr		r0, _08051078
	and		r0, r1
	strh	r0, [r2, #0x34]
_08051074:
	bx		lr

.incbin "base.gba", 0x51076, 0x2

_08051078:	.4byte 0x0000FFFE
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldrh	r0, [r2, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_080510ac
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_080510ac
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_080510ac
	mov		r0, #0xf0
	str		r0, [r3, #0x60]
_080510ac:
	bx		lr

.incbin "base.gba", 0x510AE, 0x4A
	bx		lr

.incbin "base.gba", 0x510FA, 0x2
	add		r2, r0, #0x0
	ldr		r0, _08051120
	ldr		r1, _08051124
	add		r0, r0, r1
	mov		r3, #0x26
	ldrsh	r1, [r2, r3]
	mov		r3, #0x14
	ldrsh	r0, [r0, r3]
	sub		r1, r1, r0
	ldr		r0, _08051128
	and		r1, r0
	ldr		r0, _0805112c
	cmp		r1, r0
	bgt		_08051130
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	b		_08051132

.incbin "base.gba", 0x5111E, 0x2

_08051120:	.4byte RunGameLogic_CallBack
_08051124:	.4byte 0x00000848
_08051128:	.4byte 0x0000FFFF
_0805112c:	.4byte 0x00007FFF

_08051130:
	ldr		r1, _0805113c
_08051132:
	add		r0, r2, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x5113A, 0x2

_0805113c:	.4byte 0xFFFFFF00

.incbin "base.gba", 0x51140, 0x48
	bx		lr

.incbin "base.gba", 0x5118A, 0x2
	add		r2, r0, #0x0
	ldr		r0, _080511b0
	ldr		r1, _080511b4
	add		r0, r0, r1
	mov		r3, #0x26
	ldrsh	r1, [r2, r3]
	mov		r3, #0x14
	ldrsh	r0, [r0, r3]
	sub		r1, r1, r0
	ldr		r0, _080511b8
	and		r1, r0
	ldr		r0, _080511bc
	cmp		r1, r0
	bgt		_080511c0
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	b		_080511c2

.incbin "base.gba", 0x511AE, 0x2

_080511b0:	.4byte RunGameLogic_CallBack
_080511b4:	.4byte 0x00000848
_080511b8:	.4byte 0x0000FFFF
_080511bc:	.4byte 0x00007FFF

_080511c0:
	ldr		r1, _080511cc
_080511c2:
	add		r0, r2, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x511CA, 0x2

_080511cc:	.4byte 0xFFFFFF00
	thumb_func_end sub_08050f5c

	thumb_func_start sub_080511d0
sub_080511d0:
	add		r2, r0, #0x0
	ldr		r0, _08051230
	strh	r0, [r2, #0x10]
	mov		r0, #0x20
	strb	r0, [r2, #0xe]
	strb	r0, [r2, #0xd]
	strb	r0, [r2, #0xc]
	ldr		r0, _08051234
	str		r0, [r2, #0x5c]
	ldr		r1, [r2, #0x50]
	mov		r0, #0x8f
	lsl		r0, r0, #0x10
	cmp		r1, r0
	blt		_080511fe
	add		r0, #0x1
	cmp		r1, r0
	bgt		_080511fe
	ldr		r0, _08051238
	str		r0, [r2, #0x4c]
	mov		r0, #0x1
	str		r0, [r2, #0x60]
	mov		r0, #0x0
	str		r0, [r2, #0x64]
_080511fe:
	ldr		r0, _0805123c
	str		r0, [r2, #0x4c]
	mov		r0, #0x1
	str		r0, [r2, #0x60]
	mov		r0, #0x20
	str		r0, [r2, #0x64]
	mov		r0, #0x0
	str		r0, [r2, #0x68]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r2, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	ldrh	r1, [r2, #0x34]
	mov		r0, #0x1
	orr		r0, r1
	ldr		r1, _08051240
	and		r0, r1
	strh	r0, [r2, #0x34]
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	str		r0, [r2, #0x8]
	bx		lr

_08051230:	.4byte 0x00001010
_08051234:	.4byte sub_08051244
_08051238:	.4byte 0x0810b4f4
_0805123c:	.4byte 0x0810b574
_08051240:	.4byte 0x0000FFFD
	thumb_func_end sub_080511d0

	thumb_func_start sub_08051244
sub_08051244:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x60]
	cmp		r0, #0x1
	bne		_08051250
	b		_080513c0
_08051250:
	cmp		r0, #0x1
	bgt		_0805125e
	cmp		r0, #0x0
	bne		_0805125a
	b		_0805139c
_0805125a:
	ldr		r5, [r4, #0x50]
	b		_080513d0
_0805125e:
	cmp		r0, #0x10
	beq		_0805126a
	cmp		r0, #0x11
	beq		_08051272
	ldr		r5, [r4, #0x50]
	b		_080513d0
_0805126a:
	mov		r0, #0x11
	str		r0, [r4, #0x60]
	mov		r0, #0x0
	str		r0, [r4, #0x64]
_08051272:
	ldr		r3, [r4, #0x64]
	cmp		r3, #0xaa
	beq		_0805131c
	cmp		r3, #0xaa
	bgt		_080512b8
	cmp		r3, #0x5e
	beq		_08051338
	cmp		r3, #0x5e
	bgt		_0805129c
	cmp		r3, #0x3c
	beq		_08051338
	cmp		r3, #0x3c
	bgt		_08051294
	cmp		r3, #0x0
	beq		_0805135c
	ldr		r5, [r4, #0x50]
	b		_08051388
_08051294:
	cmp		r3, #0x40
	beq		_08051364
	ldr		r5, [r4, #0x50]
	b		_08051388
_0805129c:
	cmp		r3, #0x9e
	beq		_08051338
	cmp		r3, #0x9e
	bgt		_080512ac
	cmp		r3, #0x62
	beq		_08051364
	ldr		r5, [r4, #0x50]
	b		_08051388
_080512ac:
	cmp		r3, #0xa2
	beq		_08051364
	cmp		r3, #0xa6
	beq		_08051338
	ldr		r5, [r4, #0x50]
	b		_08051388
_080512b8:
	ldr		r5, [r4, #0x50]
	cmp		r3, #0xd2
	beq		_08051388
	cmp		r3, #0xd2
	ble		_08051388
	cmp		r3, #0xde
	beq		_08051388
	cmp		r3, #0xde
	ble		_08051388
	cmp		r3, #0xe2
	beq		_080512d4
	cmp		r3, #0xea
	beq		_080512f4
	b		_08051388
_080512d4:
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r5
	mov		r1, #0x8f
	lsl		r1, r1, #0x10
	cmp		r0, r1
	bne		_080512ec
	ldr		r0, _080512e8
	b		_08051386

.incbin "base.gba", 0x512E6, 0x2

_080512e8:	.4byte 0x0810b534

_080512ec:
	ldr		r0, _080512f0
	b		_08051386

_080512f0:	.4byte 0x0810b5b4

_080512f4:
	ldrh	r1, [r4, #0x34]
	mov		r0, #0x2
	orr		r0, r1
	strh	r0, [r4, #0x34]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r5
	mov		r1, #0x8f
	lsl		r1, r1, #0x10
	cmp		r0, r1
	bne		_08051314
	ldr		r0, _08051310
	b		_08051386

.incbin "base.gba", 0x5130E, 0x2

_08051310:	.4byte 0x0810b554

_08051314:
	ldr		r0, _08051318
	b		_08051386

_08051318:	.4byte 0x0810b5d4

_0805131c:
	ldr		r0, [r4, #0x50]
	mov		r1, #0x2
	neg		r1, r1
	and		r1, r0
	mov		r2, #0x8f
	lsl		r2, r2, #0x10
	add		r5, r0, #0x0
	cmp		r1, r2
	bne		_08051384
	ldr		r0, _08051334
	b		_08051386

.incbin "base.gba", 0x51332, 0x2

_08051334:	.4byte 0x0810b4f4

_08051338:
	ldr		r0, [r4, #0x50]
	mov		r1, #0x2
	neg		r1, r1
	and		r1, r0
	mov		r2, #0x8f
	lsl		r2, r2, #0x10
	add		r5, r0, #0x0
	cmp		r1, r2
	bne		_08051354
	ldr		r0, _08051350
	b		_08051386

.incbin "base.gba", 0x5134E, 0x2

_08051350:	.4byte 0x0810b514

_08051354:
	ldr		r0, _08051358
	b		_08051386

_08051358:	.4byte 0x0810b594

_0805135c:
	ldrh	r1, [r4, #0x34]
	ldr		r0, _0805137c
	and		r0, r1
	strh	r0, [r4, #0x34]
_08051364:
	ldr		r0, [r4, #0x50]
	mov		r1, #0x2
	neg		r1, r1
	and		r1, r0
	mov		r2, #0x8f
	lsl		r2, r2, #0x10
	add		r5, r0, #0x0
	cmp		r1, r2
	bne		_08051384
	ldr		r0, _08051380
	b		_08051386

.incbin "base.gba", 0x5137A, 0x2

_0805137c:	.4byte 0x0000FFFD
_08051380:	.4byte 0x0810b4f4

_08051384:
	ldr		r0, _08051398
_08051386:
	str		r0, [r4, #0x4c]
_08051388:
	add		r0, r3, #0x1
	str		r0, [r4, #0x64]
	cmp		r0, #0xf1
	ble		_080513d0
	mov		r0, #0x0
	str		r0, [r4, #0x64]
	b		_080513d0

.incbin "base.gba", 0x51396, 0x2

_08051398:	.4byte 0x0810b574

_0805139c:
	mov		r0, #0x1
	str		r0, [r4, #0x60]
	ldr		r0, [r4, #0x50]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	mov		r1, #0x8f
	lsl		r1, r1, #0x10
	cmp		r0, r1
	bne		_080513b8
	ldr		r0, _080513b4
	b		_080513ba

_080513b4:	.4byte 0x0810b4f4

_080513b8:
	ldr		r0, _08051400
_080513ba:
	str		r0, [r4, #0x4c]
	mov		r0, #0x20
	str		r0, [r4, #0x64]
_080513c0:
	ldr		r0, [r4, #0x64]
	sub		r0, #0x1
	str		r0, [r4, #0x64]
	ldr		r5, [r4, #0x50]
	cmp		r0, #0x0
	bge		_080513d0
	mov		r0, #0x10
	str		r0, [r4, #0x60]
_080513d0:
	mov		r0, #0x1
	and		r0, r5
	cmp		r0, #0x0
	beq		_080513da
	b		_080514c0
_080513da:
	ldr		r0, [r4, #0x60]
	mov		r1, #0xf0
	and		r0, r1
	cmp		r0, #0x10
	bne		_080514c0
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r5
	mov		r1, #0x8f
	lsl		r1, r1, #0x10
	cmp		r0, r1
	bne		_08051404
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x22
	b		_0805140e

.incbin "base.gba", 0x513FE, 0x2

_08051400:	.4byte 0x0810b574

_08051404:
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x42
_0805140e:
	ldr		r0, [r4, #0x68]
	cmp		r0, #0xaa
	beq		_0805145c
	cmp		r0, #0xaa
	bgt		_0805142e
	cmp		r0, #0x5e
	beq		_080514ac
	cmp		r0, #0x5e
	bgt		_080514ac
	cmp		r0, #0x3c
	beq		_080514ac
	cmp		r0, #0x3c
	bgt		_080514ac
	cmp		r0, #0x0
	beq		_080514a4
	b		_080514ac
_0805142e:
	cmp		r0, #0xd2
	beq		_08051484
	cmp		r0, #0xd2
	bgt		_0805144e
	cmp		r0, #0xba
	beq		_0805146c
	cmp		r0, #0xba
	bgt		_08051444
	cmp		r0, #0xb2
	beq		_08051464
	b		_080514ac
_08051444:
	cmp		r0, #0xc2
	beq		_08051474
	cmp		r0, #0xca
	beq		_0805147c
	b		_080514ac
_0805144e:
	cmp		r0, #0xde
	beq		_08051494
	cmp		r0, #0xde
	bgt		_080514ac
	cmp		r0, #0xda
	beq		_0805148c
	b		_080514ac
_0805145c:
	ldr		r0, _08051460
	b		_08051496

_08051460:	.4byte 0x080924ee

_08051464:
	ldr		r0, _08051468
	b		_08051496

_08051468:	.4byte 0x080924f8

_0805146c:
	ldr		r0, _08051470
	b		_08051496

_08051470:	.4byte 0x08092502

_08051474:
	ldr		r0, _08051478
	b		_08051496

_08051478:	.4byte 0x0809250c

_0805147c:
	ldr		r0, _08051480
	b		_08051496

_08051480:	.4byte 0x08092516

_08051484:
	ldr		r0, _08051488
	b		_08051496

_08051488:	.4byte 0x08092520

_0805148c:
	ldr		r0, _08051490
	b		_08051496

_08051490:	.4byte 0x0809252a

_08051494:
	ldr		r0, _080514a0
_08051496:
	mov		r2, #0x5
	bl		sub_08071b6c
	b		_080514ac

.incbin "base.gba", 0x5149E, 0x2

_080514a0:	.4byte 0x08092534

_080514a4:
	ldr		r0, _080514c8
	mov		r2, #0x5
	bl		sub_08071b6c
_080514ac:
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r0, [r4, #0x68]
	add		r0, #0x1
	str		r0, [r4, #0x68]
	cmp		r0, #0xf1
	ble		_080514c0
	mov		r0, #0x0
	str		r0, [r4, #0x68]
_080514c0:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x514C6, 0x2

_080514c8:	.4byte 0x080924ee
	thumb_func_end sub_08051244

	thumb_func_start sub_080514cc
sub_080514cc:
	add		r3, r0, #0x0
	ldr		r0, _08051524
	mov		r2, #0x0
	strh	r0, [r3, #0x10]
	mov		r0, #0x8
	strb	r0, [r3, #0xe]
	strb	r0, [r3, #0xd]
	strb	r0, [r3, #0xc]
	ldr		r0, _08051528
	str		r0, [r3, #0x4c]
	ldrh	r1, [r3, #0x34]
	ldr		r0, _0805152c
	and		r0, r1
	ldr		r1, _08051530
	and		r0, r1
	strh	r0, [r3, #0x34]
	mov		r1, #0xe0
	add		r0, r3, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r1, r3, #0x0
	add		r1, #0x60
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	str		r0, [r3, #0x68]
	ldr		r0, _08051534
	str		r0, [r3, #0x5c]
	add		r0, r3, #0x0
	add		r0, #0x62
	strh	r2, [r0, #0x0]
	ldr		r0, [r3, #0x50]
	ldr		r1, _08051538
	add		r0, r0, r1
	cmp		r0, #0x5
	bhi		_08051598
	lsl		r0, r0, #0x2
	ldr		r1, _0805153c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x51522, 0x2

_08051524:	.4byte 0x00001011
_08051528:	.4byte 0x0810b614
_0805152c:	.4byte 0x0000FFFE
_08051530:	.4byte 0x0000FFFD
_08051534:	.4byte 0x080515A9
_08051538:	.4byte 0xFF690000
_0805153c:	.4byte 0x08051540
_08051540:	.4byte 0x08051598

.incbin "base.gba", 0x51544, 0x14
	thumb_func_end sub_080514cc


.incbin "base.gba", 0x51558, 0x40

_08051598:

.incbin "base.gba", 0x51598, 0x10
	thumb_func_start sub_080515a8
sub_080515a8:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	add		r0, #0x60
	ldrb	r2, [r0, #0x0]
	add		r0, #0x2
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	sub		r4, r0, #0x1
	cmp		r4, #0x0
	bge		_080515c6
	add		r2, #0x1
	cmp		r2, #0x5
	ble		_080515c6
	mov		r2, #0x0
	mov		r4, #0x0
_080515c6:
	add		r1, r3, #0x0
	add		r1, #0x60
	strb	r2, [r1, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x62
	strh	r4, [r0, #0x0]
	add		r4, r1, #0x0
	add		r5, r0, #0x0
	cmp		r2, #0x5
	bls		_080515dc
	b		_080517dc
_080515dc:
	lsl		r0, r2, #0x2
	ldr		r1, _080515e8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x515E6, 0x2

_080515e8:	.4byte 0x080515ec
_080515ec:	.4byte 0x08051604

.incbin "base.gba", 0x515F0, 0x14

_08051604:
	mov		r0, #0x1
	strb	r0, [r4, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x64
	ldrh	r0, [r0, #0x0]
	strh	r0, [r5, #0x0]
	mov		r0, #0x8
	strb	r0, [r3, #0xe]
	strb	r0, [r3, #0xd]
	strb	r0, [r3, #0xc]
	ldrh	r1, [r3, #0x34]
	ldr		r0, _08051628
	and		r0, r1
	ldr		r1, _0805162c
	and		r0, r1
	strh	r0, [r3, #0x34]
	b		_080517dc

.incbin "base.gba", 0x51626, 0x2

_08051628:	.4byte 0x0000FFFE
_0805162c:	.4byte 0x0000FFFD

.incbin "base.gba", 0x51630, 0x30
	thumb_func_end sub_080515a8


.incbin "base.gba", 0x51660, 0x100
_08051760:	.4byte 0x080517d0

.incbin "base.gba", 0x51764, 0x78

_080517dc:

.incbin "base.gba", 0x517DC, 0x14
	thumb_func_start sub_080517f0
sub_080517f0:
	add		r2, r0, #0x0
	ldr		r0, _08051830
	mov		r1, #0x0
	strh	r0, [r2, #0x10]
	mov		r0, #0x8
	strb	r0, [r2, #0xe]
	strb	r0, [r2, #0xd]
	strb	r0, [r2, #0xc]
	ldr		r0, _08051834
	str		r0, [r2, #0x18]
	ldr		r0, _08051838
	str		r0, [r2, #0x5c]
	ldr		r0, _0805183c
	str		r0, [r2, #0x4c]
	mov		r0, #0x11
	str		r0, [r2, #0x60]
	str		r1, [r2, #0x64]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r2, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	ldrh	r0, [r2, #0x34]
	mov		r1, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r2, #0x34]
	bx		lr

.incbin "base.gba", 0x5182E, 0x2

_08051830:	.4byte 0x00001012
_08051834:	.4byte 0x08051a61
_08051838:	.4byte 0x08051841
_0805183c:	.4byte 0x0810b274
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x60]
	cmp		r0, #0x31
	bls		_0805184a
	b		_08051a5c
_0805184a:
	lsl		r0, r0, #0x2
	ldr		r1, _08051854
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08051854:	.4byte 0x08051858
_08051858:	.4byte 0x08051a58

.incbin "base.gba", 0x5185C, 0xC4
	thumb_func_end sub_080517f0


.incbin "base.gba", 0x51920, 0x28
_08051948:	.4byte 0x080519d4

.incbin "base.gba", 0x5194C, 0x110

_08051a5c:

.incbin "base.gba", 0x51A5C, 0x44
_08051aa0:	.4byte RunGameLogic_CallBack
_08051aa4:	.4byte 0x00000C12

_08051aa8:

.incbin "base.gba", 0x51AA8, 0x4
_08051aac:

.incbin "base.gba", 0x51AAC, 0x2
_08051aae:

.incbin "base.gba", 0x51AAE, 0x2
_08051ab0:

.incbin "base.gba", 0x51AB0, 0x4
	thumb_func_start sub_08051ab4
sub_08051ab4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _08051b20
	strh	r0, [r4, #0x10]
	mov		r0, #0x8
	strb	r0, [r4, #0xe]
	strb	r0, [r4, #0xd]
	strb	r0, [r4, #0xc]
	ldr		r0, _08051b24
	str		r0, [r4, #0x18]
	ldr		r0, _08051b28
	str		r0, [r4, #0x5c]
	ldr		r0, _08051b2c
	str		r0, [r4, #0x4c]
	mov		r0, #0x10
	str		r0, [r4, #0x60]
	bl		sub_080270d0
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r1, #0xfc
	lsl		r1, r1, #0x8
	and		r0, r1
	str		r0, [r4, #0x64]
	mov		r0, #0x80
	lsl		r0, r0, #0xc
	str		r0, [r4, #0x68]
	bl		sub_080270d0
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r1, #0x58
	bl		sub_0807d8d8
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	str		r0, [r4, #0x6c]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	ldrh	r0, [r4, #0x34]
	mov		r1, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r4, #0x34]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x51B1E, 0x2

_08051b20:	.4byte 0x00001014
_08051b24:	.4byte 0x08051d9d
_08051b28:	.4byte 0x08051b31
_08051b2c:	.4byte 0x0810b6f4
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x60]
	cmp		r0, #0xf0
	bne		_08051b3a
	b		_08051d48
_08051b3a:
	cmp		r0, #0xf0
	bgt		_08051b48
	cmp		r0, #0x10
	beq		_08051b56
	cmp		r0, #0x11
	beq		_08051b5a
	b		_08051d94
_08051b48:
	cmp		r0, #0xf2
	bne		_08051b4e
	b		_08051d84
_08051b4e:
	cmp		r0, #0xf2
	bge		_08051b54
	b		_08051d62
_08051b54:
	b		_08051d94
_08051b56:
	mov		r0, #0x11
	str		r0, [r2, #0x60]
_08051b5a:
	ldr		r3, [r2, #0x64]
	ldr		r1, _08051b98
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08051b68
	add		r0, #0x3f
_08051b68:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	ldr		r1, [r2, #0x68]
	add		r0, r0, r1
	str		r0, [r2, #0x8]
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	add		r0, r3, r1
	str		r0, [r2, #0x64]
	ldr		r3, [r2, #0x6c]
	cmp		r3, #0x57
	bls		_08051b8c
	b		_08051d30
_08051b8c:
	lsl		r0, r3, #0x2
	ldr		r1, _08051b9c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x51B96, 0x2

_08051b98:	.4byte 0x08101068
_08051b9c:	.4byte 0x08051ba0
_08051ba0:	.4byte 0x08051d00

.incbin "base.gba", 0x51BA4, 0x15C
	thumb_func_end sub_08051ab4


.incbin "base.gba", 0x51D00, 0x30

_08051d30:

.incbin "base.gba", 0x51D30, 0x14
_08051d44:	.4byte 0x0810b7b4

_08051d48:

.incbin "base.gba", 0x51D48, 0x1A
_08051d62:

.incbin "base.gba", 0x51D62, 0x16
_08051d78:	.4byte 0x0000FFFD
_08051d7c:	.4byte 0xFFFFFF00
_08051d80:	.4byte 0xFFFFC000

_08051d84:

.incbin "base.gba", 0x51D84, 0x10
_08051d94:

.incbin "base.gba", 0x51D94, 0x4
_08051d98:	.4byte 0x0000FFFE

.incbin "base.gba", 0x51D9C, 0x30

_08051dcc:

.incbin "base.gba", 0x51DCC, 0x4
	thumb_func_start sub_08051dd0
sub_08051dd0:
	add		r2, r0, #0x0
	ldr		r0, _08051e14
	mov		r3, #0x0
	strh	r0, [r2, #0x10]
	ldr		r0, _08051e18
	str		r0, [r2, #0x5c]
	ldr		r0, _08051e1c
	str		r0, [r2, #0x18]
	ldr		r0, _08051e20
	str		r0, [r2, #0x4c]
	add		r0, r2, #0x0
	add		r0, #0x60
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	ldrh	r1, [r2, #0x34]
	mov		r0, #0x2
	orr		r0, r1
	strh	r0, [r2, #0x34]
	ldr		r1, [r2, #0x50]
	ldr		r0, _08051e24
	cmp		r1, r0
	beq		_08051e30
	ldr		r0, _08051e28
	cmp		r1, r0
	bne		_08051e3c
	ldr		r0, _08051e2c
	str		r0, [r2, #0x5c]
	str		r3, [r2, #0x28]
	b		_08051e40

_08051e14:	.4byte 0x00001015
_08051e18:	.4byte 0x08051EBD
_08051e1c:	.4byte 0x080520fd
_08051e20:	.4byte 0x0810add4
_08051e24:	.4byte 0x008E0001
_08051e28:	.4byte 0x008E8001
_08051e2c:	.4byte sub_08052054

_08051e30:
	str		r3, [r2, #0x28]
	ldr		r0, _08051e38
	str		r0, [r2, #0x2c]
	b		_08051e42

_08051e38:	.4byte 0xFFFF8000

_08051e3c:
	ldr		r0, _08051e44
	str		r0, [r2, #0x28]
_08051e40:
	str		r3, [r2, #0x2c]
_08051e42:
	bx		lr

_08051e44:	.4byte 0xFFFF8000
	thumb_func_end sub_08051dd0

	thumb_func_start sub_08051e48
sub_08051e48:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	ldr		r0, _08051ea4
	ldr		r1, _08051ea8
	add		r0, r0, r1
	ldr		r5, _08051eac
	mov		r1, #0x14
	ldrsh	r2, [r0, r1]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08051e62
	add		r0, #0x3f
_08051e62:
	asr		r3, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _08051eb0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r4, [r0, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r3, [r0, #0x0]
	add		r0, r6, #0x0
	cmp		r0, #0x0
	bge		_08051e86
	add		r0, #0xff
_08051e86:
	asr		r0, r0, #0x8
	add		r2, r0, #0x0
	mul		r2, r4
	add		r1, r7, #0x0
	cmp		r1, #0x0
	bge		_08051e94
	add		r1, #0xff
_08051e94:
	asr		r0, r1, #0x8
	mul		r0, r3
	sub		r0, r2, r0
	cmp		r0, #0x0
	bge		_08051eb4
	mov		r0, #0x0
	b		_08051eb6

.incbin "base.gba", 0x51EA2, 0x2

_08051ea4:	.4byte RunGameLogic_CallBack
_08051ea8:	.4byte 0x00000848
_08051eac:	.4byte 0x08101068
_08051eb0:	.4byte 0x000003FF

_08051eb4:
	mov		r0, #0x1
_08051eb6:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08051e48

	thumb_func_start sub_08051ebc
sub_08051ebc:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r0, #0x64
	mov		r1, #0x0
	ldrsh	r4, [r0, r1]
	add		r6, r5, #0x0
	ldr		r0, [r5, #0x28]
	ldr		r1, [r5, #0x2c]
	neg		r1, r1
	bl		sub_08051e48
	cmp		r0, #0x0
	beq		_08051ee0
	ldr		r1, _08051edc
	b		_08051ee4

.incbin "base.gba", 0x51EDA, 0x2

_08051edc:	.4byte 0xFFFFFF00

_08051ee0:
	mov		r1, #0x80
	lsl		r1, r1, #0x1
_08051ee4:
	add		r0, r5, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r2, r0, #0x0
	ldrh	r1, [r6, #0x34]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_08051ef8
	b		_08052016
_08051ef8:
	mov		r0, #0x9b
	lsl		r0, r0, #0x1
	cmp		r4, r0
	bgt		_08051f20
	cmp		r4, #0xfb
	bge		_08051ffc
	cmp		r4, #0xd2
	bgt		_08051f1a
	cmp		r4, #0xbf
	bge		_08051ff4
	cmp		r4, #0x96
	bgt		_08051fe8
	cmp		r4, #0x1
	bge		_08051f64
	cmp		r4, #0x0
	beq		_08051f58
	b		_08051ffc
_08051f1a:
	cmp		r4, #0xe6
	ble		_08051ffc
	b		_08051ff4
_08051f20:
	mov		r0, #0x82
	lsl		r0, r0, #0x2
	cmp		r4, r0
	bgt		_08051f48
	sub		r0, #0x13
	cmp		r4, r0
	bge		_08051ff4
	sub		r0, #0x29
	cmp		r4, r0
	bgt		_08051fe8
	sub		r0, #0x94
	cmp		r4, r0
	bge		_08051fa2
	ldr		r0, [r5, #0x28]
	neg		r0, r0
	str		r0, [r5, #0x28]
	ldr		r0, [r5, #0x2c]
	neg		r0, r0
	str		r0, [r5, #0x2c]
	b		_08051fa2
_08051f48:
	mov		r0, #0x8c
	lsl		r0, r0, #0x2
	cmp		r4, r0
	bgt		_08051ffc
	sub		r0, #0x13
	cmp		r4, r0
	bge		_08051ff4
	b		_08051ffc
_08051f58:
	ldr		r0, [r5, #0x28]
	neg		r0, r0
	str		r0, [r5, #0x28]
	ldr		r0, [r5, #0x2c]
	neg		r0, r0
	str		r0, [r5, #0x2c]
_08051f64:
	ldr		r0, [r6, #0x0]
	ldr		r1, [r5, #0x28]
	add		r0, r0, r1
	str		r0, [r6, #0x0]
	ldr		r0, [r6, #0x4]
	ldr		r1, [r5, #0x2c]
	add		r0, r0, r1
	str		r0, [r6, #0x4]
	add		r1, r5, #0x0
	add		r1, #0x62
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0xa
	blt		_08051ffc
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r2, r5, #0x0
	add		r2, #0x60
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	mov		r1, #0x1
	and		r0, r1
	strh	r0, [r2, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	cmp		r0, #0x0
	beq		_08051fde
	b		_08051fe8
_08051fa2:
	ldr		r0, [r6, #0x0]
	ldr		r1, [r5, #0x28]
	add		r0, r0, r1
	str		r0, [r6, #0x0]
	ldr		r0, [r6, #0x4]
	ldr		r1, [r5, #0x2c]
	add		r0, r0, r1
	str		r0, [r6, #0x4]
	add		r1, r5, #0x0
	add		r1, #0x62
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0xa
	blt		_08051ffc
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r2, r5, #0x0
	add		r2, #0x60
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	mov		r1, #0x1
	and		r0, r1
	strh	r0, [r2, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	cmp		r0, #0x0
	bne		_08051fe8
_08051fde:
	ldr		r0, _08051fe4
	str		r0, [r5, #0x4c]
	b		_08051ffc

_08051fe4:	.4byte 0x0810add4

_08051fe8:
	ldr		r0, _08051ff0
	str		r0, [r5, #0x4c]
	b		_08051ffc

.incbin "base.gba", 0x51FEE, 0x2

_08051ff0:	.4byte 0x0810adf4

_08051ff4:
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	neg		r0, r0
	strh	r0, [r2, #0x0]
_08051ffc:
	add		r2, r5, #0x0
	add		r2, #0x64
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	strh	r0, [r2, #0x0]
	lsl		r0, r0, #0x10
	mov		r1, #0x9b
	lsl		r1, r1, #0x12
	cmp		r0, r1
	ble		_08052046
	mov		r0, #0x0
	strh	r0, [r2, #0x0]
	b		_08052046
_08052016:
	mov		r0, #0x1
	and		r1, r0
	cmp		r1, #0x0
	beq		_08052046
	ldr		r1, _0805204c
	lsl		r0, r4, #0x6
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	str		r0, [r6, #0x8]
	add		r1, r5, #0x0
	add		r1, #0x64
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08052046
	ldrh	r1, [r5, #0x34]
	ldr		r0, _08052050
	and		r0, r1
	strh	r0, [r5, #0x34]
_08052046:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0805204c:	.4byte 0x08101068
_08052050:	.4byte 0x0000FFFE
	thumb_func_end sub_08051ebc

	thumb_func_start sub_08052054
sub_08052054:
	push	{ r4, r5, r6, lr }
	add		r2, r0, #0x0
	add		r0, #0x64
	mov		r1, #0x0
	ldrsh	r4, [r0, r1]
	ldrh	r3, [r2, #0x34]
	mov		r0, #0x2
	and		r0, r3
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	cmp		r5, #0x0
	beq		_080520bc
	add		r4, #0x1
	add		r3, r2, #0x0
	add		r3, #0x66
	mov		r5, #0x0
	ldrsh	r0, [r3, r5]
	cmp		r0, #0x0
	bne		_08052094
	ldr		r0, _08052090
	str		r0, [r2, #0x4c]
	cmp		r4, #0x3b
	ble		_080520e2
	mov		r0, #0x1
	strh	r0, [r3, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0xa
	str		r0, [r2, #0x30]
	b		_080520e2

.incbin "base.gba", 0x5208E, 0x2

_08052090:	.4byte 0x0810adf4

_08052094:
	ldr		r0, _080520b4
	str		r0, [r2, #0x4c]
	ldr		r1, [r2, #0x8]
	ldr		r0, [r2, #0x30]
	add		r1, r1, r0
	str		r1, [r2, #0x8]
	ldr		r6, _080520b8
	add		r0, r0, r6
	str		r0, [r2, #0x30]
	cmp		r1, #0x0
	bgt		_080520e2
	mov		r0, #0x0
	str		r0, [r2, #0x8]
	strh	r0, [r3, #0x0]
	mov		r4, #0x0
	b		_080520e2

_080520b4:	.4byte 0x0810add4
_080520b8:	.4byte 0xFFFFC000

_080520bc:
	mov		r0, #0x1
	and		r0, r3
	cmp		r0, #0x0
	beq		_080520e2
	ldr		r0, _080520f0
	str		r0, [r2, #0x4c]
	ldr		r1, [r2, #0x8]
	ldr		r0, [r2, #0x30]
	add		r1, r1, r0
	str		r1, [r2, #0x8]
	ldr		r6, _080520f4
	add		r0, r0, r6
	str		r0, [r2, #0x30]
	cmp		r1, #0x0
	bgt		_080520e2
	ldr		r0, _080520f8
	and		r3, r0
	strh	r3, [r2, #0x34]
	str		r5, [r2, #0x8]
_080520e2:
	add		r0, r2, #0x0
	add		r0, #0x64
	strh	r4, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x520EE, 0x2

_080520f0:	.4byte 0x0810add4
_080520f4:	.4byte 0xFFFFC000
_080520f8:	.4byte 0x0000FFFE
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldrh	r0, [r2, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_08052146
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08052146
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_08052146
	add		r1, r3, #0x0
	add		r1, #0x64
	mov		r0, #0x20
	strh	r0, [r1, #0x0]
	ldrh	r1, [r3, #0x34]
	ldr		r0, _08052148
	and		r0, r1
	strh	r0, [r3, #0x34]
	ldr		r1, _0805214c
	add		r0, r3, #0x0
	add		r0, #0x58
	strh	r1, [r0, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0xa
	str		r0, [r3, #0x30]
_08052146:
	bx		lr

_08052148:	.4byte 0x0000FFFD
_0805214c:	.4byte 0xFFFFFF00
	thumb_func_end sub_08052054

	thumb_func_start sub_08052150
sub_08052150:
	push	{ r4, lr }
	add		r2, r0, #0x0
	ldr		r4, [r2, #0x64]
	ldrh	r3, [r2, #0x34]
	mov		r0, #0x2
	and		r0, r3
	cmp		r0, #0x0
	beq		_08052240
	cmp		r4, #0x22
	bhi		_0805222c
	lsl		r0, r4, #0x2
	ldr		r1, _08052170
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x5216E, 0x2

_08052170:	.4byte 0x08052174
_08052174:	.4byte 0x08052200

.incbin "base.gba", 0x52178, 0x88
	thumb_func_end sub_08052150


.incbin "base.gba", 0x52200, 0x2C

_0805222c:

.incbin "base.gba", 0x5222C, 0x14
_08052240:

.incbin "base.gba", 0x52240, 0x26
_08052266:

.incbin "base.gba", 0x52266, 0x6
_0805226c:	.4byte 0x08101068
_08052270:	.4byte 0x0000FFFE
	thumb_func_start sub_08052274
sub_08052274:
	ldr		r1, _08052298
	mov		r2, #0x0
	strh	r1, [r0, #0x10]
	ldr		r1, _0805229c
	str		r1, [r0, #0x5c]
	ldr		r1, _080522a0
	str		r1, [r0, #0x18]
	ldr		r1, _080522a4
	str		r1, [r0, #0x4c]
	str		r2, [r0, #0x60]
	ldrh	r1, [r0, #0x34]
	mov		r2, #0x1
	orr		r1, r2
	mov		r2, #0x2
	orr		r1, r2
	strh	r1, [r0, #0x34]
	bx		lr

.incbin "base.gba", 0x52296, 0x2

_08052298:	.4byte 0x00001016
_0805229c:	.4byte 0x08052151
_080522a0:	.4byte 0x080522a9
_080522a4:	.4byte 0x0810b814
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldrh	r0, [r2, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_080522e8
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_080522e8
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_080522e8
	mov		r0, #0x20
	str		r0, [r3, #0x64]
	ldrh	r1, [r3, #0x34]
	ldr		r0, _080522ec
	and		r0, r1
	strh	r0, [r3, #0x34]
	ldr		r1, _080522f0
	add		r0, r3, #0x0
	add		r0, #0x58
	strh	r1, [r0, #0x0]
_080522e8:
	bx		lr

.incbin "base.gba", 0x522EA, 0x2

_080522ec:	.4byte 0x0000FFFD
_080522f0:	.4byte 0xFFFFFF00
	thumb_func_end sub_08052274

	thumb_func_start sub_080522f4
sub_080522f4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _0805234c
	strh	r0, [r4, #0x10]
	mov		r0, #0x8
	strb	r0, [r4, #0xe]
	strb	r0, [r4, #0xd]
	strb	r0, [r4, #0xc]
	ldr		r0, _08052350
	str		r0, [r4, #0x18]
	ldr		r0, _08052354
	str		r0, [r4, #0x5c]
	ldr		r0, _08052358
	str		r0, [r4, #0x4c]
	mov		r0, #0x10
	str		r0, [r4, #0x60]
	bl		sub_080270d0
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r1, #0xfc
	lsl		r1, r1, #0x8
	and		r0, r1
	str		r0, [r4, #0x64]
	mov		r0, #0x80
	lsl		r0, r0, #0xc
	str		r0, [r4, #0x68]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	ldrh	r1, [r4, #0x34]
	mov		r0, #0x1
	orr		r0, r1
	ldr		r1, _0805235c
	and		r0, r1
	strh	r0, [r4, #0x34]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5234A, 0x2

_0805234c:	.4byte 0x00001017
_08052350:	.4byte 0x08052409
_08052354:	.4byte 0x08052361
_08052358:	.4byte 0x0810b8d4
_0805235c:	.4byte 0x0000FFFD
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x60]
	cmp		r0, #0xf0
	beq		_080523b4
	cmp		r0, #0xf0
	bgt		_08052376
	cmp		r0, #0x10
	beq		_08052380
	cmp		r0, #0x11
	beq		_08052384
	b		_08052400
_08052376:
	cmp		r0, #0xf2
	beq		_080523f0
	cmp		r0, #0xf2
	blt		_080523ce
	b		_08052400
_08052380:
	mov		r0, #0x11
	str		r0, [r2, #0x60]
_08052384:
	ldr		r3, [r2, #0x64]
	ldr		r1, _080523b0
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08052392
	add		r0, #0x3f
_08052392:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	ldr		r1, [r2, #0x68]
	add		r0, r0, r1
	str		r0, [r2, #0x8]
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	add		r0, r3, r1
	str		r0, [r2, #0x64]
	b		_08052400

_080523b0:	.4byte 0x08101068

_080523b4:
	mov		r0, #0xf1
	str		r0, [r2, #0x60]
	ldrh	r1, [r2, #0x34]
	ldr		r0, _080523e4
	and		r0, r1
	strh	r0, [r2, #0x34]
	ldr		r1, _080523e8
	add		r0, r2, #0x0
	add		r0, #0x58
	strh	r1, [r0, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0xa
	str		r0, [r2, #0x30]
_080523ce:
	ldr		r0, [r2, #0x8]
	ldr		r1, [r2, #0x30]
	add		r0, r0, r1
	str		r0, [r2, #0x8]
	cmp		r0, #0x0
	blt		_080523f0
	ldr		r3, _080523ec
	add		r0, r1, r3
	str		r0, [r2, #0x30]
	b		_08052400

.incbin "base.gba", 0x523E2, 0x2

_080523e4:	.4byte 0x0000FFFD
_080523e8:	.4byte 0xFFFFFF00
_080523ec:	.4byte 0xFFFFC000

_080523f0:
	mov		r0, #0xf3
	str		r0, [r2, #0x60]
	mov		r0, #0x0
	str		r0, [r2, #0x18]
	ldrh	r1, [r2, #0x34]
	ldr		r0, _08052404
	and		r0, r1
	strh	r0, [r2, #0x34]
_08052400:
	bx		lr

.incbin "base.gba", 0x52402, 0x2

_08052404:	.4byte 0x0000FFFE
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldrh	r0, [r2, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_08052438
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08052438
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_08052438
	mov		r0, #0xf0
	str		r0, [r3, #0x60]
_08052438:
	bx		lr

.incbin "base.gba", 0x5243A, 0x2
	thumb_func_end sub_080522f4

	thumb_func_start sub_0805243c
sub_0805243c:
	ldr		r1, _08052468
	mov		r3, #0x0
	strh	r1, [r0, #0x10]
	mov		r1, #0x8
	strb	r1, [r0, #0xe]
	strb	r1, [r0, #0xd]
	strb	r1, [r0, #0xc]
	ldr		r2, _0805246c
	ldr		r1, _08052470
	str		r1, [r0, #0x18]
	ldr		r1, _08052474
	str		r1, [r0, #0x5c]
	str		r2, [r0, #0x4c]
	str		r3, [r0, #0x60]
	str		r3, [r0, #0x64]
	ldrh	r1, [r0, #0x34]
	mov		r2, #0x1
	orr		r1, r2
	mov		r2, #0x2
	orr		r1, r2
	strh	r1, [r0, #0x34]
	bx		lr

_08052468:	.4byte 0x00001018
_0805246c:	.4byte 0x0810ad34
_08052470:	.4byte sub_08052514
_08052474:	.4byte sub_08052478
	thumb_func_end sub_0805243c

	thumb_func_start sub_08052478
sub_08052478:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r5, #0x0
	ldr		r0, [r5, #0x60]
	cmp		r0, #0xe0
	beq		_0805248e
	cmp		r0, #0xe0
	ble		_0805250a
	cmp		r0, #0xe1
	beq		_080524a4
	b		_0805250a
_0805248e:
	ldrh	r1, [r5, #0x34]
	ldr		r0, _080524cc
	and		r0, r1
	mov		r4, #0x0
	strh	r0, [r5, #0x34]
	ldr		r0, [r5, #0x68]
	bl		sub_08052570
	mov		r0, #0xe1
	str		r0, [r5, #0x60]
	str		r4, [r5, #0x64]
_080524a4:
	ldr		r0, [r5, #0x64]
	add		r0, #0x1
	str		r0, [r5, #0x64]
	ldr		r0, [r6, #0x0]
	ldr		r1, [r5, #0x28]
	add		r0, r0, r1
	str		r0, [r6, #0x0]
	ldr		r0, [r6, #0x4]
	ldr		r1, [r5, #0x2c]
	add		r0, r0, r1
	str		r0, [r6, #0x4]
	ldr		r0, [r5, #0x64]
	cmp		r0, #0xb
	beq		_080524e0
	cmp		r0, #0xb
	bgt		_080524d0
	cmp		r0, #0x1
	beq		_080524d6
	b		_080524f8

.incbin "base.gba", 0x524CA, 0x2

_080524cc:	.4byte 0x0000FFFD

_080524d0:
	cmp		r0, #0x15
	beq		_080524ec
	b		_080524f8
_080524d6:
	ldr		r0, _080524dc
	str		r0, [r5, #0x4c]
	b		_0805250a

_080524dc:	.4byte 0x0810b8f4

_080524e0:
	ldr		r0, _080524e8
	str		r0, [r5, #0x4c]
	b		_0805250a

.incbin "base.gba", 0x524E6, 0x2

_080524e8:	.4byte 0x0810b914

_080524ec:
	ldr		r0, _080524f4
	str		r0, [r5, #0x4c]
	b		_0805250a

.incbin "base.gba", 0x524F2, 0x2

_080524f4:	.4byte 0x0810b934

_080524f8:
	ldr		r0, [r5, #0x64]
	cmp		r0, #0x1e
	ble		_0805250a
	mov		r0, #0xf0
	str		r0, [r5, #0x60]
	ldrh	r1, [r5, #0x34]
	ldr		r0, _08052510
	and		r0, r1
	strh	r0, [r5, #0x34]
_0805250a:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08052510:	.4byte 0x0000FFFE
	thumb_func_end sub_08052478

	thumb_func_start sub_08052514
sub_08052514:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	ldr		r2, _08052568
	ldrh	r0, [r3, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_08052562
	add		r0, r3, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08052562
	ldr		r0, _0805256c
	add		r2, r2, r0
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x1
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0xe0
	str		r0, [r4, #0x60]
	str		r3, [r4, #0x68]
	add		r0, r3, #0x0
	add		r0, #0x4e
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x8
	str		r0, [r4, #0x28]
	add		r0, r3, #0x0
	add		r0, #0x50
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x8
	str		r0, [r4, #0x2c]
_08052562:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08052568:	.4byte RunGameLogic_CallBack
_0805256c:	.4byte 0x00000C12
	thumb_func_end sub_08052514

	thumb_func_start sub_08052570
sub_08052570:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r0, _08052628
	add		r6, r0, #0x0
	add		r6, #0x24
	mov		r1, #0xe6
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08049164
	add		r4, r0, #0x0
	str		r5, [r4, #0x54]
	mov		r2, #0x0
	strh	r2, [r4, #0x26]
	str		r2, [r4, #0x18]
	ldrh	r1, [r4, #0x34]
	ldr		r0, _0805262c
	and		r0, r1
	strh	r0, [r4, #0x34]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	add		r0, #0x58
	strh	r1, [r0, #0x0]
	str		r2, [r4, #0x6c]
	add		r0, r5, #0x0
	add		r0, #0x6a
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x0
	beq		_08052634
	add		r0, r4, #0x0
	bl		sub_08052664
	ldr		r1, [r4, #0x28]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	str		r0, [r4, #0x28]
	ldr		r1, [r4, #0x2c]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	str		r0, [r4, #0x2c]
	add		r1, r4, #0x0
	add		r1, #0x70
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	strh	r0, [r1, #0x0]
	mov		r0, #0x90
	lsl		r0, r0, #0x9
	str		r0, [r4, #0x30]
	ldr		r0, [r5, #0x0]
	str		r0, [r4, #0x0]
	ldr		r2, [r5, #0x4]
	str		r2, [r4, #0x4]
	ldr		r1, [r5, #0x8]
	str		r1, [r4, #0x8]
	cmp		r0, #0x0
	bge		_080525fc
	ldr		r3, _08052630
	add		r0, r0, r3
_080525fc:
	asr		r5, r0, #0x10
	cmp		r2, #0x0
	bge		_08052606
	ldr		r0, _08052630
	add		r2, r2, r0
_08052606:
	asr		r2, r2, #0x10
	add		r0, r1, #0x0
	cmp		r0, #0x0
	bge		_08052612
	ldr		r1, _08052630
	add		r0, r0, r1
_08052612:
	asr		r3, r0, #0x10
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_0802c3d4
	mov		r1, #0x7f
	and		r0, r1
	add		r1, r4, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	b		_0805264e

_08052628:	.4byte RunGameLogic_CallBack
_0805262c:	.4byte 0x0000FFFD
_08052630:	.4byte 0x0000FFFF

_08052634:
	ldr		r0, _08052660
	str		r0, [r4, #0x14]
	add		r0, r4, #0x0
	bl		sub_080527d0
	add		r0, r4, #0x0
	bl		sub_08052878
	add		r1, r5, #0x0
	add		r1, #0xac
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x0]
_0805264e:
	ldrh	r1, [r4, #0x34]
	mov		r0, #0x1
	orr		r0, r1
	strh	r0, [r4, #0x34]
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x5265E, 0x2

_08052660:	.4byte 0x080527a9
	thumb_func_end sub_08052570

	thumb_func_start sub_08052664
sub_08052664:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	ldr		r0, _080526fc
	add		r7, r0, #0x0
	add		r7, #0x24
	ldr		r4, [r6, #0x54]
	add		r5, r6, #0x0
	ldr		r1, _08052700
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_0805268e
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0805268e
	mov		r0, #0xba
	lsl		r0, r0, #0x1
	bl		sub_0807073c
_0805268e:
	add		r0, r4, #0x0
	add		r0, #0x4e
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x8
	str		r0, [r5, #0x28]
	add		r0, r4, #0x0
	add		r0, #0x50
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl		r0, r0, #0x8
	str		r0, [r5, #0x2c]
	mov		r0, #0x90
	lsl		r0, r0, #0x9
	str		r0, [r5, #0x30]
	ldr		r1, [r5, #0x0]
	cmp		r1, #0x0
	bge		_080526b6
	ldr		r0, _08052704
	add		r1, r1, r0
_080526b6:
	asr		r1, r1, #0x10
	ldr		r2, [r5, #0x4]
	cmp		r2, #0x0
	bge		_080526c2
	ldr		r0, _08052704
	add		r2, r2, r0
_080526c2:
	asr		r2, r2, #0x10
	ldr		r3, [r5, #0x8]
	cmp		r3, #0x0
	bge		_080526ce
	ldr		r0, _08052704
	add		r3, r3, r0
_080526ce:
	asr		r3, r3, #0x10
	add		r0, r7, #0x0
	bl		sub_0802c3d4
	mov		r1, #0x7f
	and		r0, r1
	add		r1, r5, #0x0
	add		r1, #0x36
	mov		r2, #0x0
	strb	r0, [r1, #0x0]
	ldr		r0, _08052708
	str		r0, [r6, #0x14]
	add		r0, r6, #0x0
	add		r0, #0x70
	strh	r2, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x72
	mov		r0, #0xc0
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080526fc:	.4byte RunGameLogic_CallBack
_08052700:	.4byte 0x00000838
_08052704:	.4byte 0x0000FFFF
_08052708:	.4byte sub_0805270c
	thumb_func_end sub_08052664

	thumb_func_start sub_0805270c
sub_0805270c:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r6, _0805278c
	add		r7, r6, #0x0
	add		r7, #0x24
	add		r1, r4, #0x0
	add		r1, #0x70
	mov		r2, #0x26
	ldrsh	r0, [r4, r2]
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	strh	r0, [r4, #0x26]
	ldr		r2, [r4, #0x0]
	ldr		r0, [r4, #0x28]
	add		r2, r2, r0
	str		r2, [r4, #0x0]
	ldr		r1, [r4, #0x4]
	ldr		r0, [r4, #0x2c]
	add		r3, r1, r0
	str		r3, [r4, #0x4]
	ldr		r1, [r4, #0x8]
	ldr		r0, [r4, #0x30]
	add		r0, r1, r0
	str		r0, [r4, #0x8]
	cmp		r2, #0x0
	bge		_08052744
	ldr		r1, _08052790
	add		r2, r2, r1
_08052744:
	asr		r5, r2, #0x10
	add		r1, r3, #0x0
	cmp		r1, #0x0
	bge		_08052750
	ldr		r2, _08052790
	add		r1, r1, r2
_08052750:
	asr		r2, r1, #0x10
	add		r1, r0, #0x0
	cmp		r1, #0x0
	bge		_0805275c
	ldr		r0, _08052790
	add		r1, r1, r0
_0805275c:
	asr		r3, r1, #0x10
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_0802c3d4
	mov		r1, #0x7f
	and		r0, r1
	add		r1, r4, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	bl		sub_080527d0
	ldr		r0, [r4, #0x8]
	cmp		r0, #0x0
	blt		_08052794
	ldr		r0, [r4, #0x30]
	add		r1, r4, #0x0
	add		r1, #0x72
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	sub		r0, r0, r1
	str		r0, [r4, #0x30]
	b		_080527a0

_0805278c:	.4byte RunGameLogic_CallBack
_08052790:	.4byte 0x0000FFFF

_08052794:
	mov		r1, #0xe6
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	add		r1, r4, #0x0
	bl		sub_080491c0
_080527a0:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x527A6, 0x2
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r4, [r5, #0x54]
	bl		sub_08052878
	add		r0, r5, #0x0
	bl		sub_080527d0
	add		r4, #0xac
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	bgt		_080527c8
	add		r0, r5, #0x0
	bl		sub_08052664
_080527c8:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x527CE, 0x2
	thumb_func_end sub_0805270c

	thumb_func_start sub_080527d0
sub_080527d0:
	push	{ r4, lr }
	add		r3, r0, #0x0
	ldr		r0, _08052800
	ldr		r1, _08052804
	add		r0, r0, r1
	ldr		r1, [r3, #0x54]
	mov		r4, #0x14
	ldrsh	r2, [r0, r4]
	add		r1, #0x56
	ldrh	r0, [r1, #0x0]
	sub		r2, r2, r0
	mov		r1, #0x26
	ldrsh	r0, [r3, r1]
	sub		r2, r2, r0
	ldr		r0, _08052808
	and		r2, r0
	ldr		r4, _0805280c
	add		r1, r2, r4
	ldr		r0, _08052810
	cmp		r1, r0
	bls		_08052818
	ldr		r0, _08052814
	b		_0805286a

.incbin "base.gba", 0x527FE, 0x2

_08052800:	.4byte RunGameLogic_CallBack
_08052804:	.4byte 0x00000848
_08052808:	.4byte 0x0000FFFF
_0805280c:	.4byte 0xffffefff
_08052810:	.4byte 0x0000DFFF
_08052814:	.4byte 0x08097e7c

_08052818:
	mov		r0, #0xc0
	lsl		r0, r0, #0x6
	cmp		r2, r0
	bgt		_08052828
	ldr		r0, _08052824
	b		_0805286a

_08052824:	.4byte 0x08097e74

_08052828:
	mov		r0, #0xa0
	lsl		r0, r0, #0x7
	cmp		r2, r0
	bgt		_08052838
	ldr		r0, _08052834
	b		_0805286a

_08052834:	.4byte 0x08097e6c

_08052838:
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	cmp		r2, r0
	bgt		_08052848
	ldr		r0, _08052844
	b		_0805286a

_08052844:	.4byte 0x08097e64

_08052848:
	mov		r0, #0xb0
	lsl		r0, r0, #0x8
	cmp		r2, r0
	bgt		_08052858
	ldr		r0, _08052854
	b		_0805286a

_08052854:	.4byte 0x08097e84

_08052858:
	mov		r0, #0xd0
	lsl		r0, r0, #0x8
	cmp		r2, r0
	bgt		_08052868
	ldr		r0, _08052864
	b		_0805286a

_08052864:	.4byte 0x08097e8c

_08052868:
	ldr		r0, _08052874
_0805286a:
	str		r0, [r3, #0x48]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x52872, 0x2

_08052874:	.4byte 0x08097e94
	thumb_func_end sub_080527d0

	thumb_func_start sub_08052878
sub_08052878:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	ldr		r1, [r0, #0x54]
	mov		r12, r1
	ldr		r2, _080528f8
	mov		r10, r2
	add		r6, r0, #0x0
	mov		r0, r12
	add		r0, #0xd8
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x1d
	mov		r0, r12
	add		r0, #0x56
	ldrh	r0, [r0, #0x0]
	ldr		r3, _080528fc
	add		r0, r0, r3
	ldr		r5, _08052900
	lsl		r0, r0, #0x10
	asr		r2, r0, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_080528ae
	add		r0, #0x3f
_080528ae:
	asr		r3, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r4, _08052904
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	mov		r9, r0
	add		r0, r3, #0x0
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	mov		r8, r0
	mov		r0, r12
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	ldr		r4, _08052908
	add		r0, r0, r4
	ldr		r1, _0805290c
	cmp		r0, r1
	bhi		_08052910
	mov		r1, r10
	ldr		r0, [r1, #0x10]
	mov		r1, #0x2
	and		r0, r1
	lsr		r3, r0, #0x1
	b		_08052912

.incbin "base.gba", 0x528F6, 0x2

_080528f8:	.4byte RunGameLogic_CallBack
_080528fc:	.4byte 0xFFFFC000
_08052900:	.4byte 0x08101068
_08052904:	.4byte 0x000003FF
_08052908:	.4byte 0xfffeffff
_0805290c:	.4byte 0x009EFFFE

_08052910:
	mov		r3, #0x0
_08052912:
	mov		r4, #0x0
	mov		r0, r12
	add		r0, #0x85
	ldrb	r5, [r0, #0x0]
	mov		r2, r12
	add		r2, #0xb4
	cmp		r5, #0x5c
	bne		_08052930
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0805295c
	mov		r4, #0x1
_08052930:
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0805295c
	mov		r2, #0x1
	add		r1, r7, #0x0
	and		r1, r2
	mov		r0, #0x1e
	and		r0, r5
	cmp		r0, #0xc
	bls		_08052956
	asr		r0, r7, #0x1
	and		r0, r2
	add		r0, r1, r0
	add		r0, r3, r0
	add		r2, r0, r4
	b		_0805295e
_08052956:
	add		r0, r3, r1
	add		r2, r0, r4
	b		_0805295e
_0805295c:
	add		r2, r3, r4
_0805295e:
	lsl		r2, r2, #0xf
	mov		r3, r12
	ldr		r0, [r3, #0x0]
	mov		r4, r9
	sub		r0, r0, r4
	str		r0, [r6, #0x0]
	ldr		r1, [r3, #0x4]
	mov		r4, r8
	sub		r3, r1, r4
	str		r3, [r6, #0x4]
	mov		r4, r12
	ldr		r1, [r4, #0x8]
	add		r1, r1, r2
	str		r1, [r6, #0x8]
	cmp		r0, #0x0
	bge		_08052982
	ldr		r2, _080529bc
	add		r0, r0, r2
_08052982:
	asr		r4, r0, #0x10
	add		r0, r3, #0x0
	cmp		r0, #0x0
	bge		_0805298e
	ldr		r3, _080529bc
	add		r0, r0, r3
_0805298e:
	asr		r2, r0, #0x10
	add		r0, r1, #0x0
	cmp		r0, #0x0
	bge		_0805299a
	ldr		r1, _080529bc
	add		r0, r0, r1
_0805299a:
	asr		r3, r0, #0x10
	ldr		r0, _080529c0
	add		r1, r4, #0x0
	bl		sub_0802c3d4
	mov		r1, #0x7f
	and		r0, r1
	add		r1, r6, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080529bc:	.4byte 0x0000FFFF
_080529c0:	.4byte 0x030031C4
	thumb_func_end sub_08052878

	thumb_func_start sub_080529c4
sub_080529c4:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r0, _08052a20
	mov		r4, #0x0
	strh	r0, [r5, #0x10]
	mov		r0, #0x8
	strb	r0, [r5, #0xe]
	strb	r0, [r5, #0xd]
	strb	r0, [r5, #0xc]
	ldr		r0, _08052a24
	str		r0, [r5, #0x18]
	ldr		r0, _08052a28
	str		r0, [r5, #0x5c]
	ldr		r0, _08052a2c
	str		r0, [r5, #0x4c]
	mov		r0, #0x10
	str		r0, [r5, #0x60]
	bl		sub_080270d0
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r1, #0xfc
	lsl		r1, r1, #0x8
	and		r0, r1
	str		r0, [r5, #0x64]
	str		r4, [r5, #0x6c]
	mov		r0, #0x80
	lsl		r0, r0, #0xc
	str		r0, [r5, #0x68]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r5, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	ldrh	r1, [r5, #0x34]
	mov		r0, #0x1
	orr		r0, r1
	ldr		r1, _08052a30
	and		r0, r1
	strh	r0, [r5, #0x34]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x52A1E, 0x2

_08052a20:	.4byte 0x00001019
_08052a24:	.4byte 0x08052b29
_08052a28:	.4byte sub_08052aa8
_08052a2c:	.4byte 0x0810b974
_08052a30:	.4byte 0x0000FFFD
	thumb_func_end sub_080529c4

	thumb_func_start sub_08052a34
sub_08052a34:
	add		r2, r0, #0x0
	ldr		r3, [r2, #0x64]
	ldr		r1, _08052a70
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08052a44
	add		r0, #0x3f
_08052a44:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	ldr		r1, [r2, #0x68]
	add		r0, r0, r1
	str		r0, [r2, #0x8]
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	add		r0, r3, r1
	str		r0, [r2, #0x64]
	ldr		r1, [r2, #0x6c]
	cmp		r1, #0xe
	beq		_08052a90
	cmp		r1, #0xe
	bgt		_08052a74
	cmp		r1, #0x0
	beq		_08052a7e
	b		_08052a94

_08052a70:	.4byte 0x08101068

_08052a74:
	cmp		r1, #0x1a
	beq		_08052a88
	cmp		r1, #0x28
	beq		_08052a90
	b		_08052a94
_08052a7e:
	ldr		r0, _08052a84
	b		_08052a92

.incbin "base.gba", 0x52A82, 0x2

_08052a84:	.4byte 0x0810b974

_08052a88:
	ldr		r0, _08052a8c
	b		_08052a92

_08052a8c:	.4byte 0x0810b9b4

_08052a90:
	ldr		r0, _08052aa4
_08052a92:
	str		r0, [r2, #0x4c]
_08052a94:
	add		r0, r1, #0x1
	str		r0, [r2, #0x6c]
	cmp		r0, #0x33
	ble		_08052aa0
	mov		r0, #0x0
	str		r0, [r2, #0x6c]
_08052aa0:
	bx		lr

.incbin "base.gba", 0x52AA2, 0x2

_08052aa4:	.4byte 0x0810b994
	thumb_func_end sub_08052a34

	thumb_func_start sub_08052aa8
sub_08052aa8:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x60]
	cmp		r0, #0xf0
	beq		_08052ad6
	cmp		r0, #0xf0
	bgt		_08052ac0
	cmp		r0, #0x10
	beq		_08052aca
	cmp		r0, #0x11
	beq		_08052ace
	b		_08052b20
_08052ac0:
	cmp		r0, #0xf2
	beq		_08052b10
	cmp		r0, #0xf2
	blt		_08052af0
	b		_08052b20
_08052aca:
	mov		r0, #0x11
	str		r0, [r2, #0x60]
_08052ace:
	add		r0, r2, #0x0
	bl		sub_08052a34
	b		_08052b20
_08052ad6:
	mov		r0, #0xf1
	str		r0, [r2, #0x60]
	ldrh	r1, [r2, #0x34]
	ldr		r0, _08052b04
	and		r0, r1
	strh	r0, [r2, #0x34]
	ldr		r1, _08052b08
	add		r0, r2, #0x0
	add		r0, #0x58
	strh	r1, [r0, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0xa
	str		r0, [r2, #0x30]
_08052af0:
	ldr		r0, [r2, #0x8]
	ldr		r1, [r2, #0x30]
	add		r0, r0, r1
	str		r0, [r2, #0x8]
	cmp		r0, #0x0
	blt		_08052b10
	ldr		r3, _08052b0c
	add		r0, r1, r3
	str		r0, [r2, #0x30]
	b		_08052b20

_08052b04:	.4byte 0x0000FFFD
_08052b08:	.4byte 0xFFFFFF00
_08052b0c:	.4byte 0xFFFFC000

_08052b10:
	mov		r0, #0xf3
	str		r0, [r2, #0x60]
	mov		r0, #0x0
	str		r0, [r2, #0x18]
	ldrh	r1, [r2, #0x34]
	ldr		r0, _08052b24
	and		r0, r1
	strh	r0, [r2, #0x34]
_08052b20:
	pop		{ r0 }
	bx		r0

_08052b24:	.4byte 0x0000FFFE
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldrh	r0, [r2, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_08052b58
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08052b58
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_08052b58
	mov		r0, #0xf0
	str		r0, [r3, #0x60]
_08052b58:
	bx		lr

.incbin "base.gba", 0x52B5A, 0x2
	thumb_func_end sub_08052aa8

	thumb_func_start sub_08052b5c
sub_08052b5c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _08052bb4
	strh	r0, [r4, #0x10]
	mov		r0, #0x8
	strb	r0, [r4, #0xe]
	strb	r0, [r4, #0xd]
	strb	r0, [r4, #0xc]
	ldr		r0, _08052bb8
	str		r0, [r4, #0x18]
	ldr		r0, _08052bbc
	str		r0, [r4, #0x5c]
	ldr		r0, _08052bc0
	str		r0, [r4, #0x4c]
	mov		r0, #0x10
	str		r0, [r4, #0x60]
	bl		sub_080270d0
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r1, #0xfc
	lsl		r1, r1, #0x8
	and		r0, r1
	str		r0, [r4, #0x64]
	mov		r0, #0x80
	lsl		r0, r0, #0xc
	str		r0, [r4, #0x68]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	ldrh	r1, [r4, #0x34]
	mov		r0, #0x1
	orr		r0, r1
	ldr		r1, _08052bc4
	and		r0, r1
	strh	r0, [r4, #0x34]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x52BB2, 0x2

_08052bb4:	.4byte 0x0000101A
_08052bb8:	.4byte 0x08052c71
_08052bbc:	.4byte 0x08052bc9
_08052bc0:	.4byte 0x0810b9f4
_08052bc4:	.4byte 0x0000FFFD
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x60]
	cmp		r0, #0xf0
	beq		_08052c1c
	cmp		r0, #0xf0
	bgt		_08052bde
	cmp		r0, #0x10
	beq		_08052be8
	cmp		r0, #0x11
	beq		_08052bec
	b		_08052c68
_08052bde:
	cmp		r0, #0xf2
	beq		_08052c58
	cmp		r0, #0xf2
	blt		_08052c36
	b		_08052c68
_08052be8:
	mov		r0, #0x11
	str		r0, [r2, #0x60]
_08052bec:
	ldr		r3, [r2, #0x64]
	ldr		r1, _08052c18
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08052bfa
	add		r0, #0x3f
_08052bfa:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	ldr		r1, [r2, #0x68]
	add		r0, r0, r1
	str		r0, [r2, #0x8]
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	add		r0, r3, r1
	str		r0, [r2, #0x64]
	b		_08052c68

_08052c18:	.4byte 0x08101068

_08052c1c:
	mov		r0, #0xf1
	str		r0, [r2, #0x60]
	ldrh	r1, [r2, #0x34]
	ldr		r0, _08052c4c
	and		r0, r1
	strh	r0, [r2, #0x34]
	ldr		r1, _08052c50
	add		r0, r2, #0x0
	add		r0, #0x58
	strh	r1, [r0, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0xa
	str		r0, [r2, #0x30]
_08052c36:
	ldr		r0, [r2, #0x8]
	ldr		r1, [r2, #0x30]
	add		r0, r0, r1
	str		r0, [r2, #0x8]
	cmp		r0, #0x0
	blt		_08052c58
	ldr		r3, _08052c54
	add		r0, r1, r3
	str		r0, [r2, #0x30]
	b		_08052c68

.incbin "base.gba", 0x52C4A, 0x2

_08052c4c:	.4byte 0x0000FFFD
_08052c50:	.4byte 0xFFFFFF00
_08052c54:	.4byte 0xFFFFC000

_08052c58:
	mov		r0, #0xf3
	str		r0, [r2, #0x60]
	mov		r0, #0x0
	str		r0, [r2, #0x18]
	ldrh	r1, [r2, #0x34]
	ldr		r0, _08052c6c
	and		r0, r1
	strh	r0, [r2, #0x34]
_08052c68:
	bx		lr

.incbin "base.gba", 0x52C6A, 0x2

_08052c6c:	.4byte 0x0000FFFE
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldrh	r0, [r2, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_08052ca0
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08052ca0
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_08052ca0
	mov		r0, #0xf0
	str		r0, [r3, #0x60]
_08052ca0:
	bx		lr

.incbin "base.gba", 0x52CA2, 0x2
	thumb_func_end sub_08052b5c

	thumb_func_start sub_08052ca4
sub_08052ca4:
	add		r3, r0, #0x0
	ldr		r0, _08052d08
	mov		r1, #0x0
	mov		r2, #0x0
	strh	r0, [r3, #0x10]
	mov		r0, #0x8
	strb	r0, [r3, #0xe]
	strb	r0, [r3, #0xd]
	strb	r0, [r3, #0xc]
	ldr		r0, _08052d0c
	str		r0, [r3, #0x4c]
	add		r0, r3, #0x0
	add		r0, #0x60
	strb	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	add		r1, r3, #0x0
	add		r1, #0x64
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	strh	r0, [r1, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x66
	strh	r2, [r0, #0x0]
	add		r1, #0x4
	mov		r0, #0x10
	strb	r0, [r1, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x6a
	strh	r2, [r0, #0x0]
	str		r2, [r3, #0x28]
	str		r2, [r3, #0x2c]
	str		r2, [r3, #0x30]
	ldr		r0, _08052d10
	str		r0, [r3, #0x18]
	ldr		r0, _08052d14
	str		r0, [r3, #0x5c]
	ldrh	r0, [r3, #0x34]
	mov		r1, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r3, #0x34]
	mov		r1, #0xe0
	add		r0, r3, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	bx		lr

_08052d08:	.4byte 0x0000101B
_08052d0c:	.4byte 0x0810ba34
_08052d10:	.4byte 0x08053099
_08052d14:	.4byte sub_08052d18
	thumb_func_end sub_08052ca4

	thumb_func_start sub_08052d18
sub_08052d18:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r0, #0x60
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x8
	bls		_08052d26
	b		_0805308c
_08052d26:
	lsl		r0, r0, #0x2
	ldr		r1, _08052d30
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08052d30:	.4byte 0x08052d34
_08052d34:	.4byte 0x08052d58

.incbin "base.gba", 0x52D38, 0x20
	thumb_func_end sub_08052d18


.incbin "base.gba", 0x52D58, 0x334

_0805308c:

.incbin "base.gba", 0x5308C, 0x40
_080530cc:

.incbin "base.gba", 0x530CC, 0x4
	thumb_func_start sub_080530d0
sub_080530d0:
	add		r2, r0, #0x0
	ldr		r0, _08053118
	mov		r3, #0x0
	strh	r0, [r2, #0x10]
	ldr		r0, _0805311c
	str		r0, [r2, #0x4c]
	ldr		r0, _08053120
	str		r0, [r2, #0x5c]
	ldr		r0, _08053124
	str		r0, [r2, #0x18]
	ldrh	r1, [r2, #0x34]
	mov		r0, #0x2
	orr		r0, r1
	strh	r0, [r2, #0x34]
	str		r3, [r2, #0x60]
	str		r3, [r2, #0x64]
	str		r3, [r2, #0x68]
	mov		r1, #0xe0
	add		r0, r2, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	ldr		r1, [r2, #0x50]
	mov		r0, #0xa1
	lsl		r0, r0, #0x10
	cmp		r1, r0
	beq		_0805312c
	add		r0, #0x1
	cmp		r1, r0
	bne		_0805312c
	ldr		r0, _08053128
	str		r0, [r2, #0x28]
	str		r3, [r2, #0x2c]
	b		_08053136

.incbin "base.gba", 0x53116, 0x2

_08053118:	.4byte 0x0000101C
_0805311c:	.4byte 0x0810ba74
_08053120:	.4byte 0x080531ED
_08053124:	.4byte 0x080532ad
_08053128:	.4byte 0xFFFF8000

_0805312c:
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	str		r0, [r2, #0x28]
	mov		r0, #0x0
	str		r0, [r2, #0x2c]
_08053136:
	bx		lr
	thumb_func_end sub_080530d0

	thumb_func_start sub_08053138
sub_08053138:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r0, r2, #0x0
	add		r1, r3, #0x0
	ldr		r4, _08053180
	lsr		r2, r0, #0x1f
	add		r0, r0, r2
	lsl		r0, r0, #0xf
	lsr		r2, r1, #0x1f
	add		r1, r1, r2
	lsl		r1, r1, #0xf
	asr		r0, r0, #0x10
	asr		r1, r1, #0x10
	bl		sub_08028738
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r1, _08053184
	add		r4, r4, r1
	mov		r2, #0x14
	ldrsh	r1, [r4, r2]
	sub		r2, r0, r1
	ldr		r0, [r6, #0x64]
	add		r0, #0x1
	str		r0, [r6, #0x64]
	cmp		r0, r5
	blt		_0805318e
	ldr		r1, [r6, #0x60]
	cmp		r1, #0x0
	beq		_08053188
	mov		r0, #0x0
	str		r0, [r6, #0x60]
	str		r0, [r6, #0x64]
	b		_0805318e

.incbin "base.gba", 0x5317E, 0x2

_08053180:	.4byte RunGameLogic_CallBack
_08053184:	.4byte 0x00000848

_08053188:
	mov		r0, #0x1
	str		r0, [r6, #0x60]
	str		r1, [r6, #0x64]
_0805318e:
	ldr		r0, [r6, #0x60]
	cmp		r0, #0x0
	beq		_080531bc
	ldr		r1, _080531a8
	and		r1, r2
	ldr		r0, _080531ac
	cmp		r1, r0
	bgt		_080531b4
	cmp		r1, #0x0
	blt		_080531b4
	ldr		r0, _080531b0
	b		_080531de

.incbin "base.gba", 0x531A6, 0x2

_080531a8:	.4byte 0x0000FFFF
_080531ac:	.4byte 0x00007FFF
_080531b0:	.4byte 0x0810bab4

_080531b4:
	ldr		r0, _080531b8
	b		_080531de

_080531b8:	.4byte 0x0810ba74

_080531bc:
	ldr		r1, _080531d0
	and		r1, r2
	ldr		r0, _080531d4
	cmp		r1, r0
	bgt		_080531dc
	cmp		r1, #0x0
	blt		_080531dc
	ldr		r0, _080531d8
	b		_080531de

.incbin "base.gba", 0x531CE, 0x2

_080531d0:	.4byte 0x0000FFFF
_080531d4:	.4byte 0x00007FFF
_080531d8:	.4byte 0x0810bad4

_080531dc:
	ldr		r0, _080531e8
_080531de:
	str		r0, [r6, #0x4c]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x531E6, 0x2

_080531e8:	.4byte 0x0810ba94
	thumb_func_end sub_08053138

	thumb_func_start sub_080531ec
sub_080531ec:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r2, [r4, #0x68]
	ldrh	r3, [r4, #0x34]
	mov		r0, #0x2
	and		r0, r3
	cmp		r0, #0x0
	beq		_08053278
	cmp		r2, #0xaf
	ble		_08053220
	ldr		r0, _0805321c
	cmp		r2, r0
	bgt		_08053250
	ldr		r0, [r4, #0x0]
	ldr		r2, [r4, #0x28]
	sub		r0, r0, r2
	str		r0, [r4, #0x0]
	ldr		r0, [r4, #0x4]
	ldr		r3, [r4, #0x2c]
	sub		r0, r0, r3
	str		r0, [r4, #0x4]
	neg		r2, r2
	neg		r3, r3
	b		_08053238

_0805321c:	.4byte 0x0000010F

_08053220:
	cmp		r2, #0x60
	bge		_08053242
	cmp		r2, #0x0
	blt		_08053250
	ldr		r0, [r4, #0x0]
	ldr		r2, [r4, #0x28]
	add		r0, r0, r2
	str		r0, [r4, #0x0]
	ldr		r0, [r4, #0x4]
	ldr		r3, [r4, #0x2c]
	add		r0, r0, r3
	str		r0, [r4, #0x4]
_08053238:
	add		r0, r4, #0x0
	mov		r1, #0x6
	bl		sub_08053138
	b		_08053260
_08053242:
	ldr		r2, [r4, #0x28]
	ldr		r3, [r4, #0x2c]
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_08053138
	b		_08053260
_08053250:
	ldr		r2, [r4, #0x28]
	neg		r2, r2
	ldr		r3, [r4, #0x2c]
	neg		r3, r3
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_08053138
_08053260:
	ldr		r0, [r4, #0x68]
	add		r0, #0x1
	str		r0, [r4, #0x68]
	ldr		r1, _08053274
	cmp		r0, r1
	ble		_0805329e
	mov		r0, #0x0
	str		r0, [r4, #0x68]
	b		_0805329e

.incbin "base.gba", 0x53272, 0x2

_08053274:	.4byte 0x0000015F

_08053278:
	mov		r0, #0x1
	and		r0, r3
	cmp		r0, #0x0
	beq		_0805329e
	ldr		r1, _080532a4
	lsl		r0, r2, #0x6
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	str		r0, [r4, #0x8]
	sub		r0, r2, #0x1
	str		r0, [r4, #0x68]
	cmp		r0, #0x0
	bge		_0805329e
	ldr		r0, _080532a8
	and		r3, r0
	strh	r3, [r4, #0x34]
_0805329e:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_080532a4:	.4byte 0x08101068
_080532a8:	.4byte 0x0000FFFE
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldrh	r0, [r2, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_080532ec
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_080532ec
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_080532ec
	mov		r0, #0x20
	str		r0, [r3, #0x68]
	ldrh	r1, [r3, #0x34]
	ldr		r0, _080532f0
	and		r0, r1
	strh	r0, [r3, #0x34]
	ldr		r1, _080532f4
	add		r0, r3, #0x0
	add		r0, #0x58
	strh	r1, [r0, #0x0]
_080532ec:
	bx		lr

.incbin "base.gba", 0x532EE, 0x2

_080532f0:	.4byte 0x0000FFFD
_080532f4:	.4byte 0xFFFFFF00
	thumb_func_end sub_080531ec

	thumb_func_start sub_080532f8
sub_080532f8:
	add		r3, r0, #0x0
	ldr		r0, _08053358
	mov		r2, #0x0
	strh	r0, [r3, #0x10]
	mov		r0, #0x8
	strb	r0, [r3, #0xe]
	strb	r0, [r3, #0xd]
	strb	r0, [r3, #0xc]
	ldr		r0, _0805335c
	str		r0, [r3, #0x5c]
	ldr		r0, _08053360
	str		r0, [r3, #0x4c]
	ldrh	r1, [r3, #0x34]
	ldr		r0, _08053364
	and		r0, r1
	ldr		r1, _08053368
	and		r0, r1
	strh	r0, [r3, #0x34]
	mov		r1, #0xe0
	add		r0, r3, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	ldr		r0, [r3, #0x0]
	str		r0, [r3, #0x68]
	ldr		r0, [r3, #0x4]
	str		r0, [r3, #0x6c]
	add		r0, r3, #0x0
	add		r0, #0x60
	strb	r2, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	str		r0, [r3, #0x28]
	str		r0, [r3, #0x2c]
	ldr		r1, [r3, #0x50]
	ldr		r0, _0805336c
	cmp		r1, r0
	beq		_08053370
	cmp		r1, r0
	ble		_0805339a
	add		r0, #0x1
	cmp		r1, r0
	beq		_0805337e
	add		r0, #0x1
	cmp		r1, r0
	beq		_0805338c
	b		_0805339a

_08053358:	.4byte 0x0000101D
_0805335c:	.4byte 0x080533AD
_08053360:	.4byte 0x0810baf4
_08053364:	.4byte 0x0000FFFE
_08053368:	.4byte 0x0000FFFD
_0805336c:	.4byte 0x00A20001

_08053370:
	add		r0, r3, #0x0
	add		r0, #0x66
	mov		r1, #0x80
	strh	r1, [r0, #0x0]
	sub		r0, #0x2
	strh	r1, [r0, #0x0]
	b		_080533a8
_0805337e:
	add		r1, r3, #0x0
	add		r1, #0x66
	mov		r0, #0x80
	strh	r0, [r1, #0x0]
	sub		r1, #0x2
	mov		r0, #0x90
	b		_080533a6
_0805338c:
	add		r1, r3, #0x0
	add		r1, #0x66
	mov		r0, #0x80
	strh	r0, [r1, #0x0]
	sub		r1, #0x2
	mov		r0, #0xa0
	b		_080533a6
_0805339a:
	add		r1, r3, #0x0
	add		r1, #0x66
	mov		r0, #0x80
	strh	r0, [r1, #0x0]
	sub		r1, #0x2
	mov		r0, #0x70
_080533a6:
	strh	r0, [r1, #0x0]
_080533a8:
	bx		lr

.incbin "base.gba", 0x533AA, 0x2
	thumb_func_end sub_080532f8

	thumb_func_start sub_080533ac
sub_080533ac:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	add		r0, #0x62
	mov		r1, #0x0
	ldrsh	r7, [r0, r1]
	sub		r0, #0x2
	ldrb	r0, [r0, #0x0]
	mov		r8, r0
	cmp		r0, #0xb
	bls		_080533ca
	b		_0805379e
_080533ca:
	lsl		r0, r0, #0x2
	ldr		r1, _080533d4
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_080533d4:	.4byte 0x080533d8
_080533d8:	.4byte 0x08053408

.incbin "base.gba", 0x533DC, 0x2C
	thumb_func_end sub_080533ac


.incbin "base.gba", 0x53408, 0x396

_0805379e:

.incbin "base.gba", 0x5379E, 0x22
	thumb_func_start sub_080537c0
sub_080537c0:
	add		r2, r0, #0x0
	add		r3, r1, #0x0
	ldrh	r0, [r3, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_080537f6
	add		r0, r3, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_080537f6
	ldr		r0, [r2, #0x60]
	cmp		r0, #0x0
	bne		_080537f6
	mov		r0, #0x1
	str		r0, [r2, #0x60]
	mov		r0, #0x20
	str		r0, [r2, #0x64]
	ldr		r1, _080537f8
	add		r0, r2, #0x0
	add		r0, #0x58
	strh	r1, [r0, #0x0]
_080537f6:
	bx		lr

_080537f8:	.4byte 0xFFFFFF00
	thumb_func_end sub_080537c0

	thumb_func_start sub_080537fc
sub_080537fc:
	ldr		r1, _0805380c
	str		r1, [r0, #0x5c]
	ldr		r1, _08053810
	str		r1, [r0, #0x18]
	mov		r1, #0x0
	str		r1, [r0, #0x60]
	str		r1, [r0, #0x64]
	bx		lr

_0805380c:	.4byte 0x08053815
_08053810:	.4byte 0x080537C1
	add		r2, r0, #0x0
	ldr		r3, [r2, #0x64]
	ldr		r0, [r2, #0x60]
	cmp		r0, #0x0
	beq		_0805383e
	ldr		r1, _08053840
	lsl		r0, r3, #0x6
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x4
	str		r0, [r2, #0x8]
	sub		r0, r3, #0x1
	str		r0, [r2, #0x64]
	cmp		r0, #0x0
	bge		_0805383e
	ldrh	r1, [r2, #0x34]
	ldr		r0, _08053844
	and		r0, r1
	strh	r0, [r2, #0x34]
_0805383e:
	bx		lr

_08053840:	.4byte 0x08101068
_08053844:	.4byte 0x0000FFFE
	thumb_func_end sub_080537fc

	thumb_func_start sub_08053848
sub_08053848:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r0, _080538a4
	mov		r4, #0x0
	strh	r0, [r5, #0x10]
	mov		r0, #0x8
	mov		r1, #0x20
	strb	r0, [r5, #0xc]
	strb	r0, [r5, #0xd]
	strb	r1, [r5, #0xe]
	ldr		r0, _080538a8
	str		r0, [r5, #0x18]
	ldr		r0, _080538ac
	str		r0, [r5, #0x5c]
	ldr		r0, _080538b0
	str		r0, [r5, #0x4c]
	mov		r0, #0x10
	str		r0, [r5, #0x60]
	bl		sub_080270d0
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r1, #0xfc
	lsl		r1, r1, #0x8
	and		r0, r1
	str		r0, [r5, #0x64]
	str		r4, [r5, #0x6c]
	mov		r0, #0x80
	lsl		r0, r0, #0xc
	str		r0, [r5, #0x68]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r5, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	ldrh	r0, [r5, #0x34]
	mov		r1, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r5, #0x34]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080538a4:	.4byte 0x00001008
_080538a8:	.4byte sub_0805395c
_080538ac:	.4byte 0x080538b5
_080538b0:	.4byte 0x0810bbf4
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x60]
	cmp		r0, #0xf0
	beq		_08053908
	cmp		r0, #0xf0
	bgt		_080538ca
	cmp		r0, #0x10
	beq		_080538d4
	cmp		r0, #0x11
	beq		_080538d8
	b		_08053954
_080538ca:
	cmp		r0, #0xf2
	beq		_08053944
	cmp		r0, #0xf2
	blt		_08053922
	b		_08053954
_080538d4:
	mov		r0, #0x11
	str		r0, [r2, #0x60]
_080538d8:
	ldr		r3, [r2, #0x64]
	ldr		r1, _08053904
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_080538e6
	add		r0, #0x3f
_080538e6:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	ldr		r1, [r2, #0x68]
	add		r0, r0, r1
	str		r0, [r2, #0x8]
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	add		r0, r3, r1
	str		r0, [r2, #0x64]
	b		_08053954

_08053904:	.4byte 0x08101068

_08053908:
	mov		r0, #0xf1
	str		r0, [r2, #0x60]
	ldrh	r1, [r2, #0x34]
	ldr		r0, _08053938
	and		r0, r1
	strh	r0, [r2, #0x34]
	ldr		r1, _0805393c
	add		r0, r2, #0x0
	add		r0, #0x58
	strh	r1, [r0, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0xa
	str		r0, [r2, #0x30]
_08053922:
	ldr		r0, [r2, #0x8]
	ldr		r1, [r2, #0x30]
	add		r0, r0, r1
	str		r0, [r2, #0x8]
	cmp		r0, #0x0
	blt		_08053944
	ldr		r3, _08053940
	add		r0, r1, r3
	str		r0, [r2, #0x30]
	b		_08053954

.incbin "base.gba", 0x53936, 0x2

_08053938:	.4byte 0x0000FFFD
_0805393c:	.4byte 0xFFFFFF00
_08053940:	.4byte 0xFFFFC000

_08053944:
	mov		r0, #0xf3
	str		r0, [r2, #0x60]
	mov		r0, #0x0
	str		r0, [r2, #0x18]
	ldrh	r1, [r2, #0x34]
	ldr		r0, _08053958
	and		r0, r1
	strh	r0, [r2, #0x34]
_08053954:
	bx		lr

.incbin "base.gba", 0x53956, 0x2

_08053958:	.4byte 0x0000FFFE
	thumb_func_end sub_08053848

	thumb_func_start sub_0805395c
sub_0805395c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	ldr		r2, _08053994
	ldrh	r0, [r3, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	cmp		r0, r1
	bne		_080539bc
	add		r0, r3, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_080539bc
	add		r0, r3, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r5, [r0, r1]
	cmp		r5, #0x0
	beq		_08053998
	mov		r0, #0xf0
	str		r0, [r4, #0x60]
	b		_080539bc

.incbin "base.gba", 0x53992, 0x2

_08053994:	.4byte RunGameLogic_CallBack

_08053998:
	ldr		r0, _080539c4
	add		r2, r2, r0
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x1
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldrh	r1, [r4, #0x34]
	ldr		r0, _080539c8
	and		r0, r1
	ldr		r1, _080539cc
	and		r0, r1
	strh	r0, [r4, #0x34]
	add		r0, r3, #0x0
	bl		sub_08042620
	mov		r0, #0xf3
	str		r0, [r4, #0x60]
	str		r5, [r4, #0x18]
_080539bc:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x539C2, 0x2

_080539c4:	.4byte 0x00000C12
_080539c8:	.4byte 0x0000FFFE
_080539cc:	.4byte 0x0000FFFD
	thumb_func_end sub_0805395c

	thumb_func_start sub_080539d0
sub_080539d0:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	cmp		r0, #0x9
	bgt		_080539e4
	lsl		r1, r0, #0x5
	ldr		r0, _080539e0
	add		r4, r1, r0
	b		_080539ec

_080539e0:	.4byte 0x0808c852

_080539e4:
	sub		r0, #0xa
	lsl		r0, r0, #0x5
	ldr		r1, _08053a0c
	add		r4, r0, r1
_080539ec:
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x4a
	add		r0, r4, #0x0
	mov		r2, #0xb
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53A0A, 0x2

_08053a0c:	.4byte 0x0808ca32
	thumb_func_end sub_080539d0

	thumb_func_start sub_08053a10
sub_08053a10:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	cmp		r0, #0x9
	bgt		_08053a24
	lsl		r1, r0, #0x5
	ldr		r0, _08053a20
	add		r4, r1, r0
	b		_08053a2c

_08053a20:	.4byte 0x0808c970

_08053a24:
	sub		r0, #0xa
	lsl		r0, r0, #0x5
	ldr		r1, _08053a4c
	add		r4, r0, r1
_08053a2c:
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x40
	add		r0, r4, #0x0
	mov		r2, #0x5
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53A4A, 0x2

_08053a4c:	.4byte 0x0808cb50
	thumb_func_end sub_08053a10

	thumb_func_start sub_08053a50
sub_08053a50:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053a7c
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x34
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53A7A, 0x2

_08053a7c:	.4byte 0x0810c310
	thumb_func_end sub_08053a50

	thumb_func_start sub_08053a80
sub_08053a80:
	push	{ r4, lr }
	ldr		r4, [r0, #0x68]
	lsl		r4, r4, #0x5
	ldr		r0, _08053aa8
	add		r4, r4, r0
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x20
	add		r0, r4, #0x0
	mov		r2, #0x6
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08053aa8:	.4byte 0x0808cc28
	thumb_func_end sub_08053a80

	thumb_func_start sub_08053aac
sub_08053aac:
	push	{ r4, lr }
	ldr		r4, [r0, #0x68]
	lsl		r4, r4, #0x5
	ldr		r0, _08053ad4
	add		r4, r4, r0
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x2c
	add		r0, r4, #0x0
	mov		r2, #0x4
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08053ad4:	.4byte 0x0808cc34
	thumb_func_end sub_08053aac

	thumb_func_start sub_08053ad8
sub_08053ad8:
	push	{ r4, lr }
	ldr		r4, [r0, #0x68]
	lsl		r4, r4, #0x5
	ldr		r0, _08053b00
	add		r4, r4, r0
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x40
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08053b00:	.4byte 0x0808cde0
	thumb_func_end sub_08053ad8

	thumb_func_start sub_08053b04
sub_08053b04:
	push	{ r4, lr }
	ldr		r4, [r0, #0x68]
	lsl		r4, r4, #0x5
	ldr		r0, _08053b34
	add		r4, r4, r0
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0xa
	bl		sub_08071b6c
	mov		r0, #0x0
	bl		sub_08028130
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08053b34:	.4byte 0x0808cec0
	thumb_func_end sub_08053b04

	thumb_func_start sub_08053b38
sub_08053b38:
	push	{ r4, lr }
	ldr		r4, [r0, #0x68]
	lsl		r4, r4, #0x5
	ldr		r0, _08053b60
	add		r4, r4, r0
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x32
	add		r0, r4, #0x0
	mov		r2, #0x5
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08053b60:	.4byte 0x0808d000
	thumb_func_end sub_08053b38

	thumb_func_start sub_08053b64
sub_08053b64:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053b90
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x3c
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53B8E, 0x2

_08053b90:	.4byte 0x0810c628
	thumb_func_end sub_08053b64

	thumb_func_start sub_08053b94
sub_08053b94:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053bc0
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x78
	add		r0, r4, #0x0
	mov		r2, #0x2
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53BBE, 0x2

_08053bc0:	.4byte 0x0810c738
	thumb_func_end sub_08053b94

	thumb_func_start sub_08053bc4
sub_08053bc4:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053bf0
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe2
	add		r0, r4, #0x0
	mov		r2, #0x5
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53BEE, 0x2

_08053bf0:	.4byte 0x0810c794
	thumb_func_end sub_08053bc4

	thumb_func_start sub_08053bf4
sub_08053bf4:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053c20
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xc2
	add		r0, r4, #0x0
	mov		r2, #0xf
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53C1E, 0x2

_08053c20:	.4byte 0x0810c828
	thumb_func_end sub_08053bf4

	thumb_func_start sub_08053c24
sub_08053c24:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053c50
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x50
	add		r0, r4, #0x0
	mov		r2, #0x6
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53C4E, 0x2

_08053c50:	.4byte 0x0810c8bc
	thumb_func_end sub_08053c24

	thumb_func_start sub_08053c54
sub_08053c54:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053c80
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x10
	add		r0, r4, #0x0
	mov		r2, #0x6
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53C7E, 0x2

_08053c80:	.4byte 0x0810ca14
	thumb_func_end sub_08053c54

	thumb_func_start sub_08053c84
sub_08053c84:
	push	{ lr }
	ldr		r1, _08053ca0
	mov		r0, #0x0
	mov		r2, #0x0
	bl		sub_08029d24
	ldr		r1, _08053ca4
	mov		r0, #0x0
	mov		r2, #0x0
	bl		sub_08029d24
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53C9E, 0x2

_08053ca0:	.4byte 0x0810c7a8
_08053ca4:	.4byte 0x0810c83c
	thumb_func_end sub_08053c84

	thumb_func_start sub_08053ca8
sub_08053ca8:
	push	{ lr }
	ldr		r1, _08053cb8
	mov		r0, #0x0
	mov		r2, #0x0
	bl		sub_08029d24
	pop		{ r0 }
	bx		r0

_08053cb8:	.4byte 0x0810c8ec
	thumb_func_end sub_08053ca8

	thumb_func_start sub_08053cbc
sub_08053cbc:
	push	{ lr }
	ldr		r1, _08053ccc
	mov		r0, #0x0
	mov		r2, #0x0
	bl		sub_08029d24
	pop		{ r0 }
	bx		r0

_08053ccc:	.4byte 0x0810ca40
	thumb_func_end sub_08053cbc

	thumb_func_start sub_08053cd0
sub_08053cd0:
	push	{ r4, r5, lr }
	ldr		r4, [r0, #0x68]
	ldr		r0, _08053d14
	lsl		r4, r4, #0x2
	add		r0, r4, r0
	ldr		r5, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe0
	add		r0, r5, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	ldr		r0, _08053d18
	add		r4, r4, r0
	ldr		r4, [r4, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xc0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		_CallHardwareSetCpuFast
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53D12, 0x2

_08053d14:	.4byte 0x0810cb50
_08053d18:	.4byte 0x0810cb6c
	thumb_func_end sub_08053cd0

	thumb_func_start sub_08053d1c
sub_08053d1c:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053d48
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x18
	add		r0, r4, #0x0
	mov		r2, #0x3
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53D46, 0x2

_08053d48:	.4byte 0x0810ccb0
	thumb_func_end sub_08053d1c

	thumb_func_start sub_08053d4c
sub_08053d4c:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053d78
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x4a
	add		r0, r4, #0x0
	mov		r2, #0x9
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53D76, 0x2

_08053d78:	.4byte 0x0810cd28
	thumb_func_end sub_08053d4c

	thumb_func_start sub_08053d7c
sub_08053d7c:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053da8
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xfa
	add		r0, r4, #0x0
	mov		r2, #0x3
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53DA6, 0x2

_08053da8:	.4byte 0x0810cdd0
	thumb_func_end sub_08053d7c

	thumb_func_start sub_08053dac
sub_08053dac:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053dd8
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x2c
	add		r0, r4, #0x0
	mov		r2, #0x4
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53DD6, 0x2

_08053dd8:	.4byte 0x0810ce2c
	thumb_func_end sub_08053dac

	thumb_func_start sub_08053ddc
sub_08053ddc:
	push	{ r4, r5, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053e20
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	add		r5, r4, #0x0
	add		r5, #0xa
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x20
	add		r0, r5, #0x0
	mov		r2, #0x3
	bl		sub_08071b6c
	add		r4, #0x12
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x26
	add		r0, r4, #0x0
	mov		r2, #0x3
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53E1E, 0x2

_08053e20:	.4byte 0x0810ce2c
	thumb_func_end sub_08053ddc

	thumb_func_start sub_08053e24
sub_08053e24:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053e50
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x30
	add		r0, r4, #0x0
	mov		r2, #0x5
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53E4E, 0x2

_08053e50:	.4byte 0x0810cef4
	thumb_func_end sub_08053e24

	thumb_func_start sub_08053e54
sub_08053e54:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053e80
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x14
	add		r0, r4, #0x0
	mov		r2, #0x4
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53E7E, 0x2

_08053e80:	.4byte 0x0810cfdc
	thumb_func_end sub_08053e54

	thumb_func_start sub_08053e84
sub_08053e84:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053eb0
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x14
	add		r0, r4, #0x0
	mov		r2, #0x5
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53EAE, 0x2

_08053eb0:	.4byte 0x0810d0ec
	thumb_func_end sub_08053e84

	thumb_func_start sub_08053eb4
sub_08053eb4:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053ee0
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0x3a
	add		r0, r4, #0x0
	mov		r2, #0x3
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53EDE, 0x2

_08053ee0:	.4byte 0x0810d160
	thumb_func_end sub_08053eb4

	thumb_func_start sub_08053ee4
sub_08053ee4:
	push	{ r4, lr }
	ldr		r4, [r0, #0x68]
	lsl		r4, r4, #0x5
	ldr		r0, _08053f0c
	add		r4, r4, r0
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe2
	add		r0, r4, #0x0
	mov		r2, #0x4
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08053f0c:	.4byte 0x0808d1e8
	thumb_func_end sub_08053ee4

	thumb_func_start sub_08053f10
sub_08053f10:
	push	{ r4, lr }
	ldr		r4, [r0, #0x68]
	lsl		r4, r4, #0x5
	ldr		r0, _08053f38
	add		r4, r4, r0
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xf8
	add		r0, r4, #0x0
	mov		r2, #0x4
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08053f38:	.4byte 0x0808d1f2
	thumb_func_end sub_08053f10

	thumb_func_start sub_08053f3c
sub_08053f3c:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053f68
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r1, #0xe2
	add		r0, r4, #0x0
	mov		r2, #0x5
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53F66, 0x2

_08053f68:	.4byte 0x0810d3a0
	thumb_func_end sub_08053f3c

	thumb_func_start sub_08053f6c
sub_08053f6c:
	push	{ r4, lr }
	ldr		r0, [r0, #0x68]
	ldr		r1, _08053f9c
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08028130
	add		r1, r0, #0x0
	mov		r0, #0x93
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0xb
	bl		sub_08071b6c
	mov		r0, #0x1
	bl		sub_08028168
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x53F9A, 0x2

_08053f9c:	.4byte 0x0810d488
	thumb_func_end sub_08053f6c

	thumb_func_start sub_08053fa0
sub_08053fa0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	cmp		r1, #0xb
	bhi		_08054030
	lsl		r0, r1, #0x2
	ldr		r1, _08053fb4
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x53FB2, 0x2

_08053fb4:	.4byte 0x08053fb8
_08053fb8:	.4byte 0x08053fe8

.incbin "base.gba", 0x53FBC, 0x2C
	thumb_func_end sub_08053fa0


.incbin "base.gba", 0x53FE8, 0x48

_08054030:

.incbin "base.gba", 0x54030, 0x2C
	thumb_func_start sub_0805405c
sub_0805405c:
	push	{ r4, r5, r6, r7, lr }
	add		r2, r0, #0x0
	ldr		r0, _08054084
	add		r7, r0, #0x0
	add		r7, #0x24
	ldr		r1, _08054088
	add		r3, r0, r1
	sub		r1, #0x10
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldrh	r0, [r0, #0x34]
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0805408c
	ldrh	r1, [r2, #0x34]
	mov		r0, #0x1
	orr		r0, r1
	b		_08054092

.incbin "base.gba", 0x54082, 0x2

_08054084:	.4byte RunGameLogic_CallBack
_08054088:	.4byte 0x00000848

_0805408c:
	ldrh	r1, [r2, #0x34]
	ldr		r0, _080540a8
	and		r0, r1
_08054092:
	strh	r0, [r2, #0x34]
	mov		r1, #0xe0
	lsl		r1, r1, #0x2
	add		r0, r3, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	ble		_080540b0
	ldr		r6, _080540ac
	mov		r5, #0x1
	b		_080540b4

.incbin "base.gba", 0x540A6, 0x2

_080540a8:	.4byte 0x0000FFFE
_080540ac:	.4byte 0x0810d67c

_080540b0:
	ldr		r6, _080540d8
	mov		r5, #0x0
_080540b4:
	mov		r2, #0x0
	ldr		r0, _080540dc
	add		r4, r7, r0
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_080540e8
	ldr		r0, _080540d8
	cmp		r6, r0
	beq		_080540ea
	ldr		r0, _080540e0
	ldr		r1, _080540e4
	bl		sub_08029d24
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_080540fc
	str		r2, [r4, #0x0]
	b		_080540ea

_080540d8:	.4byte 0x0810d6b4
_080540dc:	.4byte 0x00000C58
_080540e0:	.4byte sub_0805419c
_080540e4:	.4byte 0x0810d67c

_080540e8:
	add		r2, r0, #0x0
_080540ea:
	cmp		r2, #0x0
	beq		_080540fc
	ldr		r0, _08054104
	add		r1, r7, r0
	ldrb	r0, [r1, #0x0]
	cmp		r0, r5
	bne		_080540fc
	str		r6, [r2, #0x5c]
	strb	r5, [r1, #0x0]
_080540fc:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x54102, 0x2

_08054104:	.4byte 0x00000C5C
	thumb_func_end sub_0805405c

	thumb_func_start sub_08054108
sub_08054108:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _08054138
	ldr		r1, _0805413c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r2, #0x1c
	ldrsh	r1, [r0, r2]
	strh	r1, [r4, #0x20]
	mov		r2, #0x1e
	ldrsh	r1, [r0, r2]
	strh	r1, [r4, #0x22]
	mov		r2, #0x24
	ldrsh	r1, [r0, r2]
	add		r1, #0x1
	strh	r1, [r4, #0x24]
	bl		sub_08037420
	add		r4, #0x58
	strh	r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x54136, 0x2

_08054138:	.4byte RunGameLogic_CallBack
_0805413c:	.4byte 0x00000838

.incbin "base.gba", 0x54140, 0x30
	thumb_func_end sub_08054108

	thumb_func_start sub_08054170
sub_08054170:
	push	{ lr }
	ldr		r0, _08054194
	mov		r1, #0xe8
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08049164
	add		r2, r0, #0x0
	cmp		r2, #0x0
	beq		_0805418e
	add		r0, #0x4c
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r0, _08054198
	str		r0, [r2, #0x14]
_0805418e:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x54192, 0x2

_08054194:	.4byte RunGameLogic_CallBack
_08054198:	.4byte 0x0805405D
	thumb_func_end sub_08054170

	thumb_func_start sub_0805419c
sub_0805419c:
	push	{ r4, r5, r6, lr }
	ldr		r3, _080541cc
	ldr		r2, _080541d0
	add		r1, r3, r2
	ldr		r4, [r1, #0x0]
	mov		r5, #0x0
	strh	r5, [r0, #0x10]
	ldrh	r1, [r0, #0x34]
	mov		r2, #0x1
	mov		r6, #0x0
	orr		r1, r2
	strh	r1, [r0, #0x34]
	ldr		r1, [r4, #0x0]
	str		r1, [r0, #0x0]
	ldr		r1, [r4, #0x4]
	str		r1, [r0, #0x4]
	str		r5, [r0, #0x8]
	mov		r0, #0xc8
	lsl		r0, r0, #0x4
	add		r3, r3, r0
	strb	r6, [r3, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080541cc:	.4byte RunGameLogic_CallBack
_080541d0:	.4byte 0x00000838
	thumb_func_end sub_0805419c

	thumb_func_start sub_080541d4
sub_080541d4:
	push	{ r4, r5, lr }
	mov		r12, r0
	ldr		r0, [r0, #0x70]
	lsl		r2, r0, #0x10
	lsr		r2, r2, #0x19
	lsl		r0, r0, #0x17
	lsr		r4, r0, #0x1b
	ldr		r5, _08054218
	lsl		r1, r4, #0x1
	add		r1, r1, r4
	add		r0, r1, r5
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x1
	mov		r3, #0xcb
	lsl		r3, r3, #0x1
	add		r3, r12
	strh	r0, [r3, #0x0]
	add		r0, r5, #0x1
	add		r1, r1, r0
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x1
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r1, r12
	strh	r0, [r1, #0x0]
	sub		r2, #0x1
	lsl		r2, r2, #0x18
	lsr		r3, r2, #0x18
	cmp		r3, #0x0
	beq		_0805421c
	mov		r2, r12
	add		r2, #0x71
	lsl		r3, r3, #0x1
	b		_0805424a

_08054218:	.4byte 0x0810d6cc

_0805421c:
	add		r0, r4, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	mov		r3, r12
	add		r3, #0x70
	mov		r1, #0x1f
	and		r1, r4
	lsl		r1, r1, #0x4
	ldrh	r2, [r3, #0x0]
	ldr		r0, _08054258
	and		r0, r2
	orr		r0, r1
	strh	r0, [r3, #0x0]
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	add		r1, r5, #0x2
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0805425c
	mov		r2, r12
	add		r2, #0x71
	lsl		r3, r0, #0x1
_0805424a:
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x1
	and		r0, r1
	orr		r0, r3
	strb	r0, [r2, #0x0]
	b		_08054264

.incbin "base.gba", 0x54256, 0x2

_08054258:	.4byte 0xFFFFFE0F

_0805425c:
	mov		r0, r12
	mov		r1, #0x1
	bl		sub_08037358
_08054264:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5426A, 0x156
	thumb_func_end sub_080541d4

	thumb_func_start sub_080543c0
sub_080543c0:
	mov		r12, r0
	mov		r3, r12
	add		r3, #0x6e
	ldrb	r1, [r3, #0x0]
	mov		r0, #0xf
	and		r0, r1
	cmp		r0, #0x2
	beq		_08054412
	mov		r0, #0x10
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strb	r0, [r3, #0x0]
	ldr		r2, _08054414
	mov		r0, r12
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r2, [r0, #0x0]
	ldrh	r1, [r3, #0x0]
	ldr		r0, _08054418
	and		r0, r1
	strh	r0, [r3, #0x0]
	ldrb	r1, [r2, #0x1]
	lsl		r1, r1, #0x1
	ldrb	r2, [r3, #0x1]
	mov		r0, #0x1
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x1]
	mov		r2, r12
	add		r2, #0x6d
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	strb	r0, [r2, #0x0]
_08054412:
	bx		lr

_08054414:	.4byte 0x0810d800
_08054418:	.4byte 0xFFFFFE0F
	thumb_func_end sub_080543c0

	thumb_func_start sub_0805441c
sub_0805441c:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	mov		r5, #0x8
	cmp		r6, #0x0
	beq		_0805442a
	mov		r5, #0x9
_0805442a:
	add		r0, r4, #0x0
	bl		sub_08036480
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	ldrh	r1, [r4, #0x24]
	cmp		r0, #0x0
	beq		_0805443e
	cmp		r0, #0x7f
	bne		_0805449a
_0805443e:
	ldr		r0, _08054484
	cmp		r1, r0
	bhi		_0805449a
	add		r3, r4, #0x0
	add		r3, #0x6e
	ldrb	r1, [r3, #0x0]
	mov		r0, #0xf
	and		r0, r1
	cmp		r0, #0x0
	bne		_0805449a
	mov		r0, #0xf
	and		r5, r0
	mov		r0, #0x10
	neg		r0, r0
	and		r0, r1
	orr		r0, r5
	strb	r0, [r3, #0x0]
	ldr		r0, _08054488
	ldrb	r1, [r0, #0x1]
	lsl		r1, r1, #0x1
	ldrb	r2, [r3, #0x1]
	mov		r0, #0x1
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x1]
	cmp		r6, #0x0
	beq		_0805448c
	add		r0, r4, #0x0
	add		r0, #0x6d
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x0]
	b		_0805449a

.incbin "base.gba", 0x54482, 0x2

_08054484:	.4byte 0x000001FF
_08054488:	.4byte 0x0810d820

_0805448c:
	add		r2, r4, #0x0
	add		r2, #0x6d
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	strb	r0, [r2, #0x0]
_0805449a:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0805441c

	thumb_func_start sub_080544a0
sub_080544a0:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r6, r1, #0x18
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	add		r3, r5, #0x0
	add		r3, #0x6e
	ldr		r0, [r3, #0x0]
	lsl		r1, r0, #0x10
	lsr		r1, r1, #0x19
	lsl		r0, r0, #0x17
	lsr		r4, r0, #0x1b
	cmp		r6, #0x0
	beq		_080544c2
	cmp		r6, #0x7f
	bne		_080544c8
_080544c2:
	ldr		r0, _080544d0
	cmp		r2, r0
	bls		_080544d4
_080544c8:
	add		r0, r5, #0x0
	bl		sub_080545d4
	b		_0805455a

_080544d0:	.4byte 0x000001FF

_080544d4:
	mov		r6, #0x1
	sub		r0, r1, #0x1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x0
	beq		_080544ec
	lsl		r2, r1, #0x1
	ldrb	r1, [r3, #0x1]
	add		r0, r6, #0x0
	and		r0, r1
	orr		r0, r2
	b		_08054558
_080544ec:
	add		r0, r4, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	ldr		r0, _0805452c
	lsl		r1, r4, #0x1
	add		r2, r1, r0
	ldrb	r2, [r2, #0x0]
	add		r0, #0x1
	add		r1, r1, r0
	ldrb	r0, [r1, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x6c
	strb	r2, [r1, #0x0]
	lsl		r0, r0, #0x18
	asr		r5, r0, #0x18
	cmp		r5, #0x0
	beq		_08054534
	mov		r0, #0x1f
	and		r4, r0
	lsl		r2, r4, #0x4
	ldrh	r1, [r3, #0x0]
	ldr		r0, _08054530
	and		r0, r1
	orr		r0, r2
	strh	r0, [r3, #0x0]
	lsl		r2, r5, #0x1
	ldrb	r1, [r3, #0x1]
	add		r0, r6, #0x0
	and		r0, r1
	orr		r0, r2
	b		_08054558

.incbin "base.gba", 0x5452A, 0x2

_0805452c:	.4byte 0x0810d820
_08054530:	.4byte 0xFFFFFE0F

_08054534:
	ldrb	r1, [r3, #0x0]
	mov		r0, #0x10
	neg		r0, r0
	and		r0, r1
	mov		r1, #0xa
	orr		r0, r1
	strb	r0, [r3, #0x0]
	ldrh	r1, [r3, #0x0]
	ldr		r0, _08054560
	and		r0, r1
	strh	r0, [r3, #0x0]
	ldr		r0, _08054564
	ldrb	r1, [r0, #0x1]
	lsl		r1, r1, #0x1
	ldrb	r2, [r3, #0x1]
	add		r0, r6, #0x0
	and		r0, r2
	orr		r0, r1
_08054558:
	strb	r0, [r3, #0x1]
_0805455a:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08054560:	.4byte 0xFFFFFE0F
_08054564:	.4byte 0x0810d82e
	thumb_func_end sub_080544a0

	thumb_func_start sub_08054568
sub_08054568:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r3, r5, #0x0
	add		r3, #0x6e
	ldr		r1, [r3, #0x0]
	lsl		r0, r1, #0x10
	lsr		r0, r0, #0x19
	lsl		r1, r1, #0x17
	lsr		r2, r1, #0x1b
	sub		r0, #0x1
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x0
	beq		_08054588
	lsl		r2, r0, #0x1
	b		_080545b0
_08054588:
	add		r0, r2, #0x1
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	ldr		r0, _080545bc
	lsl		r1, r2, #0x1
	add		r0, #0x1
	add		r1, r1, r0
	mov		r4, #0x0
	ldrsb	r4, [r1, r4]
	cmp		r4, #0x0
	beq		_080545c4
	mov		r0, #0x1f
	and		r2, r0
	lsl		r2, r2, #0x4
	ldrh	r1, [r3, #0x0]
	ldr		r0, _080545c0
	and		r0, r1
	orr		r0, r2
	strh	r0, [r3, #0x0]
	lsl		r2, r4, #0x1
_080545b0:
	ldrb	r1, [r3, #0x1]
	mov		r0, #0x1
	and		r0, r1
	orr		r0, r2
	strb	r0, [r3, #0x1]
	b		_080545cc

_080545bc:	.4byte 0x0810d820
_080545c0:	.4byte 0xFFFFFE0F

_080545c4:
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_08037358
_080545cc:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x545D2, 0x2
	thumb_func_end sub_08054568

	thumb_func_start sub_080545d4
sub_080545d4:
	add		r0, #0x6e
	ldrb	r2, [r0, #0x0]
	mov		r1, #0x10
	neg		r1, r1
	and		r1, r2
	mov		r2, #0xa
	orr		r1, r2
	strb	r1, [r0, #0x0]
	ldrh	r2, [r0, #0x0]
	ldr		r1, _08054600
	and		r1, r2
	strh	r1, [r0, #0x0]
	ldr		r1, _08054604
	ldrb	r2, [r1, #0x1]
	lsl		r2, r2, #0x1
	ldrb	r3, [r0, #0x1]
	mov		r1, #0x1
	and		r1, r3
	orr		r1, r2
	strb	r1, [r0, #0x1]
	bx		lr

.incbin "base.gba", 0x545FE, 0x2

_08054600:	.4byte 0xFFFFFE0F
_08054604:	.4byte 0x0810d82e
	thumb_func_end sub_080545d4

	thumb_func_start sub_08054608
sub_08054608:
	push	{ r4, r5, lr }
	mov		r12, r0
	add		r0, #0x72
	ldr		r0, [r0, #0x0]
	lsl		r1, r0, #0x10
	lsr		r3, r1, #0x19
	lsl		r0, r0, #0x17
	lsr		r4, r0, #0x1b
	mov		r0, #0xca
	lsl		r0, r0, #0x1
	add		r0, r12
	ldrh	r2, [r0, #0x0]
	ldr		r1, _08054634
	lsl		r0, r4, #0x1
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	add		r5, r1, #0x0
	cmp		r0, #0x1
	bne		_08054638
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	b		_0805463c

_08054634:	.4byte 0x0810d844

_08054638:
	mov		r0, #0x80
	lsl		r0, r0, #0x7
_0805463c:
	add		r1, r2, #0x0
	orr		r1, r0
	mov		r0, #0xca
	lsl		r0, r0, #0x1
	add		r0, r12
	strh	r1, [r0, #0x0]
	sub		r0, r3, #0x1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	cmp		r3, #0x0
	beq		_08054664
	mov		r2, r12
	add		r2, #0x72
	lsl		r3, r3, #0x1
	ldrb	r1, [r2, #0x1]
	mov		r0, #0x1
	and		r0, r1
	orr		r0, r3
	strb	r0, [r2, #0x1]
	b		_080546a4
_08054664:
	mov		r3, r12
	add		r3, #0x72
	add		r0, r4, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	mov		r1, #0x1f
	and		r1, r4
	lsl		r1, r1, #0x4
	ldrh	r2, [r3, #0x0]
	ldr		r0, _08054698
	and		r0, r2
	orr		r0, r1
	strh	r0, [r3, #0x0]
	lsl		r0, r4, #0x1
	add		r1, r5, #0x1
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0805469c
	lsl		r2, r0, #0x1
	ldrb	r1, [r3, #0x1]
	mov		r0, #0x1
	and		r0, r1
	orr		r0, r2
	strb	r0, [r3, #0x1]
	b		_080546a4

_08054698:	.4byte 0xFFFFFE0F

_0805469c:
	mov		r0, r12
	mov		r1, #0x2
	bl		sub_08037358
_080546a4:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x546AA, 0x20E
	thumb_func_end sub_08054608

	thumb_func_start sub_080548b8
sub_080548b8:
	push	{ lr }
	add		r2, r0, #0x0
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_080548d2
	add		r0, r2, #0x0
	mov		r1, #0x2
	bl		sub_08037358
_080548d2:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x548D6, 0x16
	thumb_func_end sub_080548b8

	thumb_func_start sub_080548ec
sub_080548ec:
	push	{ lr }
	add		r3, r0, #0x0
	ldr		r2, _08054928
	mov		r0, #0x72
	add		r0, r0, r3
	mov		r12, r0
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x10
	neg		r0, r0
	and		r0, r1
	mov		r1, #0xe
	orr		r0, r1
	mov		r1, r12
	strb	r0, [r1, #0x0]
	ldr		r0, _0805492c
	add		r2, r2, r0
	ldr		r0, [r2, #0x0]
	cmp		r3, r0
	bne		_08054922
	ldr		r0, [r3, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08054922
	add		r0, r3, #0x0
	bl		sub_08055f78
_08054922:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x54926, 0x2

_08054928:	.4byte RunGameLogic_CallBack
_0805492c:	.4byte 0x00000838
	thumb_func_end sub_080548ec

	thumb_func_start sub_08054930
sub_08054930:
	push	{ lr }
	add		r2, r0, #0x0
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0805494a
	add		r0, r2, #0x0
	mov		r1, #0x2
	bl		sub_08037358
_0805494a:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5494E, 0x6
	thumb_func_end sub_08054930

	thumb_func_start sub_08054954
sub_08054954:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r0, #0x6e
	add		r0, r0, r4
	mov		r12, r0
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x10
	lsr		r0, r0, #0x19
	lsl		r1, r1, #0x17
	lsr		r3, r1, #0x1b
	sub		r0, #0x1
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_0805499a
	add		r0, r3, #0x1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	mov		r1, #0x1f
	and		r1, r3
	lsl		r1, r1, #0x4
	mov		r0, r12
	ldrh	r2, [r0, #0x0]
	ldr		r0, _080549ac
	and		r0, r2
	orr		r0, r1
	mov		r1, r12
	strh	r0, [r1, #0x0]
	ldr		r0, _080549b0
	lsl		r1, r3, #0x1
	add		r0, #0x1
	add		r1, r1, r0
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_080549b4
_0805499a:
	lsl		r2, r0, #0x1
	mov		r0, r12
	ldrb	r1, [r0, #0x1]
	mov		r0, #0x1
	and		r0, r1
	orr		r0, r2
	mov		r1, r12
	strb	r0, [r1, #0x1]
	b		_080549c8

_080549ac:	.4byte 0xFFFFFE0F
_080549b0:	.4byte 0x0810d85c

_080549b4:
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_08037358
	add		r0, r4, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x8
	eor		r1, r2
	strb	r1, [r0, #0x0]
_080549c8:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x549CE, 0x2
	thumb_func_end sub_08054954

	thumb_func_start sub_080549d0
sub_080549d0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r3, _08054a1c
	mov		r0, #0x6e
	add		r0, r0, r4
	mov		r12, r0
	ldrb	r0, [r0, #0x0]
	mov		r1, #0xf
	orr		r0, r1
	mov		r1, r12
	strb	r0, [r1, #0x0]
	ldr		r0, _08054a20
	ldrb	r1, [r0, #0x1]
	lsl		r1, r1, #0x1
	mov		r0, r12
	ldrb	r2, [r0, #0x1]
	mov		r0, #0x1
	and		r0, r2
	orr		r0, r1
	mov		r1, r12
	strb	r0, [r1, #0x1]
	ldrh	r1, [r1, #0x0]
	ldr		r0, _08054a24
	and		r0, r1
	mov		r1, r12
	strh	r0, [r1, #0x0]
	ldr		r0, _08054a28
	add		r3, r3, r0
	ldr		r0, [r3, #0x0]
	cmp		r4, r0
	bne		_08054a14
	add		r0, r4, #0x0
	bl		sub_08055a00
_08054a14:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x54A1A, 0x2

_08054a1c:	.4byte RunGameLogic_CallBack
_08054a20:	.4byte 0x0810d85c
_08054a24:	.4byte 0xFFFFFE0F
_08054a28:	.4byte 0x00000838
	thumb_func_end sub_080549d0

	thumb_func_start sub_08054a2c
sub_08054a2c:
	push	{ r4, r5, lr }
	mov		r12, r0
	ldr		r0, [r0, #0x70]
	lsl		r2, r0, #0x10
	lsr		r2, r2, #0x19
	lsl		r0, r0, #0x17
	lsr		r4, r0, #0x1b
	ldr		r5, _08054a70
	lsl		r1, r4, #0x1
	add		r1, r1, r4
	add		r0, r1, r5
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x1
	mov		r3, #0xcb
	lsl		r3, r3, #0x1
	add		r3, r12
	strh	r0, [r3, #0x0]
	add		r0, r5, #0x1
	add		r1, r1, r0
	ldrb	r0, [r1, #0x0]
	lsl		r0, r0, #0x1
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r1, r12
	strh	r0, [r1, #0x0]
	sub		r2, #0x1
	lsl		r2, r2, #0x18
	lsr		r3, r2, #0x18
	cmp		r3, #0x0
	beq		_08054a74
	mov		r2, r12
	add		r2, #0x71
	lsl		r3, r3, #0x1
	b		_08054aa2

_08054a70:	.4byte 0x0810d860

_08054a74:
	add		r0, r4, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	mov		r3, r12
	add		r3, #0x70
	mov		r1, #0x1f
	and		r1, r4
	lsl		r1, r1, #0x4
	ldrh	r2, [r3, #0x0]
	ldr		r0, _08054ab0
	and		r0, r2
	orr		r0, r1
	strh	r0, [r3, #0x0]
	lsl		r0, r4, #0x1
	add		r0, r0, r4
	add		r1, r5, #0x2
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08054ab4
	mov		r2, r12
	add		r2, #0x71
	lsl		r3, r0, #0x1
_08054aa2:
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x1
	and		r0, r1
	orr		r0, r3
	strb	r0, [r2, #0x0]
	b		_08054abc

.incbin "base.gba", 0x54AAE, 0x2

_08054ab0:	.4byte 0xFFFFFE0F

_08054ab4:
	mov		r0, r12
	mov		r1, #0x1
	bl		sub_08037358
_08054abc:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x54AC2, 0x31A
	thumb_func_end sub_08054a2c

	thumb_func_start sub_08054ddc
sub_08054ddc:
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	str		r2, [r0, #0x4]
	str		r2, [r0, #0x8]
	str		r2, [r0, #0xc]
	strb	r2, [r0, #0x10]
	strh	r2, [r0, #0x14]
	strh	r2, [r0, #0x16]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	str		r1, [r0, #0x1c]
	str		r1, [r0, #0x20]
	strh	r1, [r0, #0x24]
	str		r2, [r0, #0x18]
	bx		lr

.incbin "base.gba", 0x54DFA, 0x2
	thumb_func_end sub_08054ddc

	thumb_func_start sub_08054dfc
sub_08054dfc:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, [r1, #0xc]
	cmp		r0, #0x0
	ble		_08054e0e
	sub		r0, #0x1
	str		r0, [r1, #0xc]
	mov		r0, #0x1
	b		_08054e38
_08054e0e:
	ldr		r2, [r1, #0x8]
	ldr		r3, [r2, #0x0]
	cmp		r3, #0x0
	bne		_08054e1c
	ldr		r0, [r2, #0x4]
	cmp		r0, #0x0
	beq		_08054e2a
_08054e1c:
	str		r3, [r1, #0x4]
	ldr		r0, [r2, #0x4]
	str		r0, [r1, #0xc]
	add		r2, #0x8
	str		r2, [r1, #0x8]
	mov		r0, #0x1
	b		_08054e38
_08054e2a:
	ldr		r0, _08054e3c
	mov		r2, #0xea
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	bl		sub_08054ed0
	mov		r0, #0x0
_08054e38:
	pop		{ r1 }
	bx		r1

_08054e3c:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_08054dfc

	thumb_func_start sub_08054e40
sub_08054e40:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _08054e54
	mov		r2, #0xea
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	bl		sub_08054ed0
	pop		{ r0 }
	bx		r0

_08054e54:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_08054e40

	thumb_func_start sub_08054e58
sub_08054e58:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	mov		r4, #0x0
_08054e60:
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x3c
	bl		sub_080271b8
	add		r2, r5, r4
	mov		r1, #0x0
	strb	r1, [r2, #0x0]
	lsl		r2, r4, #0x2
	add		r1, r5, #0x0
	add		r1, #0x20
	add		r1, r1, r2
	str		r0, [r1, #0x0]
	add		r4, #0x1
	cmp		r4, #0x1f
	ble		_08054e60
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x54E86, 0x2
	thumb_func_end sub_08054e58

	thumb_func_start sub_08054e88
sub_08054e88:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r3, #0x0
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08054eac
	mov		r2, #0x1
_08054e9a:
	add		r3, #0x1
	cmp		r3, #0x1e
	bgt		_08054eac
	add		r0, r4, r3
	ldrb	r1, [r0, #0x0]
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08054e9a
_08054eac:
	add		r2, r4, r3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	lsl		r1, r3, #0x2
	add		r0, r4, #0x0
	add		r0, #0x20
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_08054ddc
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x54ECE, 0x2
	thumb_func_end sub_08054e88

	thumb_func_start sub_08054ed0
sub_08054ed0:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r4, r1, #0x0
	mov		r2, #0x0
	ldr		r0, [r3, #0x20]
	cmp		r0, r4
	bne		_08054ee2
	strb	r2, [r3, #0x0]
	b		_08054efc
_08054ee2:
	add		r2, #0x1
	cmp		r2, #0x1f
	bgt		_08054efc
	lsl		r0, r2, #0x2
	add		r1, r3, #0x0
	add		r1, #0x20
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, r4
	bne		_08054ee2
	add		r1, r3, r2
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
_08054efc:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x54F02, 0x2
	thumb_func_end sub_08054ed0

	thumb_func_start sub_08054f04
sub_08054f04:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	mov		r8, r3
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	ldr		r0, _08054f58
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08054e88
	add		r2, r0, #0x0
	strh	r4, [r2, #0x24]
	ldr		r0, _08054f5c
	str		r0, [r2, #0x0]
	strh	r5, [r2, #0x14]
	strh	r6, [r2, #0x16]
	ldr		r0, _08054f60
	mov		r1, r8
	cmp		r1, #0x0
	beq		_08054f40
	ldr		r0, _08054f64
_08054f40:
	str		r0, [r2, #0x8]
	ldrb	r1, [r2, #0x10]
	mov		r0, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x10]
	add		r0, r2, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x54F56, 0x2

_08054f58:	.4byte RunGameLogic_CallBack
_08054f5c:	.4byte 0x08054DFD
_08054f60:	.4byte 0x0810d8c8
_08054f64:	.4byte 0x0810d8f8
	thumb_func_end sub_08054f04

	thumb_func_start sub_08054f68
sub_08054f68:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	mov		r8, r3
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	ldr		r0, _08054fbc
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08054e88
	add		r2, r0, #0x0
	strh	r4, [r2, #0x24]
	ldr		r0, _08054fc0
	str		r0, [r2, #0x0]
	strh	r5, [r2, #0x14]
	strh	r6, [r2, #0x16]
	ldr		r0, _08054fc4
	mov		r1, r8
	cmp		r1, #0x0
	beq		_08054fa4
	ldr		r0, _08054fc8
_08054fa4:
	str		r0, [r2, #0x8]
	ldrb	r1, [r2, #0x10]
	mov		r0, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x10]
	add		r0, r2, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x54FBA, 0x2

_08054fbc:	.4byte RunGameLogic_CallBack
_08054fc0:	.4byte 0x08054DFD
_08054fc4:	.4byte 0x0810d928
_08054fc8:	.4byte 0x0810d958
	thumb_func_end sub_08054f68

	thumb_func_start sub_08054fcc
sub_08054fcc:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	mov		r8, r3
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	ldr		r0, _08055020
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08054e88
	add		r2, r0, #0x0
	strh	r4, [r2, #0x24]
	ldr		r0, _08055024
	str		r0, [r2, #0x0]
	strh	r5, [r2, #0x14]
	strh	r6, [r2, #0x16]
	ldr		r0, _08055028
	mov		r1, r8
	cmp		r1, #0x0
	beq		_08055008
	ldr		r0, _0805502c
_08055008:
	str		r0, [r2, #0x8]
	ldrb	r1, [r2, #0x10]
	mov		r0, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x10]
	add		r0, r2, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x5501E, 0x2

_08055020:	.4byte RunGameLogic_CallBack
_08055024:	.4byte 0x08054DFD
_08055028:	.4byte 0x0810d988
_0805502c:	.4byte 0x0810d9b8
	thumb_func_end sub_08054fcc

	thumb_func_start sub_08055030
sub_08055030:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r2, #0x0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r8, r0
	lsl		r1, r1, #0x10
	lsr		r6, r1, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	lsl		r3, r3, #0x18
	lsr		r7, r3, #0x18
	ldr		r0, _080550d4
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08054e88
	add		r5, r0, #0x0
	strh	r4, [r5, #0x24]
	cmp		r7, #0x0
	bne		_08055090
	ldr		r2, _080550d8
	ldr		r0, _080550dc
	mov		r1, #0xca
	lsl		r1, r1, #0x2
	add		r3, r0, r1
	ldrh	r1, [r3, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_0805508a
	mov		r2, #0x0
	ldr		r1, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	bne		_08055086
	mov		r2, #0x1
_08055086:
	cmp		r2, #0x0
	beq		_08055090
_0805508a:
	mov		r0, #0x65
	bl		sub_0807073c
_08055090:
	ldr		r0, _080550e0
	str		r0, [r5, #0x0]
	mov		r2, #0x0
	mov		r0, r8
	strh	r0, [r5, #0x14]
	strh	r6, [r5, #0x16]
	lsl		r0, r6, #0x10
	str		r0, [r5, #0x2c]
	ldr		r0, _080550e4
	lsl		r1, r7, #0x2
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	str		r0, [r5, #0x30]
	ldr		r0, _080550e8
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	str		r0, [r5, #0x34]
	ldr		r0, PTR_PTR_080550ec
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	str		r0, [r5, #0x8]
	ldrb	r1, [r5, #0x10]
	mov		r0, #0x1
	orr		r0, r1
	strb	r0, [r5, #0x10]
	add		r0, r5, #0x0
	add		r0, #0x3a
	strb	r2, [r0, #0x0]
	add		r0, r5, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_080550d4:	.4byte RunGameLogic_CallBack
_080550d8:	.4byte 0x08124544
_080550dc:	.4byte 0x081245c8
_080550e0:	.4byte sub_08055180
_080550e4:	.4byte 0x0810db38
_080550e8:	.4byte 0x0810db5c
PTR_PTR_080550ec:	.4byte 0x0810db10
	thumb_func_end sub_08055030

	thumb_func_start sub_080550f0
sub_080550f0:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r2, #0x0
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	lsl		r1, r1, #0x10
	lsr		r6, r1, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	ldr		r0, _0805516c
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08054e88
	add		r5, r0, #0x0
	strh	r4, [r5, #0x24]
	ldr		r2, _08055170
	ldr		r0, _08055174
	mov		r1, #0xca
	lsl		r1, r1, #0x2
	add		r3, r0, r1
	ldrh	r1, [r3, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_0805513c
	mov		r2, #0x0
	ldr		r1, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	bne		_08055138
	mov		r2, #0x1
_08055138:
	cmp		r2, #0x0
	beq		_08055142
_0805513c:
	mov		r0, #0x65
	bl		sub_0807073c
_08055142:
	ldr		r0, _08055178
	str		r0, [r5, #0x0]
	mov		r1, #0x0
	mov		r0, #0x0
	strh	r7, [r5, #0x14]
	strh	r6, [r5, #0x16]
	str		r0, [r5, #0x34]
	add		r0, r5, #0x0
	add		r0, #0x38
	strb	r1, [r0, #0x0]
	ldr		r0, _0805517c
	str		r0, [r5, #0x8]
	ldrb	r1, [r5, #0x10]
	mov		r0, #0xfe
	and		r0, r1
	strb	r0, [r5, #0x10]
	add		r0, r5, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x5516A, 0x2

_0805516c:	.4byte RunGameLogic_CallBack
_08055170:	.4byte 0x08124544
_08055174:	.4byte 0x081245c8
_08055178:	.4byte 0x08055339
_0805517c:	.4byte 0x0810dac0
	thumb_func_end sub_080550f0

	thumb_func_start sub_08055180
sub_08055180:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	ldr		r0, _08055250
	ldr		r1, _08055254
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	mov		r2, #0x24
	ldrsh	r0, [r1, r2]
	str		r0, [r7, #0x1c]
	mov		r2, #0x24
	ldrsh	r0, [r1, r2]
	str		r0, [r7, #0x20]
	ldr		r1, [r7, #0x30]
	ldrh	r0, [r7, #0x14]
	add		r0, r0, r1
	strh	r0, [r7, #0x14]
	ldr		r0, [r7, #0x2c]
	ldr		r2, [r7, #0x34]
	sub		r0, r0, r2
	str		r0, [r7, #0x2c]
	mov		r1, #0x88
	lsl		r1, r1, #0x10
	cmp		r0, r1
	ble		_08055234
	neg		r0, r2
	str		r0, [r7, #0x34]
	add		r1, r7, #0x0
	add		r1, #0x3a
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	strb	r0, [r1, #0x0]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	add		r4, r1, #0x0
	cmp		r0, #0x3
	bhi		_08055234
	ldr		r2, _08055258
	ldr		r0, _0805525c
	mov		r1, #0xcc
	lsl		r1, r1, #0x2
	add		r3, r0, r1
	ldrh	r1, [r3, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_080551f4
	mov		r2, #0x0
	ldr		r1, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	bne		_080551f0
	mov		r2, #0x1
_080551f0:
	cmp		r2, #0x0
	beq		_08055234
_080551f4:
	ldr		r1, _08055260
	ldrb	r0, [r4, #0x0]
	sub		r0, #0x1
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrh	r6, [r0, #0x0]
	mov		r0, #0x66
	bl		sub_0807073c
	ldr		r5, _08055258
	ldr		r4, _0805525c
	mov		r2, #0xcc
	lsl		r2, r2, #0x2
	add		r4, r4, r2
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_0807092c
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_0807169c
_08055234:
	mov		r1, #0x2e
	ldrsh	r0, [r7, r1]
	strh	r0, [r7, #0x16]
	ldr		r0, [r7, #0x34]
	ldr		r2, _08055264
	add		r0, r0, r2
	str		r0, [r7, #0x34]
	add		r0, r7, #0x0
	bl		sub_08054dfc
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5524E, 0x2

_08055250:	.4byte RunGameLogic_CallBack
_08055254:	.4byte 0x00000838
_08055258:	.4byte 0x08124544
_0805525c:	.4byte 0x081245c8
_08055260:	.4byte 0x0810db80
_08055264:	.4byte 0xFFFF8000

.incbin "base.gba", 0x55268, 0xD0
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	add		r5, r3, #0x0
	add		r5, #0x38
	ldrb	r0, [r5, #0x0]
	add		r4, r0, #0x0
	cmp		r4, #0x3
	bne		_08055350
	ldrb	r1, [r3, #0x10]
	mov		r0, #0x1
	orr		r0, r1
	strb	r0, [r3, #0x10]
_08055350:
	ldr		r1, [r3, #0x34]
	asr		r2, r1, #0x10
	ldrh	r0, [r3, #0x16]
	sub		r0, r0, r2
	strh	r0, [r3, #0x16]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	str		r1, [r3, #0x34]
	add		r0, r4, #0x1
	strb	r0, [r5, #0x0]
	add		r0, r3, #0x0
	bl		sub_08054dfc
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x55372, 0x96
	thumb_func_end sub_08055180

	thumb_func_start sub_08055408
sub_08055408:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0xc
	add		r5, r0, #0x0
	mov		r4, #0x0
	ldr		r7, _08055444
	mov		r6, #0x0
_08055414:
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	bl		sub_08054e88
	lsl		r2, r4, #0x2
	mov		r3, sp
	add		r1, r3, r2
	str		r0, [r1, #0x0]
	str		r5, [r0, #0x28]
	ldr		r0, [r1, #0x0]
	add		r1, r4, #0x1
	add		r0, #0x2e
	strb	r1, [r0, #0x0]
	add		r3, r1, #0x0
	cmp		r4, #0x1
	beq		_08055448
	cmp		r4, #0x1
	bgt		_0805544e
	cmp		r4, #0x0
	bne		_0805544e
	ldr		r1, [sp, #0x0]
	mov		r0, #0x20
	b		_08055456

_08055444:	.4byte RunGameLogic_CallBack

_08055448:
	ldr		r0, [sp, #0x4]
	strh	r6, [r0, #0x2c]
	b		_08055458
_0805544e:
	mov		r1, sp
	add		r0, r1, r2
	ldr		r1, [r0, #0x0]
	mov		r0, #0x40
_08055456:
	strh	r0, [r1, #0x2c]
_08055458:
	mov		r1, sp
	add		r0, r1, r2
	ldr		r1, [r0, #0x0]
	ldr		r0, _08055478
	str		r0, [r1, #0x0]
	ldr		r0, _0805547c
	str		r0, [r1, #0x4]
	add		r4, r3, #0x0
	cmp		r4, #0x2
	ble		_08055414
	ldr		r0, [sp, #0x0]
	add		sp, #0xc
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x55476, 0x2

_08055478:	.4byte sub_08055480
_0805547c:	.4byte 0x08096e58
	thumb_func_end sub_08055408

	thumb_func_start sub_08055480
sub_08055480:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r6, r0, #0x0
	ldr		r2, _080554c0
	ldr		r1, _080554c4
	add		r0, r2, r1
	ldr		r3, [r6, #0x28]
	mov		r8, r3
	ldr		r1, _080554c8
	add		r1, r8
	ldrb	r1, [r1, #0x0]
	str		r1, [sp, #0x0]
	mov		r3, #0x14
	ldrsh	r1, [r0, r3]
	mov		r0, r8
	add		r0, #0x56
	ldrh	r0, [r0, #0x0]
	sub		r4, r1, r0
	add		r0, r6, #0x0
	add		r0, #0x2e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_080554cc
	mov		r0, #0xc0
	lsl		r0, r0, #0x5
	add		r4, r4, r0
	b		_080554d8

.incbin "base.gba", 0x554BE, 0x2

_080554c0:	.4byte RunGameLogic_CallBack
_080554c4:	.4byte 0x00000848
_080554c8:	.4byte 0x0000017D

_080554cc:
	cmp		r0, #0x2
	bgt		_080554d4
	cmp		r0, #0x1
	beq		_080554d8
_080554d4:
	ldr		r1, _080555ac
	add		r4, r4, r1
_080554d8:
	ldr		r2, _080555b0
	mov		r9, r2
	and		r4, r2
	ldr		r3, _080555b4
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_080554ea
	add		r0, #0x3f
_080554ea:
	asr		r0, r0, #0x6
	ldr		r1, _080555b8
	add		r2, r1, #0x0
	and		r0, r2
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r7, r0, #0x3
	mov		r1, #0x2c
	ldrsh	r0, [r6, r1]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0805550c
	add		r0, #0x3f
_0805550c:
	asr		r0, r0, #0x6
	and		r0, r2
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r5, r0, #0x1
	ldrh	r0, [r6, #0x2c]
	add		r0, #0x2
	strh	r0, [r6, #0x2c]
	add		r0, r6, #0x0
	add		r0, #0x2e
	ldrb	r1, [r0, #0x0]
	mov		r10, r0
	cmp		r1, #0x1
	bne		_08055532
	ldr		r2, _080555bc
	add		r5, r5, r2
_08055532:
	mov		r3, r8
	mov		r0, #0x24
	ldrsh	r1, [r3, r0]
	mov		r0, #0x80
	lsl		r0, r0, #0x9
	bl		sub_0807d80c
	add		r1, r0, #0x0
	add		r0, r7, #0x0
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0805554e
	ldr		r2, _080555c0
	add		r0, r0, r2
_0805554e:
	asr		r7, r0, #0x18
	add		r0, r5, #0x0
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0805555c
	ldr		r3, _080555c0
	add		r0, r0, r3
_0805555c:
	asr		r5, r0, #0x18
	mov		r1, r8
	mov		r2, #0x20
	ldrsh	r0, [r1, r2]
	add		r0, r0, r7
	strh	r0, [r6, #0x14]
	mov		r3, #0x22
	ldrsh	r0, [r1, r3]
	add		r0, r0, r5
	strh	r0, [r6, #0x16]
	mov		r2, #0x24
	ldrsh	r0, [r1, r2]
	str		r0, [r6, #0x1c]
	mov		r3, #0x24
	ldrsh	r0, [r1, r3]
	str		r0, [r6, #0x20]
	ldr		r0, _080555c4
	cmp		r4, r0
	bgt		_080555f0
	mov		r0, #0xf0
	lsl		r0, r0, #0x7
	cmp		r4, r0
	bge		_08055668
	ldr		r0, _080555c8
	cmp		r4, r0
	bgt		_080555d0
	mov		r0, #0xa0
	lsl		r0, r0, #0x6
	cmp		r4, r0
	bge		_08055654
	ldr		r0, _080555cc
	cmp		r4, r0
	bgt		_0805564c
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r4, r0
	bge		_08055644
	cmp		r4, #0x0
	blt		_0805566c
	b		_08055636

_080555ac:	.4byte 0xFFFFE800
_080555b0:	.4byte 0x0000FFFF
_080555b4:	.4byte 0x08101068
_080555b8:	.4byte 0x000003FF
_080555bc:	.4byte 0xFFFA0000
_080555c0:	.4byte 0x00FFFFFF
_080555c4:	.4byte 0x000087FF
_080555c8:	.4byte 0x000037FF
_080555cc:	.4byte 0x000017FF

_080555d0:
	ldr		r0, _080555e0
	cmp		r4, r0
	bgt		_080555e4
	mov		r0, #0x90
	lsl		r0, r0, #0x7
	cmp		r4, r0
	bge		_0805565c
	b		_0805566c

_080555e0:	.4byte 0x000057FF

_080555e4:
	ldr		r0, _080555ec
	cmp		r4, r0
	ble		_08055660
	b		_08055664

_080555ec:	.4byte 0x000067FF

_080555f0:
	ldr		r0, _08055610
	cmp		r4, r0
	bgt		_08055618
	mov		r0, #0xb8
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bge		_0805566c
	ldr		r0, _08055614
	cmp		r4, r0
	bgt		_0805565c
	mov		r0, #0x98
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bge		_08055660
	b		_08055664

.incbin "base.gba", 0x5560E, 0x2

_08055610:	.4byte 0x0000C7FF
_08055614:	.4byte 0x0000A7FF

_08055618:
	ldr		r0, _08055628
	cmp		r4, r0
	bgt		_0805562c
	mov		r0, #0xd8
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bge		_0805564c
	b		_08055654

_08055628:	.4byte 0x0000E7FF

_0805562c:
	ldr		r0, _0805563c
	cmp		r4, r0
	ble		_08055644
	cmp		r4, r9
	bgt		_0805566c
_08055636:
	ldr		r0, _08055640
	b		_0805566e

.incbin "base.gba", 0x5563A, 0x2

_0805563c:	.4byte 0x0000F7FF
_08055640:	.4byte 0x0000FFFC

_08055644:
	ldr		r0, _08055648
	b		_0805566e

_08055648:	.4byte 0x0000FFFD

_0805564c:
	ldr		r0, _08055650
	b		_0805566e

_08055650:	.4byte 0x0000FFFE

_08055654:
	ldr		r0, _08055658
	b		_0805566e

_08055658:	.4byte 0x0000FFFF

_0805565c:
	mov		r0, #0x1
	b		_0805566e
_08055660:
	mov		r0, #0x2
	b		_0805566e
_08055664:
	mov		r0, #0x3
	b		_0805566e
_08055668:
	mov		r0, #0x4
	b		_0805566e
_0805566c:
	mov		r0, #0x0
_0805566e:
	mov		r2, r8
	mov		r3, #0x24
	ldrsh	r1, [r2, r3]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	add		r0, r0, r1
	strh	r0, [r6, #0x24]
	mov		r0, #0xc9
	lsl		r0, r0, #0x1
	add		r0, r8
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_080556b0
	mov		r0, #0x14
	ldrsh	r1, [r6, r0]
	mov		r0, #0x10
	neg		r0, r0
	cmp		r1, r0
	blt		_080556b0
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bgt		_080556b0
	mov		r1, #0x16
	ldrsh	r0, [r6, r1]
	cmp		r0, #0xb0
	bgt		_080556b0
	ldrb	r1, [r6, #0x10]
	mov		r0, #0x1
	orr		r0, r1
	b		_080556b6
_080556b0:
	ldrb	r1, [r6, #0x10]
	mov		r0, #0xfe
	and		r0, r1
_080556b6:
	strb	r0, [r6, #0x10]
	ldr		r3, [sp, #0x0]
	mov		r2, r10
	ldrb	r2, [r2, #0x0]
	cmp		r3, r2
	bge		_080556d0
	ldr		r3, _080556e0
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r3, r1
	add		r1, r6, #0x0
	bl		sub_08054ed0
_080556d0:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080556e0:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_08055480

	thumb_func_start sub_080556e4
sub_080556e4:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	ldr		r0, _08055720
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08054e88
	strh	r4, [r0, #0x24]
	ldr		r1, _08055724
	str		r1, [r0, #0x0]
	strh	r5, [r0, #0x14]
	strh	r6, [r0, #0x16]
	ldr		r1, _08055728
	str		r1, [r0, #0x8]
	ldrb	r2, [r0, #0x10]
	mov		r1, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x10]
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08055720:	.4byte RunGameLogic_CallBack
_08055724:	.4byte 0x08054DFD
_08055728:	.4byte 0x0810db88
	thumb_func_end sub_080556e4

	thumb_func_start sub_0805572c
sub_0805572c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	ldr		r0, _08055768
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08054e88
	strh	r4, [r0, #0x24]
	ldr		r1, _0805576c
	str		r1, [r0, #0x0]
	strh	r5, [r0, #0x14]
	strh	r6, [r0, #0x16]
	ldr		r1, _08055770
	str		r1, [r0, #0x8]
	ldrb	r2, [r0, #0x10]
	mov		r1, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x10]
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08055768:	.4byte RunGameLogic_CallBack
_0805576c:	.4byte 0x08054DFD
_08055770:	.4byte 0x0810dbf0
	thumb_func_end sub_0805572c

	thumb_func_start sub_08055774
sub_08055774:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	add		r6, r0, #0x0
	add		r3, r1, #0x0
	add		r4, r2, #0x0
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	ldr		r5, _080557d0
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	str		r3, [sp, #0x0]
	bl		sub_08054e88
	strh	r4, [r0, #0x24]
	ldr		r1, _080557d4
	str		r1, [r0, #0x0]
	strh	r6, [r0, #0x14]
	ldr		r3, [sp, #0x0]
	strh	r3, [r0, #0x16]
	ldr		r3, _080557d8
	add		r5, r5, r3
	ldr		r2, [r5, #0x0]
	mov		r3, #0x24
	ldrsh	r1, [r2, r3]
	asr		r1, r1, #0x1
	str		r1, [r0, #0x1c]
	mov		r3, #0x24
	ldrsh	r1, [r2, r3]
	asr		r1, r1, #0x1
	str		r1, [r0, #0x20]
	ldr		r1, _080557dc
	str		r1, [r0, #0x8]
	ldrb	r2, [r0, #0x10]
	mov		r1, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x10]
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x557CE, 0x2

_080557d0:	.4byte RunGameLogic_CallBack
_080557d4:	.4byte 0x08054DFD
_080557d8:	.4byte 0x00000838
_080557dc:	.4byte 0x0810dc20
	thumb_func_end sub_08055774

	thumb_func_start sub_080557e0
sub_080557e0:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	ldr		r0, _0805581c
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08054e88
	strh	r4, [r0, #0x24]
	ldr		r1, _08055820
	str		r1, [r0, #0x0]
	strh	r5, [r0, #0x14]
	strh	r6, [r0, #0x16]
	ldr		r1, _08055824
	str		r1, [r0, #0x8]
	ldrb	r2, [r0, #0x10]
	mov		r1, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x10]
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0805581c:	.4byte RunGameLogic_CallBack
_08055820:	.4byte 0x08054DFD
_08055824:	.4byte 0x0810dc40
	thumb_func_end sub_080557e0

	thumb_func_start sub_08055828
sub_08055828:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0xc
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	lsl		r1, r1, #0x10
	lsr		r6, r1, #0x10
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	mov		r9, r2
	mov		r5, #0xf
	mov		r4, sp
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	mov		r8, r0
_0805584a:
	ldr		r0, _080558b8
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08054e88
	str		r0, [r4, #0x0]
	mov		r1, r9
	strh	r1, [r0, #0x24]
	ldr		r1, [r4, #0x0]
	ldr		r0, _080558bc
	str		r0, [r1, #0x0]
	strh	r7, [r1, #0x14]
	ldr		r0, [r4, #0x0]
	strh	r6, [r0, #0x16]
	ldr		r1, [r4, #0x0]
	lsl		r0, r7, #0x10
	str		r0, [r1, #0x28]
	ldr		r1, [r4, #0x0]
	lsl		r0, r6, #0x10
	str		r0, [r1, #0x2c]
	bl		sub_080270d0
	ldr		r2, [r4, #0x0]
	add		r1, r5, #0x0
	and		r1, r0
	lsl		r1, r1, #0x4
	add		r1, r8
	str		r1, [r2, #0x1c]
	bl		sub_080270d0
	ldr		r2, [r4, #0x0]
	add		r1, r5, #0x0
	and		r1, r0
	lsl		r1, r1, #0x4
	add		r1, r8
	str		r1, [r2, #0x20]
	add		r0, sp, #0x4
	cmp		r4, r0
	beq		_080558c4
	cmp		r4, r0
	ble		_080558d2
	add		r0, sp, #0x8
	cmp		r4, r0
	bne		_080558d2
	bl		sub_080270d0
	ldr		r2, [sp, #0x8]
	add		r1, r5, #0x0
	and		r1, r0
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0xb
	ldr		r1, _080558c0
	b		_080558e6

_080558b8:	.4byte RunGameLogic_CallBack
_080558bc:	.4byte sub_08055928
_080558c0:	.4byte 0xFFFF4000

_080558c4:
	bl		sub_080270d0
	ldr		r2, [sp, #0x4]
	mov		r1, #0x7
	and		r1, r0
	neg		r1, r1
	b		_080558dc
_080558d2:
	bl		sub_080270d0
	ldr		r2, [r4, #0x0]
	mov		r1, #0x7
	and		r1, r0
_080558dc:
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0xb
	mov		r1, #0xc0
	lsl		r1, r1, #0x6
_080558e6:
	add		r0, r0, r1
	str		r0, [r2, #0x30]
	bl		sub_080270d0
	ldr		r2, [r4, #0x0]
	add		r1, r5, #0x0
	and		r1, r0
	lsl		r1, r1, #0xd
	ldr		r0, _08055920
	add		r1, r1, r0
	str		r1, [r2, #0x34]
	ldmia	r4!, { r1 }
	ldr		r0, _08055924
	str		r0, [r1, #0x4]
	ldrb	r2, [r1, #0x10]
	mov		r0, #0x1
	orr		r0, r2
	strb	r0, [r1, #0x10]
	add		r0, sp, #0x8
	cmp		r4, r0
	ble		_0805584a
	ldr		r0, [sp, #0x0]
	add		sp, #0xc
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08055920:	.4byte 0xFFFD0000
_08055924:	.4byte 0x08098078
	thumb_func_end sub_08055828

	thumb_func_start sub_08055928
sub_08055928:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	ldr		r4, _08055988
	ldr		r1, _0805598c
	add		r0, r4, r1
	ldrh	r2, [r0, #0x14]
	ldr		r1, _08055990
	add		r0, r4, r1
	ldr		r5, [r0, #0x0]
	ldr		r0, [r3, #0x28]
	ldr		r1, [r3, #0x30]
	add		r0, r0, r1
	str		r0, [r3, #0x28]
	asr		r1, r0, #0x10
	lsl		r2, r2, #0x10
	asr		r0, r2, #0x10
	cmp		r0, #0x0
	bge		_0805594e
	add		r0, #0x7f
_0805594e:
	asr		r0, r0, #0x7
	sub		r0, r1, r0
	mov		r1, #0xff
	and		r0, r1
	strh	r0, [r3, #0x14]
	ldr		r2, [r3, #0x2c]
	ldr		r1, [r3, #0x34]
	add		r2, r2, r1
	str		r2, [r3, #0x2c]
	asr		r0, r2, #0x10
	add		r0, r0, r5
	strh	r0, [r3, #0x16]
	mov		r0, #0xe0
	lsl		r0, r0, #0x5
	add		r1, r1, r0
	str		r1, [r3, #0x34]
	ldr		r0, _08055994
	cmp		r2, r0
	ble		_08055980
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	add		r1, r3, #0x0
	bl		sub_08054ed0
_08055980:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x55986, 0x2

_08055988:	.4byte RunGameLogic_CallBack
_0805598c:	.4byte 0x00000848
_08055990:	.4byte 0x00000BC8
_08055994:	.4byte 0x003FFFFF
	thumb_func_end sub_08055928

	thumb_func_start sub_08055998
sub_08055998:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _080559c0
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08054e88
	str		r4, [r0, #0x28]
	ldr		r1, _080559c4
	str		r1, [r0, #0x0]
	ldr		r1, _080559c8
	str		r1, [r0, #0x8]
	ldrb	r2, [r0, #0x10]
	mov		r1, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x10]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_080559c0:	.4byte RunGameLogic_CallBack
_080559c4:	.4byte sub_080559cc
_080559c8:	.4byte 0x0810dc50
	thumb_func_end sub_08055998

	thumb_func_start sub_080559cc
sub_080559cc:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x28]
	bl		sub_08054dfc
	cmp		r0, #0x0
	beq		_080559fa
	mov		r1, #0x24
	ldrsh	r0, [r5, r1]
	sub		r0, #0x1
	strh	r0, [r4, #0x24]
	mov		r1, #0x20
	ldrsh	r0, [r5, r1]
	strh	r0, [r4, #0x14]
	mov		r1, #0x22
	ldrsh	r0, [r5, r1]
	strh	r0, [r4, #0x16]
	mov		r1, #0x24
	ldrsh	r0, [r5, r1]
	str		r0, [r4, #0x1c]
	mov		r1, #0x24
	ldrsh	r0, [r5, r1]
	str		r0, [r4, #0x20]
_080559fa:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080559cc

	thumb_func_start sub_08055a00
sub_08055a00:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _08055a28
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08054e88
	str		r4, [r0, #0x28]
	ldr		r1, _08055a2c
	str		r1, [r0, #0x0]
	ldr		r1, _08055a30
	str		r1, [r0, #0x8]
	ldrb	r2, [r0, #0x10]
	mov		r1, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x10]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08055a28:	.4byte RunGameLogic_CallBack
_08055a2c:	.4byte sub_08055a34
_08055a30:	.4byte 0x0810dcc0
	thumb_func_end sub_08055a00

	thumb_func_start sub_08055a34
sub_08055a34:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x28]
	bl		sub_08054dfc
	cmp		r0, #0x0
	beq		_08055a62
	mov		r1, #0x24
	ldrsh	r0, [r5, r1]
	sub		r0, #0x1
	strh	r0, [r4, #0x24]
	mov		r1, #0x20
	ldrsh	r0, [r5, r1]
	strh	r0, [r4, #0x14]
	mov		r1, #0x22
	ldrsh	r0, [r5, r1]
	strh	r0, [r4, #0x16]
	mov		r1, #0x24
	ldrsh	r0, [r5, r1]
	str		r0, [r4, #0x1c]
	mov		r1, #0x24
	ldrsh	r0, [r5, r1]
	str		r0, [r4, #0x20]
_08055a62:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08055a34

	thumb_func_start sub_08055a68
sub_08055a68:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _08055ab4
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08054e88
	str		r4, [r0, #0x28]
	add		r2, r0, #0x0
	add		r2, #0x2c
	mov		r1, #0x0
	strb	r1, [r2, #0x0]
	ldr		r1, _08055ab8
	str		r1, [r0, #0x0]
	ldr		r1, [r4, #0x44]
	str		r1, [r0, #0x4]
	mov		r2, #0x20
	ldrsh	r1, [r4, r2]
	strh	r1, [r0, #0x14]
	mov		r2, #0x22
	ldrsh	r1, [r4, r2]
	sub		r1, #0xa
	strh	r1, [r0, #0x16]
	mov		r2, #0x24
	ldrsh	r1, [r4, r2]
	str		r1, [r0, #0x1c]
	mov		r2, #0x24
	ldrsh	r1, [r4, r2]
	lsl		r1, r1, #0x2
	str		r1, [r0, #0x20]
	ldrb	r2, [r0, #0x10]
	mov		r1, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x10]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08055ab4:	.4byte RunGameLogic_CallBack
_08055ab8:	.4byte sub_08055abc
	thumb_func_end sub_08055a68

	thumb_func_start sub_08055abc
sub_08055abc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	ldr		r4, [r6, #0x28]
	mov		r0, #0x2c
	add		r0, r0, r6
	mov		r8, r0
	ldrb	r7, [r0, #0x0]
	add		r5, r7, #0x0
	ldr		r0, [r4, #0x44]
	str		r0, [r6, #0x4]
	mov		r1, #0x24
	ldrsh	r0, [r4, r1]
	add		r0, #0x1
	strh	r0, [r6, #0x24]
	mov		r0, #0x20
	ldrsh	r2, [r4, r0]
	ldr		r3, _08055b44
	lsl		r1, r5, #0x1
	add		r1, r1, r5
	add		r0, r1, r3
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r2, r2, r0
	strh	r2, [r6, #0x14]
	mov		r0, #0x22
	ldrsh	r2, [r4, r0]
	add		r0, r3, #0x1
	add		r0, r1, r0
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r2, r2, r0
	strh	r2, [r6, #0x16]
	add		r3, #0x2
	add		r1, r1, r3
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	lsl		r0, r0, #0x7
	str		r0, [r6, #0x18]
	mov		r1, #0x24
	ldrsh	r0, [r4, r1]
	str		r0, [r6, #0x1c]
	mov		r1, #0x24
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x2
	str		r0, [r6, #0x20]
	add		r0, r5, #0x1
	lsl		r0, r0, #0x18
	lsr		r7, r0, #0x18
	cmp		r5, #0xe
	bls		_08055b36
	ldr		r0, _08055b48
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	add		r1, r6, #0x0
	bl		sub_08054ed0
_08055b36:
	mov		r0, r8
	strb	r7, [r0, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08055b44:	.4byte 0x0810dd08
_08055b48:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_08055abc

	thumb_func_start sub_08055b4c
sub_08055b4c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r8, r1
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r9, r2
	ldr		r4, _08055c10
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	bl		sub_08054e88
	add		r5, r0, #0x0
	add		r6, r7, #0x0
	ldr		r2, _08055c14
	add		r4, r4, r2
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08055bb4
	ldr		r2, _08055c18
	ldr		r0, _08055c1c
	mov		r1, #0xb7
	lsl		r1, r1, #0x3
	add		r3, r0, r1
	ldrh	r1, [r3, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_08055bae
	mov		r2, #0x0
	ldr		r1, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	bne		_08055baa
	mov		r2, #0x1
_08055baa:
	cmp		r2, #0x0
	beq		_08055bb4
_08055bae:
	mov		r0, #0xb7
	bl		sub_0807073c
_08055bb4:
	str		r7, [r5, #0x28]
	ldr		r0, _08055c20
	str		r0, [r5, #0x0]
	ldr		r0, _08055c24
	str		r0, [r5, #0x8]
	mov		r2, #0x24
	ldrsh	r0, [r6, r2]
	sub		r0, #0x1
	strh	r0, [r5, #0x24]
	add		r0, r5, #0x0
	add		r0, #0x2c
	mov		r1, r8
	strb	r1, [r0, #0x0]
	add		r0, #0x1
	mov		r2, r9
	strb	r2, [r0, #0x0]
	mov		r0, #0x20
	ldrsh	r4, [r6, r0]
	mov		r1, r8
	lsl		r0, r1, #0x18
	asr		r0, r0, #0x10
	mov		r2, #0x24
	ldrsh	r1, [r6, r2]
	bl		sub_08071b70
	add		r4, r4, r0
	strh	r4, [r5, #0x14]
	mov		r0, #0x22
	ldrsh	r4, [r6, r0]
	mov		r1, r9
	lsl		r0, r1, #0x18
	asr		r0, r0, #0x10
	mov		r2, #0x24
	ldrsh	r1, [r6, r2]
	bl		sub_08071b70
	add		r4, r4, r0
	strh	r4, [r5, #0x16]
	add		r0, r5, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x55C0E, 0x2

_08055c10:	.4byte RunGameLogic_CallBack
_08055c14:	.4byte 0x00000838
_08055c18:	.4byte 0x08124544
_08055c1c:	.4byte 0x081245c8
_08055c20:	.4byte sub_08055c28
_08055c24:	.4byte 0x0810dd38
	thumb_func_end sub_08055b4c

	thumb_func_start sub_08055c28
sub_08055c28:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	ldr		r7, [r5, #0x28]
	bl		sub_08054dfc
	cmp		r0, #0x0
	beq		_08055c8c
	mov		r1, #0x24
	ldrsh	r0, [r7, r1]
	sub		r0, #0x1
	strh	r0, [r5, #0x24]
	mov		r2, #0x20
	ldrsh	r4, [r7, r2]
	add		r0, r5, #0x0
	add		r0, #0x2c
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	lsl		r0, r0, #0x8
	mov		r2, #0x24
	ldrsh	r1, [r7, r2]
	bl		sub_08071b70
	add		r4, r4, r0
	strh	r4, [r5, #0x14]
	mov		r0, #0x22
	ldrsh	r4, [r7, r0]
	add		r6, r5, #0x0
	add		r6, #0x2d
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	lsl		r0, r0, #0x8
	mov		r2, #0x24
	ldrsh	r1, [r7, r2]
	bl		sub_08071b70
	add		r4, r4, r0
	strh	r4, [r5, #0x16]
	ldrb	r0, [r6, #0x0]
	sub		r0, #0x1
	strb	r0, [r6, #0x0]
	add		r0, r7, #0x0
	bl		sub_08037220
	cmp		r0, #0x0
	bne		_08055c8c
	ldrb	r0, [r5, #0x10]
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r5, #0x10]
_08055c8c:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x55C92, 0x12A
	thumb_func_end sub_08055c28

	thumb_func_start sub_08055dbc
sub_08055dbc:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x28]
	bl		sub_08054dfc
	cmp		r0, #0x0
	beq		_08055df2
	mov		r1, #0x24
	ldrsh	r0, [r5, r1]
	sub		r0, #0x1
	strh	r0, [r4, #0x24]
	mov		r1, #0x20
	ldrsh	r0, [r5, r1]
	strh	r0, [r4, #0x14]
	mov		r1, #0x22
	ldrsh	r0, [r5, r1]
	sub		r0, #0x10
	strh	r0, [r4, #0x16]
	add		r0, r5, #0x0
	bl		sub_08037220
	cmp		r0, #0x0
	bne		_08055df2
	ldrb	r1, [r4, #0x10]
	mov		r0, #0x1
	orr		r0, r1
	strb	r0, [r4, #0x10]
_08055df2:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08055dbc

	thumb_func_start sub_08055df8
sub_08055df8:
	push	{ r4, r5, r6, lr }
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6 }
	mov		r9, r0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	lsl		r5, r5, #0x18
	lsr		r5, r5, #0x18
	ldr		r0, _08055e7c
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08054e88
	add		r6, r0, #0x0
	mov		r2, r9
	str		r2, [r6, #0x28]
	ldr		r0, _08055e80
	str		r0, [r6, #0x0]
	ldr		r0, _08055e84
	str		r0, [r6, #0x8]
	mov		r1, #0x24
	ldrsh	r0, [r2, r1]
	sub		r0, #0x1
	strh	r0, [r6, #0x24]
	add		r0, r6, #0x0
	add		r0, #0x2c
	strb	r4, [r0, #0x0]
	add		r0, #0x1
	strb	r5, [r0, #0x0]
	mov		r0, #0x20
	ldrsh	r2, [r2, r0]
	mov		r8, r2
	lsl		r4, r4, #0x18
	asr		r4, r4, #0x10
	mov		r2, r9
	mov		r0, #0x24
	ldrsh	r1, [r2, r0]
	add		r0, r4, #0x0
	bl		sub_08071b70
	add		r8, r0
	mov		r1, r8
	strh	r1, [r6, #0x14]
	mov		r2, r9
	mov		r0, #0x22
	ldrsh	r4, [r2, r0]
	lsl		r5, r5, #0x18
	asr		r5, r5, #0x10
	mov		r0, #0x24
	ldrsh	r1, [r2, r0]
	add		r0, r5, #0x0
	bl		sub_08071b70
	add		r4, r4, r0
	strh	r4, [r6, #0x16]
	add		r0, r6, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08055e7c:	.4byte RunGameLogic_CallBack
_08055e80:	.4byte sub_08055e88
_08055e84:	.4byte 0x0810dd8c
	thumb_func_end sub_08055df8

	thumb_func_start sub_08055e88
sub_08055e88:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	ldr		r7, [r5, #0x28]
	bl		sub_08054dfc
	cmp		r0, #0x0
	beq		_08055ef8
	mov		r1, #0x24
	ldrsh	r0, [r7, r1]
	sub		r0, #0x1
	strh	r0, [r5, #0x24]
	mov		r2, #0x20
	ldrsh	r4, [r7, r2]
	add		r0, r5, #0x0
	add		r0, #0x2c
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	lsl		r0, r0, #0x8
	mov		r2, #0x24
	ldrsh	r1, [r7, r2]
	bl		sub_08071b70
	add		r4, r4, r0
	strh	r4, [r5, #0x14]
	mov		r0, #0x22
	ldrsh	r4, [r7, r0]
	add		r6, r5, #0x0
	add		r6, #0x2d
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	lsl		r0, r0, #0x8
	mov		r2, #0x24
	ldrsh	r1, [r7, r2]
	bl		sub_08071b70
	add		r4, r4, r0
	strh	r4, [r5, #0x16]
	ldr		r2, _08055f00
	ldr		r1, [r5, #0xc]
	mov		r0, #0x8
	sub		r0, r0, r1
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r6, #0x0]
	add		r0, r0, r1
	strb	r0, [r6, #0x0]
	add		r0, r7, #0x0
	bl		sub_08037220
	cmp		r0, #0x0
	bne		_08055ef8
	ldrb	r0, [r5, #0x10]
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r5, #0x10]
_08055ef8:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x55EFE, 0x2

_08055f00:	.4byte 0x0810ddac
	thumb_func_end sub_08055e88

	thumb_func_start sub_08055f04
sub_08055f04:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	ldr		r7, [r6, #0x28]
	bl		sub_08054dfc
	cmp		r0, #0x0
	beq		_08055f6c
	add		r5, r6, #0x0
	add		r5, #0x2e
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_08055f22
	sub		r0, #0x1
	strb	r0, [r5, #0x0]
	b		_08055f50
_08055f22:
	ldr		r0, _08055f74
	ldr		r4, [r0, #0x10]
	mov		r0, #0x1f
	add		r1, r4, #0x0
	and		r1, r0
	sub		r1, #0x10
	mov		r2, #0x7
	and		r2, r4
	lsl		r2, r2, #0x19
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	mov		r0, #0xfc
	lsl		r0, r0, #0x18
	add		r2, r2, r0
	asr		r2, r2, #0x18
	add		r0, r7, #0x0
	bl		sub_08055df8
	mov		r0, #0x3
	and		r4, r0
	lsl		r4, r4, #0x2
	add		r4, #0x4
	strb	r4, [r5, #0x0]
_08055f50:
	add		r0, r7, #0x0
	add		r0, #0x72
	ldrb	r1, [r0, #0x0]
	mov		r0, #0xf
	and		r0, r1
	cmp		r0, #0xe
	beq		_08055f6c
	ldr		r0, _08055f74
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	add		r1, r6, #0x0
	bl		sub_08054ed0
_08055f6c:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x55F72, 0x2

_08055f74:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_08055f04

	thumb_func_start sub_08055f78
sub_08055f78:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _08055fa0
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08054e88
	str		r4, [r0, #0x28]
	ldr		r1, _08055fa4
	str		r1, [r0, #0x0]
	ldr		r1, _08055fa8
	str		r1, [r0, #0x8]
	add		r2, r0, #0x0
	add		r2, #0x2e
	mov		r1, #0x0
	strb	r1, [r2, #0x0]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08055fa0:	.4byte RunGameLogic_CallBack
_08055fa4:	.4byte sub_08055f04
_08055fa8:	.4byte 0x0810dd9c
	thumb_func_end sub_08055f78

	thumb_func_start sub_08055fac
sub_08055fac:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	ldr		r0, _08055ff8
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_08054e88
	mov		r3, #0x0
	strh	r6, [r0, #0x24]
	ldr		r1, _08055ffc
	str		r1, [r0, #0x0]
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	add		r4, #0x8
	strh	r4, [r0, #0x14]
	lsl		r5, r5, #0x10
	asr		r5, r5, #0x10
	sub		r5, #0x20
	strh	r5, [r0, #0x16]
	ldr		r1, _08056000
	str		r1, [r0, #0x8]
	ldrb	r2, [r0, #0x10]
	mov		r1, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x10]
	str		r3, [r0, #0x28]
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08055ff8:	.4byte RunGameLogic_CallBack
_08055ffc:	.4byte sub_08056004
_08056000:	.4byte 0x0810ddbc
	thumb_func_end sub_08055fac

	thumb_func_start sub_08056004
sub_08056004:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x28]
	ldr		r0, _0805602c
	add		r0, r5, r0
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	ldrh	r1, [r4, #0x16]
	add		r0, r0, r1
	strh	r0, [r4, #0x16]
	add		r0, r4, #0x0
	bl		sub_08054dfc
	add		r5, #0x1
	str		r5, [r4, #0x28]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5602A, 0x2

_0805602c:	.4byte 0x0810ddcc
	thumb_func_end sub_08056004

	thumb_func_start sub_08056030
sub_08056030:
	push	{ r4, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x18
	mov		r2, #0xff
	lsr		r1, r1, #0x18
	mov		r3, #0x0
	cmp		r1, #0x9
	bhi		_0805604a
	ldr		r0, _08056098
	add		r0, #0xe
	add		r0, r1, r0
	ldrb	r2, [r0, #0x0]
	mov		r3, #0x1
_0805604a:
	cmp		r3, #0x0
	bne		_08056070
	add		r0, r1, #0x0
	sub		r0, #0xa
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x1
	bhi		_08056064
	ldr		r0, _08056098
	add		r0, #0x18
	add		r0, r1, r0
	ldrb	r2, [r0, #0x0]
	mov		r3, #0x1
_08056064:
	cmp		r3, #0x0
	bne		_08056070
	cmp		r1, #0x2
	bne		_08056070
	ldr		r0, _08056098
	ldrb	r2, [r0, #0x1a]
_08056070:
	mov		r0, #0x8
	ldr		r1, _0805609c
	strh	r0, [r1, #0x0]
	lsl		r0, r2, #0x18
	asr		r1, r0, #0x18
	cmp		r1, #0x0
	blt		_080560a4
	ldr		r0, _080560a0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_080560a4
	lsl		r0, r1, #0x10
	lsr		r0, r0, #0x10
	mov		r1, #0x8
	add		r2, r4, #0x0
	mov		r3, #0x20
	bl		sub_08071edc
	mov		r0, #0x0
	b		_080560a6

_08056098:	.4byte 0x02032B50
_0805609c:	.4byte 0x03006010
_080560a0:	.4byte 0x030023C4

_080560a4:
	mov		r0, #0x1
_080560a6:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08056030

	thumb_func_start sub_080560ac
sub_080560ac:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r5, _080560ec
	mov		r0, #0xbf
	lsl		r0, r0, #0x4
	add		r4, r5, r0
	ldrh	r1, [r4, #0x0]
	mov		r7, #0x80
	lsl		r7, r7, #0x8
	add		r0, r7, #0x0
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	ldr		r0, _080560f0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_080560dc
	mov		r0, #0x0
	mov		r1, #0x0
	add		r2, r5, #0x0
	ldr		r3, _080560f4
	bl		sub_08071edc
_080560dc:
	mov		r0, #0x7
	strh	r0, [r5, #0x8]
	cmp		r6, #0x0
	beq		_080560f8
	ldrh	r1, [r4, #0x0]
	add		r0, r7, #0x0
	orr		r0, r1
	b		_080560fe

_080560ec:	.4byte 0x02032B80
_080560f0:	.4byte 0x030023C4
_080560f4:	.4byte 0x00000BF4

_080560f8:
	ldrh	r1, [r4, #0x0]
	ldr		r0, _08056170
	and		r0, r1
_080560fe:
	strh	r0, [r4, #0x0]
	add		r1, r5, #0x0
	mov		r4, #0xbf
	lsl		r4, r4, #0x4
	mov		r3, #0x0
	mov		r2, #0x0
	ldr		r0, _08056174
	add		r0, r0, r5
	mov		r8, r0
_08056110:
	ldrb	r0, [r1, #0x0]
	add		r0, r3, r0
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	add		r1, #0x1
	add		r0, r2, #0x1
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, r4
	blt		_08056110
	ldr		r1, _08056178
	add		r0, r1, #0x0
	eor		r3, r0
	mov		r0, r8
	ldrh	r1, [r0, #0x0]
	eor		r1, r3
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_080561cc
	mov		r1, #0xbf
	lsl		r1, r1, #0x4
	add		r4, r5, r1
	ldrh	r1, [r4, #0x0]
	mov		r7, #0x80
	lsl		r7, r7, #0x8
	add		r0, r7, #0x0
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	ldr		r0, _0805617c
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_08056160
	mov		r0, #0x1
	mov		r1, #0x0
	add		r2, r5, #0x0
	ldr		r3, _08056180
	bl		sub_08071edc
_08056160:
	mov		r0, #0x7
	strh	r0, [r5, #0x8]
	cmp		r6, #0x0
	beq		_08056184
	ldrh	r1, [r4, #0x0]
	add		r0, r7, #0x0
	orr		r0, r1
	b		_0805618a

_08056170:	.4byte 0x00007FFF
_08056174:	.4byte 0x00000BF2
_08056178:	.4byte 0x00002CB4
_0805617c:	.4byte 0x030023C4
_08056180:	.4byte 0x00000BF4

_08056184:
	ldrh	r1, [r4, #0x0]
	ldr		r0, _080561c4
	and		r0, r1
_0805618a:
	strh	r0, [r4, #0x0]
	add		r2, r5, #0x0
	mov		r4, #0xbf
	lsl		r4, r4, #0x4
	mov		r3, #0x0
	mov		r1, #0x0
_08056196:
	ldrb	r0, [r2, #0x0]
	add		r0, r3, r0
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	add		r2, #0x1
	add		r0, r1, #0x1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, r4
	blt		_08056196
	ldr		r1, _080561c8
	add		r0, r1, #0x0
	eor		r3, r0
	mov		r0, r8
	ldrh	r1, [r0, #0x0]
	eor		r1, r3
	neg		r0, r1
	orr		r0, r1
	cmp		r0, #0x0
	bge		_080561cc
	mov		r0, #0x1
	b		_080561ce

.incbin "base.gba", 0x561C2, 0x2

_080561c4:	.4byte 0x00007FFF
_080561c8:	.4byte 0x00002CB4

_080561cc:
	mov		r0, #0x0
_080561ce:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x561D8, 0x17C
	thumb_func_end sub_080560ac

	thumb_func_start sub_08056354
sub_08056354:
	push	{ r4, r5, r6, r7, lr }
	ldr		r7, _08056448
	mov		r4, #0x1
	bl		sub_08070d14
	ldr		r0, _0805644c
	ldrh	r0, [r0, #0x0]
	add		r6, r0, #0x0
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	mov		r0, #0x0
	bl		sub_0807df78
	ldr		r1, _08056450
	ldrh	r2, [r1, #0xa]
	ldr		r0, _08056454
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr		r0, _08056458
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	ldr		r0, [r1, #0x8]
	mov		r2, #0x80
	lsl		r2, r2, #0x18
	cmp		r0, #0x0
	bge		_08056394
_0805638c:
	ldr		r0, [r1, #0x8]
	and		r0, r2
	cmp		r0, #0x0
	bne		_0805638c
_08056394:
	ldr		r1, _0805645c
	ldrh	r2, [r1, #0xa]
	ldr		r0, _08056454
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr		r0, _08056458
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	ldr		r0, [r1, #0x8]
	mov		r2, #0x80
	lsl		r2, r2, #0x18
	ldr		r5, _08056460
	cmp		r0, #0x0
	bge		_080563bc
_080563b4:
	ldr		r0, [r1, #0x8]
	and		r0, r2
	cmp		r0, #0x0
	bne		_080563b4
_080563bc:
	ldr		r1, _08056464
	ldrh	r2, [r1, #0xa]
	ldr		r0, _08056454
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr		r0, _08056458
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	ldr		r0, [r1, #0x8]
	mov		r2, #0x80
	lsl		r2, r2, #0x18
	cmp		r0, #0x0
	bge		_080563e2
_080563da:
	ldr		r0, [r1, #0x8]
	and		r0, r2
	cmp		r0, #0x0
	bne		_080563da
_080563e2:
	ldr		r1, _08056468
	ldrh	r2, [r1, #0xa]
	ldr		r0, _08056454
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr		r0, _08056458
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	ldr		r0, [r1, #0x8]
	mov		r2, #0x80
	lsl		r2, r2, #0x18
	cmp		r0, #0x0
	bge		_08056408
_08056400:
	ldr		r0, [r1, #0x8]
	and		r0, r2
	cmp		r0, #0x0
	bne		_08056400
_08056408:
	add		r1, r5, #0x0
	ldr		r2, _0805646c
	add		r0, r7, #0x0
	bl		sub_08071b6c
	mov		r0, #0x10
	add		r1, r7, #0x0
	bl		sub_080584c4
	cmp		r0, #0x0
	bne		_08056420
	mov		r4, #0x0
_08056420:
	mov		r0, #0x11
	add		r1, r5, #0x0
	bl		sub_080584c4
	cmp		r0, #0x0
	bne		_0805642e
	mov		r4, #0x0
_0805642e:
	bl		sub_08027060
	mov		r0, #0x2
	add		r1, r6, #0x0
	bl		sub_0807df78
	bl		sub_08070d78
	add		r0, r4, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x56446, 0x2

_08056448:	.4byte 0x02032B80
_0805644c:	.4byte InterruptEnableRegister
_08056450:	.4byte DMA0SourceAddress
_08056454:	.4byte 0x0000C5FF
_08056458:	.4byte 0x00007FFF
_0805645c:	.4byte DMA1SourceAddress
_08056460:	.4byte 0x02029400
_08056464:	.4byte DMA2SourceAddress
_08056468:	.4byte DMA3SourceAddress
_0805646c:	.4byte 0x000005FA
	thumb_func_end sub_08056354

	thumb_func_start sub_08056470
sub_08056470:
	push	{ r4, r5, r6, r7, lr }
	lsl		r0, r0, #0x18
	ldr		r5, _080565d4
	mov		r7, #0x1
	ldr		r4, _080565d8
	add		r6, r5, #0x0
	add		r6, #0x8
	lsr		r0, r0, #0x18
	mov		r1, #0x0
	cmp		r0, #0x9
	bhi		_0805648c
	add		r4, r0, #0x0
	add		r4, #0x20
	mov		r1, #0x1
_0805648c:
	cmp		r1, #0x0
	bne		_080564aa
	sub		r0, #0xa
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	bhi		_080564a0
	add		r4, r0, #0x0
	add		r4, #0x40
	mov		r1, #0x1
_080564a0:
	cmp		r1, #0x0
	bne		_080564aa
	cmp		r0, #0x2
	bne		_080564aa
	mov		r4, #0x80
_080564aa:
	lsl		r4, r4, #0x10
	lsr		r0, r4, #0x10
	bl		sub_08058274
	strh		r0, [r5, #0x4]
	mov		r0, #0x9
	strh	r0, [r6, #0xa]
	add		r1, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
_080564be:
	ldrb	r0, [r1, #0x0]
	add		r0, r2, r0
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	add		r1, #0x1
	add		r0, r3, #0x1
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	cmp		r3, #0x1e
	blt		_080564be
	ldr		r1, _080565dc
	add		r0, r1, #0x0
	eor		r2, r0
	strh	r2, [r6, #0x1e]
	add		r1, r5, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
_080564e0:
	ldrb	r0, [r1, #0x0]
	add		r0, r2, r0
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	add		r1, #0x1
	add		r0, r3, #0x1
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	cmp		r3, #0x2
	blt		_080564e0
	ldr		r1, _080565dc
	add		r0, r1, #0x0
	eor		r2, r0
	ldr		r1, _080565e0
	add		r0, r5, r1
	strh	r2, [r0, #0x0]
	bl		sub_08070d14
	ldr		r0, _080565e4
	ldrh	r0, [r0, #0x0]
	add		r6, r0, #0x0
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	mov		r0, #0x0
	bl		sub_0807df78
	ldr		r1, _080565e8
	ldrh	r2, [r1, #0xa]
	ldr		r0, _080565ec
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr		r0, _080565f0
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	ldr		r0, [r1, #0x8]
	mov		r2, #0x80
	lsl		r2, r2, #0x18
	cmp		r0, #0x0
	bge		_0805653a
_08056532:
	ldr		r0, [r1, #0x8]
	and		r0, r2
	cmp		r0, #0x0
	bne		_08056532
_0805653a:
	ldr		r1, _080565f4
	ldrh	r2, [r1, #0xa]
	ldr		r0, _080565ec
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr		r0, _080565f0
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	ldr		r0, [r1, #0x8]
	mov		r2, #0x80
	lsl		r2, r2, #0x18
	cmp		r0, #0x0
	bge		_08056560
_08056558:
	ldr		r0, [r1, #0x8]
	and		r0, r2
	cmp		r0, #0x0
	bne		_08056558
_08056560:
	ldr		r1, _080565f8
	ldrh	r2, [r1, #0xa]
	ldr		r0, _080565ec
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr		r0, _080565f0
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	ldr		r0, [r1, #0x8]
	mov		r2, #0x80
	lsl		r2, r2, #0x18
	cmp		r0, #0x0
	bge		_08056586
_0805657e:
	ldr		r0, [r1, #0x8]
	and		r0, r2
	cmp		r0, #0x0
	bne		_0805657e
_08056586:
	ldr		r1, _080565fc
	ldrh	r2, [r1, #0xa]
	ldr		r0, _080565ec
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr		r0, _080565f0
	and		r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	ldr		r0, [r1, #0x8]
	mov		r2, #0x80
	lsl		r2, r2, #0x18
	cmp		r0, #0x0
	bge		_080565ac
_080565a4:
	ldr		r0, [r1, #0x8]
	and		r0, r2
	cmp		r0, #0x0
	bne		_080565a4
_080565ac:
	lsr		r0, r4, #0x10
	add		r1, r5, #0x0
	bl		sub_080584c4
	cmp		r0, #0x0
	bne		_080565ba
	mov		r7, #0x0
_080565ba:
	bl		sub_08027060
	mov		r0, #0x2
	add		r1, r6, #0x0
	bl		sub_0807df78
	bl		sub_08070d78
	add		r0, r7, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x565D2, 0x2

_080565d4:	.4byte 0x02020400
_080565d8:	.4byte 0x0000FFFF
_080565dc:	.4byte 0x00002CB4
_080565e0:	.4byte 0x00000FFE
_080565e4:	.4byte InterruptEnableRegister
_080565e8:	.4byte DMA0SourceAddress
_080565ec:	.4byte 0x0000C5FF
_080565f0:	.4byte 0x00007FFF
_080565f4:	.4byte DMA1SourceAddress
_080565f8:	.4byte DMA2SourceAddress
_080565fc:	.4byte DMA3SourceAddress
	thumb_func_end sub_08056470

	thumb_func_start sub_08056600
sub_08056600:
	push	{ r4, r5, r6, r7, lr }
	ldr		r6, _08056650
	ldr		r7, _08056654
	add		r5, r7, #0x0
	add		r5, #0x24
	ldr		r1, _08056658
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080566f2
	ldr		r2, _0805665c
	add		r0, r6, r2
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r0, r7, r2
	strb	r1, [r0, #0x0]
	ldr		r1, _08056660
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	ldr		r2, _08056664
	add		r1, r6, r2
	lsl		r0, r0, #0x2
	ldrb	r1, [r1, #0x0]
	add		r0, r0, r1
	add		r0, #0x1
	bl		sub_08002c24
	mov		r1, #0xad
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r2, #0x1
	bl		sub_08044818
	mov		r4, #0x0
	ldr		r2, _08056668
	add		r0, r7, r2
	b		_0805669a

_08056650:	.4byte 0x02032B80
_08056654:	.4byte RunGameLogic_CallBack
_08056658:	.4byte 0x00000564
_0805665c:	.4byte 0x00000565
_08056660:	.4byte 0x00000566
_08056664:	.4byte 0x00000567
_08056668:	.4byte 0x00000815

_0805666c:
	lsl		r0, r4, #0x2
	ldr		r2, _080566f8
	add		r1, r5, r2
	add		r1, r1, r0
	ldr		r2, [r1, #0x0]
	mov		r1, #0xfe
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	blt		_08056694
	add		r0, r2, #0x0
	add		r0, #0x4c
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x7
	and		r1, r0
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_08044818
_08056694:
	add		r4, #0x1
	ldr		r2, _080566fc
	add		r0, r5, r2
_0805669a:
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	blt		_0805666c
	mov		r4, #0x0
_080566a2:
	lsl		r1, r4, #0x2
	ldr		r2, _080566f8
	add		r0, r5, r2
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	mov		r1, #0xad
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	add		r0, r0, r4
	ldrb	r1, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x4c
	strb	r1, [r0, #0x0]
	mov		r1, #0xae
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	add		r0, r0, r4
	ldrb	r1, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0xc4
	strb	r1, [r0, #0x0]
	mov		r1, #0xaf
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x1
	add		r1, r2, #0x0
	add		r1, #0xba
	strh	r0, [r1, #0x0]
	ldrh	r1, [r1, #0x0]
	lsr		r1, r1, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r5, #0x0
	bl		sub_080448a8
	add		r4, #0x1
	cmp		r4, #0x7
	ble		_080566a2
_080566f2:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080566f8:	.4byte 0x000007F4
_080566fc:	.4byte 0x000007F1
	thumb_func_end sub_08056600

	thumb_func_start sub_08056700
sub_08056700:
	push	{ r4, r5, r6, r7, lr }
	ldr		r7, _080567c8
	ldr		r5, _080567cc
	bl		sub_08002c18
	add		r4, r0, #0x0
	mov		r0, #0x3
	and		r4, r0
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	add		r0, r5, r1
	ldrb	r1, [r0, #0x0]
	ldr		r2, _080567d0
	add		r0, r7, r2
	strb	r1, [r0, #0x0]
	bl		sub_08002c18
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x1a
	ldr		r3, _080567d4
	add		r1, r7, r3
	strb	r0, [r1, #0x0]
	ldr		r1, _080567d8
	add		r0, r7, r1
	strb	r4, [r0, #0x0]
	ldr		r2, _080567dc
	add		r0, r5, r2
	ldr		r6, [r0, #0x0]
	lsl		r4, r4, #0x2
	add		r4, r4, r7
	add		r0, r6, #0x0
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x1
	add		r3, #0x1c
	add		r1, r4, r3
	strb	r0, [r1, #0x0]
	add		r0, r6, #0x0
	bl		sub_080374cc
	mov		r2, #0xb0
	lsl		r2, r2, #0x3
	add		r1, r4, r2
	strh	r0, [r1, #0x0]
	mov		r3, #0xbc
	lsl		r3, r3, #0x1
	add		r0, r6, r3
	ldrh	r0, [r0, #0x0]
	ldr		r1, _080567e0
	add		r4, r4, r1
	strb	r0, [r4, #0x0]
	mov		r3, #0x0
	mov		r0, #0xad
	lsl		r0, r0, #0x3
	add		r2, r7, r0
	ldr		r1, _080567e4
	add		r5, r5, r1
	mov		r0, #0x7
	mov		r12, r0
	mov		r1, #0xaf
	lsl		r1, r1, #0x3
	add		r4, r7, r1
_0805677c:
	ldmia	r5!, { r6 }
	add		r0, r6, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, r12
	and		r0, r1
	strb	r0, [r2, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xc4
	ldrb	r0, [r0, #0x0]
	strb	r0, [r2, #0x8]
	add		r1, r4, r3
	add		r0, r6, #0x0
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x1
	strb	r0, [r1, #0x0]
	add		r2, #0x1
	add		r3, #0x1
	cmp		r3, #0x7
	ble		_0805677c
	ldr		r2, _080567e8
	add		r1, r7, r2
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	mov		r3, #0xbf
	lsl		r3, r3, #0x4
	add		r2, r7, r3
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x7
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x567C6, 0x2

_080567c8:	.4byte 0x02032B80
_080567cc:	.4byte RunGameLogic_CallBack
_080567d0:	.4byte 0x00000565
_080567d4:	.4byte 0x00000566
_080567d8:	.4byte 0x00000567
_080567dc:	.4byte 0x00000838
_080567e0:	.4byte 0x00000583
_080567e4:	.4byte 0x00000818
_080567e8:	.4byte 0x00000564
	thumb_func_end sub_08056700

	thumb_func_start sub_080567ec
sub_080567ec:
	push	{ r4, r5, r6, r7, lr }
	lsl		r0, r0, #0x18
	lsr		r6, r0, #0x18
	cmp		r6, #0x1c
	bne		_08056838
	bl		sub_08057688
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	blt		_0805687e
	ldr		r4, _08056830
	lsl		r5, r0, #0x18
	lsr		r1, r5, #0x18
	add		r0, r4, #0x0
	bl		sub_08056030
	cmp		r0, #0x0
	bne		_0805687e
	ldrh	r0, [r4, #0x2]
	cmp		r0, #0x0
	beq		_0805687e
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x20
	and		r0, r1
	mov		r1, #0x1
	cmp		r0, #0x0
	beq		_08056826
	mov		r1, #0x0
_08056826:
	cmp		r1, #0x0
	beq		_0805687e
	asr		r0, r5, #0x18
	b		_08056882

.incbin "base.gba", 0x5682E, 0x2

_08056830:	.4byte 0x02032B30

_08056834:
	asr		r0, r2, #0x18
	b		_08056882
_08056838:
	mov		r7, #0x0
	ldr		r4, _08056888
	mov		r5, #0x0
_0805683e:
	lsr		r1, r5, #0x18
	add		r0, r4, #0x0
	bl		sub_08056030
	add		r2, r5, #0x0
	cmp		r0, #0x0
	bne		_08056872
	ldrh	r0, [r4, #0x2]
	cmp		r0, #0x0
	beq		_08056872
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08056872
	mov		r0, #0x1
	neg		r0, r0
	mov		r1, #0x1
	cmp		r6, r0
	beq		_0805686e
	ldrb	r0, [r4, #0x9]
	cmp		r0, r6
	beq		_0805686e
	mov		r1, #0x0
_0805686e:
	cmp		r1, #0x0
	bne		_08056834
_08056872:
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	add		r5, r5, r0
	add		r7, #0x1
	cmp		r7, #0x9
	ble		_0805683e
_0805687e:
	mov		r0, #0x1
	neg		r0, r0
_08056882:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08056888:	.4byte 0x02032B30
	thumb_func_end sub_080567ec

	thumb_func_start sub_0805688c
sub_0805688c:
	push	{ r4, r5, r6, lr }
	ldr		r0, _080568c0
	ldrb	r0, [r0, #0x11]
	bl		sub_080567ec
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	asr		r0, r0, #0x18
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, r1
	bne		_080568e2
	mov		r5, #0x0
	ldr		r6, _080568c4
_080568a8:
	lsl		r4, r5, #0x18
	lsr		r1, r4, #0x18
	add		r0, r6, #0x0
	bl		sub_08056030
	cmp		r0, #0x0
	bne		_080568bc
	ldrh	r0, [r6, #0x2]
	cmp		r0, #0x0
	bne		_080568c8
_080568bc:
	lsr		r0, r4, #0x18
	b		_080568d2

_080568c0:	.4byte 0x02020400
_080568c4:	.4byte 0x02032B30

_080568c8:
	add		r5, #0x1
	cmp		r5, #0x9
	ble		_080568a8
	mov		r0, #0x1
	neg		r0, r0
_080568d2:
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	asr		r0, r0, #0x18
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, r1
	bne		_080568e2
	mov		r2, #0x0
_080568e2:
	ldr		r0, _08056904
	ldrh		r0, [r0, #0xA]
	cmp		r0, #0x0
	beq		_080568fc
	ldr		r0, _08056908
	mov		r1, #0xbf
	lsl		r1, r1, #0x4
	add		r0, r0, r1
	mov		r1, #0x1
	lsl		r1, r2
	ldrh	r2, [r0, #0x0]
	orr		r1, r2
	strh	r1, [r0, #0x0]
_080568fc:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x56902, 0x2

_08056904:	.4byte 0x02020400
_08056908:	.4byte 0x02032B80

.incbin "base.gba", 0x5690C, 0x68
	thumb_func_end sub_0805688c

	thumb_func_start sub_08056974
sub_08056974:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x20
	ldr		r0, _080569c4
	ldr		r1, _080569c8
	add		r0, r0, r1
	ldrb	r5, [r0, #0x0]
	ldr		r0, _080569cc
	add		r0, #0x8
	ldrb	r4, [r0, #0x9]
	ldrh	r7, [r0, #0x2]
	add		r0, r5, #0x0
	bl		sub_080567ec
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r8, r0
	lsl		r1, r0, #0x18
	asr		r0, r1, #0x18
	mov		r6, #0x1
	neg		r6, r6
	cmp		r0, r6
	beq		_08056a06
	mov		r0, #0x0
	mov		r9, r0
	cmp		r7, #0x0
	beq		_080569ec
	cmp		r4, r5
	bne		_080569ec
	lsr		r1, r1, #0x18
	mov		r0, sp
	bl		sub_08056030
	cmp		r0, #0x0
	beq		_080569d4
	add		r0, r6, #0x0
	b		_080569da

.incbin "base.gba", 0x569C2, 0x2

_080569c4:	.4byte RunGameLogic_CallBack
_080569c8:	.4byte 0x00000801
_080569cc:	.4byte 0x02023400

_080569d0:
	lsr		r0, r5, #0x18
	b		_08056a30
_080569d4:
	mov		r0, sp
	mov		r1, #0x2
	ldrsh	r0, [r0, r1]
_080569da:
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, r7
	bge		_080569e6
	mov		r0, #0x1
	mov		r9, r0
_080569e6:
	mov		r1, r9
	cmp		r1, #0x0
	beq		_08056a06
_080569ec:
	ldr		r6, _08056a70
	mov		r4, r8
	add		r4, #0x20
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_080588d0
	cmp		r0, #0x0
	bne		_08056a06
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_08058948
_08056a06:
	add		r7, r5, #0x0
	mov		r4, #0xa
	ldr		r6, _08056a74
_08056a0c:
	lsl		r5, r4, #0x18
	lsr		r1, r5, #0x18
	add		r0, r6, #0x0
	bl		sub_08056030
	cmp		r0, #0x0
	bne		_08056a26
	ldrh	r0, [r6, #0x2]
	cmp		r0, #0x0
	beq		_08056a26
	ldrb	r0, [r6, #0x9]
	cmp		r0, r7
	beq		_080569d0
_08056a26:
	add		r4, #0x1
	cmp		r4, #0xb
	ble		_08056a0c
	mov		r0, #0x1
	neg		r0, r0
_08056a30:
	lsl		r2, r0, #0x18
	asr		r1, r2, #0x18
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_08056a62
	ldr		r0, _08056a70
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	add		r5, r0, r1
	lsr		r0, r2, #0x8
	mov		r1, #0x80
	lsl		r1, r1, #0xe
	add		r0, r0, r1
	lsr		r4, r0, #0x10
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_080588d0
	cmp		r0, #0x0
	bne		_08056a62
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08058948
_08056a62:
	add		sp, #0x20
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08056a70:	.4byte 0x02020400
_08056a74:	.4byte 0x02032B30
	thumb_func_end sub_08056974

	thumb_func_start sub_08056a78
sub_08056a78:
	push	{ r4, r5, lr }
	sub		sp, #0x20
	lsl		r0, r0, #0x18
	mov		r1, #0xa0
	lsl		r1, r1, #0x14
	add		r4, r0, r1
	lsr		r1, r4, #0x18
	mov		r0, sp
	bl		sub_08056030
	cmp		r0, #0x0
	bne		_08056aa0
	mov		r0, sp
	ldrh	r0, [r0, #0x2]
	mov		r1, #0x0
	cmp		r0, #0x0
	bne		_08056a9c
	mov		r1, #0x1
_08056a9c:
	cmp		r1, #0x0
	beq		_08056aa6
_08056aa0:
	mov		r0, #0x1
	neg		r0, r0
	b		_08056aa8
_08056aa6:
	lsr		r0, r4, #0x18
_08056aa8:
	lsl		r0, r0, #0x18
	ldr		r1, _08056ad8
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r5, r1, r2
	lsr		r0, r0, #0x8
	mov		r1, #0x80
	lsl		r1, r1, #0xe
	add		r0, r0, r1
	lsr		r4, r0, #0x10
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_080588d0
	cmp		r0, #0x0
	bne		_08056ad0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08058948
_08056ad0:
	add		sp, #0x20
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_08056ad8:	.4byte 0x02020400
	thumb_func_end sub_08056a78

	thumb_func_start sub_08056adc
sub_08056adc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x28
	ldr		r7, _08056b80
	mov		r0, #0x1
	str		r0, [sp, #0x20]
	mov		r1, #0xbf
	lsl		r1, r1, #0x4
	add		r0, r7, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08056b02
	b		_08056cb0
_08056b02:
	ldr		r0, _08056b84
	ldr		r0, [r0, #0x0]
	ldrh	r0, [r0, #0x4]
	str		r0, [sp, #0x24]
	mov		r0, #0x1e
	ldr		r2, [sp, #0x24]
	cmp		r2, #0x0
	beq		_08056b1c
	ldr		r0, _08056b88
	mov		r1, #0x3
	bl		sub_080708e4
	mov		r0, #0x40
_08056b1c:
	cmp		r0, #0x0
	beq		_08056b2c
	add		r4, r0, #0x0
_08056b22:
	bl		_DrawFrameRunAudio
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08056b22
_08056b2c:
	mov		r1, #0xbf
	lsl		r1, r1, #0x4
	add		r0, r7, r1
	ldrh	r0, [r0, #0x0]
	ldr		r1, _08056b8c
	and		r0, r1
	cmp		r0, #0x0
	bne		_08056b3e
	b		_08056c4e
_08056b3e:
	mov		r6, #0x0
	mov		r2, #0xbf
	lsl		r2, r2, #0x4
	add		r2, r2, r7
	mov		r8, r2
	mov		r0, #0x1
	mov		r9, r0
	mov		r1, #0x1
	neg		r1, r1
	mov		r10, r1
_08056b52:
	mov		r2, r8
	ldrh	r0, [r2, #0x0]
	asr		r0, r6
	mov		r1, r9
	and		r0, r1
	cmp		r0, #0x0
	beq		_08056c48
	mov		r5, #0x0
	lsl		r4, r6, #0x18
	cmp		r6, #0x9
	bgt		_08056bbc
	cmp		r6, #0xb
	beq		_08056bb6
	lsr		r1, r4, #0x18
	mov		r0, sp
	bl		sub_08056030
	cmp		r0, #0x0
	beq		_08056b90
	mov		r0, #0x1
	neg		r0, r0
	b		_08056b94

.incbin "base.gba", 0x56B7E, 0x2

_08056b80:	.4byte 0x02032B80
_08056b84:	.4byte 0x08124544
_08056b88:	.4byte 0x03006A60
_08056b8c:	.4byte 0xFFFF3FFF

_08056b90:
	mov		r0, sp
	ldrb	r0, [r0, #0x9]
_08056b94:
	lsl		r1, r0, #0x18
	asr		r0, r1, #0x18
	cmp		r0, r10
	ble		_08056bbc
	lsr		r0, r1, #0x18
	bl		sub_0802d6e0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	lsl		r1, r0, #0x2
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	mov		r2, #0xb2
	lsl		r2, r2, #0x3
	add		r1, r1, r2
	add		r5, r7, r1
	b		_08056bbc
_08056bb6:
	mov		r0, #0xe4
	lsl		r0, r0, #0x3
	add		r5, r7, r0
_08056bbc:
	lsr		r4, r4, #0x18
	add		r0, r4, #0x0
	bl		sub_08056470
	cmp		r0, #0x0
	beq		_08056c28
	cmp		r5, #0x0
	beq		_08056bd4
	ldrb	r1, [r5, #0xb]
	mov		r0, #0xfe
	and		r0, r1
	strb	r0, [r5, #0xb]
_08056bd4:
	cmp		r6, #0x9
	bgt		_08056c1a
	cmp		r6, #0xb
	beq		_08056c14
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_08056030
	cmp		r0, #0x0
	beq		_08056bee
	mov		r0, #0x1
	neg		r0, r0
	b		_08056bf2
_08056bee:
	mov		r0, sp
	ldrb	r0, [r0, #0x9]
_08056bf2:
	lsl		r1, r0, #0x18
	asr		r0, r1, #0x18
	cmp		r0, r10
	ble		_08056c1a
	lsr		r0, r1, #0x18
	bl		sub_0802d6e0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	lsl		r1, r0, #0x2
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	mov		r2, #0xb2
	lsl		r2, r2, #0x3
	add		r1, r1, r2
	add		r5, r7, r1
	b		_08056c1a
_08056c14:
	mov		r0, #0xe4
	lsl		r0, r0, #0x3
	add		r5, r7, r0
_08056c1a:
	cmp		r5, #0x0
	beq		_08056c2c
	ldrb	r1, [r5, #0xb]
	mov		r0, #0xfe
	and		r0, r1
	strb	r0, [r5, #0xb]
	b		_08056c2c
_08056c28:
	mov		r1, #0x0
	str		r1, [sp, #0x20]
_08056c2c:
	mov		r1, r9
	lsl		r1, r6
	mov		r2, r8
	ldrh	r0, [r2, #0x0]
	bic		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r0, _08056c88
	add		r2, r7, r0
	add		r0, r6, #0x2
	mov		r1, r9
	lsl		r1, r0
	ldr		r0, [r2, #0x0]
	bic		r0, r1
	str		r0, [r2, #0x0]
_08056c48:
	add		r6, #0x1
	cmp		r6, #0xc
	ble		_08056b52
_08056c4e:
	mov		r1, #0xbf
	lsl		r1, r1, #0x4
	add		r4, r7, r1
	ldrh	r1, [r4, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	beq		_08056c7a
	bl		sub_08056354
	cmp		r0, #0x0
	bne		_08056c6c
	mov		r2, #0x0
	str		r2, [sp, #0x20]
_08056c6c:
	mov		r0, #0x1
	bl		sub_08028168
	ldrh	r1, [r4, #0x0]
	ldr		r0, _08056c8c
	and		r0, r1
	strh	r0, [r4, #0x0]
_08056c7a:
	ldr		r0, [sp, #0x20]
	cmp		r0, #0x0
	beq		_08056c90
	mov		r0, #0xc4
	bl		sub_0807073c
	b		_08056c96

_08056c88:	.4byte 0x00000BE8
_08056c8c:	.4byte 0x0000BFFF

_08056c90:
	mov		r0, #0x91
	bl		sub_0807073c
_08056c96:
	ldr		r1, [sp, #0x24]
	cmp		r1, #0x0
	beq		_08056cb0
	mov		r4, #0x1d
_08056c9e:
	bl		_DrawFrameRunAudio
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08056c9e
	ldr		r0, _08056cc4
	mov		r1, #0x4
	bl		sub_08070904
_08056cb0:
	ldr		r0, [sp, #0x20]
	add		sp, #0x28
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x56CC2, 0x2

_08056cc4:	.4byte 0x03006A60
	thumb_func_end sub_08056adc

	thumb_func_start sub_08056cc8
sub_08056cc8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x54
	mov		r0, sp
	bl		sub_08057900
	add		r0, sp, #0x10
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r2, _08056ddc
	ldr		r1, _08056de0
	bl		sub_08071b6c
	mov		r0, sp
	bl		sub_08057930
	mov		r1, #0x0
	ldr		r2, _08056de0
	add		r2, #0x46
	ldr		r7, _08056de0
	add		r7, #0x55
	ldr		r0, _08056de0
	add		r0, #0x28
	mov		r8, r0
	ldr		r3, _08056de0
	add		r3, #0x37
	mov		r9, r3
	mov		r6, #0x8
_08056d06:
	mov		r3, #0x0
	lsl		r0, r1, #0x1
	add		r5, r1, #0x1
	add		r4, r0, r1
_08056d0e:
	add		r1, r3, r4
	add		r0, r2, r1
	strb	r6, [r0, #0x0]
	add		r1, r7, r1
	strb	r6, [r1, #0x0]
	add		r0, r3, #0x1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	cmp		r3, #0x2
	bls		_08056d0e
	lsl		r0, r5, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x4
	bls		_08056d06
	mov		r1, #0x0
	mov		r10, r8
	mov		r4, #0xff
	mov		r8, r4
	mov		r6, r9
_08056d34:
	mov		r3, #0x0
	lsl		r0, r1, #0x1
	add		r5, r1, #0x1
	add		r4, r0, r1
_08056d3c:
	add		r1, r3, r4
	mov		r7, r10
	add		r2, r7, r1
	ldrb	r0, [r2, #0x0]
	mov		r7, r8
	orr		r0, r7
	strb	r0, [r2, #0x0]
	add		r1, r6, r1
	ldrb	r0, [r1, #0x0]
	mov		r2, r8
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r0, r3, #0x1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	cmp		r3, #0x2
	bls		_08056d3c
	lsl		r0, r5, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x4
	bls		_08056d34
	mov		r3, #0x0
	str		r3, [sp, #0x34]
_08056d6a:
	mov		r4, #0x0
	mov		r9, r4
	ldr		r5, [sp, #0x34]
	lsl		r5, r5, #0x2
	str		r5, [sp, #0x48]
_08056d74:
	ldr		r0, [sp, #0x48]
	add		r0, r9
	bl		sub_0802d690
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	ldr		r1, _08056de4
	lsl		r0, r3, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r2, [r0, #0x20]
	cmp		r2, #0x0
	beq		_08056e68
	mov		r8, r2
	ldr		r7, [sp, #0x34]
	lsl		r5, r7, #0x7
	add		r1, r5, #0x0
	add		r1, #0x64
	ldr		r0, _08056de0
	add		r1, r0, r1
	mov		r2, r9
	lsl		r4, r2, #0x5
	add		r1, r1, r4
	mov		r7, r8
	ldrb	r2, [r7, #0x0]
	mov		r0, #0x10
	orr		r0, r2
	strb	r0, [r1, #0x14]
	ldrh	r0, [r7, #0x2]
	strh	r0, [r1, #0x16]
	add		r0, r3, #0x0
	bl		sub_080567ec
	lsl		r0, r0, #0x18
	lsr		r7, r0, #0x18
	ldr		r3, _08056de8
	mov		r0, #0x0
	mov		r10, r0
	lsl		r1, r7, #0x18
	add		r6, r5, #0x0
	cmp		r1, #0x0
	blt		_08056df6
	lsr		r1, r1, #0x18
	add		r0, sp, #0x14
	bl		sub_08056030
	cmp		r0, #0x0
	beq		_08056dec
	mov		r0, #0x1
	neg		r0, r0
	b		_08056df2

.incbin "base.gba", 0x56DDA, 0x2

_08056ddc:	.4byte 0x010005FA
_08056de0:	.4byte 0x02032B80
_08056de4:	.4byte 0x08102bf8
_08056de8:	.4byte 0x0000FFFF

_08056dec:
	add		r0, sp, #0x14
	mov		r1, #0x2
	ldrsh	r0, [r0, r1]
_08056df2:
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
_08056df6:
	mov		r5, #0x0
	add		r0, r6, #0x0
	add		r0, #0x64
	ldr		r2, _08056e30
	add		r0, r2, r0
	add		r0, r0, r4
	str		r0, [sp, #0x38]
	lsl		r6, r7, #0x18
_08056e06:
	lsl		r0, r5, #0x2
	ldr		r7, [sp, #0x38]
	add		r4, r7, r0
	mov		r1, r10
	add		r0, r5, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldrh	r0, [r0, #0x6]
	cmp		r3, r0
	bls		_08056e34
	sub		r1, r5, r1
	lsl		r1, r1, #0x2
	add		r1, r8
	ldrb	r2, [r1, #0x4]
	mov		r0, #0x10
	orr		r0, r2
	strb	r0, [r4, #0x0]
	ldrh	r0, [r1, #0x6]
	strh	r0, [r4, #0x2]
	b		_08056e5e

.incbin "base.gba", 0x56E2E, 0x2

_08056e30:	.4byte 0x02032B80

_08056e34:
	add		r0, sp, #0x14
	lsr		r1, r6, #0x18
	str		r3, [sp, #0x4C]
	bl		sub_08056030
	ldr		r3, [sp, #0x4C]
	cmp		r0, #0x0
	beq		_08056e4a
	mov		r0, #0x1
	neg		r0, r0
	b		_08056e4e
_08056e4a:
	add		r0, sp, #0x14
	ldrb	r0, [r0, #0x0]
_08056e4e:
	strb	r0, [r4, #0x0]
	strh	r3, [r4, #0x2]
	mov		r0, r10
	add		r0, #0x1
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r10, r0
	ldr		r3, _08056f50
_08056e5e:
	add		r0, r5, #0x1
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	cmp		r5, #0x4
	bls		_08056e06
_08056e68:
	mov		r0, r9
	add		r0, #0x1
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r9, r0
	cmp		r0, #0x3
	bhi		_08056e78
	b		_08056d74
_08056e78:
	ldr		r0, [sp, #0x34]
	add		r0, #0x1
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x34]
	cmp		r0, #0x4
	bhi		_08056e88
	b		_08056d6a
_08056e88:
	mov		r2, #0x0
	str		r2, [sp, #0x34]
_08056e8c:
	mov		r3, #0x0
	mov		r9, r3
	ldr		r4, [sp, #0x34]
	lsl		r4, r4, #0x2
	str		r4, [sp, #0x48]
	ldr		r5, [sp, #0x34]
	lsl		r6, r5, #0x7
	add		r5, #0x1
	str		r5, [sp, #0x44]
	mov		r7, #0xb9
	lsl		r7, r7, #0x2
	add		r0, r6, r7
	ldr		r1, _08056f54
	add		r0, r1, r0
	str		r0, [sp, #0x3C]
	str		r0, [sp, #0x40]
_08056eac:
	ldr		r0, [sp, #0x48]
	add		r0, r9
	bl		sub_0802d6a0
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	ldr		r1, _08056f58
	lsl		r0, r2, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x20]
	cmp		r0, #0x0
	bne		_08056f60
	mov		r2, r9
	lsl		r4, r2, #0x5
	ldr		r3, [sp, #0x3C]
	add		r2, r3, r4
	ldr		r1, [sp, #0x34]
	add		r1, #0x3
	mov		r0, r9
	add		r0, #0xb
	mul		r0, r1
	mov		r1, #0x7
	and		r0, r1
	mov		r5, #0x10
	orr		r0, r5
	strb	r0, [r2, #0x14]
	mov		r0, #0xb
	ldr		r7, [sp, #0x34]
	add		r1, r7, #0x0
	mul		r1, r0
	mov		r0, #0xc0
	lsl		r0, r0, #0x6
	add		r1, r1, r0
	mov		r3, r9
	lsl		r0, r3, #0x1
	add		r0, r9
	add		r1, r1, r0
	strh	r1, [r2, #0x16]
	mov		r5, #0x0
	mov		r7, #0x1
	add		r7, r9
	mov		r8, r7
	add		r3, #0x7
	ldr		r0, [sp, #0x34]
	lsl		r2, r0, #0x1
	mov		r7, r9
	lsl		r1, r7, #0x2
	ldr		r0, [sp, #0x40]
	add		r6, r0, r4
	ldr		r0, [sp, #0x34]
	add		r0, #0x5
	mul		r3, r0
	ldr		r4, [sp, #0x34]
	add		r2, r2, r4
	add		r1, r9
	ldr		r7, _08056f5c
	add		r0, r7, #0x0
	add		r1, r1, r0
	add		r2, r2, r1
_08056f24:
	lsl		r0, r5, #0x2
	add		r4, r6, r0
	mov		r0, #0xd
	mul		r0, r5
	add		r0, r3, r0
	mov		r1, #0x7
	and		r0, r1
	mov		r1, #0x10
	orr		r0, r1
	strb	r0, [r4, #0x0]
	lsl		r0, r5, #0x5
	add		r0, r0, r5
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	add		r0, r2, r0
	strh	r0, [r4, #0x2]
	add		r0, r5, #0x1
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	cmp		r5, #0x4
	bls		_08056f24
	b		_08057020

_08056f50:	.4byte 0x0000FFFF
_08056f54:	.4byte 0x02032B80
_08056f58:	.4byte 0x08102bf8
_08056f5c:	.4byte 0xFFFF8000

_08056f60:
	add		r6, r0, #0x0
	mov		r3, r9
	lsl		r4, r3, #0x5
	ldr		r5, [sp, #0x3C]
	add		r1, r5, r4
	ldrb	r0, [r6, #0x0]
	mov		r7, #0x10
	orr		r0, r7
	strb	r0, [r1, #0x14]
	ldrh	r0, [r6, #0x2]
	strh	r0, [r1, #0x16]
	add		r0, r2, #0x0
	bl		sub_080567ec
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x50]
	ldr		r2, _08056fa4
	mov		r3, #0x0
	lsl		r1, r0, #0x18
	cmp		r1, #0x0
	blt		_08056fb2
	lsr		r1, r1, #0x18
	add		r0, sp, #0x14
	str		r3, [sp, #0x4C]
	bl		sub_08056030
	ldr		r3, [sp, #0x4C]
	cmp		r0, #0x0
	beq		_08056fa8
	mov		r0, #0x1
	neg		r0, r0
	b		_08056fae

.incbin "base.gba", 0x56FA2, 0x2

_08056fa4:	.4byte 0x0000FFFF

_08056fa8:
	add		r0, sp, #0x14
	mov		r1, #0x2
	ldrsh	r0, [r0, r1]
_08056fae:
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_08056fb2:
	mov		r5, #0x0
	mov		r7, #0x1
	add		r7, r9
	mov		r8, r7
	ldr		r0, [sp, #0x40]
	add		r0, r0, r4
	mov		r10, r0
	ldr		r1, [sp, #0x50]
	lsl		r1, r1, #0x18
	mov		r9, r1
_08056fc6:
	lsl		r1, r5, #0x2
	mov		r7, r10
	add		r4, r7, r1
	add		r0, r5, r3
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldrh	r0, [r0, #0x6]
	cmp		r2, r0
	bls		_08056fe8
	add		r0, r1, r6
	ldrb	r1, [r0, #0x4]
	mov		r7, #0x10
	orr		r1, r7
	strb	r1, [r4, #0x0]
	ldrh	r0, [r0, #0x6]
	strh	r0, [r4, #0x2]
	b		_08057016
_08056fe8:
	add		r0, sp, #0x14
	mov		r2, r9
	lsr		r1, r2, #0x18
	str		r3, [sp, #0x4C]
	bl		sub_08056030
	ldr		r7, [sp, #0x50]
	lsl		r1, r7, #0x18
	ldr		r3, [sp, #0x4C]
	cmp		r0, #0x0
	beq		_08057004
	mov		r0, #0x1
	neg		r0, r0
	b		_08057008
_08057004:
	add		r0, sp, #0x14
	ldrb	r0, [r0, #0x0]
_08057008:
	strb	r0, [r4, #0x0]
	asr		r0, r1, #0x18
	strh	r0, [r4, #0x2]
	add		r0, r3, #0x1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	ldr		r2, _080570dc
_08057016:
	add		r0, r5, #0x1
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	cmp		r5, #0x4
	bls		_08056fc6
_08057020:
	mov		r1, r8
	lsl		r0, r1, #0x18
	lsr		r0, r0, #0x18
	mov		r9, r0
	cmp		r0, #0x3
	bhi		_0805702e
	b		_08056eac
_0805702e:
	ldr		r2, [sp, #0x44]
	lsl		r0, r2, #0x18
	lsr		r0, r0, #0x18
	str		r0, [sp, #0x34]
	cmp		r0, #0x4
	bhi		_0805703c
	b		_08056e8c
_0805703c:
	mov		r1, #0x0
	ldr		r3, _080570e0
	mov		r4, #0xae
	lsl		r4, r4, #0x3
	add		r0, r3, r4
	mov		r4, #0x7
_08057048:
	strb	r1, [r0, #0x0]
	strb	r1, [r0, #0x8]
	add		r0, #0x1
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08057048
	mov		r1, #0x0
	ldr		r5, _080570e0
	mov		r7, #0xb0
	lsl		r7, r7, #0x3
	add		r0, r5, r7
	mov		r4, #0x3
_08057060:
	strb	r1, [r0, #0x2]
	strh	r1, [r0, #0x0]
	strb	r1, [r0, #0x3]
	add		r0, #0x4
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08057060
	mov		r4, #0x4
	mov		r2, #0x0
	ldr		r1, _080570e0
	ldr		r3, _080570e4
	add		r0, r1, r3
	strb	r2, [r0, #0x0]
	ldr		r5, _080570e8
	add		r3, r1, r5
	ldrh	r1, [r3, #0x0]
	mov		r7, #0x80
	lsl		r7, r7, #0x8
	add		r0, r7, #0x0
	orr		r0, r1
	ldr		r5, _080570ec
	add		r1, r5, #0x0
	orr		r0, r1
	strh	r0, [r3, #0x0]
	ldr		r7, _080570e0
	ldr		r1, _080570f0
	add		r0, r7, r1
	strh	r2, [r0, #0x0]
	mov		r0, #0x7
	strh	r0, [r7, #0x8]
	mov		r3, #0xbf
	lsl		r3, r3, #0x4
	add		r0, r7, r3
	strh	r2, [r0, #0x0]
	ldr		r5, _080570f4
	add		r0, r7, r5
	str		r2, [r0, #0x0]
	mov		r1, #0xee
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	bl		sub_08060f70
	bl		sub_08057e34
	ldr		r2, _080570f8
	add		r0, r7, r2
	strb	r4, [r0, #0x0]
	ldr		r3, _080570fc
	add		r1, r7, r3
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	sub		r5, #0x4c
	add		r0, r7, r5
	strb	r4, [r0, #0x0]
	add		sp, #0x54
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080570dc:	.4byte 0x0000FFFF
_080570e0:	.4byte 0x02032B80
_080570e4:	.4byte 0x00000564
_080570e8:	.4byte 0x00000BEC
_080570ec:	.4byte 0x00007FFF
_080570f0:	.4byte 0x00000BEE
_080570f4:	.4byte 0x00000BE8
_080570f8:	.4byte 0x00000B9A
_080570fc:	.4byte 0x00000B9B
	thumb_func_end sub_08056cc8

	thumb_func_start sub_08057100
sub_08057100:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x10
	ldr		r5, _080571a8
	mov		r0, sp
	bl		sub_08057900
	bl		sub_08058ab8
	bl		sub_08056cc8
	mov		r0, sp
	bl		sub_08057930
	add		r1, r5, #0x0
	add		r2, r5, #0x0
	add		r2, #0x1c
	ldr		r0, _080571ac
	add		r4, r5, r0
	mov		r3, #0x0
	mov		r0, #0x4
_08057128:
	strb	r3, [r2, #0x0]
	add		r2, #0x1
	sub		r0, #0x1
	cmp		r0, #0x0
	bge		_08057128
	mov		r0, #0x0
	strb	r0, [r4, #0x0]
	ldr		r0, _080571b0
	add		r1, r1, r0
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	ldr		r2, _080571a8
	ldr		r0, _080571b4
	add		r1, r2, r0
	mov		r0, #0x2f
	strb	r0, [r1, #0x0]
	add		r6, r2, #0x0
	mov		r2, #0x0
	mov		r4, #0x0
_0805714e:
	lsl		r0, r2, #0x2
	add		r0, r0, r2
	lsl		r0, r0, #0x2
	mov		r1, #0xb2
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	add		r1, r6, r0
	mov		r3, #0x0
	add		r0, r2, #0x1
_08057160:
	strb	r4, [r1, #0x0]
	add		r1, #0x1
	add		r3, #0x1
	cmp		r3, #0x13
	bls		_08057160
	add		r2, r0, #0x0
	cmp		r2, #0x17
	ble		_0805714e
	add		r1, r5, #0x0
	mov		r4, #0xbf
	lsl		r4, r4, #0x4
	mov		r2, #0x0
	mov		r3, #0x0
_0805717a:
	ldrb	r0, [r1, #0x0]
	add		r0, r2, r0
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	add		r1, #0x1
	add		r0, r3, #0x1
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	cmp		r3, r4
	blt		_0805717a
	ldr		r1, _080571b8
	add		r0, r1, #0x0
	eor		r2, r0
	ldr		r1, _080571bc
	add		r0, r5, r1
	strh	r2, [r0, #0x0]
	bl		sub_08057fa8
	add		sp, #0x10
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x571A6, 0x2

_080571a8:	.4byte 0x02032B80
_080571ac:	.4byte 0x00000AD4
_080571b0:	.4byte 0x00000AE5
_080571b4:	.4byte 0x00000AE6
_080571b8:	.4byte 0x00002CB4
_080571bc:	.4byte 0x00000BF2
	thumb_func_end sub_08057100

	thumb_func_start sub_080571c0
sub_080571c0:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	ldr		r6, _0805721c
	lsl		r0, r5, #0x1
	add		r0, r0, r5
	lsl		r0, r0, #0x3
	mov		r1, #0xba
	lsl		r1, r1, #0x4
	add		r0, r0, r1
	add		r1, r0, r6
	add		r3, r1, #0x0
	add		r3, #0x8
	mov		r4, #0x0
	mov		r2, #0x4
_080571dc:
	ldrb	r0, [r1, #0x0]
	add		r0, r4, r0
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	add		r1, #0x1
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_080571dc
	lsl		r1, r5, #0x1
	mov		r2, #0xf
_080571f0:
	ldrb	r0, [r3, #0x0]
	add		r0, r4, r0
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	add		r3, #0x1
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_080571f0
	mov		r2, #0x0
	add		r0, r1, r5
	lsl		r0, r0, #0x3
	add		r0, r6, r0
	ldr		r1, _08057220
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08057214
	mov		r2, #0x1
_08057214:
	add		r0, r2, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0805721c:	.4byte 0x02032B80
_08057220:	.4byte 0x00000BA6
	thumb_func_end sub_080571c0

	thumb_func_start sub_08057224
sub_08057224:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	lsl		r1, r1, #0x18
	lsr		r6, r1, #0x18
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	mov		r8, r2
	add		r0, r5, #0x0
	bl		sub_0802c6c8
	ldr		r7, _08057260
	cmp		r0, #0x0
	beq		_08057264
	add		r0, r5, #0x0
	bl		sub_0802d73c
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_0802d798
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x11
	mov		r1, #0xb9
	lsl		r1, r1, #0x2
	add		r4, r4, r1
	b		_08057278

.incbin "base.gba", 0x5725E, 0x2

_08057260:	.4byte 0x02032B80

_08057264:
	add		r0, r5, #0x0
	bl		sub_0802d73c
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_0802d798
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x11
	add		r4, #0x64
_08057278:
	add		r4, r4, r7
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x13
	add		r4, r4, r0
	lsl		r0, r6, #0x2
	add		r0, r4, r0
	ldrh	r0, [r0, #0x2]
	cmp		r0, r8
	bcs		_0805728e
	mov		r0, #0x0
	b		_08057290
_0805728e:
	mov		r0, #0x1
_08057290:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x5729A, 0x2
	thumb_func_end sub_08057224

	thumb_func_start sub_0805729c
sub_0805729c:
	push	{ r4, r5, r6, r7, lr }
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	add		r0, r5, #0x0
	bl		sub_0802c6c8
	ldr		r6, _080572cc
	cmp		r0, #0x0
	beq		_080572d0
	add		r0, r5, #0x0
	bl		sub_0802d73c
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_0802d798
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x11
	mov		r1, #0xb9
	lsl		r1, r1, #0x2
	add		r4, r4, r1
	b		_080572e4

_080572cc:	.4byte 0x02032B80

_080572d0:
	add		r0, r5, #0x0
	bl		sub_0802d73c
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_0802d798
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x11
	add		r4, #0x64
_080572e4:
	add		r4, r4, r6
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x13
	add		r4, r4, r0
	add		r4, #0x14
	ldrh	r0, [r4, #0x2]
	cmp		r0, r7
	bcs		_080572f8
	mov		r0, #0x0
	b		_080572fa
_080572f8:
	mov		r0, #0x1
_080572fa:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0805729c

	thumb_func_start sub_08057300
sub_08057300:
	push	{ r4, lr }
	add		r3, r0, #0x0
	mov		r4, #0x0
	cmp		r4, r2
	bge		_08057320
_0805730a:
	ldrb	r0, [r3, #0x0]
	strb	r0, [r1, #0x0]
	lsl		r0, r0, #0x18
	add		r3, #0x1
	add		r1, #0x1
	cmp		r0, #0x0
	beq		_0805731a
	mov		r4, #0x1
_0805731a:
	sub		r2, #0x1
	cmp		r2, #0x0
	bne		_0805730a
_08057320:
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08057300

	thumb_func_start sub_08057328
sub_08057328:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	sub		r2, #0x1
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	beq		_08057350
	add		r5, r0, #0x0
_0805733a:
	ldrb	r1, [r4, #0x0]
	ldrb	r0, [r3, #0x0]
	add		r3, #0x1
	add		r4, #0x1
	cmp		r1, r0
	beq		_0805734a
	mov		r0, #0x0
	b		_08057352
_0805734a:
	sub		r2, #0x1
	cmp		r2, r5
	bne		_0805733a
_08057350:
	mov		r0, #0x1
_08057352:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x57358, 0x18
	thumb_func_end sub_08057328

	thumb_func_start sub_08057370
sub_08057370:
	ldr		r0, _08057374
	bx		lr

_08057374:	.4byte 0x02032B80
	thumb_func_end sub_08057370

	thumb_func_start sub_08057378
sub_08057378:
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0xc
	ldr		r1, _08057384
	add		r0, r0, r1
	bx		lr

.incbin "base.gba", 0x57382, 0x2

_08057384:	.4byte 0x02020400
	thumb_func_end sub_08057378

	thumb_func_start sub_08057388
sub_08057388:
	push	{ r4, lr }
	ldr		r4, _080573cc
	mov		r0, #0x0
	strb	r0, [r4, #0x0]
	bl		sub_08070d14
	bl		sub_08071c44
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_080573b2
	ldr		r1, _080573d0
	add		r1, #0x10
	mov		r0, #0x1
	bl		sub_08071cfc
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_080573b2
	mov		r0, #0x1
	strb	r0, [r4, #0x0]
_080573b2:
	bl		sub_08070d78
	ldr		r2, _080573cc
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_080573c0
	strb	r0, [r2, #0x0]
_080573c0:
	ldr		r1, _080573d4
	ldrb	r0, [r2, #0x0]
	strb	r0, [r1, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_080573cc:	.4byte 0x030023C4
_080573d0:	.4byte 0x03005300
_080573d4:	.4byte 0x02032B50
	thumb_func_end sub_08057388

	thumb_func_start sub_080573d8
sub_080573d8:
	push	{ r4, lr }
	ldr		r4, _08057424
	mov		r0, #0x10
	add		r1, r4, #0x0
	bl		sub_080588d0
	add		r2, r0, #0x0
	cmp		r2, #0x0
	bne		_08057410
	mov		r0, #0x11
	add		r1, r4, #0x0
	bl		sub_080588d0
	add		r2, r0, #0x0
	cmp		r2, #0x0
	bne		_08057410
	mov		r0, #0x10
	add		r1, r4, #0x0
	bl		sub_08058948
	add		r2, r0, #0x0
	cmp		r2, #0x0
	bne		_08057410
	mov		r0, #0x11
	add		r1, r4, #0x0
	bl		sub_08058948
	add		r2, r0, #0x0
_08057410:
	mov		r0, #0xbf
	lsl		r0, r0, #0x4
	add		r1, r4, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r0, r2, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x57422, 0x2

_08057424:	.4byte 0x02032B80
	thumb_func_end sub_080573d8

	thumb_func_start sub_08057428
sub_08057428:
	push	{ r4, r5, lr }
	ldr		r4, _08057470
	add		r2, r4, #0x0
	mov		r5, #0xbf
	lsl		r5, r5, #0x4
	mov		r3, #0x0
	mov		r1, #0x0
_08057436:
	ldrb	r0, [r2, #0x0]
	add		r0, r3, r0
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	add		r2, #0x1
	add		r0, r1, #0x1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, r5
	blt		_08057436
	ldr		r1, _08057474
	add		r0, r1, #0x0
	eor		r3, r0
	ldr		r1, _08057478
	add		r0, r4, r1
	strh	r3, [r0, #0x0]
	mov		r3, #0xbf
	lsl		r3, r3, #0x4
	add		r2, r4, r3
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x7
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x5746E, 0x2

_08057470:	.4byte 0x02032B80
_08057474:	.4byte 0x00002CB4
_08057478:	.4byte 0x00000BF2

.incbin "base.gba", 0x5747C, 0x28
	thumb_func_end sub_08057428

	thumb_func_start sub_080574a4
sub_080574a4:
	push	{ lr }
	add		r2, r0, #0x0
	add		r0, r1, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r1, r2, #0x0
	bl		sub_08056030
	cmp		r0, #0x0
	bne		_080574bc
	mov		r0, #0x1
	b		_080574be
_080574bc:
	mov		r0, #0x0
_080574be:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x574C2, 0x2E
	thumb_func_end sub_080574a4

	thumb_func_start sub_080574f0
sub_080574f0:
	push	{ r4, r5, lr }
	lsl		r0, r0, #0x18
	lsl		r1, r1, #0xc
	ldr		r2, _08057520
	add		r5, r1, r2
	lsr		r0, r0, #0x8
	mov		r1, #0x80
	lsl		r1, r1, #0xe
	add		r0, r0, r1
	lsr		r4, r0, #0x10
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_080588d0
	cmp		r0, #0x0
	bne		_08057518
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08058948
_08057518:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x5751E, 0x2

_08057520:	.4byte 0x02020400

.incbin "base.gba", 0x57524, 0x88
	thumb_func_end sub_080574f0

	thumb_func_start sub_080575ac
sub_080575ac:
	push	{ r4, r5, r6, r7, lr }
	lsl		r0, r0, #0x18
	lsr		r7, r0, #0x18
	mov		r5, #0xa
	ldr		r6, _080575d4
_080575b6:
	lsl		r4, r5, #0x18
	lsr		r1, r4, #0x18
	add		r0, r6, #0x0
	bl		sub_08056030
	cmp		r0, #0x0
	bne		_080575d8
	ldrh	r0, [r6, #0x2]
	cmp		r0, #0x0
	beq		_080575d8
	ldrb	r0, [r6, #0x9]
	cmp		r0, r7
	bne		_080575d8
	asr		r0, r4, #0x18
	b		_080575e2

_080575d4:	.4byte 0x02032B30

_080575d8:
	add		r5, #0x1
	cmp		r5, #0xb
	ble		_080575b6
	mov		r0, #0x1
	neg		r0, r0
_080575e2:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080575ac

	thumb_func_start sub_080575e8
sub_080575e8:
	push	{ r4, lr }
	sub		sp, #0x20
	lsl		r0, r0, #0x18
	mov		r1, #0xa0
	lsl		r1, r1, #0x14
	add		r4, r0, r1
	lsr		r1, r4, #0x18
	mov		r0, sp
	bl		sub_08056030
	cmp		r0, #0x0
	bne		_08057610
	mov		r0, sp
	ldrh		r0, [r0, #0x2]
	mov		r1, #0x0
	cmp		r0, #0x0
	bne		_0805760c
	mov		r1, #0x1
_0805760c:
	cmp		r1, #0x0
	beq		_08057616
_08057610:
	mov		r0, #0x1
	neg		r0, r0
	b		_08057618
_08057616:
	asr		r0, r4, #0x18
_08057618:
	add		sp, #0x20
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080575e8

	thumb_func_start sub_08057620
sub_08057620:
	push	{ r4, r5, r6, lr }
	mov		r5, #0x0
	ldr		r6, _08057640
_08057626:
	lsl		r4, r5, #0x18
	lsr		r1, r4, #0x18
	add		r0, r6, #0x0
	bl		sub_08056030
	cmp		r0, #0x0
	bne		_0805763a
	ldrh	r0, [r6, #0x2]
	cmp		r0, #0x0
	bne		_08057644
_0805763a:
	asr		r0, r4, #0x18
	b		_0805764e

.incbin "base.gba", 0x5763E, 0x2

_08057640:	.4byte 0x02032B30

_08057644:
	add		r5, #0x1
	cmp		r5, #0x9
	ble		_08057626
	mov		r0, #0x1
	neg		r0, r0
_0805764e:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08057620

	thumb_func_start sub_08057654
sub_08057654:
	push	{ r4, r5, r6, lr }
	mov		r5, #0xa
	ldr		r6, _08057674
_0805765a:
	lsl		r4, r5, #0x18
	lsr		r1, r4, #0x18
	add		r0, r6, #0x0
	bl		sub_08056030
	cmp		r0, #0x0
	bne		_0805766e
	ldrh	r0, [r6, #0x2]
	cmp		r0, #0x0
	bne		_08057678
_0805766e:
	asr		r0, r4, #0x18
	b		_08057682

.incbin "base.gba", 0x57672, 0x2

_08057674:	.4byte 0x02032B30

_08057678:
	add		r5, #0x1
	cmp		r5, #0xb
	ble		_0805765a
	mov		r0, #0x1
	neg		r0, r0
_08057682:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08057654

	thumb_func_start sub_08057688
sub_08057688:
	mov		r0, #0xc
	bx		lr
	thumb_func_end sub_08057688

	thumb_func_start sub_0805768c
sub_0805768c:
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	ldr		r2, _080576ac
	ldr		r3, _080576b0
	mov		r1, #0x0
	strh		r1, [r3, #0x2]
	mov		r1, #0xbf
	lsl		r1, r1, #0x4
	add		r2, r2, r1
	mov		r1, #0x1
	lsl		r1, r0
	ldrh	r0, [r2, #0x0]
	orr		r1, r0
	strh	r1, [r2, #0x0]
	bx		lr

.incbin "base.gba", 0x576AA, 0x2

_080576ac:	.4byte 0x02032B80
_080576b0:	.4byte 0x02020400

.incbin "base.gba", 0x576B4, 0x144
	thumb_func_end sub_0805768c

	thumb_func_start sub_080577f8
sub_080577f8:
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	ldr		r3, _08057820
	lsl		r2, r0, #0x1
	add		r2, r2, r0
	add		r1, r1, r2
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r0, #0x80
	lsl		r0, r0, #0x9
	lsl		r0, r1
	lsr		r0, r0, #0x10
	ldr		r1, _08057824
	add		r3, r3, r1
	ldrh	r1, [r3, #0x0]
	and		r0, r1
	bx		lr

.incbin "base.gba", 0x5781E, 0x2

_08057820:	.4byte 0x02032B80
_08057824:	.4byte 0x00000BEC
	thumb_func_end sub_080577f8

	thumb_func_start sub_08057828
sub_08057828:
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	ldr		r1, _08057840
	mov		r2, #0x0
	add		r1, #0x28
	add		r1, r0, r1
_08057834:
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x0
	beq		_08057844
	mov		r0, #0x1
	b		_0805784e

_08057840:	.4byte 0x02032B80

_08057844:
	add		r1, #0x3
	add		r2, #0x1
	cmp		r2, #0x3
	ble		_08057834
	mov		r0, #0x0
_0805784e:
	bx		lr
	thumb_func_end sub_08057828

	thumb_func_start sub_08057850
sub_08057850:
	push	{ lr }
	sub		sp, #0x20
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r0, sp
	bl		sub_08056030
	cmp		r0, #0x0
	bne		_0805786e
	mov		r0, sp
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	b		_08057872
_0805786e:
	mov		r0, #0x1
	neg		r0, r0
_08057872:
	add		sp, #0x20
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08057850

	thumb_func_start sub_08057878
sub_08057878:
	push	{ lr }
	sub		sp, #0x20
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r0, sp
	bl		sub_08056030
	cmp		r0, #0x0
	bne		_08057894
	mov		r0, sp
	mov		r1, #0x2
	ldrsh	r0, [r0, r1]
	b		_08057898
_08057894:
	mov		r0, #0x1
	neg		r0, r0
_08057898:
	add		sp, #0x20
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x5789E, 0x2
	thumb_func_end sub_08057878

	thumb_func_start sub_080578a0
sub_080578a0:
	push	{ r4, r5, lr }
	sub		sp, #0x20
	add		r2, r0, #0x0
	add		r4, r1, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r5, #0x0
	mov		r0, sp
	add		r1, r2, #0x0
	bl		sub_08056030
	cmp		r0, #0x0
	bne		_080578ce
	add		r1, sp, #0x4
	mov		r2, #0x4
_080578be:
	ldrb	r0, [r1, #0x0]
	strb	r0, [r4, #0x0]
	add		r1, #0x1
	add		r4, #0x1
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_080578be
	mov		r5, #0x1
_080578ce:
	add		r0, r5, #0x0
	add		sp, #0x20
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080578a0

	thumb_func_start sub_080578d8
sub_080578d8:
	push	{ lr }
	sub		sp, #0x20
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r0, sp
	bl		sub_08056030
	cmp		r0, #0x0
	bne		_080578f6
	mov		r0, sp
	ldrb	r0, [r0, #0x9]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	b		_080578fa
_080578f6:
	mov		r0, #0x1
	neg		r0, r0
_080578fa:
	add		sp, #0x20
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080578d8

	thumb_func_start sub_08057900
sub_08057900:
	push	{ r4, lr }
	add		r1, r0, #0x0
	ldr		r0, _0805792c
	add		r3, r0, #0x0
	add		r3, #0xc
	mov		r4, #0x0
	mov		r2, #0xf
_0805790e:
	ldrb	r0, [r3, #0x0]
	strb	r0, [r1, #0x0]
	lsl		r0, r0, #0x18
	add		r3, #0x1
	add		r1, #0x1
	cmp		r0, #0x0
	beq		_0805791e
	mov		r4, #0x1
_0805791e:
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_0805790e
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0805792c:	.4byte 0x02032B80
	thumb_func_end sub_08057900

	thumb_func_start sub_08057930
sub_08057930:
	add		r1, r0, #0x0
	ldr		r0, _0805794c
	add		r3, r0, #0x0
	add		r3, #0xc
	mov		r2, #0xf
_0805793a:
	ldrb	r0, [r1, #0x0]
	strb	r0, [r3, #0x0]
	add		r1, #0x1
	add		r3, #0x1
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_0805793a
	bx		lr

.align 2, 0
.pool

_0805794c:	.4byte 0x02032B80
	thumb_func_end sub_08057930

.include "mobile_adapter_gb.s"

	thumb_func_start sub_0806a0fc
sub_0806a0fc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	ldr		r0, _0806a15c
	ldr		r0, [r0, #0x0]
	mov		r10, r0
	bl		sub_08060bf4
	add		r5, r0, #0x0
	bl		sub_08057370
	mov		r1, #0xee
	lsl		r1, r1, #0x3
	add		r2, r0, r1
	ldr		r1, _0806a160
	add		r1, r10
	mov		r3, #0x0
	ldr		r4, _0806a164
_0806a126:
	ldrb	r0, [r2, #0x0]
	strb	r0, [r1, #0x0]
	add		r2, #0x1
	add		r1, #0x1
	add		r3, #0x1
	cmp		r3, r4
	bls		_0806a126
	add		r0, r5, #0x0
	bl		sub_08060e4c
	mov		r0, #0x0
	str		r0, [sp, #0xC]
	ldr		r0, _0806a15c
	ldr		r3, [r0, #0x0]
	ldr		r0, _0806a160
	add		r2, r3, r0
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x0
	cmp		r0, #0x0
	bne		_0806a150
	mov		r1, #0x2
_0806a150:
	str		r1, [sp, #0x10]
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_0806a168
	mov		r1, #0x2
	b		_0806a17a

_0806a15c:	.4byte 0x0203EBE0
_0806a160:	.4byte 0x00005F14
_0806a164:	.4byte 0x00000363

_0806a168:
	ldr		r1, _0806a280
	add		r0, r3, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mov		r1, #0x0
	cmp		r0, #0x0
	ble		_0806a17a
	mov		r1, #0x6
_0806a17a:
	str		r1, [sp, #0x14]
	mov		r0, #0xff
	str		r0, [sp, #0x18]
	ldr		r1, _0806a284
	add		r1, r10
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a288
	mov		r6, #0x0
	str		r6, [sp, #0x0]
	mov		r0, #0x3
	str		r0, [sp, #0x4]
	mov		r5, #0x18
	str		r5, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0x2
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a28c
	str		r6, [sp, #0x0]
	mov		r4, #0xf
	str		r4, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0xa
	mov		r1, #0x4
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a290
	str		r6, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0xa
	mov		r1, #0x6
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a294
	str		r6, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0xa
	mov		r1, #0x8
	bl		sub_08013e9c
	mov		r0, #0x3
	mov		r1, #0xc
	mov		r2, #0x1a
	mov		r3, #0x11
	bl		sub_080600b4
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	ldr		r2, _0806a298
	ldr		r1, [r2, #0x0]
	ldr		r0, _0806a29c
	cmp		r1, r0
	beq		_0806a230
	b		_0806a432
_0806a230:
	mov		r6, r10
	add		r6, #0x3c
	mov		r7, #0xf
	mov		r8, r5
	mov		r1, #0x0
	mov		r9, r1
	add		r5, r2, #0x0
_0806a23e:
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r2, r0, #0x0
	str		r7, [sp, #0x0]
	mov		r0, #0x1
	str		r0, [sp, #0x4]
	add		r0, r6, #0x0
	ldr		r1, _0806a2a0
	mov		r3, #0x3
	bl		sub_08058c20
	mov		r4, #0x0
	ldrsb	r4, [r6, r4]
	ldr		r0, [sp, #0x18]
	cmp		r0, r4
	bne		_0806a26e
	b		_0806a36e
_0806a26e:
	ldrb	r1, [r6, #0x0]
	str		r1, [sp, #0x18]
	cmp		r4, #0x1
	beq		_0806a2dc
	cmp		r4, #0x1
	bgt		_0806a2a4
	cmp		r4, #0x0
	beq		_0806a2aa
	b		_0806a368

_0806a280:	.4byte 0x00006273
_0806a284:	.4byte 0x00006B74
_0806a288:	.4byte 0x08110e38
_0806a28c:	.4byte 0x08110e50
_0806a290:	.4byte 0x08110e64
_0806a294:	.4byte 0x08110e74
_0806a298:	.4byte RunGameLogic_CallBack
_0806a29c:	.4byte 0x0806A0FD
_0806a2a0:	.4byte 0x08110e20

_0806a2a4:
	cmp		r4, #0x2
	beq		_0806a328
	b		_0806a368
_0806a2aa:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r4, [sp, #0x0]
	str		r7, [sp, #0x4]
	mov		r0, r8
	str		r0, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0xd
	ldr		r2, _0806a2d8
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r4, [sp, #0x0]
	b		_0806a30c

_0806a2d8:	.4byte 0x08110e80

_0806a2dc:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r0, r9
	str		r0, [sp, #0x0]
	str		r7, [sp, #0x4]
	mov		r1, r8
	str		r1, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0xd
	ldr		r2, _0806a320
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r0, r9
	str		r0, [sp, #0x0]
_0806a30c:
	str		r7, [sp, #0x4]
	mov		r1, r8
	str		r1, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0xf
	ldr		r2, _0806a324
	bl		sub_08013e9c
	b		_0806a368

.incbin "base.gba", 0x6A31E, 0x2

_0806a320:	.4byte 0x08110eb0
_0806a324:	.4byte 0x08110df0

_0806a328:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r0, r9
	str		r0, [sp, #0x0]
	str		r7, [sp, #0x4]
	mov		r1, r8
	str		r1, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0xd
	ldr		r2, _0806a384
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r0, r9
	str		r0, [sp, #0x0]
	str		r7, [sp, #0x4]
	mov		r1, r8
	str		r1, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0xf
	ldr		r2, _0806a388
	bl		sub_08013e9c
_0806a368:
	mov		r0, #0x1
	bl		sub_080281fc
_0806a36e:
	mov		r0, #0x2
	bl		sub_08026fec
	cmp		r0, #0x0
	beq		_0806a390
	mov		r0, #0x90
	bl		sub_0807073c
	ldr		r0, _0806a38c
	b		_0806a3e8

.incbin "base.gba", 0x6A382, 0x2

_0806a384:	.4byte 0x08110ee0
_0806a388:	.4byte 0x08110df0
_0806a38c:	.4byte 0x08069C05

_0806a390:
	mov		r0, #0x1
	bl		sub_08026fec
	cmp		r0, #0x0
	beq		_0806a428
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	lsl		r0, r0, #0x2
	add		r0, sp
	add		r0, #0xc
	ldr		r4, [r0, #0x0]
	cmp		r4, #0x0
	beq		_0806a3c8
	mov		r0, #0x91
	bl		sub_0807073c
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	lsl		r0, r0, #0x2
	add		r0, sp
	add		r0, #0xc
	ldr		r0, [r0, #0x0]
	bl		sub_08069ac4
	mov		r0, #0x1
	bl		sub_080281fc
	b		_0806a428
_0806a3c8:
	mov		r0, #0x8e
	bl		sub_0807073c
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	cmp		r0, #0x1
	beq		_0806a3fc
	cmp		r0, #0x1
	bgt		_0806a3e0
	cmp		r0, #0x0
	beq		_0806a3e6
	b		_0806a428
_0806a3e0:
	cmp		r0, #0x2
	beq		_0806a420
	b		_0806a428
_0806a3e6:
	ldr		r0, _0806a3f8
_0806a3e8:
	str		r0, [r5, #0x0]
	ldrb	r0, [r5, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r5, #0x8]
	b		_0806a428

.incbin "base.gba", 0x6A3F6, 0x2

_0806a3f8:	.4byte sub_0806a868

_0806a3fc:
	mov		r0, #0xd7
	lsl		r0, r0, #0x7
	add		r0, r10
	str		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_0806ad3c
	ldr		r0, _0806a41c
_0806a40c:
	str		r0, [r5, #0x0]
	ldrb	r0, [r5, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r5, #0x8]
	b		_0806a432

.incbin "base.gba", 0x6A41A, 0x2

_0806a41c:	.4byte 0x0806A0FD

_0806a420:
	ldr		r0, _0806a424
	b		_0806a40c

_0806a424:	.4byte sub_0806a448

_0806a428:
	ldr		r1, [r5, #0x0]
	ldr		r0, _0806a444
	cmp		r1, r0
	bne		_0806a432
	b		_0806a23e
_0806a432:
	mov		r0, #0x1
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0806a444:	.4byte 0x0806A0FD
	thumb_func_end sub_0806a0fc

	thumb_func_start sub_0806a448
sub_0806a448:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	ldr		r0, _0806a4e8
	ldr		r0, [r0, #0x0]
	mov		r9, r0
	ldr		r0, _0806a4ec
	add		r0, r9
	mov		r8, r0
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a4f0
	mov		r5, #0x0
	str		r5, [sp, #0x0]
	mov		r6, #0xf
	str		r6, [sp, #0x4]
	mov		r7, #0x18
	str		r7, [sp, #0x8]
	mov		r0, #0x8
	mov		r1, #0x4
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a4f4
	str		r5, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r7, [sp, #0x8]
	mov		r0, #0x5
	mov		r1, #0x7
	bl		sub_08013e9c
	mov		r2, r8
	ldr		r1, [r2, #0x20]
	ldr		r0, [r2, #0x24]
	cmp		r1, r0
	bne		_0806a4fc
	add		r0, r1, #0x0
	add		r1, sp, #0xc
	bl		sub_08059d38
	add		r0, sp, #0xc
	mov		r1, #0x5
	mov		r2, #0x9
	bl		sub_080698d0
	add		r4, r0, #0x0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a4f8
	str		r5, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r7, [sp, #0x8]
	add		r0, r4, #0x0
	mov		r1, #0x9
	bl		sub_08013e9c
	mov		r4, #0xb
	b		_0806a560

_0806a4e8:	.4byte 0x0203EBE0
_0806a4ec:	.4byte 0x00005F14
_0806a4f0:	.4byte 0x08110f10
_0806a4f4:	.4byte 0x08110f30
_0806a4f8:	.4byte 0x08110f5c

_0806a4fc:
	add		r0, r1, #0x0
	add		r1, sp, #0xc
	bl		sub_08059d38
	add		r0, sp, #0xc
	mov		r1, #0x5
	mov		r2, #0x9
	bl		sub_080698d0
	add		r4, r0, #0x0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a5a0
	str		r5, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r7, [sp, #0x8]
	add		r0, r4, #0x0
	mov		r1, #0x9
	bl		sub_08013e9c
	mov		r1, r8
	ldr		r0, [r1, #0x24]
	add		r1, sp, #0xc
	bl		sub_08059d38
	add		r0, sp, #0xc
	mov		r1, #0x5
	mov		r2, #0xb
	bl		sub_080698d0
	add		r4, r0, #0x0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a5a4
	str		r5, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r7, [sp, #0x8]
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_08013e9c
	mov		r4, #0xd
_0806a560:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a5a8
	mov		r7, #0x0
	str		r7, [sp, #0x0]
	mov		r0, #0xf
	mov		r10, r0
	str		r0, [sp, #0x4]
	mov		r5, #0x18
	str		r5, [sp, #0x8]
	mov		r0, #0x5
	add		r1, r4, #0x0
	bl		sub_08013e9c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	bl		sub_080602e0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x2
	bne		_0806a5b0
	ldr		r0, _0806a5ac
	b		_0806a726

_0806a5a0:	.4byte 0x08110f64
_0806a5a4:	.4byte 0x08110f6c
_0806a5a8:	.4byte 0x08110f74
_0806a5ac:	.4byte 0x0806A0FD

_0806a5b0:
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a6c4
	str		r7, [sp, #0x0]
	mov		r1, r10
	str		r1, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0x8
	mov		r1, #0x4
	bl		sub_08013e9c
	mov		r6, #0xe
	mov		r0, r8
	bl		sub_080642fc
	add		r5, r0, #0x0
	cmp		r5, #0x0
	beq		_0806a6d4
	ldr		r1, _0806a6c8
	mov		r0, #0x2
	bl		sub_08013d0c
	cmp		r5, #0x63
	ble		_0806a61c
	add		r0, r5, #0x0
	mov		r1, #0x64
	bl		sub_0807d80c
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	mov		r6, #0xf
	mov		r0, #0x0
	mov		r1, #0xe
	mov		r2, #0xb
	bl		sub_080281b0
	add		r1, r4, #0x0
	add		r1, #0x10
	mov		r2, #0x80
	lsl		r2, r2, #0x7
	orr		r1, r2
	strh	r1, [r0, #0x0]
	add		r0, #0x40
	add		r4, #0x30
	orr		r4, r2
	strh	r4, [r0, #0x0]
_0806a61c:
	cmp		r5, #0x9
	ble		_0806a654
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_0807d80c
	mov		r1, #0xa
	bl		sub_0807d8d8
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	add		r1, r6, #0x0
	add		r6, #0x1
	mov		r0, #0x0
	mov		r2, #0xb
	bl		sub_080281b0
	add		r1, r4, #0x0
	add		r1, #0x10
	mov		r2, #0x80
	lsl		r2, r2, #0x7
	orr		r1, r2
	strh	r1, [r0, #0x0]
	add		r0, #0x40
	add		r4, #0x30
	orr		r4, r2
	strh	r4, [r0, #0x0]
_0806a654:
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_0807d8d8
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	add		r1, r6, #0x0
	add		r6, #0x1
	mov		r0, #0x0
	mov		r2, #0xb
	bl		sub_080281b0
	mov		r5, #0x4
	add		r1, r4, #0x0
	add		r1, #0x10
	mov		r2, #0x80
	lsl		r2, r2, #0x7
	orr		r1, r2
	strh	r1, [r0, #0x0]
	add		r0, #0x40
	add		r4, #0x30
	orr		r4, r2
	strh	r4, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a6cc
	str		r7, [sp, #0x0]
	str		r5, [sp, #0x4]
	mov		r4, #0x16
	str		r4, [sp, #0x8]
	add		r0, r6, #0x0
	mov		r1, #0xb
	bl		sub_08013e9c
	add		r6, #0x2
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a6d0
	str		r7, [sp, #0x0]
	mov		r0, r10
	str		r0, [sp, #0x4]
	str		r4, [sp, #0x8]
	add		r0, r6, #0x0
	mov		r1, #0xb
	bl		sub_08013e9c
	b		_0806a6dc

_0806a6c4:	.4byte 0x08110f10
_0806a6c8:	.4byte 0x08112c28
_0806a6cc:	.4byte 0x08110f94
_0806a6d0:	.4byte 0x08110f9c

_0806a6d4:
	ldr		r1, _0806a710
	mov		r0, #0x2
	bl		sub_08013d0c
_0806a6dc:
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x6
	mov		r1, #0xf
	mov		r2, #0x0
	bl		sub_080601c8
	cmp		r0, #0x0
	beq		_0806a740
	ldr		r0, _0806a714
	add		r0, r9
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	bl		sub_08060298
	cmp		r0, #0x0
	bne		_0806a724
	ldr		r0, _0806a718
	bl		sub_080602d4
	ldr		r0, _0806a71c
	bl		sub_0806581c
	ldr		r0, _0806a720
	b		_0806a726

_0806a710:	.4byte 0x08112ce8
_0806a714:	.4byte 0x00006B74
_0806a718:	.4byte sub_0806a78c
_0806a71c:	.4byte 0x0806A449
_0806a720:	.4byte 0x080657B1

_0806a724:
	ldr		r0, _0806a738
_0806a726:
	ldr		r2, _0806a73c
	str		r0, [r2, #0x0]
	ldrb	r0, [r2, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r2, #0x8]
	b		_0806a764

.incbin "base.gba", 0x6A736, 0x2

_0806a738:	.4byte sub_0806a78c
_0806a73c:	.4byte RunGameLogic_CallBack

_0806a740:
	ldr		r1, _0806a778
	add		r1, r9
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r0, _0806a77c
	add		r0, r9
	ldrb	r0, [r0, #0x0]
	ldr		r1, _0806a780
	cmp		r0, #0x0
	beq		_0806a756
	ldr		r1, _0806a784
_0806a756:
	ldr		r0, _0806a788
	str		r1, [r0, #0x0]
	ldrb	r1, [r0, #0x8]
	add		r1, #0x1
	mov		r2, #0x7
	and		r1, r2
	strb	r1, [r0, #0x8]
_0806a764:
	mov		r0, #0x1
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6A776, 0x2

_0806a778:	.4byte 0x00006B74
_0806a77c:	.4byte 0x00006B7C
_0806a780:	.4byte 0x0806A0FD
_0806a784:	.4byte 0x0806A449
_0806a788:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_0806a448

	thumb_func_start sub_0806a78c
sub_0806a78c:
	push	{ r4, r5, lr }
	sub		sp, #0xc
	ldr		r0, _0806a7ac
	ldr		r5, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_08060bf4
	add		r4, r0, #0x0
	bl		sub_080638b0
	cmp		r0, #0x0
	bne		_0806a7b0
	add		r0, r4, #0x0
	bl		sub_08060e4c
	b		_0806a840

_0806a7ac:	.4byte 0x0203EBE0

_0806a7b0:
	ldr		r0, _0806a808
	add		r4, r5, r0
	bl		sub_08057370
	mov		r2, #0xee
	lsl		r2, r2, #0x3
	add		r1, r0, r2
	mov		r2, #0x0
	ldr		r3, _0806a80c
_0806a7c2:
	ldrb	r0, [r4, #0x0]
	strb	r0, [r1, #0x0]
	add		r4, #0x1
	add		r1, #0x1
	add		r2, #0x1
	cmp		r2, r3
	bls		_0806a7c2
	bl		sub_08057428
	bl		sub_0805c408
	add		r4, r0, #0x0
	mov		r0, #0x0
	bl		sub_080281d4
	cmp		r4, #0x0
	beq		_0806a814
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a810
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r0, #0x17
	str		r0, [sp, #0x8]
	mov		r0, #0x7
	mov		r1, #0x9
	bl		sub_08013e9c
	b		_0806a834

_0806a808:	.4byte 0x00005F14
_0806a80c:	.4byte 0x00000363
_0806a810:	.4byte 0x08110fac

_0806a814:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a85c
	str		r4, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r0, #0x18
	str		r0, [sp, #0x8]
	mov		r0, #0x5
	mov		r1, #0x9
	bl		sub_08013e9c
_0806a834:
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x0
	bl		sub_080602f0
_0806a840:
	ldr		r0, _0806a860
	ldr		r2, _0806a864
	str		r0, [r2, #0x0]
	ldrb	r0, [r2, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r2, #0x8]
	mov		r0, #0x1
	add		sp, #0xc
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6A85A, 0x2

_0806a85c:	.4byte 0x08110fd0
_0806a860:	.4byte 0x0806A0FD
_0806a864:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_0806a78c

	thumb_func_start sub_0806a868
sub_0806a868:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x18
	ldr		r0, _0806a918
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	ldr		r0, _0806a91c
	add		r0, r8
	mov		r9, r0
	add		r1, sp, #0xc
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r1, _0806a920
	add		r1, r8
	ldr		r2, _0806a924
	add		r0, sp, #0xc
	bl		sub_08071b6c
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	mov		r1, r9
	ldrb	r4, [r1, #0x0]
	cmp		r4, #0x0
	bne		_0806a8a6
	b		_0806aa14
_0806a8a6:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a928
	mov		r5, #0x0
	str		r5, [sp, #0x0]
	mov		r6, #0xf
	str		r6, [sp, #0x4]
	mov		r7, #0x18
	str		r7, [sp, #0x8]
	mov		r0, #0x9
	mov		r1, #0x3
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a92c
	str		r5, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r7, [sp, #0x8]
	mov		r0, #0x5
	mov		r1, #0x6
	bl		sub_08013e9c
	mov		r1, r9
	ldr		r0, [r1, #0x30]
	add		r4, sp, #0x10
	add		r1, r4, #0x0
	bl		sub_08059d38
	mov		r1, r9
	ldr		r0, [r1, #0x30]
	cmp		r0, #0x0
	bne		_0806a934
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a930
	str		r5, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r7, [sp, #0x8]
	mov		r0, #0x5
	mov		r1, #0x8
	bl		sub_08013e9c
	mov		r4, #0xb
	b		_0806a97a

_0806a918:	.4byte 0x0203EBE0
_0806a91c:	.4byte 0x00005F14
_0806a920:	.4byte 0x0000094C
_0806a924:	.4byte 0x01001140
_0806a928:	.4byte 0x08110ffc
_0806a92c:	.4byte 0x08111018
_0806a930:	.4byte 0x08111040

_0806a934:
	add		r0, r4, #0x0
	mov		r1, #0x5
	mov		r2, #0x8
	bl		sub_080698d0
	add		r4, r0, #0x0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a9d8
	str		r5, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r7, [sp, #0x8]
	add		r0, r4, #0x0
	mov		r1, #0x8
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a9dc
	str		r5, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r7, [sp, #0x8]
	mov		r0, #0x5
	mov		r1, #0xa
	bl		sub_08013e9c
	mov		r4, #0xd
_0806a97a:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a9e0
	mov		r7, #0x0
	str		r7, [sp, #0x0]
	mov		r6, #0xf
	str		r6, [sp, #0x4]
	mov		r5, #0x18
	str		r5, [sp, #0x8]
	mov		r0, #0x5
	add		r1, r4, #0x0
	bl		sub_08013e9c
	add		r4, #0x2
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806a9e4
	str		r7, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0x5
	add		r1, r4, #0x0
	bl		sub_08013e9c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	bl		sub_080602e0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x2
	bne		_0806a9ec
	ldr		r0, _0806a9e8
	b		_0806aa82

.incbin "base.gba", 0x6A9D6, 0x2

_0806a9d8:	.4byte 0x08111050
_0806a9dc:	.4byte 0x08110f30
_0806a9e0:	.4byte 0x08111068
_0806a9e4:	.4byte 0x08111080
_0806a9e8:	.4byte 0x0806A0FD

_0806a9ec:
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806aa10
	str		r7, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0x9
	mov		r1, #0x4
	bl		sub_08013e9c
	b		_0806aa40

_0806aa10:	.4byte 0x08110ffc

_0806aa14:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806aa6c
	str		r4, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r0, #0x18
	str		r0, [sp, #0x8]
	mov		r0, #0x9
	mov		r1, #0x4
	bl		sub_08013e9c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
_0806aa40:
	mov		r0, #0x8
	bl		sub_0806022c
	cmp		r0, #0x0
	beq		_0806aa9c
	ldr		r0, _0806aa70
	add		r0, r8
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	bl		sub_08060298
	cmp		r0, #0x0
	bne		_0806aa80
	ldr		r0, _0806aa74
	bl		sub_080602d4
	ldr		r0, _0806aa78
	bl		sub_0806581c
	ldr		r0, _0806aa7c
	b		_0806aa82

.incbin "base.gba", 0x6AA6A, 0x2

_0806aa6c:	.4byte 0x08110ffc
_0806aa70:	.4byte 0x00006B74
_0806aa74:	.4byte sub_0806aaec
_0806aa78:	.4byte 0x0806A869
_0806aa7c:	.4byte 0x080657B1

_0806aa80:
	ldr		r0, _0806aa94
_0806aa82:
	ldr		r2, _0806aa98
	str		r0, [r2, #0x0]
	ldrb	r0, [r2, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r2, #0x8]
	b		_0806aac8

.incbin "base.gba", 0x6AA92, 0x2

_0806aa94:	.4byte sub_0806aaec
_0806aa98:	.4byte RunGameLogic_CallBack

_0806aa9c:
	ldr		r2, _0806aad8
	ldr		r1, _0806aadc
	add		r1, r8
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r0, _0806aae0
	add		r0, r8
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0806aaba
	mov		r1, r9
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0806aaba
	ldr		r2, _0806aae4
_0806aaba:
	ldr		r0, _0806aae8
	str		r2, [r0, #0x0]
	ldrb	r1, [r0, #0x8]
	add		r1, #0x1
	mov		r2, #0x7
	and		r1, r2
	strb	r1, [r0, #0x8]
_0806aac8:
	mov		r0, #0x1
	add		sp, #0x18
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0806aad8:	.4byte 0x0806A0FD
_0806aadc:	.4byte 0x00006B74
_0806aae0:	.4byte 0x00006B7C
_0806aae4:	.4byte 0x0806A869
_0806aae8:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_0806a868

	thumb_func_start sub_0806aaec
sub_0806aaec:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x24
	ldr		r0, _0806ab70
	ldr		r7, [r0, #0x0]
	add		r0, r7, #0x0
	bl		sub_08060bf4
	mov		r8, r0
	ldr		r0, _0806ab74
	add		r4, r7, r0
	bl		sub_08063500
	cmp		r0, #0x0
	bne		_0806ab0e
	b		_0806ad0c
_0806ab0e:
	ldr		r1, _0806ab78
	add		r2, r7, r1
	mov		r5, #0x0
_0806ab14:
	ldrb	r1, [r4, #0x0]
	cmp		r1, #0xa
	beq		_0806ab2a
	cmp		r1, #0xd
	beq		_0806ab2a
	ldrb	r0, [r2, #0x0]
	add		r2, #0x1
	add		r4, #0x1
	cmp		r1, r0
	beq		_0806ab14
	mov		r5, #0x1
_0806ab2a:
	cmp		r5, #0x0
	bne		_0806ab80
	bl		sub_080642ac
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x7
	bl		sub_08061414
	cmp		r0, #0x0
	beq		_0806ab4e
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x0
	bl		sub_080602f0
_0806ab4e:
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806ab7c
	str		r5, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r0, #0x16
	str		r0, [sp, #0x8]
	mov		r0, #0x5
	b		_0806acbc

_0806ab70:	.4byte 0x0203EBE0
_0806ab74:	.4byte 0x0000094C
_0806ab78:	.4byte 0x00005F14
_0806ab7c:	.4byte 0x081110a8

_0806ab80:
	ldrb	r0, [r4, #0x0]
	add		r5, sp, #0x14
	add		r6, sp, #0x1c
	b		_0806ab8c
_0806ab88:
	add		r4, #0x1
	ldrb	r0, [r4, #0x0]
_0806ab8c:
	cmp		r0, #0xa
	beq		_0806ab94
	cmp		r0, #0xd
	bne		_0806ab88
_0806ab94:
	mov		r0, #0x0
	strb	r0, [r4, #0x0]
_0806ab98:
	add		r4, #0x1
	ldrb	r0, [r4, #0x0]
	sub		r0, #0x30
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x9
	bhi		_0806ab98
	ldr		r2, _0806ac08
	add		r0, r7, r2
	add		r1, sp, #0xc
	bl		sub_08059b60
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08059cb4
	add		r0, r4, #0x0
	add		r0, #0xa
	add		r1, r6, #0x0
	bl		sub_08059cb4
	add		r0, sp, #0xc
	bl		sub_08059a88
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_08059fd4
	cmp		r4, r0
	blt		_0806abde
	add		r0, r6, #0x0
	bl		sub_08059fd4
	cmp		r4, r0
	ble		_0806ac10
_0806abde:
	bl		sub_080642ac
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x7
	bl		sub_08061414
	cmp		r0, #0x0
	beq		_0806abfe
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x0
	bl		sub_080602f0
_0806abfe:
	ldr		r1, _0806ac0c
	mov		r0, #0x3
	bl		sub_08013d0c
	b		_0806ad00

_0806ac08:	.4byte 0x00000552
_0806ac0c:	.4byte 0x081147c4

_0806ac10:
	bl		sub_0806361c
	ldr		r4, _0806acc4
	mov		r0, #0x80
	add		r1, r4, #0x0
	bl		sub_080588d0
	cmp		r0, #0x0
	beq		_0806ac5c
	add		r1, r4, #0x0
	add		r1, #0x8
	ldrh	r0, [r1, #0x2]
	cmp		r0, #0x0
	beq		_0806ac5c
	mov		r0, #0x0
	strh	r0, [r1, #0x2]
	ldr		r1, _0806acc8
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r0, r4, #0x0
	bl		sub_08071b6c
	mov		r0, #0xc
	bl		sub_0805768c
	bl		sub_08057370
	mov		r3, #0xbf
	lsl		r3, r3, #0x4
	add		r0, r0, r3
	ldrh	r2, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x5
	add		r1, r3, #0x0
	orr		r1, r2
	strh	r1, [r0, #0x0]
	bl		sub_08057428
_0806ac5c:
	ldr		r1, _0806accc
	mov		r0, #0xb4
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	ldr		r2, _0806acd0
	and		r0, r2
	str		r0, [r1, #0x0]
	ldr		r1, _0806acd4
	add		r4, r7, r1
	bl		sub_08057370
	mov		r2, #0xee
	lsl		r2, r2, #0x3
	add		r1, r0, r2
	mov		r2, #0x0
	ldr		r3, _0806acd8
_0806ac7e:
	ldrb	r0, [r4, #0x0]
	strb	r0, [r1, #0x0]
	add		r4, #0x1
	add		r1, #0x1
	add		r2, #0x1
	cmp		r2, r3
	bls		_0806ac7e
	bl		sub_08057428
	bl		sub_0805c408
	add		r4, r0, #0x0
	mov		r0, #0x0
	bl		sub_080281d4
	cmp		r4, #0x0
	beq		_0806ace0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806acdc
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r0, #0x16
	str		r0, [sp, #0x8]
	mov		r0, #0x8
_0806acbc:
	mov		r1, #0x9
	bl		sub_08013e9c
	b		_0806ad00

_0806acc4:	.4byte 0x02029400
_0806acc8:	.4byte 0x02020400
_0806accc:	.4byte 0x02033780
_0806acd0:	.4byte 0xffefffff
_0806acd4:	.4byte 0x00005F14
_0806acd8:	.4byte 0x00000363
_0806acdc:	.4byte 0x081110d4

_0806ace0:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806ad30
	str		r4, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r0, #0x18
	str		r0, [sp, #0x8]
	mov		r0, #0x6
	mov		r1, #0x9
	bl		sub_08013e9c
_0806ad00:
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x0
	bl		sub_080602f0
_0806ad0c:
	mov		r0, r8
	bl		sub_08060e4c
	ldr		r0, _0806ad34
	ldr		r2, _0806ad38
	str		r0, [r2, #0x0]
	ldrb	r0, [r2, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r2, #0x8]
	mov		r0, #0x1
	add		sp, #0x24
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0806ad30:	.4byte 0x081110f4
_0806ad34:	.4byte 0x0806A0FD
_0806ad38:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_0806aaec

	thumb_func_start sub_0806ad3c
sub_0806ad3c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x34
	mov		r8, r0
	ldr		r0, _0806ada4
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x24]
	ldr		r1, _0806ada8
	add		r0, r0, r1
	mov		r10, r0
	ldr		r2, [sp, #0x24]
	ldr		r7, _0806adac
	add		r0, r2, r7
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x7
	asr		r0, r0, #0x3
	add		r0, #0x3
	str		r0, [sp, #0x2C]
	ldr		r0, [sp, #0x24]
	ldr		r1, _0806adb0
	add		r2, r0, r1
	ldr		r7, [sp, #0x2C]
	cmp		r7, #0x0
	beq		_0806ad80
	mov		r3, #0x0
	add		r1, sp, #0xc
	add		r6, r7, #0x0
_0806ad78:
	stmia	r1!, {  r3 }
	sub		r6, #0x1
	cmp		r6, #0x0
	bne		_0806ad78
_0806ad80:
	add		r5, r2, #0x0
	mov		r0, #0x4
	str		r0, [sp, #0x28]
	ldr		r1, [sp, #0x2C]
	cmp		r0, r1
	bgt		_0806ade4
_0806ad8c:
	ldr		r0, [sp, #0x28]
	sub		r0, #0x4
	lsl		r1, r0, #0x2
	add		r1, sp
	add		r1, #0xc
	str		r5, [r1, #0x0]
	mov		r6, #0x0
	add		r7, r0, #0x0
	ldr		r2, [sp, #0x28]
	add		r2, #0x1
	mov		r9, r2
	b		_0806adb6

_0806ada4:	.4byte 0x0203EBE0
_0806ada8:	.4byte 0x00005F14
_0806adac:	.4byte 0x00005F51
_0806adb0:	.4byte 0x00005F52

_0806adb4:
	add		r6, #0x1
_0806adb6:
	cmp		r6, #0x7
	bgt		_0806adda
	ldrb	r0, [r5, #0x0]
	mov		r4, r10
	add		r4, #0x3d
	cmp		r0, #0x0
	beq		_0806adcc
_0806adc4:
	add		r5, #0x1
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0806adc4
_0806adcc:
	add		r5, #0x1
	ldrb	r1, [r4, #0x0]
	lsl		r0, r7, #0x3
	add		r0, r0, r6
	add		r0, #0x1
	cmp		r1, r0
	bgt		_0806adb4
_0806adda:
	mov		r7, r9
	str		r7, [sp, #0x28]
	ldr		r0, [sp, #0x2C]
	cmp		r7, r0
	ble		_0806ad8c
_0806ade4:
	mov		r1, r8
	cmp		r1, #0x0
	beq		_0806adfe
	ldr		r2, [sp, #0x2C]
	lsl		r0, r2, #0x2
	mov		r1, sp
	add		r1, r1, r0
	add		r1, #0xc
	b		_0806adf8
_0806adf6:
	sub		r1, #0x4
_0806adf8:
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0806adf6
_0806adfe:
	mov		r7, #0x1
	str		r7, [sp, #0x28]
	mov		r0, r8
	cmp		r0, #0x0
	beq		_0806ae0c
	ldr		r1, [sp, #0x2C]
	str		r1, [sp, #0x28]
_0806ae0c:
	ldr		r2, [sp, #0x28]
	cmp		r2, #0x0
	bgt		sub_0806ae16
	bl		sub_0806ba2e
	thumb_func_end sub_0806ad3c

	non_word_aligned_thumb_func_start sub_0806ae16
sub_0806ae16:
	ldr		r7, [sp, #0x28]
	cmp		r7, #0x1
	beq		_0806ae40
	cmp		r7, #0x1
	bgt		_0806ae2c
	cmp		r7, #0x0
	bne		_0806ae28
	bl		sub_0806ba34
_0806ae28:
	bl		sub_0806b976
_0806ae2c:
	ldr		r0, [sp, #0x28]
	cmp		r0, #0x2
	bne		_0806ae34
	b		_0806b1dc
_0806ae34:
	cmp		r0, #0x3
	bne		_0806ae3c
	bl		sub_0806b87a
_0806ae3c:
	bl		sub_0806b976
_0806ae40:
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r5, #0x0
	str		r5, [sp, #0x0]
	mov		r0, #0x3
	str		r0, [sp, #0x4]
	mov		r6, #0x16
	str		r6, [sp, #0x8]
	mov		r0, #0xa
	mov		r1, #0x2
	ldr		r2, _0806aeb4
	bl		sub_08013e9c
	mov		r2, r10
	ldr		r1, [r2, #0x20]
	ldr		r0, [r2, #0x24]
	cmp		r1, r0
	bne		_0806aebc
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r5, [sp, #0x0]
	mov		r7, #0xf
	str		r7, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0x4
	ldr		r2, _0806aeb8
	bl		sub_08013e9c
	mov		r1, r10
	ldr		r0, [r1, #0x20]
	add		r4, sp, #0x1c
	add		r1, r4, #0x0
	bl		sub_08059d38
	add		r0, r4, #0x0
	mov		r1, #0xd
	mov		r2, #0x4
	bl		sub_080698d0
	mov		r6, #0x6
	b		_0806af40

.incbin "base.gba", 0x6AEB2, 0x2

.align 2, 0
_0806aeb4:	.4byte 0x0811111c
_0806aeb8:	.4byte 0x08111130

_0806aebc:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r5, [sp, #0x0]
	mov		r2, #0xf
	str		r2, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0x4
	ldr		r2, _0806af84
	bl		sub_08013e9c
	mov		r7, r10
	ldr		r0, [r7, #0x20]
	add		r4, sp, #0x1c
	add		r1, r4, #0x0
	bl		sub_08059d38
	add		r0, r4, #0x0
	mov		r1, #0xd
	mov		r2, #0x4
	bl		sub_080698d0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r5, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r0, #0x17
	mov		r1, #0x4
	ldr		r2, _0806af88
	bl		sub_08013e9c
	ldr		r0, [r7, #0x24]
	add		r1, r4, #0x0
	bl		sub_08059d38
	add		r0, r4, #0x0
	mov		r1, #0xd
	mov		r2, #0x6
	bl		sub_080698d0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r5, [sp, #0x0]
	mov		r1, #0xf
	str		r1, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r0, #0x17
	mov		r1, #0x6
	ldr		r2, _0806af8c
	bl		sub_08013e9c
	mov		r6, #0x8
_0806af40:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r2, #0x0
	mov		r8, r2
	str		r2, [sp, #0x0]
	mov		r7, #0xf
	str		r7, [sp, #0x4]
	mov		r5, #0x16
	str		r5, [sp, #0x8]
	mov		r0, #0x4
	add		r1, r6, #0x0
	ldr		r2, _0806af90
	bl		sub_08013e9c
	mov		r0, r10
	ldr		r1, [r0, #0x28]
	ldr		r0, [r0, #0x2c]
	cmp		r1, r0
	bne		_0806af94
	add		r0, r1, #0x0
	add		r1, r4, #0x0
	bl		sub_08059d38
	add		r0, r4, #0x0
	mov		r1, #0xd
	add		r2, r6, #0x0
	bl		sub_080698d0
	b		_0806aff8

.incbin "base.gba", 0x6AF82, 0x2

_0806af84:	.4byte 0x08111144
_0806af88:	.4byte 0x08110f64
_0806af8c:	.4byte 0x08110f6c
_0806af90:	.4byte 0x08111158

_0806af94:
	add		r0, r1, #0x0
	add		r1, r4, #0x0
	bl		sub_08059d38
	add		r0, r4, #0x0
	mov		r1, #0xd
	add		r2, r6, #0x0
	bl		sub_080698d0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r1, r8
	str		r1, [sp, #0x0]
	str		r7, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0x17
	add		r1, r6, #0x0
	ldr		r2, _0806b0f4
	bl		sub_08013e9c
	add		r6, #0x2
	mov		r2, r10
	ldr		r0, [r2, #0x2c]
	add		r1, r4, #0x0
	bl		sub_08059d38
	add		r0, r4, #0x0
	mov		r1, #0xd
	add		r2, r6, #0x0
	bl		sub_080698d0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r0, r8
	str		r0, [sp, #0x0]
	str		r7, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0x17
	add		r1, r6, #0x0
	ldr		r2, _0806b0f8
	bl		sub_08013e9c
_0806aff8:
	add		r6, #0x2
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	mov		r2, #0xf
	str		r2, [sp, #0x4]
	mov		r7, #0x16
	str		r7, [sp, #0x8]
	mov		r0, #0x4
	add		r1, r6, #0x0
	ldr		r2, _0806b0fc
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0xd
	add		r2, r6, #0x0
	bl		sub_080281b0
	add		r7, r0, #0x0
	mov		r5, r10
	add		r5, #0x3c
	mov		r0, #0x3a
	add		r0, r10
	mov		r9, r0
	mov		r1, r10
	add		r1, #0x3b
	str		r1, [sp, #0x30]
	ldr		r2, _0806b100
	mov		r8, r2
	mov		r4, #0x3
_0806b03e:
	ldrb	r0, [r5, #0x0]
	bl		sub_0802d690
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x30]
	ldr		r1, _0806b104
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0806b03e
	mov		r0, #0x0
	bl		sub_08028130
	add		r2, r0, #0x0
	mov		r0, #0xb0
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	ldr		r1, _0806b108
	mov		r0, #0x10
	str		r0, [sp, #0x0]
	add		r0, r1, #0x0
	mov		r3, #0x0
	bl		sub_08005ddc
	mov		r3, #0x0
	mov		r1, #0xe0
	lsl		r1, r1, #0x2
	mov		r8, r1
	ldr		r2, _0806b10c
	add		r4, r2, #0x0
	mov		r0, #0xe3
	lsl		r0, r0, #0x2
	add		r5, r0, #0x0
	add		r2, r7, #0x0
	add		r2, #0x40
	add		r1, r7, #0x0
_0806b08c:
	mov		r7, r8
	add		r0, r3, r7
	orr		r0, r4
	strh	r0, [r1, #0x0]
	add		r0, r3, r5
	orr		r0, r4
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	add		r1, #0x2
	add		r3, #0x1
	cmp		r3, #0xb
	ble		_0806b08c
	add		r6, #0x2
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r5, #0x0
	str		r5, [sp, #0x0]
	mov		r4, #0xf
	str		r4, [sp, #0x4]
	mov		r7, #0x16
	str		r7, [sp, #0x8]
	mov		r0, #0x4
	add		r1, r6, #0x0
	ldr		r2, _0806b110
	bl		sub_08013e9c
	mov		r1, r9
	ldrb	r0, [r1, #0x0]
	add		r1, r4, #0x0
	and		r1, r0
	cmp		r1, #0x0
	bne		_0806b118
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r5, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r7, [sp, #0x8]
	mov		r0, #0xd
	add		r1, r6, #0x0
	ldr		r2, _0806b114
	bl		sub_08013e9c
	b		_0806b148

.incbin "base.gba", 0x6B0F2, 0x2

_0806b0f4:	.4byte 0x08110f64
_0806b0f8:	.4byte 0x08110f6c
_0806b0fc:	.4byte 0x0811116c
_0806b100:	.4byte 0x08102bf8
_0806b104:	.4byte 0x0600F000
_0806b108:	.4byte 0x080ce084
_0806b10c:	.4byte 0xFFFFB000
_0806b110:	.4byte 0x08111180
_0806b114:	.4byte 0x08111194

_0806b118:
	cmp		r1, #0x8
	bhi		_0806b148
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806b17c
	mov		r0, r9
	ldrb	r1, [r0, #0x0]
	add		r0, r4, #0x0
	and		r0, r1
	sub		r0, #0x1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r2, [r0, #0x0]
	str		r5, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r7, [sp, #0x8]
	mov		r0, #0xd
	add		r1, r6, #0x0
	bl		sub_08013e9c
_0806b148:
	add		r6, #0x2
	ldr		r1, [sp, #0x30]
	ldrb	r0, [r1, #0x0]
	mov		r5, #0xf
	add		r4, r5, #0x0
	and		r4, r0
	cmp		r4, #0x0
	beq		_0806b184
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	str		r5, [sp, #0x4]
	mov		r7, #0x16
	str		r7, [sp, #0x8]
	mov		r0, #0x4
	add		r1, r6, #0x0
	ldr		r2, _0806b180
	bl		sub_08013e9c
	b		_0806b1a2

.incbin "base.gba", 0x6B17A, 0x2

_0806b17c:	.4byte 0x081111a4
_0806b180:	.4byte 0x08111254

_0806b184:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	mov		r0, #0x16
	str		r0, [sp, #0x8]
	mov		r0, #0x4
	add		r1, r6, #0x0
	ldr		r2, _0806b1c8
	bl		sub_08013e9c
_0806b1a2:
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x3
	mov		r1, #0x0
	bl		sub_08059f00
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x2
	bne		_0806b1cc
	mov		r0, #0x90
	bl		sub_0807073c
	ldr		r1, [sp, #0x28]
	sub		r1, #0x1
	str		r1, [sp, #0x28]
	bl		sub_0806ba24
_0806b1c8:
	asr		r0, r6, #0x9
	lsr		r1, r2, #0x20
_0806b1cc:
	mov		r0, #0x8e
	bl		sub_0807073c
	ldr		r2, [sp, #0x28]
	add		r2, #0x1
	str		r2, [sp, #0x28]
	bl		sub_0806ba24
_0806b1dc:
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r7, #0x0
	str		r7, [sp, #0x0]
	mov		r0, #0x3
	str		r0, [sp, #0x4]
	mov		r6, #0x16
	str		r6, [sp, #0x8]
	mov		r0, #0xa
	mov		r1, #0x2
	ldr		r2, _0806b2c0
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r7, [sp, #0x0]
	mov		r5, #0xf
	str		r5, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0x4
	ldr		r2, _0806b2c4
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r7, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0x6
	ldr		r2, _0806b2c8
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r7, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0x8
	ldr		r2, _0806b2cc
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r7, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0xa
	ldr		r2, _0806b2d0
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r7, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0xc
	ldr		r2, _0806b2d4
	bl		sub_08013e9c
	mov		r0, r10
	add		r0, #0x3a
	ldrb	r0, [r0, #0x0]
	mov		r4, #0xf0
	and		r4, r0
	cmp		r4, #0x0
	beq		_0806b2dc
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r7, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r0, #0xd
	mov		r1, #0x4
	ldr		r2, _0806b2d8
	bl		sub_08013e9c
	b		_0806b2f8

.incbin "base.gba", 0x6B2BE, 0x2

_0806b2c0:	.4byte 0x0811111c
_0806b2c4:	.4byte 0x0811128c
_0806b2c8:	.4byte 0x081112a0
_0806b2cc:	.4byte 0x081112b4
_0806b2d0:	.4byte 0x081112c8
_0806b2d4:	.4byte 0x081112dc
_0806b2d8:	.4byte 0x081112f0

_0806b2dc:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r0, #0xd
	mov		r1, #0x4
	ldr		r2, _0806b330
	bl		sub_08013e9c
_0806b2f8:
	mov		r1, r10
	add		r1, #0x38
	ldrb	r0, [r1, #0x0]
	mov		r5, #0xf
	add		r4, r5, #0x0
	and		r4, r0
	add		r7, r1, #0x0
	cmp		r4, #0x0
	bne		_0806b334
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	mov		r0, #0x16
	str		r0, [sp, #0x8]
	mov		r0, #0xd
	mov		r1, #0x6
	ldr		r2, _0806b330
	bl		sub_08013e9c
	mov		r6, r10
	add		r6, #0x39
	b		_0806b38a

.incbin "base.gba", 0x6B32E, 0x2

_0806b330:	.4byte 0x081112f8

_0806b334:
	mov		r1, r10
	add		r1, #0x39
	ldrb	r0, [r1, #0x0]
	add		r4, r5, #0x0
	and		r4, r0
	add		r6, r1, #0x0
	cmp		r4, #0x0
	beq		_0806b36c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r5, [sp, #0x4]
	mov		r2, #0x16
	str		r2, [sp, #0x8]
	mov		r0, #0xd
	mov		r1, #0x6
	ldr		r2, _0806b368
	bl		sub_08013e9c
	b		_0806b38a

.incbin "base.gba", 0x6B366, 0x2

_0806b368:	.4byte 0x08111300

_0806b36c:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	mov		r0, #0x16
	str		r0, [sp, #0x8]
	mov		r0, #0xd
	mov		r1, #0x6
	ldr		r2, _0806b3b8
	bl		sub_08013e9c
_0806b38a:
	ldrb	r0, [r6, #0x0]
	mov		r4, #0xf0
	and		r4, r0
	cmp		r4, #0x0
	beq		_0806b3c0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	mov		r2, #0xf
	str		r2, [sp, #0x4]
	mov		r0, #0x16
	str		r0, [sp, #0x8]
	mov		r0, #0xd
	mov		r1, #0x8
	ldr		r2, _0806b3bc
	bl		sub_08013e9c
	b		_0806b3e0

_0806b3b8:	.4byte 0x081112f0
_0806b3bc:	.4byte 0x08111310

_0806b3c0:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r4, [sp, #0x0]
	mov		r1, #0xf
	str		r1, [sp, #0x4]
	mov		r2, #0x16
	str		r2, [sp, #0x8]
	mov		r0, #0xd
	mov		r1, #0x8
	ldr		r2, _0806b410
	bl		sub_08013e9c
_0806b3e0:
	ldrb	r0, [r7, #0x0]
	mov		r4, #0xf0
	and		r4, r0
	cmp		r4, #0x0
	beq		_0806b418
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r7, #0x0
	str		r7, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r1, #0x16
	str		r1, [sp, #0x8]
	mov		r0, #0xd
	mov		r1, #0xa
	ldr		r2, _0806b414
	bl		sub_08013e9c
	b		_0806b438

.incbin "base.gba", 0x6B40E, 0x2

_0806b410:	.4byte 0x081112f8
_0806b414:	.4byte 0x081112f0

_0806b418:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r4, [sp, #0x0]
	mov		r2, #0xf
	str		r2, [sp, #0x4]
	mov		r7, #0x16
	str		r7, [sp, #0x8]
	mov		r0, #0xd
	mov		r1, #0xa
	ldr		r2, _0806b53c
	bl		sub_08013e9c
_0806b438:
	mov		r0, r10
	add		r0, #0x3b
	ldrb	r0, [r0, #0x0]
	lsr		r0, r0, #0x4
	lsl		r1, r0, #0x2
	add		r5, r1, r0
	mov		r6, #0xd
	cmp		r5, #0x9
	ble		_0806b482
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_0807d80c
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	mov		r0, #0x0
	mov		r1, #0xd
	mov		r2, #0xc
	bl		sub_080281b0
	add		r1, r4, #0x0
	add		r1, #0x10
	mov		r2, #0xf0
	lsl		r2, r2, #0x8
	orr		r1, r2
	strh	r1, [r0, #0x0]
	add		r0, #0x40
	add		r4, #0x30
	orr		r4, r2
	strh	r4, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_0807d8d8
	add		r5, r0, #0x0
	mov		r6, #0xe
_0806b482:
	lsl		r4, r5, #0x10
	asr		r4, r4, #0x10
	mov		r0, #0x0
	add		r1, r6, #0x0
	mov		r2, #0xc
	bl		sub_080281b0
	add		r1, r4, #0x0
	add		r1, #0x10
	mov		r2, #0xf
	lsl		r7, r2, #0xc
	orr		r1, r7
	strh	r1, [r0, #0x0]
	add		r0, #0x40
	add		r4, #0x30
	orr		r4, r7
	strh	r4, [r0, #0x0]
	add		r6, #0x1
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r1, #0xf
	str		r1, [sp, #0x4]
	mov		r2, #0x16
	str		r2, [sp, #0x8]
	add		r0, r6, #0x0
	mov		r1, #0xc
	ldr		r2, _0806b540
	bl		sub_08013e9c
	ldr		r1, [sp, #0x24]
	mov		r2, #0xd7
	lsl		r2, r2, #0x7
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	cmp		r0, #0x0
	beq		_0806b4da
	b		_0806b6d0
_0806b4da:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r0, r8
	str		r0, [sp, #0x0]
	mov		r1, #0xf
	str		r1, [sp, #0x4]
	mov		r2, #0x16
	str		r2, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0xe
	ldr		r2, _0806b544
	bl		sub_08013e9c
	mov		r6, #0xd
	mov		r0, r10
	bl		sub_080642fc
	add		r5, r0, #0x0
	ldr		r0, _0806b548
	add		r0, r10
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mov		r9, r0
	cmp		r5, #0x0
	bne		_0806b550
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r7, r8
	str		r7, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r1, #0x16
	str		r1, [sp, #0x8]
	mov		r0, #0xd
	mov		r1, #0xe
	ldr		r2, _0806b54c
	bl		sub_08013e9c
	mov		r6, #0x11
	b		_0806b60a

_0806b53c:	.4byte 0x081112f8
_0806b540:	.4byte 0x08111320
_0806b544:	.4byte 0x08111328
_0806b548:	.4byte 0x0000035E
_0806b54c:	.4byte 0x0811133c

_0806b550:
	cmp		r5, #0x63
	ble		_0806b57e
	add		r0, r5, #0x0
	mov		r1, #0x64
	bl		sub_0807d80c
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	mov		r6, #0xe
	mov		r0, #0x0
	mov		r1, #0xd
	mov		r2, #0xe
	bl		sub_080281b0
	add		r1, r4, #0x0
	add		r1, #0x10
	orr		r1, r7
	strh	r1, [r0, #0x0]
	add		r0, #0x40
	add		r4, #0x30
	orr		r4, r7
	strh	r4, [r0, #0x0]
_0806b57e:
	cmp		r5, #0x9
	ble		_0806b5bc
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_0807d80c
	mov		r1, #0xa
	bl		sub_0807d8d8
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	add		r1, r6, #0x0
	add		r6, #0x1
	mov		r0, #0x0
	mov		r2, #0xe
	bl		sub_080281b0
	add		r1, r4, #0x0
	add		r1, #0x10
	orr		r1, r7
	strh	r1, [r0, #0x0]
	add		r0, #0x40
	add		r4, #0x30
	orr		r4, r7
	strh	r4, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_0807d8d8
	add		r5, r0, #0x0
_0806b5bc:
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_0807d8d8
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	add		r1, r6, #0x0
	add		r6, #0x1
	mov		r0, #0x0
	mov		r2, #0xe
	bl		sub_080281b0
	add		r1, r4, #0x0
	add		r1, #0x10
	orr		r1, r7
	strh	r1, [r0, #0x0]
	add		r0, #0x40
	add		r4, #0x30
	orr		r4, r7
	strh	r4, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r2, r8
	str		r2, [sp, #0x0]
	mov		r7, #0xf
	str		r7, [sp, #0x4]
	mov		r0, #0x16
	str		r0, [sp, #0x8]
	add		r0, r6, #0x0
	mov		r1, #0xe
	ldr		r2, _0806b6c4
	bl		sub_08013e9c
	add		r6, #0x2
_0806b60a:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	add		r0, r6, #0x0
	add		r6, #0x1
	mov		r1, #0x0
	mov		r8, r1
	str		r1, [sp, #0x0]
	mov		r7, #0xf
	str		r7, [sp, #0x4]
	mov		r5, #0x16
	str		r5, [sp, #0x8]
	mov		r1, #0xe
	ldr		r2, _0806b6c8
	bl		sub_08013e9c
	mov		r2, r9
	cmp		r2, #0x9
	ble		_0806b674
	mov		r0, r9
	mov		r1, #0xa
	bl		sub_0807d80c
	mov		r1, #0xa
	bl		sub_0807d8d8
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	add		r1, r6, #0x0
	add		r6, #0x1
	mov		r0, #0x0
	mov		r2, #0xe
	bl		sub_080281b0
	add		r1, r4, #0x0
	add		r1, #0x10
	mov		r2, #0xf0
	lsl		r2, r2, #0x8
	orr		r1, r2
	strh	r1, [r0, #0x0]
	add		r0, #0x40
	add		r4, #0x30
	orr		r4, r2
	strh	r4, [r0, #0x0]
	mov		r0, r9
	mov		r1, #0xa
	bl		sub_0807d8d8
	mov		r9, r0
_0806b674:
	mov		r0, r9
	mov		r1, #0xa
	bl		sub_0807d8d8
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	add		r1, r6, #0x0
	add		r6, #0x1
	mov		r0, #0x0
	mov		r2, #0xe
	bl		sub_080281b0
	add		r1, r4, #0x0
	add		r1, #0x10
	mov		r2, #0xf0
	lsl		r2, r2, #0x8
	orr		r1, r2
	strh	r1, [r0, #0x0]
	add		r0, #0x40
	add		r4, #0x30
	orr		r4, r2
	strh	r4, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	add		r0, r6, #0x0
	mov		r1, r8
	str		r1, [sp, #0x0]
	str		r7, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r1, #0xe
	ldr		r2, _0806b6cc
	bl		sub_08013e9c
	b		_0806b794

.incbin "base.gba", 0x6B6C2, 0x2

_0806b6c4:	.4byte 0x08110f94
_0806b6c8:	.4byte 0x08111348
_0806b6cc:	.4byte 0x0811134c

_0806b6d0:
	ldr		r1, _0806b850
	add		r1, r10
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	mov		r5, #0x0
	cmp		r0, #0x0
	blt		_0806b6e0
	add		r5, r0, #0x0
_0806b6e0:
	mov		r6, #0xd
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r7, #0x0
	str		r7, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r0, #0x16
	str		r0, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0xe
	ldr		r2, _0806b854
	bl		sub_08013e9c
	cmp		r5, #0x9
	ble		_0806b746
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_0807d80c
	mov		r1, #0xa
	bl		sub_0807d8d8
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	mov		r6, #0xe
	mov		r0, #0x0
	mov		r1, #0xd
	mov		r2, #0xe
	bl		sub_080281b0
	add		r1, r4, #0x0
	add		r1, #0x10
	mov		r2, #0xf0
	lsl		r2, r2, #0x8
	orr		r1, r2
	strh	r1, [r0, #0x0]
	add		r0, #0x40
	add		r4, #0x30
	orr		r4, r2
	strh	r4, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_0807d8d8
	add		r5, r0, #0x0
_0806b746:
	add		r0, r5, #0x0
	mov		r1, #0xa
	bl		sub_0807d8d8
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	add		r1, r6, #0x0
	add		r6, #0x1
	mov		r0, #0x0
	mov		r2, #0xe
	bl		sub_080281b0
	add		r1, r4, #0x0
	add		r1, #0x10
	mov		r2, #0xf0
	lsl		r2, r2, #0x8
	orr		r1, r2
	strh	r1, [r0, #0x0]
	add		r0, #0x40
	add		r4, #0x30
	orr		r4, r2
	strh	r4, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r7, [sp, #0x0]
	mov		r7, #0xf
	str		r7, [sp, #0x4]
	mov		r0, #0x16
	str		r0, [sp, #0x8]
	add		r0, r6, #0x0
	mov		r1, #0xe
	ldr		r2, _0806b858
	bl		sub_08013e9c
_0806b794:
	ldr		r4, _0806b85c
	mov		r0, #0x80
	add		r1, r4, #0x0
	bl		sub_080588d0
	cmp		r0, #0x0
	beq		_0806b82c
	add		r4, #0x8
	ldrh	r0, [r4, #0x2]
	cmp		r0, #0x0
	beq		_0806b82c
	ldr		r1, [sp, #0x24]
	ldr		r2, _0806b860
	add		r0, r1, r2
	ldr		r2, [r0, #0x0]
	add		r2, #0x14
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r0, #0xc
	mov		r1, #0x0
	bl		sub_08058fdc
	ldrh	r0, [r4, #0x2]
	add		r6, r0, #0x0
	cmp		r6, #0x0
	beq		_0806b82c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r7, #0x0
	str		r7, [sp, #0x0]
	mov		r5, #0xf
	str		r5, [sp, #0x4]
	mov		r4, #0x16
	str		r4, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0x10
	ldr		r2, _0806b864
	bl		sub_08013e9c
	ldr		r0, _0806b850
	add		r0, r10
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bgt		_0806b814
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	str		r7, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0x10
	ldr		r2, _0806b868
	bl		sub_08013e9c
_0806b814:
	mov		r0, #0x0
	mov		r1, #0xd
	mov		r2, #0x10
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r6, #0x0
	mov		r2, #0xc8
	lsl		r2, r2, #0x2
	mov		r3, #0xf
	bl		sub_0800c674
_0806b82c:
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x3
	mov		r1, #0x0
	bl		sub_08059f00
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x2
	bne		_0806b86c
	mov		r0, #0x90
	bl		sub_0807073c
	ldr		r7, [sp, #0x28]
	sub		r7, #0x1
	b		_0806ba22

.incbin "base.gba", 0x6B84E, 0x2

_0806b850:	.4byte 0x0000035F
_0806b854:	.4byte 0x08111358
_0806b858:	.4byte 0x0811136c
_0806b85c:	.4byte 0x02029400
_0806b860:	.4byte 0x00005F28
_0806b864:	.4byte 0x08111374
_0806b868:	.4byte 0x08111394

_0806b86c:
	mov		r0, #0x8e
	bl		sub_0807073c
	ldr		r0, [sp, #0x28]
	add		r0, #0x1
	str		r0, [sp, #0x28]
	b		_0806b96a
	thumb_func_end sub_0806ae16

	non_word_aligned_thumb_func_start sub_0806b87a
sub_0806b87a:
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	ldr		r2, [sp, #0x28]
	str		r2, [sp, #0x4]
	mov		r7, #0x16
	str		r7, [sp, #0x8]
	mov		r0, #0xa
	mov		r1, #0x2
	ldr		r2, _0806b94c
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r1, #0xf
	str		r1, [sp, #0x4]
	str		r7, [sp, #0x8]
	mov		r0, #0x5
	mov		r1, #0x6
	ldr		r2, _0806b950
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	mov		r7, #0xf
	str		r7, [sp, #0x4]
	mov		r0, #0x16
	str		r0, [sp, #0x8]
	mov		r0, #0x5
	mov		r1, #0x8
	ldr		r2, _0806b954
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r7, [sp, #0x4]
	mov		r2, #0x16
	str		r2, [sp, #0x8]
	mov		r0, #0x5
	mov		r1, #0xa
	ldr		r2, _0806b958
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r7, #0x0
	str		r7, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r1, #0x16
	str		r1, [sp, #0x8]
	mov		r0, #0x5
	mov		r1, #0xc
	ldr		r2, _0806b95c
	bl		sub_08013e9c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x3
	mov		r1, #0x0
	bl		sub_08059f00
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x2
	bne		_0806b960
	mov		r0, #0x90
	bl		sub_0807073c
	mov		r2, #0x2
	str		r2, [sp, #0x28]
	bl		sub_0806ae16
		
	.2byte	0x0
	

.align 2, 0
_0806b94c:
	asr		r4, r3, #0x4
	lsr		r1, r2, #0x20
_0806b950:
	asr		r0, r5, #0xe
	lsr		r1, r2, #0x20
_0806b954:
	asr		r4, r2, #0xf
	lsr		r1, r2, #0x20
_0806b958:
	asr		r4, r7, #0xf
	lsr		r1, r2, #0x20
_0806b95c:
	asr		r4, r4, #0x10
	lsr		r1, r2, #0x20
_0806b960:
	mov		r0, #0x8e
	bl		sub_0807073c
	mov		r7, #0x4
	str		r7, [sp, #0x28]
_0806b96a:
	mov		r0, r10
	add		r0, #0x3d
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		sub_0806ba24
	b		_0806ba38
	thumb_func_end sub_0806b87a

	non_word_aligned_thumb_func_start sub_0806b976
sub_0806b976:
	ldr		r4, [sp, #0x28]
	sub		r4, #0x4
	lsl		r0, r4, #0x2
	add		r0, sp
	add		r0, #0xc
	ldr		r5, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r6, #0x0
	add		r7, r4, #0x0
	mov		r4, r10
	add		r4, #0x3d
	ldr		r0, [sp, #0x28]
	add		r0, #0x1
	mov		r9, r0
	mov		r1, #0x2
	mov		r8, r1
_0806b99a:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r1, #0x16
	str		r1, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, r8
	add		r2, r5, #0x0
	bl		sub_08013ec0
	b		_0806b9c0
_0806b9be:
	add		r5, #0x1
_0806b9c0:
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0806b9be
	add		r5, #0x1
	ldrb	r1, [r4, #0x0]
	lsl		r0, r7, #0x3
	add		r0, r0, r6
	add		r0, #0x1
	cmp		r1, r0
	ble		_0806b9de
	mov		r2, #0x2
	add		r8, r2
	add		r6, #0x1
	cmp		r6, #0x7
	ble		_0806b99a
_0806b9de:
	mov		r0, #0x1
	bl		sub_080281fc
	ldr		r7, [sp, #0x2c]
	cmp		r9, r7
	ble		_0806b9f0
	bl		sub_080602e0
	b		_0806b9f8
_0806b9f0:
	mov		r0, #0x3
	mov		r1, #0x0
	bl		sub_08059f00
_0806b9f8:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x2
	bne		_0806ba0e
	mov		r0, #0x90
	bl		sub_0807073c
	ldr		r0, [sp, #0x28]
	sub		r0, #0x1
	str		r0, [sp, #0x28]
	b		sub_0806ba24
_0806ba0e:
	mov		r0, #0x8e
	bl		sub_0807073c
	mov		r1, r9
	str		r1, [sp, #0x28]
	ldr		r2, [sp, #0x2c]
	cmp		r1, r2
	ble		sub_0806ba24
	mov		r7, #0x1
	neg		r7, r7
_0806ba22:
	str		r7, [sp, #0x28]
	thumb_func_end sub_0806b976

	thumb_func_start sub_0806ba24
sub_0806ba24:
	ldr		r0, [sp, #0x28]
	cmp		r0, #0x0
	ble		sub_0806ba2e
	bl		sub_0806ae16
	thumb_func_end sub_0806ba24

	non_word_aligned_thumb_func_start sub_0806ba2e
sub_0806ba2e:
	ldr		r1, [sp, #0x28]
	cmp		r1, #0x0
	bne		_0806ba38
	thumb_func_end sub_0806ba2e

	non_word_aligned_thumb_func_start sub_0806ba34
sub_0806ba34:
	mov		r0, #0x0
	b		_0806ba3a
_0806ba38:
	mov		r0, #0x1
_0806ba3a:
	add		sp, #0x34
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6BA4A, 0x2
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	ldr		r0, _0806ba94
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0xc]
	ldr		r1, _0806ba98
	add		r1, r0, r1
	str		r1, [sp, #0x10]
	mov		r2, #0x0
	ldr		r3, _0806ba9c
	mov		r10, r3
_0806ba6a:
	ldr		r1, [sp, #0xc]
	mov		r3, #0xd7
	lsl		r3, r3, #0x7
	add		r0, r1, r3
	mov		r1, #0x1
	str		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_0806ad3c
	cmp		r0, #0x0
	bne		_0806baa4
	ldr		r0, _0806baa0
	mov		r1, r10
	str		r0, [r1, #0x0]
	ldrb	r0, [r1, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	mov		r2, r10
	b		_0806bd22

.incbin "base.gba", 0x6BA92, 0x2

_0806ba94:	.4byte 0x0203EBE0
_0806ba98:	.4byte 0x00005F14
_0806ba9c:	.4byte RunGameLogic_CallBack
_0806baa0:	.4byte 0x08069C05

_0806baa4:
	mov		r0, #0x0
	bl		sub_080281d4
	ldr		r3, [sp, #0x10]
	ldr		r0, _0806bbc8
	add		r4, r3, r0
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x0
	bgt		_0806baba
	b		_0806bbe0
_0806baba:
	add		r6, r0, #0x0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r1, #0x0
	mov		r9, r1
	str		r1, [sp, #0x0]
	mov		r2, #0xf
	mov		r8, r2
	str		r2, [sp, #0x4]
	mov		r7, #0x16
	str		r7, [sp, #0x8]
	mov		r0, #0x8
	mov		r1, #0x3
	ldr		r2, _0806bbcc
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r0, r9
	str		r0, [sp, #0x0]
	mov		r1, r8
	str		r1, [sp, #0x4]
	str		r7, [sp, #0x8]
	mov		r0, #0x7
	mov		r1, #0x6
	ldr		r2, _0806bbd0
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r2, r9
	str		r2, [sp, #0x0]
	mov		r0, r8
	str		r0, [sp, #0x4]
	str		r7, [sp, #0x8]
	mov		r0, #0x6
	mov		r1, #0x9
	ldr		r2, _0806bbd4
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r1, r9
	str		r1, [sp, #0x0]
	mov		r2, r8
	str		r2, [sp, #0x4]
	str		r7, [sp, #0x8]
	mov		r0, #0x6
	mov		r1, #0xb
	ldr		r2, _0806bbd8
	bl		sub_08013e9c
	mov		r5, #0xb
	cmp		r6, #0x9
	ble		_0806bb80
	add		r0, r6, #0x0
	mov		r1, #0xa
	bl		sub_0807d80c
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	mov		r0, #0x0
	mov		r1, #0xb
	mov		r2, #0x3
	bl		sub_080281b0
	add		r1, r4, #0x0
	add		r1, #0x10
	mov		r3, #0xc0
	lsl		r3, r3, #0x6
	orr		r1, r3
	strh	r1, [r0, #0x0]
	add		r0, #0x40
	add		r4, #0x30
	orr		r4, r3
	strh	r4, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r1, #0xa
	bl		sub_0807d8d8
	add		r6, r0, #0x0
	mov		r5, #0xc
_0806bb80:
	lsl		r4, r6, #0x10
	asr		r4, r4, #0x10
	mov		r0, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x3
	bl		sub_080281b0
	add		r1, r4, #0x0
	add		r1, #0x10
	mov		r2, #0xc0
	lsl		r2, r2, #0x6
	orr		r1, r2
	strh	r1, [r0, #0x0]
	add		r0, #0x40
	add		r4, #0x30
	orr		r4, r2
	strh	r4, [r0, #0x0]
	add		r5, #0x1
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r0, r9
	str		r0, [sp, #0x0]
	mov		r1, r8
	str		r1, [sp, #0x4]
	str		r7, [sp, #0x8]
	add		r0, r5, #0x0
	mov		r1, #0x3
	ldr		r2, _0806bbdc
	bl		sub_08013e9c
	b		_0806bc42

.incbin "base.gba", 0x6BBC6, 0x2

_0806bbc8:	.4byte 0x0000035F
_0806bbcc:	.4byte 0x08111438
_0806bbd0:	.4byte 0x08111440
_0806bbd4:	.4byte 0x08111464
_0806bbd8:	.4byte 0x0811148c
_0806bbdc:	.4byte 0x081114a4

_0806bbe0:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r2, #0x0
	str		r2, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r4, #0x16
	str		r4, [sp, #0x8]
	mov		r0, #0x6
	mov		r1, #0x4
	ldr		r2, _0806bc64
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	mov		r2, #0xf
	str		r2, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r0, #0x6
	mov		r1, #0x6
	ldr		r2, _0806bc68
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r1, #0xf
	str		r1, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r0, #0x6
	mov		r1, #0x8
	ldr		r2, _0806bc6c
	bl		sub_08013e9c
_0806bc42:
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0xe
	mov		r1, #0x0
	bl		sub_080601b8
	cmp		r0, #0x0
	bne		_0806bc8c
	ldr		r2, [sp, #0xc]
	ldr		r3, _0806bc70
	add		r0, r2, r3
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0806bc74
	mov		r2, #0x1
	b		_0806ba6a

_0806bc64:	.4byte 0x081114bc
_0806bc68:	.4byte 0x081114d8
_0806bc6c:	.4byte 0x08111440
_0806bc70:	.4byte 0x00006B7C

_0806bc74:
	ldr		r0, _0806bc88
	mov		r1, r10
	str		r0, [r1, #0x0]
	ldrb	r0, [r1, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	mov		r2, r10
	b		_0806bd22

.incbin "base.gba", 0x6BC86, 0x2

_0806bc88:	.4byte 0x08069C05

_0806bc8c:
	ldr		r3, [sp, #0x10]
	ldr		r0, _0806bd38
	add		r1, r3, r0
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x0
	blt		_0806bca0
	sub		r0, r2, #0x1
	strb	r0, [r1, #0x0]
_0806bca0:
	ldr		r1, [sp, #0xc]
	ldr		r2, _0806bd3c
	add		r4, r1, r2
	bl		sub_08057370
	mov		r3, #0xee
	lsl		r3, r3, #0x3
	add		r1, r0, r3
	mov		r2, #0x0
	ldr		r3, _0806bd40
_0806bcb4:
	ldrb	r0, [r4, #0x0]
	strb	r0, [r1, #0x0]
	add		r4, #0x1
	add		r1, #0x1
	add		r2, #0x1
	cmp		r2, r3
	bls		_0806bcb4
	ldr		r0, _0806bd44
	ldr		r0, [r0, #0x0]
	mov		r1, #0x2
	bl		sub_080708d4
	mov		r4, #0x1f
_0806bcce:
	bl		_DrawFrameRunAudio
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0806bcce
	bl		sub_08057428
	bl		sub_08057370
	mov		r1, #0xbf
	lsl		r1, r1, #0x4
	add		r0, r0, r1
	ldrh	r2, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x8
	add		r1, r3, #0x0
	orr		r1, r2
	strh	r1, [r0, #0x0]
	bl		sub_08056adc
	bl		sub_08057370
	mov		r1, #0xbf
	lsl		r1, r1, #0x4
	add		r0, r0, r1
	ldrh	r2, [r0, #0x0]
	ldr		r1, _0806bd48
	and		r1, r2
	strh	r1, [r0, #0x0]
	mov		r4, #0x2f
_0806bd0a:
	bl		_DrawFrameRunAudio
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_0806bd0a
	ldr		r0, _0806bd4c
	ldr		r2, _0806bd50
	str		r0, [r2, #0x0]
	ldrb	r0, [r2, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
_0806bd22:
	strb	r0, [r2, #0x8]
	mov		r0, #0x1
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6BD36, 0x2

_0806bd38:	.4byte 0x0000035F
_0806bd3c:	.4byte 0x00005F14
_0806bd40:	.4byte 0x00000363
_0806bd44:	.4byte 0x08124544
_0806bd48:	.4byte 0x00007FFF
_0806bd4c:	.4byte sub_0806bd54
_0806bd50:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_0806ba34

	thumb_func_start sub_0806bd54
sub_0806bd54:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	ldr		r0, _0806be34
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	ldr		r7, _0806be38
	add		r7, r8
	ldr		r6, _0806be3c
	add		r6, r8
	add		r0, r6, #0x0
	bl		sub_08002c5c
	mov		r1, #0x0
	str		r1, [r6, #0x8]
	str		r1, [r6, #0xc]
	ldr		r0, _0806be40
	add		r0, r8
	str		r1, [r0, #0x0]
	ldr		r0, _0806be44
	add		r0, r8
	str		r1, [r0, #0x0]
	mov		r2, #0x1
	neg		r2, r2
	mov		r1, #0x3
	ldr		r0, _0806be48
	add		r0, r8
_0806bd8c:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0806bd8c
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r6, #0x4]
	str		r0, [r6, #0x10]
	str		r0, [r6, #0x14]
	str		r0, [r6, #0x18]
	str		r0, [r6, #0x1c]
	str		r0, [r6, #0x20]
	ldr		r0, _0806be4c
	add		r1, r6, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r0, #0x0
	str		r0, [r6, #0x50]
	bl		_DrawFrameRunAudio
	ldr		r5, _0806be50
	ldr		r4, _0806be54
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	str		r5, [r4, #0xc]
	mov		r0, #0x2
	ldr		r1, _0806be58
	bl		sub_0807df78
	mov		r1, #0x3
	neg		r1, r1
	mov		r0, #0x1
	bl		sub_0807df78
	ldr		r1, _0806be5c
	mov		r0, #0x1
	bl		sub_0807df68
	add		r0, r6, #0x0
	bl		sub_08001b54
	add		r0, r7, #0x0
	add		r0, #0x3a
	ldrb	r1, [r0, #0x0]
	mov		r0, #0xf
	and		r0, r1
	cmp		r0, #0x0
	bne		_0806be98
	mov		r0, #0x2
	bl		sub_0807073c
_0806bdfa:
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x0
	bl		sub_08007110
	cmp		r0, #0x0
	beq		_0806bdfa
	ldr		r2, _0806be60
	ldr		r0, _0806be64
	ldrh	r1, [r0, #0x14]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	mov		r1, #0x2
	bl		sub_080708d4
	mov		r4, #0x0
	ldr		r7, _0806be68
	mov		r6, #0xff
	ldr		r5, _0806be6c
_0806be26:
	cmp		r4, #0x20
	bgt		_0806be70
	strh	r6, [r7, #0x0]
	lsr		r0, r4, #0x1f
	add		r0, r4, r0
	asr		r0, r0, #0x1
	b		_0806be74

_0806be34:	.4byte 0x0203EBE0
_0806be38:	.4byte 0x00005F14
_0806be3c:	.4byte 0x00006B84
_0806be40:	.4byte 0x00007C20
_0806be44:	.4byte 0x00007C24
_0806be48:	.4byte 0x00006BB4
_0806be4c:	.4byte 0x00000D84
_0806be50:	.4byte sub_08001dd0
_0806be54:	.4byte RunGameLogic_CallBack
_0806be58:	.4byte 0x00010001
_0806be5c:	.4byte 0x080270F1
_0806be60:	.4byte 0x08124544
_0806be64:	.4byte 0x081245c8
_0806be68:	.4byte ColorSpecialEffectsSElection
_0806be6c:	.4byte Brightness_Fade_In_Out_Coefficient

_0806be70:
	strh	r6, [r7, #0x0]
	mov		r0, #0x10
_0806be74:
	strh	r0, [r5, #0x0]
	bl		_DrawFrameRunAudio
	add		r4, #0x1
	cmp		r4, #0x2f
	ble		_0806be26
	mov		r1, #0x80
	lsl		r1, r1, #0x13
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r1, #0xc0
	lsl		r1, r1, #0x13
	ldr		r2, _0806bed4
	mov		r0, sp
	bl		_CallHardwareSetCpuFast
_0806be98:
	mov		r5, #0x0
	ldr		r4, _0806bed8
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	str		r5, [r4, #0xc]
	mov		r0, #0x2
	ldr		r1, _0806bedc
	bl		sub_0807df78
	ldr		r0, _0806bee0
	add		r0, r8
	str		r5, [r0, #0x0]
	ldr		r0, _0806bee4
	str		r0, [r4, #0x0]
	ldrb	r0, [r4, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r4, #0x8]
	mov		r0, #0x1
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6BED2, 0x2

_0806bed4:	.4byte 0x01006000
_0806bed8:	.4byte RunGameLogic_CallBack
_0806bedc:	.4byte 0x00010001
_0806bee0:	.4byte 0x00007DF4
_0806bee4:	.4byte 0x0806c0b1
	thumb_func_end sub_0806bd54

	thumb_func_start sub_0806bee8
sub_0806bee8:
	cmp		r0, #0xf
	bgt		_0806bf24
	ldr		r1, _0806bf1c
	lsl		r0, r0, #0x1a
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0806bef8
	add		r0, #0x3f
_0806bef8:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x3
	sub		r0, r0, r1
	lsl		r0, r0, #0x7
	cmp		r0, #0x0
	bge		_0806bf10
	ldr		r1, _0806bf20
	add		r0, r0, r1
_0806bf10:
	asr		r1, r0, #0xf
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	sub		r0, r0, r1
	b		_0806bf58

.incbin "base.gba", 0x6BF1A, 0x2

_0806bf1c:	.4byte 0x08101068
_0806bf20:	.4byte 0x00007FFF

_0806bf24:
	cmp		r0, #0x1f
	bgt		_0806bf54
	ldr		r1, _0806bf50
	lsl		r0, r0, #0x1a
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0806bf34
	add		r0, #0x3f
_0806bf34:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0806bf44
	add		r0, #0xff
_0806bf44:
	asr		r1, r0, #0x8
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r1
	b		_0806bf58

.incbin "base.gba", 0x6BF4E, 0x2

_0806bf50:	.4byte 0x08101068

_0806bf54:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
_0806bf58:
	bx		lr

.incbin "base.gba", 0x6BF5A, 0x2
	thumb_func_end sub_0806bee8

	thumb_func_start sub_0806bf5c
sub_0806bf5c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x4
	ldr		r0, _0806bfe8
	ldr		r0, [r0, #0x0]
	mov		r9, r0
	ldr		r6, _0806bfec
	add		r6, r9
	ldr		r4, _0806bff0
	add		r4, r9
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_0806bfaa
	mov		r7, #0x0
	mov		r5, #0x0
	add		r1, r4, #0x0
	ldr		r2, _0806bff4
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	mov		r8, r0
	add		r3, r2, #0x4
_0806bf8a:
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	str		r0, [r1, #0x4]
	mov		r0, r8
	str		r0, [r1, #0x8]
	str		r5, [r1, #0xc]
	str		r5, [r1, #0x10]
	ldr		r0, [r2, #0x8]
	str		r0, [r1, #0x14]
	add		r1, #0x18
	add		r2, #0x10
	add		r3, #0x10
	add		r7, #0x1
	cmp		r7, #0x6
	ble		_0806bf8a
_0806bfaa:
	mov		r1, #0x90
	add		r1, r1, r4
	mov		r8, r1
	ldr		r0, _0806bff4
	add		r2, r0, #0x0
	add		r2, #0xc
	mov		r7, #0x5
_0806bfb8:
	ldr		r0, [r6, #0x0]
	ldr		r5, [r2, #0x0]
	cmp		r0, r5
	bne		_0806bfce
	mov		r0, #0x1
	str		r0, [r4, #0x10]
	ldr		r0, _0806bff8
	str		r2, [sp, #0x0]
	bl		sub_0807073c
	ldr		r2, [sp, #0x0]
_0806bfce:
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x0
	beq		_0806c02e
	add		r1, r5, #0x0
	add		r1, #0x10
	ldr		r0, [r6, #0x0]
	cmp		r0, r1
	bgt		_0806bffc
	ldr		r0, [r4, #0xc]
	mov		r1, #0xa0
	lsl		r1, r1, #0x7
	add		r0, r0, r1
	b		_0806bffe

_0806bfe8:	.4byte 0x0203EBE0
_0806bfec:	.4byte 0x00007DF4
_0806bff0:	.4byte 0x00007DF8
_0806bff4:	.4byte 0x081114fc
_0806bff8:	.4byte 0x00000187

_0806bffc:
	mov		r0, #0x0
_0806bffe:
	str		r0, [r4, #0xc]
	ldr		r1, [r6, #0x0]
	ldr		r0, [r2, #0x0]
	sub		r0, r1, r0
	cmp		r0, #0x1f
	bgt		_0806c016
	str		r2, [sp, #0x0]
	bl		sub_0806bee8
	str		r0, [r4, #0x8]
	ldr		r2, [sp, #0x0]
	b		_0806c01c
_0806c016:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	str		r0, [r4, #0x8]
_0806c01c:
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x69
	ble		_0806c02e
	sub		r0, #0x6a
	cmp		r0, #0x17
	bgt		_0806c02e
	ldr		r0, [r4, #0x4]
	sub		r0, #0x1
	str		r0, [r4, #0x4]
_0806c02e:
	add		r4, #0x18
	add		r2, #0x10
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_0806bfb8
	ldr		r0, _0806c068
	ldr		r1, [r6, #0x0]
	ldr		r5, [r0, #0x6c]
	cmp		r1, r5
	bne		_0806c050
	mov		r0, #0x1
	mov		r2, r8
	str		r0, [r2, #0x10]
	mov		r0, #0xc4
	lsl		r0, r0, #0x1
	bl		sub_0807073c
_0806c050:
	mov		r4, r8
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x0
	beq		_0806c074
	ldr		r0, [r6, #0x0]
	sub		r0, r0, r5
	cmp		r0, #0x1f
	bgt		_0806c06c
	bl		sub_0806bee8
	str		r0, [r4, #0x8]
	b		_0806c074

_0806c068:	.4byte 0x081114fc

_0806c06c:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	mov		r1, r8
	str		r0, [r1, #0x8]
_0806c074:
	ldr		r0, [r6, #0x0]
	cmp		r0, #0xd1
	ble		_0806c0a0
	add		r1, r0, #0x0
	sub		r1, #0xd2
	cmp		r1, #0x18
	bgt		_0806c0a0
	mov		r2, r9
	ldrh	r0, [r2, #0x1a]
	mov		r0, #0xff
	strh	r0, [r2, #0x1a]
	mov		r0, #0x18
	sub		r0, r0, r1
	lsl		r0, r0, #0x4
	neg		r0, r0
	mov		r1, #0x18
	bl		sub_0807d80c
	add		r0, #0x10
	mov		r2, r9
	ldrh	r1, [r2, #0x1e]
	strh	r0, [r2, #0x1e]
_0806c0a0:
	add		sp, #0x4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6C0AE, 0x2
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x2c
	ldr		r0, _0806c220
	ldr		r7, [r0, #0x0]
	ldr		r0, _0806c224
	add		r0, r7, r0
	str		r0, [sp, #0x14]
	mov		r5, #0x0
	ldr		r6, _0806c228
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	str		r5, [r6, #0xc]
	mov		r0, #0x2
	ldr		r1, _0806c22c
	bl		sub_0807df78
	bl		_DrawFrameRunAudio
	mov		r0, #0xa0
	lsl		r0, r0, #0x13
	strh	r5, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	strh	r5, [r0, #0x0]
	ldrh	r0, [r7, #0x0]
	mov		r0, #0x82
	lsl		r0, r0, #0x5
	strh	r0, [r7, #0x0]
	ldrh	r0, [r7, #0x1a]
	ldr		r0, _0806c230
	strh	r0, [r7, #0x1a]
	ldrh	r0, [r7, #0x1c]
	mov		r0, #0xbf
	strh	r0, [r7, #0x1c]
	ldrh	r0, [r7, #0x1e]
	mov		r0, #0x10
	strh	r0, [r7, #0x1e]
	ldr		r0, _0806c234
	ldr		r1, _0806c238
	bl		_CallHardwareLZ77DecompressToMemory16Bit
	ldr		r4, _0806c23c
	mov		r0, #0x1
	bl		sub_08028130
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x0
	bl		sub_08028130
	strh	r5, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_08028168
	ldr		r4, _0806c240
	mov		r0, #0x1
	mov		r1, #0x2
	neg		r1, r1
	bl		sub_0807df78
	str		r4, [r6, #0xc]
	mov		r0, #0x2
	ldr		r1, _0806c22c
	bl		sub_0807df78
	ldr		r1, [r6, #0x0]
	ldr		r0, _0806c244
	cmp		r1, r0
	bne		_0806c20e
	ldr		r1, _0806c248
	add		r1, r7, r1
	str		r1, [sp, #0x1c]
	ldr		r2, _0806c24c
	add		r2, r7, r2
	str		r2, [sp, #0x20]
	mov		r0, #0xfc
	lsl		r0, r0, #0x7
	add		r0, r7, r0
	str		r0, [sp, #0x24]
	ldr		r1, _0806c250
	add		r1, r7, r1
	str		r1, [sp, #0x28]
	mov		r2, sp
	add		r2, #0x8
	str		r2, [sp, #0x18]
_0806c16c:
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	bl		sub_0806bf5c
	ldr		r0, [sp, #0x14]
	add		r0, #0x14
	mov		r8, r0
	ldr		r7, [sp, #0x28]
	ldr		r6, [sp, #0x24]
	ldr		r5, [sp, #0x20]
	ldr		r4, [sp, #0x1c]
	mov		r1, #0x0
	mov		r10, r1
	mov		r2, #0x6
	mov		r9, r2
_0806c18e:
	ldrh	r2, [r4, #0x0]
	ldr		r1, _0806c254
	ldr		r0, [sp, #0x10]
	and		r0, r1
	orr		r0, r2
	str		r0, [sp, #0x10]
	ldrh	r2, [r5, #0x0]
	lsl		r2, r2, #0x10
	ldr		r1, _0806c258
	and		r0, r1
	orr		r0, r2
	str		r0, [sp, #0x10]
	ldr		r3, [r6, #0x0]
	ldr		r1, [r7, #0x0]
	str		r3, [sp, #0x8]
	mov		r0, #0x1
	ldr		r2, [sp, #0x18]
	str		r0, [r2, #0x4]
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_0806c1d0
	ldr		r0, [sp, #0x14]
	add		r0, #0x18
	add		r0, r10
	ldr		r0, [r0, #0x0]
	str		r1, [sp, #0x0]
	ldr		r1, [sp, #0x18]
	str		r1, [sp, #0x4]
	add		r1, sp, #0x10
	add		r2, r3, #0x0
	bl		sub_0802951c
_0806c1d0:
	mov		r2, #0x18
	add		r8, r2
	add		r7, #0x18
	add		r6, #0x18
	add		r5, #0x18
	add		r4, #0x18
	add		r10, r2
	mov		r0, #0x1
	neg		r0, r0
	add		r9, r0
	mov		r1, r9
	cmp		r1, #0x0
	bge		_0806c18e
	ldr		r2, [sp, #0x14]
	ldr		r0, [r2, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	ldr		r2, _0806c228
	cmp		r0, #0xea
	ble		_0806c206
	ldr		r0, _0806c25c
	str		r0, [r2, #0x0]
	ldrb	r0, [r2, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r2, #0x8]
_0806c206:
	ldr		r1, [r2, #0x0]
	ldr		r0, _0806c244
	cmp		r1, r0
	beq		_0806c16c
_0806c20e:
	mov		r0, #0x1
	add		sp, #0x2c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0806c220:	.4byte 0x0203EBE0
_0806c224:	.4byte 0x00007DF4
_0806c228:	.4byte RunGameLogic_CallBack
_0806c22c:	.4byte 0x00010001
_0806c230:	.4byte 0x00001044
_0806c234:	.4byte 0x08093478
_0806c238:	.4byte 0x06010000
_0806c23c:	.4byte 0x08092a6c
_0806c240:	.4byte 0x0806d235
_0806c244:	.4byte 0x0806C0B1
_0806c248:	.4byte 0x00007DF8
_0806c24c:	.4byte 0x00007DFC
_0806c250:	.4byte 0x00007E04
_0806c254:	.4byte 0xffff0000
_0806c258:	.4byte 0x0000FFFF
_0806c25c:	.4byte sub_0806c260
	thumb_func_end sub_0806bf5c

	thumb_func_start sub_0806c260
sub_0806c260:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	ldr		r0, _0806c328
	ldr		r1, [r0, #0x0]
	ldr		r0, _0806c32c
	add		r2, r1, r0
	ldr		r3, _0806c330
	add		r0, r1, r3
	ldrb	r6, [r0, #0x0]
	ldr		r0, _0806c334
	add		r4, r0, #0x0
	add		r4, #0x24
	ldr		r5, [r2, #0x18]
	ldr		r2, _0806c338
	add		r0, r1, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mvn		r0, r0
	lsr		r7, r0, #0x1f
	mov		r2, #0x0
	ldr		r0, _0806c33c
	add		r3, r1, r0
_0806c28e:
	mov		r1, sp
	add		r0, r1, r2
	add		r1, r3, r2
	ldrb	r1, [r1, #0x0]
	strb	r1, [r0, #0x0]
	add		r2, #0x1
	cmp		r2, #0x3
	ble		_0806c28e
	add		r0, r4, #0x0
	bl		sub_08042668
	bl		sub_08002e8c
	mov		r0, #0x0
	bl		sub_08014ca8
	mov		r0, #0x0
	bl		sub_08014ccc
	mov		r0, #0x0
	bl		sub_08014d38
	mov		r0, #0x0
	bl		sub_08014d14
	ldr		r1, _0806c340
	mov		r0, #0x80
	bl		sub_080588d0
	ldr		r2, _0806c344
	add		r1, r4, r2
	mov		r2, #0x0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldr		r3, _0806c348
	add		r1, r4, r3
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	mov		r1, #0xfb
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	strb	r2, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_0802d690
	ldr		r2, _0806c34c
	add		r1, r4, r2
	strb	r0, [r1, #0x0]
	mov		r3, #0x0
	cmp		r5, #0x7
	bhi		_0806c2f6
	add		r3, r5, #0x0
_0806c2f6:
	add		r0, r4, #0x0
	mov		r1, sp
	add		r2, r7, #0x0
	bl		sub_08060ae4
	ldr		r3, _0806c350
	add		r2, r4, r3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x7f
	and		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r0, _0806c354
	ldr		r2, _0806c334
	str		r0, [r2, #0x0]
	ldrb	r0, [r2, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r2, #0x8]
	mov		r0, #0x1
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6C326, 0x2

_0806c328:	.4byte 0x0203EBE0
_0806c32c:	.4byte 0x00006B84
_0806c330:	.4byte 0x00005F50
_0806c334:	.4byte RunGameLogic_CallBack
_0806c338:	.4byte 0x00006273
_0806c33c:	.4byte 0x00005F4C
_0806c340:	.4byte 0x02022400
_0806c344:	.4byte 0x000007D7
_0806c348:	.4byte 0x000007DC
_0806c34c:	.4byte 0x000007DD
_0806c350:	.4byte 0x000007D4
_0806c354:	.4byte sub_0804b034
	thumb_func_end sub_0806c260

	thumb_func_start sub_0806c358
sub_0806c358:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x14
	ldr		r0, _0806c3e4
	ldr		r7, [r0, #0x0]
	ldr		r0, _0806c3e8
	add		r6, r7, r0
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	mov		r5, #0x0
	ldr		r4, _0806c3ec
	mov		r0, #0x80
	add		r1, r4, #0x0
	bl		sub_080588d0
	cmp		r0, #0x0
	beq		_0806c3aa
	add		r1, r4, #0x0
	add		r1, #0x8
	ldrh	r0, [r1, #0x2]
	cmp		r0, #0x0
	beq		_0806c3aa
	add		r1, r0, #0x0
	neg		r0, r1
	orr		r0, r1
	lsr		r5, r0, #0x1f
_0806c3aa:
	cmp		r5, #0x0
	bne		_0806c3f4
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c3f0
	str		r5, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r0, #0x16
	str		r0, [sp, #0x8]
	mov		r0, #0x6
	mov		r1, #0x8
	bl		sub_08013e9c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x0
	bl		sub_080602f0
	b		_0806c578

.incbin "base.gba", 0x6C3E2, 0x2

_0806c3e4:	.4byte 0x0203EBE0
_0806c3e8:	.4byte 0x00005F14
_0806c3ec:	.4byte 0x02029400
_0806c3f0:	.4byte 0x0811156c

_0806c3f4:
	ldr		r1, _0806c490
	add		r0, r7, r1
	ldr		r2, [r0, #0x0]
	add		r2, #0x14
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r0, #0xc
	mov		r1, #0x1
	bl		sub_08058fdc
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c494
	mov		r5, #0x0
	str		r5, [sp, #0x0]
	mov		r7, #0xf
	str		r7, [sp, #0x4]
	mov		r0, #0x18
	mov		r8, r0
	str		r0, [sp, #0x8]
	mov		r0, #0x9
	mov		r1, #0x4
	bl		sub_08013e9c
	ldr		r1, [r6, #0x20]
	ldr		r0, [r6, #0x24]
	cmp		r1, r0
	bne		_0806c4a0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c498
	str		r5, [sp, #0x0]
	str		r7, [sp, #0x4]
	mov		r1, r8
	str		r1, [sp, #0x8]
	mov		r0, #0x9
	mov		r1, #0x8
	bl		sub_08013e9c
	ldr		r0, [r6, #0x20]
	add		r1, sp, #0xc
	bl		sub_08059d38
	add		r0, sp, #0xc
	mov		r1, #0x9
	mov		r2, #0xa
	bl		sub_080698d0
	add		r4, r0, #0x0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c49c
	str		r5, [sp, #0x0]
	str		r7, [sp, #0x4]
	mov		r0, r8
	str		r0, [sp, #0x8]
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_08013e9c
	mov		r4, #0xd
	b		_0806c524

.incbin "base.gba", 0x6C48E, 0x2

_0806c490:	.4byte 0x00005F28
_0806c494:	.4byte 0x081115a8
_0806c498:	.4byte 0x081115c4
_0806c49c:	.4byte 0x081115d8

_0806c4a0:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c564
	str		r5, [sp, #0x0]
	str		r7, [sp, #0x4]
	mov		r1, r8
	str		r1, [sp, #0x8]
	mov		r0, #0x9
	mov		r1, #0x7
	bl		sub_08013e9c
	ldr		r0, [r6, #0x20]
	add		r1, sp, #0xc
	bl		sub_08059d38
	add		r0, sp, #0xc
	mov		r1, #0x9
	mov		r2, #0x9
	bl		sub_080698d0
	add		r4, r0, #0x0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c568
	str		r5, [sp, #0x0]
	str		r7, [sp, #0x4]
	mov		r0, r8
	str		r0, [sp, #0x8]
	add		r0, r4, #0x0
	mov		r1, #0x9
	bl		sub_08013e9c
	ldr		r0, [r6, #0x24]
	add		r1, sp, #0xc
	bl		sub_08059d38
	add		r0, sp, #0xc
	mov		r1, #0x9
	mov		r2, #0xb
	bl		sub_080698d0
	add		r4, r0, #0x0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c56c
	str		r5, [sp, #0x0]
	str		r7, [sp, #0x4]
	mov		r1, r8
	str		r1, [sp, #0x8]
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_08013e9c
	mov		r4, #0xe
_0806c524:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c570
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r0, #0x18
	str		r0, [sp, #0x8]
	mov		r0, #0x5
	add		r1, r4, #0x0
	bl		sub_08013e9c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	bl		sub_080602e0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x2
	beq		_0806c578
	ldr		r0, _0806c574
	b		_0806c57a

.incbin "base.gba", 0x6C562, 0x2

_0806c564:	.4byte 0x081115e4
_0806c568:	.4byte 0x08110f64
_0806c56c:	.4byte 0x081115d8
_0806c570:	.4byte 0x08110f30
_0806c574:	.4byte sub_0806c5a0

_0806c578:
	ldr		r0, _0806c598
_0806c57a:
	ldr		r2, _0806c59c
	str		r0, [r2, #0x0]
	ldrb	r0, [r2, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r2, #0x8]
	mov		r0, #0x1
	add		sp, #0x14
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6C596, 0x2

_0806c598:	.4byte 0x08069C05
_0806c59c:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_0806c358

	thumb_func_start sub_0806c5a0
sub_0806c5a0:
	push	{ r4, lr }
	sub		sp, #0xc
	ldr		r0, _0806c614
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	ldr		r1, _0806c618
	mov		r0, #0x3
	bl		sub_08013d0c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c61c
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r0, #0x18
	str		r0, [sp, #0x8]
	mov		r0, #0x9
	mov		r1, #0x4
	bl		sub_08013e9c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	mov		r0, #0xe
	mov		r1, #0x0
	bl		sub_080601b8
	cmp		r0, #0x0
	bne		_0806c630
	ldr		r1, _0806c620
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	ldr		r1, _0806c624
	cmp		r0, #0x0
	beq		_0806c604
	ldr		r1, _0806c628
_0806c604:
	ldr		r0, _0806c62c
	str		r1, [r0, #0x0]
	ldrb	r1, [r0, #0x8]
	add		r1, #0x1
	mov		r2, #0x7
	and		r1, r2
	strb	r1, [r0, #0x8]
	b		_0806c640

_0806c614:	.4byte 0x0203EBE0
_0806c618:	.4byte 0x08114330
_0806c61c:	.4byte 0x081115a8
_0806c620:	.4byte 0x00006B7C
_0806c624:	.4byte 0x08069C05
_0806c628:	.4byte 0x0806C359
_0806c62c:	.4byte RunGameLogic_CallBack

_0806c630:
	ldr		r0, _0806c64c
	ldr		r2, _0806c650
	str		r0, [r2, #0x0]
	ldrb	r0, [r2, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r2, #0x8]
_0806c640:
	mov		r0, #0x1
	add		sp, #0xc
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6C64A, 0x2

_0806c64c:	.4byte sub_0806c654
_0806c650:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_0806c5a0

	thumb_func_start sub_0806c654
sub_0806c654:
	push	{ r4, r5, lr }
	sub		sp, #0xc
	ldr		r0, _0806c6b8
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	mov		r0, #0x2
	bl		sub_080281fc
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c6bc
	mov		r5, #0x0
	str		r5, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r0, #0x18
	str		r0, [sp, #0x8]
	mov		r0, #0x9
	mov		r1, #0x4
	bl		sub_08013e9c
	mov		r0, #0x8
	bl		sub_0806022c
	cmp		r0, #0x0
	beq		_0806c6ec
	ldr		r1, _0806c6c0
	add		r0, r4, r1
	str		r5, [r0, #0x0]
	bl		sub_08060298
	cmp		r0, #0x0
	bne		_0806c6d0
	ldr		r0, _0806c6c4
	bl		sub_080602d4
	ldr		r0, _0806c6c8
	bl		sub_0806581c
	ldr		r0, _0806c6cc
	b		_0806c6d2

_0806c6b8:	.4byte 0x0203EBE0
_0806c6bc:	.4byte 0x081115a8
_0806c6c0:	.4byte 0x00006B74
_0806c6c4:	.4byte sub_0806c730
_0806c6c8:	.4byte 0x0806C655
_0806c6cc:	.4byte 0x080657B1

_0806c6d0:
	ldr		r0, _0806c6e4
_0806c6d2:
	ldr		r2, _0806c6e8
	str		r0, [r2, #0x0]
	ldrb	r0, [r2, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r2, #0x8]
	b		_0806c710

.incbin "base.gba", 0x6C6E2, 0x2

_0806c6e4:	.4byte sub_0806c730
_0806c6e8:	.4byte RunGameLogic_CallBack

_0806c6ec:
	ldr		r0, _0806c71c
	add		r1, r4, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r1, _0806c720
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	ldr		r1, _0806c724
	cmp		r0, #0x0
	beq		_0806c702
	ldr		r1, _0806c728
_0806c702:
	ldr		r0, _0806c72c
	str		r1, [r0, #0x0]
	ldrb	r1, [r0, #0x8]
	add		r1, #0x1
	mov		r2, #0x7
	and		r1, r2
	strb	r1, [r0, #0x8]
_0806c710:
	mov		r0, #0x1
	add		sp, #0xc
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6C71A, 0x2

_0806c71c:	.4byte 0x00006B74
_0806c720:	.4byte 0x00006B7C
_0806c724:	.4byte 0x08069C05
_0806c728:	.4byte 0x0806C5A1
_0806c72c:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_0806c654

	thumb_func_start sub_0806c730
sub_0806c730:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	ldr		r0, _0806c7a0
	ldr		r0, [r0, #0x0]
	bl		sub_08060bf4
	add		r4, r0, #0x0
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	bl		sub_08063bd0
	cmp		r0, #0x0
	beq		_0806c7ac
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c7a4
	mov		r6, #0x0
	str		r6, [sp, #0x0]
	mov		r5, #0xf
	str		r5, [sp, #0x4]
	mov		r4, #0x16
	str		r4, [sp, #0x8]
	mov		r0, #0x6
	mov		r1, #0x8
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c7a8
	str		r6, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r0, #0x6
	mov		r1, #0xa
	bl		sub_08013e9c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x0
	bl		sub_080602f0
	b		_0806c7b2

_0806c7a0:	.4byte 0x0203EBE0
_0806c7a4:	.4byte 0x081115fc
_0806c7a8:	.4byte 0x08111628

_0806c7ac:
	add		r0, r4, #0x0
	bl		sub_08060e4c
_0806c7b2:
	ldr		r0, _0806c7cc
	ldr		r2, _0806c7d0
	str		r0, [r2, #0x0]
	ldrb	r0, [r2, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r2, #0x8]
	mov		r0, #0x1
	add		sp, #0xc
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0806c7cc:	.4byte 0x08069C05
_0806c7d0:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_0806c730

	thumb_func_start sub_0806c7d4
sub_0806c7d4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x14
	ldr		r0, _0806c854
	ldr		r6, [r0, #0x0]
	ldr		r0, _0806c858
	add		r7, r6, r0
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	ldr		r2, _0806c85c
	mov		r1, #0xb4
	lsl		r1, r1, #0x8
	add		r2, r2, r1
	ldr		r0, [r7, #0x14]
	add		r0, #0x14
	mov		r1, #0x1
	lsl		r1, r0
	ldr		r5, [r2, #0x0]
	and		r5, r1
	cmp		r5, #0x0
	beq		_0806c87c
	ldr		r2, _0806c860
	add		r0, r6, r2
	ldrb	r1, [r0, #0x0]
	ldr		r2, _0806c864
	add		r0, r6, r2
	strb	r1, [r0, #0x0]
	ldr		r0, _0806c868
	add		r1, r6, r0
	ldr		r0, [r7, #0x14]
	add		r0, #0x14
	str		r0, [r1, #0x0]
	ldr		r0, _0806c86c
	bl		sub_080602d4
	ldr		r1, _0806c870
	add		r0, r6, r1
	mov		r2, #0x7
	str		r2, [r0, #0x0]
	ldr		r0, _0806c874
	ldr		r1, _0806c878
	str		r0, [r1, #0x0]
	ldrb	r0, [r1, #0x8]
	add		r0, #0x1
	and		r0, r2
	strb	r0, [r1, #0x8]
	b		_0806cac0

.incbin "base.gba", 0x6C852, 0x2

_0806c854:	.4byte 0x0203EBE0
_0806c858:	.4byte 0x00005F14
_0806c85c:	.4byte 0x02033780
_0806c860:	.4byte 0x00005F50
_0806c864:	.4byte 0x00006A44
_0806c868:	.4byte 0x00006A3C
_0806c86c:	.4byte 0x08069C05
_0806c870:	.4byte 0x00006A38
_0806c874:	.4byte 0x08068B81
_0806c878:	.4byte RunGameLogic_CallBack

_0806c87c:
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c908
	str		r5, [sp, #0x0]
	mov		r0, #0xf
	mov		r8, r0
	str		r0, [sp, #0x4]
	mov		r1, #0x18
	mov		r9, r1
	str		r1, [sp, #0x8]
	mov		r0, #0x6
	mov		r1, #0x4
	bl		sub_08013e9c
	ldr		r1, [r7, #0x28]
	ldr		r0, [r7, #0x2c]
	cmp		r1, r0
	bne		_0806c914
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c90c
	str		r5, [sp, #0x0]
	mov		r0, r8
	str		r0, [sp, #0x4]
	mov		r1, r9
	str		r1, [sp, #0x8]
	mov		r0, #0x9
	mov		r1, #0x8
	bl		sub_08013e9c
	ldr		r0, [r7, #0x28]
	add		r1, sp, #0xc
	bl		sub_08059d38
	add		r0, sp, #0xc
	mov		r1, #0x9
	mov		r2, #0xa
	bl		sub_080698d0
	add		r4, r0, #0x0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c910
	str		r5, [sp, #0x0]
	mov		r0, r8
	str		r0, [sp, #0x4]
	mov		r1, r9
	str		r1, [sp, #0x8]
	add		r0, r4, #0x0
	mov		r1, #0xa
	bl		sub_08013e9c
	mov		r5, #0xd
	b		_0806c99e

.incbin "base.gba", 0x6C906, 0x2

_0806c908:	.4byte 0x08111654
_0806c90c:	.4byte 0x0811167c
_0806c910:	.4byte 0x081115d8

_0806c914:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c9e0
	str		r5, [sp, #0x0]
	mov		r0, r8
	str		r0, [sp, #0x4]
	mov		r1, r9
	str		r1, [sp, #0x8]
	mov		r0, #0x9
	mov		r1, #0x7
	bl		sub_08013e9c
	ldr		r0, [r7, #0x28]
	add		r1, sp, #0xc
	bl		sub_08059d38
	add		r0, sp, #0xc
	mov		r1, #0x9
	mov		r2, #0x9
	bl		sub_080698d0
	add		r4, r0, #0x0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c9e4
	str		r5, [sp, #0x0]
	mov		r0, r8
	str		r0, [sp, #0x4]
	mov		r1, r9
	str		r1, [sp, #0x8]
	add		r0, r4, #0x0
	mov		r1, #0x9
	bl		sub_08013e9c
	ldr		r0, [r7, #0x2c]
	add		r1, sp, #0xc
	bl		sub_08059d38
	add		r0, sp, #0xc
	mov		r1, #0x9
	mov		r2, #0xb
	bl		sub_080698d0
	add		r4, r0, #0x0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c9e8
	str		r5, [sp, #0x0]
	mov		r0, r8
	str		r0, [sp, #0x4]
	mov		r1, r9
	str		r1, [sp, #0x8]
	add		r0, r4, #0x0
	mov		r1, #0xb
	bl		sub_08013e9c
	mov		r5, #0xe
_0806c99e:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806c9ec
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	mov		r0, #0xf
	mov		r9, r0
	str		r0, [sp, #0x4]
	mov		r1, #0x18
	mov		r8, r1
	str		r1, [sp, #0x8]
	mov		r0, #0x5
	add		r1, r5, #0x0
	bl		sub_08013e9c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	bl		sub_080602e0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x2
	bne		_0806c9f4
	ldr		r0, _0806c9f0
	b		_0806ca82

_0806c9e0:	.4byte 0x08111694
_0806c9e4:	.4byte 0x08110f64
_0806c9e8:	.4byte 0x081115d8
_0806c9ec:	.4byte 0x08110f30
_0806c9f0:	.4byte 0x08069C05

_0806c9f4:
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806ca60
	str		r4, [sp, #0x0]
	mov		r0, r9
	str		r0, [sp, #0x4]
	mov		r1, r8
	str		r1, [sp, #0x8]
	mov		r0, #0x6
	mov		r1, #0x4
	bl		sub_08013e9c
	mov		r0, #0x8
	bl		sub_0806022c
	cmp		r0, #0x0
	beq		_0806ca9c
	ldr		r2, _0806ca64
	add		r0, r6, r2
	str		r4, [r0, #0x0]
	ldr		r1, _0806ca68
	add		r0, r6, r1
	str		r4, [r0, #0x0]
	ldr		r2, _0806ca6c
	add		r1, r6, r2
	ldr		r0, [r7, #0x14]
	add		r0, #0x14
	str		r0, [r1, #0x0]
	ldr		r1, _0806ca70
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	add		r2, #0x8
	add		r0, r6, r2
	strb	r1, [r0, #0x0]
	bl		sub_08060298
	cmp		r0, #0x0
	bne		_0806ca80
	ldr		r0, _0806ca74
	bl		sub_080602d4
	ldr		r0, _0806ca78
	bl		sub_0806581c
	ldr		r0, _0806ca7c
	b		_0806ca82

.incbin "base.gba", 0x6CA5E, 0x2

_0806ca60:	.4byte 0x08111654
_0806ca64:	.4byte 0x00006B74
_0806ca68:	.4byte 0x00006A38
_0806ca6c:	.4byte 0x00006A3C
_0806ca70:	.4byte 0x00005F50
_0806ca74:	.4byte sub_0806cae4
_0806ca78:	.4byte 0x0806C7D5
_0806ca7c:	.4byte 0x080657B1

_0806ca80:
	ldr		r0, _0806ca94
_0806ca82:
	ldr		r2, _0806ca98
	str		r0, [r2, #0x0]
	ldrb	r0, [r2, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r2, #0x8]
	b		_0806cac0

.incbin "base.gba", 0x6CA92, 0x2

_0806ca94:	.4byte sub_0806cae4
_0806ca98:	.4byte RunGameLogic_CallBack

_0806ca9c:
	ldr		r0, _0806cad0
	add		r1, r6, r0
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r1, _0806cad4
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	ldr		r1, _0806cad8
	cmp		r0, #0x0
	beq		_0806cab2
	ldr		r1, _0806cadc
_0806cab2:
	ldr		r0, _0806cae0
	str		r1, [r0, #0x0]
	ldrb	r1, [r0, #0x8]
	add		r1, #0x1
	mov		r2, #0x7
	and		r1, r2
	strb	r1, [r0, #0x8]
_0806cac0:
	mov		r0, #0x1
	add		sp, #0x14
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0806cad0:	.4byte 0x00006B74
_0806cad4:	.4byte 0x00006B7C
_0806cad8:	.4byte 0x08069C05
_0806cadc:	.4byte 0x0806C7D5
_0806cae0:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_0806c7d4

	thumb_func_start sub_0806cae4
sub_0806cae4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0xc
	ldr		r0, _0806cbdc
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	bl		sub_08060bf4
	mov		r9, r0
	mov		r0, #0xc
	bl		sub_08057878
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	mov		r0, #0xc
	bl		sub_08057850
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	cmp		r6, #0x0
	beq		_0806cb18
	ldr		r0, _0806cbe0
	cmp		r6, r0
	bne		_0806cb1a
_0806cb18:
	mov		r6, #0x0
_0806cb1a:
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	lsl		r0, r6, #0x10
	asr		r3, r0, #0x10
	ldr		r0, _0806cbe4
	add		r0, r8
	ldrb	r1, [r0, #0x0]
	lsl		r5, r4, #0x18
	mov		r2, #0x0
	add		r0, r5, #0x0
	cmp		r5, #0x0
	blt		_0806cb38
	lsr		r2, r0, #0x18
_0806cb38:
	add		r0, r3, #0x0
	bl		sub_08063f1c
	add		r7, r0, #0x0
	cmp		r7, #0x0
	beq		_0806cc08
	ldr		r4, _0806cbe8
	add		r4, r8
	ldrb	r0, [r4, #0x0]
	lsr		r1, r5, #0x18
	add		r2, r6, #0x0
	bl		sub_08059294
	ldr		r2, _0806cbec
	mov		r0, #0xb4
	lsl		r0, r0, #0x8
	add		r2, r2, r0
	ldr		r0, [r4, #0x0]
	mov		r1, #0x1
	lsl		r1, r0
	ldr		r0, [r2, #0x0]
	orr		r0, r1
	str		r0, [r2, #0x0]
	mov		r0, r9
	bl		sub_08060e4c
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806cbf0
	mov		r6, #0x0
	str		r6, [sp, #0x0]
	mov		r5, #0xf
	str		r5, [sp, #0x4]
	mov		r4, #0x14
	str		r4, [sp, #0x8]
	mov		r0, #0x8
	mov		r1, #0x8
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806cbf4
	str		r6, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r4, [sp, #0x8]
	mov		r0, #0x8
	mov		r1, #0xa
	bl		sub_08013e9c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x0
	bl		sub_080602f0
	ldr		r0, _0806cbf8
	bl		sub_080602d4
	ldr		r0, _0806cbfc
	add		r0, r8
	mov		r2, #0x7
	str		r2, [r0, #0x0]
	ldr		r0, _0806cc00
	ldr		r1, _0806cc04
	str		r0, [r1, #0x0]
	ldrb	r0, [r1, #0x8]
	add		r0, #0x1
	and		r0, r2
	strb	r0, [r1, #0x8]
	b		_0806cc6e

.incbin "base.gba", 0x6CBDA, 0x2

_0806cbdc:	.4byte 0x0203EBE0
_0806cbe0:	.4byte 0x0000FFFF
_0806cbe4:	.4byte 0x0000698D
_0806cbe8:	.4byte 0x00006A3C
_0806cbec:	.4byte 0x02033780
_0806cbf0:	.4byte 0x081116b0
_0806cbf4:	.4byte 0x081116f8
_0806cbf8:	.4byte 0x08069C05
_0806cbfc:	.4byte 0x00006A38
_0806cc00:	.4byte 0x08068B81
_0806cc04:	.4byte RunGameLogic_CallBack

_0806cc08:
	mov		r0, r9
	bl		sub_08060e4c
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806cc80
	str		r7, [sp, #0x0]
	mov		r4, #0xf
	str		r4, [sp, #0x4]
	mov		r0, #0x14
	str		r0, [sp, #0x8]
	mov		r0, #0x6
	mov		r1, #0x8
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806cc84
	str		r7, [sp, #0x0]
	str		r4, [sp, #0x4]
	mov		r0, #0x18
	str		r0, [sp, #0x8]
	mov		r0, #0x6
	mov		r1, #0xa
	bl		sub_08013e9c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x0
	bl		sub_080602f0
	ldr		r0, _0806cc88
	ldr		r2, _0806cc8c
	str		r0, [r2, #0x0]
	ldrb	r0, [r2, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r2, #0x8]
_0806cc6e:
	mov		r0, #0x1
	add		sp, #0xc
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6CC7E, 0x2

_0806cc80:	.4byte 0x081116b0
_0806cc84:	.4byte 0x081116d0
_0806cc88:	.4byte 0x08069C05
_0806cc8c:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_0806cae4

	thumb_func_start sub_0806cc90
sub_0806cc90:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r10, r0
	mov		r8, r1
	ldr		r0, _0806cdb0
	ldr		r0, [r0, #0x0]
	mov		r9, r0
	mov		r7, #0x0
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806cdb4
	str		r7, [sp, #0x0]
	mov		r6, #0xf
	str		r6, [sp, #0x4]
	mov		r5, #0x18
	str		r5, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0x8
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806cdb8
	str		r7, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0xa
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806cdbc
	str		r7, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0xd
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806cdc0
	str		r7, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0xf
	bl		sub_08013e9c
	ldr		r4, _0806cdc4
	mov		r0, #0x80
	add		r1, r4, #0x0
	bl		sub_080588d0
	cmp		r0, #0x0
	beq		_0806cd38
	ldrh		r1, [r4, #0xA]
	neg		r0, r1
	orr		r0, r1
	lsr		r7, r0, #0x1f
_0806cd38:
	mov		r0, r10
	cmp		r0, #0x0
	beq		_0806cdd8
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806cdc8
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r0, #0x3
	str		r0, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0x7
	mov		r1, #0x3
	bl		sub_08013e9c
	cmp		r7, #0x0
	bne		_0806cd64
	b		_0806ceec
_0806cd64:
	ldr		r0, _0806cdcc
	add		r0, r9
	ldr		r2, [r0, #0x0]
	add		r2, #0x14
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r0, #0xc
	mov		r1, #0x0
	bl		sub_08058fdc
	ldr		r1, _0806cdd0
	add		r1, r9
	ldrb	r0, [r1, #0x1a]
	lsl		r0, r0, #0x8
	ldrb	r4, [r1, #0x1b]
	orr		r4, r0
	cmp		r4, #0x0
	bne		_0806cd8a
	b		_0806ceec
_0806cd8a:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806cdd4
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0x7
	mov		r1, #0x5
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0xc
	b		_0806cea6

.incbin "base.gba", 0x6CDAE, 0x2

_0806cdb0:	.4byte 0x0203EBE0
_0806cdb4:	.4byte 0x08111718
_0806cdb8:	.4byte 0x08111740
_0806cdbc:	.4byte 0x08111770
_0806cdc0:	.4byte 0x0811179c
_0806cdc4:	.4byte 0x02029400
_0806cdc8:	.4byte 0x081117c4
_0806cdcc:	.4byte 0x00005F28
_0806cdd0:	.4byte 0x00004E4C
_0806cdd4:	.4byte 0x081117e4

_0806cdd8:
	mov		r0, r8
	cmp		r0, #0x0
	beq		_0806ce24
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806ce1c
	mov		r0, r10
	str		r0, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0x3
	bl		sub_08013e9c
	ldr		r0, _0806ce20
	ldrh	r4, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0xf
	mov		r2, #0x3
	bl		sub_080281b0
	add		r1, r0, #0x0
	mov		r2, #0xc8
	lsl		r2, r2, #0x2
	add		r0, r4, #0x0
	mov		r3, #0xf
	bl		sub_0800c674
	b		_0806ce62

.incbin "base.gba", 0x6CE1A, 0x2

_0806ce1c:	.4byte 0x08111804
_0806ce20:	.4byte 0x0203EBE8

_0806ce24:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806cebc
	mov		r0, r8
	str		r0, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0x3
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806cec0
	mov		r0, r8
	str		r0, [sp, #0x0]
	mov		r0, #0x3
	str		r0, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0xa
	mov		r1, #0x3
	bl		sub_08013e9c
_0806ce62:
	cmp		r7, #0x0
	beq		_0806cecc
	mov		r0, #0xc
	mov		r1, #0x0
	mov		r2, #0x14
	bl		sub_08058fdc
	ldr		r1, _0806cec4
	add		r1, r9
	ldrb	r0, [r1, #0x1a]
	lsl		r0, r0, #0x8
	ldrb	r4, [r1, #0x1b]
	orr		r4, r0
	cmp		r4, #0x0
	beq		_0806ceec
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806cec8
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r0, #0x18
	str		r0, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0x5
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0xe
_0806cea6:
	mov		r2, #0x5
	bl		sub_080281b0
	add		r1, r0, #0x0
	mov		r2, #0xc8
	lsl		r2, r2, #0x2
	add		r0, r4, #0x0
	mov		r3, #0xf
	bl		sub_0800c674
	b		_0806ceec

_0806cebc:	.4byte 0x08111834
_0806cec0:	.4byte 0x08111858
_0806cec4:	.4byte 0x00004E4C
_0806cec8:	.4byte 0x08111864

_0806cecc:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806cf08
	str		r7, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r0, #0x18
	str		r0, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0x5
	bl		sub_08013e9c
_0806ceec:
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0806cf08:	.4byte 0x08111890
	thumb_func_end sub_0806cc90

	thumb_func_start sub_0806cf0c
sub_0806cf0c:
	push	{ r4, r5, r6, lr }
	ldr		r0, _0806cf64
	ldr		r6, [r0, #0x0]
	bl		_OnSelectMGBMenu
	bl		_PrepareMGBMenu
	mov		r0, #0x1
	mov		r1, #0x1
	bl		sub_0806cc90
	ldr		r0, _0806cf68
	ldr		r4, _0806cf6c
	str		r0, [r4, #0x0]
	ldrb	r1, [r4, #0x8]
	add		r1, #0x1
	mov		r5, #0x7
	and		r1, r5
	strb	r1, [r4, #0x8]
	bl		sub_0807d7d0
	mov		r0, #0x0
	bl		sub_080602f0
	ldr		r0, _0806cf70
	str		r0, [r4, #0x0]
	ldrb	r0, [r4, #0x8]
	add		r0, #0x1
	and		r0, r5
	strb	r0, [r4, #0x8]
	add		r1, r6, #0x0
	add		r1, #0x49
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	sub		r1, #0xe
	strb	r0, [r1, #0x0]
	sub		r1, #0x2
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	mov		r0, #0x1
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6CF62, 0x2

_0806cf64:	.4byte 0x0203EBE0
_0806cf68:	.4byte _LoadMGBBackGround
_0806cf6c:	.4byte RunGameLogic_CallBack
_0806cf70:	.4byte 0x08069C05
	thumb_func_end sub_0806cf0c

	thumb_func_start sub_0806cf74
sub_0806cf74:
	push	{ r4, r5, r6, lr }
	ldr		r0, _0806cfcc
	ldr		r6, [r0, #0x0]
	bl		_OnSelectMGBMenu
	bl		_PrepareMGBMenu
	mov		r0, #0x0
	mov		r1, #0x1
	bl		sub_0806cc90
	ldr		r0, _0806cfd0
	ldr		r4, _0806cfd4
	str		r0, [r4, #0x0]
	ldrb	r1, [r4, #0x8]
	add		r1, #0x1
	mov		r5, #0x7
	and		r1, r5
	strb	r1, [r4, #0x8]
	bl		sub_0807d7d0
	mov		r0, #0x0
	bl		sub_080602f0
	ldr		r0, _0806cfd8
	str		r0, [r4, #0x0]
	ldrb	r0, [r4, #0x8]
	add		r0, #0x1
	and		r0, r5
	strb	r0, [r4, #0x8]
	add		r1, r6, #0x0
	add		r1, #0x49
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	sub		r1, #0xe
	strb	r0, [r1, #0x0]
	sub		r1, #0x2
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	mov		r0, #0x1
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6CFCA, 0x2

_0806cfcc:	.4byte 0x0203EBE0
_0806cfd0:	.4byte 0x0805A89D
_0806cfd4:	.4byte RunGameLogic_CallBack
_0806cfd8:	.4byte 0x08069C05
	thumb_func_end sub_0806cf74

	thumb_func_start sub_0806cfdc
sub_0806cfdc:
	push	{ r4, r5, r6, lr }
	ldr		r0, _0806d034
	ldr		r6, [r0, #0x0]
	bl		_OnSelectMGBMenu
	bl		_PrepareMGBMenu
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0806cc90
	ldr		r0, _0806d038
	ldr		r4, _0806d03c
	str		r0, [r4, #0x0]
	ldrb	r1, [r4, #0x8]
	add		r1, #0x1
	mov		r5, #0x7
	and		r1, r5
	strb	r1, [r4, #0x8]
	bl		sub_0807d7d0
	mov		r0, #0x0
	bl		sub_080602f0
	ldr		r0, _0806d040
	str		r0, [r4, #0x0]
	ldrb	r0, [r4, #0x8]
	add		r0, #0x1
	and		r0, r5
	strb	r0, [r4, #0x8]
	add		r1, r6, #0x0
	add		r1, #0x49
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	sub		r1, #0xe
	strb	r0, [r1, #0x0]
	sub		r1, #0x2
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	mov		r0, #0x1
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6D032, 0x2

_0806d034:	.4byte 0x0203EBE0
_0806d038:	.4byte 0x0805A89D
_0806d03c:	.4byte RunGameLogic_CallBack
_0806d040:	.4byte 0x08069C05
	thumb_func_end sub_0806cfdc

	thumb_func_start sub_0806d044
sub_0806d044:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	bl		_OnSelectMGBMenu
	bl		_PrepareMGBMenu
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806d148
	mov		r6, #0x0
	str		r6, [sp, #0x0]
	mov		r0, #0x3
	str		r0, [sp, #0x4]
	mov		r5, #0x18
	str		r5, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0x2
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806d14c
	str		r6, [sp, #0x0]
	mov		r4, #0xf
	str		r4, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0xa
	mov		r1, #0x4
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806d150
	str		r6, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0xa
	mov		r1, #0x6
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806d154
	str		r6, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0xa
	mov		r1, #0x8
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806d158
	str		r6, [sp, #0x0]
	str		r4, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r0, #0xa
	mov		r1, #0xa
	bl		sub_08013e9c
	mov		r0, #0x3
	mov		r1, #0xc
	mov		r2, #0x1a
	mov		r3, #0x11
	bl		sub_080600b4
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	ldr		r0, _0806d15c
	ldr		r4, _0806d160
	str		r0, [r4, #0x0]
	ldrb	r1, [r4, #0x8]
	add		r1, #0x1
	mov		r5, #0x7
	and		r1, r5
	strb	r1, [r4, #0x8]
	bl		sub_0807d7d0
	ldr		r0, _0806d164
	ldr		r1, [r0, #0x0]
	add		r2, r1, #0x0
	add		r2, #0x49
	mov		r0, #0x1
	strb	r0, [r2, #0x0]
	sub		r2, #0xe
	strb	r0, [r2, #0x0]
	add		r1, #0x39
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	ldr		r0, _0806d168
	str		r0, [r4, #0x0]
	ldrb	r0, [r4, #0x8]
	add		r0, #0x1
	and		r0, r5
	strb	r0, [r4, #0x8]
	mov		r0, #0x1
	add		sp, #0xc
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0806d148:	.4byte 0x08110c38
_0806d14c:	.4byte 0x08110c4c
_0806d150:	.4byte 0x08110c60
_0806d154:	.4byte 0x08110c68
_0806d158:	.4byte 0x081118b4
_0806d15c:	.4byte 0x0805A89D
_0806d160:	.4byte RunGameLogic_CallBack
_0806d164:	.4byte 0x0203EBE0
_0806d168:	.4byte 0x08069C05
	thumb_func_end sub_0806d044

	thumb_func_start sub_0806d16c
sub_0806d16c:
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	add		r3, r0, #0x0
	add		r3, #0x10
	lsl		r2, r2, #0xc
	orr		r3, r2
	strh	r3, [r1, #0x0]
	add		r1, #0x40
	add		r0, #0x30
	orr		r0, r2
	strh	r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x6D184, 0xB0
	ldr		r0, _0806d254
	ldr		r2, [r0, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x13
	ldrh	r0, [r2, #0x0]
	strh	r0, [r1, #0x0]
	add		r1, #0x50
	ldrh	r0, [r2, #0x1a]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x1c]
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	ldrh	r0, [r2, #0x1e]
	strh	r0, [r1, #0x0]
	bx		lr

_0806d254:	.4byte 0x0203EBE0
	thumb_func_end sub_0806d16c

	thumb_func_start sub_0806d258
sub_0806d258:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0xc
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	add		r4, r2, #0x0
	mov		r8, r3
	ldr		r3, [sp, #0x0+0x24]
	cmp		r4, #0x1
	beq		_0806d30c
	cmp		r4, #0x1
	bgt		_0806d278
	cmp		r4, #0x0
	beq		_0806d27e
	b		_0806d362
_0806d278:
	cmp		r4, #0x2
	beq		_0806d348
	b		_0806d362
_0806d27e:
	ldr		r0, [r5, #0x34]
	mov		r1, #0x2f
	and		r0, r1
	ldr		r6, _0806d2f8
	cmp		r0, #0xf
	bgt		_0806d28c
	ldr		r6, _0806d2fc
_0806d28c:
	add		r0, r5, #0x0
	add		r0, #0x43
	ldrb	r2, [r0, #0x0]
	lsl		r2, r2, #0x4
	add		r2, r2, r3
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r0, r3
	ldrh	r1, [r0, #0x2]
	lsl		r1, r1, #0x10
	ldrh	r0, [r2, #0x0]
	orr		r0, r1
	str		r0, [sp, #0x8]
	str		r4, [sp, #0x0]
	str		r4, [sp, #0x4]
	add		r0, r6, #0x0
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	ldr		r0, _0806d300
	lsl		r1, r7, #0x3
	ldr		r2, _0806d304
	add		r1, r1, r2
	str		r4, [sp, #0x0]
	str		r4, [sp, #0x4]
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	mov		r7, #0x0
	add		r5, sp, #0x8
	mov		r1, r8
	lsl		r0, r1, #0x3
	add		r4, r0, #0x4
	mov		r6, #0x5
_0806d2d6:
	strh	r4, [r5, #0x0]
	mov		r0, #0x1d
	strh		r0, [r5, #0x2]
	str		r7, [sp, #0x0]
	str		r7, [sp, #0x4]
	ldr		r0, _0806d308
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	add		r4, #0x8
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0806d2d6
	b		_0806d362

.incbin "base.gba", 0x6D2F6, 0x2

_0806d2f8:	.4byte 0x080e4978
_0806d2fc:	.4byte 0x080e495c
_0806d300:	.4byte 0x080e4804
_0806d304:	.4byte 0x08112058
_0806d308:	.4byte 0x080e4820

_0806d30c:
	ldr		r0, _0806d340
	add		r1, r5, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x1e
	ble		_0806d31e
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_0806d31e:
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x13
	bgt		_0806d362
	mov		r2, #0x0
	mov		r1, #0xd8
	add		r0, sp, #0x8
	strh	r1, [r0, #0x0]
	add		r1, r0, #0x0
	mov		r0, #0x90
	strh		r0, [r1, #0x2]
	ldr		r0, _0806d344
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
	b		_0806d362

_0806d340:	.4byte 0x00006B68
_0806d344:	.4byte 0x080e478c

_0806d348:
	mov		r2, #0x0
	mov		r1, #0xd8
	add		r0, sp, #0x8
	strh	r1, [r0, #0x0]
	add		r1, r0, #0x0
	mov		r0, #0x90
	strh		r0, [r1, #0x2]
	ldr		r0, _0806d374
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
_0806d362:
	bl		sub_08064b28
	add		sp, #0xc
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6D372, 0x2

_0806d374:	.4byte 0x080e478c
	thumb_func_end sub_0806d258

	thumb_func_start sub_0806d378
sub_0806d378:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	ldr		r4, _0806d478
	ldr		r6, [r4, #0x0]
	ldr		r0, _0806d47c
	mov		r10, r0
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806d480
	mov		r1, #0x0
	mov		r9, r1
	str		r1, [sp, #0x0]
	mov		r0, #0x3
	str		r0, [sp, #0x4]
	mov		r0, #0x18
	mov		r8, r0
	str		r0, [sp, #0x8]
	mov		r0, #0x7
	bl		sub_08013e9c
	ldr		r0, [r4, #0x0]
	add		r0, #0x43
	ldrb	r4, [r0, #0x0]
	mov		r5, #0xf
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	lsl		r4, r4, #0x4
	mov		r0, r10
	add		r0, #0xc
	add		r4, r4, r0
	ldr		r2, [r4, #0x0]
	mov		r1, r9
	str		r1, [sp, #0x0]
	str		r5, [sp, #0x4]
	mov		r0, r8
	str		r0, [sp, #0x8]
	mov		r0, #0xc
	mov		r1, #0x2
	bl		sub_08013e9c
	ldr		r4, _0806d484
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x12
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	add		r6, #0x43
	ldrb	r0, [r6, #0x0]
	mov		r1, #0x12
	bl		sub_0807ddf0
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	lsl		r0, r5, #0x3
	add		r0, r0, r5
	lsl		r5, r0, #0x1
	mov		r7, #0x0
	lsl		r0, r0, #0x5
	mov		r1, r10
	add		r4, r0, r1
_0806d416:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldrh	r1, [r4, #0x0]
	add		r0, r1, #0x0
	sub		r0, #0x18
	cmp		r0, #0x0
	bge		_0806d42e
	add		r0, #0x7
_0806d42e:
	asr		r6, r0, #0x3
	ldrh	r0, [r4, #0x2]
	add		r1, r0, #0x0
	sub		r1, #0x8
	cmp		r1, #0x0
	bge		_0806d43c
	sub		r1, r0, #0x1
_0806d43c:
	asr		r1, r1, #0x3
	ldr		r2, [r4, #0xc]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r0, #0xf
	str		r0, [sp, #0x4]
	mov		r0, #0x14
	str		r0, [sp, #0x8]
	add		r0, r6, #0x0
	bl		sub_08013e9c
	add		r4, #0x10
	add		r5, #0x1
	cmp		r5, #0x2e
	bgt		_0806d460
	add		r7, #0x1
	cmp		r7, #0x11
	ble		_0806d416
_0806d460:
	mov		r0, #0x1
	bl		sub_080281fc
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6D476, 0x2

_0806d478:	.4byte 0x0203EBE0
_0806d47c:	.4byte 0x081118c0
_0806d480:	.4byte 0x08112070
_0806d484:	.4byte 0x08095b7c
	thumb_func_end sub_0806d378

	thumb_func_start sub_0806d488
sub_0806d488:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	mov		r9, r0
	mov		r10, r1
	add		r5, r3, #0x0
	mov		r0, #0x0
	mov		r8, r0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_080281d4
	ldr		r4, _0806d558
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	add		r0, r5, #0x0
	mov		r1, #0x12
	bl		sub_0807d80c
	add		r7, r0, #0x0
	ldr		r0, _0806d55c
	add		r0, r9
	mov		r1, r8
	str		r1, [r0, #0x0]
	mov		r0, r9
	add		r0, #0x43
	strb	r5, [r0, #0x0]
	ldr		r0, _0806d560
	ldr		r0, [r0, #0x0]
	add		r0, #0x43
	ldrb	r4, [r0, #0x0]
	mov		r5, #0xf
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r0, _0806d564
	lsl		r4, r4, #0x4
	add		r0, #0xc
	add		r4, r4, r0
	ldr		r2, [r4, #0x0]
	mov		r0, r8
	str		r0, [sp, #0x0]
	str		r5, [sp, #0x4]
	mov		r0, #0x18
	str		r0, [sp, #0x8]
	mov		r0, #0xc
	mov		r1, #0x2
	bl		sub_08013e9c
	bl		sub_0806d378
	mov		r0, #0x1
	bl		sub_080281fc
_0806d520:
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	mov		r1, r9
	ldr		r0, [r1, #0x34]
	add		r0, #0x1
	str		r0, [r1, #0x34]
	mov		r0, r8
	cmp		r0, #0x0
	bne		_0806d5fc
	mov		r4, r9
	add		r4, #0x43
	ldr		r6, _0806d564
	bl		sub_08026fa0
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	cmp		r5, #0x40
	beq		_0806d584
	cmp		r5, #0x40
	bgt		_0806d568
	cmp		r5, #0x10
	beq		_0806d5a2
	cmp		r5, #0x20
	beq		_0806d598
	b		_0806d5f4

.incbin "base.gba", 0x6D556, 0x2

_0806d558:	.4byte 0x08095bc8
_0806d55c:	.4byte 0x00006B68
_0806d560:	.4byte 0x0203EBE0
_0806d564:	.4byte 0x081118c0

_0806d568:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r5, r0
	beq		_0806d5d6
	cmp		r5, r0
	bgt		_0806d57a
	cmp		r5, #0x80
	beq		_0806d58e
	b		_0806d5f4
_0806d57a:
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r5, r0
	beq		_0806d5b8
	b		_0806d5f4
_0806d584:
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r0, r6
	ldrb	r0, [r0, #0x4]
	b		_0806d5aa
_0806d58e:
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r0, r6
	ldrb	r0, [r0, #0x5]
	b		_0806d5aa
_0806d598:
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r0, r6
	ldrb	r0, [r0, #0x6]
	b		_0806d5aa
_0806d5a2:
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r0, r6
	ldrb	r0, [r0, #0x7]
_0806d5aa:
	cmp		r0, #0xff
	beq		_0806d5f4
	strb	r0, [r4, #0x0]
	mov		r0, #0x8d
	bl		sub_0807073c
	b		_0806d5f4
_0806d5b8:
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r0, r6
	ldrb	r0, [r0, #0x8]
	cmp		r0, #0xff
	beq		_0806d5f4
	strb	r0, [r4, #0x0]
	mov		r0, #0xbe
	bl		sub_0807073c
	mov		r0, #0x2
	cmp		r7, #0x0
	beq		_0806d5f2
	sub		r0, r7, #0x1
	b		_0806d5f2
_0806d5d6:
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r0, r6
	ldrb	r0, [r0, #0x9]
	cmp		r0, #0xff
	beq		_0806d5f4
	strb	r0, [r4, #0x0]
	mov		r0, #0xbe
	bl		sub_0807073c
	mov		r0, #0x0
	cmp		r7, #0x2
	beq		_0806d5f2
	add		r0, r7, #0x1
_0806d5f2:
	add		r7, r0, #0x0
_0806d5f4:
	cmp		r5, #0x0
	beq		_0806d5fc
	bl		sub_0806d378
_0806d5fc:
	ldr		r0, _0806d654
	str		r0, [sp, #0x0]
	mov		r0, r9
	add		r1, r7, #0x0
	mov		r2, r8
	mov		r3, r10
	bl		sub_0806d258
	mov		r0, #0x1
	bl		sub_08026fec
	cmp		r0, #0x0
	beq		_0806d638
	mov		r1, r8
	cmp		r1, #0x0
	bne		_0806d622
	mov		r0, #0x8e
	bl		sub_0807073c
_0806d622:
	mov		r0, r8
	cmp		r0, #0x1
	bne		_0806d62e
	mov		r0, #0x8f
	bl		sub_0807073c
_0806d62e:
	mov		r1, r8
	cmp		r1, #0x1
	bgt		_0806d638
	mov		r0, #0x1
	add		r8, r0
_0806d638:
	mov		r0, #0x2
	bl		sub_08026fec
	cmp		r0, #0x0
	beq		_0806d662
	mov		r0, #0x90
	bl		sub_0807073c
	mov		r1, r8
	cmp		r1, #0x0
	bne		_0806d658
	mov		r0, #0x0
	b		_0806d66c

.incbin "base.gba", 0x6D652, 0x2

_0806d654:	.4byte 0x081118c0

_0806d658:
	mov		r0, r8
	cmp		r0, #0x1
	bne		_0806d662
	mov		r1, #0x0
	mov		r8, r1
_0806d662:
	mov		r0, r8
	cmp		r0, #0x1
	bgt		_0806d66a
	b		_0806d520
_0806d66a:
	mov		r0, #0x1
_0806d66c:
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806d488

	thumb_func_start sub_0806d67c
sub_0806d67c:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	ldr		r5, _0806d6e8
	ldr		r0, [r5, #0x0]
	bl		sub_08060bf4
	add		r1, r0, #0x0
	add		r1, #0x4a
	ldrb	r2, [r1, #0x0]
	sub		r2, #0x10
	lsl		r1, r2, #0x2
	add		r1, r1, r2
	lsl		r1, r1, #0x1
	add		r0, #0x4b
	sub		r1, #0x10
	ldrb	r0, [r0, #0x0]
	add		r1, r1, r0
	ldr		r0, _0806d6ec
	add		r1, r1, r0
	ldrb	r4, [r1, #0x0]
	ldr		r5, [r5, #0x0]
	add		r0, r5, #0x0
	bl		sub_08060bf4
	add		r6, r0, #0x0
	ldr		r2, _0806d6f0
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0xc
	add		r3, r4, #0x0
	bl		sub_0806d488
	cmp		r0, #0x0
	beq		_0806d6ce
	add		r0, r5, #0x0
	add		r0, #0x43
	ldrb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x2d
	strb	r1, [r0, #0x0]
_0806d6ce:
	ldr		r0, _0806d6f4
	ldr		r2, _0806d6f8
	str		r0, [r2, #0x0]
	ldrb	r0, [r2, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r2, #0x8]
	mov		r0, #0x1
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_0806d6e8:	.4byte 0x0203EBE0
_0806d6ec:	.4byte 0x081124b4
_0806d6f0:	.4byte 0x0806D67D
_0806d6f4:	.4byte sub_0805be94
_0806d6f8:	.4byte RunGameLogic_CallBack
	thumb_func_end sub_0806d67c

	thumb_func_start sub_0806d6fc
sub_0806d6fc:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	ldr		r0, _0806d728
	ldr		r5, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_08060bf4
	add		r6, r0, #0x0
	ldr		r2, _0806d72c
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0xc
	add		r3, r4, #0x0
	bl		sub_0806d488
	cmp		r0, #0x0
	bne		_0806d730
	mov		r0, #0x0
	b		_0806d73e

.incbin "base.gba", 0x6D726, 0x2

_0806d728:	.4byte 0x0203EBE0
_0806d72c:	.4byte sub_0806d67c

_0806d730:
	add		r0, r5, #0x0
	add		r0, #0x43
	ldrb	r1, [r0, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x2d
	strb	r1, [r0, #0x0]
	mov		r0, #0x1
_0806d73e:
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6D746, 0x2
	thumb_func_end sub_0806d6fc

	thumb_func_start sub_0806d748
sub_0806d748:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	sub		sp, #0xc
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	mov		r8, r2
	add		r5, r3, #0x0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r0, _0806d78c
	lsl		r4, r4, #0x4
	add		r0, #0xc
	add		r4, r4, r0
	ldr		r2, [r4, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r5, [sp, #0x4]
	mov		r0, #0x18
	str		r0, [sp, #0x8]
	add		r0, r6, #0x0
	mov		r1, r8
	bl		sub_08013e9c
	add		sp, #0xc
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0806d78c:	.4byte 0x081118c0
	thumb_func_end sub_0806d748

	thumb_func_start sub_0806d790
sub_0806d790:
	push	{ r4, r5, lr }
	sub		sp, #0xc
	ldr		r0, _0806d7d0
	ldr		r0, [r0, #0x0]
	add		r0, #0x43
	ldrb	r4, [r0, #0x0]
	mov		r5, #0xf
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r0, _0806d7d4
	lsl		r4, r4, #0x4
	add		r0, #0xc
	add		r4, r4, r0
	ldr		r2, [r4, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r5, [sp, #0x4]
	mov		r0, #0x18
	str		r0, [sp, #0x8]
	mov		r0, #0xc
	mov		r1, #0x2
	bl		sub_08013e9c
	add		sp, #0xc
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6D7CE, 0x2

_0806d7d0:	.4byte 0x0203EBE0
_0806d7d4:	.4byte 0x081118c0
	thumb_func_end sub_0806d790

	thumb_func_start sub_0806d7d8
sub_0806d7d8:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	mov		r1, #0x0
	ldrsb	r1, [r5, r1]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_0806d800
	add		r4, r1, #0x0
	mov		r0, #0x0
	mov		r1, #0xb
	mov		r2, #0x5
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0xf
	bl		sub_0806d16c
	b		_0806d81a
_0806d800:
	mov		r0, #0x0
	mov		r1, #0xb
	mov		r2, #0x5
	bl		sub_080281b0
	mov		r4, #0x0
	strh	r4, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0xb
	mov		r2, #0x6
	bl		sub_080281b0
	strh	r4, [r0, #0x0]
_0806d81a:
	add		r5, #0x1
	mov		r1, #0x0
	ldrsb	r1, [r5, r1]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_0806d840
	add		r4, r1, #0x0
	mov		r0, #0x0
	mov		r1, #0xc
	mov		r2, #0x5
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0xf
	bl		sub_0806d16c
	b		_0806d85a
_0806d840:
	mov		r0, #0x0
	mov		r1, #0xc
	mov		r2, #0x5
	bl		sub_080281b0
	mov		r4, #0x0
	strh	r4, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0xc
	mov		r2, #0x6
	bl		sub_080281b0
	strh	r4, [r0, #0x0]
_0806d85a:
	add		r5, #0x1
	mov		r1, #0x0
	ldrsb	r1, [r5, r1]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_0806d880
	add		r4, r1, #0x0
	mov		r0, #0x0
	mov		r1, #0xd
	mov		r2, #0x5
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0xf
	bl		sub_0806d16c
	b		_0806d89a
_0806d880:
	mov		r0, #0x0
	mov		r1, #0xd
	mov		r2, #0x5
	bl		sub_080281b0
	mov		r4, #0x0
	strh	r4, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0xd
	mov		r2, #0x6
	bl		sub_080281b0
	strh	r4, [r0, #0x0]
_0806d89a:
	add		r5, #0x1
	mov		r1, #0x0
	ldrsb	r1, [r5, r1]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_0806d8c0
	add		r4, r1, #0x0
	mov		r0, #0x0
	mov		r1, #0xf
	mov		r2, #0x5
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0xf
	bl		sub_0806d16c
	b		_0806d8da
_0806d8c0:
	mov		r0, #0x0
	mov		r1, #0xf
	mov		r2, #0x5
	bl		sub_080281b0
	mov		r4, #0x0
	strh	r4, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0xf
	mov		r2, #0x6
	bl		sub_080281b0
	strh	r4, [r0, #0x0]
_0806d8da:
	add		r5, #0x1
	mov		r1, #0x0
	ldrsb	r1, [r5, r1]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_0806d900
	add		r4, r1, #0x0
	mov		r0, #0x0
	mov		r1, #0x10
	mov		r2, #0x5
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0xf
	bl		sub_0806d16c
	b		_0806d91a
_0806d900:
	mov		r0, #0x0
	mov		r1, #0x10
	mov		r2, #0x5
	bl		sub_080281b0
	mov		r4, #0x0
	strh	r4, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0x10
	mov		r2, #0x6
	bl		sub_080281b0
	strh	r4, [r0, #0x0]
_0806d91a:
	add		r5, #0x1
	mov		r1, #0x0
	ldrsb	r1, [r5, r1]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_0806d940
	add		r4, r1, #0x0
	mov		r0, #0x0
	mov		r1, #0x11
	mov		r2, #0x5
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0xf
	bl		sub_0806d16c
	b		_0806d95a
_0806d940:
	mov		r0, #0x0
	mov		r1, #0x11
	mov		r2, #0x5
	bl		sub_080281b0
	mov		r4, #0x0
	strh	r4, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0x11
	mov		r2, #0x6
	bl		sub_080281b0
	strh	r4, [r0, #0x0]
_0806d95a:
	add		r5, #0x1
	mov		r1, #0x0
	ldrsb	r1, [r5, r1]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_0806d980
	add		r4, r1, #0x0
	mov		r0, #0x0
	mov		r1, #0x12
	mov		r2, #0x5
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0xf
	bl		sub_0806d16c
	b		_0806d99a
_0806d980:
	mov		r0, #0x0
	mov		r1, #0x12
	mov		r2, #0x5
	bl		sub_080281b0
	mov		r4, #0x0
	strh	r4, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0x12
	mov		r2, #0x6
	bl		sub_080281b0
	strh	r4, [r0, #0x0]
_0806d99a:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0806d7d8

	thumb_func_start sub_0806d9a0
sub_0806d9a0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0xc
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	ldr		r0, [sp, #0x0+0x28]
	mov		r9, r0
	ldr		r0, [sp, #0x4+0x28]
	ldr		r1, [sp, #0x8+0x28]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	lsl		r1, r1, #0x18
	lsr		r5, r1, #0x18
	cmp		r2, #0x1
	bne		_0806d9c4
	b		_0806db38
_0806d9c4:
	cmp		r2, #0x1
	bgt		_0806d9ce
	cmp		r2, #0x0
	beq		_0806d9d6
	b		_0806db8e
_0806d9ce:
	cmp		r2, #0x2
	bne		_0806d9d4
	b		_0806db74
_0806d9d4:
	b		_0806db8e
_0806d9d6:
	lsl		r1, r0, #0x18
	asr		r1, r1, #0x18
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldrh	r1, [r0, #0x2]
	lsl		r1, r1, #0x10
	ldrh	r0, [r0, #0x0]
	orr		r0, r1
	str		r0, [sp, #0x8]
	cmp		r5, #0x0
	bne		_0806da08
	ldr		r0, [r6, #0x34]
	mov		r1, #0x2f
	and		r0, r1
	ldr		r1, _0806da00
	cmp		r0, #0xf
	bgt		_0806da16
	ldr		r1, _0806da04
	b		_0806da16

_0806da00:	.4byte 0x080e47b0
_0806da04:	.4byte 0x080e4794

_0806da08:
	ldr		r0, [r6, #0x34]
	mov		r1, #0x2f
	and		r0, r1
	ldr		r1, _0806da38
	cmp		r0, #0xf
	bgt		_0806da16
	ldr		r1, _0806da3c
_0806da16:
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x4]
	add		r0, r1, #0x0
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	cmp		r4, #0x1
	beq		_0806da94
	cmp		r4, #0x1
	bgt		_0806da40
	cmp		r4, #0x0
	beq		_0806da46
	b		_0806db8e

.incbin "base.gba", 0x6DA36, 0x2

_0806da38:	.4byte 0x080e47e8
_0806da3c:	.4byte 0x080e47cc

_0806da40:
	cmp		r4, #0x2
	beq		_0806dadc
	b		_0806db8e
_0806da46:
	mov		r4, #0x0
	cmp		r4, r9
	blt		_0806da4e
	b		_0806db8e
_0806da4e:
	mov		r7, #0x0
	add		r5, sp, #0x8
_0806da52:
	add		r0, r6, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, r4
	bne		_0806da66
	ldr		r0, [r6, #0x34]
	mov		r1, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_0806da88
_0806da66:
	mov		r1, #0x64
	cmp		r4, #0x2
	bgt		_0806da6e
	mov		r1, #0x5c
_0806da6e:
	lsl		r0, r4, #0x3
	add		r0, r0, r1
	strh	r0, [r5, #0x0]
	mov		r0, #0x35
	strh		r0, [r5, #0x2]
	str		r7, [sp, #0x0]
	str		r7, [sp, #0x4]
	ldr		r0, _0806da90
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
_0806da88:
	add		r4, #0x1
	cmp		r4, r9
	blt		_0806da52
	b		_0806db8e

_0806da90:	.4byte 0x080e4820

_0806da94:
	mov		r4, #0x0
	cmp		r4, r9
	bge		_0806db8e
	mov		r8, r4
	add		r5, sp, #0x8
	mov		r7, #0x4c
_0806daa0:
	add		r0, r6, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, r4
	bne		_0806dab4
	ldr		r0, [r6, #0x34]
	mov		r1, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_0806dacc
_0806dab4:
	strh	r7, [r5, #0x0]
	mov		r0, #0x35
	strh		r0, [r5, #0x2]
	mov		r0, r8
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x4]
	ldr		r0, _0806dad8
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
_0806dacc:
	add		r7, #0x8
	add		r4, #0x1
	cmp		r4, r9
	blt		_0806daa0
	b		_0806db8e

.incbin "base.gba", 0x6DAD6, 0x2

_0806dad8:	.4byte 0x080e4820

_0806dadc:
	mov		r4, #0x0
	cmp		r4, r9
	bge		_0806db8e
	add		r5, sp, #0x8
_0806dae4:
	add		r0, r6, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, r4
	bne		_0806daf8
	ldr		r0, [r6, #0x34]
	mov		r1, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_0806db2a
_0806daf8:
	mov		r0, #0xf
	and		r0, r4
	lsl		r1, r0, #0x3
	cmp		r0, #0x7
	bgt		_0806db08
	add		r0, r1, #0x0
	add		r0, #0x34
	b		_0806db0c
_0806db08:
	add		r0, r1, #0x0
	add		r0, #0x44
_0806db0c:
	mov		r1, #0x0
	strh	r0, [r5, #0x0]
	mov		r0, #0x3d
	cmp		r4, #0xf
	bgt		_0806db18
	mov		r0, #0x2d
_0806db18:
	strh		r0, [r5, #0x2]
	str		r1, [sp, #0x0]
	str		r1, [sp, #0x4]
	ldr		r0, _0806db34
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
_0806db2a:
	add		r4, #0x1
	cmp		r4, r9
	blt		_0806dae4
	b		_0806db8e

.incbin "base.gba", 0x6DB32, 0x2

_0806db34:	.4byte 0x080e4820

_0806db38:
	ldr		r0, _0806db6c
	add		r1, r6, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x1e
	ble		_0806db4a
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_0806db4a:
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x13
	bgt		_0806db8e
	mov		r2, #0x0
	mov		r1, #0xd8
	add		r0, sp, #0x8
	strh	r1, [r0, #0x0]
	add		r1, r0, #0x0
	mov		r0, #0x90
	strh		r0, [r1, #0x2]
	ldr		r0, _0806db70
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
	b		_0806db8e

_0806db6c:	.4byte 0x00006B68
_0806db70:	.4byte 0x080e478c

_0806db74:
	mov		r2, #0x0
	mov		r1, #0xd8
	add		r0, sp, #0x8
	strh	r1, [r0, #0x0]
	add		r1, r0, #0x0
	mov		r0, #0x90
	strh		r0, [r1, #0x2]
	ldr		r0, _0806dba0
	str		r2, [sp, #0x0]
	str		r2, [sp, #0x4]
	mov		r3, #0x0
	bl		sub_0802951c
_0806db8e:
	bl		sub_08064b28
	add		sp, #0xc
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0806dba0:	.4byte 0x080e478c
	thumb_func_end sub_0806d9a0

	thumb_func_start sub_0806dba4
sub_0806dba4:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	bl		sub_08026fa0
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	add		r1, r0, #0x0
	cmp		r0, #0x20
	beq		_0806dc4a
	cmp		r0, #0x20
	bgt		_0806dbc4
	cmp		r0, #0x10
	beq		_0806dc6e
	b		_0806dc90
_0806dbc4:
	cmp		r1, #0x40
	beq		_0806dbce
	cmp		r1, #0x80
	beq		_0806dc0c
	b		_0806dc90
_0806dbce:
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	mov		r1, #0x0
	ldrsb	r1, [r6, r1]
	ldrb	r0, [r0, #0x8]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r1, r0
	beq		_0806dbee
	mov		r0, #0x8d
	bl		sub_0807073c
_0806dbee:
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldrb	r0, [r0, #0x8]
	strb	r0, [r6, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	mov		r1, #0x4
	ldrsb	r1, [r0, r1]
	b		_0806dc5c
_0806dc0c:
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	mov		r1, #0x0
	ldrsb	r1, [r6, r1]
	ldrb	r0, [r0, #0x9]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r1, r0
	beq		_0806dc2c
	mov		r0, #0x8d
	bl		sub_0807073c
_0806dc2c:
	mov		r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldrb	r0, [r0, #0x9]
	strb	r0, [r6, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	mov		r1, #0x5
	ldrsb	r1, [r0, r1]
	b		_0806dc5c
_0806dc4a:
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r5
	ldrb	r1, [r1, #0x6]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
_0806dc5c:
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_0806dc90
	strb	r1, [r4, #0x0]
	mov		r0, #0x8d
	bl		sub_0807073c
	b		_0806dc90
_0806dc6e:
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r5
	ldrb	r1, [r1, #0x7]
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_0806dc90
	strb	r1, [r4, #0x0]
	mov		r0, #0x8d
	bl		sub_0807073c
_0806dc90:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6DC96, 0x2
	thumb_func_end sub_0806dba4

	thumb_func_start sub_0806dc98
sub_0806dc98:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	mov		r9, r0
	str		r1, [sp, #0x10]
	add		r5, r2, #0x0
	ldr		r0, [sp, #0x8+0x38]
	mov		r8, r0
	mov		r1, #0x0
	mov		r10, r1
	mov		r2, r9
	cmp		r2, #0x2
	bne		_0806dcba
	mov		r1, #0x1
_0806dcba:
	add		r0, sp, #0xc
	strb	r1, [r0, #0x0]
	mov		r3, sp
	add		r3, #0xd
	mov		r4, #0x3
	strb	r4, [r3, #0x0]
	mov		r2, sp
	add		r2, #0xe
	mov		r6, r10
	strb	r6, [r2, #0x0]
	ldr		r1, [sp, #0x10]
	ldr		r6, _0806dd30
	add		r0, r1, r6
	mov		r1, r10
	str		r1, [r0, #0x0]
	ldr		r0, [sp, #0x10]
	add		r0, #0x44
	strb	r1, [r0, #0x0]
	ldr		r1, [sp, #0x10]
	add		r1, #0x45
	ldr		r0, [sp, #0x0+0x38]
	strb	r0, [r1, #0x0]
	add		r6, r1, #0x0
	ldr		r0, [sp, #0x4+0x38]
	cmp		r0, #0x0
	beq		_0806dcf6
	mov		r0, #0x1
	mov		r2, sp
	strb	r0, [r2, #0xE]
	strb	r4, [r2, #0xD]
_0806dcf6:
	add		r0, r5, #0x0
	ldr		r4, [sp, #0xc+0x38]
	bl		sub_0807d7e0
	mov		r0, #0x1
	bl		sub_080281fc
_0806dd04:
	mov		r0, #0x0
	str		r0, [sp, #0x14]
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	ldr		r1, [sp, #0x10]
	ldr		r0, [r1, #0x34]
	add		r0, #0x1
	str		r0, [r1, #0x34]
	mov		r2, r9
	cmp		r2, #0x2
	beq		_0806dd40
	mov		r4, sp
	mov		r0, #0xe
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x0
	bne		_0806dd38
	ldr		r3, _0806dd34
	add		r0, sp, #0xc
	b		_0806dd5a

.incbin "base.gba", 0x6DD2E, 0x2

_0806dd30:	.4byte 0x00006B68
_0806dd34:	.4byte 0x08112098

_0806dd38:
	ldr		r3, _0806dd3c
	b		_0806dd56

_0806dd3c:	.4byte 0x08112110

_0806dd40:
	mov		r1, sp
	mov		r0, #0xe
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x0
	bne		_0806dd54
	ldr		r3, _0806dd50
	add		r0, sp, #0xc
	b		_0806dd5a

_0806dd50:	.4byte 0x08112140

_0806dd54:
	ldr		r3, _0806dd80
_0806dd56:
	mov		r0, sp
	add		r0, #0xd
_0806dd5a:
	mov		r2, r10
	cmp		r2, #0x0
	bne		_0806dd6a
	add		r1, r3, #0x0
	mov		r2, sp
	add		r2, #0xe
	bl		sub_0806dba4
_0806dd6a:
	mov		r4, r9
	cmp		r4, #0x2
	beq		_0806dd90
	mov		r1, sp
	mov		r0, #0xe
	ldrsb	r0, [r1, r0]
	cmp		r0, #0x0
	bne		_0806dd88
	ldr		r3, _0806dd84
	add		r0, sp, #0xc
	b		_0806ddaa

_0806dd80:	.4byte 0x08112200
_0806dd84:	.4byte 0x08112098

_0806dd88:
	ldr		r3, _0806dd8c
	b		_0806dda6

_0806dd8c:	.4byte 0x08112110

_0806dd90:
	mov		r2, sp
	mov		r0, #0xe
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x0
	bne		_0806dda4
	ldr		r3, _0806dda0
	add		r0, sp, #0xc
	b		_0806ddaa

_0806dda0:	.4byte 0x08112140

_0806dda4:
	ldr		r3, _0806de28
_0806dda6:
	mov		r0, sp
	add		r0, #0xd
_0806ddaa:
	mov		r4, r8
	str		r4, [sp, #0x0]
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	str		r0, [sp, #0x4]
	mov		r1, sp
	mov		r0, #0xe
	ldrsb	r0, [r1, r0]
	str		r0, [sp, #0x8]
	mov		r0, r9
	ldr		r1, [sp, #0x10]
	mov		r2, r10
	bl		sub_0806d9a0
	mov		r0, #0x1
	bl		sub_08026fec
	cmp		r0, #0x0
	bne		_0806ddd4
	b		_0806dff2
_0806ddd4:
	mov		r2, r10
	cmp		r2, #0x0
	beq		_0806dddc
	b		_0806dfd8
_0806dddc:
	mov		r4, sp
	mov		r0, #0xe
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x0
	bne		_0806de2c
	mov		r0, #0xbf
	bl		sub_0807073c
	add		r4, r6, #0x0
	ldrb	r0, [r6, #0x0]
	mov		r3, r8
	sub		r3, #0x1
	cmp		r0, r3
	bge		_0806de12
	add		r2, r3, #0x0
	cmp		r3, r0
	ble		_0806de12
	mov		r0, r8
	sub		r0, #0x2
	add		r1, r0, r5
_0806de04:
	ldrb	r0, [r1, #0x0]
	strb	r0, [r1, #0x1]
	sub		r1, #0x1
	sub		r2, #0x1
	ldrb	r0, [r4, #0x0]
	cmp		r2, r0
	bgt		_0806de04
_0806de12:
	ldrb	r0, [r6, #0x0]
	add		r0, r5, r0
	add		r1, sp, #0xc
	ldrb	r1, [r1, #0x0]
	strb	r1, [r0, #0x0]
	ldrb	r0, [r6, #0x0]
	cmp		r0, r3
	blt		_0806de86
	mov		r1, #0x1
	str		r1, [sp, #0x14]
	b		_0806dfe8

_0806de28:	.4byte 0x08112200

_0806de2c:
	mov		r2, sp
	mov		r0, #0xd
	ldrsb	r0, [r2, r0]
	cmp		r0, #0x1
	beq		_0806de60
	cmp		r0, #0x1
	bgt		_0806de40
	cmp		r0, #0x0
	beq		_0806de4a
	b		_0806dfe8
_0806de40:
	cmp		r0, #0x2
	beq		_0806de8c
	cmp		r0, #0x3
	beq		_0806def4
	b		_0806dfe8
_0806de4a:
	ldrb	r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_0806de52
	b		_0806dfd0
_0806de52:
	mov		r0, #0xc1
	bl		sub_0807073c
	ldrb	r0, [r6, #0x0]
	sub		r0, #0x1
	strb	r0, [r6, #0x0]
	b		_0806dfe8
_0806de60:
	ldrb	r1, [r6, #0x0]
	mov		r0, r8
	sub		r0, #0x1
	cmp		r1, r0
	blt		_0806de6c
	b		_0806dfd0
_0806de6c:
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mov		r4, #0x1
	neg		r4, r4
	cmp		r0, r4
	bne		_0806de7e
	b		_0806dfd0
_0806de7e:
	mov		r0, #0xc1
	bl		sub_0807073c
	ldrb	r0, [r6, #0x0]
_0806de86:
	add		r0, #0x1
	strb	r0, [r6, #0x0]
	b		_0806dfe8
_0806de8c:
	ldrb	r2, [r6, #0x0]
	cmp		r2, r8
	bge		_0806ded8
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, r1
	bne		_0806deb4
_0806dea2:
	add		r2, #0x1
	cmp		r2, r8
	bge		_0806ded8
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, r1
	beq		_0806dea2
_0806deb4:
	cmp		r2, r8
	bge		_0806ded8
	ldrb	r2, [r6, #0x0]
	mov		r3, r8
	sub		r3, #0x1
	cmp		r2, r3
	bge		_0806dece
_0806dec2:
	add		r0, r5, r2
	ldrb	r1, [r0, #0x1]
	strb	r1, [r0, #0x0]
	add		r2, #0x1
	cmp		r2, r3
	blt		_0806dec2
_0806dece:
	add		r0, r5, r2
	mov		r2, #0x1
	neg		r2, r2
	strb	r2, [r0, #0x0]
	b		_0806deec
_0806ded8:
	ldrb	r0, [r6, #0x0]
	cmp		r0, #0x0
	beq		_0806dfd0
	sub		r0, #0x1
	strb	r0, [r6, #0x0]
	ldrb	r0, [r6, #0x0]
	add		r0, r5, r0
	mov		r4, #0x1
	neg		r4, r4
	strb	r4, [r0, #0x0]
_0806deec:
	mov		r0, #0xc0
	bl		sub_0807073c
	b		_0806dfe8
_0806def4:
	mov		r4, #0x1
	mov		r0, r9
	cmp		r0, #0x1
	beq		_0806df2e
	cmp		r0, #0x1
	bgt		_0806df06
	cmp		r0, #0x0
	beq		_0806df0e
	b		_0806dfc0
_0806df06:
	mov		r1, r9
	cmp		r1, #0x2
	beq		_0806df8a
	b		_0806dfc0
_0806df0e:
	mov		r2, #0x0
	cmp		r2, r8
	bge		_0806dfc0
	mov		r1, #0x1
	neg		r1, r1
_0806df18:
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, r1
	bne		_0806df26
	mov		r4, #0x0
_0806df26:
	add		r2, #0x1
	cmp		r2, r8
	blt		_0806df18
	b		_0806dfc0
_0806df2e:
	mov		r4, #0x0
	mov		r2, r8
	sub		r2, #0x1
	cmp		r2, #0x0
	blt		_0806dfc0
	add		r0, r5, r2
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	add		r3, r0, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_0806df5e
	add		r7, r0, #0x0
	add		r1, r3, #0x0
_0806df4c:
	sub		r1, #0x1
	sub		r2, #0x1
	cmp		r2, #0x0
	blt		_0806dfc0
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	add		r3, r1, #0x0
	cmp		r0, r7
	beq		_0806df4c
_0806df5e:
	cmp		r2, #0x0
	blt		_0806dfc0
	mov		r0, #0x0
	ldrsb	r0, [r3, r0]
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, r1
	beq		_0806df80
_0806df6e:
	sub		r2, #0x1
	cmp		r2, #0x0
	blt		_0806df80
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, r1
	bne		_0806df6e
_0806df80:
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	bne		_0806dfc0
	b		_0806dfc4
_0806df8a:
	mov		r2, #0x0
	cmp		r2, r8
	bge		_0806dfa0
_0806df90:
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xf
	bls		_0806df9a
	mov		r4, #0x0
_0806df9a:
	add		r2, #0x1
	cmp		r2, r8
	blt		_0806df90
_0806dfa0:
	cmp		r4, #0x0
	beq		_0806dfd0
	mov		r4, #0x0
	mov		r2, #0x0
	cmp		r4, r8
	bge		_0806dfc0
_0806dfac:
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	beq		_0806dfba
	mov		r4, #0x1
_0806dfba:
	add		r2, #0x1
	cmp		r2, r8
	blt		_0806dfac
_0806dfc0:
	cmp		r4, #0x0
	beq		_0806dfd0
_0806dfc4:
	mov		r0, #0x8e
	bl		sub_0807073c
	mov		r1, #0x1
	add		r10, r1
	b		_0806dfe8
_0806dfd0:
	mov		r0, #0x91
	bl		sub_0807073c
	b		_0806dfe8
_0806dfd8:
	mov		r2, r10
	cmp		r2, #0x1
	bne		_0806dfe8
	mov		r0, #0x8f
	bl		sub_0807073c
	mov		r4, #0x2
	mov		r10, r4
_0806dfe8:
	add		r0, r5, #0x0
	ldr		r1, [sp, #0xc+0x38]
	bl		sub_0807d7d4
	b		_0806e0a8
_0806dff2:
	mov		r0, #0x2
	bl		sub_08026fec
	cmp		r0, #0x0
	beq		_0806e0c2
	mov		r2, r10
	cmp		r2, #0x0
	bne		_0806e0b0
	mov		r3, #0x0
	mov		r4, sp
	mov		r0, #0xe
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x0
	bne		_0806e036
	mov		r1, #0x0
	cmp		r10, r8
	bge		_0806e02c
	mov		r2, #0x1
	neg		r2, r2
_0806e018:
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, r2
	beq		_0806e026
	mov		r3, #0x1
_0806e026:
	add		r1, #0x1
	cmp		r1, r8
	blt		_0806e018
_0806e02c:
	cmp		r3, #0x0
	bne		_0806e040
	ldrb	r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_0806e040
_0806e036:
	mov		r0, #0x90
	bl		sub_0807073c
	mov		r0, #0x0
	b		_0806e0ea
_0806e040:
	mov		r0, #0xc0
	bl		sub_0807073c
	add		r3, r6, #0x0
	ldrb	r1, [r3, #0x0]
	add		r2, r5, r1
	mov		r0, #0x0
	ldrsb	r0, [r2, r0]
	mov		r4, #0x1
	neg		r4, r4
	cmp		r0, r4
	beq		_0806e072
	add		r1, #0x1
	mov		r0, r8
	add		r3, r0, r5
	cmp		r1, r8
	bge		_0806e098
	sub		r1, r0, r1
_0806e064:
	ldrb	r0, [r2, #0x1]
	strb	r0, [r2, #0x0]
	add		r2, #0x1
	sub		r1, #0x1
	cmp		r1, #0x0
	bne		_0806e064
	b		_0806e098
_0806e072:
	cmp		r1, #0x0
	beq		_0806e07a
	sub		r0, r1, #0x1
	strb	r0, [r3, #0x0]
_0806e07a:
	ldrb	r0, [r6, #0x0]
	add		r1, r0, #0x1
	mov		r2, r8
	add		r3, r2, r5
	cmp		r1, r8
	bge		_0806e098
	add		r2, r0, r5
	mov		r4, r8
	sub		r1, r4, r1
_0806e08c:
	ldrb	r0, [r2, #0x1]
	strb	r0, [r2, #0x0]
	add		r2, #0x1
	sub		r1, #0x1
	cmp		r1, #0x0
	bne		_0806e08c
_0806e098:
	sub		r0, r3, #0x1
	mov		r1, #0x1
	neg		r1, r1
	strb	r1, [r0, #0x0]
	add		r0, r5, #0x0
	ldr		r2, [sp, #0xc+0x38]
	bl		sub_0807d7d8
_0806e0a8:
	mov		r0, #0x1
	bl		sub_080281fc
	b		_0806e0d0
_0806e0b0:
	mov		r4, r10
	cmp		r4, #0x1
	bne		_0806e0d0
	mov		r0, #0x90
	bl		sub_0807073c
	mov		r0, #0x0
	mov		r10, r0
	b		_0806e0d0
_0806e0c2:
	mov		r0, #0x8
	bl		sub_08026fec
	cmp		r0, #0x0
	beq		_0806e0d0
	mov		r1, #0x1
	str		r1, [sp, #0x14]
_0806e0d0:
	ldr		r2, [sp, #0x14]
	cmp		r2, #0x0
	beq		_0806e0e0
	mov		r0, #0x1
	mov		r4, sp
	strb	r0, [r4, #0xE]
	mov		r0, #0x3
	strb	r0, [r4, #0xD]
_0806e0e0:
	mov		r0, r10
	cmp		r0, #0x1
	bgt		_0806e0e8
	b		_0806dd04
_0806e0e8:
	mov		r0, #0x1
_0806e0ea:
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6E0FA, 0x2
	thumb_func_end sub_0806dc98

	thumb_func_start sub_0806e0fc
sub_0806e0fc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r7, sp, #0x10
	mov		r10, sp
	ldr		r0, _0806e138
	ldr		r6, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_08060bf4
	mov		r8, r0
	sub		sp, #0x8
	add		r5, sp, #0x10
	mov		r0, #0x0
	mov		r9, r0
	mov		r2, #0x0
	mov		r0, r8
	add		r0, #0x4a
	str		r0, [r7, #0x0]
	add		r3, r0, #0x0
_0806e12a:
	add		r0, r3, r2
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0xe
	ble		_0806e13c
	sub		r1, #0x10
	b		_0806e140

.incbin "base.gba", 0x6E136, 0x2

_0806e138:	.4byte 0x0203EBE0

_0806e13c:
	mov		r1, #0x1
	neg		r1, r1
_0806e140:
	add		r0, r5, r2
	strb	r1, [r0, #0x0]
	add		r2, #0x1
	cmp		r2, #0x6
	ble		_0806e12a
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_080281d4
	ldr		r4, _0806e200
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r4, _0806e204
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	add		r0, r5, #0x0
	bl		sub_0806d7d8
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	add		r3, r5, #0x0
	mov		r1, #0x6
	mov		r2, #0x6
	ldrsb	r2, [r5, r2]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	bne		_0806e1b6
_0806e1a4:
	sub		r1, #0x1
	cmp		r1, #0x0
	blt		_0806e1b6
	add		r0, r3, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, r2
	beq		_0806e1a4
_0806e1b6:
	add		r1, #0x1
	cmp		r1, #0x6
	ble		_0806e1c2
	mov		r1, #0x6
	mov		r0, #0x1
	mov		r9, r0
_0806e1c2:
	ldr		r3, _0806e208
	str		r1, [sp, #0x0]
	mov		r0, r9
	str		r0, [sp, #0x4]
	mov		r0, #0x7
	str		r0, [sp, #0x8]
	ldr		r0, _0806e20c
	str		r0, [sp, #0xC]
	mov		r0, #0x0
	add		r1, r6, #0x0
	add		r2, r5, #0x0
	bl		sub_0806dc98
	cmp		r0, #0x0
	beq		_0806e210
	mov		r2, #0x0
	mov		r4, r8
	add		r4, #0x51
	ldr		r3, [r7, #0x0]
_0806e1e8:
	add		r1, r3, r2
	add		r0, r5, r2
	ldrb	r0, [r0, #0x0]
	add		r0, #0x10
	strb	r0, [r1, #0x0]
	add		r2, #0x1
	cmp		r2, #0x6
	ble		_0806e1e8
	mov		r0, #0x50
	strb	r0, [r4, #0x0]
	mov		r0, #0x1
	b		_0806e212

_0806e200:	.4byte 0x08095d28
_0806e204:	.4byte 0x08095ee4
_0806e208:	.4byte 0x0806e225
_0806e20c:	.4byte 0x0806D7D9

_0806e210:
	mov		r0, #0x0
_0806e212:
	mov		sp, r10
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	push	{ lr }
	bl		sub_0806e0fc
	mov		r0, #0x1
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806e0fc

	thumb_func_start sub_0806e230
sub_0806e230:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x24
	add		r7, sp, #0x10
	mov		r1, sp
	add		r0, r1, #0x0
	str		r0, [r7, #0x8]
	ldr		r0, _0806e26c
	ldr		r0, [r0, #0x0]
	str		r0, [r7, #0x0]
	bl		sub_08060bf4
	sub		sp, #0xc
	add		r4, sp, #0x10
	mov		r8, r4
	mov		r1, #0x0
	str		r1, [r7, #0x4]
	mov		r2, #0x0
	add		r0, #0x3e
	str		r0, [r7, #0xC]
	add		r3, r0, #0x0
_0806e260:
	add		r0, r3, r2
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0xe
	ble		_0806e270
	sub		r1, #0x10
	b		_0806e274

_0806e26c:	.4byte 0x0203EBE0

_0806e270:
	mov		r1, #0x1
	neg		r1, r1
_0806e274:
	mov		r4, r8
	add		r0, r4, r2
	strb	r1, [r0, #0x0]
	add		r2, #0x1
	cmp		r2, #0xb
	ble		_0806e260
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_080281d4
	ldr		r4, _0806e30c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806e310
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r0, #0x3
	str		r0, [sp, #0x4]
	mov		r0, #0xa
	str		r0, [sp, #0x8]
	mov		r0, #0x4
	mov		r1, #0x2
	bl		sub_08013e9c
	ldr		r4, _0806e314
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	mov		r5, r8
	mov		r0, #0x1
	neg		r0, r0
	mov		r10, r0
	mov		r6, #0x9
	mov		r1, #0x0
	mov		r9, r1
	mov		r4, #0xb
	str		r4, [r7, #0x10]
_0806e2ec:
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	cmp		r0, r10
	beq		_0806e318
	add		r4, r0, #0x0
	mov		r0, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x5
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0xf
	bl		sub_0806d16c
	b		_0806e334

_0806e30c:	.4byte 0x08095d28
_0806e310:	.4byte 0x08112230
_0806e314:	.4byte 0x08095ee4

_0806e318:
	mov		r0, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x5
	bl		sub_080281b0
	mov		r1, r9
	strh	r1, [r0, #0x0]
	mov		r0, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x6
	bl		sub_080281b0
	mov		r4, r9
	strh	r4, [r0, #0x0]
_0806e334:
	add		r5, #0x1
	add		r6, #0x1
	ldr		r0, [r7, #0x10]
	sub		r0, #0x1
	str		r0, [r7, #0x10]
	cmp		r0, #0x0
	bge		_0806e2ec
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	mov		r3, r8
	mov		r1, #0xb
	mov		r2, #0xb
	ldrsb	r2, [r3, r2]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	bne		_0806e370
_0806e35e:
	sub		r1, #0x1
	cmp		r1, #0x0
	blt		_0806e370
	add		r0, r3, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, r2
	beq		_0806e35e
_0806e370:
	add		r1, #0x1
	cmp		r1, #0xb
	ble		_0806e378
	mov		r1, #0xb
_0806e378:
	cmp		r1, #0x0
	ble		_0806e380
	mov		r4, #0x1
	str		r4, [r7, #0x4]
_0806e380:
	ldr		r3, _0806e3b8
	str		r1, [sp, #0x0]
	ldr		r0, [r7, #0x4]
	str		r0, [sp, #0x4]
	mov		r0, #0xc
	str		r0, [sp, #0x8]
	ldr		r0, _0806e3bc
	str		r0, [sp, #0xC]
	mov		r0, #0x1
	ldr		r1, [r7, #0x0]
	mov		r2, r8
	bl		sub_0806dc98
	cmp		r0, #0x0
	beq		_0806e3c0
	mov		r2, #0x0
	ldr		r3, [r7, #0xC]
_0806e3a2:
	add		r1, r3, r2
	mov		r4, r8
	add		r0, r4, r2
	ldrb	r0, [r0, #0x0]
	add		r0, #0x10
	strb	r0, [r1, #0x0]
	add		r2, #0x1
	cmp		r2, #0xb
	ble		_0806e3a2
	mov		r0, #0x1
	b		_0806e3c2

_0806e3b8:	.4byte 0x0806e3d9
_0806e3bc:	.4byte sub_0806e3e4

_0806e3c0:
	mov		r0, #0x0
_0806e3c2:
	ldr		r1, [r7, #0x8]
	mov		sp, r1
	add		sp, #0x24
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6E3D6, 0x2
	push	{ lr }
	bl		sub_0806e230
	mov		r0, #0x1
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806e230

	thumb_func_start sub_0806e3e4
sub_0806e3e4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	mov		r0, #0x1
	neg		r0, r0
	mov		r9, r0
	mov		r6, #0x9
	mov		r1, #0x0
	mov		r8, r1
	mov		r7, #0xb
_0806e3fc:
	mov		r0, #0x0
	ldrsb	r0, [r5, r0]
	cmp		r0, r9
	beq		_0806e41c
	add		r4, r0, #0x0
	mov		r0, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x5
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	mov		r2, #0xf
	bl		sub_0806d16c
	b		_0806e438
_0806e41c:
	mov		r0, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x5
	bl		sub_080281b0
	mov		r1, r8
	strh	r1, [r0, #0x0]
	mov		r0, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x6
	bl		sub_080281b0
	mov		r1, r8
	strh	r1, [r0, #0x0]
_0806e438:
	add		r5, #0x1
	add		r6, #0x1
	sub		r7, #0x1
	cmp		r7, #0x0
	bge		_0806e3fc
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6E44E, 0x2
	thumb_func_end sub_0806e3e4

	thumb_func_start sub_0806e450
sub_0806e450:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x10
	add		r6, r0, #0x0
	ldr		r0, _0806e4fc
	ldr		r5, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_08060bf4
	add		r7, r0, #0x0
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_080281d4
	ldr		r4, _0806e500
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x5
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	ldr		r4, _0806e504
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806e508
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	mov		r0, #0x3
	str		r0, [sp, #0x4]
	mov		r0, #0x14
	str		r0, [sp, #0x8]
	mov		r0, #0x5
	mov		r1, #0x0
	bl		sub_08013e9c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	ldr		r0, _0806e50c
	str		r0, [sp, #0x0]
	str		r4, [sp, #0x4]
	mov		r0, #0x1
	str		r0, [sp, #0x8]
	str		r4, [sp, #0xC]
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x10
	mov		r3, #0x7
	bl		sub_08064ea4
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_0806e4f2
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_08060d10
_0806e4f2:
	add		r0, r4, #0x0
	add		sp, #0x10
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0806e4fc:	.4byte 0x0203EBE0
_0806e500:	.4byte 0x08094a9c
_0806e504:	.4byte 0x08096048
_0806e508:	.4byte 0x08112244
_0806e50c:	.4byte sub_0806e510
	thumb_func_end sub_0806e450

	thumb_func_start sub_0806e510
sub_0806e510:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x1c
	add		r0, sp, #0xc
	bl		sub_0806e450
	cmp		r0, #0x0
	beq		_0806e5da
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806e5a4
	mov		r7, #0x0
	str		r7, [sp, #0x0]
	mov		r5, #0xf
	str		r5, [sp, #0x4]
	mov		r6, #0x14
	str		r6, [sp, #0x8]
	mov		r0, #0x8
	mov		r1, #0x8
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806e5a8
	str		r7, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r0, #0x8
	mov		r1, #0xa
	bl		sub_08013e9c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	bl		sub_0805c408
	add		r4, r0, #0x0
	mov		r0, #0x0
	bl		sub_080281d4
	cmp		r4, #0x0
	beq		_0806e5b0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806e5ac
	str		r7, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r0, #0x9
	mov		r1, #0x9
	bl		sub_08013e9c
	b		_0806e5ce

.incbin "base.gba", 0x6E5A2, 0x2

_0806e5a4:	.4byte 0x0811226c
_0806e5a8:	.4byte 0x0811228c
_0806e5ac:	.4byte 0x081122b0

_0806e5b0:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806e5e8
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	mov		r0, #0x18
	str		r0, [sp, #0x8]
	mov		r0, #0x7
	mov		r1, #0x9
	bl		sub_08013e9c
_0806e5ce:
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x0
	bl		sub_080602f0
_0806e5da:
	bl		sub_08060434
	mov		r0, #0x1
	add		sp, #0x1c
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0806e5e8:	.4byte 0x081122cc
	thumb_func_end sub_0806e510

	thumb_func_start sub_0806e5ec
sub_0806e5ec:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x10
	add		r6, r0, #0x0
	ldr		r0, _0806e698
	ldr		r5, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_08060bf4
	add		r7, r0, #0x0
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_080281d4
	ldr		r4, _0806e69c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x5
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	ldr		r4, _0806e6a0
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806e6a4
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	mov		r0, #0x3
	str		r0, [sp, #0x4]
	mov		r0, #0x14
	str		r0, [sp, #0x8]
	mov		r0, #0x5
	mov		r1, #0x0
	bl		sub_08013e9c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	ldr		r0, _0806e6a8
	str		r0, [sp, #0x0]
	str		r4, [sp, #0x4]
	mov		r0, #0x1
	str		r0, [sp, #0x8]
	str		r4, [sp, #0xC]
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r2, #0x80
	mov		r3, #0x4
	bl		sub_08064ea4
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_0806e68e
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_08060d74
_0806e68e:
	add		r0, r4, #0x0
	add		sp, #0x10
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0806e698:	.4byte 0x0203EBE0
_0806e69c:	.4byte 0x08094a9c
_0806e6a0:	.4byte 0x08096048
_0806e6a4:	.4byte 0x081122f0
_0806e6a8:	.4byte sub_0806e6ac
	thumb_func_end sub_0806e5ec

	thumb_func_start sub_0806e6ac
sub_0806e6ac:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x8c
	add		r0, sp, #0xc
	bl		sub_0806e5ec
	cmp		r0, #0x0
	beq		_0806e776
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806e740
	mov		r7, #0x0
	str		r7, [sp, #0x0]
	mov		r5, #0xf
	str		r5, [sp, #0x4]
	mov		r6, #0x14
	str		r6, [sp, #0x8]
	mov		r0, #0x7
	mov		r1, #0x8
	bl		sub_08013e9c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806e744
	str		r7, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r0, #0x7
	mov		r1, #0xa
	bl		sub_08013e9c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	bl		sub_0805c408
	add		r4, r0, #0x0
	mov		r0, #0x0
	bl		sub_080281d4
	cmp		r4, #0x0
	beq		_0806e74c
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806e748
	str		r7, [sp, #0x0]
	str		r5, [sp, #0x4]
	str		r6, [sp, #0x8]
	mov		r0, #0x7
	mov		r1, #0x9
	bl		sub_08013e9c
	b		_0806e76a

.incbin "base.gba", 0x6E73E, 0x2

_0806e740:	.4byte 0x0811231c
_0806e744:	.4byte 0x08112340
_0806e748:	.4byte 0x08112364

_0806e74c:
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r2, _0806e784
	str		r4, [sp, #0x0]
	str		r5, [sp, #0x4]
	mov		r0, #0x18
	str		r0, [sp, #0x8]
	mov		r0, #0x6
	mov		r1, #0x9
	bl		sub_08013e9c
_0806e76a:
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x0
	bl		sub_080602f0
_0806e776:
	bl		sub_08060434
	mov		r0, #0x1
	add		sp, #0x8c
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0806e784:	.4byte 0x08112384
	thumb_func_end sub_0806e6ac

	thumb_func_start sub_0806e788
sub_0806e788:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r5, r0, #0x0
	str		r1, [sp, #0xC]
	str		r2, [sp, #0x10]
	add		r7, r3, #0x0
	mov		r4, #0x0
	add		r6, r5, #0x0
	mov		r0, #0xf
	mov		r9, r0
_0806e7a4:
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	add		r6, #0x1
	cmp		r0, #0x0
	beq		_0806e7b0
	mov		r4, #0x1
_0806e7b0:
	mov		r1, #0x1
	neg		r1, r1
	add		r9, r1
	mov		r2, r9
	cmp		r2, #0x0
	bge		_0806e7a4
	add		r6, r5, #0x0
	cmp		r4, #0x0
	bne		_0806e7c4
	b		_0806ea54
_0806e7c4:
	mov		r0, #0x0
	mov		r9, r0
	lsl		r7, r7, #0xc
	mov		r10, r7
_0806e7cc:
	mov		r1, #0x7
	mov		r2, r9
	and		r1, r2
	lsl		r0, r1, #0x1
	ldr		r2, [sp, #0xC]
	add		r5, r2, r0
	cmp		r1, #0x3
	ble		_0806e7de
	add		r5, #0x1
_0806e7de:
	ldr		r7, [sp, #0x10]
	mov		r0, r9
	cmp		r0, #0x7
	ble		_0806e7e8
	add		r7, #0x2
_0806e7e8:
	mov		r0, #0x0
	add		r1, r5, #0x0
	add		r2, r7, #0x0
	bl		sub_080281b0
	add		r4, r0, #0x0
	ldrb	r0, [r6, #0x0]
	lsr		r2, r0, #0x4
	cmp		r2, #0xf
	bhi		_0806e872
	lsl		r0, r2, #0x2
	ldr		r1, _0806e808
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x6E806, 0x2

_0806e808:	.4byte 0x0806e80c
_0806e80c:	.4byte 0x0806e84c

.incbin "base.gba", 0x6E810, 0x3C
	thumb_func_end sub_0806e788


.incbin "base.gba", 0x6E84C, 0x26

_0806e872:

.incbin "base.gba", 0x6E872, 0x2A
_0806e89c:	.4byte 0x0806e8a0
_0806e8a0:	.4byte 0x0806e8e0

.incbin "base.gba", 0x6E8A4, 0x62

_0806e906:

.incbin "base.gba", 0x6E906, 0x32
_0806e938:	.4byte 0x0806e93c
_0806e93c:	.4byte 0x0806e97c

.incbin "base.gba", 0x6E940, 0x62

_0806e9a2:

.incbin "base.gba", 0x6E9A2, 0x2A
_0806e9cc:	.4byte 0x0806e9d0
_0806e9d0:	.4byte 0x0806ea10

.incbin "base.gba", 0x6E9D4, 0x62

_0806ea36:

.incbin "base.gba", 0x6EA36, 0x1C
_0806ea52:

.incbin "base.gba", 0x6EA52, 0x2
_0806ea54:

.incbin "base.gba", 0x6EA54, 0x1E
_0806ea72:

.incbin "base.gba", 0x6EA72, 0x16
_0806ea88:	.4byte 0x081123ac
	thumb_func_start sub_0806ea8c
sub_0806ea8c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	mov		r0, #0x0
	mov		r8, r0
_0806ea98:
	mov		r0, #0xf
	mov		r1, r8
	and		r0, r1
	add		r4, r0, #0x0
	add		r4, #0x8
	cmp		r0, #0x7
	bgt		_0806eaa8
	add		r4, r0, #0x6
_0806eaa8:
	mov		r6, #0x6
	mov		r0, r8
	cmp		r0, #0xf
	bgt		_0806eab2
	mov		r6, #0x4
_0806eab2:
	mov		r0, #0x0
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	bl		sub_080281b0
	add		r7, r0, #0x0
	ldrb	r2, [r5, #0x0]
	cmp		r2, #0xf
	bhi		_0806eb3a
	lsl		r0, r2, #0x2
	ldr		r1, _0806ead0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x6EACE, 0x2

_0806ead0:	.4byte 0x0806ead4
_0806ead4:	.4byte 0x0806eb14

.incbin "base.gba", 0x6EAD8, 0x3C
	thumb_func_end sub_0806ea8c


.incbin "base.gba", 0x6EB14, 0x26

_0806eb3a:

.incbin "base.gba", 0x6EB3A, 0x2E
_0806eb68:	.4byte 0x0806eb6c
_0806eb6c:	.4byte 0x0806ebac

.incbin "base.gba", 0x6EB70, 0x62

_0806ebd2:

.incbin "base.gba", 0x6EBD2, 0x1E
_0806ebf0:

.incbin "base.gba", 0x6EBF0, 0x10
_0806ec00:	.4byte 0x0000F020
	thumb_func_start sub_0806ec04
sub_0806ec04:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	add		r7, sp, #0x10
	str		r0, [r7, #0x0]
	mov		r10, sp
	ldr		r0, _0806ed24
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	sub		sp, #0x20
	add		r5, sp, #0x10
	mov		r0, #0x0
	mov		r9, r0
	mov		r3, #0x0
	mov		r6, #0xf
	mov		r4, #0xf
	add		r2, r5, #0x0
_0806ec2c:
	ldr		r1, [r7, #0x0]
	add		r0, r1, r3
	ldrb	r1, [r0, #0x0]
	lsr		r0, r1, #0x4
	and		r0, r6
	strb	r0, [r2, #0x0]
	and		r1, r4
	strb	r1, [r2, #0x1]
	add		r2, #0x2
	add		r3, #0x1
	cmp		r3, #0xf
	ble		_0806ec2c
	mov		r1, #0x0
	mov		r3, #0x0
_0806ec48:
	add		r0, r5, r3
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0806ec52
	mov		r1, #0x1
_0806ec52:
	add		r3, #0x1
	cmp		r3, #0x1f
	ble		_0806ec48
	cmp		r1, #0x0
	bne		_0806ec6e
	mov		r3, #0x0
	mov		r2, #0xff
_0806ec60:
	add		r1, r5, r3
	ldrb	r0, [r1, #0x0]
	orr		r0, r2
	strb	r0, [r1, #0x0]
	add		r3, #0x1
	cmp		r3, #0x1f
	ble		_0806ec60
_0806ec6e:
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_080281d4
	ldr		r4, _0806ed28
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	ldr		r4, _0806ed2c
	mov		r0, #0x1
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		_CallHardwareLZ77DecompressToMemory8Bit
	bl		_DrawFrameRunAudio
	add		r0, r5, #0x0
	bl		sub_0806ea8c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	add		r3, r5, #0x0
	mov		r1, #0x1f
	mov		r2, #0x1f
	ldrsb	r2, [r5, r2]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	bne		_0806ecda
_0806ecc8:
	sub		r1, #0x1
	cmp		r1, #0x0
	blt		_0806ecda
	add		r0, r3, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, r2
	beq		_0806ecc8
_0806ecda:
	add		r1, #0x1
	cmp		r1, #0x1f
	ble		_0806ece6
	mov		r1, #0x1f
	mov		r4, #0x1
	mov		r9, r4
_0806ece6:
	ldr		r3, _0806ed30
	str		r1, [sp, #0x0]
	mov		r0, r9
	str		r0, [sp, #0x4]
	mov		r0, #0x20
	str		r0, [sp, #0x8]
	ldr		r0, _0806ed34
	str		r0, [sp, #0xC]
	mov		r0, #0x2
	mov		r1, r8
	add		r2, r5, #0x0
	bl		sub_0806dc98
	cmp		r0, #0x0
	beq		_0806ed38
	mov		r3, #0x0
	add		r2, r5, #0x0
_0806ed08:
	ldr		r4, [r7, #0x0]
	add		r1, r4, r3
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x4
	ldrb	r4, [r2, #0x1]
	add		r0, r0, r4
	strb	r0, [r1, #0x0]
	add		r2, #0x2
	add		r3, #0x1
	cmp		r3, #0xf
	ble		_0806ed08
	mov		r0, #0x1
	b		_0806ed3a

.incbin "base.gba", 0x6ED22, 0x2

_0806ed24:	.4byte 0x0203EBE0
_0806ed28:	.4byte 0x080961a8
_0806ed2c:	.4byte 0x08096378
_0806ed30:	.4byte sub_0806ed4c
_0806ed34:	.4byte 0x0806EA8D

_0806ed38:
	mov		r0, #0x0
_0806ed3a:
	mov		sp, r10
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806ec04

	thumb_func_start sub_0806ed4c
sub_0806ed4c:
	push	{ lr }
	ldr		r0, _0806ed7c
	ldr		r0, [r0, #0x0]
	ldr		r1, _0806ed80
	add		r0, r0, r1
	bl		sub_0806ec04
	cmp		r0, #0x0
	beq		_0806ed64
	mov		r0, #0x91
	bl		sub_0807073c
_0806ed64:
	ldr		r0, _0806ed84
	ldr		r2, _0806ed88
	str		r0, [r2, #0x0]
	ldrb	r0, [r2, #0x8]
	add		r0, #0x1
	mov		r1, #0x7
	and		r0, r1
	strb	r0, [r2, #0x8]
	mov		r0, #0x1
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6ED7A, 0x2

_0806ed7c:	.4byte 0x0203EBE0
_0806ed80:	.4byte 0x00007DB4
_0806ed84:	.4byte 0x0805DF81
_0806ed88:	.4byte RunGameLogic_CallBack

.incbin "base.gba", 0x6ED8C, 0x18
_0806eda4:	.4byte 0x0806ede4

.incbin "base.gba", 0x6EDA8, 0x3C
	thumb_func_end sub_0806ed4c


.incbin "base.gba", 0x6EDE4, 0x30
	thumb_func_start sub_0806ee14
sub_0806ee14:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	sub		sp, #0xc
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	mov		r8, r2
	add		r5, r3, #0x0
	mov		r0, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_080281b0
	add		r3, r0, #0x0
	ldr		r0, _0806ee58
	lsl		r4, r4, #0x2
	add		r4, r4, r0
	ldr		r2, [r4, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r5, [sp, #0x4]
	mov		r0, #0x18
	str		r0, [sp, #0x8]
	add		r0, r6, #0x0
	mov		r1, r8
	bl		sub_08013e9c
	add		sp, #0xc
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6EE56, 0x2

_0806ee58:	.4byte 0x081123f4
	thumb_func_end sub_0806ee14

	thumb_func_start sub_0806ee5c
sub_0806ee5c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	str		r1, [sp, #0x10]
	mov		r10, r2
	lsl		r0, r0, #0x18
	lsr		r6, r0, #0x18
	ldr		r0, _0806eec0
	ldr		r5, [r0, #0x0]
	mov		r0, #0x0
	mov		r8, r0
	cmp		r3, #0x0
	bne		_0806ee7e
	mov		r0, #0x1
_0806ee7e:
	add		r4, r5, #0x0
	add		r4, #0x38
	strb	r0, [r4, #0x0]
	mov		r1, r8
	str		r1, [r5, #0x34]
	ldr		r2, _0806eec4
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	ldr		r1, _0806eec8
	add		r0, r5, r1
	mov		r2, r8
	strb	r2, [r0, #0x0]
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	lsl		r6, r6, #0x3
	str		r6, [sp, #0x14]
	add		r0, sp, #0xc
	mov		r9, r0
	mov		r7, #0x0
_0806eea8:
	mov		r6, #0x0
	mov		r0, #0x30
	bl		sub_08026fec
	cmp		r0, #0x0
	beq		_0806eecc
	mov		r6, #0x8d
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x1
	sub		r0, r0, r1
	strb	r0, [r4, #0x0]
	b		_0806ef12

_0806eec0:	.4byte 0x0203EBE0
_0806eec4:	.4byte 0x00005F10
_0806eec8:	.4byte 0x00006B7C

_0806eecc:
	ldr		r1, [sp, #0x10]
	cmp		r1, #0x0
	ble		_0806eee8
	ldr		r2, _0806eee4
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bgt		_0806eee8
	mov		r6, #0x90
	mov		r0, #0x4
	mov		r8, r0
	b		_0806ef12

_0806eee4:	.4byte 0x00005F10

_0806eee8:
	mov		r0, #0x2
	bl		sub_08026fec
	cmp		r0, #0x0
	beq		_0806eef8
	mov		r6, #0x90
	mov		r1, #0x3
	b		_0806ef10
_0806eef8:
	mov		r0, #0x1
	bl		sub_08026fec
	cmp		r0, #0x0
	beq		_0806ef12
	mov		r6, #0x8e
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	mov		r1, #0x1
	cmp		r0, #0x0
	beq		_0806ef10
	mov		r1, #0x2
_0806ef10:
	mov		r8, r1
_0806ef12:
	mov		r0, #0x60
	ldr		r1, [sp, #0x14]
	add		r1, #0x8
	lsl		r1, r1, #0x10
	ldr		r2, _0806ef58
	and		r0, r2
	orr		r0, r1
	str		r0, [sp, #0x8]
	mov		r0, #0x90
	and		r0, r2
	orr		r0, r1
	str		r0, [sp, #0xC]
	str		r7, [sp, #0x0]
	str		r7, [sp, #0x4]
	ldr		r0, _0806ef5c
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	str		r7, [sp, #0x0]
	str		r7, [sp, #0x4]
	ldr		r0, _0806ef60
	mov		r1, r9
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	ldr		r1, [r5, #0x34]
	mov		r0, #0x1f
	and		r0, r1
	cmp		r0, #0x13
	bgt		_0806ef68
	ldr		r2, _0806ef64
	b		_0806ef74

_0806ef58:	.4byte 0x0000FFFF
_0806ef5c:	.4byte 0x080e46f4
_0806ef60:	.4byte 0x080e46fc
_0806ef64:	.4byte 0x080e4704

_0806ef68:
	mov		r0, #0x20
	and		r1, r0
	ldr		r2, _0806efcc
	cmp		r1, #0x0
	beq		_0806ef74
	ldr		r2, _0806efd0
_0806ef74:
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	mov		r1, r9
	cmp		r0, #0x0
	bne		_0806ef80
	add		r1, sp, #0x8
_0806ef80:
	str		r7, [sp, #0x0]
	str		r7, [sp, #0x4]
	add		r0, r2, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
	cmp		r6, #0x0
	beq		_0806ef98
	add		r0, r6, #0x0
	bl		sub_0807073c
_0806ef98:
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	mov		r0, r10
	cmp		r0, #0x0
	beq		_0806efaa
	bl		sub_0807d7f8
_0806efaa:
	ldr		r0, [r5, #0x34]
	add		r0, #0x1
	str		r0, [r5, #0x34]
	mov		r1, r8
	cmp		r1, #0x0
	bne		_0806efb8
	b		_0806eea8
_0806efb8:
	mov		r0, r8
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6EFCA, 0x2

_0806efcc:	.4byte 0x080e4724
_0806efd0:	.4byte 0x080e4714
	thumb_func_end sub_0806ee5c

	thumb_func_start sub_0806efd4
sub_0806efd4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0xc
	mov		r8, r1
	add		r7, r2, #0x0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r9, r0
	ldr		r0, _0806f01c
	ldr		r4, [r0, #0x0]
	mov		r6, #0x0
	str		r6, [r4, #0x34]
	ldr		r1, _0806f020
	add		r0, r4, r1
	str		r6, [r0, #0x0]
	ldr		r1, _0806f024
	add		r0, r4, r1
	strb	r6, [r0, #0x0]
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
_0806f004:
	mov		r5, #0x0
	mov		r0, r8
	cmp		r0, #0x0
	ble		_0806f028
	ldr		r1, _0806f020
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r8, r0
	bgt		_0806f028
	mov		r5, #0x90
	mov		r6, #0x4
	b		_0806f046

_0806f01c:	.4byte 0x0203EBE0
_0806f020:	.4byte 0x00005F10
_0806f024:	.4byte 0x00006B7C

_0806f028:
	mov		r0, #0x2
	bl		sub_08026fec
	cmp		r0, #0x0
	beq		_0806f038
	mov		r5, #0x90
	mov		r6, #0x3
	b		_0806f046
_0806f038:
	mov		r0, #0x1
	bl		sub_08026fec
	cmp		r0, #0x0
	beq		_0806f046
	mov		r5, #0x8e
	mov		r6, #0x1
_0806f046:
	ldr		r0, _0806f0b0
	add		r1, r4, r0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, #0x1e
	ble		_0806f058
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_0806f058:
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x13
	bgt		_0806f07a
	mov		r1, r9
	lsl		r0, r1, #0x13
	mov		r1, #0xd8
	orr		r1, r0
	str		r1, [sp, #0x8]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x4]
	ldr		r0, _0806f0b4
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0802951c
_0806f07a:
	cmp		r5, #0x0
	beq		_0806f084
	add		r0, r5, #0x0
	bl		sub_0807073c
_0806f084:
	bl		sub_0802983c
	bl		_DrawFrameRunAudio
	cmp		r7, #0x0
	beq		_0806f094
	bl		sub_0807d7ec
_0806f094:
	ldr		r0, [r4, #0x34]
	add		r0, #0x1
	str		r0, [r4, #0x34]
	cmp		r6, #0x0
	beq		_0806f004
	add		r0, r6, #0x0
	add		sp, #0xc
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6F0AE, 0x2

_0806f0b0:	.4byte 0x00006B68
_0806f0b4:	.4byte 0x080e478c
	thumb_func_end sub_0806efd4

	thumb_func_start sub_0806f0b8
sub_0806f0b8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x8
	ldr		r0, _0806f14c
	ldr		r0, [r0, #0x0]
	bl		sub_08060bf4
	add		r4, r0, #0x0
	bl		sub_08057370
	add		r0, #0x1c
	mov		r1, sp
	mov		r2, #0x5
	bl		sub_08057300
	add		r4, #0x10
	add		r0, r4, #0x0
	bl		sub_080648e4
	cmp		r0, #0x0
	beq		_0806f19c
	mov		r6, #0x1
	add		r0, r4, #0x0
	mov		r1, sp
	mov		r2, #0x5
	bl		sub_08057328
	cmp		r0, #0x0
	bne		_0806f19e
	bl		sub_08057370
	ldr		r4, _0806f150
	ldr		r1, _0806f154
	mov		r8, r1
	ldr		r1, _0806f158
	mov		r9, r1
	add		r5, r0, #0x0
	add		r5, #0x1c
	mov		r7, #0x0
	bl		sub_08057428
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	ldr		r0, _0806f15c
	add		r1, r4, #0x0
	bl		sub_08013d0c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	bl		sub_0805c408
	add		r4, r0, #0x0
	mov		r0, #0x0
	bl		sub_080281d4
	cmp		r4, #0x0
	beq		_0806f160
	ldr		r0, _0806f15c
	mov		r1, r8
	bl		sub_08013d0c
	mov		r4, #0x1
	b		_0806f17a

.incbin "base.gba", 0x6F14A, 0x2

_0806f14c:	.4byte 0x0203EBE0
_0806f150:	.4byte 0x08113b58
_0806f154:	.4byte 0x08113bb8
_0806f158:	.4byte 0x08113c04
_0806f15c:	.4byte 0x00008003

_0806f160:
	mov		r0, #0x4
	mov		r1, #0x1
	neg		r1, r1
_0806f166:
	strb	r7, [r5, #0x0]
	add		r5, #0x1
	sub		r0, #0x1
	cmp		r0, r1
	bne		_0806f166
	ldr		r0, _0806f198
	mov		r1, r9
	bl		sub_08013d0c
	mov		r4, #0x2
_0806f17a:
	mov		r0, #0x1
	bl		sub_080281fc
	bl		sub_0806f970
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	beq		_0806f18e
	mov		r4, #0x3
_0806f18e:
	cmp		r4, #0x3
	bne		_0806f19e
	mov		r6, #0x0
	b		_0806f19e

.incbin "base.gba", 0x6F196, 0x2

_0806f198:	.4byte 0x00008003

_0806f19c:
	mov		r6, #0x3
_0806f19e:
	add		r0, r6, #0x0
	add		sp, #0x8
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6F1AE, 0x2
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x18
	bl		sub_08057370
	mov		r10, r0
	ldr		r0, _0806f260
	ldr		r0, [r0, #0x0]
	bl		sub_08060bf4
	add		r4, r0, #0x0
	bl		sub_08057370
	ldr		r5, _0806f264
	add		r0, r0, r5
	add		r4, #0x1c
	add		r1, r4, #0x0
	mov		r2, #0x11
	bl		sub_08057300
	bl		sub_08057370
	add		r0, r0, r5
	mov		r1, sp
	mov		r2, #0x11
	bl		sub_08057300
	mov		r9, r4
_0806f1ee:
	mov		r0, #0x1
	str		r0, [sp, #0x14]
	mov		r0, r9
	mov		r1, #0x1
	bl		sub_080656b0
	cmp		r0, #0x0
	bne		_0806f200
	b		_0806f3e8
_0806f200:
	mov		r0, sp
	mov		r1, r9
	mov		r2, #0x11
	bl		sub_08057328
	add		r5, r0, #0x0
	cmp		r5, #0x0
	beq		_0806f212
	b		_0806f3e4
_0806f212:
	mov		r6, #0x1
	ldr		r0, _0806f260
	ldr		r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	mov		r0, #0x3
	ldr		r1, _0806f268
	bl		sub_08013d0c
	mov		r0, #0x2
	bl		sub_080281fc
	mov		r0, #0xe
	mov		r1, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0806ee5c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	add		r2, r0, #0x0
	ldr		r1, _0806f26c
	add		r4, r4, r1
	mov		r1, #0x0
	cmp		r0, #0x1
	bne		_0806f250
	mov		r1, #0x1
_0806f250:
	str		r1, [r4, #0x0]
	cmp		r0, #0x2
	beq		_0806f314
	cmp		r0, #0x2
	bgt		_0806f270
	cmp		r0, #0x1
	beq		_0806f278
	b		_0806f3ea

_0806f260:	.4byte 0x0203EBE0
_0806f264:	.4byte 0x00000AD4
_0806f268:	.4byte 0x08112e48
_0806f26c:	.4byte 0x00006B78

_0806f270:
	cmp		r2, #0x3
	bne		_0806f276
	b		_0806f3dc
_0806f276:
	b		_0806f3ea
_0806f278:
	ldr		r0, _0806f2fc
	add		r0, r10
	strb	r6, [r0, #0x0]
	bl		sub_08057370
	ldr		r1, _0806f300
	add		r0, r0, r1
	mov		r1, r9
	mov		r2, #0x10
	bl		sub_08057328
	cmp		r0, #0x0
	beq		_0806f294
	b		_0806f3ea
_0806f294:
	bl		sub_08057370
	add		r1, r0, #0x0
	ldr		r0, _0806f300
	add		r1, r1, r0
	mov		r0, r9
	mov		r2, #0x10
	bl		sub_08057300
	bl		sub_08057370
	ldr		r7, _0806f304
	ldr		r1, _0806f308
	mov		r8, r1
	ldr		r1, _0806f300
	add		r5, r0, r1
	mov		r6, #0x0
	bl		sub_08057428
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	ldr		r0, _0806f30c
	ldr		r1, _0806f310
	bl		sub_08013d0c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	bl		sub_0805c408
	add		r4, r0, #0x0
	mov		r0, #0x0
	bl		sub_080281d4
	cmp		r4, #0x0
	bne		_0806f372
	mov		r0, #0x0
	mov		r1, #0x1
	neg		r1, r1
_0806f2f0:
	strb	r6, [r5, #0x0]
	add		r5, #0x1
	sub		r0, #0x1
	cmp		r0, r1
	bne		_0806f2f0
	b		_0806f3ac

_0806f2fc:	.4byte 0x00000AE5
_0806f300:	.4byte 0x00000AD4
_0806f304:	.4byte 0x08113cb8
_0806f308:	.4byte 0x08113d00
_0806f30c:	.4byte 0x00008003
_0806f310:	.4byte 0x08113c58

_0806f314:
	ldr		r0, _0806f380
	add		r0, r10
	strb	r5, [r0, #0x0]
	bl		sub_08057370
	ldr		r1, _0806f384
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0806f3ea
	ldr		r0, _0806f388
	bl		sub_080579d0
	bl		sub_08057370
	ldr		r7, _0806f38c
	ldr		r1, _0806f390
	mov		r8, r1
	ldr		r1, _0806f384
	add		r5, r0, r1
	mov		r6, #0x0
	bl		sub_08057428
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	ldr		r0, _0806f394
	ldr		r1, _0806f398
	bl		sub_08013d0c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	bl		sub_0805c408
	add		r4, r0, #0x0
	mov		r0, #0x0
	bl		sub_080281d4
	cmp		r4, #0x0
	beq		_0806f39c
_0806f372:
	ldr		r0, _0806f394
	add		r1, r7, #0x0
	bl		sub_08013d0c
	mov		r4, #0x1
	b		_0806f3b6

.incbin "base.gba", 0x6F37E, 0x2

_0806f380:	.4byte 0x00000AE5
_0806f384:	.4byte 0x00000AD4
_0806f388:	.4byte 0x08112518
_0806f38c:	.4byte 0x08113dac
_0806f390:	.4byte 0x08113df0
_0806f394:	.4byte 0x00008003
_0806f398:	.4byte 0x08113d50

_0806f39c:
	mov		r0, #0x0
	mov		r1, #0x1
	neg		r1, r1
_0806f3a2:
	strb	r6, [r5, #0x0]
	add		r5, #0x1
	sub		r0, #0x1
	cmp		r0, r1
	bne		_0806f3a2
_0806f3ac:
	ldr		r0, _0806f3d8
	mov		r1, r8
	bl		sub_08013d0c
	mov		r4, #0x2
_0806f3b6:
	mov		r0, #0x1
	bl		sub_080281fc
	bl		sub_0806f970
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	beq		_0806f3ca
	mov		r4, #0x3
_0806f3ca:
	mov		r1, #0x3
	eor		r1, r4
	neg		r0, r1
	orr		r0, r1
	lsr		r6, r0, #0x1f
	b		_0806f3ea

.incbin "base.gba", 0x6F3D6, 0x2

_0806f3d8:	.4byte 0x00008003

_0806f3dc:
	mov		r0, #0x0
	str		r0, [sp, #0x14]
	mov		r6, #0x0
	b		_0806f3ea
_0806f3e4:
	mov		r6, #0x1
	b		_0806f3f2
_0806f3e8:
	mov		r6, #0x3
_0806f3ea:
	ldr		r1, [sp, #0x14]
	cmp		r1, #0x0
	bne		_0806f3f2
	b		_0806f1ee
_0806f3f2:
	add		r0, r6, #0x0
	add		sp, #0x18
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806f0b8

	thumb_func_start sub_0806f404
sub_0806f404:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	ldr		r0, _0806f440
	ldr		r0, [r0, #0x0]
	bl		sub_08060bf4
	add		r2, r0, #0x0
	add		r3, r2, #0x0
	add		r3, #0x2d
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x2e
	bls		_0806f44c
	add		r0, r2, #0x0
	add		r0, #0x4a
	ldrb	r1, [r0, #0x0]
	sub		r1, #0x10
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	add		r1, r2, #0x0
	add		r1, #0x4b
	sub		r0, #0x10
	ldrb	r1, [r1, #0x0]
	add		r1, r0, r1
	cmp		r1, #0x63
	ble		_0806f444
	mov		r0, #0x0
	b		_0806f44a

_0806f440:	.4byte 0x0203EBE0

_0806f444:
	ldr		r0, _0806f4cc
	add		r0, r1, r0
	ldrb	r0, [r0, #0x0]
_0806f44a:
	strb	r0, [r3, #0x0]
_0806f44c:
	add		r4, r2, #0x0
	add		r4, #0x2d
	ldrb	r0, [r4, #0x0]
	bl		sub_0806d6fc
	cmp		r0, #0x0
	beq		_0806f530
	mov		r7, #0x1
	bl		sub_08057370
	ldr		r1, _0806f4d0
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r4, #0x0]
	cmp		r0, r1
	beq		_0806f532
	bl		sub_08057370
	ldr		r1, _0806f4d0
	add		r0, r0, r1
	ldrb	r1, [r4, #0x0]
	strb	r1, [r0, #0x0]
	bl		sub_08057370
	ldr		r4, _0806f4d4
	ldr		r1, _0806f4d8
	mov		r8, r1
	ldr		r1, _0806f4dc
	mov		r9, r1
	ldr		r1, _0806f4d0
	add		r5, r0, r1
	mov		r6, #0x2f
	bl		sub_08057428
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	ldr		r0, _0806f4e0
	add		r1, r4, #0x0
	bl		sub_08013d0c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	bl		sub_0805c408
	add		r4, r0, #0x0
	mov		r0, #0x0
	bl		sub_080281d4
	cmp		r4, #0x0
	beq		_0806f4e4
	ldr		r0, _0806f4e0
	mov		r1, r8
	bl		sub_08013d0c
	mov		r4, #0x1
	b		_0806f4fe

_0806f4cc:	.4byte 0x081124b4
_0806f4d0:	.4byte 0x00000AE6
_0806f4d4:	.4byte 0x0811404c
_0806f4d8:	.4byte 0x081140ac
_0806f4dc:	.4byte 0x081140f8
_0806f4e0:	.4byte 0x00008003

_0806f4e4:
	mov		r0, #0x0
	mov		r1, #0x1
	neg		r1, r1
_0806f4ea:
	strb	r6, [r5, #0x0]
	add		r5, #0x1
	sub		r0, #0x1
	cmp		r0, r1
	bne		_0806f4ea
	ldr		r0, _0806f528
	mov		r1, r9
	bl		sub_08013d0c
	mov		r4, #0x2
_0806f4fe:
	mov		r0, #0x1
	bl		sub_080281fc
	bl		sub_0806f970
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	beq		_0806f512
	mov		r4, #0x3
_0806f512:
	cmp		r4, #0x3
	bne		_0806f518
	mov		r7, #0x0
_0806f518:
	ldr		r0, _0806f52c
	mov		r1, #0xb4
	lsl		r1, r1, #0x8
	add		r0, r0, r1
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	b		_0806f532

.incbin "base.gba", 0x6F526, 0x2

_0806f528:	.4byte 0x00008003
_0806f52c:	.4byte 0x02033780

_0806f530:
	mov		r7, #0x3
_0806f532:
	add		r0, r7, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806f404

	thumb_func_start sub_0806f540
sub_0806f540:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	ldr		r0, _0806f5d8
	ldr		r0, [r0, #0x0]
	bl		sub_08060bf4
	add		r4, r0, #0x0
	bl		sub_0806e230
	cmp		r0, #0x0
	beq		_0806f62c
	mov		r7, #0x1
	bl		sub_08057370
	ldr		r1, _0806f5dc
	add		r0, r0, r1
	add		r4, #0x3e
	add		r1, r4, #0x0
	mov		r2, #0xc
	bl		sub_08057328
	cmp		r0, #0x0
	bne		_0806f62e
	bl		sub_08057370
	add		r1, r0, #0x0
	ldr		r0, _0806f5dc
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0xc
	bl		sub_08057300
	bl		sub_08057370
	ldr		r4, _0806f5e0
	ldr		r1, _0806f5e4
	mov		r8, r1
	ldr		r1, _0806f5e8
	mov		r9, r1
	ldr		r1, _0806f5dc
	add		r5, r0, r1
	mov		r6, #0x0
	bl		sub_08057428
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	ldr		r0, _0806f5ec
	add		r1, r4, #0x0
	bl		sub_08013d0c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	bl		sub_0805c408
	add		r4, r0, #0x0
	mov		r0, #0x0
	bl		sub_080281d4
	cmp		r4, #0x0
	beq		_0806f5f0
	ldr		r0, _0806f5ec
	mov		r1, r8
	bl		sub_08013d0c
	mov		r4, #0x1
	b		_0806f60a

_0806f5d8:	.4byte 0x0203EBE0
_0806f5dc:	.4byte 0x00000B8D
_0806f5e0:	.4byte 0x08113e3c
_0806f5e4:	.4byte 0x08113ea0
_0806f5e8:	.4byte 0x08113eec
_0806f5ec:	.4byte 0x00008003

_0806f5f0:
	mov		r0, #0xb
	mov		r1, #0x1
	neg		r1, r1
_0806f5f6:
	strb	r6, [r5, #0x0]
	add		r5, #0x1
	sub		r0, #0x1
	cmp		r0, r1
	bne		_0806f5f6
	ldr		r0, _0806f628
	mov		r1, r9
	bl		sub_08013d0c
	mov		r4, #0x2
_0806f60a:
	mov		r0, #0x1
	bl		sub_080281fc
	bl		sub_0806f970
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	beq		_0806f61e
	mov		r4, #0x3
_0806f61e:
	cmp		r4, #0x3
	bne		_0806f62e
	mov		r7, #0x0
	b		_0806f62e

.incbin "base.gba", 0x6F626, 0x2

_0806f628:	.4byte 0x00008003

_0806f62c:
	mov		r7, #0x3
_0806f62e:
	add		r0, r7, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806f540

	thumb_func_start sub_0806f63c
sub_0806f63c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	ldr		r0, _0806f6e0
	ldr		r0, [r0, #0x0]
	bl		sub_08060bf4
	add		r5, r0, #0x0
	bl		sub_0806e0fc
	cmp		r0, #0x0
	beq		_0806f734
	mov		r7, #0x1
	bl		sub_08057370
	ldr		r1, _0806f6e4
	add		r0, r0, r1
	add		r4, r5, #0x0
	add		r4, #0x4a
	add		r1, r4, #0x0
	mov		r2, #0x8
	bl		sub_08057328
	cmp		r0, #0x0
	bne		_0806f736
	add		r1, r5, #0x0
	add		r1, #0x2d
	mov		r0, #0x2f
	strb	r0, [r1, #0x0]
	bl		sub_08057370
	add		r1, r0, #0x0
	ldr		r0, _0806f6e4
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		sub_08057300
	bl		sub_08057370
	ldr		r4, _0806f6e8
	ldr		r1, _0806f6ec
	mov		r8, r1
	ldr		r1, _0806f6f0
	mov		r9, r1
	ldr		r1, _0806f6e4
	add		r5, r0, r1
	mov		r6, #0x0
	bl		sub_08057428
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	ldr		r0, _0806f6f4
	add		r1, r4, #0x0
	bl		sub_08013d0c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	bl		sub_0805c408
	add		r4, r0, #0x0
	mov		r0, #0x0
	bl		sub_080281d4
	cmp		r4, #0x0
	beq		_0806f6f8
	ldr		r0, _0806f6f4
	mov		r1, r8
	bl		sub_08013d0c
	mov		r4, #0x1
	b		_0806f712

.incbin "base.gba", 0x6F6DE, 0x2

_0806f6e0:	.4byte 0x0203EBE0
_0806f6e4:	.4byte 0x00000B75
_0806f6e8:	.4byte 0x08113f40
_0806f6ec:	.4byte 0x08113fa4
_0806f6f0:	.4byte 0x08113ff4
_0806f6f4:	.4byte 0x00008003

_0806f6f8:
	mov		r0, #0x7
	mov		r1, #0x1
	neg		r1, r1
_0806f6fe:
	strb	r6, [r5, #0x0]
	add		r5, #0x1
	sub		r0, #0x1
	cmp		r0, r1
	bne		_0806f6fe
	ldr		r0, _0806f730
	mov		r1, r9
	bl		sub_08013d0c
	mov		r4, #0x2
_0806f712:
	mov		r0, #0x1
	bl		sub_080281fc
	bl		sub_0806f970
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	beq		_0806f726
	mov		r4, #0x3
_0806f726:
	cmp		r4, #0x3
	bne		_0806f736
	mov		r7, #0x0
	b		_0806f736

.incbin "base.gba", 0x6F72E, 0x2

_0806f730:	.4byte 0x00008003

_0806f734:
	mov		r7, #0x3
_0806f736:
	add		r0, r7, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806f63c

	thumb_func_start sub_0806f744
sub_0806f744:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	ldr		r0, _0806f7e0
	ldr		r0, [r0, #0x0]
	bl		sub_08060bf4
	add		r4, r0, #0x0
	add		r4, #0x52
	add		r0, r4, #0x0
	bl		sub_0806e5ec
	cmp		r0, #0x0
	beq		_0806f834
	mov		r7, #0x1
	bl		sub_08057370
	ldr		r1, _0806f7e4
	add		r0, r0, r1
	add		r1, r4, #0x0
	mov		r2, #0x80
	bl		sub_08057328
	cmp		r0, #0x0
	bne		_0806f836
	bl		sub_08057370
	add		r1, r0, #0x0
	ldr		r0, _0806f7e4
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x80
	bl		sub_08057300
	bl		sub_08057370
	ldr		r4, _0806f7e8
	ldr		r1, _0806f7ec
	mov		r8, r1
	ldr		r1, _0806f7f0
	mov		r9, r1
	ldr		r1, _0806f7e4
	add		r5, r0, r1
	mov		r6, #0x0
	bl		sub_08057428
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	ldr		r0, _0806f7f4
	add		r1, r4, #0x0
	bl		sub_08013d0c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	bl		sub_0805c408
	add		r4, r0, #0x0
	mov		r0, #0x0
	bl		sub_080281d4
	cmp		r4, #0x0
	beq		_0806f7f8
	ldr		r0, _0806f7f4
	mov		r1, r8
	bl		sub_08013d0c
	mov		r4, #0x1
	b		_0806f812

.incbin "base.gba", 0x6F7DE, 0x2

_0806f7e0:	.4byte 0x0203EBE0
_0806f7e4:	.4byte 0x00000AF5
_0806f7e8:	.4byte 0x0811414c
_0806f7ec:	.4byte 0x081141ac
_0806f7f0:	.4byte 0x081141f4
_0806f7f4:	.4byte 0x00008003

_0806f7f8:
	mov		r0, #0x7f
	mov		r1, #0x1
	neg		r1, r1
_0806f7fe:
	strb	r6, [r5, #0x0]
	add		r5, #0x1
	sub		r0, #0x1
	cmp		r0, r1
	bne		_0806f7fe
	ldr		r0, _0806f830
	mov		r1, r9
	bl		sub_08013d0c
	mov		r4, #0x2
_0806f812:
	mov		r0, #0x1
	bl		sub_080281fc
	bl		sub_0806f970
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	beq		_0806f826
	mov		r4, #0x3
_0806f826:
	cmp		r4, #0x3
	bne		_0806f836
	mov		r7, #0x0
	b		_0806f836

.incbin "base.gba", 0x6F82E, 0x2

_0806f830:	.4byte 0x00008003

_0806f834:
	mov		r7, #0x3
_0806f836:
	add		r0, r7, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806f744

	thumb_func_start sub_0806f844
sub_0806f844:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	ldr		r0, _0806f8e0
	ldr		r0, [r0, #0x0]
	bl		sub_08060bf4
	add		r4, r0, #0x0
	add		r4, #0x2e
	add		r0, r4, #0x0
	bl		sub_0806e450
	cmp		r0, #0x0
	beq		_0806f934
	mov		r7, #0x1
	bl		sub_08057370
	ldr		r1, _0806f8e4
	add		r0, r0, r1
	add		r1, r4, #0x0
	mov		r2, #0x10
	bl		sub_08057328
	cmp		r0, #0x0
	bne		_0806f936
	bl		sub_08057370
	add		r1, r0, #0x0
	ldr		r0, _0806f8e4
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0x10
	bl		sub_08057300
	bl		sub_08057370
	ldr		r4, _0806f8e8
	ldr		r1, _0806f8ec
	mov		r8, r1
	ldr		r1, _0806f8f0
	mov		r9, r1
	ldr		r1, _0806f8e4
	add		r5, r0, r1
	mov		r6, #0x0
	bl		sub_08057428
	mov		r0, #0x0
	bl		sub_080281d4
	mov		r0, #0x1
	bl		sub_0806016c
	ldr		r0, _0806f8f4
	add		r1, r4, #0x0
	bl		sub_08013d0c
	mov		r0, #0x1
	bl		sub_080281fc
	mov		r0, #0x2
	bl		sub_080281fc
	bl		sub_0805c408
	add		r4, r0, #0x0
	mov		r0, #0x0
	bl		sub_080281d4
	cmp		r4, #0x0
	beq		_0806f8f8
	ldr		r0, _0806f8f4
	mov		r1, r8
	bl		sub_08013d0c
	mov		r4, #0x1
	b		_0806f912

.incbin "base.gba", 0x6F8DE, 0x2

_0806f8e0:	.4byte 0x0203EBE0
_0806f8e4:	.4byte 0x00000B7D
_0806f8e8:	.4byte 0x08114244
_0806f8ec:	.4byte 0x081142a0
_0806f8f0:	.4byte 0x081142e4
_0806f8f4:	.4byte 0x00008003

_0806f8f8:
	mov		r0, #0xf
	mov		r1, #0x1
	neg		r1, r1
_0806f8fe:
	strb	r6, [r5, #0x0]
	add		r5, #0x1
	sub		r0, #0x1
	cmp		r0, r1
	bne		_0806f8fe
	ldr		r0, _0806f930
	mov		r1, r9
	bl		sub_08013d0c
	mov		r4, #0x2
_0806f912:
	mov		r0, #0x1
	bl		sub_080281fc
	bl		sub_0806f970
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	beq		_0806f926
	mov		r4, #0x3
_0806f926:
	cmp		r4, #0x3
	bne		_0806f936
	mov		r7, #0x0
	b		_0806f936

.incbin "base.gba", 0x6F92E, 0x2

_0806f930:	.4byte 0x00008003

_0806f934:
	mov		r7, #0x3
_0806f936:
	add		r0, r7, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806f844

	thumb_func_start sub_0806f944
sub_0806f944:
	push	{ lr }
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r2, #0x0
	bl		sub_0806f95c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806f944

	thumb_func_start sub_0806f95c
sub_0806f95c:
	push	{ lr }
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r3, #0x1
	bl		sub_0806ee5c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806f95c

	thumb_func_start sub_0806f970
sub_0806f970:
	push	{ lr }
	mov		r0, #0x12
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0806efd4
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0806f970

	thumb_func_start sub_0806f984
sub_0806f984:
	push	{ r4, lr }
	add		r4, r0, #0x0
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	lsl		r0, r4, #0x8
	ldr		r1, _0806f9b4
	add		r0, r0, r1
	ldr		r1, _0806f9b8
	bl		sub_08013d0c
	add		r4, #0x7
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_0806f95c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x6F9B2, 0x2

_0806f9b4:	.4byte 0x00008002
_0806f9b8:	.4byte 0x08112b28
	thumb_func_end sub_0806f984

	thumb_func_start sub_0806f9bc
sub_0806f9bc:
	push	{ r4, lr }
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
_0806f9c2:
	sub		r0, r4, #0x1
	cmp		r0, #0x6
	bhi		_0806fa18
	lsl		r0, r0, #0x2
	ldr		r1, _0806f9d4
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x6F9D2, 0x2

_0806f9d4:	.4byte 0x0806f9d8
_0806f9d8:	.4byte 0x0806f9fa

.incbin "base.gba", 0x6F9DC, 0x18
	thumb_func_end sub_0806f9bc


.incbin "base.gba", 0x6F9F4, 0x6

_0806f9fa:

.incbin "base.gba", 0x6F9FA, 0x1E

_0806fa18:

.incbin "base.gba", 0x6FA18, 0x64
	thumb_func_start sub_0806fa7c
sub_0806fa7c:
.incbin "base.gba", 0x6FA7C, 0x2
	bx		r2
_0806fa80:
.incbin "base.gba", 0x6FA80, 0x4
.incbin "base.gba", 0x6FA84, 0x4
.incbin "base.gba", 0x6FA88, 0x4
	thumb_func_end sub_0806fa7c

	thumb_func_start sub_0806fa8c
sub_0806fa8c:
	ldr		r0, _0806faf8
	ldr		r0, [r0, #0x0]
	ldr		r2, _0806fafc
	ldr		r3, [r0, #0x0]
	cmp		r2, r3
	beq		_0806fa9a
	bx		lr
_0806fa9a:
	add		r3, #0x1
	str		r3, [r0, #0x0]
	push	{ r4, r5, r6, r7, lr }
	mov		r1, r8
	mov		r2, r9
	mov		r3, r10
	mov		r4, r11
	push	{ r0, r1, r2, r3, r4 }
	sub		sp, #0x18
	ldrb	r1, [r0, #0xc]
	cmp		r1, #0x0
	beq		_0806fabe
	ldr		r2, _0806fb04
	ldrb	r2, [r2, #0x0]
	cmp		r2, #0xa0
	bcs		_0806fabc
	add		r2, #0xe4
_0806fabc:
	add		r1, r1, r2
_0806fabe:
	str		r1, [sp, #0x14]
	ldr		r3, [r0, #0x20]
	cmp		r3, #0x0
	beq		_0806face
	ldr		r0, [r0, #0x24]
	bl		sub_0806fe3a
	ldr		r0, [sp, #0x18]
_0806face:
	ldr		r3, [r0, #0x28]
	bl		sub_0806fe3a
	ldr		r0, [sp, #0x18]
	ldr		r3, [r0, #0x10]
	mov		r8, r3
	ldr		r5, _0806fb08
	add		r5, r5, r0
	ldrb	r4, [r0, #0x4]
	sub		r7, r4, #0x1
	bls		_0806faee
	ldrb	r1, [r0, #0xb]
	sub		r1, r1, r7
	mov		r2, r8
	mul		r2, r1
	add		r5, r5, r2
_0806faee:
	str		r5, [sp, #0x8]
	ldr		r6, _0806fb0c
	ldr		r3, _0806fb00
	bx		r3

.incbin "base.gba", 0x6FAF6, 0x2

_0806faf8:	.4byte 0x03007FF0
_0806fafc:	.4byte 0x68736D53
_0806fb00:	.4byte 0x03002991
_0806fb04:	.4byte VerticalCounter_LY_
_0806fb08:	.4byte 0x00000350
_0806fb0c:	.4byte 0x00000630

_0806fb10:
	ldrb	r3, [r0, #0x5]
	cmp		r3, #0x0
	beq		_0806fb5c
.incbin "base.gba", 0x6FB16, 0x2
	bx		r1

.incbin "base.gba", 0x6FB1A, 0x2
_0806fb1c:
.incbin "base.gba", 0x6FB1C, 0x4
.incbin "base.gba", 0x6FB20, 0x4
.incbin "base.gba", 0x6FB24, 0x4
.incbin "base.gba", 0x6FB28, 0x4
_0806fb2c:
.incbin "base.gba", 0x6FB2C, 0x4
.incbin "base.gba", 0x6FB30, 0x4
.incbin "base.gba", 0x6FB34, 0x4
.incbin "base.gba", 0x6FB38, 0x4
.incbin "base.gba", 0x6FB3C, 0x4
.incbin "base.gba", 0x6FB40, 0x4
.incbin "base.gba", 0x6FB44, 0x4
.incbin "base.gba", 0x6FB48, 0x4
.incbin "base.gba", 0x6FB4C, 0x4
.incbin "base.gba", 0x6FB50, 0x4
.incbin "base.gba", 0x6FB54, 0x4
.incbin "base.gba", 0x6FB58, 0x4
_0806fb5c:
	mov		r0, #0x0
	mov		r1, r8
	lsr		r1, r1, #0x3
	bcc		_0806fb66
	stmia	r5!, { r0 }
_0806fb66:
	lsr		r1, r1, #0x1
	bcc		_0806fb6e
	stmia	r5!, { r0 }
	stmia	r5!, { r0 }
_0806fb6e:
	stmia	r5!, { r0 }
	stmia	r5!, { r0 }
	stmia	r5!, { r0 }
	stmia	r5!, { r0 }
	sub		r1, #0x1
	bgt		_0806fb6e
_0806fb7a:
	ldr		r4, [sp, #0x18]
	ldr		r0, [r4, #0x18]
	mov		r12, r0
	ldrb	r0, [r4, #0x6]
	add		r4, #0x50
_0806fb84:
	str		r0, [sp, #0x4]
	ldr		r3, [r4, #0x24]
	ldr		r0, [sp, #0x14]
	cmp		r0, #0x0
	beq		_0806fba4
	ldr		r1, _0806fba0
	ldrb	r1, [r1, #0x0]
	cmp		r1, #0xa0
	bcs		_0806fb98
	add		r1, #0xe4
_0806fb98:
	cmp		r1, r0
	bcc		_0806fba4
	b		_0806fe26

.incbin "base.gba", 0x6FB9E, 0x2

_0806fba0:	.4byte VerticalCounter_LY_

_0806fba4:
	ldrb	r6, [r4, #0x0]
	mov		r0, #0xc7
	tst		r0, r6
	bne		_0806fbae
	b		_0806fe1c
_0806fbae:
	mov		r0, #0x80
	tst		r0, r6
	beq		_0806fbde
	mov		r0, #0x40
	tst		r0, r6
	bne		_0806fbee
	mov		r6, #0x3
	strb	r6, [r4, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x10
	str		r0, [r4, #0x28]
	ldr		r0, [r3, #0xc]
	str		r0, [r4, #0x18]
	mov		r5, #0x0
	strb	r5, [r4, #0x9]
	str		r5, [r4, #0x1c]
	ldrb	r2, [r3, #0x3]
	mov		r0, #0xc0
	tst		r0, r2
	beq		_0806fc36
	mov		r0, #0x10
	orr		r6, r0
	strb	r6, [r4, #0x0]
	b		_0806fc36
_0806fbde:
	ldrb	r5, [r4, #0x9]
	mov		r0, #0x4
	tst		r0, r6
	beq		_0806fbf4
	ldrb	r0, [r4, #0xd]
	sub		r0, #0x1
	strb	r0, [r4, #0xd]
	bhi		_0806fc44
_0806fbee:
	mov		r0, #0x0
	strb	r0, [r4, #0x0]
	b		_0806fe1c
_0806fbf4:
	mov		r0, #0x40
	tst		r0, r6
	beq		_0806fc14
	ldrb	r0, [r4, #0x7]
	mul		r5, r0
	lsr		r5, r5, #0x8
	ldrb	r0, [r4, #0xc]
	cmp		r5, r0
	bhi		_0806fc44
_0806fc06:
	ldrb	r5, [r4, #0xc]
	cmp		r5, #0x0
	beq		_0806fbee
	mov		r0, #0x4
	orr		r6, r0
	strb	r6, [r4, #0x0]
	b		_0806fc44
_0806fc14:
	mov		r2, #0x3
	and		r2, r6
	cmp		r2, #0x2
	bne		_0806fc32
	ldrb	r0, [r4, #0x5]
	mul		r5, r0
	lsr		r5, r5, #0x8
	ldrb	r0, [r4, #0x6]
	cmp		r5, r0
	bhi		_0806fc44
	add		r5, r0, #0x0
	beq		_0806fc06
	sub		r6, #0x1
	strb	r6, [r4, #0x0]
	b		_0806fc44
_0806fc32:
	cmp		r2, #0x3
	bne		_0806fc44
_0806fc36:
	ldrb	r0, [r4, #0x4]
	add		r5, r5, r0
	cmp		r5, #0xff
	bcc		_0806fc44
	mov		r5, #0xff
	sub		r6, #0x1
	strb	r6, [r4, #0x0]
_0806fc44:
	strb	r5, [r4, #0x9]
	ldr		r0, [sp, #0x18]
	ldrb	r0, [r0, #0x7]
	add		r0, #0x1
	mul		r0, r5
	lsr		r5, r0, #0x4
	ldrb	r0, [r4, #0x2]
	ldrb	r1, [r4, #0x3]
	add		r0, r0, r1
	mul		r0, r5
	lsr		r0, r0, #0x9
	strb	r0, [r4, #0xa]
	mov		r0, #0x10
	and		r0, r6
	str		r0, [sp, #0x10]
	beq		_0806fc74
	add		r0, r3, #0x0
	add		r0, #0x10
	ldr		r1, [r3, #0x8]
	add		r0, r0, r1
	str		r0, [sp, #0xc]
	ldr		r0, [r3, #0xc]
	sub		r0, r0, r1
	str		r0, [sp, #0x10]
_0806fc74:
	ldr		r5, [sp, #0x8]
	ldr		r2, [r4, #0x18]
	ldr		r3, [r4, #0x28]
.incbin "base.gba", 0x6fc7A, 0x2
	bx		r0

.incbin "base.gba", 0x6FC7E, 0x2
_0806fc80:
.incbin "base.gba", 0x6FC80, 0x4
.incbin "base.gba", 0x6FC84, 0x4
.incbin "base.gba", 0x6FC88, 0x4
.incbin "base.gba", 0x6FC8C, 0x4
.incbin "base.gba", 0x6FC90, 0x4
.incbin "base.gba", 0x6FC94, 0x4
_0806fc98:
.incbin "base.gba", 0x6FC98, 0x4
.incbin "base.gba", 0x6FC9C, 0x4
.incbin "base.gba", 0x6FCA0, 0x4
.incbin "base.gba", 0x6FCA4, 0x4
.incbin "base.gba", 0x6FCA8, 0x4
.incbin "base.gba", 0x6FCAC, 0x4
.incbin "base.gba", 0x6FCB0, 0x4
.incbin "base.gba", 0x6FCB4, 0x4
.incbin "base.gba", 0x6FCB8, 0x4
.incbin "base.gba", 0x6FCBC, 0x4
.incbin "base.gba", 0x6FCC0, 0x4
_0806fcc4:
.incbin "base.gba", 0x6FCC4, 0x4
_0806fcc8:
.incbin "base.gba", 0x6FCC8, 0x4
.incbin "base.gba", 0x6FCCC, 0x4
.incbin "base.gba", 0x6FCD0, 0x4
.incbin "base.gba", 0x6FCD4, 0x4
.incbin "base.gba", 0x6FCD8, 0x4
.incbin "base.gba", 0x6FCDC, 0x4
.incbin "base.gba", 0x6FCE0, 0x4
.incbin "base.gba", 0x6FCE4, 0x4
.incbin "base.gba", 0x6FCE8, 0x4
.incbin "base.gba", 0x6FCEC, 0x4
.incbin "base.gba", 0x6FCF0, 0x4
_0806fcf4:
.incbin "base.gba", 0x6FCF4, 0x4
_0806fcf8:
.incbin "base.gba", 0x6FCF8, 0x4
.incbin "base.gba", 0x6FCFC, 0x4
.incbin "base.gba", 0x6FD00, 0x4
.incbin "base.gba", 0x6FD04, 0x4
.incbin "base.gba", 0x6FD08, 0x4
.incbin "base.gba", 0x6FD0C, 0x4
_0806fd10:
.incbin "base.gba", 0x6FD10, 0x4
.incbin "base.gba", 0x6FD14, 0x4
.incbin "base.gba", 0x6FD18, 0x4
.incbin "base.gba", 0x6FD1C, 0x4
.incbin "base.gba", 0x6FD20, 0x4
.incbin "base.gba", 0x6FD24, 0x4
_0806fd28:
.incbin "base.gba", 0x6FD28, 0x4
.incbin "base.gba", 0x6FD2C, 0x4
.incbin "base.gba", 0x6FD30, 0x4
.incbin "base.gba", 0x6FD34, 0x4
.incbin "base.gba", 0x6FD38, 0x4
_0806fd3c:
.incbin "base.gba", 0x6FD3C, 0x4
.incbin "base.gba", 0x6FD40, 0x4
.incbin "base.gba", 0x6FD44, 0x4
.incbin "base.gba", 0x6FD48, 0x4
_0806fd4c:
.incbin "base.gba", 0x6FD4C, 0x4
.incbin "base.gba", 0x6FD50, 0x4
.incbin "base.gba", 0x6FD54, 0x4
_0806fd58:
.incbin "base.gba", 0x6FD58, 0x4
.incbin "base.gba", 0x6FD5C, 0x4
.incbin "base.gba", 0x6FD60, 0x4
.incbin "base.gba", 0x6FD64, 0x4
_0806fd68:
.incbin "base.gba", 0x6FD68, 0x4
.incbin "base.gba", 0x6FD6C, 0x4
.incbin "base.gba", 0x6FD70, 0x4
.incbin "base.gba", 0x6FD74, 0x4
.incbin "base.gba", 0x6FD78, 0x4
.incbin "base.gba", 0x6FD7C, 0x4
.incbin "base.gba", 0x6FD80, 0x4
.incbin "base.gba", 0x6FD84, 0x4
_0806fd88:
.incbin "base.gba", 0x6FD88, 0x4
.incbin "base.gba", 0x6FD8C, 0x4
.incbin "base.gba", 0x6FD90, 0x4
.incbin "base.gba", 0x6FD94, 0x4
.incbin "base.gba", 0x6FD98, 0x4
.incbin "base.gba", 0x6FD9C, 0x4
.incbin "base.gba", 0x6FDA0, 0x4
_0806fda4:
.incbin "base.gba", 0x6FDA4, 0x4
_0806fda8:
.incbin "base.gba", 0x6FDA8, 0x4
.incbin "base.gba", 0x6FDAC, 0x4
.incbin "base.gba", 0x6FDB0, 0x4
.incbin "base.gba", 0x6FDB4, 0x4
.incbin "base.gba", 0x6FDB8, 0x4
.incbin "base.gba", 0x6FDBC, 0x4
.incbin "base.gba", 0x6FDC0, 0x4
.incbin "base.gba", 0x6FDC4, 0x4
.incbin "base.gba", 0x6FDC8, 0x4
.incbin "base.gba", 0x6FDCC, 0x4
.incbin "base.gba", 0x6FDD0, 0x4
.incbin "base.gba", 0x6FDD4, 0x4
.incbin "base.gba", 0x6FDD8, 0x4
_0806fddc:
.incbin "base.gba", 0x6FDDC, 0x4
.incbin "base.gba", 0x6FDE0, 0x4
.incbin "base.gba", 0x6FDE4, 0x4
_0806fde8:
.incbin "base.gba", 0x6FDE8, 0x4
.incbin "base.gba", 0x6FDEC, 0x4
.incbin "base.gba", 0x6FDF0, 0x4
.incbin "base.gba", 0x6FDF4, 0x4
.incbin "base.gba", 0x6FDF8, 0x4
.incbin "base.gba", 0x6FDFC, 0x4
.incbin "base.gba", 0x6FE00, 0x4
.incbin "base.gba", 0x6FE04, 0x4
_0806fe08:
.incbin "base.gba", 0x6FE08, 0x4
.incbin "base.gba", 0x6FE0C, 0x4
_0806fe10:
.incbin "base.gba", 0x6FE10, 0x4
.incbin "base.gba", 0x6FE14, 0x4
.incbin "base.gba", 0x6FE18, 0x4
_0806fe1c:
	ldr		r0, [sp, #0x4]
	sub		r0, #0x1
	ble		_0806fe26
	add		r4, #0x40
	b		_0806fb84
_0806fe26:
	ldr		r0, [sp, #0x18]
	ldr		r3, _0806fe3c
	str		r3, [r0, #0x0]
	add		sp, #0x1c
	pop		{ r0, r1, r2, r3, r4, r5, r6, r7 }
	mov		r8, r0
	mov		r9, r1
	mov		r10, r2
	mov		r11, r3
	pop		{ r3 }
	thumb_func_end sub_0806fa8c

	non_word_aligned_thumb_func_start sub_0806fe3a
sub_0806fe3a:
	bx		r3

.align 2, 0
_0806fe3c:	.4byte 0x68736D53
	mov		r12, r4
	mov		r1, #0x0
	mov		r2, #0x0
	mov		r3, #0x0
	mov		r4, #0x0
	stmia	r0!, {  r1, r2, r3, r4 }
	stmia	r0!, {  r1, r2, r3, r4 }
	stmia	r0!, {  r1, r2, r3, r4 }
	stmia	r0!, {  r1, r2, r3, r4 }
	mov		r4, r12
	bx		lr

.incbin "base.gba", 0x6FE56, 0x2
	thumb_func_end sub_0806fe3a

	thumb_func_start sub_0806fe58
sub_0806fe58:
	ldr		r3, [r0, #0x2c]
	cmp		r3, #0x0
	beq		_0806fe76
	ldr		r1, [r0, #0x34]
	ldr		r2, [r0, #0x30]
	cmp		r2, #0x0
	beq		_0806fe6a
	str		r1, [r2, #0x34]
	b		_0806fe6c
_0806fe6a:
	str		r1, [r3, #0x20]
_0806fe6c:
	cmp		r1, #0x0
	beq		_0806fe72
	str		r2, [r1, #0x30]
_0806fe72:
	mov		r1, #0x0
	str		r1, [r0, #0x2c]
_0806fe76:
	bx		lr
	thumb_func_end sub_0806fe58

	thumb_func_start sub_0806fe78
sub_0806fe78:
	push	{ r4, r5, lr }
	add		r5, r1, #0x0
	ldr		r4, [r5, #0x20]
	cmp		r4, #0x0
	beq		_0806fe9c
_0806fe82:
	ldrb	r1, [r4, #0x0]
	mov		r0, #0xc7
	tst		r0, r1
	beq		_0806fe90
	mov		r0, #0x40
	orr		r1, r0
	strb	r1, [r4, #0x0]
_0806fe90:
	add		r0, r4, #0x0
	bl		sub_0806fe58
	ldr		r4, [r4, #0x34]
	cmp		r4, #0x0
	bne		_0806fe82
_0806fe9c:
	mov		r0, #0x0
	strb	r0, [r5, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6FEA6, 0x2
	thumb_func_end sub_0806fe78

	thumb_func_start sub_0806fea8
sub_0806fea8:
	mov		r12, lr
	mov		r1, #0x24
	ldr		r2, _0806fed8
_0806feae:
	ldr		r3, [r2, #0x0]
	bl		sub_0806fec2
	stmia	r0!, {  r3 }
	add		r2, #0x4
	sub		r1, #0x1
	bgt		_0806feae
	bx		r12

.incbin "base.gba", 0x6FEBE, 0x2
	thumb_func_end sub_0806fea8

	thumb_func_start sub_0806fec0
sub_0806fec0:
	ldrb	r3, [r2, #0x0]
	thumb_func_end sub_0806fec0

	non_word_aligned_thumb_func_start sub_0806fec2
sub_0806fec2:
	push	{ r0 }
	lsr		r0, r2, #0x19
	bne		_0806fed4
	ldr		r0, _0806fed8
	cmp		r2, r0
	bcc		_0806fed2
	lsr		r0, r2, #0xe
	beq		_0806fed4
_0806fed2:
	mov		r3, #0x0
_0806fed4:
	pop		{ r0 }
	bx		lr

.align 2, 0
_0806fed8:	.4byte 0x08115300
	thumb_func_end sub_0806fec2

	non_word_aligned_thumb_func_start sub_0806fedc
sub_0806fedc:
	ldr		r2, [r1, #0x40]
	thumb_func_end sub_0806fedc

	non_word_aligned_thumb_func_start sub_0806fede
sub_0806fede:
	add		r3, r2, #0x1
	str		r3, [r1, #0x40]
	ldrb	r3, [r2, #0x0]
	b		sub_0806fec2

.incbin "base.gba", 0x6FEE6, 0x2
	push	{ lr }
_0806feea:
	ldr		r2, [r1, #0x40]
	ldrb	r0, [r2, #0x3]
	lsl		r0, r0, #0x8
	ldrb	r3, [r2, #0x2]
	orr		r0, r3
	lsl		r0, r0, #0x8
	ldrb	r3, [r2, #0x1]
	orr		r0, r3
	lsl		r0, r0, #0x8
	bl		sub_0806fec0
	orr		r0, r3
	str		r0, [r1, #0x40]
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6FF08, 0x1

_0806ff09:	.4byte 0x082a0378

.incbin "base.gba", 0x6FF0D, 0x17
	ldrb	r2, [r1, #0x2]
	cmp		r2, #0x0
	beq		_0806ff36
	sub		r2, #0x1
	strb	r2, [r1, #0x2]
	lsl		r2, r2, #0x2
	add		r3, r1, r2
	ldr		r2, [r3, #0x44]
	str		r2, [r1, #0x40]
_0806ff36:
	bx		lr
	thumb_func_end sub_0806fede

	thumb_func_start sub_0806ff38
sub_0806ff38:
	push	{ lr }
	ldr		r2, [r1, #0x40]
	ldrb	r3, [r2, #0x0]
	cmp		r3, #0x0
	bne		_0806ff48
	add		r2, #0x1
	str		r2, [r1, #0x40]
	b		_0806feea
_0806ff48:
	ldrb	r3, [r1, #0x3]
	add		r3, #0x1
	strb	r3, [r1, #0x3]
	mov		r12, r3
	bl		sub_0806fedc
	cmp		r12, r3
	bcs		_0806ff5a
	b		_0806feea
_0806ff5a:
	mov		r3, #0x0
	strb	r3, [r1, #0x3]
	add		r2, #0x5
	str		r2, [r1, #0x40]
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x6FF66, 0x2
	mov		r12, lr
	bl		sub_0806fedc
	strb	r3, [r1, #0x1d]
	bx		r12

.incbin "base.gba", 0x6FF72, 0x2
	mov		r12, lr
	bl		sub_0806fedc
	lsl		r3, r3, #0x1
	strh	r3, [r0, #0x1c]
	ldrh	r2, [r0, #0x1e]
	mul		r3, r2
	lsr		r3, r3, #0x8
	strh	r3, [r0, #0x20]
	bx		r12
	mov		r12, lr
	bl		sub_0806fedc
	strb	r3, [r1, #0xa]
	ldrb	r3, [r1, #0x0]
	mov		r2, #0xc
	orr		r3, r2
	strb	r3, [r1, #0x0]
	bx		r12

.incbin "base.gba", 0x6FF9A, 0x2
	mov		r12, lr
	ldr		r2, [r1, #0x40]
	ldrb	r3, [r2, #0x0]
	add		r2, #0x1
	str		r2, [r1, #0x40]
	lsl		r2, r3, #0x1
	add		r2, r2, r3
	lsl		r2, r2, #0x2
	ldr		r3, [r0, #0x30]
	add		r2, r2, r3
	ldr		r3, [r2, #0x0]
	bl		sub_0806fec2
	str		r3, [r1, #0x24]
	ldr		r3, [r2, #0x4]
	bl		sub_0806fec2
	str		r3, [r1, #0x28]
	ldr		r3, [r2, #0x8]
	bl		sub_0806fec2
	str		r3, [r1, #0x2c]
	bx		r12

.incbin "base.gba", 0x6FFCA, 0x2
	mov		r12, lr
	bl		sub_0806fedc
	strb	r3, [r1, #0x12]
	ldrb	r3, [r1, #0x0]
	mov		r2, #0x3
	orr		r3, r2
	strb	r3, [r1, #0x0]
	bx		r12

.incbin "base.gba", 0x6FFDE, 0x2
	mov		r12, lr
	bl		sub_0806fedc
	sub		r3, #0x40
	strb	r3, [r1, #0x14]
	ldrb	r3, [r1, #0x0]
	mov		r2, #0x3
	orr		r3, r2
	strb	r3, [r1, #0x0]
	bx		r12
	mov		r12, lr
	bl		sub_0806fedc
	sub		r3, #0x40
	strb	r3, [r1, #0xe]
	ldrb	r3, [r1, #0x0]
	mov		r2, #0xc
	orr		r3, r2
	strb	r3, [r1, #0x0]
	bx		r12
	mov		r12, lr
	bl		sub_0806fedc
	strb	r3, [r1, #0xf]
	ldrb	r3, [r1, #0x0]
	mov		r2, #0xc
	orr		r3, r2
	strb	r3, [r1, #0x0]
	bx		r12

.incbin "base.gba", 0x7001A, 0x2
	mov		r12, lr
	bl		sub_0806fedc
	strb	r3, [r1, #0x1b]
	bx		r12

.incbin "base.gba", 0x70026, 0x2
	mov		r12, lr
	bl		sub_0806fedc
	ldrb	r0, [r1, #0x18]
	cmp		r0, r3
	beq		_0807003e
	strb	r3, [r1, #0x18]
	ldrb	r3, [r1, #0x0]
	mov		r2, #0xf
	orr		r3, r2
	strb	r3, [r1, #0x0]
_0807003e:
	bx		r12
	mov		r12, lr
	bl		sub_0806fedc
	sub		r3, #0x40
	strb	r3, [r1, #0xc]
	ldrb	r3, [r1, #0x0]
	mov		r2, #0xc
	orr		r3, r2
	strb	r3, [r1, #0x0]
	bx		r12
	mov		r12, lr
	ldr		r2, [r1, #0x40]
	ldrb	r3, [r2, #0x0]
	add		r2, #0x1
	ldr		r0, _08070068
	add		r0, r0, r3
	bl		sub_0806fede
	strb	r3, [r0, #0x0]
	bx		r12

_08070068:	.4byte Channel1Sweepregister_NR10_
	thumb_func_end sub_0806ff38

	thumb_func_start sub_0807006c
sub_0807006c:
	ldr		r0, _08070308
	ldr		r0, [r0, #0x0]
	ldr		r2, _0807030c
	ldr		r3, [r0, #0x0]
	sub		r3, r3, r2
	cmp		r3, #0x1
	bhi		_0807009e
	ldrb	r1, [r0, #0x4]
	sub		r1, #0x1
	strb	r1, [r0, #0x4]
	bgt		_0807009e
	ldrb	r1, [r0, #0xb]
	strb	r1, [r0, #0x4]
	ldr		r2, _080700a0
	ldr		r1, [r2, #0x8]
	lsl		r1, r1, #0x7
	bcc		_08070092
	ldr		r1, _080700a4
	str		r1, [r2, #0x8]
_08070092:
	mov		r1, #0x4
	lsl		r1, r1, #0x8
	strh	r1, [r2, #0xa]
	mov		r1, #0xb6
	lsl		r1, r1, #0x8
	strh	r1, [r2, #0xa]
_0807009e:
	bx		lr

_080700a0:	.4byte DMA1SourceAddress
_080700a4:	.4byte 0x84400004
	ldr		r2, _0807030c
	ldr		r3, [r0, #0x34]
	cmp		r2, r3
	beq		_080700b2
	bx		lr
_080700b2:
	add		r3, #0x1
	str		r3, [r0, #0x34]
	push	{ r0, lr }
	ldr		r3, [r0, #0x38]
	cmp		r3, #0x0
	beq		_080700c4
	ldr		r0, [r0, #0x3c]
	bl		sub_08070300
_080700c4:
	pop		{ r0 }
	push	{ r4, r5, r6, r7 }
	mov		r4, r8
	mov		r5, r9
	mov		r6, r10
	mov		r7, r11
	push	{ r4, r5, r6, r7 }
	add		r7, r0, #0x0
	ldr		r0, [r7, #0x4]
	cmp		r0, #0x0
	bge		_080700dc
	b		_080702f0
_080700dc:
	ldr		r0, _08070308
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	add		r0, r7, #0x0
	bl		sub_08070f4c
	ldr		r0, [r7, #0x4]
	cmp		r0, #0x0
	bge		_080700f0
	b		_080702f0
_080700f0:
	ldrh	r0, [r7, #0x22]
	ldrh	r1, [r7, #0x20]
	add		r0, r0, r1
	b		_08070240
_080700f8:
	ldrb	r6, [r7, #0x8]
	ldr		r5, [r7, #0x2c]
	mov		r3, #0x1
	mov		r4, #0x0
_08070100:
	ldrb	r0, [r5, #0x0]
	mov		r1, #0x80
	tst		r1, r0
	bne		_0807010a
	b		_0807021c
_0807010a:
	mov		r10, r3
	orr		r4, r3
	mov		r11, r4
	ldr		r4, [r5, #0x20]
	cmp		r4, #0x0
	beq		_0807013e
_08070116:
	ldrb	r1, [r4, #0x0]
	mov		r0, #0xc7
	tst		r0, r1
	beq		_08070132
	ldrb	r0, [r4, #0x10]
	cmp		r0, #0x0
	beq		_08070138
	sub		r0, #0x1
	strb	r0, [r4, #0x10]
	bne		_08070138
	mov		r0, #0x40
	orr		r1, r0
	strb	r1, [r4, #0x0]
	b		_08070138
_08070132:
	add		r0, r4, #0x0
	bl		sub_08070a90
_08070138:
	ldr		r4, [r4, #0x34]
	cmp		r4, #0x0
	bne		_08070116
_0807013e:
	ldrb	r3, [r5, #0x0]
	mov		r0, #0x40
	tst		r0, r3
	beq		_080701bc
	add		r0, r5, #0x0
	bl		sub_08070aa4
	mov		r0, #0x80
	strb	r0, [r5, #0x0]
	mov		r0, #0x2
	strb	r0, [r5, #0xf]
	mov		r0, #0x40
	strb	r0, [r5, #0x13]
	mov		r0, #0x16
	strb	r0, [r5, #0x19]
	mov		r0, #0x1
	add		r1, r5, #0x6
	strb	r0, [r1, #0x1e]
	b		_080701bc
_08070164:
	ldr		r2, [r5, #0x40]
	ldrb	r1, [r2, #0x0]
	cmp		r1, #0x80
	bcs		_08070170
	ldrb	r1, [r5, #0x7]
	b		_0807017a
_08070170:
	add		r2, #0x1
	str		r2, [r5, #0x40]
	cmp		r1, #0xbd
	bcc		_0807017a
	strb	r1, [r5, #0x7]
_0807017a:
	cmp		r1, #0xcf
	bcc		_08070190
	mov		r0, r8
	ldr		r3, [r0, #0x38]
	add		r0, r1, #0x0
	sub		r0, #0xcf
	add		r1, r7, #0x0
	add		r2, r5, #0x0
	bl		sub_08070300
	b		_080701bc
_08070190:
	cmp		r1, #0xb0
	bls		_080701b2
	add		r0, r1, #0x0
	sub		r0, #0xb1
	strb	r0, [r7, #0xa]
	mov		r3, r8
	ldr		r3, [r3, #0x34]
	lsl		r0, r0, #0x2
	ldr		r3, [r3, r0]
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_08070300
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_08070218
	b		_080701bc
_080701b2:
	ldr		r0, _08070304
	sub		r1, #0x80
	add		r1, r1, r0
	ldrb	r0, [r1, #0x0]
	strb	r0, [r5, #0x1]
_080701bc:
	ldrb	r0, [r5, #0x1]
	cmp		r0, #0x0
	beq		_08070164
	sub		r0, #0x1
	strb	r0, [r5, #0x1]
	ldrb	r1, [r5, #0x19]
	cmp		r1, #0x0
	beq		_08070218
	ldrb	r0, [r5, #0x17]
	cmp		r0, #0x0
	beq		_08070218
	ldrb	r0, [r5, #0x1c]
	cmp		r0, #0x0
	beq		_080701de
	sub		r0, #0x1
	strb	r0, [r5, #0x1c]
	b		_08070218
_080701de:
	ldrb	r0, [r5, #0x1a]
	add		r0, r0, r1
	strb	r0, [r5, #0x1a]
	add		r1, r0, #0x0
	sub		r0, #0x40
	lsl		r0, r0, #0x18
	bpl		_080701f2
	lsl		r2, r1, #0x18
	asr		r2, r2, #0x18
	b		_080701f6
_080701f2:
	mov		r0, #0x80
	sub		r2, r0, r1
_080701f6:
	ldrb	r0, [r5, #0x17]
	mul		r0, r2
	asr		r2, r0, #0x6
	ldrb	r0, [r5, #0x16]
	eor		r0, r2
	lsl		r0, r0, #0x18
	beq		_08070218
	strb	r2, [r5, #0x16]
	ldrb	r0, [r5, #0x0]
	ldrb	r1, [r5, #0x18]
	cmp		r1, #0x0
	bne		_08070212
	mov		r1, #0xc
	b		_08070214
_08070212:
	mov		r1, #0x3
_08070214:
	orr		r0, r1
	strb	r0, [r5, #0x0]
_08070218:
	mov		r3, r10
	mov		r4, r11
_0807021c:
	sub		r6, #0x1
	ble		_08070228
	mov		r0, #0x50
	add		r5, r5, r0
	lsl		r3, r3, #0x1
	b		_08070100
_08070228:
	ldr		r0, [r7, #0xc]
	add		r0, #0x1
	str		r0, [r7, #0xc]
	cmp		r4, #0x0
	bne		_0807023a
	mov		r0, #0x80
	lsl		r0, r0, #0x18
	str		r0, [r7, #0x4]
	b		_080702f0
_0807023a:
	str		r4, [r7, #0x4]
	ldrh	r0, [r7, #0x22]
	sub		r0, #0x96
_08070240:
	strh	r0, [r7, #0x22]
	cmp		r0, #0x96
	bcc		_08070248
	b		_080700f8
_08070248:
	ldrb	r2, [r7, #0x8]
	ldr		r5, [r7, #0x2c]
_0807024c:
	ldrb	r0, [r5, #0x0]
	mov		r1, #0x80
	tst		r1, r0
	beq		_080702e6
	mov		r1, #0xf
	tst		r1, r0
	beq		_080702e6
	mov		r9, r2
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_08071014
	ldr		r4, [r5, #0x20]
	cmp		r4, #0x0
	beq		_080702dc
_0807026a:
	ldrb	r1, [r4, #0x0]
	mov		r0, #0xc7
	tst		r0, r1
	bne		_0807027a
	add		r0, r4, #0x0
	bl		sub_08070a90
	b		_080702d6
_0807027a:
	ldrb	r0, [r4, #0x1]
	mov		r6, #0x7
	and		r6, r0
	ldrb	r3, [r5, #0x0]
	mov		r0, #0x3
	tst		r0, r3
	beq		_08070298
	bl		sub_08070354
	cmp		r6, #0x0
	beq		_08070298
	ldrb	r0, [r4, #0x1d]
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r4, #0x1d]
_08070298:
	ldrb	r3, [r5, #0x0]
	mov		r0, #0xc
	tst		r0, r3
	beq		_080702d6
	ldrb	r1, [r4, #0x8]
	mov		r0, #0x8
	ldrsb	r0, [r5, r0]
	add		r2, r1, r0
	bpl		_080702ac
	mov		r2, #0x0
_080702ac:
	cmp		r6, #0x0
	beq		_080702ca
	mov		r0, r8
	ldr		r3, [r0, #0x30]
	add		r1, r2, #0x0
	ldrb	r2, [r5, #0x9]
	add		r0, r6, #0x0
	bl		sub_08070300
	str		r0, [r4, #0x20]
	ldrb	r0, [r4, #0x1d]
	mov		r1, #0x2
	orr		r0, r1
	strb	r0, [r4, #0x1d]
	b		_080702d6
_080702ca:
	add		r1, r2, #0x0
	ldrb	r2, [r5, #0x9]
	ldr		r0, [r4, #0x24]
	bl		sub_08070614
	str		r0, [r4, #0x20]
_080702d6:
	ldr		r4, [r4, #0x34]
	cmp		r4, #0x0
	bne		_0807026a
_080702dc:
	ldrb	r0, [r5, #0x0]
	mov		r1, #0xf0
	and		r0, r1
	strb	r0, [r5, #0x0]
	mov		r2, r9
_080702e6:
	sub		r2, #0x1
	ble		_080702f0
	mov		r0, #0x50
	add		r5, r5, r0
	bgt		_0807024c
_080702f0:
	ldr		r0, _0807030c
	str		r0, [r7, #0x34]
	pop		{ r0, r1, r2, r3, r4, r5, r6, r7 }
	mov		r8, r0
	mov		r9, r1
	mov		r10, r2
	mov		r11, r3
	pop		{ r3 }
	thumb_func_end sub_0807006c

	thumb_func_start sub_08070300
sub_08070300:
	bx		r3

.incbin "base.gba", 0x70302, 0x2

_08070304:	.4byte 0x08115574
_08070308:	.4byte 0x03007FF0
_0807030c:	.4byte 0x68736D53
	thumb_func_end sub_08070300

	thumb_func_start sub_08070310
sub_08070310:
	push	{ r4, r5, r6, lr }
	add		r5, r1, #0x0
	ldrb	r1, [r5, #0x0]
	mov		r0, #0x80
	tst		r0, r1
	beq		_08070348
	ldr		r4, [r5, #0x20]
	cmp		r4, #0x0
	beq		_08070346
	mov		r6, #0x0
_08070324:
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807033e
	ldrb	r0, [r4, #0x1]
	mov		r3, #0x7
	and		r0, r3
	beq		_0807033c
	ldr		r3, _08070350
	ldr		r3, [r3, #0x0]
	ldr		r3, [r3, #0x2c]
	bl		sub_08070300
_0807033c:
	strb	r6, [r4, #0x0]
_0807033e:
	str		r6, [r4, #0x2c]
	ldr		r4, [r4, #0x34]
	cmp		r4, #0x0
	bne		_08070324
_08070346:
	str		r4, [r5, #0x20]
_08070348:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7034E, 0x2

_08070350:	.4byte 0x03007FF0
	thumb_func_end sub_08070310

	thumb_func_start sub_08070354
sub_08070354:
	ldrb	r1, [r4, #0x12]
	mov		r0, #0x14
	ldrsb	r2, [r4, r0]
	mov		r3, #0x80
	add		r3, r3, r2
	mul		r3, r1
	ldrb	r0, [r5, #0x10]
	mul		r0, r3
	asr		r0, r0, #0xe
	cmp		r0, #0xff
	bls		_0807036c
	mov		r0, #0xff
_0807036c:
	strb	r0, [r4, #0x2]
	mov		r3, #0x7f
	sub		r3, r3, r2
	mul		r3, r1
	ldrb	r0, [r5, #0x11]
	mul		r0, r3
	asr		r0, r0, #0xe
	cmp		r0, #0xff
	bls		_08070380
	mov		r0, #0xff
_08070380:
	strb	r0, [r4, #0x3]
	bx		lr
	thumb_func_end sub_08070354

	thumb_func_start sub_08070384
sub_08070384:
	push	{ r4, r5, r6, r7, lr }
	mov		r4, r8
	mov		r5, r9
	mov		r6, r10
	mov		r7, r11
	push	{ r4, r5, r6, r7 }
	sub		sp, #0x18
	str		r1, [sp, #0x0]
	add		r5, r2, #0x0
	ldr		r1, _0807057c
	ldr		r1, [r1, #0x0]
	str		r1, [sp, #0x4]
	ldr		r1, _08070580
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	strb	r0, [r5, #0x4]
	ldr		r3, [r5, #0x40]
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x80
	bcs		_080703ca
	strb	r0, [r5, #0x5]
	add		r3, #0x1
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x80
	bcs		_080703c8
	strb	r0, [r5, #0x6]
	add		r3, #0x1
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x80
	bcs		_080703c8
	ldrb	r1, [r5, #0x4]
	add		r1, r1, r0
	strb	r1, [r5, #0x4]
	add		r3, #0x1
_080703c8:
	str		r3, [r5, #0x40]
_080703ca:
	mov		r0, #0x0
	str		r0, [sp, #0x14]
	add		r4, r5, #0x0
	add		r4, #0x24
	ldrb	r2, [r4, #0x0]
	mov		r0, #0xc0
	tst		r0, r2
	beq		_0807041c
	ldrb	r3, [r5, #0x5]
	mov		r0, #0x40
	tst		r0, r2
	beq		_080703ea
	ldr		r1, [r5, #0x2c]
	add		r1, r1, r3
	ldrb	r0, [r1, #0x0]
	b		_080703ec
_080703ea:
	add		r0, r3, #0x0
_080703ec:
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	ldr		r0, [r5, #0x28]
	add		r1, r1, r0
	mov		r9, r1
	mov		r6, r9
	ldrb	r1, [r6, #0x0]
	mov		r0, #0xc0
	tst		r0, r1
	beq		_08070404
	b		_0807056a
_08070404:
	mov		r0, #0x80
	tst		r0, r2
	beq		_08070420
	ldrb	r1, [r6, #0x3]
	mov		r0, #0x80
	tst		r0, r1
	beq		_08070418
	sub		r1, #0xc0
	lsl		r1, r1, #0x1
	str		r1, [sp, #0x14]
_08070418:
	ldrb	r3, [r6, #0x1]
	b		_08070420
_0807041c:
	mov		r9, r4
	ldrb	r3, [r5, #0x5]
_08070420:
	str		r3, [sp, #0x8]
	ldr		r6, [sp, #0x0]
	ldrb	r1, [r6, #0x9]
	ldrb	r0, [r5, #0x1d]
	add		r0, r0, r1
	cmp		r0, #0xff
	bls		_08070430
	mov		r0, #0xff
_08070430:
	str		r0, [sp, #0x10]
	mov		r6, r9
	ldrb	r0, [r6, #0x0]
	mov		r6, #0x7
	and		r6, r0
	str		r6, [sp, #0xC]
	beq		_08070470
	ldr		r0, [sp, #0x4]
	ldr		r4, [r0, #0x1c]
	cmp		r4, #0x0
	bne		_08070448
	b		_0807056a
_08070448:
	sub		r6, #0x1
	lsl		r0, r6, #0x6
	add		r4, r4, r0
	ldrb	r1, [r4, #0x0]
	mov		r0, #0xc7
	tst		r0, r1
	beq		_080704c4
	mov		r0, #0x40
	tst		r0, r1
	bne		_080704c4
	ldrb	r1, [r4, #0x13]
	ldr		r0, [sp, #0x10]
	cmp		r1, r0
	bcc		_080704c4
	beq		_08070468
	b		_0807056a
_08070468:
	ldr		r0, [r4, #0x2c]
	cmp		r0, r5
	bcs		_080704c4
	b		_0807056a
_08070470:
	ldr		r6, [sp, #0x10]
	add		r7, r5, #0x0
	mov		r2, #0x0
	mov		r8, r2
	ldr		r4, [sp, #0x4]
	ldrb	r3, [r4, #0x6]
	add		r4, #0x50
_0807047e:
	ldrb	r1, [r4, #0x0]
	mov		r0, #0xc7
	tst		r0, r1
	beq		_080704c4
	mov		r0, #0x40
	tst		r0, r1
	beq		_08070498
	cmp		r2, #0x0
	bne		_0807049c
	add		r2, #0x1
	ldrb	r6, [r4, #0x13]
	ldr		r7, [r4, #0x2c]
	b		_080704b6
_08070498:
	cmp		r2, #0x0
	bne		_080704b8
_0807049c:
	ldrb	r0, [r4, #0x13]
	cmp		r0, r6
	bcs		_080704a8
	add		r6, r0, #0x0
	ldr		r7, [r4, #0x2c]
	b		_080704b6
_080704a8:
	bhi		_080704b8
	ldr		r0, [r4, #0x2c]
	cmp		r0, r7
	bls		_080704b4
	add		r7, r0, #0x0
	b		_080704b6
_080704b4:
	bcc		_080704b8
_080704b6:
	mov		r8, r4
_080704b8:
	add		r4, #0x40
	sub		r3, #0x1
	bgt		_0807047e
	mov		r4, r8
	cmp		r4, #0x0
	beq		_0807056a
_080704c4:
	add		r0, r4, #0x0
	bl		sub_08070a90
	mov		r1, #0x0
	str		r1, [r4, #0x30]
	ldr		r3, [r5, #0x20]
	str		r3, [r4, #0x34]
	cmp		r3, #0x0
	beq		_080704d8
	str		r4, [r3, #0x30]
_080704d8:
	str		r4, [r5, #0x20]
	str		r5, [r4, #0x2c]
	ldrb	r0, [r5, #0x1b]
	strb	r0, [r5, #0x1c]
	cmp		r0, r1
	beq		_080704ea
	add		r1, r5, #0x0
	bl		sub_080705c4
_080704ea:
	ldr		r0, [sp, #0x0]
	add		r1, r5, #0x0
	bl		sub_08071014
	ldr		r0, [r5, #0x4]
	str		r0, [r4, #0x10]
	ldr		r0, [sp, #0x10]
	strb	r0, [r4, #0x13]
	ldr		r0, [sp, #0x8]
	strb	r0, [r4, #0x8]
	ldr		r0, [sp, #0x14]
	strb	r0, [r4, #0x14]
	mov		r6, r9
	ldrb	r0, [r6, #0x0]
	strb	r0, [r4, #0x1]
	ldr		r7, [r6, #0x4]
	str		r7, [r4, #0x24]
	ldr		r0, [r6, #0x8]
	str		r0, [r4, #0x4]
	ldrh	r0, [r5, #0x1e]
	strh	r0, [r4, #0xc]
	bl		sub_08070354
	ldrb	r1, [r4, #0x8]
	mov		r0, #0x8
	ldrsb	r0, [r5, r0]
	add		r3, r1, r0
	bpl		_08070524
	mov		r3, #0x0
_08070524:
	ldr		r6, [sp, #0xC]
	cmp		r6, #0x0
	beq		_08070552
	mov		r6, r9
	ldrb	r0, [r6, #0x2]
	strb	r0, [r4, #0x1e]
	ldrb	r1, [r6, #0x3]
	mov		r0, #0x80
	tst		r0, r1
	bne		_0807053e
	mov		r0, #0x70
	tst		r0, r1
	bne		_08070540
_0807053e:
	mov		r1, #0x8
_08070540:
	strb	r1, [r4, #0x1f]
	ldrb	r2, [r5, #0x9]
	add		r1, r3, #0x0
	ldr		r0, [sp, #0xC]
	ldr		r3, [sp, #0x4]
	ldr		r3, [r3, #0x30]
	bl		sub_08070300
	b		_0807055c
_08070552:
	ldrb	r2, [r5, #0x9]
	add		r1, r3, #0x0
	add		r0, r7, #0x0
	bl		sub_08070614
_0807055c:
	str		r0, [r4, #0x20]
	mov		r0, #0x80
	strb	r0, [r4, #0x0]
	ldrb	r1, [r5, #0x0]
	mov		r0, #0xf0
	and		r0, r1
	strb	r0, [r5, #0x0]
_0807056a:
	add		sp, #0x18
	pop		{ r0, r1, r2, r3, r4, r5, r6, r7 }
	mov		r8, r0
	mov		r9, r1
	mov		r10, r2
	mov		r11, r3
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7057A, 0x2

_0807057c:	.4byte 0x03007FF0
_08070580:	.4byte 0x08115574
	push	{ r4, r5 }
	ldr		r2, [r1, #0x40]
	ldrb	r3, [r2, #0x0]
	cmp		r3, #0x80
	bcs		_08070596
	strb	r3, [r1, #0x5]
	add		r2, #0x1
	str		r2, [r1, #0x40]
	b		_08070598
_08070596:
	ldrb	r3, [r1, #0x5]
_08070598:
	ldr		r1, [r1, #0x20]
	cmp		r1, #0x0
	beq		_080705c0
	mov		r4, #0x83
	mov		r5, #0x40
_080705a2:
	ldrb	r2, [r1, #0x0]
	tst		r2, r4
	beq		_080705ba
	tst		r2, r5
	bne		_080705ba
	ldrb	r0, [r1, #0x11]
	cmp		r0, r3
	bne		_080705ba
	mov		r0, #0x40
	orr		r2, r0
	strb	r2, [r1, #0x0]
	b		_080705c0
_080705ba:
	ldr		r1, [r1, #0x34]
	cmp		r1, #0x0
	bne		_080705a2
_080705c0:
	pop		{ r4, r5 }
	bx		lr
	thumb_func_end sub_08070384

	thumb_func_start sub_080705c4
sub_080705c4:
	mov		r2, #0x0
	strb	r2, [r1, #0x16]
	strb	r2, [r1, #0x1a]
	ldrb	r2, [r1, #0x18]
	cmp		r2, #0x0
	bne		_080705d4
	mov		r2, #0xc
	b		_080705d6
_080705d4:
	mov		r2, #0x3
_080705d6:
	ldrb	r3, [r1, #0x0]
	orr		r3, r2
	strb	r3, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x705DE, 0x2
	thumb_func_end sub_080705c4

	thumb_func_start sub_080705e0
sub_080705e0:
	ldr		r2, [r1, #0x40]
	add		r3, r2, #0x1
	str		r3, [r1, #0x40]
	ldrb	r3, [r2, #0x0]
	bx		lr

.incbin "base.gba", 0x705EA, 0x2
	mov		r12, lr
	bl		sub_080705e0
	strb	r3, [r1, #0x19]
	cmp		r3, #0x0
	bne		_080705fc
	bl		sub_080705c4
_080705fc:
	bx		r12

.incbin "base.gba", 0x705FE, 0x2
	mov		r12, lr
	bl		sub_080705e0
	strb	r3, [r1, #0x17]
	cmp		r3, #0x0
	bne		_08070610
	bl		sub_080705c4
_08070610:
	bx		r12

.incbin "base.gba", 0x70612, 0x2
	thumb_func_end sub_080705e0

	thumb_func_start sub_08070614
sub_08070614:
	push	{ r4, r5, r6, r7, lr }
	mov		r12, r0
	lsl		r1, r1, #0x18
	lsr		r6, r1, #0x18
	lsl		r7, r2, #0x18
	cmp		r6, #0xb2
	bls		_08070628
	mov		r6, #0xb2
	mov		r7, #0xff
	lsl		r7, r7, #0x18
_08070628:
	ldr		r3, _08070670
	add		r0, r6, r3
	ldrb	r5, [r0, #0x0]
	ldr		r4, _08070674
	mov		r2, #0xf
	add		r0, r5, #0x0
	and		r0, r2
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	lsr		r1, r5, #0x4
	ldr		r5, [r0, #0x0]
	lsr		r5, r1
	add		r0, r6, #0x1
	add		r0, r0, r3
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	and		r0, r2
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	lsr		r1, r1, #0x4
	ldr		r0, [r0, #0x0]
	lsr		r0, r1
	mov		r1, r12
	ldr		r4, [r1, #0x4]
	sub		r0, r0, r5
	add		r1, r7, #0x0
	bl		sub_0806fa7c
	add		r1, r0, #0x0
	add		r1, r5, r1
	add		r0, r4, #0x0
	bl		sub_0806fa7c
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08070670:	.4byte 0x08115390
_08070674:	.4byte 0x08115444

.incbin "base.gba", 0x70678, 0x20
	thumb_func_end sub_08070614

	thumb_func_start sub_08070698
sub_08070698:
	add		r2, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	ldr		r3, [r2, #0x34]
	ldr		r0, _080706b4
	cmp		r3, r0
	bne		_080706b0
	strh	r1, [r2, #0x26]
	strh	r1, [r2, #0x24]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	strh	r0, [r2, #0x28]
_080706b0:
	bx		lr

.incbin "base.gba", 0x706B2, 0x2

_080706b4:	.4byte 0x68736D53
	thumb_func_end sub_08070698

	thumb_func_start sub_080706b8
sub_080706b8:
	push	{ r4, r5, r6, lr }
	ldr		r0, _0807070c
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	ldr		r1, _08070710
	ldr		r2, _08070714
	bl		sub_08071b6c
	ldr		r0, _08070718
	bl		sub_08070ab8
	ldr		r0, _0807071c
	bl		sub_08070974
	ldr		r0, _08070720
	bl		sub_08070c28
	ldr		r0, _08070724
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_08070706
	ldr		r5, _08070728
	add		r6, r0, #0x0
_080706ea:
	ldr		r4, [r5, #0x0]
	ldr		r1, [r5, #0x4]
	ldrb	r2, [r5, #0x8]
	add		r0, r4, #0x0
	bl		sub_08070db0
	ldrh	r0, [r5, #0xa]
	strb	r0, [r4, #0xb]
	ldr		r0, _0807072c
	str		r0, [r4, #0x18]
	add		r5, #0xc
	sub		r6, #0x1
	cmp		r6, #0x0
	bne		_080706ea
_08070706:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0807070c:	.4byte 0x0806fb11
_08070710:	.4byte 0x03002990
_08070714:	.4byte DMA_Unused
_08070718:	.4byte 0x03006020
_0807071c:	.4byte 0x03006B30
_08070720:	.4byte 0x0093C600
_08070724:	.4byte 0x0000000B
_08070728:	.4byte 0x08124544
_0807072c:	.4byte 0x03006D70
	thumb_func_end sub_080706b8

	thumb_func_start sub_08070730
sub_08070730:
	push	{ lr }
	bl		sub_0806fa8c
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7073A, 0x2
	thumb_func_end sub_08070730

	thumb_func_start sub_0807073c
sub_0807073c:
	push	{ lr }
	lsl		r0, r0, #0x10
	ldr		r2, _08070760
	ldr		r1, _08070764
	lsr		r0, r0, #0xd
	add		r0, r0, r1
	ldrh	r3, [r0, #0x4]
	lsl		r1, r3, #0x1
	add		r1, r1, r3
	lsl		r1, r1, #0x2
	add		r1, r1, r2
	ldr		r2, [r1, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_08070e28
	pop		{ r0 }
	bx		r0

_08070760:	.4byte 0x08124544
_08070764:	.4byte 0x081245c8

.incbin "base.gba", 0x70768, 0xA0
	thumb_func_end sub_0807073c

	thumb_func_start sub_08070808
sub_08070808:
	push	{ lr }
	lsl		r0, r0, #0x10
	ldr		r2, _08070834
	ldr		r1, _08070838
	lsr		r0, r0, #0xd
	add		r0, r0, r1
	ldrh	r3, [r0, #0x4]
	lsl		r1, r3, #0x1
	add		r1, r1, r3
	lsl		r1, r1, #0x2
	add		r1, r1, r2
	ldr		r2, [r1, #0x0]
	ldr		r1, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bne		_0807082e
	add		r0, r2, #0x0
	bl		sub_08070f0c
_0807082e:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x70832, 0x2

_08070834:	.4byte 0x08124544
_08070838:	.4byte 0x081245c8

.incbin "base.gba", 0x7083C, 0x34
	thumb_func_end sub_08070808

	thumb_func_start sub_08070870
sub_08070870:
	push	{ r4, r5, lr }
	ldr		r0, _08070894
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_0807088e
	ldr		r5, _08070898
	add		r4, r0, #0x0
_08070880:
	ldr		r0, [r5, #0x0]
	bl		sub_08070f0c
	add		r5, #0xc
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08070880
_0807088e:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08070894:	.4byte 0x0000000B
_08070898:	.4byte 0x08124544

.incbin "base.gba", 0x7089C, 0x38
	thumb_func_end sub_08070870

	thumb_func_start sub_080708d4
sub_080708d4:
	push	{ lr }
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08070698
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x708E2, 0x2
	thumb_func_end sub_080708d4

	thumb_func_start sub_080708e4
sub_080708e4:
	add		r2, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	ldr		r3, [r2, #0x34]
	ldr		r0, _080708fc
	cmp		r3, r0
	bne		_080708fa
	strh	r1, [r2, #0x26]
	strh	r1, [r2, #0x24]
	ldr		r0, _08070900
	strh	r0, [r2, #0x28]
_080708fa:
	bx		lr

_080708fc:	.4byte 0x68736D53
_08070900:	.4byte 0x00000101
	thumb_func_end sub_080708e4

	thumb_func_start sub_08070904
sub_08070904:
	add		r2, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	ldr		r3, [r2, #0x34]
	ldr		r0, _08070924
	cmp		r3, r0
	bne		_08070922
	strh	r1, [r2, #0x26]
	strh	r1, [r2, #0x24]
	mov		r0, #0x2
	strh	r0, [r2, #0x28]
	ldr		r0, [r2, #0x4]
	ldr		r1, _08070928
	and		r0, r1
	str		r0, [r2, #0x4]
_08070922:
	bx		lr

_08070924:	.4byte 0x68736D53
_08070928:	.4byte 0x7FFFFFFF
	thumb_func_end sub_08070904

	thumb_func_start sub_0807092c
sub_0807092c:
	push	{ r4, r5, r6, r7, lr }
	ldrb	r5, [r0, #0x8]
	ldr		r4, [r0, #0x2c]
	cmp		r5, #0x0
	ble		_0807096e
	mov		r7, #0x80
_08070938:
	ldrb	r1, [r4, #0x0]
	add		r0, r7, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08070966
	mov		r6, #0x40
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08070966
	add		r0, r4, #0x0
	bl		sub_08070aa4
	strb	r7, [r4, #0x0]
	mov		r0, #0x2
	strb	r0, [r4, #0xf]
	strb	r6, [r4, #0x13]
	mov		r0, #0x16
	strb	r0, [r4, #0x19]
	add		r1, r4, #0x0
	add		r1, #0x24
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
_08070966:
	sub		r5, #0x1
	add		r4, #0x50
	cmp		r5, #0x0
	bgt		_08070938
_0807096e:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807092c

	thumb_func_start sub_08070974
sub_08070974:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	ldr		r1, _08070a3c
	mov		r0, #0x8f
	strh	r0, [r1, #0x0]
	ldr		r3, _08070a40
	mov		r2, #0x0
	strh	r2, [r3, #0x0]
	ldr		r0, _08070a44
	mov		r1, #0x8
	strb	r1, [r0, #0x0]
	add		r0, #0x6
	strb	r1, [r0, #0x0]
	add		r0, #0x10
	strb	r1, [r0, #0x0]
	sub		r0, #0x14
	mov		r1, #0x80
	strb	r1, [r0, #0x0]
	add		r0, #0x8
	strb	r1, [r0, #0x0]
	add		r0, #0x10
	strb	r1, [r0, #0x0]
	sub		r0, #0xd
	strb	r2, [r0, #0x0]
	mov		r0, #0x77
	strb	r0, [r3, #0x0]
	ldr		r0, _08070a48
	ldr		r4, [r0, #0x0]
	ldr		r6, [r4, #0x0]
	ldr		r0, _08070a4c
	cmp		r6, r0
	bne		_08070a34
	add		r0, r6, #0x1
	str		r0, [r4, #0x0]
	ldr		r1, _08070a50
	ldr		r0, _08070a54
	str		r0, [r1, #0x20]
	ldr		r0, _08070a58
	str		r0, [r1, #0x44]
	ldr		r0, _08070a5c
	str		r0, [r1, #0x4c]
	ldr		r0, _08070a60
	str		r0, [r1, #0x70]
	ldr		r0, _08070a64
	str		r0, [r1, #0x74]
	ldr		r0, _08070a68
	str		r0, [r1, #0x78]
	ldr		r0, _08070a6c
	str		r0, [r1, #0x7c]
	add		r2, r1, #0x0
	add		r2, #0x80
	ldr		r0, _08070a70
	str		r0, [r2, #0x0]
	add		r1, #0x84
	ldr		r0, _08070a74
	str		r0, [r1, #0x0]
	str		r5, [r4, #0x1c]
	ldr		r0, _08070a78
	str		r0, [r4, #0x28]
	ldr		r0, _08070a7c
	str		r0, [r4, #0x2c]
	ldr		r0, _08070a80
	str		r0, [r4, #0x30]
	ldr		r0, _08070a84
	mov		r1, #0x0
	strb	r0, [r4, #0xc]
	str		r1, [sp, #0x0]
	ldr		r2, _08070a88
	mov		r0, sp
	add		r1, r5, #0x0
	bl		sub_08071b6c
	mov		r0, #0x1
	strb	r0, [r5, #0x1]
	mov		r0, #0x11
	strb	r0, [r5, #0x1c]
	add		r1, r5, #0x0
	add		r1, #0x41
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	add		r1, #0x1b
	mov		r0, #0x22
	strb	r0, [r1, #0x0]
	add		r1, #0x25
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	add		r1, #0x1b
	mov		r0, #0x44
	strb	r0, [r1, #0x0]
	add		r1, #0x24
	mov		r0, #0x4
	strb	r0, [r1, #0x1]
	mov		r0, #0x88
	strb	r0, [r1, #0x1c]
	str		r6, [r4, #0x0]
_08070a34:
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08070a3c:	.4byte ControlSoundon_off_NR52_
_08070a40:	.4byte ControlStereo_Volume_Enable_NR50_NR51_
_08070a44:	.4byte Channel1Duty_Length_Envelope_NR11_NR12_ + 0x1
_08070a48:	.4byte 0x03007FF0
_08070a4c:	.4byte 0x68736D53
_08070a50:	.4byte 0x03006AA0
_08070a54:	.4byte sub_080718e8
_08070a58:	.4byte 0x080705ed
_08070a5c:	.4byte 0x08070601
_08070a60:	.4byte sub_08071a40
_08070a64:	.4byte 0x08070585
_08070a68:	.4byte 0x08070B85
_08070a6c:	.4byte 0x08070311
_08070a70:	.4byte 0x08070F4D
_08070a74:	.4byte 0x08071015
_08070a78:	.4byte sub_08071228
_08070a7c:	.4byte sub_08071170
_08070a80:	.4byte 0x080710c9
_08070a84:	.4byte 0x00000040
_08070a88:	.4byte 0x05000040

.incbin "base.gba", 0x70A8C, 0x4
	thumb_func_end sub_08070974

	thumb_func_start sub_08070a90
sub_08070a90:
	push	{ lr }
	ldr		r1, _08070aa0
	ldr		r1, [r1, #0x0]
	bl		sub_0807d7d4
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x70A9E, 0x2

_08070aa0:	.4byte 0x03006B28
	thumb_func_end sub_08070a90

	thumb_func_start sub_08070aa4
sub_08070aa4:
	push	{ lr }
	ldr		r1, _08070ab4
	ldr		r1, [r1, #0x0]
	bl		sub_0807d7d4
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x70AB2, 0x2

_08070ab4:	.4byte 0x03006B2C
	thumb_func_end sub_08070aa4

	thumb_func_start sub_08070ab8
sub_08070ab8:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r3, #0x0
	str		r3, [r5, #0x0]
	ldr		r2, _08070b50
	ldr		r0, [r2, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x12
	and		r0, r1
	cmp		r0, #0x0
	beq		_08070ad4
	ldr		r0, _08070b54
	str		r0, [r2, #0x0]
_08070ad4:
	ldr		r1, _08070b58
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	sub		r1, #0x42
	mov		r0, #0x8f
	strh	r0, [r1, #0x0]
	sub		r1, #0x2
	ldr		r2, _08070b5c
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	ldr		r2, _08070b60
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x3f
	and		r0, r1
	mov		r1, #0x40
	orr		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r1, _08070b64
	mov		r2, #0xd4
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	str		r0, [r1, #0x0]
	add		r1, #0x4
	ldr		r0, _08070b68
	str		r0, [r1, #0x0]
	ldr		r0, _08070b6c
	str		r5, [r0, #0x0]
	str		r3, [sp, #0x0]
	ldr		r2, _08070b70
	mov		r0, sp
	add		r1, r5, #0x0
	bl		sub_08071b6c
	mov		r0, #0x8
	strb	r0, [r5, #0x6]
	mov		r0, #0xf
	strb	r0, [r5, #0x7]
	ldr		r0, _08070b74
	str		r0, [r5, #0x38]
	ldr		r0, _08070b78
	str		r0, [r5, #0x28]
	str		r0, [r5, #0x2c]
	str		r0, [r5, #0x30]
	str		r0, [r5, #0x3c]
	ldr		r4, _08070b7c
	add		r0, r4, #0x0
	bl		sub_0806fea8
	str		r4, [r5, #0x34]
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	bl		sub_08070b84
	ldr		r0, _08070b80
	str		r0, [r5, #0x0]
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x70B4E, 0x2

_08070b50:	.4byte DMA1WordCount
_08070b54:	.4byte 0x84400004
_08070b58:	.4byte DMA1Control
_08070b5c:	.4byte 0x00000B0E
_08070b60:	.4byte SoundPWMControl + 0x1
_08070b64:	.4byte DMA1SourceAddress
_08070b68:	.4byte ChannelAFIFO_Data0_3
_08070b6c:	.4byte 0x03007FF0
_08070b70:	.4byte 0x05000260
_08070b74:	.4byte 0x08070385
_08070b78:	.4byte 0x08071b61
_08070b7c:	.4byte 0x03006AA0
_08070b80:	.4byte 0x68736D53
	thumb_func_end sub_08070ab8

	thumb_func_start sub_08070b84
sub_08070b84:
	push	{ r4, r5, r6, lr }
	add		r2, r0, #0x0
	ldr		r0, _08070c04
	ldr		r4, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0xc
	and		r0, r2
	lsr		r2, r0, #0x10
	mov		r6, #0x0
	strb	r2, [r4, #0x8]
	ldr		r1, _08070c08
	sub		r0, r2, #0x1
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrh	r5, [r0, #0x0]
	str		r5, [r4, #0x10]
	mov		r0, #0xc6
	lsl		r0, r0, #0x3
	add		r1, r5, #0x0
	bl		sub_0807d80c
	strb	r0, [r4, #0xb]
	ldr		r0, _08070c0c
	mul		r0, r5
	ldr		r1, _08070c10
	add		r0, r0, r1
	ldr		r1, _08070c14
	bl		sub_0807d80c
	add		r1, r0, #0x0
	str		r1, [r4, #0x14]
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	bl		sub_0807d80c
	add		r0, #0x1
	asr		r0, r0, #0x1
	str		r0, [r4, #0x18]
	ldr		r0, _08070c18
	strh	r6, [r0, #0x0]
	ldr		r4, _08070c1c
	ldr		r0, _08070c20
	add		r1, r5, #0x0
	bl		sub_0807d80c
	neg		r0, r0
	strh	r0, [r4, #0x0]
	bl		sub_08070d78
	ldr		r1, _08070c24
_08070be8:
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x9f
	beq		_08070be8
	ldr		r1, _08070c24
_08070bf0:
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x9f
	bne		_08070bf0
	ldr		r1, _08070c18
	mov		r0, #0x80
	strh	r0, [r1, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x70C02, 0x2

_08070c04:	.4byte 0x03007FF0
_08070c08:	.4byte 0x08115474
_08070c0c:	.4byte 0x00091D1B
_08070c10:	.4byte 0x00001388
_08070c14:	.4byte 0x00002710
_08070c18:	.4byte Timer0Control
_08070c1c:	.4byte Timer0Counter_Reload
_08070c20:	.4byte 0x00044940
_08070c24:	.4byte VerticalCounter_LY_
	thumb_func_end sub_08070b84

	thumb_func_start sub_08070c28
sub_08070c28:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	ldr		r0, _08070cb4
	ldr		r5, [r0, #0x0]
	ldr		r1, [r5, #0x0]
	ldr		r0, _08070cb8
	cmp		r1, r0
	bne		_08070cae
	add		r0, r1, #0x1
	str		r0, [r5, #0x0]
	mov		r4, #0xff
	and		r4, r3
	cmp		r4, #0x0
	beq		_08070c4a
	mov		r0, #0x7f
	and		r4, r0
	strb	r4, [r5, #0x5]
_08070c4a:
	mov		r4, #0xf0
	lsl		r4, r4, #0x4
	and		r4, r3
	cmp		r4, #0x0
	beq		_08070c6a
	lsr		r0, r4, #0x8
	strb	r0, [r5, #0x6]
	mov		r4, #0xc
	add		r0, r5, #0x0
	add		r0, #0x50
	mov		r1, #0x0
_08070c60:
	strb	r1, [r0, #0x0]
	sub		r4, #0x1
	add		r0, #0x40
	cmp		r4, #0x0
	bne		_08070c60
_08070c6a:
	mov		r4, #0xf0
	lsl		r4, r4, #0x8
	and		r4, r3
	cmp		r4, #0x0
	beq		_08070c78
	lsr		r0, r4, #0xc
	strb	r0, [r5, #0x7]
_08070c78:
	mov		r4, #0xb0
	lsl		r4, r4, #0x10
	and		r4, r3
	cmp		r4, #0x0
	beq		_08070c96
	mov		r0, #0xc0
	lsl		r0, r0, #0xe
	and		r0, r4
	lsr		r4, r0, #0xe
	ldr		r2, _08070cbc
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x3f
	and		r0, r1
	orr		r0, r4
	strb	r0, [r2, #0x0]
_08070c96:
	mov		r4, #0xf0
	lsl		r4, r4, #0xc
	and		r4, r3
	cmp		r4, #0x0
	beq		_08070caa
	bl		sub_08070d14
	add		r0, r4, #0x0
	bl		sub_08070b84
_08070caa:
	ldr		r0, _08070cb8
	str		r0, [r5, #0x0]
_08070cae:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08070cb4:	.4byte 0x03007FF0
_08070cb8:	.4byte 0x68736D53
_08070cbc:	.4byte SoundPWMControl + 0x1
	thumb_func_end sub_08070c28

	thumb_func_start sub_08070cc0
sub_08070cc0:
	push	{ r4, r5, r6, r7, lr }
	ldr		r0, _08070d0c
	ldr		r6, [r0, #0x0]
	ldr		r1, [r6, #0x0]
	ldr		r0, _08070d10
	cmp		r1, r0
	bne		_08070d06
	add		r0, r1, #0x1
	str		r0, [r6, #0x0]
	mov		r5, #0xc
	add		r4, r6, #0x0
	add		r4, #0x50
	mov		r0, #0x0
_08070cda:
	strb	r0, [r4, #0x0]
	sub		r5, #0x1
	add		r4, #0x40
	cmp		r5, #0x0
	bgt		_08070cda
	ldr		r4, [r6, #0x1c]
	cmp		r4, #0x0
	beq		_08070d02
	mov		r5, #0x1
	mov		r7, #0x0
_08070cee:
	lsl		r0, r5, #0x18
	lsr		r0, r0, #0x18
	ldr		r1, [r6, #0x2c]
	bl		sub_0807d7d4
	strb	r7, [r4, #0x0]
	add		r5, #0x1
	add		r4, #0x40
	cmp		r5, #0x4
	ble		_08070cee
_08070d02:
	ldr		r0, _08070d10
	str		r0, [r6, #0x0]
_08070d06:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08070d0c:	.4byte 0x03007FF0
_08070d10:	.4byte 0x68736D53
	thumb_func_end sub_08070cc0

	thumb_func_start sub_08070d14
sub_08070d14:
	push	{ lr }
	sub		sp, #0x4
	ldr		r0, _08070d60
	ldr		r2, [r0, #0x0]
	ldr		r1, [r2, #0x0]
	ldr		r3, _08070d64
	add		r0, r1, r3
	cmp		r0, #0x1
	bhi		_08070d5a
	add		r0, r1, #0x0
	add		r0, #0xa
	str		r0, [r2, #0x0]
	ldr		r3, _08070d68
	ldr		r0, [r3, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x12
	and		r0, r1
	cmp		r0, #0x0
	beq		_08070d3e
	ldr		r0, _08070d6c
	str		r0, [r3, #0x0]
_08070d3e:
	ldr		r1, _08070d70
	mov		r3, #0x80
	lsl		r3, r3, #0x3
	add		r0, r3, #0x0
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r0, #0xd4
	lsl		r0, r0, #0x2
	add		r1, r2, r0
	ldr		r2, _08070d74
	mov		r0, sp
	bl		sub_08071b6c
_08070d5a:
	add		sp, #0x4
	pop		{ r0 }
	bx		r0

_08070d60:	.4byte 0x03007FF0
_08070d64:	.4byte 0x978C92AD
_08070d68:	.4byte DMA1WordCount
_08070d6c:	.4byte 0x84400004
_08070d70:	.4byte DMA1Control
_08070d74:	.4byte 0x0500018C
	thumb_func_end sub_08070d14

	thumb_func_start sub_08070d78
sub_08070d78:
	push	{ r4, lr }
	ldr		r0, _08070da4
	ldr		r2, [r0, #0x0]
	ldr		r3, [r2, #0x0]
	ldr		r0, _08070da8
	cmp		r3, r0
	beq		_08070d9c
	ldr		r1, _08070dac
	mov		r4, #0xb6
	lsl		r4, r4, #0x8
	add		r0, r4, #0x0
	strh	r0, [r1, #0x0]
	ldrb	r0, [r2, #0x4]
	mov		r0, #0x0
	strb	r0, [r2, #0x4]
	add		r0, r3, #0x0
	sub		r0, #0xa
	str		r0, [r2, #0x0]
_08070d9c:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x70DA2, 0x2

_08070da4:	.4byte 0x03007FF0
_08070da8:	.4byte 0x68736D53
_08070dac:	.4byte DMA1Control
	thumb_func_end sub_08070d78

	thumb_func_start sub_08070db0
sub_08070db0:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	lsl		r2, r2, #0x18
	lsr		r4, r2, #0x18
	cmp		r4, #0x0
	beq		_08070e14
	cmp		r4, #0x10
	bls		_08070dc4
	mov		r4, #0x10
_08070dc4:
	ldr		r0, _08070e1c
	ldr		r5, [r0, #0x0]
	ldr		r1, [r5, #0x0]
	ldr		r0, _08070e20
	cmp		r1, r0
	bne		_08070e14
	add		r0, r1, #0x1
	str		r0, [r5, #0x0]
	add		r0, r7, #0x0
	bl		sub_08070aa4
	str		r6, [r7, #0x2c]
	strb	r4, [r7, #0x8]
	mov		r0, #0x80
	lsl		r0, r0, #0x18
	str		r0, [r7, #0x4]
	cmp		r4, #0x0
	beq		_08070df8
	mov		r1, #0x0
_08070dea:
	strb	r1, [r6, #0x0]
	sub		r0, r4, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	add		r6, #0x50
	cmp		r4, #0x0
	bne		_08070dea
_08070df8:
	ldr		r0, [r5, #0x20]
	cmp		r0, #0x0
	beq		_08070e08
	str		r0, [r7, #0x38]
	ldr		r0, [r5, #0x24]
	str		r0, [r7, #0x3c]
	mov		r0, #0x0
	str		r0, [r5, #0x20]
_08070e08:
	str		r7, [r5, #0x24]
	ldr		r0, _08070e24
	str		r0, [r5, #0x20]
	ldr		r0, _08070e20
	str		r0, [r5, #0x0]
	str		r0, [r7, #0x34]
_08070e14:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x70E1A, 0x2

_08070e1c:	.4byte 0x03007FF0
_08070e20:	.4byte 0x68736D53
_08070e24:	.4byte 0x080700a9
	thumb_func_end sub_08070db0

	thumb_func_start sub_08070e28
sub_08070e28:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	ldr		r1, [r5, #0x34]
	ldr		r0, _08070f08
	cmp		r1, r0
	bne		_08070efe
	ldrb	r0, [r5, #0xb]
	ldrb	r2, [r7, #0x2]
	cmp		r0, #0x0
	beq		_08070e6a
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_08070e54
	ldr		r1, [r5, #0x2c]
	mov		r0, #0x40
	ldrb	r1, [r1, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	bne		_08070e60
_08070e54:
	ldr		r1, [r5, #0x4]
	ldrh	r0, [r5, #0x4]
	cmp		r0, #0x0
	beq		_08070e6a
	cmp		r1, #0x0
	blt		_08070e6a
_08070e60:
	ldrb	r0, [r7, #0x2]
	add		r2, r0, #0x0
	ldrb	r0, [r5, #0x9]
	cmp		r0, r2
	bhi		_08070efe
_08070e6a:
	ldr		r0, [r5, #0x34]
	add		r0, #0x1
	str		r0, [r5, #0x34]
	mov		r1, #0x0
	str		r1, [r5, #0x4]
	str		r7, [r5, #0x0]
	ldr		r0, [r7, #0x4]
	str		r0, [r5, #0x30]
	strb	r2, [r5, #0x9]
	str		r1, [r5, #0xc]
	mov		r0, #0x96
	strh	r0, [r5, #0x1c]
	strh	r0, [r5, #0x20]
	add		r0, #0x6a
	strh	r0, [r5, #0x1e]
	strh	r1, [r5, #0x22]
	strh	r1, [r5, #0x24]
	mov		r6, #0x0
	ldr		r4, [r5, #0x2c]
	ldrb	r1, [r7, #0x0]
	cmp		r6, r1
	bge		_08070eca
	ldrb	r0, [r5, #0x8]
	cmp		r6, r0
	bge		_08070eea
	mov		r8, r6
_08070e9e:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08070310
	mov		r0, #0xc0
	strb	r0, [r4, #0x0]
	mov		r1, r8
	str		r1, [r4, #0x20]
	lsl		r1, r6, #0x2
	add		r0, r7, #0x0
	add		r0, #0x8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x40]
	add		r6, #0x1
	add		r4, #0x50
	ldrb	r0, [r7, #0x0]
	cmp		r6, r0
	bge		_08070eca
	ldrb	r1, [r5, #0x8]
	cmp		r6, r1
	blt		_08070e9e
_08070eca:
	ldrb	r0, [r5, #0x8]
	cmp		r6, r0
	bge		_08070eea
	mov		r1, #0x0
	mov		r8, r1
_08070ed4:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08070310
	mov		r0, r8
	strb	r0, [r4, #0x0]
	add		r6, #0x1
	add		r4, #0x50
	ldrb	r1, [r5, #0x8]
	cmp		r6, r1
	blt		_08070ed4
_08070eea:
	mov		r0, #0x80
	ldrb	r1, [r7, #0x3]
	and		r0, r1
	cmp		r0, #0x0
	beq		_08070efa
	ldrb	r0, [r7, #0x3]
	bl		sub_08070c28
_08070efa:
	ldr		r0, _08070f08
	str		r0, [r5, #0x34]
_08070efe:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08070f08:	.4byte 0x68736D53
	thumb_func_end sub_08070e28

	thumb_func_start sub_08070f0c
sub_08070f0c:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	ldr		r1, [r6, #0x34]
	ldr		r0, _08070f48
	cmp		r1, r0
	bne		_08070f42
	add		r0, r1, #0x1
	str		r0, [r6, #0x34]
	ldr		r0, [r6, #0x4]
	mov		r1, #0x80
	lsl		r1, r1, #0x18
	orr		r0, r1
	str		r0, [r6, #0x4]
	ldrb	r4, [r6, #0x8]
	ldr		r5, [r6, #0x2c]
	cmp		r4, #0x0
	ble		_08070f3e
_08070f2e:
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_08070310
	sub		r4, #0x1
	add		r5, #0x50
	cmp		r4, #0x0
	bgt		_08070f2e
_08070f3e:
	ldr		r0, _08070f48
	str		r0, [r6, #0x34]
_08070f42:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08070f48:	.4byte 0x68736D53
	thumb_func_end sub_08070f0c

	thumb_func_start sub_08070f4c
sub_08070f4c:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	ldrh	r1, [r6, #0x24]
	cmp		r1, #0x0
	beq		_0807100e
	ldrh	r0, [r6, #0x26]
	sub		r0, #0x1
	strh	r0, [r6, #0x26]
	ldr		r3, _08070f8c
	add		r2, r3, #0x0
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	cmp		r3, #0x0
	bne		_0807100e
	strh	r1, [r6, #0x26]
	ldrh	r1, [r6, #0x28]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08070f90
	add		r0, r1, #0x0
	add		r0, #0x10
	strh	r0, [r6, #0x28]
	and		r0, r2
	cmp		r0, #0xff
	bls		_08070fe2
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	strh	r0, [r6, #0x28]
	strh	r3, [r6, #0x24]
	b		_08070fe2

.incbin "base.gba", 0x70F8A, 0x2

_08070f8c:	.4byte 0x0000FFFF

_08070f90:
	add		r0, r1, #0x0
	sub		r0, #0x10
	strh	r0, [r6, #0x28]
	and		r0, r2
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bgt		_08070fe2
	ldrb	r5, [r6, #0x8]
	ldr		r4, [r6, #0x2c]
	cmp		r5, #0x0
	ble		_08070fc2
_08070fa6:
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_08070310
	mov		r0, #0x1
	ldrh	r7, [r6, #0x28]
	and		r0, r7
	cmp		r0, #0x0
	bne		_08070fba
	strb	r0, [r4, #0x0]
_08070fba:
	sub		r5, #0x1
	add		r4, #0x50
	cmp		r5, #0x0
	bgt		_08070fa6
_08070fc2:
	mov		r0, #0x1
	ldrh	r1, [r6, #0x28]
	and		r0, r1
	cmp		r0, #0x0
	beq		_08070fd6
	ldr		r0, [r6, #0x4]
	mov		r1, #0x80
	lsl		r1, r1, #0x18
	orr		r0, r1
	b		_08070fda
_08070fd6:
	mov		r0, #0x80
	lsl		r0, r0, #0x18
_08070fda:
	str		r0, [r6, #0x4]
	mov		r0, #0x0
	strh	r0, [r6, #0x24]
	b		_0807100e
_08070fe2:
	ldrb	r5, [r6, #0x8]
	ldr		r4, [r6, #0x2c]
	cmp		r5, #0x0
	ble		_0807100e
	mov		r3, #0x80
	mov		r7, #0x0
	mov		r2, #0x3
_08070ff0:
	ldrb	r1, [r4, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08071006
	ldrh	r7, [r6, #0x28]
	lsr		r0, r7, #0x2
	strb	r0, [r4, #0x13]
	add		r0, r1, #0x0
	orr		r0, r2
	strb	r0, [r4, #0x0]
_08071006:
	sub		r5, #0x1
	add		r4, #0x50
	cmp		r5, #0x0
	bgt		_08070ff0
_0807100e:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08070f4c

	thumb_func_start sub_08071014
sub_08071014:
	push	{ r4, lr }
	add		r2, r1, #0x0
	mov		r0, #0x1
	ldrb	r1, [r2, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_08071078
	ldrb	r3, [r2, #0x13]
	ldrb	r1, [r2, #0x12]
	add		r0, r3, #0x0
	mul		r0, r1
	lsr		r3, r0, #0x5
	ldrb	r4, [r2, #0x18]
	cmp		r4, #0x1
	bne		_0807103c
	mov		r0, #0x16
	ldrsb	r0, [r2, r0]
	add		r0, #0x80
	mul		r0, r3
	lsr		r3, r0, #0x7
_0807103c:
	mov		r0, #0x14
	ldrsb	r0, [r2, r0]
	lsl		r0, r0, #0x1
	mov		r1, #0x15
	ldrsb	r1, [r2, r1]
	add		r1, r0, r1
	cmp		r4, #0x2
	bne		_08071052
	mov		r0, #0x16
	ldrsb	r0, [r2, r0]
	add		r1, r1, r0
_08071052:
	mov		r0, #0x80
	neg		r0, r0
	cmp		r1, r0
	bge		_0807105e
	add		r1, r0, #0x0
	b		_08071064
_0807105e:
	cmp		r1, #0x7f
	ble		_08071064
	mov		r1, #0x7f
_08071064:
	add		r0, r1, #0x0
	add		r0, #0x80
	mul		r0, r3
	lsr		r0, r0, #0x8
	strb	r0, [r2, #0x10]
	mov		r0, #0x7f
	sub		r0, r0, r1
	mul		r0, r3
	lsr		r0, r0, #0x8
	strb	r0, [r2, #0x11]
_08071078:
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x4
	and		r0, r1
	add		r3, r1, #0x0
	cmp		r0, #0x0
	beq		_080710bc
	mov		r0, #0xe
	ldrsb	r0, [r2, r0]
	ldrb	r1, [r2, #0xf]
	mul		r0, r1
	mov		r1, #0xc
	ldrsb	r1, [r2, r1]
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	mov		r0, #0xa
	ldrsb	r0, [r2, r0]
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	mov		r0, #0xb
	ldrsb	r0, [r2, r0]
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	ldrb	r0, [r2, #0xd]
	add		r1, r0, r1
	ldrb	r0, [r2, #0x18]
	cmp		r0, #0x0
	bne		_080710b6
	mov		r0, #0x16
	ldrsb	r0, [r2, r0]
	lsl		r0, r0, #0x4
	add		r1, r1, r0
_080710b6:
	asr		r0, r1, #0x8
	strb	r0, [r2, #0x8]
	strb	r1, [r2, #0x9]
_080710bc:
	mov		r0, #0xfa
	and		r0, r3
	strb	r0, [r2, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	push	{ r4, r5, r6, r7, lr }
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	lsl		r1, r1, #0x18
	lsr		r5, r1, #0x18
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r12, r2
	cmp		r0, #0x4
	bne		_08071100
	cmp		r5, #0x14
	bhi		_080710e4
	mov		r5, #0x0
	b		_080710f2
_080710e4:
	add		r0, r5, #0x0
	sub		r0, #0x15
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	cmp		r5, #0x3b
	bls		_080710f2
	mov		r5, #0x3b
_080710f2:
	ldr		r0, _080710fc
	add		r0, r5, r0
	ldrb	r0, [r0, #0x0]
	b		_08071162

.incbin "base.gba", 0x710FA, 0x2

_080710fc:	.4byte 0x08115528

_08071100:
	cmp		r5, #0x23
	bhi		_0807110c
	mov		r0, #0x0
	mov		r12, r0
	mov		r5, #0x0
	b		_0807111e
_0807110c:
	add		r0, r5, #0x0
	sub		r0, #0x24
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	cmp		r5, #0x82
	bls		_0807111e
	mov		r5, #0x82
	mov		r1, #0xff
	mov		r12, r1
_0807111e:
	ldr		r3, _08071168
	add		r0, r5, r3
	ldrb	r6, [r0, #0x0]
	ldr		r4, _0807116c
	mov		r2, #0xf
	add		r0, r6, #0x0
	and		r0, r2
	lsl		r0, r0, #0x1
	add		r0, r0, r4
	mov		r7, #0x0
	ldrsh	r1, [r0, r7]
	asr		r0, r6, #0x4
	add		r6, r1, #0x0
	asr		r6, r0
	add		r0, r5, #0x1
	add		r0, r0, r3
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	and		r0, r2
	lsl		r0, r0, #0x1
	add		r0, r0, r4
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	asr		r1, r1, #0x4
	asr		r0, r1
	sub		r0, r0, r6
	mov		r7, r12
	mul		r7, r0
	add		r0, r7, #0x0
	asr		r0, r0, #0x8
	add		r0, r6, r0
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	add		r0, r0, r1
_08071162:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08071168:	.4byte 0x0811548c
_0807116c:	.4byte 0x08115510
	thumb_func_end sub_08071014

	thumb_func_start sub_08071170
sub_08071170:
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	add		r1, r0, #0x0
	cmp		r0, #0x2
	beq		_08071198
	cmp		r0, #0x2
	bgt		_08071184
	cmp		r0, #0x1
	beq		_0807118a
	b		_080711ac
_08071184:
	cmp		r1, #0x3
	beq		_080711a0
	b		_080711ac
_0807118a:
	ldr		r1, _08071194
	mov		r0, #0x8
	strb	r0, [r1, #0x0]
	add		r1, #0x2
	b		_080711b4

_08071194:	.4byte Channel1Duty_Length_Envelope_NR11_NR12_ + 0x1

_08071198:
	ldr		r1, _0807119c
	b		_080711ae

_0807119c:	.4byte Channel2Duty_Length_Envelope_NR21_NR22_ + 0x1

_080711a0:
	ldr		r1, _080711a8
	mov		r0, #0x0
	b		_080711b6

.incbin "base.gba", 0x711A6, 0x2

_080711a8:	.4byte Channel3Stop_WaveRAMselect_NR30_

_080711ac:
	ldr		r1, _080711bc
_080711ae:
	mov		r0, #0x8
	strb	r0, [r1, #0x0]
	add		r1, #0x4
_080711b4:
	mov		r0, #0x80
_080711b6:
	strb	r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x711BA, 0x2

_080711bc:	.4byte Channel4Length_Envelope_NR41_NR42_ + 0x1
	thumb_func_end sub_08071170

	thumb_func_start sub_080711c0
sub_080711c0:
	push	{ r4, lr }
	add		r1, r0, #0x0
	ldrb	r0, [r1, #0x2]
	lsl		r2, r0, #0x18
	lsr		r4, r2, #0x18
	ldrb	r3, [r1, #0x3]
	lsl		r0, r3, #0x18
	lsr		r3, r0, #0x18
	cmp		r4, r3
	bcc		_080711e0
	lsr		r0, r2, #0x19
	cmp		r0, r3
	bcc		_080711ec
	mov		r0, #0xf
	strb	r0, [r1, #0x1b]
	b		_080711fa
_080711e0:
	lsr		r0, r0, #0x19
	cmp		r0, r4
	bcc		_080711ec
	mov		r0, #0xf0
	strb	r0, [r1, #0x1b]
	b		_080711fa
_080711ec:
	mov		r0, #0xff
	strb	r0, [r1, #0x1b]
	ldrb	r2, [r1, #0x3]
	ldrb	r3, [r1, #0x2]
	add		r0, r2, r3
	lsr		r0, r0, #0x4
	b		_0807120a
_080711fa:
	ldrb	r2, [r1, #0x3]
	ldrb	r3, [r1, #0x2]
	add		r0, r2, r3
	lsr		r0, r0, #0x4
	strb	r0, [r1, #0xa]
	cmp		r0, #0xf
	bls		_0807120c
	mov		r0, #0xf
_0807120a:
	strb	r0, [r1, #0xa]
_0807120c:
	ldrb	r2, [r1, #0x6]
	ldrb	r3, [r1, #0xa]
	add		r0, r2, #0x0
	mul		r0, r3
	add		r0, #0xf
	asr		r0, r0, #0x4
	strb	r0, [r1, #0x19]
	ldrb	r0, [r1, #0x1c]
	ldrb	r2, [r1, #0x1b]
	and		r0, r2
	strb	r0, [r1, #0x1b]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080711c0

	thumb_func_start sub_08071228
sub_08071228:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x1c
	ldr		r0, _08071248
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x4]
	ldrb	r0, [r0, #0xa]
	cmp		r0, #0x0
	beq		_0807124c
	sub		r0, #0x1
	ldr		r1, [sp, #0x4]
	strb	r0, [r1, #0xa]
	b		_08071252

_08071248:	.4byte 0x03007FF0

_0807124c:
	mov		r0, #0xe
	ldr		r2, [sp, #0x4]
	strb	r0, [r2, #0xa]
_08071252:
	mov		r6, #0x1
	ldr		r0, [sp, #0x4]
	ldr		r4, [r0, #0x1c]
_08071258:
	ldrb	r1, [r4, #0x0]
	mov		r0, #0xc7
	and		r0, r1
	add		r2, r6, #0x1
	mov		r10, r2
	mov		r2, #0x40
	add		r2, r2, r4
	mov		r9, r2
	cmp		r0, #0x0
	bne		_0807126e
	b		_08071658
_0807126e:
	cmp		r6, #0x2
	beq		_080712a0
	cmp		r6, #0x2
	bgt		_0807127c
	cmp		r6, #0x1
	beq		_08071282
	b		_080712d8
_0807127c:
	cmp		r6, #0x3
	beq		_080712b8
	b		_080712d8
_08071282:
	ldr		r0, _08071294
	str		r0, [sp, #0x8]
	ldr		r7, _08071298
	ldr		r2, _0807129c
	str		r2, [sp, #0xC]
	add		r0, #0x4
	str		r0, [sp, #0x10]
	add		r2, #0x2
	b		_080712e8

_08071294:	.4byte Channel1Sweepregister_NR10_
_08071298:	.4byte Channel1Duty_Length_Envelope_NR11_NR12_
_0807129c:	.4byte Channel1Duty_Length_Envelope_NR11_NR12_ + 0x1

_080712a0:
	ldr		r0, _080712ac
	str		r0, [sp, #0x8]
	ldr		r7, _080712b0
	ldr		r2, _080712b4
	b		_080712e0

.incbin "base.gba", 0x712AA, 0x2

_080712ac:	.4byte Channel1Sweepregister_NR10_ + 0x1
_080712b0:	.4byte Channel2Duty_Length_Envelope_NR21_NR22_
_080712b4:	.4byte Channel2Duty_Length_Envelope_NR21_NR22_ + 0x1

_080712b8:
	ldr		r0, _080712cc
	str		r0, [sp, #0x8]
	ldr		r7, _080712d0
	ldr		r2, _080712d4
	str		r2, [sp, #0xC]
	add		r0, #0x4
	str		r0, [sp, #0x10]
	add		r2, #0x2
	b		_080712e8

.incbin "base.gba", 0x712CA, 0x2

_080712cc:	.4byte Channel3Stop_WaveRAMselect_NR30_
_080712d0:	.4byte Channel3Length_Volume_NR31_NR32_
_080712d4:	.4byte Channel3Length_Volume_NR31_NR32_ + 0x1

_080712d8:
	ldr		r0, _08071338
	str		r0, [sp, #0x8]
	ldr		r7, _0807133c
	ldr		r2, _08071340
_080712e0:
	str		r2, [sp, #0xC]
	add		r0, #0xb
	str		r0, [sp, #0x10]
	add		r2, #0x4
_080712e8:
	str		r2, [sp, #0x14]
	ldr		r0, [sp, #0x4]
	ldrb	r0, [r0, #0xa]
	str		r0, [sp, #0x0]
	ldr		r2, [sp, #0xC]
	ldrb	r0, [r2, #0x0]
	mov		r8, r0
	add		r2, r1, #0x0
	mov		r0, #0x80
	and		r0, r2
	cmp		r0, #0x0
	beq		_080713de
	mov		r3, #0x40
	add		r0, r3, #0x0
	and		r0, r2
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	add		r0, r6, #0x1
	mov		r10, r0
	mov		r1, #0x40
	add		r1, r1, r4
	mov		r9, r1
	cmp		r5, #0x0
	bne		_08071402
	mov		r0, #0x3
	strb	r0, [r4, #0x0]
	strb	r0, [r4, #0x1d]
	add		r0, r4, #0x0
	str		r3, [sp, #0x18]
	bl		sub_080711c0
	ldr		r3, [sp, #0x18]
	cmp		r6, #0x2
	beq		_08071350
	cmp		r6, #0x2
	bgt		_08071344
	cmp		r6, #0x1
	beq		_0807134a
	b		_080713a4

.incbin "base.gba", 0x71336, 0x2

_08071338:	.4byte Channel3Stop_WaveRAMselect_NR30_ + 0x1
_0807133c:	.4byte Channel4Length_Envelope_NR41_NR42_
_08071340:	.4byte Channel4Length_Envelope_NR41_NR42_ + 0x1

_08071344:
	cmp		r6, #0x3
	beq		_0807135c
	b		_080713a4
_0807134a:
	ldrb	r0, [r4, #0x1f]
	ldr		r2, [sp, #0x8]
	strb	r0, [r2, #0x0]
_08071350:
	ldr		r0, [r4, #0x24]
	lsl		r0, r0, #0x6
	ldrb	r1, [r4, #0x1e]
	add		r0, r1, r0
	strb	r0, [r7, #0x0]
	b		_080713b0
_0807135c:
	ldr		r1, [r4, #0x24]
	ldr		r0, [r4, #0x28]
	cmp		r1, r0
	beq		_08071384
	ldr		r2, [sp, #0x8]
	strb	r3, [r2, #0x0]
	ldr		r1, _08071398
	ldr		r2, [r4, #0x24]
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	add		r1, #0x4
	ldr		r0, [r2, #0x4]
	str		r0, [r1, #0x0]
	add		r1, #0x4
	ldr		r0, [r2, #0x8]
	str		r0, [r1, #0x0]
	add		r1, #0x4
	ldr		r0, [r2, #0xc]
	str		r0, [r1, #0x0]
	str		r2, [r4, #0x28]
_08071384:
	ldr		r0, [sp, #0x8]
	strb	r5, [r0, #0x0]
	ldrb	r0, [r4, #0x1e]
	strb	r0, [r7, #0x0]
	ldrb	r0, [r4, #0x1e]
	cmp		r0, #0x0
	beq		_0807139c
	mov		r0, #0xc0
	b		_080713be

.incbin "base.gba", 0x71396, 0x2

_08071398:	.4byte Channel3WavePatternRAM_2banks___

_0807139c:
	mov		r1, #0x80
	neg		r1, r1
	strb	r1, [r4, #0x1a]
	b		_080713c0
_080713a4:
	ldrb	r0, [r4, #0x1e]
	strb	r0, [r7, #0x0]
	ldr		r0, [r4, #0x24]
	lsl		r0, r0, #0x3
	ldr		r2, [sp, #0x10]
	strb	r0, [r2, #0x0]
_080713b0:
	ldrb	r0, [r4, #0x4]
	add		r0, #0x8
	mov		r8, r0
	ldrb	r0, [r4, #0x1e]
	cmp		r0, #0x0
	beq		_080713be
	mov		r0, #0x40
_080713be:
	strb	r0, [r4, #0x1a]
_080713c0:
	ldrb	r1, [r4, #0x4]
	mov		r2, #0x0
	strb	r1, [r4, #0xb]
	mov		r0, #0xff
	and		r0, r1
	add		r1, r6, #0x1
	mov		r10, r1
	mov		r1, #0x40
	add		r1, r1, r4
	mov		r9, r1
	cmp		r0, #0x0
	bne		_080713da
	b		_08071516
_080713da:
	strb	r2, [r4, #0x9]
	b		_08071544
_080713de:
	mov		r0, #0x4
	and		r0, r2
	cmp		r0, #0x0
	beq		_08071410
	ldrb	r0, [r4, #0xd]
	sub		r0, #0x1
	strb	r0, [r4, #0xd]
	mov		r2, #0xff
	and		r0, r2
	lsl		r0, r0, #0x18
	add		r1, r6, #0x1
	mov		r10, r1
	mov		r2, #0x40
	add		r2, r2, r4
	mov		r9, r2
	cmp		r0, #0x0
	ble		_08071402
	b		_08071556
_08071402:
	lsl		r0, r6, #0x18
	lsr		r0, r0, #0x18
	bl		sub_08071170
	mov		r0, #0x0
	strb	r0, [r4, #0x0]
	b		_08071654
_08071410:
	mov		r0, #0x40
	and		r0, r1
	add		r2, r6, #0x1
	mov		r10, r2
	mov		r2, #0x40
	add		r2, r2, r4
	mov		r9, r2
	cmp		r0, #0x0
	beq		_08071450
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	beq		_08071450
	mov		r0, #0xfc
	and		r0, r1
	mov		r2, #0x0
	strb	r0, [r4, #0x0]
	ldrb	r1, [r4, #0x7]
	strb	r1, [r4, #0xb]
	mov		r0, #0xff
	and		r0, r1
	cmp		r0, #0x0
	beq		_08071482
	mov		r0, #0x1
	ldrb	r1, [r4, #0x1d]
	orr		r0, r1
	strb	r0, [r4, #0x1d]
	cmp		r6, #0x3
	beq		_08071544
	ldrb	r2, [r4, #0x7]
	mov		r8, r2
	b		_08071544
_08071450:
	ldrb	r0, [r4, #0xb]
	cmp		r0, #0x0
	bne		_08071544
	cmp		r6, #0x3
	bne		_08071462
	mov		r0, #0x1
	ldrb	r1, [r4, #0x1d]
	orr		r0, r1
	strb	r0, [r4, #0x1d]
_08071462:
	add		r0, r4, #0x0
	bl		sub_080711c0
	mov		r0, #0x3
	ldrb	r2, [r4, #0x0]
	and		r0, r2
	cmp		r0, #0x0
	bne		_080714b6
	ldrb	r0, [r4, #0x9]
	sub		r0, #0x1
	strb	r0, [r4, #0x9]
	mov		r1, #0xff
	and		r0, r1
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bgt		_080714b2
_08071482:
	ldrb	r2, [r4, #0xc]
	ldrb	r1, [r4, #0xa]
	add		r0, r2, #0x0
	mul		r0, r1
	add		r0, #0xff
	asr		r0, r0, #0x8
	mov		r1, #0x0
	strb	r0, [r4, #0x9]
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	beq		_08071402
	mov		r0, #0x4
	ldrb	r2, [r4, #0x0]
	orr		r0, r2
	strb	r0, [r4, #0x0]
	mov		r0, #0x1
	ldrb	r1, [r4, #0x1d]
	orr		r0, r1
	strb	r0, [r4, #0x1d]
	cmp		r6, #0x3
	beq		_08071556
	mov		r2, #0x8
	mov		r8, r2
	b		_08071556
_080714b2:
	ldrb	r0, [r4, #0x7]
	b		_08071542
_080714b6:
	cmp		r0, #0x1
	bne		_080714c2
_080714ba:
	ldrb	r0, [r4, #0x19]
	strb	r0, [r4, #0x9]
	mov		r0, #0x7
	b		_08071542
_080714c2:
	cmp		r0, #0x2
	bne		_08071506
	ldrb	r0, [r4, #0x9]
	sub		r0, #0x1
	strb	r0, [r4, #0x9]
	mov		r1, #0xff
	and		r0, r1
	lsl		r0, r0, #0x18
	ldrb	r2, [r4, #0x19]
	lsl		r1, r2, #0x18
	cmp		r0, r1
	bgt		_08071502
_080714da:
	ldrb	r0, [r4, #0x6]
	cmp		r0, #0x0
	bne		_080714ea
	mov		r0, #0xfc
	ldrb	r1, [r4, #0x0]
	and		r0, r1
	strb	r0, [r4, #0x0]
	b		_08071482
_080714ea:
	ldrb	r0, [r4, #0x0]
	sub		r0, #0x1
	strb	r0, [r4, #0x0]
	mov		r0, #0x1
	ldrb	r2, [r4, #0x1d]
	orr		r0, r2
	strb	r0, [r4, #0x1d]
	cmp		r6, #0x3
	beq		_080714ba
	mov		r0, #0x8
	mov		r8, r0
	b		_080714ba
_08071502:
	ldrb	r0, [r4, #0x5]
	b		_08071542
_08071506:
	ldrb	r0, [r4, #0x9]
	add		r0, #0x1
	strb	r0, [r4, #0x9]
	mov		r1, #0xff
	and		r0, r1
	ldrb	r2, [r4, #0xa]
	cmp		r0, r2
	bcc		_08071540
_08071516:
	ldrb	r0, [r4, #0x0]
	sub		r0, #0x1
	mov		r2, #0x0
	strb	r0, [r4, #0x0]
	ldrb	r1, [r4, #0x5]
	strb	r1, [r4, #0xb]
	mov		r0, #0xff
	and		r0, r1
	cmp		r0, #0x0
	beq		_080714da
	mov		r0, #0x1
	ldrb	r1, [r4, #0x1d]
	orr		r0, r1
	strb	r0, [r4, #0x1d]
	ldrb	r0, [r4, #0xa]
	strb	r0, [r4, #0x9]
	cmp		r6, #0x3
	beq		_08071544
	ldrb	r2, [r4, #0x5]
	mov		r8, r2
	b		_08071544
_08071540:
	ldrb	r0, [r4, #0x4]
_08071542:
	strb	r0, [r4, #0xb]
_08071544:
	ldrb	r0, [r4, #0xb]
	sub		r0, #0x1
	strb	r0, [r4, #0xb]
	ldr		r0, [sp, #0x0]
	cmp		r0, #0x0
	bne		_08071556
	sub		r0, #0x1
	str		r0, [sp, #0x0]
	b		_08071450
_08071556:
	mov		r0, #0x2
	ldrb	r1, [r4, #0x1d]
	and		r0, r1
	cmp		r0, #0x0
	beq		_080715ce
	cmp		r6, #0x3
	bgt		_08071596
	mov		r0, #0x8
	ldrb	r2, [r4, #0x1]
	and		r0, r2
	cmp		r0, #0x0
	beq		_08071596
	ldr		r0, _08071580
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3f
	bgt		_08071588
	ldr		r0, [r4, #0x20]
	add		r0, #0x2
	ldr		r1, _08071584
	b		_08071592

.incbin "base.gba", 0x7157E, 0x2

_08071580:	.4byte SoundPWMControl + 0x1
_08071584:	.4byte 0x000007FC

_08071588:
	cmp		r0, #0x7f
	bgt		_08071596
	ldr		r0, [r4, #0x20]
	add		r0, #0x1
	ldr		r1, _080715a4
_08071592:
	and		r0, r1
	str		r0, [r4, #0x20]
_08071596:
	cmp		r6, #0x4
	beq		_080715a8
	ldr		r0, [r4, #0x20]
	ldr		r1, [sp, #0x10]
	strb	r0, [r1, #0x0]
	b		_080715b6

.incbin "base.gba", 0x715A2, 0x2

_080715a4:	.4byte 0x000007FE

_080715a8:
	ldr		r2, [sp, #0x10]
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x8
	and		r1, r0
	ldr		r0, [r4, #0x20]
	orr		r0, r1
	strb	r0, [r2, #0x0]
_080715b6:
	mov		r0, #0xc0
	ldrb	r1, [r4, #0x1a]
	and		r0, r1
	add		r1, r4, #0x0
	add		r1, #0x21
	ldrb	r1, [r1, #0x0]
	add		r0, r1, r0
	strb	r0, [r4, #0x1a]
	mov		r2, #0xff
	and		r0, r2
	ldr		r1, [sp, #0x14]
	strb	r0, [r1, #0x0]
_080715ce:
	mov		r0, #0x1
	ldrb	r2, [r4, #0x1d]
	and		r0, r2
	cmp		r0, #0x0
	beq		_08071654
	ldr		r1, _08071618
	ldrb	r0, [r1, #0x0]
	ldrb	r2, [r4, #0x1c]
	bic		r0, r2
	ldrb	r2, [r4, #0x1b]
	orr		r0, r2
	strb	r0, [r1, #0x0]
	cmp		r6, #0x3
	bne		_08071620
	ldr		r0, _0807161c
	ldrb	r1, [r4, #0x9]
	add		r0, r1, r0
	ldrb	r0, [r0, #0x0]
	ldr		r2, [sp, #0xC]
	strb	r0, [r2, #0x0]
	mov		r1, #0x80
	add		r0, r1, #0x0
	ldrb	r2, [r4, #0x1a]
	and		r0, r2
	cmp		r0, #0x0
	beq		_08071654
	ldr		r0, [sp, #0x8]
	strb	r1, [r0, #0x0]
	ldrb	r0, [r4, #0x1a]
	ldr		r1, [sp, #0x14]
	strb	r0, [r1, #0x0]
	mov		r0, #0x7f
	ldrb	r2, [r4, #0x1a]
	and		r0, r2
	strb	r0, [r4, #0x1a]
	b		_08071654

.incbin "base.gba", 0x71616, 0x2

_08071618:	.4byte ControlStereo_Volume_Enable_NR50_NR51_ + 0x1
_0807161c:	.4byte 0x08115564

_08071620:
	mov		r0, #0xf
	mov		r1, r8
	and		r1, r0
	mov		r8, r1
	ldrb	r2, [r4, #0x9]
	lsl		r0, r2, #0x4
	add		r0, r8
	ldr		r1, [sp, #0xC]
	strb	r0, [r1, #0x0]
	mov		r2, #0x80
	ldrb	r0, [r4, #0x1a]
	orr		r0, r2
	ldr		r1, [sp, #0x14]
	strb	r0, [r1, #0x0]
	cmp		r6, #0x1
	bne		_08071654
	ldr		r0, [sp, #0x8]
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08071654
	ldrb	r0, [r4, #0x1a]
	orr		r0, r2
	ldr		r1, [sp, #0x14]
	strb	r0, [r1, #0x0]
_08071654:
	mov		r0, #0x0
	strb	r0, [r4, #0x1d]
_08071658:
	mov		r6, r10
	mov		r4, r9
	cmp		r6, #0x4
	bgt		_08071662
	b		_08071258
_08071662:
	add		sp, #0x1c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x71672, 0x2
	thumb_func_end sub_08071228

	thumb_func_start sub_08071674
sub_08071674:
	push	{ r4, lr }
	add		r2, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	ldr		r3, [r2, #0x34]
	ldr		r0, _08071698
	cmp		r3, r0
	bne		_08071690
	strh	r1, [r2, #0x1e]
	ldrh	r4, [r2, #0x1c]
	add		r0, r1, #0x0
	mul		r0, r4
	asr		r0, r0, #0x8
	strh	r0, [r2, #0x20]
_08071690:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x71696, 0x2

_08071698:	.4byte 0x68736D53
	thumb_func_end sub_08071674

	thumb_func_start sub_0807169c
sub_0807169c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	lsl		r6, r2, #0x10
	ldr		r3, [r4, #0x34]
	ldr		r0, _08071700
	cmp		r3, r0
	bne		_080716f4
	add		r0, r3, #0x1
	str		r0, [r4, #0x34]
	ldrb	r2, [r4, #0x8]
	ldr		r1, [r4, #0x2c]
	mov		r5, #0x1
	cmp		r2, #0x0
	ble		_080716f0
	mov		r0, #0x80
	mov		r8, r0
	lsr		r6, r6, #0x12
	mov		r0, #0x3
	mov		r12, r0
_080716cc:
	add		r0, r7, #0x0
	and		r0, r5
	cmp		r0, #0x0
	beq		_080716e6
	ldrb	r3, [r1, #0x0]
	mov		r0, r8
	and		r0, r3
	cmp		r0, #0x0
	beq		_080716e6
	strb	r6, [r1, #0x13]
	mov		r0, r12
	orr		r0, r3
	strb	r0, [r1, #0x0]
_080716e6:
	sub		r2, #0x1
	add		r1, #0x50
	lsl		r5, r5, #0x1
	cmp		r2, #0x0
	bgt		_080716cc
_080716f0:
	ldr		r0, _08071700
	str		r0, [r4, #0x34]
_080716f4:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08071700:	.4byte 0x68736D53
	thumb_func_end sub_0807169c

	thumb_func_start sub_08071704
sub_08071704:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r12, r1
	lsl		r2, r2, #0x10
	lsr		r6, r2, #0x10
	ldr		r3, [r4, #0x34]
	ldr		r0, _08071774
	cmp		r3, r0
	bne		_08071766
	add		r0, r3, #0x1
	str		r0, [r4, #0x34]
	ldrb	r2, [r4, #0x8]
	ldr		r3, [r4, #0x2c]
	mov		r5, #0x1
	cmp		r2, #0x0
	ble		_08071762
	mov		r0, #0x80
	mov		r9, r0
	lsl		r0, r6, #0x10
	asr		r7, r0, #0x18
	mov		r0, #0xc
	mov		r8, r0
_0807173c:
	mov		r0, r12
	and		r0, r5
	cmp		r0, #0x0
	beq		_08071758
	ldrb	r1, [r3, #0x0]
	mov		r0, r9
	and		r0, r1
	cmp		r0, #0x0
	beq		_08071758
	strb	r7, [r3, #0xb]
	strb	r6, [r3, #0xd]
	mov		r0, r8
	orr		r0, r1
	strb	r0, [r3, #0x0]
_08071758:
	sub		r2, #0x1
	add		r3, #0x50
	lsl		r5, r5, #0x1
	cmp		r2, #0x0
	bgt		_0807173c
_08071762:
	ldr		r0, _08071774
	str		r0, [r4, #0x34]
_08071766:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08071774:	.4byte 0x68736D53
	thumb_func_end sub_08071704

	thumb_func_start sub_08071778
sub_08071778:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	lsl		r2, r2, #0x18
	lsr		r6, r2, #0x18
	ldr		r3, [r4, #0x34]
	ldr		r0, _080717dc
	cmp		r3, r0
	bne		_080717d0
	add		r0, r3, #0x1
	str		r0, [r4, #0x34]
	ldrb	r2, [r4, #0x8]
	ldr		r1, [r4, #0x2c]
	mov		r5, #0x1
	cmp		r2, #0x0
	ble		_080717cc
	mov		r0, #0x80
	mov		r8, r0
	mov		r0, #0x3
	mov		r12, r0
_080717a8:
	add		r0, r7, #0x0
	and		r0, r5
	cmp		r0, #0x0
	beq		_080717c2
	ldrb	r3, [r1, #0x0]
	mov		r0, r8
	and		r0, r3
	cmp		r0, #0x0
	beq		_080717c2
	strb	r6, [r1, #0x15]
	mov		r0, r12
	orr		r0, r3
	strb	r0, [r1, #0x0]
_080717c2:
	sub		r2, #0x1
	add		r1, #0x50
	lsl		r5, r5, #0x1
	cmp		r2, #0x0
	bgt		_080717a8
_080717cc:
	ldr		r0, _080717dc
	str		r0, [r4, #0x34]
_080717d0:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080717dc:	.4byte 0x68736D53
	thumb_func_end sub_08071778

	thumb_func_start sub_080717e0
sub_080717e0:
	add		r1, r0, #0x0
	mov		r2, #0x0
	mov		r0, #0x0
	strb	r0, [r1, #0x1a]
	strb	r0, [r1, #0x16]
	ldrb	r0, [r1, #0x18]
	cmp		r0, #0x0
	bne		_080717f4
	mov		r0, #0xc
	b		_080717f6
_080717f4:
	mov		r0, #0x3
_080717f6:
	ldrb	r2, [r1, #0x0]
	orr		r0, r2
	strb	r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x717FE, 0x2
	thumb_func_end sub_080717e0

	thumb_func_start sub_08071800
sub_08071800:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r10, r1
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r8, r2
	ldr		r1, [r6, #0x34]
	ldr		r0, _08071870
	cmp		r1, r0
	bne		_08071860
	add		r0, r1, #0x1
	str		r0, [r6, #0x34]
	ldrb	r5, [r6, #0x8]
	ldr		r4, [r6, #0x2c]
	mov		r7, #0x1
	cmp		r5, #0x0
	ble		_0807185c
	mov		r9, r8
_08071830:
	mov		r0, r10
	and		r0, r7
	cmp		r0, #0x0
	beq		_08071852
	mov		r0, #0x80
	ldrb	r1, [r4, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_08071852
	mov		r0, r8
	strb	r0, [r4, #0x17]
	mov		r1, r9
	cmp		r1, #0x0
	bne		_08071852
	add		r0, r4, #0x0
	bl		sub_080717e0
_08071852:
	sub		r5, #0x1
	add		r4, #0x50
	lsl		r7, r7, #0x1
	cmp		r5, #0x0
	bgt		_08071830
_0807185c:
	ldr		r0, _08071870
	str		r0, [r6, #0x34]
_08071860:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7186E, 0x2

_08071870:	.4byte 0x68736D53
	thumb_func_end sub_08071800

	thumb_func_start sub_08071874
sub_08071874:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r10, r1
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r8, r2
	ldr		r1, [r6, #0x34]
	ldr		r0, _080718e4
	cmp		r1, r0
	bne		_080718d4
	add		r0, r1, #0x1
	str		r0, [r6, #0x34]
	ldrb	r5, [r6, #0x8]
	ldr		r4, [r6, #0x2c]
	mov		r7, #0x1
	cmp		r5, #0x0
	ble		_080718d0
	mov		r9, r8
_080718a4:
	mov		r0, r10
	and		r0, r7
	cmp		r0, #0x0
	beq		_080718c6
	mov		r0, #0x80
	ldrb	r1, [r4, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_080718c6
	mov		r0, r8
	strb	r0, [r4, #0x19]
	mov		r1, r9
	cmp		r1, #0x0
	bne		_080718c6
	add		r0, r4, #0x0
	bl		sub_080717e0
_080718c6:
	sub		r5, #0x1
	add		r4, #0x50
	lsl		r7, r7, #0x1
	cmp		r5, #0x0
	bgt		_080718a4
_080718d0:
	ldr		r0, _080718e4
	str		r0, [r6, #0x34]
_080718d4:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x718E2, 0x2

_080718e4:	.4byte 0x68736D53
	thumb_func_end sub_08071874

	thumb_func_start sub_080718e8
sub_080718e8:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	ldr		r1, [r6, #0x40]
	ldrb	r5, [r1, #0x0]
	add		r2, r1, #0x1
	str		r2, [r6, #0x40]
	ldr		r0, [r4, #0x18]
	ldrb	r1, [r1, #0x1]
	add		r3, r1, r0
	add		r0, r2, #0x1
	str		r0, [r6, #0x40]
	ldrb	r2, [r2, #0x1]
	add		r0, #0x1
	str		r0, [r6, #0x40]
	cmp		r5, #0x11
	bls		_0807190c
	b		_08071a3a
_0807190c:
	lsl		r0, r5, #0x2
	ldr		r1, _08071918
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x71916, 0x2

_08071918:	.4byte 0x0807191c
_0807191c:	.4byte 0x08071964

.incbin "base.gba", 0x71920, 0x44
	thumb_func_end sub_080718e8


.incbin "base.gba", 0x71964, 0xD6

_08071a3a:

.incbin "base.gba", 0x71A3A, 0x6
	thumb_func_start sub_08071a40
sub_08071a40:
	push	{ lr }
	ldr		r2, [r1, #0x40]
	ldrb	r3, [r2, #0x0]
	add		r2, #0x1
	str		r2, [r1, #0x40]
	ldr		r2, _08071a5c
	lsl		r3, r3, #0x2
	add		r3, r3, r2
	ldr		r2, [r3, #0x0]
	bl		sub_0807d7d8
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x71A5A, 0x2

_08071a5c:	.4byte 0x081155a8
	thumb_func_end sub_08071a40

	thumb_func_start sub_08071a60
sub_08071a60:
	push	{ lr }
	ldr		r2, _08071a70
	ldr		r2, [r2, #0x0]
	bl		sub_0807d7d8
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x71A6E, 0x2

_08071a70:	.4byte 0x03006AA0
	thumb_func_end sub_08071a60

	thumb_func_start sub_08071a74
sub_08071a74:
	push	{ r4, lr }
	ldr		r2, [r1, #0x40]
	ldr		r0, _08071aac
	and		r4, r0
	ldrb	r0, [r2, #0x0]
	orr		r4, r0
	ldrb	r0, [r2, #0x1]
	lsl		r3, r0, #0x8
	ldr		r0, _08071ab0
	and		r4, r0
	orr		r4, r3
	ldrb	r0, [r2, #0x2]
	lsl		r3, r0, #0x10
	ldr		r0, _08071ab4
	and		r4, r0
	orr		r4, r3
	ldrb	r0, [r2, #0x3]
	lsl		r3, r0, #0x18
	ldr		r0, _08071ab8
	and		r4, r0
	orr		r4, r3
	str		r4, [r1, #0x28]
	add		r2, #0x4
	str		r2, [r1, #0x40]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x71AAA, 0x2

_08071aac:	.4byte 0xFFFFFF00
_08071ab0:	.4byte 0xFFFF00FF
_08071ab4:	.4byte 0xFF00FFFF
_08071ab8:	.4byte 0x00FFFFFF
	ldr		r0, [r1, #0x40]
	ldrb	r2, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x24
	strb	r2, [r0, #0x0]
	ldr		r0, [r1, #0x40]
	add		r0, #0x1
	str		r0, [r1, #0x40]
	bx		lr

.incbin "base.gba", 0x71ACE, 0x2
	ldr		r0, [r1, #0x40]
	ldrb	r2, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x2c
	strb	r2, [r0, #0x0]
	ldr		r0, [r1, #0x40]
	add		r0, #0x1
	str		r0, [r1, #0x40]
	bx		lr

.incbin "base.gba", 0x71AE2, 0x2
	ldr		r0, [r1, #0x40]
	ldrb	r0, [r0, #0x0]
	add		r2, r1, #0x0
	add		r2, #0x2d
	strb	r0, [r2, #0x0]
	ldr		r0, [r1, #0x40]
	add		r0, #0x1
	str		r0, [r1, #0x40]
	bx		lr

.incbin "base.gba", 0x71AF6, 0x2
	ldr		r0, [r1, #0x40]
	ldrb	r0, [r0, #0x0]
	add		r2, r1, #0x0
	add		r2, #0x2e
	strb	r0, [r2, #0x0]
	ldr		r0, [r1, #0x40]
	add		r0, #0x1
	str		r0, [r1, #0x40]
	bx		lr

.incbin "base.gba", 0x71B0A, 0x2
	ldr		r0, [r1, #0x40]
	ldrb	r0, [r0, #0x0]
	add		r2, r1, #0x0
	add		r2, #0x2f
	strb	r0, [r2, #0x0]
	ldr		r0, [r1, #0x40]
	add		r0, #0x1
	str		r0, [r1, #0x40]
	bx		lr

.incbin "base.gba", 0x71B1E, 0x2
	ldr		r0, [r1, #0x40]
	ldrb	r2, [r0, #0x0]
	strb	r2, [r1, #0x1e]
	add		r0, #0x1
	str		r0, [r1, #0x40]
	bx		lr
	ldr		r0, [r1, #0x40]
	ldrb	r2, [r0, #0x0]
	strb	r2, [r1, #0x1f]
	add		r0, #0x1
	str		r0, [r1, #0x40]
	bx		lr
	ldr		r0, [r1, #0x40]
	ldrb	r0, [r0, #0x0]
	add		r2, r1, #0x0
	add		r2, #0x26
	strb	r0, [r2, #0x0]
	ldr		r0, [r1, #0x40]
	add		r0, #0x1
	str		r0, [r1, #0x40]
	bx		lr

.incbin "base.gba", 0x71B4A, 0x2
	ldr		r0, [r1, #0x40]
	ldrb	r0, [r0, #0x0]
	add		r2, r1, #0x0
	add		r2, #0x27
	strb	r0, [r2, #0x0]
	ldr		r0, [r1, #0x40]
	add		r0, #0x1
	str		r0, [r1, #0x40]
	bx		lr

.incbin "base.gba", 0x71B5E, 0x2
	bx		lr

.incbin "base.gba", 0x71B62, 0x2
	thumb_func_end sub_08071a74

	thumb_func_start sub_08071b64
sub_08071b64:
	svc		0xa
	bx		lr
	thumb_func_end sub_08071b64

	thumb_func_start _CallHardwareSetCpuFast
_CallHardwareSetCpuFast: @ 8071B68
    swi	    0xc    @ CpuFastSet
	bx		lr
	thumb_func_end _CallHardwareSetCpuFast

	thumb_func_start sub_08071b6c
sub_08071b6c:
	svc		0xb
	bx		lr
	thumb_func_end sub_08071b6c

	thumb_func_start sub_08071b70
sub_08071b70:
	svc		0x6
	bx		lr
	thumb_func_end sub_08071b70

	thumb_func_start sub_08071b74
sub_08071b74:
	svc		0x6
	add		r0, r1, #0x0
	bx		lr

.incbin "base.gba", 0x71B7A, 0x2
	thumb_func_end sub_08071b74

	thumb_func_start _CallHardwareLZ77DecompressToMemory16Bit
_CallHardwareLZ77DecompressToMemory16Bit: @ 8071B7C
    swi	    0x12    @ LZ77UnCompReadNormalWrite16Bit
	bx		lr
	thumb_func_end _CallHardwareLZ77DecompressToMemory16Bit

	thumb_func_start _CallHardwareLZ77DecompressToMemory8Bit
_CallHardwareLZ77DecompressToMemory8Bit: @ 8071B80
    swi	    0x11    @ LZ77UnCompReadNormalWrite8Bit
	bx		lr
	thumb_func_end _CallHardwareLZ77DecompressToMemory8Bit

	thumb_func_start sub_08071b84
sub_08071b84:
	mov		r1, #0x1
	svc		0x25
	bx		lr

.incbin "base.gba", 0x71B8A, 0x2
	thumb_func_end sub_08071b84

	thumb_func_start sub_08071b8c
sub_08071b8c:
	ldr		r3, _08071b9c
	mov		r2, #0x0
	strb	r2, [r3, #0x0]
	ldr		r1, _08071ba0
	mov		sp, r1
	svc		0x1
	svc		0x0
		
	.2byte	0x0
	
_08071b9c:
	lsl		r0, r1, #0x8
	lsl		r0, r0, #0x10
_08071ba0:
	ldrb	r0, [r0, #0x1c]
	lsl		r0, r0, #0xc
	thumb_func_end sub_08071b8c

	thumb_func_start sub_08071ba4
sub_08071ba4:
	mov		r2, #0x0
	svc		0x5
	bx		lr

.incbin "base.gba", 0x71BAA, 0x2
	thumb_func_end sub_08071ba4

	thumb_func_start sub_08071bac
sub_08071bac:
	push	{ r4, r5, lr }
	sub		sp, #0x44
	mov		r0, sp
	bl		sub_08071df4
	mov		r5, sp
	add		r5, #0x1
	ldr		r2, _08071bd4
	mov		r0, #0xaa
	strb	r0, [r2, #0x0]
	ldr		r1, _08071bd8
	mov		r0, #0x55
	strb	r0, [r1, #0x0]
	mov		r0, #0x90
	strb	r0, [r2, #0x0]
	add		r1, sp, #0x40
	ldr		r2, _08071bdc
	add		r0, r2, #0x0
	b		_08071be4

.incbin "base.gba", 0x71BD2, 0x2

_08071bd4:	.4byte 0x0E005555
_08071bd8:	.4byte 0x0E002AAA
_08071bdc:	.4byte 0x00004E20

_08071be0:
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
_08071be4:
	strh	r0, [r1, #0x0]
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08071be0
	ldr		r0, _08071c1c
	bl		sub_0807d7e4
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x10
	mov		r0, #0xe0
	lsl		r0, r0, #0x14
	bl		sub_0807d7e4
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	orr		r4, r0
	ldr		r2, _08071c20
	mov		r0, #0xaa
	strb	r0, [r2, #0x0]
	ldr		r1, _08071c24
	mov		r0, #0x55
	strb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r2, #0x0]
	add		r1, sp, #0x40
	ldr		r2, _08071c28
	add		r0, r2, #0x0
	b		_08071c30

_08071c1c:	.4byte 0x0E000001
_08071c20:	.4byte 0x0E005555
_08071c24:	.4byte 0x0E002AAA
_08071c28:	.4byte 0x00004E20

_08071c2c:
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
_08071c30:
	strh	r0, [r1, #0x0]
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08071c2c
	add		r0, r4, #0x0
	add		sp, #0x44
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x71C42, 0x2
	thumb_func_end sub_08071bac

	thumb_func_start sub_08071c44
sub_08071c44:
	push	{ r4, lr }
	ldr		r2, _08071c64
	ldrh	r0, [r2, #0x0]
	ldr		r1, _08071c68
	and		r0, r1
	mov		r1, #0x3
	orr		r0, r1
	strh	r0, [r2, #0x0]
	bl		sub_08071bac
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	ldr		r2, _08071c6c
	mov		r4, #0x1
	b		_08071c72

.incbin "base.gba", 0x71C62, 0x2

_08071c64:	.4byte GamePakWaitstateControl
_08071c68:	.4byte 0x0000FFFC
_08071c6c:	.4byte 0x0820b720

_08071c70:
	add		r2, #0x4
_08071c72:
	ldr		r1, [r2, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x28
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08071c86
	ldrh		r0, [r1, #0x28]
	cmp		r3, r0
	bne		_08071c70
	mov		r4, #0x0
_08071c86:
	ldr		r1, _08071cc0
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r1, _08071cc4
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x4]
	str		r0, [r1, #0x0]
	ldr		r1, _08071cc8
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x8]
	str		r0, [r1, #0x0]
	ldr		r1, _08071ccc
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0xC]
	str		r0, [r1, #0x0]
	ldr		r1, _08071cd0
	ldr		r0, [r2, #0x0]
	ldr		r0, [r0, #0x10]
	str		r0, [r1, #0x0]
	ldr		r1, _08071cd4
	ldr		r0, [r2, #0x0]
	add		r0, #0x14
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x71CBE, 0x2

_08071cc0:	.4byte 0x03006E04
_08071cc4:	.4byte 0x03006E10
_08071cc8:	.4byte 0x03006E14
_08071ccc:	.4byte 0x03006E00
_08071cd0:	.4byte 0x030023C8
_08071cd4:	.4byte 0x03006E08
	ldr		r1, _08071cf4
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08071cf2
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08071cf2
	ldr		r1, _08071cf8
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
_08071cf2:
	bx		lr

_08071cf4:	.4byte 0x030023D2
_08071cf8:	.4byte 0x030023D4
	thumb_func_end sub_08071c44

	thumb_func_start sub_08071cfc
sub_08071cfc:
	add		r2, r1, #0x0
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x3
	bhi		_08071d30
	ldr		r0, _08071d20
	strb	r1, [r0, #0x0]
	ldr		r1, _08071d24
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	ldr		r3, _08071d28
	add		r0, r0, r3
	str		r0, [r1, #0x0]
	ldr		r0, _08071d2c
	str		r0, [r2, #0x0]
	mov		r0, #0x0
	b		_08071d32

.incbin "base.gba", 0x71D1E, 0x2

_08071d20:	.4byte 0x030023D0
_08071d24:	.4byte 0x030023D8
_08071d28:	.4byte Timer0Counter_Reload
_08071d2c:	.4byte 0x08071cd9

_08071d30:
	mov		r0, #0x1
_08071d32:
	bx		lr
	thumb_func_end sub_08071cfc

	thumb_func_start sub_08071d34
sub_08071d34:
	push	{ r4, r5, lr }
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	ldr		r1, _08071d8c
	lsl		r2, r0, #0x1
	add		r2, r2, r0
	lsl		r2, r2, #0x1
	ldr		r0, [r1, #0x0]
	add		r2, r2, r0
	ldr		r1, _08071d90
	ldr		r3, _08071d94
	ldrh	r0, [r3, #0x0]
	strh	r0, [r1, #0x0]
	mov		r5, #0x0
	strh	r5, [r3, #0x0]
	ldr		r4, _08071d98
	ldr		r0, _08071d9c
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x8
	lsl		r1, r0
	ldrh	r0, [r4, #0x0]
	orr		r0, r1
	strh	r0, [r4, #0x0]
	mov		r0, #0x1
	strh	r0, [r3, #0x0]
	ldr		r0, _08071da0
	strb	r5, [r0, #0x0]
	ldr		r1, _08071da4
	ldrh	r0, [r2, #0x0]
	strh	r0, [r1, #0x0]
	add		r2, #0x2
	ldr		r3, _08071da8
	ldr		r0, [r3, #0x0]
	ldrh	r1, [r2, #0x0]
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	str		r0, [r3, #0x0]
	ldrh	r1, [r2, #0x2]
	strh	r1, [r0, #0x0]
	sub		r0, #0x2
	str		r0, [r3, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08071d8c:	.4byte 0x030023C8
_08071d90:	.4byte 0x030023DC
_08071d94:	.4byte InterruptMasterEnableRegister
_08071d98:	.4byte InterruptEnableRegister
_08071d9c:	.4byte 0x030023D0
_08071da0:	.4byte 0x030023D4
_08071da4:	.4byte 0x030023D2
_08071da8:	.4byte 0x030023D8
	thumb_func_end sub_08071d34

	thumb_func_start sub_08071dac
sub_08071dac:
	ldr		r1, _08071ddc
	ldr		r0, [r1, #0x0]
	mov		r2, #0x0
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	str		r0, [r1, #0x0]
	strh	r2, [r0, #0x0]
	sub		r0, #0x2
	str		r0, [r1, #0x0]
	ldr		r3, _08071de0
	strh	r2, [r3, #0x0]
	ldr		r2, _08071de4
	ldr		r0, _08071de8
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x8
	lsl		r1, r0
	ldrh	r0, [r2, #0x0]
	bic		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r0, _08071dec
	ldrh	r0, [r0, #0x0]
	strh	r0, [r3, #0x0]
	bx		lr

.incbin "base.gba", 0x71DDA, 0x2

_08071ddc:	.4byte 0x030023D8
_08071de0:	.4byte InterruptMasterEnableRegister
_08071de4:	.4byte InterruptEnableRegister
_08071de8:	.4byte 0x030023D0
_08071dec:	.4byte 0x030023DC

.incbin "base.gba", 0x71Df0, 0x2
	thumb_func_end sub_08071dac


.incbin "base.gba", 0x71DF2, 0x2
	thumb_func_start sub_08071df4
sub_08071df4:
	add		r2, r0, #0x0
	ldr		r1, _08071e0c
	add		r0, r2, #0x1
	str		r0, [r1, #0x0]
	ldr		r3, _08071e10
	mov		r0, #0x1
	eor		r3, r0
	ldr		r0, _08071e14
	ldr		r1, _08071e10
	sub		r0, r0, r1
	lsl		r0, r0, #0xf
	b		_08071e24

_08071e0c:	.4byte 0x030023CC
_08071e10:	.4byte 0x08071DF1
_08071e14:	.4byte 0x08071DF5

_08071e18:
	ldrh	r0, [r3, #0x0]
	strh	r0, [r2, #0x0]
	add		r3, #0x2
	add		r2, #0x2
	sub		r0, r1, #0x1
	lsl		r0, r0, #0x10
_08071e24:
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_08071e18
	bx		lr
	thumb_func_end sub_08071df4

	thumb_func_start sub_08071e2c
sub_08071e2c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	lsl		r2, r2, #0x18
	lsr		r6, r2, #0x18
	mov		r0, #0x0
	mov		r8, r0
	add		r0, r4, #0x0
	bl		sub_08071d34
	ldr		r7, _08071e54
	mov		r0, #0xc0
	lsl		r0, r0, #0x8
	orr		r4, r0
	lsl		r4, r4, #0x10
	b		_08071e7c

_08071e54:	.4byte 0x030023CC

_08071e58:
	ldr		r0, _08071e70
	ldr		r1, [r0, #0x0]
	ldr		r0, _08071e74
	ldrh	r1, [r1, #0x14]
	cmp		r1, r0
	bne		_08071e6a
	ldr		r1, _08071e78
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
_08071e6a:
	lsr		r4, r4, #0x10
	mov		r8, r4
	b		_08071ea4

_08071e70:	.4byte 0x03006E08
_08071e74:	.4byte 0x00001CC2
_08071e78:	.4byte 0x0E005555

_08071e7c:
	ldr		r1, [r7, #0x0]
	add		r0, r5, #0x0
	bl		sub_0807d7d4
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, r6
	beq		_08071ea4
	ldr		r0, _08071eb4
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08071e7c
	ldr		r1, [r7, #0x0]
	add		r0, r5, #0x0
	bl		sub_0807d7d4
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, r6
	bne		_08071e58
_08071ea4:
	bl		sub_08071dac
	mov		r0, r8
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08071eb4:	.4byte 0x030023D4

.incbin "base.gba", 0x71eb8, 0x2
	thumb_func_end sub_08071e2c


.incbin "base.gba", 0x71EBA, 0x22
	thumb_func_start sub_08071edc
sub_08071edc:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x80
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	add		r7, r3, #0x0
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	ldr		r2, _08071f0c
	ldrh	r0, [r2, #0x0]
	ldr		r1, _08071f10
	and		r0, r1
	mov		r1, #0x3
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r3, _08071f14
	mov		r0, #0x1
	eor		r3, r0
	mov		r2, sp
	ldr		r0, _08071f18
	ldr		r1, _08071f14
	sub		r0, r0, r1
	lsl		r0, r0, #0xf
	b		_08071f28

.incbin "base.gba", 0x71F0A, 0x2

_08071f0c:	.4byte GamePakWaitstateControl
_08071f10:	.4byte 0x0000FFFC
_08071f14:	.4byte 0x08071EB9
_08071f18:	.4byte 0x08071EDD

_08071f1c:
	ldrh	r0, [r3, #0x0]
	strh	r0, [r2, #0x0]
	add		r3, #0x2
	add		r2, #0x2
	sub		r0, r1, #0x1
	lsl		r0, r0, #0x10
_08071f28:
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_08071f1c
	mov		r3, sp
	add		r3, #0x1
	ldr		r0, _08071f54
	ldrb	r0, [r0, #0x1c]
	lsl		r4, r0
	add		r0, r4, #0x0
	mov		r2, #0xe0
	lsl		r2, r2, #0x14
	add		r1, r5, r2
	add		r0, r0, r1
	add		r1, r6, #0x0
	add		r2, r7, #0x0
	bl		sub_0807d7dc
	add		sp, #0x80
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x71F52, 0x2

_08071f54:	.4byte 0x0820b7d4

.incbin "base.gba", 0x71F58, 0x2
	thumb_func_end sub_08071edc


.incbin "base.gba", 0x71F5A, 0x42
	thumb_func_start sub_08071f9c
sub_08071f9c:
	push	{ r4, r5, lr }
	sub		sp, #0x100
	add		r5, r1, #0x0
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	ldr		r2, _08071fc8
	ldrh	r0, [r2, #0x0]
	ldr		r1, _08071fcc
	and		r0, r1
	mov		r1, #0x3
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r3, _08071fd0
	mov		r0, #0x1
	eor		r3, r0
	mov		r2, sp
	ldr		r0, _08071fd4
	ldr		r1, _08071fd0
	sub		r0, r0, r1
	lsl		r0, r0, #0xf
	b		_08071fe4

.incbin "base.gba", 0x71FC6, 0x2

_08071fc8:	.4byte GamePakWaitstateControl
_08071fcc:	.4byte 0x0000FFFC
_08071fd0:	.4byte 0x08071F59
_08071fd4:	.4byte 0x08071F9D

_08071fd8:
	ldrh	r0, [r3, #0x0]
	strh	r0, [r2, #0x0]
	add		r3, #0x2
	add		r2, #0x2
	sub		r0, r1, #0x1
	lsl		r0, r0, #0x10
_08071fe4:
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_08071fd8
	mov		r3, sp
	add		r3, #0x1
	ldr		r0, _0807200c
	ldrb	r1, [r0, #0x1c]
	lsl		r4, r1
	add		r1, r4, #0x0
	mov		r2, #0xe0
	lsl		r2, r2, #0x14
	add		r1, r1, r2
	ldrh	r2, [r0, #0x18]
	add		r0, r5, #0x0
	bl		sub_0807d7dc
	add		sp, #0x100
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_0807200c:	.4byte 0x0820b7d4
	thumb_func_end sub_08071f9c

	thumb_func_start sub_08072010
sub_08072010:
	push	{ r4, r5, r6, lr }
	add		r5, r1, #0x0
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	mov		r6, #0x0
	b		_08072022
_0807201c:
	add		r0, r6, #0x1
	lsl		r0, r0, #0x18
	lsr		r6, r0, #0x18
_08072022:
	cmp		r6, #0x2
	bhi		_08072048
	ldr		r0, _08072050
	ldr		r2, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0807d7d8
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x0
	bne		_0807201c
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08071f9c
	add		r2, r0, #0x0
	cmp		r2, #0x0
	bne		_0807201c
_08072048:
	add		r0, r2, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08072050:	.4byte 0x03006E04
	thumb_func_end sub_08072010

	thumb_func_start sub_08072054
sub_08072054:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x40
	ldr		r5, _080720b0
	ldrh	r1, [r5, #0x0]
	ldr		r6, _080720b4
	and		r1, r6
	ldr		r0, _080720b8
	ldr		r0, [r0, #0x0]
	ldrh	r0, [r0, #0x10]
	orr		r0, r1
	strh	r0, [r5, #0x0]
	ldr		r1, _080720bc
	mov		r4, #0xaa
	strb	r4, [r1, #0x0]
	ldr		r3, _080720c0
	mov		r2, #0x55
	strb	r2, [r3, #0x0]
	mov		r0, #0x80
	strb	r0, [r1, #0x0]
	strb	r4, [r1, #0x0]
	strb	r2, [r3, #0x0]
	mov		r0, #0x10
	strb	r0, [r1, #0x0]
	mov		r0, sp
	bl		sub_08071df4
	ldr		r0, _080720c4
	mov		r1, #0xe0
	lsl		r1, r1, #0x14
	ldr		r3, [r0, #0x0]
	mov		r0, #0x3
	mov		r2, #0xff
	bl		sub_0807d7dc
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldrh	r1, [r5, #0x0]
	and		r1, r6
	mov		r2, #0x3
	orr		r1, r2
	strh	r1, [r5, #0x0]
	add		sp, #0x40
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x720AE, 0x2

_080720b0:	.4byte GamePakWaitstateControl
_080720b4:	.4byte 0x0000FFFC
_080720b8:	.4byte 0x03006E08
_080720bc:	.4byte 0x0E005555
_080720c0:	.4byte 0x0E002AAA
_080720c4:	.4byte 0x03006E00
	thumb_func_end sub_08072054

	thumb_func_start sub_080720c8
sub_080720c8:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	sub		sp, #0x40
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	cmp		r3, #0xf
	bhi		_08072150
	ldr		r6, _08072138
	ldrh	r1, [r6, #0x0]
	ldr		r0, _0807213c
	mov		r8, r0
	and		r1, r0
	ldr		r0, _08072140
	ldr		r2, [r0, #0x0]
	ldrh	r0, [r2, #0x10]
	orr		r0, r1
	strh	r0, [r6, #0x0]
	ldrb	r4, [r2, #0x8]
	lsl		r3, r4
	add		r4, r3, #0x0
	mov		r2, #0xe0
	lsl		r2, r2, #0x14
	add		r4, r4, r2
	ldr		r1, _08072144
	mov		r5, #0xaa
	strb	r5, [r1, #0x0]
	ldr		r3, _08072148
	mov		r2, #0x55
	strb	r2, [r3, #0x0]
	mov		r0, #0x80
	strb	r0, [r1, #0x0]
	strb	r5, [r1, #0x0]
	strb	r2, [r3, #0x0]
	mov		r0, #0x30
	strb	r0, [r4, #0x0]
	mov		r0, sp
	bl		sub_08071df4
	ldr		r0, _0807214c
	ldr		r3, [r0, #0x0]
	mov		r0, #0x2
	add		r1, r4, #0x0
	mov		r2, #0xff
	bl		sub_0807d7dc
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldrh	r1, [r6, #0x0]
	mov		r2, r8
	and		r1, r2
	mov		r2, #0x3
	orr		r1, r2
	strh	r1, [r6, #0x0]
	b		_08072152

.incbin "base.gba", 0x72136, 0x2

_08072138:	.4byte GamePakWaitstateControl
_0807213c:	.4byte 0x0000FFFC
_08072140:	.4byte 0x03006E08
_08072144:	.4byte 0x0E005555
_08072148:	.4byte 0x0E002AAA
_0807214c:	.4byte 0x03006E00

_08072150:
	ldr		r0, _08072160
_08072152:
	add		sp, #0x40
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7215E, 0x2

_08072160:	.4byte 0x000080FF
	thumb_func_end sub_080720c8

	thumb_func_start sub_08072164
sub_08072164:
	push	{ r4, lr }
	ldr		r4, _08072190
	mov		r2, #0xaa
	strb	r2, [r4, #0x0]
	ldr		r3, _08072194
	mov		r2, #0x55
	strb	r2, [r3, #0x0]
	mov		r2, #0xa0
	strb	r2, [r4, #0x0]
	ldrb	r2, [r0, #0x0]
	strb	r2, [r1, #0x0]
	ldr		r3, _08072198
	ldrb	r2, [r0, #0x0]
	ldr		r3, [r3, #0x0]
	mov		r0, #0x1
	bl		sub_0807d7dc
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08072190:	.4byte 0x0E005555
_08072194:	.4byte 0x0E002AAA
_08072198:	.4byte 0x03006E00
	thumb_func_end sub_08072164

	thumb_func_start sub_0807219c
sub_0807219c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x60
	mov		r9, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r8, r0
	cmp		r0, #0xf
	bls		_080721bc
	ldr		r0, _080721b8
	b		_080722aa

.incbin "base.gba", 0x721B6, 0x2

_080721b8:	.4byte 0x000080FF

_080721bc:
	ldr		r0, _080721dc
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x8]
	mov		r7, r8
	lsl		r7, r0
	mov		r0, #0xe0
	lsl		r0, r0, #0x14
	add		r7, r7, r0
	ldr		r1, _080721e0
	mov		r0, #0x1
	add		r3, r1, #0x0
	eor		r3, r0
	mov		r2, sp
	ldr		r0, _080721e4
	sub		r0, r0, r1
	b		_080721f2

_080721dc:	.4byte 0x03006E08
_080721e0:	.4byte 0x080722C1
_080721e4:	.4byte 0x080722E5

_080721e8:
	ldrh	r0, [r3, #0x0]
	strh	r0, [r2, #0x0]
	add		r3, #0x2
	add		r2, #0x2
	sub		r0, r1, #0x2
_080721f2:
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_080721e8
	mov		r4, #0x0
	b		_08072208
_080721fe:
	add		r0, r4, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	cmp		r4, #0x51
	beq		_080722a8
_08072208:
	mov		r0, r8
	bl		sub_080720c8
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	cmp		r5, #0x0
	bne		_080721fe
	add		r0, r7, #0x0
	mov		r1, sp
	add		r1, #0x1
	bl		sub_080722e4
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	cmp		r5, #0x0
	bne		_080721fe
	mov		r6, #0x1
	cmp		r4, #0x0
	beq		_08072230
	mov		r6, #0x6
_08072230:
	mov		r4, #0x1
	cmp		r4, r6
	bhi		_08072246
_08072236:
	mov		r0, r8
	bl		sub_080720c8
	add		r0, r4, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	cmp		r4, r6
	bls		_08072236
_08072246:
	mov		r0, sp
	bl		sub_08071df4
	ldr		r3, _08072268
	ldrh	r1, [r3, #0x0]
	ldr		r0, _0807226c
	and		r1, r0
	ldr		r0, _08072270
	ldr		r2, [r0, #0x0]
	ldrh	r0, [r2, #0x10]
	orr		r0, r1
	strh	r0, [r3, #0x0]
	ldr		r1, _08072274
	ldr		r0, [r2, #0x4]
	strh	r0, [r1, #0x0]
	add		r4, r1, #0x0
	b		_08072284

_08072268:	.4byte GamePakWaitstateControl
_0807226c:	.4byte 0x0000FFFC
_08072270:	.4byte 0x03006E08
_08072274:	.4byte 0x03006E0C

_08072278:
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x1
	strh	r0, [r4, #0x0]
	mov		r0, #0x1
	add		r9, r0
	add		r7, #0x1
_08072284:
	ldrh	r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0807229a
	mov		r0, r9
	add		r1, r7, #0x0
	bl		sub_08072164
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	cmp		r5, #0x0
	beq		_08072278
_0807229a:
	ldr		r2, _080722b8
	ldrh	r0, [r2, #0x0]
	ldr		r1, _080722bc
	and		r0, r1
	mov		r1, #0x3
	orr		r0, r1
	strh	r0, [r2, #0x0]
_080722a8:
	add		r0, r5, #0x0
_080722aa:
	add		sp, #0x60
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_080722b8:	.4byte GamePakWaitstateControl
_080722bc:	.4byte 0x0000FFFC

.incbin "base.gba", 0x722C0, 0x2
	thumb_func_end sub_0807219c


.incbin "base.gba", 0x722C2, 0x22
	thumb_func_start sub_080722e4
sub_080722e4:
	push	{ lr }
	bl		sub_0807d7d4
	cmp		r0, #0x0
	bne		_080722f2
	mov		r0, #0x0
	b		_080722f4
_080722f2:
	ldr		r0, _080722f8
_080722f4:
	pop		{ r1 }
	bx		r1

_080722f8:	.4byte 0x00008004
	thumb_func_end sub_080722e4

	thumb_func_start sub_080722fc
sub_080722fc:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x40
	add		r7, r1, #0x0
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	cmp		r4, #0xf
	bls		_08072314
	ldr		r0, _08072310
	b		_08072390

.incbin "base.gba", 0x7230E, 0x2

_08072310:	.4byte 0x000080FF

_08072314:
	add		r0, r4, #0x0
	bl		sub_080720c8
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	cmp		r5, #0x0
	bne		_0807238e
	mov		r0, sp
	bl		sub_08071df4
	ldr		r3, _08072350
	ldrh	r1, [r3, #0x0]
	ldr		r0, _08072354
	and		r1, r0
	ldr		r0, _08072358
	ldr		r2, [r0, #0x0]
	ldrh	r0, [r2, #0x10]
	orr		r0, r1
	strh	r0, [r3, #0x0]
	ldr		r1, _0807235c
	ldr		r0, [r2, #0x4]
	strh	r0, [r1, #0x0]
	ldrb	r0, [r2, #0x8]
	lsl		r4, r0
	mov		r0, #0xe0
	lsl		r0, r0, #0x14
	add		r4, r4, r0
	add		r6, r1, #0x0
	b		_0807236a

.incbin "base.gba", 0x7234E, 0x2

_08072350:	.4byte GamePakWaitstateControl
_08072354:	.4byte 0x0000FFFC
_08072358:	.4byte 0x03006E08
_0807235c:	.4byte 0x03006E0C

_08072360:
	ldrh	r0, [r6, #0x0]
	sub		r0, #0x1
	strh	r0, [r6, #0x0]
	add		r7, #0x1
	add		r4, #0x1
_0807236a:
	ldrh	r0, [r6, #0x0]
	cmp		r0, #0x0
	beq		_08072380
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_08072164
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	cmp		r5, #0x0
	beq		_08072360
_08072380:
	ldr		r2, _08072398
	ldrh	r0, [r2, #0x0]
	ldr		r1, _0807239c
	and		r0, r1
	mov		r1, #0x3
	orr		r0, r1
	strh	r0, [r2, #0x0]
_0807238e:
	add		r0, r5, #0x0
_08072390:
	add		sp, #0x40
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08072398:	.4byte GamePakWaitstateControl
_0807239c:	.4byte 0x0000FFFC
	thumb_func_end sub_080722fc

	thumb_func_start sub_080723a0
sub_080723a0:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x40
	mov		r0, sp
	bl		sub_08071df4
	ldr		r5, _080723f8
	ldrh	r0, [r5, #0x0]
	ldr		r6, _080723fc
	and		r0, r6
	ldr		r1, _08072400
	ldrh	r1, [r1, #0x24]
	orr		r0, r1
	strh	r0, [r5, #0x0]
	ldr		r1, _08072404
	mov		r4, #0xaa
	strb	r4, [r1, #0x0]
	ldr		r3, _08072408
	mov		r2, #0x55
	strb	r2, [r3, #0x0]
	mov		r0, #0x80
	strb	r0, [r1, #0x0]
	strb	r4, [r1, #0x0]
	strb	r2, [r3, #0x0]
	mov		r0, #0x10
	strb	r0, [r1, #0x0]
	ldr		r0, _0807240c
	mov		r1, #0xe0
	lsl		r1, r1, #0x14
	ldr		r3, [r0, #0x0]
	mov		r0, #0x3
	mov		r2, #0xff
	bl		sub_0807d7dc
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldrh	r1, [r5, #0x0]
	and		r1, r6
	mov		r2, #0x3
	orr		r1, r2
	strh	r1, [r5, #0x0]
	add		sp, #0x40
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_080723f8:	.4byte GamePakWaitstateControl
_080723fc:	.4byte 0x0000FFFC
_08072400:	.4byte 0x0820b928
_08072404:	.4byte 0x0E005555
_08072408:	.4byte 0x0E002AAA
_0807240c:	.4byte 0x03006E00
	thumb_func_end sub_080723a0

	thumb_func_start sub_08072410
sub_08072410:
	push	{ r4, r5, lr }
	lsl		r0, r0, #0x10
	ldr		r3, _08072480
	lsr		r0, r0, #0x10
	add		r4, r0, #0x0
	ldrb	r1, [r3, #0x1c]
	lsl		r4, r1
	mov		r0, #0xe0
	lsl		r0, r0, #0x14
	add		r4, r4, r0
	ldr		r1, _08072484
	ldrh	r0, [r1, #0x0]
	add		r5, r0, #0x0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r2, _08072488
	mov		r0, #0xaa
	strb	r0, [r2, #0x0]
	ldr		r1, _0807248c
	mov		r0, #0x55
	strb	r0, [r1, #0x0]
	mov		r0, #0xa0
	strb	r0, [r2, #0x0]
	ldr		r0, [r3, #0x18]
	cmp		r0, #0x0
	beq		_08072450
	mov		r1, #0xff
_08072446:
	strb	r1, [r4, #0x0]
	add		r4, #0x1
	sub		r0, #0x1
	cmp		r0, #0x0
	bne		_08072446
_08072450:
	sub		r4, #0x1
	ldr		r0, _08072484
	strh	r5, [r0, #0x0]
	ldr		r0, _08072490
	ldr		r3, [r0, #0x0]
	mov		r0, #0x1
	add		r1, r4, #0x0
	mov		r2, #0xff
	bl		sub_0807d7dc
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	beq		_08072476
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	and		r1, r0
	mov		r0, #0x2
	orr		r1, r0
_08072476:
	add		r0, r1, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7247E, 0x2

_08072480:	.4byte 0x0820b928
_08072484:	.4byte InterruptMasterEnableRegister
_08072488:	.4byte 0x0E005555
_0807248c:	.4byte 0x0E002AAA
_08072490:	.4byte 0x03006E00
	thumb_func_end sub_08072410

	thumb_func_start sub_08072494
sub_08072494:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x40
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	cmp		r4, #0xf
	bls		_080724a8
	ldr		r0, _080724a4
	b		_08072510

_080724a4:	.4byte 0x000080FF

_080724a8:
	mov		r0, sp
	bl		sub_08071df4
	ldr		r2, _080724c8
	ldrh	r0, [r2, #0x0]
	ldr		r1, _080724cc
	and		r0, r1
	ldr		r1, _080724d0
	ldrh	r1, [r1, #0x24]
	orr		r0, r1
	strh	r0, [r2, #0x0]
	lsl		r0, r4, #0x15
	lsr		r5, r0, #0x10
	mov		r6, #0x0
_080724c4:
	mov		r4, #0x2
	b		_080724de

_080724c8:	.4byte GamePakWaitstateControl
_080724cc:	.4byte 0x0000FFFC
_080724d0:	.4byte 0x0820b928

_080724d4:
	sub		r0, r4, #0x1
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	cmp		r4, #0x0
	beq		_080724ec
_080724de:
	add		r0, r5, #0x0
	bl		sub_08072410
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	cmp		r3, #0x0
	bne		_080724d4
_080724ec:
	add		r0, r5, #0x1
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	cmp		r3, #0x0
	bne		_08072500
	add		r0, r6, #0x1
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	cmp		r6, #0x1f
	bls		_080724c4
_08072500:
	ldr		r2, _08072518
	ldrh	r0, [r2, #0x0]
	ldr		r1, _0807251c
	and		r0, r1
	mov		r1, #0x3
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r0, r3, #0x0
_08072510:
	add		sp, #0x40
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08072518:	.4byte GamePakWaitstateControl
_0807251c:	.4byte 0x0000FFFC
	thumb_func_end sub_08072494

	thumb_func_start sub_08072520
sub_08072520:
	push	{ r4, r5, r6, lr }
	add		r5, r1, #0x0
	lsl		r0, r0, #0x10
	ldr		r3, _08072584
	lsr		r0, r0, #0x10
	add		r4, r0, #0x0
	ldrb	r1, [r3, #0x1c]
	lsl		r4, r1
	mov		r0, #0xe0
	lsl		r0, r0, #0x14
	add		r4, r4, r0
	ldr		r1, _08072588
	ldrh	r0, [r1, #0x0]
	add		r6, r0, #0x0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r2, _0807258c
	mov		r0, #0xaa
	strb	r0, [r2, #0x0]
	ldr		r1, _08072590
	mov		r0, #0x55
	strb	r0, [r1, #0x0]
	mov		r0, #0xa0
	strb	r0, [r2, #0x0]
	ldr		r1, [r3, #0x18]
	cmp		r1, #0x0
	beq		_08072564
_08072556:
	ldrb	r0, [r5, #0x0]
	strb	r0, [r4, #0x0]
	add		r5, #0x1
	add		r4, #0x1
	sub		r1, #0x1
	cmp		r1, #0x0
	bne		_08072556
_08072564:
	sub		r4, #0x1
	sub		r5, #0x1
	ldr		r0, _08072588
	strh	r6, [r0, #0x0]
	ldr		r0, _08072594
	ldrb	r2, [r5, #0x0]
	ldr		r3, [r0, #0x0]
	mov		r0, #0x1
	add		r1, r4, #0x0
	bl		sub_0807d7dc
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08072584:	.4byte 0x0820b928
_08072588:	.4byte InterruptMasterEnableRegister
_0807258c:	.4byte 0x0E005555
_08072590:	.4byte 0x0E002AAA
_08072594:	.4byte 0x03006E00
	thumb_func_end sub_08072520

	thumb_func_start sub_08072598
sub_08072598:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x40
	add		r7, r1, #0x0
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	cmp		r4, #0xf
	bls		_080725b4
	ldr		r0, _080725b0
	b		_08072646

.incbin "base.gba", 0x725AE, 0x2

_080725b0:	.4byte 0x000080FF

_080725b4:
	mov		r0, sp
	bl		sub_08071df4
	ldr		r2, _080725dc
	ldrh	r0, [r2, #0x0]
	ldr		r1, _080725e0
	and		r0, r1
	ldr		r1, _080725e4
	ldrh	r1, [r1, #0x24]
	orr		r0, r1
	strh	r0, [r2, #0x0]
	lsl		r0, r4, #0x15
	lsr		r5, r0, #0x10
	ldr		r1, _080725e8
	ldr		r0, _080725ec
	ldr		r0, [r0, #0x18]
	strh	r0, [r1, #0x0]
	add		r0, r1, #0x0
	mov		r8, r0
	b		_08072606

_080725dc:	.4byte GamePakWaitstateControl
_080725e0:	.4byte 0x0000FFFC
_080725e4:	.4byte 0x0820b928
_080725e8:	.4byte 0x03006E0C
_080725ec:	.4byte 0x0820b8fc

_080725f0:
	ldr		r0, _08072614
	ldr		r1, [r0, #0x18]
	mov		r2, r8
	ldrh	r2, [r2, #0x0]
	sub		r0, r2, r1
	mov		r3, r8
	strh	r0, [r3, #0x0]
	add		r7, r7, r1
	add		r0, r5, #0x1
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
_08072606:
	mov		r1, r8
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08072636
	mov		r4, #0x2
	b		_08072622

.incbin "base.gba", 0x72612, 0x2

_08072614:	.4byte 0x0820b928

_08072618:
	sub		r0, r4, #0x1
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	cmp		r4, #0x0
	beq		_08072632
_08072622:
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	bl		sub_08072520
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	cmp		r6, #0x0
	bne		_08072618
_08072632:
	cmp		r6, #0x0
	beq		_080725f0
_08072636:
	ldr		r2, _08072654
	ldrh	r0, [r2, #0x0]
	ldr		r1, _08072658
	and		r0, r1
	mov		r1, #0x3
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r0, r6, #0x0
_08072646:
	add		sp, #0x40
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x72652, 0x2

_08072654:	.4byte GamePakWaitstateControl
_08072658:	.4byte 0x0000FFFC
	thumb_func_end sub_08072598

	thumb_func_start sub_0807265c
sub_0807265c:
	push	{ r4, r5, r6, r7, lr }
	ldr		r6, _0807272c
	mov		r5, #0x0
	strh	r5, [r6, #0x0]
	ldr		r3, _08072730
	mov		r4, #0x0
	str		r4, [r3, #0x0]
	ldr		r0, _08072734
	strh	r4, [r0, #0x0]
	ldr		r2, _08072738
	strh	r4, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	ldr		r7, _0807273c
	add		r1, r7, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r0, _08072740
	mov		r2, #0xc0
	strh	r2, [r0, #0x0]
	ldr		r1, _08072744
	ldrh	r0, [r1, #0x0]
	orr		r0, r2
	strh	r0, [r1, #0x0]
	str		r4, [r3, #0x0]
	ldr		r7, _08072748
	ldrh	r0, [r7, #0x2]
	strh	r4, [r7, #0x2]
	mov		r0, #0xff
	strb	r0, [r7, #0x0]
	ldrb	r0, [r7, #0x4]
	strb	r5, [r7, #0x4]
	ldrb	r0, [r7, #0x6]
	mov		r0, #0x1
	neg		r0, r0
	strb	r0, [r7, #0x6]
	mov		r0, #0x0
	bl		sub_08072b58
	mov		r0, #0x0
	bl		sub_08072778
	str		r4, [r7, #0x3c]
	ldrh	r0, [r7, #0xc]
	strh	r4, [r7, #0xc]
	ldrh	r0, [r7, #0xe]
	strh	r4, [r7, #0xe]
	str		r4, [r7, #0x40]
	mov		r1, #0xce
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	str		r4, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x44
	ldrb	r1, [r0, #0x0]
	strb	r5, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x45
	ldrb	r0, [r1, #0x0]
	strb	r5, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x46
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	ldrb	r1, [r0, #0x0]
	strb	r5, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x49
	ldrb	r0, [r1, #0x0]
	strb	r5, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	strb	r5, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x4d
	ldrb	r0, [r1, #0x0]
	strb	r5, [r1, #0x0]
	mov		r2, #0xcb
	lsl		r2, r2, #0x2
	add		r1, r7, r2
	mov		r0, #0x4
	strh	r0, [r1, #0x0]
	mov		r0, #0xcc
	lsl		r0, r0, #0x2
	add		r1, r7, r0
	sub		r2, #0x8
	add		r0, r7, r2
	str		r0, [r1, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r1, r7, r0
	sub		r0, #0xd4
	strh	r0, [r1, #0x0]
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r1, r7, r2
	add		r0, r7, #0x0
	add		r0, #0xd4
	str		r0, [r1, #0x0]
	mov		r0, #0x1
	strh	r0, [r6, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807272c:	.4byte InterruptMasterEnableRegister
_08072730:	.4byte Timer3Counter_Reload
_08072734:	.4byte SIOModeSelect_GeneralPurposeData
_08072738:	.4byte SIOControlRegister
_0807273c:	.4byte 0x00004001
_08072740:	.4byte InterruptRequestFlags_IRQAcknowledge
_08072744:	.4byte InterruptEnableRegister
_08072748:	.4byte 0x03006E20
	thumb_func_end sub_0807265c

	thumb_func_start sub_0807274c
sub_0807274c:
	push	{ r4, lr }
	ldr		r3, _08072774
	mov		r0, #0xcb
	lsl		r0, r0, #0x2
	add		r2, r3, r0
	mov		r0, #0x4
	strh	r0, [r2, #0x0]
	mov		r4, #0xcc
	lsl		r4, r4, #0x2
	add		r1, r3, r4
	sub		r4, #0xc
	add		r0, r3, r4
	str		r0, [r1, #0x0]
	mov		r1, #0xcd
	lsl		r1, r1, #0x2
	add		r0, r3, r1
	str		r2, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08072774:	.4byte 0x03006E20
	thumb_func_end sub_0807274c

	thumb_func_start sub_08072778
sub_08072778:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _080727e4
	ldrb	r1, [r0, #0x6]
	add		r3, r0, #0x0
	cmp		r1, #0x88
	bne		_08072788
	add		r4, #0x5
_08072788:
	ldrb	r0, [r3, #0x10]
	strb	r4, [r3, #0x10]
	ldr		r0, _080727e8
	lsl		r1, r4, #0x1
	add		r0, r1, r0
	ldrh	r0, [r0, #0x0]
	ldrh	r2, [r3, #0x8]
	strh	r0, [r3, #0x8]
	ldr		r0, _080727ec
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	ldrh	r1, [r3, #0xa]
	strh	r0, [r3, #0xa]
	ldr		r0, _080727f0
	lsl		r1, r4, #0x2
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	str		r0, [r3, #0x14]
	ldr		r0, _080727f4
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	str		r0, [r3, #0x18]
	ldr		r0, _080727f8
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	str		r0, [r3, #0x24]
	ldr		r0, _080727fc
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	str		r0, [r3, #0x28]
	ldr		r0, _08072800
	add		r0, r1, r0
	ldr		r4, [r0, #0x0]
	str		r4, [r3, #0x2c]
	ldr		r0, _08072804
	add		r0, r1, r0
	ldr		r2, [r0, #0x0]
	str		r2, [r3, #0x30]
	ldrb	r0, [r3, #0x6]
	cmp		r0, #0x89
	beq		_0807280e
	cmp		r0, #0x89
	bgt		_08072808
	cmp		r0, #0x88
	beq		_08072828
	b		_08072848

_080727e4:	.4byte 0x03006E20
_080727e8:	.4byte 0x0820b97c
_080727ec:	.4byte 0x0820baf8
_080727f0:	.4byte 0x0820b990
_080727f4:	.4byte 0x0820bb0c
_080727f8:	.4byte 0x0820b9b8
_080727fc:	.4byte 0x0820bb34
_08072800:	.4byte 0x0820ba80
_08072804:	.4byte 0x0820bbfc

_08072808:
	cmp		r0, #0x8b
	beq		_0807282e
	b		_08072848
_0807280e:
	ldr		r0, _08072820
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	str		r0, [r3, #0x34]
	ldr		r0, _08072824
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	b		_0807284c

.incbin "base.gba", 0x7281E, 0x2

_08072820:	.4byte 0x0820baa8
_08072824:	.4byte 0x0820bc24

_08072828:
	str		r4, [r3, #0x34]
	str		r2, [r3, #0x38]
	b		_0807284e
_0807282e:
	ldr		r0, _08072840
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	str		r0, [r3, #0x34]
	ldr		r0, _08072844
	add		r0, r1, r0
	ldr		r0, [r0, #0x0]
	b		_0807284c

.incbin "base.gba", 0x7283E, 0x2

_08072840:	.4byte 0x0820bad0
_08072844:	.4byte 0x0820bc4c

_08072848:
	mov		r0, #0x0
	str		r0, [r3, #0x34]
_0807284c:
	str		r0, [r3, #0x38]
_0807284e:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08072778

	thumb_func_start sub_08072854
sub_08072854:
	ldr		r3, _0807287c
	ldr		r2, _08072880
	lsl		r0, r0, #0x2
	add		r2, r0, r2
	ldrb	r1, [r3, #0x10]
	ldr		r2, [r2, #0x0]
	lsl		r1, r1, #0x2
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	str		r1, [r3, #0x1c]
	ldr		r1, _08072884
	add		r0, r0, r1
	ldrb	r1, [r3, #0x10]
	ldr		r0, [r0, #0x0]
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	str		r0, [r3, #0x20]
	bx		lr

.incbin "base.gba", 0x7287A, 0x2

_0807287c:	.4byte 0x03006E20
_08072880:	.4byte 0x0820bca4
_08072884:	.4byte 0x0820bcb4

.incbin "base.gba", 0x72888, 0x18
	thumb_func_end sub_08072854

	thumb_func_start sub_080728a0
sub_080728a0:
	ldr		r0, _080728a8
	ldrh	r0, [r0, #0x2]
	bx		lr

.incbin "base.gba", 0x728A6, 0x2

_080728a8:	.4byte 0x03006E20

.incbin "base.gba", 0x728AC, 0x18
	thumb_func_end sub_080728a0

	thumb_func_start sub_080728c4
sub_080728c4:
	push	{ r4, r5, r6, lr }
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	add		r6, r0, #0x0
	cmp		r6, #0x10
	bne		_0807295e
	ldr		r5, _080729c0
	add		r0, r5, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r1, #0x0
	strh	r0, [r5, #0xc]
	str		r4, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r1, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _080729c4
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _080729c8
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _080729cc
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _080729d0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _080729d4
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r5, #0x2]
	and		r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r4, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
_0807295e:
	ldr		r4, _080729c0
	ldrb	r0, [r4, #0x0]
	mov		r2, #0x0
	strb	r6, [r4, #0x0]
	ldrb	r0, [r4, #0x4]
	strb	r2, [r4, #0x4]
	mov		r1, #0xf4
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrh	r1, [r0, #0x0]
	mov		r3, #0x0
	strh	r2, [r0, #0x0]
	mov		r1, #0xfc
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrh	r1, [r0, #0x0]
	strh	r2, [r0, #0x0]
	ldrh	r0, [r4, #0x2]
	mov		r1, #0x2
	orr		r0, r1
	ldrh	r1, [r4, #0x2]
	orr		r0, r3
	strh	r0, [r4, #0x2]
	ldrh	r1, [r4, #0x2]
	ldr		r0, _080729d8
	and		r0, r1
	ldrh	r1, [r4, #0x2]
	strh	r0, [r4, #0x2]
	add		r1, r4, #0x0
	add		r1, #0x61
	ldrb	r0, [r1, #0x0]
	strb	r3, [r1, #0x0]
	ldrh	r1, [r4, #0x2]
	ldr		r0, _080729dc
	and		r0, r1
	ldrh	r1, [r4, #0x2]
	strh	r0, [r4, #0x2]
	ldrh	r1, [r4, #0x2]
	ldr		r0, _080729e0
	and		r0, r1
	ldrh	r1, [r4, #0x2]
	strh	r0, [r4, #0x2]
	mov		r1, #0xce
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	str		r2, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_080729c0:	.4byte 0x03006E20
_080729c4:	.4byte 0xfffffdff
_080729c8:	.4byte 0xfffffbff
_080729cc:	.4byte 0xffffdfff
_080729d0:	.4byte 0x0000FFF7
_080729d4:	.4byte 0x0000FFEF
_080729d8:	.4byte 0x0000FFDF
_080729dc:	.4byte 0x0000FFFE
_080729e0:	.4byte 0x0000FFFB
	thumb_func_end sub_080728c4

	thumb_func_start sub_080729e4
sub_080729e4:
	push	{ r4, lr }
	ldr		r3, _08072a40
	ldrh	r1, [r3, #0x2]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08072a4c
	ldrh	r1, [r3, #0x2]
	mov		r0, #0x2
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	cmp		r4, #0x0
	bne		_08072a4c
	ldrh	r1, [r3, #0x2]
	ldr		r0, _08072a44
	and		r0, r1
	ldrh	r1, [r3, #0x2]
	mov		r2, #0x0
	strh	r0, [r3, #0x2]
	ldrb	r0, [r3, #0x0]
	mov		r0, #0xff
	strb	r0, [r3, #0x0]
	ldrh	r1, [r3, #0x2]
	ldr		r0, _08072a48
	and		r0, r1
	ldrh	r1, [r3, #0x2]
	strh	r0, [r3, #0x2]
	ldrh	r0, [r3, #0xe]
	strh	r4, [r3, #0xe]
	ldr		r0, [r3, #0x40]
	mov		r1, #0x9
	neg		r1, r1
	and		r0, r1
	str		r0, [r3, #0x40]
	str		r4, [r3, #0x3c]
	add		r0, r3, #0x0
	add		r0, #0x44
	ldrb	r1, [r0, #0x0]
	strb	r2, [r0, #0x0]
	add		r0, #0x1
	ldrb	r1, [r0, #0x0]
	strb	r2, [r0, #0x0]
	mov		r0, #0x1
	b		_08072a54

.incbin "base.gba", 0x72A3E, 0x2

_08072a40:	.4byte 0x03006E20
_08072a44:	.4byte 0x0000FFFD
_08072a48:	.4byte 0x0000FFBF

_08072a4c:
	mov		r0, #0x21
	bl		sub_080728c4
	mov		r0, #0x0
_08072a54:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x72A5A, 0x2
	thumb_func_end sub_080729e4

	thumb_func_start sub_08072a5c
sub_08072a5c:
	push	{ r4, lr }
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	ldrh	r4, [r0, #0x0]
	mov		r4, #0x0
	strh	r3, [r0, #0x0]
	str		r1, [r0, #0x8]
	str		r1, [r0, #0xc]
	ldrh	r1, [r0, #0x2]
	strh	r2, [r0, #0x2]
	ldrh	r1, [r0, #0x4]
	strh	r4, [r0, #0x4]
	ldrh	r1, [r0, #0x6]
	strh	r4, [r0, #0x6]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x72A82, 0x2
	thumb_func_end sub_08072a5c

	thumb_func_start sub_08072a84
sub_08072a84:
	push	{ r4, r5, lr }
	ldr		r1, _08072ae8
	mov		r2, #0xce
	lsl		r2, r2, #0x2
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	mov		r12, r1
	cmp		r0, #0x0
	beq		_08072b38
	ldr		r2, _08072aec
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_08072aae
	mov		r3, #0x80
_08072aa4:
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08072aa4
_08072aae:
	mov		r1, r12
	ldrb	r0, [r1, #0x5]
	cmp		r0, #0x1
	bne		_08072af8
	ldr		r5, _08072af0
	mov		r4, #0xce
	lsl		r4, r4, #0x2
	add		r4, r12
	ldr		r3, [r4, #0x0]
	ldr		r2, [r3, #0x8]
	ldrb	r0, [r2, #0x3]
	ldrb	r1, [r2, #0x2]
	lsl		r1, r1, #0x8
	orr		r1, r0
	ldrb	r0, [r2, #0x1]
	lsl		r0, r0, #0x10
	orr		r1, r0
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x18
	orr		r1, r0
	str		r1, [r5, #0x0]
	ldr		r0, _08072af4
	str		r1, [r0, #0x0]
	add		r2, #0x4
	str		r2, [r3, #0x8]
	ldr		r1, [r4, #0x0]
	ldrh	r0, [r1, #0x4]
	add		r0, #0x4
	b		_08072b14

_08072ae8:	.4byte 0x03006E20
_08072aec:	.4byte SIOControlRegister
_08072af0:	.4byte 0x030023E0
_08072af4:	.4byte SIOData0_Parent__Multi_PlayerMode_

_08072af8:
	ldr		r2, _08072b40
	mov		r3, #0xce
	lsl		r3, r3, #0x2
	add		r3, r12
	ldr		r1, [r3, #0x0]
	ldr		r0, [r1, #0x8]
	ldrb	r0, [r0, #0x0]
	strb	r0, [r2, #0x0]
	ldr		r0, [r1, #0x8]
	add		r0, #0x1
	str		r0, [r1, #0x8]
	ldr		r1, [r3, #0x0]
	ldrh	r0, [r1, #0x4]
	add		r0, #0x1
_08072b14:
	ldrh	r2, [r1, #0x4]
	strh	r0, [r1, #0x4]
	mov		r1, #0xce
	lsl		r1, r1, #0x2
	add		r1, r12
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	mov		r2, r12
	ldr		r0, [r2, #0x40]
	mov		r1, #0x3
	neg		r1, r1
	and		r0, r1
	str		r0, [r2, #0x40]
	ldr		r2, _08072b44
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x80
	orr		r0, r1
	strh	r0, [r2, #0x0]
_08072b38:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x72B3E, 0x2

_08072b40:	.4byte SIOData_Normal_8bitandUARTMode
_08072b44:	.4byte SIOControlRegister
	thumb_func_end sub_08072a84

	thumb_func_start sub_08072b48
sub_08072b48:
	ldr		r1, _08072b54
	mov		r2, #0xce
	lsl		r2, r2, #0x2
	add		r1, r1, r2
	str		r0, [r1, #0x0]
	bx		lr

_08072b54:	.4byte 0x03006E20
	thumb_func_end sub_08072b48

	thumb_func_start sub_08072b58
sub_08072b58:
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	ldr		r1, _08072b70
	ldrb	r2, [r1, #0x5]
	strb	r0, [r1, #0x5]
	cmp		r0, #0x0
	bne		_08072b7c
	ldr		r2, _08072b74
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08072b78
	and		r0, r1
	b		_08072b90

_08072b70:	.4byte 0x03006E20
_08072b74:	.4byte SIOControlRegister
_08072b78:	.4byte 0x0000CFFF

_08072b7c:
	ldr		r2, _08072b94
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08072b98
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x5
	add		r1, r3, #0x0
	orr		r0, r1
_08072b90:
	strh	r0, [r2, #0x0]
	bx		lr

_08072b94:	.4byte SIOControlRegister
_08072b98:	.4byte 0x0000CFFF

.incbin "base.gba", 0x72B9C, 0x18
	thumb_func_end sub_08072b58

	thumb_func_start sub_08072bb4
sub_08072bb4:
	lsl		r0, r0, #0x18
	mov		r1, #0xf0
	lsl		r1, r1, #0x18
	and		r1, r0
	lsr		r1, r1, #0x18
	cmp		r1, #0x80
	beq		_08072bc6
	mov		r0, #0x0
	b		_08072bc8
_08072bc6:
	mov		r0, #0x1
_08072bc8:
	bx		lr

.incbin "base.gba", 0x72BCA, 0x2
	thumb_func_end sub_08072bb4

	thumb_func_start sub_08072bcc
sub_08072bcc:
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	add		r1, r0, #0x0
	cmp		r0, #0x88
	bne		_08072bda
	mov		r0, #0x0
	b		_08072bf4
_08072bda:
	cmp		r0, #0x89
	bne		_08072be2
	mov		r0, #0x2
	b		_08072bf4
_08072be2:
	add		r0, r1, #0x0
	add		r0, #0x76
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	bls		_08072bf2
	mov		r0, #0x3
	b		_08072bf4
_08072bf2:
	mov		r0, #0x1
_08072bf4:
	bx		lr

.incbin "base.gba", 0x72BF6, 0x92
	thumb_func_end sub_08072bcc

	thumb_func_start sub_08072c88
sub_08072c88:
	push	{ r4, r5, lr }
	ldr		r5, _08072cf8
	mov		r0, #0x0
	str		r0, [r5, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_08072cf0
	bl		sub_0807274c
	ldr		r4, _08072cfc
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x20
	ldrh	r2, [r4, #0x2]
	orr		r0, r1
	strh	r0, [r4, #0x2]
	add		r1, r4, #0x0
	add		r1, #0x44
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x10
	strb	r0, [r1, #0x0]
	mov		r1, #0xf4
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r1, _08072d00
	mov		r2, #0x1
	mov		r3, #0x1
	bl		sub_08072a5c
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r4, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
	ldrh	r1, [r4, #0xc]
	mov		r0, #0xc3
	lsl		r0, r0, #0x10
	orr		r0, r1
	str		r0, [r5, #0x0]
_08072cf0:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x72CF6, 0x2

_08072cf8:	.4byte Timer3Counter_Reload
_08072cfc:	.4byte 0x03006E20
_08072d00:	.4byte 0x0820bc74
	thumb_func_end sub_08072c88

	thumb_func_start sub_08072d04
sub_08072d04:
	push	{ r4, lr }
	ldr		r1, _08072d54
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r4, _08072d58
	ldrh	r1, [r4, #0x2]
	ldr		r0, _08072d5c
	and		r0, r1
	ldrh	r1, [r4, #0x2]
	strh	r0, [r4, #0x2]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_08072d9a
	bl		sub_0807274c
	ldrh	r0, [r4, #0x2]
	mov		r1, #0x20
	orr		r0, r1
	ldrh	r1, [r4, #0x2]
	mov		r1, #0x0
	orr		r0, r1
	strh	r0, [r4, #0x2]
	add		r1, r4, #0x0
	add		r1, #0x44
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x10
	strb	r0, [r1, #0x0]
	ldrb	r0, [r4, #0x5]
	cmp		r0, #0x0
	bne		_08072d64
	mov		r1, #0xf4
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r1, _08072d60
	mov		r2, #0x12
	mov		r3, #0x3
	bl		sub_08072a5c
	b		_08072d74

_08072d54:	.4byte Timer3Counter_Reload
_08072d58:	.4byte 0x03006E20
_08072d5c:	.4byte 0x0000FFDF
_08072d60:	.4byte 0x0820bc78

_08072d64:
	mov		r1, #0xf4
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r1, _08072da0
	mov		r2, #0x14
	mov		r3, #0x3
	bl		sub_08072a5c
_08072d74:
	ldr		r4, _08072da4
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r4, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x0
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_08072d9a:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08072da0:	.4byte 0x0820bc78
_08072da4:	.4byte 0x03006E20
	thumb_func_end sub_08072d04

	thumb_func_start sub_08072da8
sub_08072da8:
	push	{ r4, r5, r6, lr }
	ldr		r6, _08072e1c
	ldr		r5, _08072e20
	str		r5, [r6, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_08072e14
	bl		sub_0807274c
	ldr		r4, _08072e24
	ldr		r0, [r6, #0x0]
	mov		r1, #0x11
	mov		r2, #0x0
	bl		sub_08073c7c
	strh	r0, [r4, #0x0]
	add		r0, r5, #0x0
	sub		r0, #0x30
	ldrh	r2, [r4, #0x0]
	add		r1, r5, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldr		r0, _08072e28
	add		r4, r5, r0
	ldr		r2, _08072e2c
	add		r1, r5, r2
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x11
	strb	r0, [r1, #0x0]
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x20
	ldrh	r2, [r4, #0x2]
	orr		r0, r1
	strh	r0, [r4, #0x2]
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _08072e30
	add		r1, r5, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_08072e14:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x72E1A, 0x2

_08072e1c:	.4byte 0x03002424
_08072e20:	.4byte 0x03007038
_08072e24:	.4byte 0x0300242C
_08072e28:	.4byte 0xFFFFFDE8
_08072e2c:	.4byte 0xFFFFFE2C
_08072e30:	.4byte 0xFFFFFDF0
	thumb_func_end sub_08072da8

	thumb_func_start sub_08072e34
sub_08072e34:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r1, #0x0
	lsl		r0, r0, #0x18
	lsr		r7, r0, #0x18
	ldr		r6, _08072ee4
	ldr		r5, _08072ee8
	str		r5, [r6, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_08072ede
	bl		sub_0807274c
	ldr		r0, _08072eec
	add		r1, r5, r0
	ldrh	r2, [r1, #0x2]
	mov		r0, #0x20
	ldrh	r3, [r1, #0x2]
	mov		r3, #0x0
	orr		r0, r2
	strh	r0, [r1, #0x2]
	ldr		r2, _08072ef0
	add		r1, r5, r2
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x12
	strb	r0, [r1, #0x0]
	ldr		r0, [r6, #0x0]
	strb	r7, [r0, #0x6]
	ldr		r1, _08072ef4
	str		r3, [r1, #0x0]
	ldrb	r2, [r4, #0x0]
	cmp		r2, #0x0
	beq		_08072e8e
	add		r5, r6, #0x0
	add		r3, r1, #0x0
_08072e7a:
	ldr		r0, [r5, #0x0]
	ldr		r1, [r3, #0x0]
	add		r1, #0x1
	add		r0, r0, r1
	strb	r2, [r0, #0x6]
	add		r4, #0x1
	str		r1, [r3, #0x0]
	ldrb	r2, [r4, #0x0]
	cmp		r2, #0x0
	bne		_08072e7a
_08072e8e:
	ldr		r4, _08072ef8
	ldr		r0, _08072ee4
	ldr		r0, [r0, #0x0]
	ldr		r1, _08072ef4
	ldr		r2, [r1, #0x0]
	add		r2, #0x1
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	mov		r1, #0x12
	bl		sub_08073c7c
	strh	r0, [r4, #0x0]
	ldr		r5, _08072efc
	add		r1, r5, #0x0
	add		r1, #0x30
	ldrh	r2, [r4, #0x0]
	add		r0, r5, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldr		r0, _08072f00
	add		r4, r5, r0
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _08072f04
	add		r1, r5, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x3
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_08072ede:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08072ee4:	.4byte 0x03002424
_08072ee8:	.4byte 0x03007038
_08072eec:	.4byte 0xFFFFFDE8
_08072ef0:	.4byte 0xFFFFFE2C
_08072ef4:	.4byte 0x030023E4
_08072ef8:	.4byte 0x0300242C
_08072efc:	.4byte 0x03007008
_08072f00:	.4byte 0xFFFFFE18
_08072f04:	.4byte 0xFFFFFE20
	thumb_func_end sub_08072e34

	thumb_func_start sub_08072f08
sub_08072f08:
	push	{ r4, r5, r6, lr }
	ldr		r6, _08072f7c
	ldr		r5, _08072f80
	str		r5, [r6, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_08072f74
	bl		sub_0807274c
	ldr		r4, _08072f84
	ldr		r0, [r6, #0x0]
	mov		r1, #0x13
	mov		r2, #0x0
	bl		sub_08073c7c
	strh	r0, [r4, #0x0]
	add		r0, r5, #0x0
	sub		r0, #0x30
	ldrh	r2, [r4, #0x0]
	add		r1, r5, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldr		r0, _08072f88
	add		r4, r5, r0
	ldr		r2, _08072f8c
	add		r1, r5, r2
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x13
	strb	r0, [r1, #0x0]
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x20
	ldrh	r2, [r4, #0x2]
	orr		r0, r1
	strh	r0, [r4, #0x2]
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _08072f90
	add		r1, r5, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_08072f74:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x72F7A, 0x2

_08072f7c:	.4byte 0x03002424
_08072f80:	.4byte 0x03007038
_08072f84:	.4byte 0x0300242C
_08072f88:	.4byte 0xFFFFFDE8
_08072f8c:	.4byte 0xFFFFFE2C
_08072f90:	.4byte 0xFFFFFDF0
	thumb_func_end sub_08072f08

	thumb_func_start sub_08072f94
sub_08072f94:
	push	{ r4, r5, r6, lr }
	ldr		r6, _08073008
	ldr		r5, _0807300c
	str		r5, [r6, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_08073000
	bl		sub_0807274c
	ldr		r4, _08073010
	ldr		r0, [r6, #0x0]
	mov		r1, #0x14
	mov		r2, #0x0
	bl		sub_08073c7c
	strh	r0, [r4, #0x0]
	add		r0, r5, #0x0
	sub		r0, #0x30
	ldrh	r2, [r4, #0x0]
	add		r1, r5, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldr		r0, _08073014
	add		r4, r5, r0
	ldr		r2, _08073018
	add		r1, r5, r2
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x14
	strb	r0, [r1, #0x0]
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x20
	ldrh	r2, [r4, #0x2]
	orr		r0, r1
	strh	r0, [r4, #0x2]
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _0807301c
	add		r1, r5, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_08073000:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x73006, 0x2

_08073008:	.4byte 0x03002424
_0807300c:	.4byte 0x03007038
_08073010:	.4byte 0x0300242C
_08073014:	.4byte 0xFFFFFDE8
_08073018:	.4byte 0xFFFFFE2C
_0807301c:	.4byte 0xFFFFFDF0
	thumb_func_end sub_08072f94

	thumb_func_start sub_08073020
sub_08073020:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r8, r0
	add		r6, r1, #0x0
	lsl		r2, r2, #0x18
	lsr		r7, r2, #0x18
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	mov		r9, r3
	ldr		r4, _080730e8
	ldr		r5, _080730ec
	str		r5, [r4, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_080730dc
	ldr		r0, _080730f0
	add		r1, r5, r0
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	mov		r2, r8
	str		r2, [r0, #0x0]
	ldrh	r2, [r1, #0x2]
	mov		r0, #0x20
	ldrh	r3, [r1, #0x2]
	mov		r3, #0x0
	orr		r0, r2
	strh	r0, [r1, #0x2]
	ldr		r0, _080730f4
	add		r1, r5, r0
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x15
	strb	r0, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	mov		r1, r9
	strb	r1, [r0, #0x6]
	ldr		r0, _080730f8
	str		r3, [r0, #0x0]
	ldr		r2, _080730fc
	mov		r8, r2
	add		r2, r7, #0x1
	cmp		r3, r7
	bge		_08073096
	add		r5, r4, #0x0
	add		r3, r0, #0x0
_08073080:
	ldr		r1, [r5, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, r0, r1
	ldrb	r1, [r6, #0x0]
	strb	r1, [r0, #0x7]
	add		r6, #0x1
	ldr		r0, [r3, #0x0]
	add		r0, #0x1
	str		r0, [r3, #0x0]
	cmp		r0, r7
	blt		_08073080
_08073096:
	ldr		r0, [r4, #0x0]
	mov		r1, #0x15
	bl		sub_08073c7c
	mov		r1, r8
	strh	r0, [r1, #0x0]
	ldr		r5, _08073100
	add		r1, r5, #0x0
	add		r1, #0x30
	mov		r0, r8
	ldrh	r2, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldr		r1, _08073104
	add		r4, r5, r1
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _08073108
	add		r1, r5, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_080730dc:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080730e8:	.4byte 0x03002424
_080730ec:	.4byte 0x03007038
_080730f0:	.4byte 0xFFFFFDE8
_080730f4:	.4byte 0xFFFFFE2C
_080730f8:	.4byte 0x03002430
_080730fc:	.4byte 0x0300242C
_08073100:	.4byte 0x03007008
_08073104:	.4byte 0xFFFFFE18
_08073108:	.4byte 0xFFFFFE20
	thumb_func_end sub_08073020

	thumb_func_start sub_0807310c
sub_0807310c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	add		r6, r1, #0x0
	lsl		r2, r2, #0x18
	lsr		r7, r2, #0x18
	ldr		r4, _080731cc
	ldr		r5, _080731d0
	str		r5, [r4, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_080731c2
	ldr		r0, _080731d4
	add		r1, r5, r0
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	mov		r2, r8
	str		r2, [r0, #0x0]
	ldrh	r2, [r1, #0x2]
	mov		r0, #0x20
	ldrh	r3, [r1, #0x2]
	mov		r3, #0x0
	orr		r0, r2
	strh	r0, [r1, #0x2]
	ldr		r0, _080731d8
	add		r1, r5, r0
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x15
	strb	r0, [r1, #0x0]
	ldr		r1, [r4, #0x0]
	mov		r0, #0xff
	strb	r0, [r1, #0x6]
	ldr		r0, [r4, #0x0]
	strb	r7, [r0, #0x7]
	ldr		r0, _080731dc
	str		r3, [r0, #0x0]
	ldr		r1, _080731e0
	mov		r8, r1
	add		r2, r7, #0x2
	cmp		r3, r7
	bge		_0807317e
	add		r5, r4, #0x0
	add		r3, r0, #0x0
_08073168:
	ldr		r1, [r5, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, r0, r1
	ldrb	r1, [r6, #0x0]
	strb	r1, [r0, #0x8]
	add		r6, #0x1
	ldr		r0, [r3, #0x0]
	add		r0, #0x1
	str		r0, [r3, #0x0]
	cmp		r0, r7
	blt		_08073168
_0807317e:
	ldr		r0, [r4, #0x0]
	mov		r1, #0x15
	bl		sub_08073c7c
	mov		r2, r8
	strh	r0, [r2, #0x0]
	ldr		r5, _080731e4
	add		r1, r5, #0x0
	add		r1, #0x30
	ldrh	r2, [r2, #0x0]
	add		r0, r5, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldr		r0, _080731e8
	add		r4, r5, r0
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _080731ec
	add		r1, r5, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_080731c2:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080731cc:	.4byte 0x03002424
_080731d0:	.4byte 0x03007038
_080731d4:	.4byte 0xFFFFFDE8
_080731d8:	.4byte 0xFFFFFE2C
_080731dc:	.4byte 0x03002430
_080731e0:	.4byte 0x0300242C
_080731e4:	.4byte 0x03007008
_080731e8:	.4byte 0xFFFFFE18
_080731ec:	.4byte 0xFFFFFE20
	thumb_func_end sub_0807310c

	thumb_func_start sub_080731f0
sub_080731f0:
	push	{ r4, r5, r6, lr }
	ldr		r6, _08073264
	ldr		r5, _08073268
	str		r5, [r6, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_0807325c
	bl		sub_0807274c
	ldr		r4, _0807326c
	ldr		r0, [r6, #0x0]
	mov		r1, #0x16
	mov		r2, #0x0
	bl		sub_08073c7c
	strh	r0, [r4, #0x0]
	add		r0, r5, #0x0
	sub		r0, #0x30
	ldrh	r2, [r4, #0x0]
	add		r1, r5, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldr		r0, _08073270
	add		r4, r5, r0
	ldr		r2, _08073274
	add		r1, r5, r2
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x16
	strb	r0, [r1, #0x0]
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x20
	ldrh	r2, [r4, #0x2]
	orr		r0, r1
	strh	r0, [r4, #0x2]
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _08073278
	add		r1, r5, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_0807325c:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x73262, 0x2

_08073264:	.4byte 0x03002424
_08073268:	.4byte 0x03007038
_0807326c:	.4byte 0x0300242C
_08073270:	.4byte 0xFFFFFDE8
_08073274:	.4byte 0xFFFFFE2C
_08073278:	.4byte 0xFFFFFDF0
	thumb_func_end sub_080731f0

	thumb_func_start sub_0807327c
sub_0807327c:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	ldr		r7, _080732f4
	ldr		r6, _080732f8
	str		r6, [r7, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_080732ee
	ldr		r0, _080732fc
	add		r4, r6, r0
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	str		r5, [r0, #0x0]
	ldr		r5, _08073300
	ldr		r0, [r7, #0x0]
	mov		r1, #0x17
	mov		r2, #0x0
	bl		sub_08073c7c
	strh	r0, [r5, #0x0]
	add		r0, r6, #0x0
	sub		r0, #0x30
	ldrh	r2, [r5, #0x0]
	add		r1, r6, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldr		r2, _08073304
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x17
	strb	r0, [r1, #0x0]
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x20
	ldrh	r2, [r4, #0x2]
	orr		r0, r1
	strh	r0, [r4, #0x2]
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _08073308
	add		r1, r6, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
	mov		r0, #0x2
	bl		sub_08072854
_080732ee:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080732f4:	.4byte 0x03002424
_080732f8:	.4byte 0x03007038
_080732fc:	.4byte 0xFFFFFDE8
_08073300:	.4byte 0x0300242C
_08073304:	.4byte 0xFFFFFE2C
_08073308:	.4byte 0xFFFFFDF0
	thumb_func_end sub_0807327c

	thumb_func_start sub_0807330c
sub_0807330c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r1, r0, #0x0
	ldr		r0, _080733a0
	ldr		r6, _080733a4
	str		r6, [r0, #0x0]
	ldr		r0, _080733a8
	add		r5, r6, r0
	ldr		r0, [r5, #0x40]
	mov		r7, #0x1
	and		r0, r7
	cmp		r0, #0x0
	beq		_08073396
	ldr		r0, [r5, #0x40]
	mov		r2, #0x4
	mov		r8, r2
	and		r0, r2
	cmp		r0, #0x0
	bne		_08073396
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	str		r1, [r0, #0x0]
	ldr		r4, _080733ac
	add		r0, r6, #0x0
	mov		r1, #0x17
	mov		r2, #0x0
	bl		sub_08073c7c
	strh	r0, [r4, #0x0]
	add		r0, r6, #0x0
	sub		r0, #0x30
	ldrh	r2, [r4, #0x0]
	add		r1, r6, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldr		r0, _080733b0
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x17
	strb	r0, [r1, #0x0]
	ldrh	r1, [r5, #0x2]
	mov		r0, #0x20
	ldrh	r2, [r5, #0x2]
	orr		r0, r1
	strh	r0, [r5, #0x2]
	ldrb	r0, [r5, #0x4]
	strb	r7, [r5, #0x4]
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _080733b4
	add		r1, r6, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	strh	r0, [r5, #0xc]
	mov		r0, #0x1
	bl		sub_08072854
	ldr		r0, [r5, #0x40]
	mov		r1, r8
	orr		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r5, #0x40]
_08073396:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080733a0:	.4byte 0x03002424
_080733a4:	.4byte 0x03007038
_080733a8:	.4byte 0xFFFFFDE8
_080733ac:	.4byte 0x0300242C
_080733b0:	.4byte 0xFFFFFE2C
_080733b4:	.4byte 0xFFFFFDF0
	thumb_func_end sub_0807330c

	thumb_func_start sub_080733b8
sub_080733b8:
	push	{ r4, r5, r6, r7, lr }
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	ldr		r6, _08073434
	ldr		r7, _08073438
	str		r7, [r6, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_0807342c
	bl		sub_0807274c
	ldr		r0, _0807343c
	add		r4, r7, r0
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x20
	ldrh	r2, [r4, #0x2]
	orr		r0, r1
	strh	r0, [r4, #0x2]
	ldr		r2, _08073440
	add		r1, r7, r2
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x18
	strb	r0, [r1, #0x0]
	ldr		r0, [r6, #0x0]
	strb	r5, [r0, #0x6]
	ldr		r5, _08073444
	ldr		r0, [r6, #0x0]
	mov		r1, #0x18
	mov		r2, #0x1
	bl		sub_08073c7c
	strh	r0, [r5, #0x0]
	add		r0, r7, #0x0
	sub		r0, #0x30
	ldrh	r2, [r5, #0x0]
	add		r1, r7, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _08073448
	add		r1, r7, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_0807342c:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x73432, 0x2

_08073434:	.4byte 0x03002424
_08073438:	.4byte 0x03007038
_0807343c:	.4byte 0xFFFFFDE8
_08073440:	.4byte 0xFFFFFE2C
_08073444:	.4byte 0x0300242C
_08073448:	.4byte 0xFFFFFDF0
	thumb_func_end sub_080733b8

	thumb_func_start sub_0807344c
sub_0807344c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r8, r1
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r9, r2
	ldr		r7, _080734e8
	ldr		r6, _080734ec
	str		r6, [r7, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_080734dc
	ldr		r0, _080734f0
	add		r4, r6, r0
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	str		r5, [r0, #0x0]
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x20
	ldrh	r2, [r4, #0x2]
	orr		r0, r1
	strh	r0, [r4, #0x2]
	ldr		r2, _080734f4
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x19
	strb	r0, [r1, #0x0]
	ldr		r0, [r7, #0x0]
	mov		r1, r8
	strb	r1, [r0, #0x6]
	ldr		r0, [r7, #0x0]
	mov		r2, r9
	strb	r2, [r0, #0x7]
	ldr		r5, _080734f8
	ldr		r0, [r7, #0x0]
	mov		r1, #0x19
	mov		r2, #0x2
	bl		sub_08073c7c
	strh	r0, [r5, #0x0]
	add		r0, r6, #0x0
	sub		r0, #0x30
	ldrh	r2, [r5, #0x0]
	add		r1, r6, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _080734fc
	add		r1, r6, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_080734dc:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080734e8:	.4byte 0x03002424
_080734ec:	.4byte 0x03007038
_080734f0:	.4byte 0xFFFFFDE8
_080734f4:	.4byte 0xFFFFFE2C
_080734f8:	.4byte 0x0300242C
_080734fc:	.4byte 0xFFFFFDF0
	thumb_func_end sub_0807344c

	thumb_func_start sub_08073500
sub_08073500:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r8, r0
	add		r5, r2, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r9, r1
	lsl		r3, r3, #0x18
	lsr		r7, r3, #0x18
	ldr		r4, _080735c8
	ldr		r6, _080735cc
	str		r6, [r4, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_080735bc
	ldr		r0, _080735d0
	add		r1, r6, r0
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	mov		r2, r8
	str		r2, [r0, #0x0]
	ldrh	r2, [r1, #0x2]
	mov		r0, #0x20
	ldrh	r3, [r1, #0x2]
	mov		r3, #0x0
	orr		r0, r2
	strh	r0, [r1, #0x2]
	ldr		r0, _080735d4
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x1a
	strb	r0, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	mov		r1, r9
	strb	r1, [r0, #0x6]
	ldr		r0, _080735d8
	str		r3, [r0, #0x0]
	ldr		r2, _080735dc
	mov		r8, r2
	add		r2, r7, #0x1
	cmp		r3, r7
	bge		_08073576
	add		r6, r4, #0x0
	add		r3, r0, #0x0
_08073560:
	ldr		r1, [r6, #0x0]
	ldr		r0, [r3, #0x0]
	add		r0, r0, r1
	ldrb	r1, [r5, #0x0]
	strb	r1, [r0, #0x7]
	add		r5, #0x1
	ldr		r0, [r3, #0x0]
	add		r0, #0x1
	str		r0, [r3, #0x0]
	cmp		r0, r7
	blt		_08073560
_08073576:
	ldr		r0, [r4, #0x0]
	mov		r1, #0x1a
	bl		sub_08073c7c
	mov		r1, r8
	strh	r0, [r1, #0x0]
	ldr		r5, _080735e0
	add		r1, r5, #0x0
	add		r1, #0x30
	mov		r0, r8
	ldrh	r2, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldr		r1, _080735e4
	add		r4, r5, r1
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _080735e8
	add		r1, r5, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_080735bc:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080735c8:	.4byte 0x03002424
_080735cc:	.4byte 0x03007038
_080735d0:	.4byte 0xFFFFFDE8
_080735d4:	.4byte 0xFFFFFE2C
_080735d8:	.4byte 0x03002430
_080735dc:	.4byte 0x0300242C
_080735e0:	.4byte 0x03007008
_080735e4:	.4byte 0xFFFFFE18
_080735e8:	.4byte 0xFFFFFE20
	thumb_func_end sub_08073500

	thumb_func_start sub_080735ec
sub_080735ec:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r10, r0
	add		r4, r1, #0x0
	add		r6, r2, #0x0
	add		r7, r3, #0x0
	ldr		r0, [sp, #0x0+0x20]
	mov		r8, r0
	ldr		r0, _08073750
	ldr		r5, _08073754
	str		r5, [r0, #0x0]
	ldr		r1, _08073758
	mov		r9, r1
	add		r0, r5, #0x6
	str		r0, [r1, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	bne		_0807361a
	b		_08073742
_0807361a:
	ldr		r2, _0807375c
	add		r1, r5, r2
	ldrh	r2, [r1, #0x2]
	mov		r0, #0x20
	ldrh	r3, [r1, #0x2]
	orr		r0, r2
	strh	r0, [r1, #0x2]
	ldr		r0, _08073760
	add		r1, r5, r0
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x21
	strb	r0, [r1, #0x0]
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r2, r10
	str		r2, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0807c054
	ldr		r5, _08073764
	str		r0, [r5, #0x0]
	add		r0, r6, #0x0
	bl		sub_0807c054
	ldr		r1, _08073768
	str		r0, [r1, #0x0]
	ldr		r2, _0807376c
	ldr		r1, [r5, #0x0]
	add		r0, r1, r0
	add		r0, #0xa
	str		r0, [r2, #0x0]
	mov		r2, r9
	ldr		r0, [r2, #0x0]
	strb	r1, [r0, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_08073684
	mov		r3, r9
	add		r2, r5, #0x0
_0807366e:
	ldr		r1, [r3, #0x0]
	ldrb	r0, [r4, #0x0]
	strb	r0, [r1, #0x0]
	add		r4, #0x1
	add		r1, #0x1
	str		r1, [r3, #0x0]
	ldr		r0, [r2, #0x0]
	sub		r0, #0x1
	str		r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_0807366e
_08073684:
	ldr		r3, _08073758
	ldr		r0, [r3, #0x0]
	ldr		r2, _08073768
	ldr		r1, [r2, #0x0]
	strb	r1, [r0, #0x0]
	add		r0, #0x1
	str		r0, [r3, #0x0]
	ldr		r0, [r2, #0x0]
	ldr		r5, _08073750
	ldr		r4, _0807376c
	mov		r10, r4
	ldr		r4, _08073770
	ldr		r1, _08073774
	mov		r9, r1
	cmp		r0, #0x0
	beq		_080736ba
_080736a4:
	ldr		r1, [r3, #0x0]
	ldrb	r0, [r6, #0x0]
	strb	r0, [r1, #0x0]
	add		r6, #0x1
	add		r1, #0x1
	str		r1, [r3, #0x0]
	ldr		r0, [r2, #0x0]
	sub		r0, #0x1
	str		r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_080736a4
_080736ba:
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	ldr		r3, _08073758
	add		r2, r4, #0x0
_080736c2:
	ldr		r1, [r3, #0x0]
	ldrb	r0, [r7, #0x0]
	strb	r0, [r1, #0x0]
	add		r7, #0x1
	add		r1, #0x1
	str		r1, [r3, #0x0]
	ldr		r0, [r2, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	cmp		r0, #0x3
	ble		_080736c2
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	ldr		r3, _08073758
	add		r2, r4, #0x0
_080736e0:
	ldr		r1, [r3, #0x0]
	mov		r4, r8
	ldrb	r0, [r4, #0x0]
	strb	r0, [r1, #0x0]
	mov		r0, #0x1
	add		r8, r0
	add		r1, #0x1
	str		r1, [r3, #0x0]
	ldr		r0, [r2, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	cmp		r0, #0x3
	ble		_080736e0
	ldr		r0, [r5, #0x0]
	mov		r1, r10
	ldrh	r2, [r1, #0x0]
	mov		r1, #0x21
	bl		sub_08073c7c
	mov		r2, r9
	strh	r0, [r2, #0x0]
	ldr		r5, _08073778
	add		r1, r5, #0x0
	add		r1, #0x30
	ldrh	r2, [r2, #0x0]
	add		r0, r5, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldr		r0, _0807377c
	add		r4, r5, r0
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _08073780
	add		r1, r5, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_08073742:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08073750:	.4byte 0x03002424
_08073754:	.4byte 0x03007038
_08073758:	.4byte 0x030023E8
_0807375c:	.4byte 0xFFFFFDE8
_08073760:	.4byte 0xFFFFFE2C
_08073764:	.4byte 0x030023F0
_08073768:	.4byte 0x030023F4
_0807376c:	.4byte 0x030023EC
_08073770:	.4byte 0x03002430
_08073774:	.4byte 0x0300242C
_08073778:	.4byte 0x03007008
_0807377c:	.4byte 0xFFFFFE18
_08073780:	.4byte 0xFFFFFE20
	thumb_func_end sub_080735ec

	thumb_func_start sub_08073784
sub_08073784:
	push	{ r4, r5, r6, lr }
	ldr		r6, _080737f8
	ldr		r5, _080737fc
	str		r5, [r6, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_080737f0
	bl		sub_0807274c
	ldr		r4, _08073800
	ldr		r0, [r6, #0x0]
	mov		r1, #0x22
	mov		r2, #0x0
	bl		sub_08073c7c
	strh	r0, [r4, #0x0]
	add		r0, r5, #0x0
	sub		r0, #0x30
	ldrh	r2, [r4, #0x0]
	add		r1, r5, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldr		r0, _08073804
	add		r4, r5, r0
	ldr		r2, _08073808
	add		r1, r5, r2
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x22
	strb	r0, [r1, #0x0]
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x20
	ldrh	r2, [r4, #0x2]
	orr		r0, r1
	strh	r0, [r4, #0x2]
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _0807380c
	add		r1, r5, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_080737f0:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x737F6, 0x2

_080737f8:	.4byte 0x03002424
_080737fc:	.4byte 0x03007038
_08073800:	.4byte 0x0300242C
_08073804:	.4byte 0xFFFFFDE8
_08073808:	.4byte 0xFFFFFE2C
_0807380c:	.4byte 0xFFFFFDF0
	thumb_func_end sub_08073784

	thumb_func_start sub_08073810
sub_08073810:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	mov		r0, sp
	strh	r2, [r0, #0x0]
	ldr		r4, _080738d0
	ldr		r6, _080738d4
	str		r6, [r4, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_080738c8
	ldr		r0, _080738d8
	add		r1, r6, r0
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	str		r7, [r0, #0x0]
	ldrh	r2, [r1, #0x2]
	mov		r0, #0x20
	ldrh	r3, [r1, #0x2]
	mov		r3, #0x0
	orr		r0, r2
	strh	r0, [r1, #0x2]
	ldr		r0, _080738dc
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x23
	strb	r0, [r1, #0x0]
	ldr		r0, _080738e0
	str		r3, [r0, #0x0]
	ldr		r7, _080738e4
	add		r3, r4, #0x0
	add		r2, r0, #0x0
_08073856:
	ldr		r1, [r3, #0x0]
	ldr		r0, [r2, #0x0]
	add		r1, r1, r0
	ldrb	r0, [r5, #0x0]
	strb	r0, [r1, #0x6]
	add		r5, #0x1
	ldr		r0, [r2, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	cmp		r0, #0x3
	ble		_08073856
	ldr		r1, [r4, #0x0]
	mov		r0, sp
	ldrb	r0, [r0, #0x1]
	strb	r0, [r1, #0xa]
	ldr		r1, [r4, #0x0]
	mov		r0, sp
	ldrb	r0, [r0, #0x0]
	strb	r0, [r1, #0xb]
	ldr		r0, [r4, #0x0]
	mov		r1, #0x23
	mov		r2, #0x6
	bl		sub_08073c7c
	strh	r0, [r7, #0x0]
	ldr		r6, _080738e8
	add		r1, r6, #0x0
	add		r1, #0x30
	ldrh	r2, [r7, #0x0]
	add		r0, r6, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldr		r1, _080738ec
	add		r5, r6, r1
	ldrb	r0, [r5, #0x4]
	mov		r0, #0x1
	strb	r0, [r5, #0x4]
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _080738f0
	add		r1, r6, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r4, #0x0
	strh	r0, [r5, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r1, _080738f4
	add		r0, r6, r1
	strb	r4, [r0, #0x0]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r5, #0x40]
_080738c8:
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080738d0:	.4byte 0x03002424
_080738d4:	.4byte 0x03007038
_080738d8:	.4byte 0xFFFFFDE8
_080738dc:	.4byte 0xFFFFFE2C
_080738e0:	.4byte 0x03002430
_080738e4:	.4byte 0x0300242C
_080738e8:	.4byte 0x03007008
_080738ec:	.4byte 0xFFFFFE18
_080738f0:	.4byte 0xFFFFFE20
_080738f4:	.4byte 0xFFFFFE6B
	thumb_func_end sub_08073810

	thumb_func_start sub_080738f8
sub_080738f8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r8, r1
	ldr		r7, _08073984
	ldr		r6, _08073988
	str		r6, [r7, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_0807397a
	ldr		r0, _0807398c
	add		r4, r6, r0
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	str		r5, [r0, #0x0]
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x20
	ldrh	r2, [r4, #0x2]
	orr		r0, r1
	strh	r0, [r4, #0x2]
	ldr		r2, _08073990
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x24
	strb	r0, [r1, #0x0]
	ldr		r0, [r7, #0x0]
	mov		r1, r8
	strb	r1, [r0, #0x6]
	ldr		r5, _08073994
	ldr		r0, [r7, #0x0]
	mov		r1, #0x24
	mov		r2, #0x1
	bl		sub_08073c7c
	strh	r0, [r5, #0x0]
	add		r0, r6, #0x0
	sub		r0, #0x30
	ldrh	r2, [r5, #0x0]
	add		r1, r6, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _08073998
	add		r1, r6, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_0807397a:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08073984:	.4byte 0x03002424
_08073988:	.4byte 0x03007038
_0807398c:	.4byte 0xFFFFFDE8
_08073990:	.4byte 0xFFFFFE2C
_08073994:	.4byte 0x0300242C
_08073998:	.4byte 0xFFFFFDF0
	thumb_func_end sub_080738f8

	thumb_func_start sub_0807399c
sub_0807399c:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	mov		r0, sp
	strh	r2, [r0, #0x0]
	ldr		r4, _08073a54
	ldr		r6, _08073a58
	str		r6, [r4, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_08073a4c
	ldr		r0, _08073a5c
	add		r1, r6, r0
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	str		r7, [r0, #0x0]
	ldrh	r2, [r1, #0x2]
	mov		r0, #0x20
	ldrh	r3, [r1, #0x2]
	mov		r3, #0x0
	orr		r0, r2
	strh	r0, [r1, #0x2]
	ldr		r0, _08073a60
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x25
	strb	r0, [r1, #0x0]
	ldr		r0, _08073a64
	str		r3, [r0, #0x0]
	ldr		r6, _08073a68
	add		r3, r4, #0x0
	add		r2, r0, #0x0
_080739e2:
	ldr		r1, [r3, #0x0]
	ldr		r0, [r2, #0x0]
	add		r1, r1, r0
	ldrb	r0, [r5, #0x0]
	strb	r0, [r1, #0x6]
	add		r5, #0x1
	ldr		r0, [r2, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	cmp		r0, #0x3
	ble		_080739e2
	ldr		r1, [r4, #0x0]
	mov		r0, sp
	ldrb	r0, [r0, #0x1]
	strb	r0, [r1, #0xa]
	ldr		r1, [r4, #0x0]
	mov		r0, sp
	ldrb	r0, [r0, #0x0]
	strb	r0, [r1, #0xb]
	ldr		r0, [r4, #0x0]
	mov		r1, #0x25
	mov		r2, #0x6
	bl		sub_08073c7c
	strh	r0, [r6, #0x0]
	ldr		r5, _08073a6c
	add		r1, r5, #0x0
	add		r1, #0x30
	ldrh	r2, [r6, #0x0]
	add		r0, r5, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldr		r2, _08073a70
	add		r4, r5, r2
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	add		r2, #0x8
	add		r1, r5, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_08073a4c:
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08073a54:	.4byte 0x03002424
_08073a58:	.4byte 0x03007038
_08073a5c:	.4byte 0xFFFFFDE8
_08073a60:	.4byte 0xFFFFFE2C
_08073a64:	.4byte 0x03002430
_08073a68:	.4byte 0x0300242C
_08073a6c:	.4byte 0x03007008
_08073a70:	.4byte 0xFFFFFE18
	thumb_func_end sub_0807399c

	thumb_func_start sub_08073a74
sub_08073a74:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r8, r1
	ldr		r7, _08073b00
	ldr		r6, _08073b04
	str		r6, [r7, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_08073af6
	ldr		r0, _08073b08
	add		r4, r6, r0
	mov		r1, #0x8e
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	str		r5, [r0, #0x0]
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x20
	ldrh	r2, [r4, #0x2]
	orr		r0, r1
	strh	r0, [r4, #0x2]
	ldr		r2, _08073b0c
	add		r1, r6, r2
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x26
	strb	r0, [r1, #0x0]
	ldr		r0, [r7, #0x0]
	mov		r1, r8
	strb	r1, [r0, #0x6]
	ldr		r5, _08073b10
	ldr		r0, [r7, #0x0]
	mov		r1, #0x26
	mov		r2, #0x1
	bl		sub_08073c7c
	strh	r0, [r5, #0x0]
	add		r0, r6, #0x0
	sub		r0, #0x30
	ldrh	r2, [r5, #0x0]
	add		r1, r6, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _08073b14
	add		r1, r6, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_08073af6:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08073b00:	.4byte 0x03002424
_08073b04:	.4byte 0x03007038
_08073b08:	.4byte 0xFFFFFDE8
_08073b0c:	.4byte 0xFFFFFE2C
_08073b10:	.4byte 0x0300242C
_08073b14:	.4byte 0xFFFFFDF0
	thumb_func_end sub_08073a74

	thumb_func_start sub_08073b18
sub_08073b18:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	ldr		r4, _08073bcc
	ldr		r6, _08073bd0
	str		r6, [r4, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_08073bc0
	ldr		r0, _08073bd4
	add		r1, r6, r0
	mov		r2, #0x8e
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	str		r7, [r0, #0x0]
	ldrh	r2, [r1, #0x2]
	mov		r0, #0x20
	ldrh	r3, [r1, #0x2]
	mov		r3, #0x0
	orr		r0, r2
	strh	r0, [r1, #0x2]
	ldr		r0, _08073bd8
	add		r1, r6, r0
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x28
	strb	r0, [r1, #0x0]
	ldr		r0, _08073bdc
	str		r3, [r0, #0x0]
	ldrb	r2, [r5, #0x0]
	add		r7, r0, #0x0
	ldr		r1, _08073be0
	mov		r8, r1
	cmp		r2, #0x0
	beq		_08073b7a
	add		r6, r4, #0x0
	add		r3, r7, #0x0
_08073b66:
	ldr		r0, [r6, #0x0]
	ldr		r1, [r3, #0x0]
	add		r0, r0, r1
	strb	r2, [r0, #0x6]
	add		r5, #0x1
	add		r1, #0x1
	str		r1, [r3, #0x0]
	ldrb	r2, [r5, #0x0]
	cmp		r2, #0x0
	bne		_08073b66
_08073b7a:
	ldr		r0, [r4, #0x0]
	ldrh	r2, [r7, #0x0]
	mov		r1, #0x28
	bl		sub_08073c7c
	mov		r2, r8
	strh	r0, [r2, #0x0]
	ldr		r5, _08073be4
	add		r1, r5, #0x0
	add		r1, #0x30
	ldrh	r2, [r2, #0x0]
	add		r0, r5, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldr		r0, _08073be8
	add		r4, r5, r0
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _08073bec
	add		r1, r5, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_08073bc0:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x73BCA, 0x2

_08073bcc:	.4byte 0x03002424
_08073bd0:	.4byte 0x03007038
_08073bd4:	.4byte 0xFFFFFDE8
_08073bd8:	.4byte 0xFFFFFE2C
_08073bdc:	.4byte 0x030023F8
_08073be0:	.4byte 0x0300242C
_08073be4:	.4byte 0x03007008
_08073be8:	.4byte 0xFFFFFE18
_08073bec:	.4byte 0xFFFFFE20
	thumb_func_end sub_08073b18

	thumb_func_start sub_08073bf0
sub_08073bf0:
	push	{ r4, r5, r6, lr }
	ldr		r6, _08073c64
	ldr		r5, _08073c68
	str		r5, [r6, #0x0]
	bl		sub_080729e4
	cmp		r0, #0x0
	beq		_08073c5c
	bl		sub_0807274c
	ldr		r4, _08073c6c
	ldr		r0, [r6, #0x0]
	mov		r1, #0x3f
	mov		r2, #0x0
	bl		sub_08073c7c
	strh	r0, [r4, #0x0]
	add		r0, r5, #0x0
	sub		r0, #0x30
	ldrh	r2, [r4, #0x0]
	add		r1, r5, #0x0
	mov		r3, #0x3
	bl		sub_08072a5c
	ldr		r0, _08073c70
	add		r4, r5, r0
	ldr		r2, _08073c74
	add		r1, r5, r2
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3f
	strb	r0, [r1, #0x0]
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x20
	ldrh	r2, [r4, #0x2]
	orr		r0, r1
	strh	r0, [r4, #0x2]
	ldrb	r0, [r4, #0x4]
	mov		r0, #0x1
	strb	r0, [r4, #0x4]
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	ldr		r2, _08073c78
	add		r1, r5, r2
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	mov		r0, #0x2
	bl		sub_08072854
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
_08073c5c:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x73C62, 0x2

_08073c64:	.4byte 0x03002424
_08073c68:	.4byte 0x03007038
_08073c6c:	.4byte 0x0300242C
_08073c70:	.4byte 0xFFFFFDE8
_08073c74:	.4byte 0xFFFFFE2C
_08073c78:	.4byte 0xFFFFFDF0
	thumb_func_end sub_08073bf0

	thumb_func_start sub_08073c7c
sub_08073c7c:
	push	{ lr }
	add		r3, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	ldr		r0, _08073c98
	ldrb	r0, [r0, #0x5]
	cmp		r0, #0x1
	beq		_08073c9c
	add		r0, r3, #0x0
	bl		sub_08073ca8
	b		_08073ca2

_08073c98:	.4byte 0x03006E20

_08073c9c:
	add		r0, r3, #0x0
	bl		sub_08073d0c
_08073ca2:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x73CA6, 0x2
	thumb_func_end sub_08073c7c

	thumb_func_start sub_08073ca8
sub_08073ca8:
	push	{ r4, r5, r6, lr }
	add		r4, r2, #0x0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	mov		r6, #0x0
	ldr		r2, _08073d00
	strh	r2, [r0, #0x0]
	strb	r1, [r0, #0x2]
	strb	r6, [r0, #0x3]
	mov		r1, #0xff
	and		r1, r4
	lsl		r1, r1, #0x8
	lsr		r2, r4, #0x8
	orr		r1, r2
	strh	r1, [r0, #0x4]
	ldr		r5, _08073d04
	add		r1, r4, #0x6
	add		r1, r0, r1
	str		r1, [r5, #0x0]
	add		r0, #0x2
	add		r1, r4, #0x4
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08073e2c
	ldr		r2, _08073d08
	strh	r0, [r2, #0x0]
	ldr		r1, [r5, #0x0]
	lsr		r0, r0, #0x8
	strb	r0, [r1, #0x0]
	ldr		r1, [r5, #0x0]
	ldrh	r0, [r2, #0x0]
	strb	r0, [r1, #0x1]
	ldr		r1, [r5, #0x0]
	mov		r0, #0x81
	strb	r0, [r1, #0x2]
	ldr		r0, [r5, #0x0]
	strb	r6, [r0, #0x3]
	add		r4, #0xa
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x73CFE, 0x2

_08073d00:	.4byte 0x00006699
_08073d04:	.4byte 0x03002428
_08073d08:	.4byte 0x030023FC
	thumb_func_end sub_08073ca8

	thumb_func_start sub_08073d0c
sub_08073d0c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	add		r4, r0, #0x0
	lsl		r2, r2, #0x10
	lsr		r5, r2, #0x10
	mov		r2, #0x0
	ldr		r0, _08073d50
	strh	r0, [r4, #0x0]
	strb	r1, [r4, #0x2]
	strb	r2, [r4, #0x3]
	mov		r0, #0xff
	and		r0, r5
	lsl		r0, r0, #0x8
	lsr		r1, r5, #0x8
	orr		r0, r1
	strh	r0, [r4, #0x4]
	add		r2, r0, #0x0
	cmp		r2, #0x0
	bne		_08073d5c
	ldr		r0, _08073d54
	str		r2, [r0, #0x0]
	add		r0, r5, #0x6
	mov		r8, r0
	ldr		r6, _08073d58
	add		r1, r4, #0x2
	mov		r9, r1
	add		r2, r5, #0x4
	str		r2, [sp, #0x0]
	b		_08073dc2

.incbin "base.gba", 0x73D4E, 0x2

_08073d50:	.4byte 0x00006699
_08073d54:	.4byte 0x03002404
_08073d58:	.4byte 0x03002428

_08073d5c:
	ldr		r0, _08073d70
	mov		r2, #0x3
	and		r2, r5
	str		r2, [r0, #0x0]
	cmp		r2, #0x0
	bne		_08073d78
	ldr		r0, _08073d74
	str		r2, [r0, #0x0]
	b		_08073d80

.incbin "base.gba", 0x73D6E, 0x2

_08073d70:	.4byte 0x03002408
_08073d74:	.4byte 0x03002404

_08073d78:
	ldr		r1, _08073e18
	mov		r0, #0x4
	sub		r0, r0, r2
	str		r0, [r1, #0x0]
_08073d80:
	ldr		r3, _08073e1c
	add		r1, r5, #0x6
	add		r0, r4, r1
	str		r0, [r3, #0x0]
	ldr		r6, _08073e20
	mov		r10, r6
	mov		r2, #0x0
	str		r2, [r6, #0x0]
	ldr		r7, _08073e18
	ldr		r0, [r7, #0x0]
	mov		r8, r1
	ldr		r6, _08073e24
	add		r1, r4, #0x2
	mov		r9, r1
	add		r7, r5, #0x4
	str		r7, [sp, #0x0]
	cmp		r2, r0
	bge		_08073dc2
	mov		r0, #0x0
	mov		r12, r0
	mov		r2, r10
_08073daa:
	ldr		r0, [r3, #0x0]
	mov		r1, r12
	strb	r1, [r0, #0x0]
	add		r0, #0x1
	str		r0, [r3, #0x0]
	ldr		r1, [r2, #0x0]
	add		r1, #0x1
	str		r1, [r2, #0x0]
	ldr		r7, _08073e18
	ldr		r0, [r7, #0x0]
	cmp		r1, r0
	blt		_08073daa
_08073dc2:
	mov		r1, r8
	add		r0, r4, r1
	ldr		r2, _08073e18
	ldr		r1, [r2, #0x0]
	add		r0, r0, r1
	str		r0, [r6, #0x0]
	ldr		r7, [sp, #0x0]
	lsl		r1, r7, #0x10
	lsr		r1, r1, #0x10
	mov		r0, r9
	bl		sub_08073e2c
	ldr		r3, _08073e28
	strh	r0, [r3, #0x0]
	ldr		r1, [r6, #0x0]
	lsr		r0, r0, #0x8
	mov		r2, #0x0
	strb	r0, [r1, #0x0]
	ldr		r1, [r6, #0x0]
	ldrh	r0, [r3, #0x0]
	strb	r0, [r1, #0x1]
	ldr		r1, [r6, #0x0]
	mov		r0, #0x81
	strb	r0, [r1, #0x2]
	ldr		r0, [r6, #0x0]
	strb	r2, [r0, #0x3]
	ldr		r0, [r6, #0x0]
	strb	r2, [r0, #0x4]
	ldr		r0, [r6, #0x0]
	strb	r2, [r0, #0x5]
	ldr		r1, _08073e18
	ldr		r0, [r1, #0x0]
	add		r0, r5, r0
	add		r0, #0xc
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x73E16, 0x2

_08073e18:	.4byte 0x03002404
_08073e1c:	.4byte 0x03002400
_08073e20:	.4byte 0x03002430
_08073e24:	.4byte 0x03002428
_08073e28:	.4byte 0x0300240C
	thumb_func_end sub_08073d0c

	thumb_func_start sub_08073e2c
sub_08073e2c:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r2, r1, #0x10
	ldr		r1, _08073e60
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r5, r1, #0x0
	cmp		r2, #0x0
	beq		_08073e58
	add		r6, r5, #0x0
	mov		r1, #0x0
_08073e44:
	ldrb	r0, [r4, #0x0]
	add		r3, r1, r0
	add		r1, r3, #0x0
	add		r4, #0x1
	sub		r0, r2, #0x1
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x0
	bne		_08073e44
	strh	r3, [r6, #0x0]
_08073e58:
	ldrh	r0, [r5, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08073e60:	.4byte 0x0300240E
	thumb_func_end sub_08073e2c

	thumb_func_start sub_08073e64
sub_08073e64:
	ldr		r1, _08073e88
	ldrh	r2, [r1, #0x2]
	mov		r0, #0x20
	ldrh	r3, [r1, #0x2]
	orr		r0, r2
	strh	r0, [r1, #0x2]
	ldr		r0, [r1, #0x40]
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	orr		r0, r2
	str		r0, [r1, #0x40]
	ldrh	r0, [r1, #0xc]
	ldr		r0, _08073e8c
	strh	r0, [r1, #0xc]
	ldrb	r0, [r1, #0x4]
	mov		r0, #0x3
	strb	r0, [r1, #0x4]
	bx		lr

_08073e88:	.4byte 0x03006E20
_08073e8c:	.4byte 0x00005FF9
	thumb_func_end sub_08073e64

	thumb_func_start sub_08073e90
sub_08073e90:
	ldr		r2, _08073ebc
	ldrh	r1, [r2, #0x2]
	mov		r0, #0x20
	ldrh	r3, [r2, #0x2]
	mov		r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x2]
	ldr		r0, [r2, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	orr		r0, r1
	str		r0, [r2, #0x40]
	ldrh	r0, [r2, #0xc]
	strh	r3, [r2, #0xc]
	ldrb	r0, [r2, #0x4]
	mov		r0, #0x3
	strb	r0, [r2, #0x4]
	ldr		r0, [r2, #0x40]
	ldr		r1, _08073ec0
	and		r0, r1
	str		r0, [r2, #0x40]
	bx		lr

_08073ebc:	.4byte 0x03006E20
_08073ec0:	.4byte 0xffffefff
	thumb_func_end sub_08073e90

	thumb_func_start sub_08073ec4
sub_08073ec4:
	push	{ lr }
	ldr		r0, _08073ed8
	ldr		r1, [r0, #0xc]
	ldrh	r2, [r0, #0x2]
	mov		r3, #0x3
	bl		sub_08072a5c
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x73ED6, 0x2

_08073ed8:	.4byte 0x03007008
	thumb_func_end sub_08073ec4

	thumb_func_start sub_08073edc
sub_08073edc:
	push	{ r4, r5, lr }
	ldr		r4, _08073f28
	ldr		r0, _08073f2c
	add		r5, r4, r0
	ldr		r1, [r4, #0xc]
	add		r0, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x1
	bl		sub_08072a5c
	ldr		r1, _08073f30
	add		r0, r4, r1
	mov		r2, #0x0
	strb	r2, [r0, #0x0]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x9
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrb	r0, [r5, #0x4]
	mov		r0, #0x2
	strb	r0, [r5, #0x4]
	add		r1, r4, #0x0
	sub		r1, #0x10
	ldrh	r0, [r1, #0x0]
	mov		r0, #0x0
	strh	r2, [r1, #0x0]
	ldr		r1, _08073f34
	add		r2, r4, r1
	ldrb	r1, [r2, #0x0]
	strb	r0, [r2, #0x0]
	ldr		r1, _08073f38
	add		r2, r4, r1
	ldrb	r1, [r2, #0x0]
	strb	r0, [r2, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08073f28:	.4byte 0x03007018
_08073f2c:	.4byte 0xFFFFFE08
_08073f30:	.4byte 0xFFFFFE5A
_08073f34:	.4byte 0xFFFFFE58
_08073f38:	.4byte 0xFFFFFE59
	thumb_func_end sub_08073edc

	thumb_func_start sub_08073f3c
sub_08073f3c:
	push	{ r4, r5, lr }
	ldr		r4, _08073f58
	mov		r0, #0xf4
	lsl		r0, r0, #0x1
	add		r5, r4, r0
	ldrh	r0, [r5, #0x0]
	cmp		r0, #0x2
	beq		_08073f7c
	cmp		r0, #0x2
	bgt		_08073f5c
	cmp		r0, #0x1
	beq		_08073f62
	b		_08073faa

.incbin "base.gba", 0x73F56, 0x2

_08073f58:	.4byte 0x03006E20

_08073f5c:
	cmp		r0, #0x3
	beq		_08073fa4
	b		_08073faa
_08073f62:
	add		r0, r5, #0x0
	bl		sub_08072b48
	ldrh	r0, [r5, #0x0]
	mov		r0, #0x2
	strh	r0, [r5, #0x0]
	ldrh	r0, [r4, #0xc]
	ldr		r0, _08073f78
	strh	r0, [r4, #0xc]
	b		_08073faa

.incbin "base.gba", 0x73F76, 0x2

_08073f78:	.4byte 0x0000F851

_08073f7c:
	ldr		r1, _08073fa0
	add		r0, r5, #0x0
	mov		r2, #0x12
	mov		r3, #0x3
	bl		sub_08072a5c
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r4, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r4, #0xc]
	strh	r0, [r4, #0xc]
	add		r0, r5, #0x0
	bl		sub_08072b48
	b		_08073faa

_08073fa0:	.4byte 0x0820bc78

_08073fa4:
	add		r0, r5, #0x0
	bl		sub_08072b48
_08073faa:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08073f3c

	thumb_func_start sub_08073fb0
sub_08073fb0:
	push	{ lr }
	ldr		r1, _08073fc8
	mov		r2, #0xfc
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x4
	bgt		_08073fcc
	cmp		r0, #0x1
	bge		_08073fd2
	b		_0807401a

.incbin "base.gba", 0x73FC6, 0x2

_08073fc8:	.4byte 0x03006E20

_08073fcc:
	cmp		r0, #0x5
	beq		_08074010
	b		_0807401a
_08073fd2:
	ldrb	r0, [r1, #0x5]
	cmp		r0, #0x0
	bne		_08073ff0
	mov		r2, #0x82
	lsl		r2, r2, #0x2
	add		r0, r1, r2
	ldr		r1, _08073fec
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_08072a5c
	b		_08074000

.incbin "base.gba", 0x73FEA, 0x2

_08073fec:	.4byte 0x0820bc74

_08073ff0:
	mov		r2, #0x82
	lsl		r2, r2, #0x2
	add		r0, r1, r2
	ldr		r1, _08074008
	mov		r2, #0x4
	mov		r3, #0x0
	bl		sub_08072a5c
_08074000:
	ldr		r0, _0807400c
	bl		sub_08072b48
	b		_0807401a

_08074008:	.4byte 0x0820bc74
_0807400c:	.4byte 0x03007028

_08074010:
	mov		r2, #0x82
	lsl		r2, r2, #0x2
	add		r0, r1, r2
	bl		sub_08072b48
_0807401a:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7401E, 0x2
	thumb_func_end sub_08073fb0

	thumb_func_start sub_08074020
sub_08074020:
	push	{ r4, r5, lr }
	ldr		r1, _080740bc
	add		r2, r1, #0x0
	add		r2, #0x61
	ldrb	r0, [r2, #0x0]
	add		r4, r1, #0x0
	cmp		r0, #0x0
	beq		_0807403c
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x6
	beq		_0807403c
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x7
	bne		_080740f6
_0807403c:
	ldr		r0, [r4, #0x40]
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080740f6
	ldr		r0, [r4, #0x3c]
	add		r0, #0x1
	str		r0, [r4, #0x3c]
	ldr		r0, [r4, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_080740ce
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0807406e
	ldr		r0, [r4, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	and		r0, r1
	cmp		r0, #0x0
	beq		_080740ce
_0807406e:
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x2
	add		r1, r4, #0x0
	add		r1, #0x24
	add		r0, r0, r1
	ldr		r1, [r4, #0x3c]
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bls		_080740f6
	mov		r5, #0x0
	str		r5, [r4, #0x3c]
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r3, r4, r0
	strh	r5, [r3, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xd4
	str		r0, [r3, #0x4]
	ldr		r0, [r4, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	and		r0, r1
	cmp		r0, #0x0
	beq		_080740c0
	ldr		r1, [r4, #0x70]
	ldr		r2, [r4, #0x74]
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r3, #0x0
	bl		sub_0807310c
	str		r5, [r4, #0x70]
	str		r5, [r4, #0x74]
	ldr		r0, [r4, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	orr		r0, r1
	str		r0, [r4, #0x40]
	b		_080740f6

_080740bc:	.4byte 0x03006E20

_080740c0:
	add		r0, r3, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	mov		r3, #0xff
	bl		sub_08073020
	b		_080740f6
_080740ce:
	ldrb	r0, [r4, #0x5]
	lsl		r0, r0, #0x2
	add		r1, r4, #0x0
	add		r1, #0x14
	add		r0, r0, r1
	ldr		r1, [r4, #0x3c]
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bls		_080740f6
	mov		r1, #0x0
	str		r1, [r4, #0x3c]
	mov		r2, #0xcb
	lsl		r2, r2, #0x2
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x54
	str		r1, [r0, #0x4]
	bl		sub_0807330c
_080740f6:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08074020

	thumb_func_start sub_080740fc
sub_080740fc:
	push	{ r4, r5, r6, r7, lr }
	ldr		r5, _08074114
	ldr		r6, [r5, #0x40]
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	and		r6, r0
	cmp		r6, #0x0
	beq		_08074118
	bl		sub_08072d04
	b		_0807425c

.incbin "base.gba", 0x74112, 0x2

_08074114:	.4byte 0x03006E20

_08074118:
	ldr		r0, [r5, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	and		r0, r1
	cmp		r0, #0x0
	bne		_08074126
	b		_08074224
_08074126:
	ldr		r0, [r5, #0x40]
	ldr		r1, _08074204
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08074208
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	mov		r7, #0x0
	strh	r0, [r5, #0x2]
	ldrb	r0, [r5, #0x4]
	strb	r7, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_0807414c
	b		_0807425c
_0807414c:
	mov		r0, #0x0
	bl		sub_08072b58
	add		r0, r5, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	strb	r7, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	strh	r0, [r5, #0xc]
	str		r6, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r7, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807420c
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08074210
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08074214
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08074218
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _0807421c
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r5, #0x2]
	and		r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r4, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	add		r0, r5, #0x0
	add		r0, #0x61
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1e
	beq		_0807425c
	ldr		r0, [r5, #0x40]
	ldr		r1, _08074220
	and		r0, r1
	str		r0, [r5, #0x40]
	mov		r0, #0x26
	bl		sub_080728c4
	str		r6, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r7, [r5, #0x4]
	b		_0807425c

.incbin "base.gba", 0x74202, 0x2

_08074204:	.4byte 0xFFFFF7FF
_08074208:	.4byte 0x0000FFDF
_0807420c:	.4byte 0xfffffdff
_08074210:	.4byte 0xfffffbff
_08074214:	.4byte 0xffffdfff
_08074218:	.4byte 0x0000FFF7
_0807421c:	.4byte 0x0000FFEF
_08074220:	.4byte 0xffffbfff

_08074224:
	ldr		r2, [r5, #0x40]
	mov		r0, #0x8
	and		r2, r0
	cmp		r2, #0x0
	beq		_0807423a
	ldrb	r0, [r5, #0x4]
	mov		r0, #0x1
	strb	r0, [r5, #0x4]
	bl		sub_08073ec4
	b		_0807425c
_0807423a:
	ldrb	r0, [r5, #0x4]
	strb	r2, [r5, #0x4]
	mov		r1, #0xcd
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	mov		r3, #0xfd
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	ldrh	r0, [r0, #0x0]
	strh	r0, [r1, #0x0]
	str		r2, [r5, #0x3c]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08074274
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
_0807425c:
	ldr		r2, _08074278
	ldrb	r0, [r2, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r2, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r2, #0xc]
	strh	r0, [r2, #0xc]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08074274:	.4byte 0x0000FFDF
_08074278:	.4byte 0x03006E20
	thumb_func_end sub_080740fc

	thumb_func_start sub_0807427c
sub_0807427c:
	push	{ r4, r5, r6, lr }
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r6, #0x0
	cmp		r0, #0x5
	bgt		_080742c4
	cmp		r0, #0x4
	blt		_0807428e
	b		_08074430
_0807428e:
	cmp		r0, #0x1
	ble		_08074294
	b		_0807448e
_08074294:
	cmp		r0, #0x0
	bge		_0807429a
	b		_0807448e
_0807429a:
	ldr		r2, _080742c0
	add		r0, r2, #0x0
	add		r0, #0x5c
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080742a8
	b		_08074430
_080742a8:
	add		r3, r2, #0x0
	ldr		r0, [r3, #0x40]
	mov		r1, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_080743a0
	mov		r0, #0x0
	str		r0, [r3, #0x40]
	mov		r0, #0x23
	bl		sub_080728c4
	b		_080743a2

_080742c0:	.4byte 0x03006E20

_080742c4:
	cmp		r0, #0xff
	beq		_080742ca
	b		_0807448e
_080742ca:
	mov		r6, #0x7
	ldr		r2, _080742f0
	add		r0, r2, #0x0
	add		r0, #0x5c
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_080742da
	b		_0807448e
_080742da:
	ldr		r1, [r2, #0x40]
	mov		r0, #0x4
	and		r1, r0
	cmp		r1, #0x0
	beq		_080742f4
	mov		r0, #0x0
	str		r0, [r2, #0x40]
	mov		r0, #0x23
	bl		sub_080728c4
	b		_080742f6

_080742f0:	.4byte 0x03006E20

_080742f4:
	str		r1, [r2, #0x40]
_080742f6:
	ldr		r5, _08074388
	add		r0, r5, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r1, #0x0
	strh	r0, [r5, #0xc]
	str		r4, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r1, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807438c
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08074390
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08074394
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08074398
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _0807439c
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r5, #0x2]
	and		r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r4, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	b		_0807448e

.incbin "base.gba", 0x74386, 0x2

_08074388:	.4byte 0x03006E20
_0807438c:	.4byte 0xfffffdff
_08074390:	.4byte 0xfffffbff
_08074394:	.4byte 0xffffdfff
_08074398:	.4byte 0x0000FFF7
_0807439c:	.4byte 0x0000FFEF

_080743a0:
	str		r6, [r2, #0x40]
_080743a2:
	ldr		r5, _08074448
	add		r0, r5, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r1, #0x0
	strh	r0, [r5, #0xc]
	str		r4, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r1, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807444c
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08074450
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08074454
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08074458
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _0807445c
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r5, #0x2]
	and		r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r4, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
_08074430:
	ldr		r0, _08074448
	add		r0, #0x5c
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x3
	cmp		r0, #0x5
	bhi		_0807448e
	lsl		r0, r0, #0x2
	ldr		r1, _08074460
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x74446, 0x2

_08074448:	.4byte 0x03006E20
_0807444c:	.4byte 0xfffffdff
_08074450:	.4byte 0xfffffbff
_08074454:	.4byte 0xffffdfff
_08074458:	.4byte 0x0000FFF7
_0807445c:	.4byte 0x0000FFEF
_08074460:	.4byte 0x08074464
_08074464:	.4byte 0x0807447c

.incbin "base.gba", 0x74468, 0x14
	thumb_func_end sub_0807427c


.incbin "base.gba", 0x7447C, 0x12

_0807448e:

.incbin "base.gba", 0x7448E, 0x46
_080744d4:	.4byte 0x03006E20

.incbin "base.gba", 0x744D8, 0x28
	thumb_func_start sub_08074500
sub_08074500:
	push	{ lr }
	ldr		r1, _0807451c
	add		r0, r1, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x10
	add		r2, r1, #0x0
	cmp		r0, #0x18
	bhi		_080745da
	lsl		r0, r0, #0x2
	ldr		r1, _08074520
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0807451c:	.4byte 0x03006E20
_08074520:	.4byte 0x08074524
_08074524:	.4byte 0x080745d6

.incbin "base.gba", 0x74528, 0x60
	thumb_func_end sub_08074500


.incbin "base.gba", 0x74588, 0x18
_080745a0:	.4byte 0x080745b4

.incbin "base.gba", 0x745A4, 0x36

_080745da:

.incbin "base.gba", 0x745DA, 0x6
	thumb_func_start sub_080745e0
sub_080745e0:
	push	{ r4, r5, lr }
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	ldr		r5, _08074614
	mov		r0, #0x1
	str		r0, [r5, #0x0]
	ldr		r2, _08074618
	ldr		r0, _0807461c
	str		r0, [r2, #0x0]
	ldr		r1, _08074620
	add		r3, r0, r1
	ldr		r0, [r3, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	and		r0, r1
	cmp		r0, #0x0
	beq		_08074628
	ldr		r0, [r3, #0x40]
	ldr		r1, _08074624
	and		r0, r1
	str		r0, [r3, #0x40]
	bl		sub_08073e90
	mov		r0, #0x0
	str		r0, [r5, #0x0]
	b		_08074988

_08074614:	.4byte 0x03002430
_08074618:	.4byte 0x03002410
_0807461c:	.4byte 0x03007038
_08074620:	.4byte 0xFFFFFDE8
_08074624:	.4byte 0xffffefff

_08074628:
	add		r0, r4, #0x0
	sub		r0, #0x90
	cmp		r0, #0x5e
	bls		_08074632
	b		_08074974
_08074632:
	lsl		r0, r0, #0x2
	ldr		r1, _0807463c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0807463c:	.4byte 0x08074640
_08074640:	.4byte 0x080747bc

.incbin "base.gba", 0x74644, 0x178
	thumb_func_end sub_080745e0


.incbin "base.gba", 0x747BC, 0x1B8

_08074974:

.incbin "base.gba", 0x74974, 0x14
_08074988:

.incbin "base.gba", 0x74988, 0x24
_080749ac:

.incbin "base.gba", 0x749AC, 0xC
_080749b8:	.4byte 0x03006E20
_080749bc:	.4byte 0x03002430
_080749c0:	.4byte 0x0000FFDF
	thumb_func_start sub_080749c4
sub_080749c4:
	push	{ r4, r5, r6, lr }
	ldr		r4, _08074a20
	ldr		r0, [r4, #0x40]
	mov		r2, #0x80
	orr		r0, r2
	str		r0, [r4, #0x40]
	ldr		r6, _08074a24
	ldrb	r0, [r4, #0x4]
	strb	r0, [r6, #0x0]
	ldr		r5, _08074a28
	mov		r0, #0x0
	str		r0, [r5, #0x0]
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	and		r0, r1
	add		r3, r4, #0x0
	cmp		r0, #0x0
	beq		_08074a08
	ldr		r0, [r4, #0x40]
	add		r1, #0xfe
	and		r0, r1
	cmp		r0, #0x0
	bne		_08074a08
	ldr		r0, [r4, #0x40]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08074a08
	ldr		r0, _08074a2c
	ldrh	r1, [r0, #0x0]
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08074a30
_08074a08:
	ldr		r2, _08074a28
	ldrh	r1, [r3, #0xc]
	mov		r0, #0xc3
	lsl		r0, r0, #0x10
	orr		r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, [r3, #0x40]
	mov		r1, #0x81
	neg		r1, r1
	and		r0, r1
	str		r0, [r3, #0x40]
	b		_08074ab2

_08074a20:	.4byte 0x03006E20
_08074a24:	.4byte 0x03002414
_08074a28:	.4byte Timer3Counter_Reload
_08074a2c:	.4byte SIOControlRegister

_08074a30:
	bl		sub_0807be3c
	ldrb	r1, [r4, #0x4]
	ldrb	r0, [r6, #0x0]
	cmp		r0, r1
	bne		_08074a50
	ldr		r0, [r4, #0x40]
	mov		r1, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_08074a66
	add		r0, r4, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	bl		sub_080745e0
_08074a50:
	ldr		r0, [r4, #0x40]
	mov		r1, #0x81
	neg		r1, r1
	and		r0, r1
	str		r0, [r4, #0x40]
	ldrh	r1, [r4, #0xc]
	mov		r0, #0xc3
	lsl		r0, r0, #0x10
	orr		r0, r1
	str		r0, [r5, #0x0]
	b		_08074ab2
_08074a66:
	ldrb	r0, [r4, #0x4]
	cmp		r0, #0x1
	beq		_08074a8c
	cmp		r0, #0x1
	bgt		_08074a76
	cmp		r0, #0x0
	beq		_08074a80
	b		_08074a96
_08074a76:
	cmp		r0, #0x2
	beq		_08074a92
	cmp		r0, #0x3
	beq		_08074a86
	b		_08074a96
_08074a80:
	bl		sub_08074020
	b		_08074a96
_08074a86:
	bl		sub_080740fc
	b		_08074a96
_08074a8c:
	bl		sub_08073f3c
	b		_08074a96
_08074a92:
	bl		sub_08073fb0
_08074a96:
	bl		sub_08072a84
	ldr		r3, _08074ab8
	ldr		r2, _08074abc
	ldrh	r1, [r2, #0xc]
	mov		r0, #0xc3
	lsl		r0, r0, #0x10
	orr		r0, r1
	str		r0, [r3, #0x0]
	ldr		r0, [r2, #0x40]
	mov		r1, #0x81
	neg		r1, r1
	and		r0, r1
	str		r0, [r2, #0x40]
_08074ab2:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08074ab8:	.4byte Timer3Counter_Reload
_08074abc:	.4byte 0x03006E20
	thumb_func_end sub_080749c4

	thumb_func_start sub_08074ac0
sub_08074ac0:
	push	{ r4, r5, r6, lr }
	ldr		r6, _08074b10
	ldrb	r0, [r6, #0x4]
	mov		r4, #0x0
	strb	r4, [r6, #0x4]
	mov		r0, #0xf4
	lsl		r0, r0, #0x1
	add		r5, r6, r0
	ldrh	r0, [r5, #0x0]
	strh	r4, [r5, #0x0]
	mov		r1, #0xfc
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldrh	r1, [r0, #0x0]
	strh	r4, [r0, #0x0]
	mov		r0, #0x10
	bl		sub_080728c4
	ldr		r0, [r6, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r6, #0x40]
	ldrh	r1, [r6, #0x2]
	ldr		r0, _08074b14
	and		r0, r1
	ldrh	r1, [r6, #0x2]
	strh	r0, [r6, #0x2]
	ldr		r0, [r6, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r6, #0x40]
	ldrh	r0, [r5, #0x0]
	strh	r4, [r5, #0x0]
	ldr		r0, _08074b18
	str		r4, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08074b10:	.4byte 0x03006E20
_08074b14:	.4byte 0x0000FFDF
_08074b18:	.4byte Timer3Counter_Reload
	thumb_func_end sub_08074ac0

	thumb_func_start sub_08074b1c
sub_08074b1c:
	push	{ r4, r5, r6, lr }
	ldr		r1, _08074b70
	mov		r2, #0xf4
	lsl		r2, r2, #0x1
	add		r0, r1, r2
	ldrh	r0, [r0, #0x0]
	add		r5, r1, #0x0
	cmp		r0, #0x1
	bge		_08074b30
	b		_08074f12
_08074b30:
	cmp		r0, #0x2
	bgt		_08074b36
	b		_08074f12
_08074b36:
	cmp		r0, #0x3
	beq		_08074b3c
	b		_08074f12
_08074b3c:
	ldr		r0, [r5, #0x3c]
	add		r0, #0x1
	str		r0, [r5, #0x3c]
	ldr		r2, [r5, #0x3c]
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x2
	add		r1, #0x1c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r2, r0
	bls		_08074b7a
	ldr		r0, [r5, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	and		r0, r1
	cmp		r0, #0x0
	bne		_08074b74
	bl		sub_08073e64
	ldr		r0, [r5, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x7
	orr		r0, r1
	str		r0, [r5, #0x40]
	b		_08074f12

.incbin "base.gba", 0x74B6E, 0x2

_08074b70:	.4byte 0x03006E20

_08074b74:
	bl		sub_08073e90
	b		_08074f12
_08074b7a:
	ldr		r2, _08074bac
	mov		r3, #0xf5
	lsl		r3, r3, #0x1
	add		r0, r5, r3
	ldrh	r1, [r0, #0x0]
	add		r3, #0x2
	add		r0, r5, r3
	ldrh	r0, [r0, #0x0]
	sub		r1, r1, r0
	str		r1, [r2, #0x0]
	ldrb	r0, [r5, #0x5]
	cmp		r0, #0x0
	bne		_08074bb4
	cmp		r1, #0x1
	bgt		_08074be4
	mov		r0, #0x1
	sub		r0, r0, r1
	add		r1, r5, #0x0
	add		r1, #0x48
	add		r0, r0, r1
	ldr		r1, _08074bb0
	ldrb	r1, [r1, #0x0]
	ldrb	r2, [r0, #0x0]
	strb	r1, [r0, #0x0]
	b		_08074be4

_08074bac:	.4byte 0x03002418
_08074bb0:	.4byte SIOData_Normal_8bitandUARTMode

_08074bb4:
	cmp		r1, #0x0
	bne		_08074be4
	ldr		r0, _08074c14
	ldrb	r1, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x48
	ldrb	r2, [r0, #0x0]
	strb	r1, [r0, #0x0]
	ldr		r0, _08074c18
	ldrb	r0, [r0, #0x0]
	add		r2, r5, #0x0
	add		r2, #0x49
	ldrb	r1, [r2, #0x0]
	strb	r0, [r2, #0x0]
	ldr		r0, _08074c1c
	ldrb	r0, [r0, #0x0]
	add		r2, #0x1
	ldrb	r1, [r2, #0x0]
	strb	r0, [r2, #0x0]
	ldr		r0, _08074c20
	ldrb	r0, [r0, #0x0]
	add		r2, #0x1
	ldrb	r1, [r2, #0x0]
	strb	r0, [r2, #0x0]
_08074be4:
	mov		r0, #0xf5
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r2, #0xf6
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldrh	r1, [r1, #0x0]
	ldrh	r0, [r0, #0x0]
	cmp		r1, r0
	beq		_08074bfa
	b		_08074f12
_08074bfa:
	add		r0, r5, #0x0
	add		r0, #0x48
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	bne		_08074c24
	add		r0, r5, #0x0
	add		r0, #0x49
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	bne		_08074c24
	mov		r0, #0x10
	b		_08074d26

.incbin "base.gba", 0x74C12, 0x2

_08074c14:	.4byte SIOData1_1stChild__Multi_PlayerMode_+ 0x1
_08074c18:	.4byte SIOData1_1stChild__Multi_PlayerMode_
_08074c1c:	.4byte SIOData0_Parent__Multi_PlayerMode_ + 0x1
_08074c20:	.4byte SIOData0_Parent__Multi_PlayerMode_

_08074c24:
	add		r0, r5, #0x0
	add		r0, #0x48
	ldrb	r0, [r0, #0x0]
	bl		sub_08072bb4
	cmp		r0, #0x0
	bne		_08074cec
	ldr		r0, [r5, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	and		r0, r1
	cmp		r0, #0x0
	bne		_08074cec
	ldr		r0, [r5, #0x40]
	mov		r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08074ca8
	ldrh	r0, [r5, #0xe]
	sub		r0, #0x1
	ldrh	r1, [r5, #0xe]
	strh	r0, [r5, #0xe]
	ldrh	r0, [r5, #0xe]
	add		r6, r0, #0x0
	cmp		r6, #0x0
	bne		_08074cae
	ldrb	r0, [r5, #0x4]
	mov		r0, #0x0
	strb	r0, [r5, #0x4]
	mov		r3, #0xf4
	lsl		r3, r3, #0x1
	add		r4, r5, r3
	ldrh	r0, [r4, #0x0]
	strh	r6, [r4, #0x0]
	mov		r1, #0xfc
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	strh	r6, [r0, #0x0]
	mov		r0, #0x10
	bl		sub_080728c4
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08074ca0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r0, [r4, #0x0]
	strh	r6, [r4, #0x0]
	ldr		r0, _08074ca4
	str		r6, [r0, #0x0]
	b		_08074f12

_08074ca0:	.4byte 0x0000FFDF
_08074ca4:	.4byte Timer3Counter_Reload

_08074ca8:
	ldrh	r0, [r5, #0xe]
	mov		r0, #0x2
	strh	r0, [r5, #0xe]
_08074cae:
	ldr		r2, _08074ce0
	add		r0, r2, #0x0
	add		r0, #0x49
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r2, #0x7]
	mov		r4, #0x0
	strb	r0, [r2, #0x7]
	ldrh	r0, [r2, #0xc]
	ldr		r0, _08074ce4
	strh	r0, [r2, #0xc]
	ldr		r0, [r2, #0x40]
	mov		r1, #0x8
	orr		r0, r1
	str		r0, [r2, #0x40]
	ldrb	r0, [r2, #0x4]
	mov		r0, #0x3
	strb	r0, [r2, #0x4]
	ldr		r3, _08074ce8
	str		r4, [r3, #0x0]
	ldrh	r1, [r2, #0xc]
	mov		r0, #0xc3
	lsl		r0, r0, #0x10
	orr		r0, r1
	str		r0, [r3, #0x0]
	b		_08074f12

_08074ce0:	.4byte 0x03006E20
_08074ce4:	.4byte 0x0000F851
_08074ce8:	.4byte Timer3Counter_Reload

_08074cec:
	ldr		r1, _08074d4c
	add		r0, r1, #0x0
	add		r0, #0x49
	ldrb	r0, [r0, #0x0]
	add		r2, r0, #0x0
	add		r5, r1, #0x0
	cmp		r2, #0xf2
	bne		_08074d7c
	ldr		r0, [r5, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	and		r0, r1
	cmp		r0, #0x0
	bne		_08074d7c
	ldrb	r0, [r5, #0x7]
	strb	r2, [r5, #0x7]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08074d54
	ldrh	r0, [r5, #0xe]
	sub		r0, #0x1
	ldrh	r1, [r5, #0xe]
	strh	r0, [r5, #0xe]
	ldrh	r0, [r5, #0xe]
	cmp		r0, #0x0
	bne		_08074d5a
	mov		r0, #0x85
_08074d26:
	bl		sub_080728c4
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08074d50
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	b		_08074f12

.incbin "base.gba", 0x74D4A, 0x2

_08074d4c:	.4byte 0x03006E20
_08074d50:	.4byte 0x0000FFDF

_08074d54:
	ldrh	r0, [r5, #0xe]
	ldr		r0, _08074d78
	strh	r0, [r5, #0xe]
_08074d5a:
	add		r0, r5, #0x0
	add		r0, #0x49
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r5, #0x7]
	mov		r3, #0x0
	strb	r0, [r5, #0x7]
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	b		_08074e64

.incbin "base.gba", 0x74D76, 0x2

_08074d78:	.4byte 0x0000FFFE

_08074d7c:
	add		r2, r5, #0x0
	add		r2, #0x49
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0xf0
	beq		_08074d8c
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0xf1
	bne		_08074e0c
_08074d8c:
	ldr		r0, [r5, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	and		r0, r1
	cmp		r0, #0x0
	bne		_08074e0c
	ldr		r0, [r5, #0x40]
	mov		r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08074df0
	ldrh	r0, [r5, #0xe]
	sub		r0, #0x1
	ldrh	r1, [r5, #0xe]
	strh	r0, [r5, #0xe]
	ldrh	r0, [r5, #0xe]
	cmp		r0, #0x0
	bne		_08074df6
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0xf0
	bne		_08074dbe
	mov		r0, #0x83
	bl		sub_080728c4
	b		_08074dc4
_08074dbe:
	mov		r0, #0x84
	bl		sub_080728c4
_08074dc4:
	ldr		r2, _08074de8
	ldr		r0, [r2, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r2, #0x40]
	ldrh	r1, [r2, #0x2]
	ldr		r0, _08074dec
	and		r0, r1
	ldrh	r1, [r2, #0x2]
	strh	r0, [r2, #0x2]
	ldr		r0, [r2, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r2, #0x40]
	b		_08074f12

.incbin "base.gba", 0x74DE6, 0x2

_08074de8:	.4byte 0x03006E20
_08074dec:	.4byte 0x0000FFDF

_08074df0:
	ldrh	r0, [r5, #0xe]
	mov		r0, #0x2
	strh	r0, [r5, #0xe]
_08074df6:
	add		r0, r5, #0x0
	add		r0, #0x49
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r5, #0x7]
	mov		r3, #0x0
	strb	r0, [r5, #0x7]
	ldrh	r0, [r5, #0xc]
	ldr		r0, _08074e08
	b		_08074e64

_08074e08:	.4byte 0x0000BFFD

_08074e0c:
	add		r2, r5, #0x0
	add		r2, #0x49
	ldrb	r1, [r2, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x44
	ldrb	r0, [r0, #0x0]
	add		r0, #0x80
	cmp		r1, r0
	beq		_08074e8c
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0xee
	beq		_08074e8c
	ldr		r0, [r5, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	and		r0, r1
	cmp		r0, #0x0
	bne		_08074e8c
	ldr		r0, [r5, #0x40]
	mov		r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08074e4e
	ldrh	r0, [r5, #0xe]
	sub		r0, #0x1
	ldrh	r1, [r5, #0xe]
	strh	r0, [r5, #0xe]
	ldrh	r0, [r5, #0xe]
	cmp		r0, #0x0
	bne		_08074e54
	bl		sub_08074ac0
	b		_08074f12
_08074e4e:
	ldrh	r0, [r5, #0xe]
	mov		r0, #0x2
	strh	r0, [r5, #0xe]
_08074e54:
	add		r0, r5, #0x0
	add		r0, #0x49
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r5, #0x7]
	mov		r3, #0x0
	strb	r0, [r5, #0x7]
	ldrh	r0, [r5, #0xc]
	ldr		r0, _08074e84
_08074e64:
	strh	r0, [r5, #0xc]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x8
	orr		r0, r1
	str		r0, [r5, #0x40]
	ldrb	r0, [r5, #0x4]
	mov		r0, #0x3
	strb	r0, [r5, #0x4]
	ldr		r2, _08074e88
	str		r3, [r2, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r0, #0xc3
	lsl		r0, r0, #0x10
	orr		r0, r1
	str		r0, [r2, #0x0]
	b		_08074f12

_08074e84:	.4byte 0x0000F851
_08074e88:	.4byte Timer3Counter_Reload

_08074e8c:
	add		r0, r5, #0x0
	add		r0, #0x48
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r5, #0x6]
	strb	r0, [r5, #0x6]
	ldrb	r0, [r5, #0x5]
	cmp		r0, #0x0
	bne		_08074eb4
	mov		r2, #0x82
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	ldr		r1, _08074eb0
	mov		r2, #0x1
	mov		r3, #0x0
	bl		sub_08072a5c
	b		_08074ec4

.incbin "base.gba", 0x74EAE, 0x2

_08074eb0:	.4byte 0x0820bc74

_08074eb4:
	mov		r3, #0x82
	lsl		r3, r3, #0x2
	add		r0, r5, r3
	ldr		r1, _08074f18
	mov		r2, #0x4
	mov		r3, #0x0
	bl		sub_08072a5c
_08074ec4:
	ldr		r4, _08074f1c
	ldr		r0, _08074f20
	add		r5, r4, r0
	mov		r1, #0x9e
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	ldr		r1, [r0, #0x4]
	add		r0, r4, #0x0
	mov		r2, #0x0
	mov		r3, #0x1
	bl		sub_08072a5c
	ldr		r2, _08074f24
	add		r0, r4, r2
	mov		r2, #0x0
	strb	r2, [r0, #0x0]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x9
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrb	r0, [r5, #0x4]
	mov		r0, #0x2
	strb	r0, [r5, #0x4]
	add		r1, r4, #0x0
	sub		r1, #0x10
	ldrh	r0, [r1, #0x0]
	mov		r0, #0x0
	strh	r2, [r1, #0x0]
	str		r2, [r5, #0x3c]
	ldr		r3, _08074f28
	add		r2, r4, r3
	ldrb	r1, [r2, #0x0]
	strb	r0, [r2, #0x0]
	ldr		r1, _08074f2c
	add		r2, r4, r1
	ldrb	r1, [r2, #0x0]
	strb	r0, [r2, #0x0]
_08074f12:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08074f18:	.4byte 0x0820bc74
_08074f1c:	.4byte 0x03007018
_08074f20:	.4byte 0xFFFFFE08
_08074f24:	.4byte 0xFFFFFE5A
_08074f28:	.4byte 0xFFFFFE58
_08074f2c:	.4byte 0xFFFFFE59
	thumb_func_end sub_08074b1c

	thumb_func_start sub_08074f30
sub_08074f30:
	push	{ r4, r5, r6, lr }
	lsl		r0, r0, #0x18
	lsr		r6, r0, #0x18
	ldr		r1, _08074f48
	ldrb	r0, [r1, #0x5]
	add		r5, r1, #0x0
	cmp		r0, #0x0
	bne		_08074f54
	ldr		r0, _08074f4c
	ldr		r1, _08074f50
	b		_08074f5a

.incbin "base.gba", 0x74F46, 0x2

_08074f48:	.4byte 0x03006E20
_08074f4c:	.4byte 0x0300241C
_08074f50:	.4byte SIOData_Normal_8bitandUARTMode

_08074f54:
	ldr		r0, _08074f7c
	ldr		r1, _08074f80
	sub		r1, r1, r6
_08074f5a:
	ldrb	r1, [r1, #0x0]
	strb	r1, [r0, #0x0]
	add		r4, r0, #0x0
	mov		r1, #0xfc
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldrh	r0, [r0, #0x0]
	sub		r0, #0x1
	cmp		r0, #0x4
	bls		_08074f70
	b		_080752a2
_08074f70:
	lsl		r0, r0, #0x2
	ldr		r1, _08074f84
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x74F7A, 0x2

_08074f7c:	.4byte 0x0300241C
_08074f80:	.4byte SIOData1_1stChild__Multi_PlayerMode_+ 0x1
_08074f84:	.4byte 0x08074f88
_08074f88:	.4byte 0x08074f9c

.incbin "base.gba", 0x74F8C, 0x10
	thumb_func_end sub_08074f30


.incbin "base.gba", 0x74F9C, 0x306

_080752a2:

.incbin "base.gba", 0x752A2, 0x6
	thumb_func_start sub_080752a8
sub_080752a8:
	push	{ r4, lr }
	ldr		r2, _080752d0
	ldr		r0, [r2, #0x0]
	ldr		r1, _080752d4
	and		r0, r1
	str		r0, [r2, #0x0]
	ldr		r4, _080752d8
	ldr		r0, [r4, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	orr		r0, r1
	str		r0, [r4, #0x40]
	ldrb	r0, [r4, #0x4]
	add		r1, r0, #0x0
	cmp		r1, #0x1
	beq		_080752dc
	cmp		r1, #0x2
	beq		_080752ea
	b		_08075324

.incbin "base.gba", 0x752CE, 0x2

_080752d0:	.4byte Timer3Counter_Reload
_080752d4:	.4byte 0xffbfffff
_080752d8:	.4byte 0x03006E20

_080752dc:
	bl		sub_08074b1c
	ldr		r0, [r4, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r4, #0x40]
	b		_08075324
_080752ea:
	ldrb	r0, [r4, #0x5]
	cmp		r0, #0x0
	bne		_080752f8
	mov		r0, #0x0
	bl		sub_08074f30
	b		_08075324
_080752f8:
	ldr		r2, _08075348
	mov		r0, #0x0
	str		r0, [r2, #0x0]
	ldrh	r0, [r4, #0x2]
	and		r1, r0
	cmp		r1, #0x0
	bne		_08075324
	add		r4, r2, #0x0
_08075308:
	ldrb	r0, [r4, #0x0]
	bl		sub_08074f30
	ldr		r0, [r4, #0x0]
	add		r0, #0x1
	str		r0, [r4, #0x0]
	cmp		r0, #0x3
	bgt		_08075324
	ldr		r0, _0807534c
	ldrh	r1, [r0, #0x2]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08075308
_08075324:
	ldr		r2, _08075350
	ldr		r0, [r2, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0xf
	orr		r0, r1
	str		r0, [r2, #0x0]
	ldr		r2, _0807534c
	ldr		r0, [r2, #0x40]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r2, #0x40]
	ldr		r0, [r2, #0x40]
	ldr		r1, _08075354
	and		r0, r1
	str		r0, [r2, #0x40]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08075348:	.4byte 0x03002430
_0807534c:	.4byte 0x03006E20
_08075350:	.4byte Timer3Counter_Reload
_08075354:	.4byte 0xfffffeff
	thumb_func_end sub_080752a8

	thumb_func_start sub_08075358
sub_08075358:
	ldr		r2, _08075370
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08075374
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r2, _08075378
	ldr		r0, [r2, #0x40]
	mov		r1, #0x20
	orr		r0, r1
	str		r0, [r2, #0x40]
	bx		lr

.incbin "base.gba", 0x7536E, 0x2

_08075370:	.4byte InterruptEnableRegister
_08075374:	.4byte 0x0000FF3F
_08075378:	.4byte 0x03006E20
	thumb_func_end sub_08075358

	thumb_func_start sub_0807537c
sub_0807537c:
	ldr		r2, _08075394
	ldr		r0, [r2, #0x40]
	mov		r1, #0x21
	neg		r1, r1
	and		r0, r1
	str		r0, [r2, #0x40]
	ldr		r2, _08075398
	ldrh	r0, [r2, #0x0]
	mov		r1, #0xc0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	bx		lr

_08075394:	.4byte 0x03006E20
_08075398:	.4byte InterruptEnableRegister
	thumb_func_end sub_0807537c

	thumb_func_start sub_0807539c
sub_0807539c:
	push	{ r4, lr }
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	ldr		r2, _080753e4
	mov		r12, r2
	ldrb	r2, [r2, #0x5]
	lsl		r2, r2, #0x1
	mov		r3, r12
	add		r3, #0x8
	add		r2, r2, r3
	ldrh	r2, [r2, #0x0]
	mov		r4, r12
	ldrh	r3, [r4, #0xc]
	strh	r2, [r4, #0xc]
	mov		r3, r12
	add		r3, #0x61
	ldrb	r2, [r3, #0x0]
	strb	r0, [r3, #0x0]
	mov		r2, r12
	add		r2, #0x62
	ldrb	r0, [r2, #0x0]
	strb	r1, [r2, #0x0]
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x0
	bne		_080753dc
	ldrh	r0, [r4, #0x2]
	ldr		r1, _080753e8
	and		r1, r0
	ldrh	r0, [r4, #0x2]
	strh	r1, [r4, #0x2]
_080753dc:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x753E2, 0x2

_080753e4:	.4byte 0x03006E20
_080753e8:	.4byte 0x0000FFFE
	thumb_func_end sub_0807539c

	thumb_func_start sub_080753ec
sub_080753ec:
	push	{ r4, lr }
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	ldr		r3, _08075414
	add		r4, r3, #0x0
	add		r4, #0x60
	ldrb	r2, [r4, #0x0]
	mov		r2, #0x0
	strb	r2, [r4, #0x0]
	add		r3, #0x5e
	ldrh	r2, [r3, #0x0]
	strh	r1, [r3, #0x0]
	bl		sub_080728c4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x75412, 0x2

_08075414:	.4byte 0x03006E20
	thumb_func_end sub_080753ec

	thumb_func_start sub_08075418
sub_08075418:
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	ldr		r2, _08075434
	mov		r1, #0x1
	str		r1, [r2, #0x0]
	sub		r0, #0x3
	cmp		r0, #0x21
	bls		_0807542a
	b		_080755ba
_0807542a:
	lsl		r0, r0, #0x2
	ldr		r1, _08075438
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08075434:	.4byte 0x03002434
_08075438:	.4byte 0x0807543c
_0807543c:	.4byte 0x080754c4

.incbin "base.gba", 0x75440, 0x84
	thumb_func_end sub_08075418


.incbin "base.gba", 0x754C4, 0xF6

_080755ba:

.incbin "base.gba", 0x755BA, 0xA
	thumb_func_start sub_080755c4
sub_080755c4:
	push	{ r4, r5, r6, r7, lr }
	lsl		r0, r0, #0x18
	lsr		r6, r0, #0x18
	ldr		r4, _08075624
	ldrb	r0, [r4, #0x0]
	mov		r0, #0x0
	strb	r0, [r4, #0x0]
	add		r2, r4, #0x0
	add		r2, #0x5e
	ldrh	r1, [r2, #0x0]
	mov		r7, #0x0
	strh	r0, [r2, #0x0]
	ldr		r1, [r4, #0x58]
	ldr		r0, _08075628
	cmp		r1, r0
	bne		_08075618
	ldr		r0, [r4, #0x40]
	mov		r1, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_08075618
	ldr		r0, [r4, #0x40]
	add		r1, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_08075618
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_08075618
	add		r0, r4, #0x0
	add		r0, #0x61
	ldrb	r0, [r0, #0x0]
	add		r5, r0, #0x0
	cmp		r5, #0x0
	bne		_08075618
	add		r0, r6, #0x0
	bl		sub_08075418
	cmp		r0, #0x0
	bne		_0807562c
_08075618:
	mov		r0, #0x21
	mov		r1, #0x0
	bl		sub_080753ec
	mov		r0, #0x0
	b		_08075676

_08075624:	.4byte 0x03006E20
_08075628:	.4byte 0x4247414D

_0807562c:
	add		r0, r6, #0x0
	sub		r0, #0x16
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	bls		_08075642
	ldrh	r0, [r4, #0x2]
	ldr		r1, _0807567c
	and		r1, r0
	ldrh	r0, [r4, #0x2]
	strh	r1, [r4, #0x2]
_08075642:
	ldrh	r1, [r4, #0x2]
	ldr		r0, _08075680
	and		r0, r1
	ldrh	r1, [r4, #0x2]
	strh	r0, [r4, #0x2]
	ldrb	r0, [r4, #0x0]
	mov		r0, #0xff
	strb	r0, [r4, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x66
	strb	r7, [r0, #0x0]
	add		r0, #0x2
	strh	r5, [r0, #0x0]
	ldr		r1, _08075684
	add		r0, r4, r1
	strh	r5, [r0, #0x0]
	add		r1, #0x2
	add		r0, r4, r1
	strh	r5, [r0, #0x0]
	ldrh	r0, [r4, #0x2]
	mov		r1, #0x1
	orr		r0, r1
	ldrh	r1, [r4, #0x2]
	orr		r0, r7
	strh	r0, [r4, #0x2]
	mov		r0, #0x1
_08075676:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0807567c:	.4byte 0x0000FFBF
_08075680:	.4byte 0x0000FFFD
_08075684:	.4byte 0x00000702
	thumb_func_end sub_080755c4

	thumb_func_start sub_08075688
sub_08075688:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	ldr		r4, _080756b4
	ldr		r0, _080756b8
	add		r1, r4, r0
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	cmp		r6, #0x0
	beq		_080756de
	cmp		r7, #0x0
	beq		_080756de
	cmp		r6, #0x4
	ble		_080756c0
	ldr		r1, _080756bc
	add		r0, r4, r1
	add		r1, r7, #0x0
	mov		r2, #0x5
	bl		sub_0807c304
	b		_080756de

.incbin "base.gba", 0x756B2, 0x2

_080756b4:	.4byte 0x03006E20
_080756b8:	.4byte 0x00000701
_080756bc:	.4byte 0x000006FC

_080756c0:
	ldr		r0, _080756e4
	add		r4, r4, r0
	add		r1, r6, r4
	mov		r5, #0x5
	sub		r5, r5, r6
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_0807c304
	add		r5, r5, r4
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	add		r2, r6, #0x0
	bl		sub_0807c304
_080756de:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_080756e4:	.4byte 0x000006FC
	thumb_func_end sub_08075688

	thumb_func_start sub_080756e8
sub_080756e8:
	push	{ lr }
	ldr		r0, _080756fc
	ldr		r1, _08075700
	bl		sub_0807c238
	cmp		r0, #0x0
	beq		_08075704
	mov		r0, #0x0
	b		_08075706

.incbin "base.gba", 0x756FA, 0x2

_080756fc:	.4byte 0x0300751C
_08075700:	.4byte 0x0820bccc

_08075704:
	mov		r0, #0x1
_08075706:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7570A, 0x2
	thumb_func_end sub_080756e8

	thumb_func_start sub_0807570c
sub_0807570c:
	ldr		r0, _08075724
	ldr		r2, _08075728
	add		r1, r0, r2
	mov		r2, #0x0
	strb	r2, [r1, #0x0]
	ldr		r3, _0807572c
	add		r1, r0, r3
	mov		r3, #0x0
	strh	r2, [r1, #0x0]
	add		r0, #0x65
	strb	r3, [r0, #0x0]
	bx		lr

_08075724:	.4byte 0x03006E20
_08075728:	.4byte 0x0000047D
_0807572c:	.4byte 0x000006FA
	thumb_func_end sub_0807570c

	thumb_func_start sub_08075730
sub_08075730:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	lsl		r4, r1, #0x10
	lsr		r4, r4, #0x10
	ldr		r0, _0807575c
	ldr		r1, _08075760
	add		r5, r0, r1
	ldr		r1, _08075764
	add		r0, r0, r1
	ldrh	r1, [r5, #0x0]
	add		r0, r0, r1
	add		r1, r2, #0x0
	add		r2, r4, #0x0
	bl		sub_0807c304
	ldrh	r0, [r5, #0x0]
	add		r4, r4, r0
	strh	r4, [r5, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7575A, 0x2

_0807575c:	.4byte 0x03006E20
_08075760:	.4byte 0x000006FA
_08075764:	.4byte 0x0000047D
	thumb_func_end sub_08075730

	thumb_func_start sub_08075768
sub_08075768:
	push	{ r4, lr }
	sub		sp, #0x4
	ldr		r4, _08075784
	add		r0, r4, #0x0
	add		r0, #0x5c
	ldrb	r0, [r0, #0x0]
	add		r3, r0, #0x0
	cmp		r3, #0x0
	beq		_08075788
	mov		r0, #0x21
	mov		r1, #0x0
	bl		sub_080753ec
	b		_080757a6

_08075784:	.4byte 0x03006E20

_08075788:
	ldr		r0, _080757b0
	str		r3, [r0, #0x0]
	add		r0, #0x1c
	strh	r3, [r0, #0x0]
	ldr		r2, _080757b4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _080757b8
	and		r0, r1
	strh	r0, [r2, #0x0]
	str		r3, [sp, #0x0]
	ldr		r2, _080757bc
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_08071b6c
_080757a6:
	add		sp, #0x4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x757AE, 0x2

_080757b0:	.4byte Timer3Counter_Reload
_080757b4:	.4byte InterruptEnableRegister
_080757b8:	.4byte 0x0000FF3F
_080757bc:	.4byte 0x050001D9
	thumb_func_end sub_08075768

	thumb_func_start sub_080757c0
sub_080757c0:
	push	{ lr }
	bl		sub_08075358
	ldr		r2, _080757dc
	ldr		r1, [r2, #0x58]
	ldr		r0, _080757e0
	cmp		r1, r0
	beq		_080757e4
	mov		r0, #0x21
	mov		r1, #0x0
	bl		sub_080753ec
	b		_08075876

.incbin "base.gba", 0x757DA, 0x2

_080757dc:	.4byte 0x03006E20
_080757e0:	.4byte 0x4247414D

_080757e4:
	ldrh	r1, [r2, #0x2]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_080757fc
	mov		r0, #0x21
	mov		r1, #0x0
	bl		sub_080753ec
_080757f6:
	bl		sub_0807537c
	b		_08075876
_080757fc:
	add		r0, r2, #0x0
	add		r0, #0x61
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1e
	beq		_080757f6
	add		r0, r2, #0x0
	add		r0, #0x5c
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0807581a
	ldrh	r1, [r2, #0x2]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_080757f6
_0807581a:
	ldr		r1, _08075858
	ldrh	r2, [r1, #0x2]
	ldr		r0, _0807585c
	and		r0, r2
	ldrh	r2, [r1, #0x2]
	strh	r0, [r1, #0x2]
	ldrh	r2, [r1, #0x2]
	mov		r0, #0x20
	and		r0, r2
	add		r3, r1, #0x0
	cmp		r0, #0x0
	beq		_08075860
	add		r0, r3, #0x0
	add		r0, #0x44
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x12
	bne		_08075860
	ldrh	r0, [r3, #0x2]
	mov		r1, #0x1
	orr		r0, r1
	ldrh	r1, [r3, #0x2]
	mov		r1, #0x0
	orr		r0, r1
	strh	r0, [r3, #0x2]
	mov		r0, #0x1e
	mov		r1, #0x0
	bl		sub_0807539c
	bl		sub_08073e64
	b		_080757f6

_08075858:	.4byte 0x03006E20
_0807585c:	.4byte 0x0000FFFB

_08075860:
	ldrh	r0, [r3, #0x2]
	mov		r1, #0x1
	ldrh	r2, [r3, #0x2]
	orr		r1, r0
	strh	r1, [r3, #0x2]
	mov		r0, #0x1e
	mov		r1, #0x1
	bl		sub_0807539c
	bl		sub_0807537c
_08075876:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7587A, 0x2
	push	{ r4, r5, r6, lr }
	ldr		r6, _08075894
	add		r2, r6, #0x0
	add		r2, #0x62
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x1
	beq		_080758a6
	cmp		r0, #0x1
	bgt		_08075898
	cmp		r0, #0x0
	beq		_0807589e
	b		_0807595e

_08075894:	.4byte 0x03006E20

_08075898:
	cmp		r0, #0x2
	beq		_080758bc
	b		_0807595e
_0807589e:
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	ldrb	r1, [r2, #0x0]
	strb	r0, [r2, #0x0]
_080758a6:
	bl		sub_08073e90
	ldr		r0, _080758b8
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	add		r1, #0x1
	ldrb	r2, [r0, #0x0]
	strb	r1, [r0, #0x0]
	b		_0807595e

_080758b8:	.4byte 0x03006E20

_080758bc:
	mov		r0, #0x0
	bl		sub_08072b58
	add		r0, r6, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r6, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r6, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r6, #0xc]
	mov		r5, #0x0
	strh	r0, [r6, #0xc]
	str		r4, [r6, #0x3c]
	ldrb	r0, [r6, #0x4]
	strb	r5, [r6, #0x4]
	ldr		r0, [r6, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r6, #0x40]
	ldr		r0, [r6, #0x40]
	ldr		r1, _08075964
	and		r0, r1
	str		r0, [r6, #0x40]
	ldr		r0, [r6, #0x40]
	ldr		r1, _08075968
	and		r0, r1
	str		r0, [r6, #0x40]
	ldr		r0, [r6, #0x40]
	ldr		r1, _0807596c
	and		r0, r1
	str		r0, [r6, #0x40]
	ldr		r0, [r6, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r6, #0x40]
	ldrh	r1, [r6, #0x2]
	ldr		r0, _08075970
	and		r0, r1
	ldrh	r1, [r6, #0x2]
	strh	r0, [r6, #0x2]
	ldrh	r1, [r6, #0x2]
	ldr		r0, _08075974
	and		r0, r1
	ldrh	r1, [r6, #0x2]
	strh	r0, [r6, #0x2]
	ldrh	r1, [r6, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r6, #0x2]
	strh	r0, [r6, #0x2]
	ldrh	r0, [r6, #0x2]
	ldrh	r1, [r6, #0x2]
	strh	r0, [r6, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r6, #0x2]
	and		r4, r0
	ldrh	r0, [r6, #0x2]
	strh	r4, [r6, #0x2]
	ldrh	r0, [r6, #0x2]
	ldrh	r1, [r6, #0x2]
	strh	r0, [r6, #0x2]
	add		r0, r6, #0x0
	add		r0, #0x45
	ldrb	r1, [r0, #0x0]
	strb	r5, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
_0807595e:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08075964:	.4byte 0xfffffdff
_08075968:	.4byte 0xfffffbff
_0807596c:	.4byte 0xffffdfff
_08075970:	.4byte 0x0000FFF7
_08075974:	.4byte 0x0000FFEF

.incbin "base.gba", 0x75978, 0xF8
	push	{ r4, lr }
	ldr		r3, _08075a90
	mov		r0, #0x62
	add		r0, r0, r3
	mov		r12, r0
	ldrb	r0, [r0, #0x0]
	add		r2, r0, #0x0
	add		r4, r3, #0x0
	cmp		r2, #0x1
	beq		_08075aaa
	cmp		r2, #0x1
	bgt		_08075a94
	cmp		r2, #0x0
	beq		_08075a9e
	b		_08075b5c

.incbin "base.gba", 0x75A8E, 0x2

_08075a90:	.4byte 0x03006E20

_08075a94:
	cmp		r2, #0x2
	beq		_08075af8
	cmp		r2, #0x3
	beq		_08075b20
	b		_08075b5c
_08075a9e:
	mov		r1, r12
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	ldrb	r1, [r1, #0x0]
	mov		r2, r12
	strb	r0, [r2, #0x0]
_08075aaa:
	ldr		r0, [r4, #0x70]
	cmp		r0, #0x23
	bne		_08075ad6
	add		r0, r4, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	beq		_08075ad6
	mov		r1, #0xf2
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x63
	strb	r0, [r1, #0x0]
	sub		r1, #0x1
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	ldrb	r2, [r1, #0x0]
	strb	r0, [r1, #0x0]
	b		_08075af8
_08075ad6:
	add		r0, r4, #0x0
	add		r0, #0xcc
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_08075aec
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0x3
	strb	r1, [r0, #0x0]
	b		_08075b5c
_08075aec:
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	add		r1, #0x1
	ldrb	r2, [r0, #0x0]
	strb	r1, [r0, #0x0]
_08075af8:
	ldr		r4, _08075b14
	ldr		r2, _08075b18
	add		r0, r4, r2
	ldrb	r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_080738f8
	ldr		r0, _08075b1c
	add		r2, r4, r0
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	ldrb	r1, [r2, #0x0]
	strb	r0, [r2, #0x0]
	b		_08075b5c

_08075b14:	.4byte 0x03007000
_08075b18:	.4byte 0xFFFFFE83
_08075b1c:	.4byte 0xFFFFFE82

_08075b20:
	add		r0, r3, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	strb	r2, [r0, #0x0]
	ldrh	r1, [r3, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r3, #0x2]
	mov		r2, #0x0
	strh	r0, [r3, #0x2]
	ldrh	r0, [r3, #0x2]
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r1, r4, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x2]
	orr		r0, r2
	strh	r0, [r3, #0x2]
	add		r0, r3, #0x0
	add		r0, #0x63
	strb	r2, [r0, #0x0]
	add		r0, #0x69
	strb	r2, [r0, #0x0]
	sub		r0, #0x87
	ldrb	r1, [r0, #0x0]
	strb	r2, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
_08075b5c:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x75B62, 0x2
	thumb_func_end sub_080757c0

	thumb_func_start sub_08075b64
sub_08075b64:
	push	{ lr }
	mov		r1, #0x1
	bl		sub_08075b7c
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x75B70, 0xC
	thumb_func_end sub_08075b64

	thumb_func_start sub_08075b7c
sub_08075b7c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	sub		sp, #0x4
	mov		r8, r0
	add		r5, r1, #0x0
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	ldr		r7, _08075c84
	ldr		r2, _08075c88
	mov		r0, sp
	add		r1, r7, #0x0
	bl		sub_08071b6c
	bl		sub_08075358
	ldr		r0, _08075c8c
	str		r0, [r7, #0x58]
	add		r0, r7, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r7, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r7, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r7, #0xc]
	mov		r6, #0x0
	strh	r0, [r7, #0xc]
	str		r4, [r7, #0x3c]
	ldrb	r0, [r7, #0x4]
	strb	r6, [r7, #0x4]
	ldr		r0, [r7, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r7, #0x40]
	ldr		r0, [r7, #0x40]
	ldr		r1, _08075c90
	and		r0, r1
	str		r0, [r7, #0x40]
	ldr		r0, [r7, #0x40]
	ldr		r1, _08075c94
	and		r0, r1
	str		r0, [r7, #0x40]
	ldr		r0, [r7, #0x40]
	ldr		r1, _08075c98
	and		r0, r1
	str		r0, [r7, #0x40]
	ldr		r0, [r7, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r7, #0x40]
	ldrh	r1, [r7, #0x2]
	ldr		r0, _08075c9c
	and		r0, r1
	ldrh	r1, [r7, #0x2]
	strh	r0, [r7, #0x2]
	ldrh	r1, [r7, #0x2]
	ldr		r0, _08075ca0
	and		r0, r1
	ldrh	r1, [r7, #0x2]
	strh	r0, [r7, #0x2]
	ldrh	r1, [r7, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r7, #0x2]
	strh	r0, [r7, #0x2]
	ldrh	r0, [r7, #0x2]
	ldrh	r1, [r7, #0x2]
	strh	r0, [r7, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r7, #0x2]
	and		r4, r0
	ldrh	r0, [r7, #0x2]
	strh	r4, [r7, #0x2]
	ldrh	r0, [r7, #0x2]
	ldrh	r1, [r7, #0x2]
	strh	r0, [r7, #0x2]
	bl		sub_0807570c
	bl		sub_0807265c
	add		r0, r7, #0x0
	add		r0, #0x65
	strb	r6, [r0, #0x0]
	mov		r0, r8
	str		r0, [r7, #0x70]
	lsl		r5, r5, #0x18
	lsr		r5, r5, #0x18
	add		r0, r5, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	ldrh	r0, [r7, #0x2]
	mov		r1, #0x1
	orr		r0, r1
	ldrh	r1, [r7, #0x2]
	orr		r0, r6
	strh	r0, [r7, #0x2]
	bl		sub_0807537c
	ldr		r2, _08075ca4
	ldr		r0, [r2, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0xf
	and		r0, r1
	cmp		r0, #0x0
	beq		_08075c72
	ldr		r0, [r2, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_08075c76
_08075c72:
	bl		sub_0807be3c
_08075c76:
	add		sp, #0x4
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x75C82, 0x2

_08075c84:	.4byte 0x03006E20
_08075c88:	.4byte 0x050001D9
_08075c8c:	.4byte 0x4247414D
_08075c90:	.4byte 0xfffffdff
_08075c94:	.4byte 0xfffffbff
_08075c98:	.4byte 0xffffdfff
_08075c9c:	.4byte 0x0000FFF7
_08075ca0:	.4byte 0x0000FFEF
_08075ca4:	.4byte Timer3Counter_Reload
	thumb_func_end sub_08075b7c

	thumb_func_start sub_08075ca8
sub_08075ca8:
	push	{ r4, r5, lr }
	ldr		r4, _08075ce8
	add		r0, r4, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_08075cce
	add		r0, r4, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x11
	beq		_08075cce
	bl		sub_08074500
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xfb
	strb	r1, [r0, #0x0]
_08075cce:
	ldr		r5, _08075ce8
	add		r4, r5, #0x0
	add		r4, #0x62
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x2
	beq		_08075d0e
	cmp		r0, #0x2
	bgt		_08075cec
	cmp		r0, #0x0
	beq		_08075d00
	cmp		r0, #0x1
	beq		_08075d06
	b		_08075e8e

_08075ce8:	.4byte 0x03006E20

_08075cec:
	cmp		r0, #0xfa
	beq		_08075ddc
	cmp		r0, #0xfa
	bgt		_08075cfa
	cmp		r0, #0x3
	beq		_08075d24
	b		_08075e8e
_08075cfa:
	cmp		r0, #0xfb
	beq		_08075dea
	b		_08075e8e
_08075d00:
	bl		sub_08072c88
	b		_08075de0
_08075d06:
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
_08075d0e:
	bl		sub_08072da8
	ldr		r0, _08075d20
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	add		r1, #0x1
	ldrb	r2, [r0, #0x0]
	strb	r1, [r0, #0x0]
	b		_08075e8e

_08075d20:	.4byte 0x03006E20

_08075d24:
	ldr		r1, [r5, #0x70]
	ldrb	r0, [r5, #0x6]
	add		r0, #0x78
	strb	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	add		r0, r5, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r1, #0x0
	strh	r0, [r5, #0xc]
	str		r4, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r1, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08075dc8
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08075dcc
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08075dd0
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08075dd4
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08075dd8
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r5, #0x2]
	and		r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r4, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_08075e8e

_08075dc8:	.4byte 0xfffffdff
_08075dcc:	.4byte 0xfffffbff
_08075dd0:	.4byte 0xffffdfff
_08075dd4:	.4byte 0x0000FFF7
_08075dd8:	.4byte 0x0000FFEF

_08075ddc:
	bl		sub_08072da8
_08075de0:
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	b		_08075e8e
_08075dea:
	add		r0, r5, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r1, #0x0
	strh	r0, [r5, #0xc]
	str		r4, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r1, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08075e94
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08075e98
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08075e9c
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08075ea0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08075ea4
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r5, #0x2]
	and		r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r4, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	add		r0, r5, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
_08075e8e:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08075e94:	.4byte 0xfffffdff
_08075e98:	.4byte 0xfffffbff
_08075e9c:	.4byte 0xffffdfff
_08075ea0:	.4byte 0x0000FFF7
_08075ea4:	.4byte 0x0000FFEF
	thumb_func_end sub_08075ca8

	thumb_func_start sub_08075ea8
sub_08075ea8:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	lsl		r2, r2, #0x10
	lsr		r5, r2, #0x10
	bl		sub_08075358
	mov		r0, #0x20
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_08075ec6
	bl		sub_0807537c
	b		_08075f18
_08075ec6:
	bl		sub_0807c67c
	cmp		r0, #0x0
	bne		_08075ed2
	mov		r0, #0x21
	b		_08075ef8
_08075ed2:
	bl		sub_0807c65c
	cmp		r0, #0x0
	bne		_08075eec
	ldr		r0, _08075ee8
	add		r1, r4, #0x0
	mov		r2, #0x4
	bl		sub_0807c304
	b		_08075f04

.incbin "base.gba", 0x75EE6, 0x2

_08075ee8:	.4byte 0x03006E8A

_08075eec:
	add		r0, r4, #0x0
	bl		sub_0807c6a4
	cmp		r0, #0x0
	bne		_08075f04
	mov		r0, #0x20
_08075ef8:
	mov		r1, #0x0
	bl		sub_080753ec
	bl		sub_0807537c
	b		_08075f18
_08075f04:
	ldr		r0, _08075f20
	str		r6, [r0, #0x70]
	str		r4, [r0, #0x74]
	str		r5, [r0, #0x78]
	mov		r0, #0x20
	mov		r1, #0x0
	bl		sub_0807539c
	bl		sub_0807537c
_08075f18:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x75F1E, 0x2

_08075f20:	.4byte 0x03006E20
	thumb_func_end sub_08075ea8

	thumb_func_start sub_08075f24
sub_08075f24:
	push	{ r4, lr }
	ldr		r2, _08075f58
	add		r0, r2, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_08075f60
	add		r0, r2, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x23
	bne		_08075f5c
	add		r3, r2, #0x0
	add		r3, #0x66
	mov		r1, #0x0
	mov		r0, #0x24
	strb	r0, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	b		_08075f60

_08075f58:	.4byte 0x03006E20

_08075f5c:
	bl		sub_08074500
_08075f60:
	ldr		r3, _08075f78
	add		r4, r3, #0x0
	add		r4, #0x62
	ldrb	r0, [r4, #0x0]
	add		r1, r0, #0x0
	cmp		r1, #0x1
	beq		_08075fa6
	cmp		r1, #0x1
	bgt		_08075f7c
	cmp		r1, #0x0
	beq		_08075f82
	b		_08076000

_08075f78:	.4byte 0x03006E20

_08075f7c:
	cmp		r1, #0xf0
	beq		_08075fc6
	b		_08076000
_08075f82:
	mov		r2, #0xf0
	lsl		r2, r2, #0x1
	add		r0, r3, r2
	strh	r1, [r0, #0x0]
	add		r1, r3, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	ldr		r1, [r3, #0x74]
	ldr		r2, [r3, #0x78]
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	bl		sub_08073810
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	b		_08076000
_08075fa6:
	ldr		r2, [r3, #0x70]
	mov		r0, #0xf2
	lsl		r0, r0, #0x1
	add		r1, r3, r0
	ldr		r0, [r1, #0x0]
	ldrb	r0, [r0, #0x0]
	strb	r0, [r2, #0x0]
	ldr		r0, [r1, #0x0]
	ldrb	r0, [r0, #0x0]
	bl		sub_0807c5b8
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_08076000
_08075fc6:
	add		r1, r3, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r3, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r3, #0x2]
	strh	r0, [r3, #0x2]
	ldrh	r1, [r3, #0x2]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r2, #0x0
	ldrh	r2, [r3, #0x2]
	orr		r0, r1
	strh	r0, [r3, #0x2]
	add		r0, r3, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r3, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
_08076000:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x76006, 0x5E
	push	{ r4, r5, lr }
	ldr		r1, _08076094
	add		r0, r1, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_08076080
	add		r0, r1, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x24
	beq		_08076080
	bl		sub_08074500
_08076080:
	ldr		r4, _08076094
	add		r5, r4, #0x0
	add		r5, #0x62
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_08076098
	cmp		r0, #0x1
	beq		_080760b2
	b		_080760f4

.incbin "base.gba", 0x76092, 0x2

_08076094:	.4byte 0x03006E20

_08076098:
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r1, [r4, #0x70]
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	bl		sub_080738f8
	ldrb	r0, [r5, #0x0]
	add		r0, #0x1
	ldrb	r1, [r5, #0x0]
	strb	r0, [r5, #0x0]
	b		_080760f4
_080760b2:
	ldr		r0, [r4, #0x70]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	bl		sub_0807c5e8
	add		r1, r4, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r4, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r4, #0x2]
	mov		r2, #0x0
	strh	r0, [r4, #0x2]
	ldrh	r0, [r4, #0x2]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r1, r3, #0x0
	orr		r0, r1
	ldrh	r1, [r4, #0x2]
	orr		r0, r2
	strh	r0, [r4, #0x2]
	add		r0, r4, #0x0
	add		r0, #0x63
	strb	r2, [r0, #0x0]
	add		r0, #0x69
	strb	r2, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
_080760f4:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x760FA, 0x82
	push	{ r4, r5, lr }
	ldr		r4, _080761b0
	add		r0, r4, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_080761b8
	add		r0, r4, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x15
	bne		_080761b4
	bl		sub_08074500
	add		r1, r4, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	ldr		r0, [r4, #0x70]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	bl		sub_0807c5e8
	b		_080761b8

.incbin "base.gba", 0x761AE, 0x2

_080761b0:	.4byte 0x03006E20

_080761b4:
	bl		sub_08074500
_080761b8:
	bl		sub_080728a0
	mov		r1, #0x40
	and		r1, r0
	cmp		r1, #0x0
	beq		_080761ea
	ldr		r2, _08076200
	add		r3, r2, #0x0
	add		r3, #0x66
	mov		r1, #0x0
	mov		r0, #0x23
	strb	r0, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	ldr		r0, [r2, #0x70]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	bl		sub_0807c5e8
_080761ea:
	ldr		r5, _08076200
	add		r4, r5, #0x0
	add		r4, #0x62
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x1
	beq		_0807622c
	cmp		r0, #0x1
	bgt		_08076204
	cmp		r0, #0x0
	beq		_0807620a
	b		_0807626e

_08076200:	.4byte 0x03006E20

_08076204:
	cmp		r0, #0xf0
	beq		_08076256
	b		_0807626e
_0807620a:
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r1, [r5, #0x74]
	ldr		r2, [r5, #0x78]
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	ldr		r3, [r5, #0x70]
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	bl		sub_08073020
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	b		_0807626e
_0807622c:
	ldr		r0, [r5, #0x74]
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldr		r1, [r1, #0x0]
	add		r1, #0x1
	sub		r2, #0x4
	add		r4, r5, r2
	ldrh	r2, [r4, #0x0]
	sub		r2, #0x1
	bl		sub_0807c304
	ldr		r1, [r5, #0x7c]
	ldrb	r0, [r4, #0x0]
	sub		r0, #0x1
	strb	r0, [r1, #0x0]
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_0807626e
_08076256:
	add		r0, r5, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
_0807626e:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08075f24

	thumb_func_start sub_08076274
sub_08076274:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_08075358
	mov		r0, #0x23
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_0807628e
	bl		sub_0807537c
	b		_080762b8
_0807628e:
	add		r0, r4, #0x0
	bl		sub_0807c054
	cmp		r0, #0xff
	ble		_080762a6
	mov		r0, #0x20
	mov		r1, #0x0
	bl		sub_080753ec
	bl		sub_0807537c
	b		_080762b8
_080762a6:
	ldr		r0, _080762c0
	str		r5, [r0, #0x70]
	str		r4, [r0, #0x74]
	mov		r0, #0x23
	mov		r1, #0x0
	bl		sub_0807539c
	bl		sub_0807537c
_080762b8:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x762BE, 0x2

_080762c0:	.4byte 0x03006E20
	thumb_func_end sub_08076274

	thumb_func_start sub_080762c4
sub_080762c4:
	push	{ r4, lr }
	ldr		r2, _080762f8
	add		r0, r2, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_08076300
	add		r0, r2, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x28
	bne		_080762fc
	add		r3, r2, #0x0
	add		r3, #0x66
	mov		r1, #0x0
	mov		r0, #0x24
	strb	r0, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	b		_08076300

_080762f8:	.4byte 0x03006E20

_080762fc:
	bl		sub_08074500
_08076300:
	ldr		r2, _08076318
	add		r4, r2, #0x0
	add		r4, #0x62
	ldrb	r0, [r4, #0x0]
	add		r1, r0, #0x0
	cmp		r1, #0x1
	beq		_08076340
	cmp		r1, #0x1
	bgt		_0807631c
	cmp		r1, #0x0
	beq		_08076322
	b		_08076372

_08076318:	.4byte 0x03006E20

_0807631c:
	cmp		r1, #0xf0
	beq		_0807635a
	b		_08076372
_08076322:
	mov		r3, #0xf0
	lsl		r3, r3, #0x1
	add		r0, r2, r3
	strh	r1, [r0, #0x0]
	add		r1, r2, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	ldr		r1, [r2, #0x74]
	bl		sub_08073b18
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	b		_08076372
_08076340:
	ldr		r0, [r2, #0x70]
	mov		r3, #0xf2
	lsl		r3, r3, #0x1
	add		r1, r2, r3
	ldr		r1, [r1, #0x0]
	mov		r2, #0x4
	bl		sub_0807c304
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_08076372
_0807635a:
	add		r0, r2, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
_08076372:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080762c4

	thumb_func_start sub_08076378
sub_08076378:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	bl		sub_08075358
	mov		r0, #0x24
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_08076390
	bl		sub_0807537c
	b		_080763c0
_08076390:
	ldr		r4, _080763c8
	add		r0, r4, #0x0
	add		r0, #0xce
	ldrb	r0, [r0, #0x0]
	strb	r0, [r5, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xcf
	ldrb	r0, [r0, #0x0]
	strb	r0, [r5, #0x1]
	add		r0, r4, #0x0
	add		r0, #0xd0
	ldrb	r0, [r0, #0x0]
	strb	r0, [r5, #0x2]
	add		r0, r4, #0x0
	add		r0, #0xd1
	ldrb	r0, [r0, #0x0]
	strb	r0, [r5, #0x3]
	bl		sub_0807537c
	ldrh	r1, [r4, #0x2]
	ldr		r0, _080763cc
	and		r0, r1
	ldrh	r1, [r4, #0x2]
	strh	r0, [r4, #0x2]
_080763c0:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x763C6, 0x2

_080763c8:	.4byte 0x03006E20
_080763cc:	.4byte 0x0000FFFE
	thumb_func_end sub_08076378

	thumb_func_start sub_080763d0
sub_080763d0:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	ldr		r1, _0807641c
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r2, _08076420
	mov		r0, #0x0
	str		r0, [r2, #0x0]
	add		r6, r1, #0x0
	ldr		r7, _08076424
	add		r4, r6, #0x0
	add		r3, r2, #0x0
_080763e8:
	ldr		r0, [r3, #0x0]
	add		r2, r5, r0
	ldrh	r1, [r4, #0x0]
	ldrb	r2, [r2, #0x0]
	add		r1, r1, r2
	strh	r1, [r4, #0x0]
	add		r0, #0x1
	str		r0, [r3, #0x0]
	cmp		r0, #0xbd
	ble		_080763e8
	add		r0, r5, #0x0
	add		r0, #0xbe
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	add		r1, r5, #0x0
	add		r1, #0xbf
	ldrb	r1, [r1, #0x0]
	add		r1, r1, r0
	strh	r1, [r7, #0x0]
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	ldrh	r6, [r6, #0x0]
	cmp		r1, r6
	beq		_08076428
	mov		r0, #0x0
	b		_0807642a

_0807641c:	.4byte 0x0300243A
_08076420:	.4byte 0x0300243C
_08076424:	.4byte 0x03002438

_08076428:
	mov		r0, #0x1
_0807642a:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_080763d0

	thumb_func_start sub_08076430
sub_08076430:
	add		r1, r0, #0x0
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x4d
	bne		_08076442
	ldrb	r0, [r1, #0x1]
	cmp		r0, #0x41
	bne		_08076442
	mov		r0, #0x1
	b		_08076444
_08076442:
	mov		r0, #0x0
_08076444:
	bx		lr

.incbin "base.gba", 0x76446, 0x2
	thumb_func_end sub_08076430

	thumb_func_start sub_08076448
sub_08076448:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	mov		r8, r2
	bl		sub_08075358
	mov		r0, #0x3
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_08076468
	bl		sub_0807537c
	b		_080764f0
_08076468:
	add		r0, r5, #0x0
	bl		sub_0807c054
	add		r6, r0, #0x0
	add		r0, r7, #0x0
	bl		sub_0807c054
	add		r4, r0, #0x0
	mov		r0, r8
	bl		sub_0807c054
	cmp		r6, #0x14
	bgt		_080764a0
	cmp		r4, #0x20
	bgt		_080764a0
	cmp		r0, #0x10
	bgt		_080764a0
	cmp		r6, #0x0
	beq		_080764a0
	cmp		r4, #0x0
	beq		_080764a0
	cmp		r0, #0x0
	beq		_080764a0
	add		r0, r5, #0x0
	bl		sub_0807c540
	cmp		r0, #0x0
	bne		_080764ae
_080764a0:
	mov		r0, #0x20
	mov		r1, #0x0
	bl		sub_080753ec
	bl		sub_0807537c
	b		_080764f0
_080764ae:
	ldr		r4, _080764fc
	str		r5, [r4, #0x70]
	str		r7, [r4, #0x74]
	mov		r0, r8
	str		r0, [r4, #0x78]
	ldr		r5, _08076500
	mov		r0, #0x0
	str		r0, [r5, #0x0]
	mov		r0, #0x3
	mov		r1, #0x0
	bl		sub_0807539c
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x1
	ldrh	r2, [r4, #0x2]
	orr		r0, r1
	strh	r0, [r4, #0x2]
	bl		sub_0807537c
	ldr		r0, [r5, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0xf
	and		r0, r1
	cmp		r0, #0x0
	beq		_080764ec
	ldr		r0, [r5, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_080764f0
_080764ec:
	bl		sub_0807be3c
_080764f0:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x764FA, 0x2

_080764fc:	.4byte 0x03006E20
_08076500:	.4byte Timer3Counter_Reload
	thumb_func_end sub_08076448

	thumb_func_start sub_08076504
sub_08076504:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	ldr		r1, _0807652c
	add		r0, r1, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_080765e2
	add		r0, r1, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x11
	cmp		r0, #0x10
	bhi		_080765d4
	lsl		r0, r0, #0x2
	ldr		r1, _08076530
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x7652A, 0x2

_0807652c:	.4byte 0x03006E20
_08076530:	.4byte 0x08076534

.incbin "base.gba", 0x76534, 0x44
	thumb_func_end sub_08076504


.incbin "base.gba", 0x76578, 0x5C

_080765d4:

.incbin "base.gba", 0x765D4, 0xE
_080765e2:

.incbin "base.gba", 0x765E2, 0xE
_080765f0:

.incbin "base.gba", 0x765F0, 0x18
_08076608:	.4byte 0x03006E20

_0807660c:

.incbin "base.gba", 0x7660C, 0x20
_0807662c:

.incbin "base.gba", 0x7662C, 0x6
_08076632:

.incbin "base.gba", 0x76632, 0xA
_0807663c:

.incbin "base.gba", 0x7663C, 0x6
_08076642:

.incbin "base.gba", 0x76642, 0x2
_08076644:

.incbin "base.gba", 0x76644, 0x6
_0807664a:

.incbin "base.gba", 0x7664A, 0xA
_08076654:

.incbin "base.gba", 0x76654, 0x2
_08076656:

.incbin "base.gba", 0x76656, 0x6
_0807665c:

.incbin "base.gba", 0x7665C, 0x2
_0807665e:

.incbin "base.gba", 0x7665E, 0x6
_08076664:

.incbin "base.gba", 0x76664, 0x10
_08076674:

.incbin "base.gba", 0x76674, 0x16
_0807668a:

.incbin "base.gba", 0x7668A, 0x22
_080766ac:

.incbin "base.gba", 0x766AC, 0x8
_080766b4:

.incbin "base.gba", 0x766B4, 0x16
_080766ca:

.incbin "base.gba", 0x766CA, 0x2E
_080766f8:	.4byte 0x0000047D

_080766fc:

.incbin "base.gba", 0x766FC, 0x28
_08076724:

.incbin "base.gba", 0x76724, 0x10
_08076734:	.4byte 0x000004FD
_08076738:	.4byte 0x0000047D

_0807673c:

.incbin "base.gba", 0x7673C, 0xA
_08076746:

.incbin "base.gba", 0x76746, 0x22
_08076768:	.4byte 0x00000481
_0807676c:	.4byte 0x000004C7

_08076770:

.incbin "base.gba", 0x76770, 0x12
_08076782:

.incbin "base.gba", 0x76782, 0x28
_080767aa:

.incbin "base.gba", 0x767AA, 0x50
_080767fa:

.incbin "base.gba", 0x767FA, 0x6
_08076800:

.incbin "base.gba", 0x76800, 0x4
_08076804:

.incbin "base.gba", 0x76804, 0xA
_0807680e:

.incbin "base.gba", 0x7680E, 0xA4
_080768b2:

.incbin "base.gba", 0x768B2, 0xA
_080768bc:	.4byte 0xfffffdff
_080768c0:	.4byte 0xfffffbff
_080768c4:	.4byte 0xffffdfff
_080768c8:	.4byte 0x0000FFF7
_080768cc:	.4byte 0x0000FFEF
	thumb_func_start sub_080768d0
sub_080768d0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_08075358
	mov		r0, #0x4
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_080768e8
	bl		sub_0807537c
	b		_08076936
_080768e8:
	add		r0, r4, #0x0
	bl		sub_0807c054
	cmp		r0, #0x14
	bgt		_080768f6
	cmp		r0, #0x0
	bne		_08076904
_080768f6:
	mov		r0, #0x20
	mov		r1, #0x0
	bl		sub_080753ec
	bl		sub_0807537c
	b		_08076936
_08076904:
	ldr		r0, _0807693c
	str		r4, [r0, #0x70]
	ldr		r4, _08076940
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	mov		r0, #0x4
	mov		r1, #0x0
	bl		sub_0807539c
	bl		sub_0807537c
	ldr		r0, [r4, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0xf
	and		r0, r1
	cmp		r0, #0x0
	beq		_08076932
	ldr		r0, [r4, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_08076936
_08076932:
	bl		sub_0807be3c
_08076936:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0807693c:	.4byte 0x03006E20
_08076940:	.4byte Timer3Counter_Reload
	thumb_func_end sub_080768d0

	thumb_func_start sub_08076944
sub_08076944:
	push	{ r4, r5, lr }
	ldr		r1, _08076968
	add		r0, r1, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_08076996
	add		r0, r1, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x12
	beq		_08076974
	cmp		r0, #0x12
	bgt		_0807696c
	cmp		r0, #0x11
	beq		_08076996
	b		_08076988

.incbin "base.gba", 0x76966, 0x2

_08076968:	.4byte 0x03006E20

_0807696c:
	cmp		r0, #0x19
	bgt		_08076988
	cmp		r0, #0x17
	blt		_08076988
_08076974:
	bl		sub_08074500
	ldr		r0, _08076984
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xfa
	b		_08076994

.incbin "base.gba", 0x76982, 0x2

_08076984:	.4byte 0x03006E20

_08076988:
	bl		sub_08074500
	ldr		r0, _080769b4
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xfb
_08076994:
	strb	r1, [r0, #0x0]
_08076996:
	ldr		r5, _080769b4
	add		r4, r5, #0x0
	add		r4, #0x62
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x3
	beq		_080769f8
	cmp		r0, #0x3
	bgt		_080769b8
	cmp		r0, #0x1
	beq		_080769d2
	cmp		r0, #0x1
	bgt		_080769e2
	cmp		r0, #0x0
	beq		_080769cc
	b		_08076b22

_080769b4:	.4byte 0x03006E20

_080769b8:
	cmp		r0, #0xfa
	beq		_08076a70
	cmp		r0, #0xfa
	bgt		_080769c6
	cmp		r0, #0x4
	beq		_08076a30
	b		_08076b22
_080769c6:
	cmp		r0, #0xfb
	beq		_08076a7e
	b		_08076b22
_080769cc:
	bl		sub_08072c88
	b		_08076a74
_080769d2:
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	mov		r0, #0x1
	bl		sub_080733b8
	b		_08076b22
_080769e2:
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x54
	str		r1, [r0, #0x4]
	bl		sub_0807327c
	b		_08076a74
_080769f8:
	mov		r1, #0xf2
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xff
	bne		_08076a1e
	add		r2, r5, #0x0
	add		r2, #0x66
	mov		r1, #0x0
	mov		r0, #0x11
	strb	r0, [r2, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	ldrb	r0, [r4, #0x0]
	mov		r0, #0xfa
	strb	r0, [r4, #0x0]
	b		_08076b22
_08076a1e:
	ldrb	r0, [r5, #0x6]
	bl		sub_08072bcc
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	ldr		r1, [r5, #0x70]
	bl		sub_08072e34
	b		_08076a74
_08076a30:
	ldr		r0, [r5, #0x40]
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	orr		r0, r2
	str		r0, [r5, #0x40]
	add		r1, r5, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r3, #0x0
	mov		r0, #0x7
	strb	r0, [r1, #0x0]
	ldrh	r1, [r5, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	orr		r2, r0
	strh	r2, [r5, #0x2]
	str		r3, [r5, #0x70]
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	strh	r3, [r0, #0x0]
	bl		sub_0807570c
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_08076b22
_08076a70:
	bl		sub_08072da8
_08076a74:
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	b		_08076b22
_08076a7e:
	add		r0, r5, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r1, #0x0
	strh	r0, [r5, #0xc]
	str		r4, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r1, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08076b28
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08076b2c
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08076b30
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08076b34
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08076b38
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r5, #0x2]
	and		r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r4, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	add		r0, r5, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x5e
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
_08076b22:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08076b28:	.4byte 0xfffffdff
_08076b2c:	.4byte 0xfffffbff
_08076b30:	.4byte 0xffffdfff
_08076b34:	.4byte 0x0000FFF7
_08076b38:	.4byte 0x0000FFEF

.incbin "base.gba", 0x76B3C, 0x50
	push	{ r4, r5, lr }
	ldr		r4, _08076bb0
	add		r0, r4, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_08076bf0
	add		r0, r4, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x14
	beq		_08076bca
	cmp		r0, #0x14
	bgt		_08076bb4
	cmp		r0, #0x11
	beq		_08076bf0
	b		_08076be2

.incbin "base.gba", 0x76BAE, 0x2

_08076bb0:	.4byte 0x03006E20

_08076bb4:
	cmp		r0, #0x19
	bgt		_08076be2
	cmp		r0, #0x18
	blt		_08076be2
	bl		sub_08074500
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xfa
	b		_08076bee
_08076bca:
	add		r0, r4, #0x0
	add		r0, #0x51
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08076bf0
	bl		sub_08074500
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xfa
	b		_08076bee
_08076be2:
	bl		sub_08074500
	ldr		r0, _08076c10
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xfb
_08076bee:
	strb	r1, [r0, #0x0]
_08076bf0:
	ldr		r5, _08076c10
	add		r4, r5, #0x0
	add		r4, #0x62
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x3
	beq		_08076c44
	cmp		r0, #0x3
	bgt		_08076c14
	cmp		r0, #0x1
	beq		_08076c2e
	cmp		r0, #0x1
	bgt		_08076c3e
	cmp		r0, #0x0
	beq		_08076c28
	b		_08076d4c

.incbin "base.gba", 0x76C0E, 0x2

_08076c10:	.4byte 0x03006E20

_08076c14:
	cmp		r0, #0xfa
	beq		_08076c9a
	cmp		r0, #0xfa
	bgt		_08076c22
	cmp		r0, #0x4
	beq		_08076c54
	b		_08076d4c
_08076c22:
	cmp		r0, #0xfb
	beq		_08076ca8
	b		_08076d4c
_08076c28:
	bl		sub_08072c88
	b		_08076c9e
_08076c2e:
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	mov		r0, #0x1
	bl		sub_080733b8
	b		_08076d4c
_08076c3e:
	bl		sub_08072f94
	b		_08076c9e
_08076c44:
	add		r0, r5, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x94
	beq		_08076c9e
	ldrb	r0, [r4, #0x0]
	sub		r0, #0x1
	b		_08076ca2
_08076c54:
	ldr		r0, [r5, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	orr		r0, r1
	str		r0, [r5, #0x40]
	add		r1, r5, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r2, #0x0
	mov		r0, #0x8
	strb	r0, [r1, #0x0]
	ldrh	r1, [r5, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r3, #0xc0
	lsl		r3, r3, #0x2
	add		r0, r3, #0x0
	ldrh	r3, [r5, #0x2]
	orr		r0, r1
	strh	r0, [r5, #0x2]
	str		r2, [r5, #0x70]
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	strh	r2, [r0, #0x0]
	bl		sub_0807570c
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_08076d4c
_08076c9a:
	bl		sub_08072da8
_08076c9e:
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
_08076ca2:
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	b		_08076d4c
_08076ca8:
	add		r0, r5, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r1, #0x0
	strh	r0, [r5, #0xc]
	str		r4, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r1, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08076d54
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08076d58
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08076d5c
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08076d60
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08076d64
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r5, #0x2]
	and		r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r4, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	add		r0, r5, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x5e
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
_08076d4c:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x76D52, 0x2

_08076d54:	.4byte 0xfffffdff
_08076d58:	.4byte 0xfffffbff
_08076d5c:	.4byte 0xffffdfff
_08076d60:	.4byte 0x0000FFF7
_08076d64:	.4byte 0x0000FFEF
	thumb_func_end sub_08076944

	thumb_func_start sub_08076d68
sub_08076d68:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r5, r2, #0x0
	lsl		r1, r1, #0x18
	lsr		r4, r1, #0x18
	add		r6, r4, #0x0
	bl		sub_08075358
	mov		r0, #0x0
	strb	r0, [r5, #0x0]
	mov		r0, #0x6
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_08076d8c
	bl		sub_0807537c
	b		_08076dde
_08076d8c:
	sub		r0, r4, #0x1
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bge		_08076da2
	mov		r0, #0x20
	mov		r1, #0x0
	bl		sub_080753ec
	bl		sub_0807537c
	b		_08076dde
_08076da2:
	ldr		r2, _08076dc4
	ldrh	r1, [r2, #0x2]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08076dcc
	mov		r0, #0x1
	strb	r0, [r5, #0x0]
	ldrh	r1, [r2, #0x2]
	ldr		r0, _08076dc8
	and		r0, r1
	ldrh	r1, [r2, #0x2]
	strh	r0, [r2, #0x2]
	bl		sub_0807537c
	b		_08076dde

.incbin "base.gba", 0x76DC2, 0x2

_08076dc4:	.4byte 0x03006E20
_08076dc8:	.4byte 0x0000FFFE

_08076dcc:
	str		r7, [r2, #0x70]
	str		r6, [r2, #0x74]
	ldr		r0, [r2, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	orr		r0, r1
	str		r0, [r2, #0x40]
	bl		sub_0807537c
_08076dde:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08076d68

	thumb_func_start sub_08076de4
sub_08076de4:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r7, r1, #0x0
	bl		sub_08075358
	mov		r0, #0x7
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_08076dfe
	bl		sub_0807537c
	b		_08076ec4
_08076dfe:
	ldr		r6, _08076e18
	ldrh	r1, [r6, #0x2]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08076e1c
	mov		r0, #0x21
	mov		r1, #0x0
	bl		sub_080753ec
	bl		sub_0807537c
	b		_08076ec4

_08076e18:	.4byte 0x03006E20

_08076e1c:
	ldr		r0, _08076e9c
	add		r1, r6, r0
	sub		r0, #0x1
	add		r5, r6, r0
	ldrb	r2, [r5, #0x0]
	add		r0, r4, #0x0
	bl		sub_0807c304
	ldrb	r0, [r5, #0x0]
	strb	r0, [r7, #0x0]
	ldrb	r0, [r5, #0x0]
	add		r0, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	mov		r3, #0x0
	ldr		r0, _08076ea0
	add		r1, r6, r0
	ldrh	r0, [r1, #0x0]
	sub		r0, r0, r4
	cmp		r3, r0
	bge		_08076e5c
	add		r6, r1, #0x0
	add		r2, r4, r5
_08076e4a:
	add		r1, r3, r5
	ldrb	r0, [r2, #0x0]
	strb	r0, [r1, #0x0]
	add		r2, #0x1
	add		r3, #0x1
	ldrh	r0, [r6, #0x0]
	sub		r0, r0, r4
	cmp		r3, r0
	blt		_08076e4a
_08076e5c:
	ldr		r1, _08076ea4
	ldr		r0, _08076ea0
	add		r5, r1, r0
	ldrh	r0, [r5, #0x0]
	sub		r0, r0, r4
	strh	r0, [r5, #0x0]
	lsl		r0, r0, #0x10
	add		r2, r1, #0x0
	cmp		r0, #0x0
	beq		_08076eac
	ldr		r0, _08076ea8
	add		r3, r2, r0
	ldrb	r0, [r3, #0x0]
	sub		r0, #0x1
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bge		_08076e82
	mov		r0, #0x80
	strb	r0, [r3, #0x0]
_08076e82:
	ldrh	r1, [r5, #0x0]
	ldrb	r0, [r3, #0x0]
	add		r0, #0x1
	cmp		r1, r0
	blt		_08076eac
	ldrh	r0, [r2, #0x2]
	mov		r1, #0x8
	orr		r0, r1
	ldrh	r1, [r2, #0x2]
	mov		r1, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x2]
	b		_08076eb6

_08076e9c:	.4byte 0x0000047E
_08076ea0:	.4byte 0x000006FA
_08076ea4:	.4byte 0x03006E20
_08076ea8:	.4byte 0x0000047D

_08076eac:
	ldrh	r0, [r2, #0x2]
	ldr		r1, _08076ecc
	and		r1, r0
	ldrh	r0, [r2, #0x2]
	strh	r1, [r2, #0x2]
_08076eb6:
	ldrh	r0, [r2, #0x2]
	ldr		r1, _08076ed0
	and		r1, r0
	ldrh	r0, [r2, #0x2]
	strh	r1, [r2, #0x2]
	bl		sub_0807537c
_08076ec4:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x76ECA, 0x2

_08076ecc:	.4byte 0x0000FFF7
_08076ed0:	.4byte 0x0000FFFE
	thumb_func_end sub_08076de4

	thumb_func_start sub_08076ed4
sub_08076ed4:
	push	{ r4, r5, r6, r7, lr }
	ldr		r2, _08076fb8
	ldr		r0, [r2, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	and		r0, r1
	add		r5, r2, #0x0
	cmp		r0, #0x0
	beq		_08076f00
	ldr		r0, [r5, #0x40]
	ldr		r1, _08076fbc
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08076fc0
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08076fc4
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
_08076f00:
	add		r0, r5, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_08076fd4
	add		r0, r5, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x15
	bne		_08076fd4
	mov		r0, #0x0
	bl		sub_08072b58
	add		r0, r5, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r1, #0x0
	strh	r0, [r5, #0xc]
	str		r4, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r1, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08076fc8
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08076fbc
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08076fc0
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08076fcc
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08076fd0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r5, #0x2]
	and		r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r4, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	mov		r0, #0x23
	mov		r1, #0x0
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_08077028

_08076fb8:	.4byte 0x03006E20
_08076fbc:	.4byte 0xfffffbff
_08076fc0:	.4byte 0xffffdfff
_08076fc4:	.4byte 0x0000FFFE
_08076fc8:	.4byte 0xfffffdff
_08076fcc:	.4byte 0x0000FFF7
_08076fd0:	.4byte 0x0000FFEF

_08076fd4:
	add		r6, r5, #0x0
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r7, r6, r0
	ldrh	r1, [r7, #0x0]
	cmp		r1, #0x1
	bls		_08077028
	add		r0, #0x4
	add		r4, r6, r0
	ldr		r0, [r4, #0x0]
	add		r0, #0x1
	sub		r1, #0x1
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08075730
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	strh	r0, [r7, #0x0]
	ldr		r1, _08077030
	add		r4, r6, r1
	ldrb	r0, [r4, #0x0]
	sub		r0, #0x1
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bge		_0807700c
	mov		r0, #0x80
	strb	r0, [r4, #0x0]
_0807700c:
	ldr		r1, _08077034
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	cmp		r1, r0
	blt		_08077028
	ldrh	r0, [r5, #0x2]
	mov		r1, #0x8
	orr		r0, r1
	ldrh	r1, [r5, #0x2]
	mov		r1, #0x0
	orr		r0, r1
	strh	r0, [r5, #0x2]
_08077028:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7702E, 0x2

_08077030:	.4byte 0x0000047D
_08077034:	.4byte 0x000006FA

.incbin "base.gba", 0x77038, 0xA8
	push	{ r4, r5, lr }
	ldr		r4, _08077110
	add		r0, r4, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_0807712c
	add		r0, r4, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x11
	beq		_0807712c
	cmp		r0, #0x17
	bne		_0807711e
	bl		sub_08074500
	ldr		r0, [r4, #0x74]
	cmp		r0, #0x1
	bne		_08077114
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xfa
	b		_0807712a

_08077110:	.4byte 0x03006E20

_08077114:
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xfc
	b		_0807712a
_0807711e:
	bl		sub_08074500
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xfb
_0807712a:
	strb	r1, [r0, #0x0]
_0807712c:
	ldr		r5, _0807714c
	add		r4, r5, #0x0
	add		r4, #0x62
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x3
	bne		_0807713a
	b		_08077264
_0807713a:
	cmp		r0, #0x3
	bgt		_08077150
	cmp		r0, #0x1
	beq		_08077174
	cmp		r0, #0x1
	bgt		_0807718a
	cmp		r0, #0x0
	beq		_0807716e
	b		_08077344

_0807714c:	.4byte 0x03006E20

_08077150:
	cmp		r0, #0xfa
	bne		_08077156
	b		_08077264
_08077156:
	cmp		r0, #0xfa
	bgt		_08077160
	cmp		r0, #0x4
	beq		_080771c0
	b		_08077344
_08077160:
	cmp		r0, #0xfb
	bne		_08077166
	b		_08077272
_08077166:
	cmp		r0, #0xfc
	bne		_0807716c
	b		_0807732c
_0807716c:
	b		_08077344
_0807716e:
	bl		sub_08072c88
	b		_08077268
_08077174:
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x54
	str		r1, [r0, #0x4]
	bl		sub_0807327c
	b		_08077268
_0807718a:
	mov		r1, #0xf2
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	bl		sub_0807427c
	ldr		r1, [r5, #0x70]
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x56
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xef
	bls		_080771b0
	ldr		r0, [r5, #0x70]
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x80
	orr		r1, r2
	strb	r1, [r0, #0x0]
_080771b0:
	ldr		r0, [r5, #0x74]
	cmp		r0, #0x1
	beq		_080771b8
	b		_0807730e
_080771b8:
	ldrb	r0, [r4, #0x0]
	mov		r0, #0x3
	strb	r0, [r4, #0x0]
	b		_08077344
_080771c0:
	add		r0, r5, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r1, #0x0
	strh	r0, [r5, #0xc]
	str		r4, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r1, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08077250
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08077254
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08077258
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _0807725c
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08077260
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r5, #0x2]
	and		r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r4, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	b		_0807730e

.incbin "base.gba", 0x7724E, 0x2

_08077250:	.4byte 0xfffffdff
_08077254:	.4byte 0xfffffbff
_08077258:	.4byte 0xffffdfff
_0807725c:	.4byte 0x0000FFF7
_08077260:	.4byte 0x0000FFEF

_08077264:
	bl		sub_08072da8
_08077268:
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	b		_08077344
_08077272:
	add		r0, r5, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r1, #0x0
	strh	r0, [r5, #0xc]
	str		r4, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r1, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08077318
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807731c
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _08077320
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08077324
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _08077328
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r5, #0x2]
	and		r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r4, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	add		r0, r5, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
_0807730e:
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_08077344

_08077318:	.4byte 0xfffffdff
_0807731c:	.4byte 0xfffffbff
_08077320:	.4byte 0xffffdfff
_08077324:	.4byte 0x0000FFF7
_08077328:	.4byte 0x0000FFEF

_0807732c:
	add		r0, r5, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
_08077344:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7734A, 0x2
	thumb_func_end sub_08076ed4

	thumb_func_start sub_0807734c
sub_0807734c:
	push	{ r4, lr }
	bl		sub_08075358
	ldr		r0, _08077370
	add		r4, r0, #0x0
	add		r4, #0x5c
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08077368
	mov		r0, #0xa
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_08077374
_08077368:
	bl		sub_0807537c
	b		_080773ac

.incbin "base.gba", 0x7736E, 0x2

_08077370:	.4byte 0x03006E20

_08077374:
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x7
	beq		_08077380
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x8
	bne		_0807738a
_08077380:
	mov		r0, #0xa
	mov		r1, #0x1
	bl		sub_0807539c
	b		_080773a8
_0807738a:
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x4
	beq		_08077396
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x5
	bne		_080773a0
_08077396:
	mov		r0, #0xa
	mov		r1, #0x64
	bl		sub_0807539c
	b		_080773a8
_080773a0:
	mov		r0, #0xa
	mov		r1, #0x0
	bl		sub_0807539c
_080773a8:
	bl		sub_0807537c
_080773ac:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x773B2, 0x2
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r1, _080773f8
	add		r0, r1, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	add		r3, r1, #0x0
	cmp		r0, #0xee
	bne		_080773da
	add		r0, r3, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x15
	bne		_080773da
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
_080773da:
	add		r7, r3, #0x0
	add		r6, r7, #0x0
	add		r6, #0x62
	ldrb	r0, [r6, #0x0]
	cmp		r0, #0x3
	beq		_08077450
	cmp		r0, #0x3
	bgt		_080773fc
	cmp		r0, #0x1
	beq		_08077444
	cmp		r0, #0x1
	bgt		_0807744a
	cmp		r0, #0x0
	beq		_0807741c
	b		_08077610

_080773f8:	.4byte 0x03006E20

_080773fc:
	cmp		r0, #0x65
	bne		_08077402
	b		_08077558
_08077402:
	cmp		r0, #0x65
	bgt		_0807740e
	cmp		r0, #0x64
	bne		_0807740c
	b		_08077514
_0807740c:
	b		_08077610
_0807740e:
	cmp		r0, #0x66
	bne		_08077414
	b		_080775b8
_08077414:
	cmp		r0, #0x67
	bne		_0807741a
	b		_080775dc
_0807741a:
	b		_08077610
_0807741c:
	add		r1, r7, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x7
	beq		_08077430
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x8
	beq		_08077430
	bl		sub_08073784
_08077430:
	ldr		r0, _08077440
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	add		r1, #0x1
	ldrb	r2, [r0, #0x0]
	strb	r1, [r0, #0x0]
	b		_08077610

.incbin "base.gba", 0x7743E, 0x2

_08077440:	.4byte 0x03006E20

_08077444:
	bl		sub_08072f08
	b		_080775d2
_0807744a:
	bl		sub_08072da8
	b		_080775d2
_08077450:
	ldrh	r1, [r7, #0x2]
	ldr		r4, _08077500
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r7, #0x2]
	mov		r5, #0x0
	mov		r1, #0x0
	mov		r8, r1
	strh	r0, [r7, #0x2]
	ldr		r0, [r7, #0x40]
	ldr		r6, _08077504
	and		r0, r6
	str		r0, [r7, #0x40]
	add		r0, r7, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	strb	r5, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r7, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r7, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r7, #0xc]
	strh	r0, [r7, #0xc]
	mov		r2, r8
	str		r2, [r7, #0x3c]
	ldrb	r0, [r7, #0x4]
	strb	r5, [r7, #0x4]
	ldr		r0, [r7, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r7, #0x40]
	ldr		r0, [r7, #0x40]
	and		r0, r6
	str		r0, [r7, #0x40]
	ldr		r0, [r7, #0x40]
	ldr		r1, _08077508
	and		r0, r1
	str		r0, [r7, #0x40]
	ldr		r0, [r7, #0x40]
	ldr		r1, _0807750c
	and		r0, r1
	str		r0, [r7, #0x40]
	ldr		r0, [r7, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r7, #0x40]
	ldrh	r0, [r7, #0x2]
	and		r4, r0
	ldrh	r0, [r7, #0x2]
	strh	r4, [r7, #0x2]
	ldrh	r1, [r7, #0x2]
	ldr		r0, _08077510
	and		r0, r1
	ldrh	r1, [r7, #0x2]
	strh	r0, [r7, #0x2]
	ldrh	r1, [r7, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r7, #0x2]
	strh	r0, [r7, #0x2]
	ldrh	r0, [r7, #0x2]
	ldrh	r1, [r7, #0x2]
	strh	r0, [r7, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r7, #0x2]
	and		r4, r0
	ldrh	r0, [r7, #0x2]
	strh	r4, [r7, #0x2]
	ldrh	r0, [r7, #0x2]
	ldrh	r1, [r7, #0x2]
	strh	r0, [r7, #0x2]
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	mov		r0, #0x0
	bl		sub_08072b58
	b		_08077610

_08077500:	.4byte 0x0000FFF7
_08077504:	.4byte 0xfffffdff
_08077508:	.4byte 0xfffffbff
_0807750c:	.4byte 0xffffdfff
_08077510:	.4byte 0x0000FFEF

_08077514:
	bl		sub_0807570c
	mov		r4, #0xdc
	lsl		r4, r4, #0x2
	add		r5, r7, r4
	ldr		r1, _08077554
	add		r0, r5, #0x0
	bl		sub_0807c088
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r4, r7, r0
	mov		r0, #0x0
	strh	r0, [r4, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	add		r0, r5, #0x0
	bl		sub_0807c054
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r7, #0x0
	add		r0, #0x63
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08073020
	b		_080775d2

.incbin "base.gba", 0x77552, 0x2

_08077554:	.4byte 0x0820bcd4 @ "QUIT"

_08077558:
	mov		r1, #0xf2
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
	mov		r2, #0xf0
	lsl		r2, r2, #0x1
	add		r4, r7, r2
	ldrh	r1, [r4, #0x0]
	sub		r1, #0x1
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08075730
	ldr		r1, _080775a0
	add		r0, r7, r1
	ldr		r2, _080775a4
	add		r1, r7, r2
	ldrh	r1, [r1, #0x0]
	bl		sub_0807c594
	cmp		r0, #0x0
	bne		_080775a8
	strh	r0, [r4, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	sub		r0, #0x71
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08073020
	b		_08077610

.incbin "base.gba", 0x7759E, 0x2

_080775a0:	.4byte 0x0000047D
_080775a4:	.4byte 0x000006FA

_080775a8:
	ldrb	r0, [r7, #0x5]
	lsl		r0, r0, #0x2
	add		r1, r7, #0x0
	add		r1, #0x2c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r7, #0x70]
	b		_080775d2
_080775b8:
	ldr		r0, [r7, #0x70]
	sub		r0, #0x1
	str		r0, [r7, #0x70]
	cmp		r0, #0x0
	bne		_08077610
	mov		r4, #0xf0
	lsl		r4, r4, #0x1
	add		r0, r7, r4
	add		r1, r7, #0x0
	add		r1, #0x63
	ldrb	r1, [r1, #0x0]
	bl		sub_080738f8
_080775d2:
	ldrb	r0, [r6, #0x0]
	add		r0, #0x1
	ldrb	r1, [r6, #0x0]
	strb	r0, [r6, #0x0]
	b		_08077610
_080775dc:
	add		r1, r3, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r3, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r3, #0x2]
	mov		r2, #0x0
	strh	r0, [r3, #0x2]
	ldrh	r0, [r3, #0x2]
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r1, r4, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x2]
	orr		r0, r2
	strh	r0, [r3, #0x2]
	add		r0, r3, #0x0
	add		r0, #0x63
	strb	r2, [r0, #0x0]
	add		r0, #0x69
	strb	r2, [r0, #0x0]
	ldrb	r0, [r6, #0x0]
	strb	r2, [r6, #0x0]
_08077610:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7761A, 0x2
	thumb_func_end sub_0807734c

	thumb_func_start sub_0807761c
sub_0807761c:
	add		r1, r0, #0x0
	ldrb	r0, [r1, #0x0]
	sub		r0, #0x30
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x9
	bhi		_08077646
	ldrb	r0, [r1, #0x1]
	sub		r0, #0x30
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x9
	bhi		_08077646
	ldrb	r0, [r1, #0x2]
	sub		r0, #0x30
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x9
	bhi		_08077646
	mov		r0, #0x0
	b		_08077648
_08077646:
	mov		r0, #0x1
_08077648:
	bx		lr

.incbin "base.gba", 0x7764A, 0x2
	thumb_func_end sub_0807761c

	thumb_func_start sub_0807764c
sub_0807764c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	bl		sub_08075358
	mov		r0, #0xb
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_08077664
	bl		sub_0807537c
	b		_0807769a
_08077664:
	add		r0, r5, #0x0
	bl		sub_0807c054
	cmp		r0, #0x1e
	bgt		_08077672
	cmp		r0, #0x0
	bne		_08077680
_08077672:
	mov		r0, #0x20
	mov		r1, #0x0
	bl		sub_080753ec
	bl		sub_0807537c
	b		_0807769a
_08077680:
	ldr		r4, _080776a0
	add		r0, r4, #0x0
	bl		sub_0807be14
	ldr		r0, _080776a4
	add		r4, r4, r0
	str		r5, [r4, #0x70]
	mov		r0, #0xb
	mov		r1, #0x0
	bl		sub_0807539c
	bl		sub_0807537c
_0807769a:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_080776a0:	.4byte 0x03007190
_080776a4:	.4byte 0xFFFFFC90
	thumb_func_end sub_0807764c

	thumb_func_start sub_080776a8
sub_080776a8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r2, _080776d0
	add		r0, r2, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_0807772a
	add		r0, r2, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x23
	beq		_080776fa
	cmp		r0, #0x23
	bgt		_080776d4
	cmp		r0, #0x15
	beq		_080776de
	b		_0807771c

.incbin "base.gba", 0x776CE, 0x2

_080776d0:	.4byte 0x03006E20

_080776d4:
	cmp		r0, #0x24
	beq		_0807772a
	cmp		r0, #0x28
	beq		_080776fa
	b		_0807771c
_080776de:
	add		r3, r2, #0x0
	add		r3, #0x66
	mov		r1, #0x0
	mov		r0, #0x24
	strb	r0, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	b		_0807772a
_080776fa:
	ldr		r2, _08077718
	add		r3, r2, #0x0
	add		r3, #0x66
	mov		r1, #0x0
	mov		r0, #0x24
	strb	r0, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf1
	strb	r0, [r1, #0x0]
	b		_0807772a

_08077718:	.4byte 0x03006E20

_0807771c:
	bl		sub_08074500
	ldr		r0, _08077778
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xf1
	strb	r1, [r0, #0x0]
_0807772a:
	bl		sub_080728a0
	mov		r1, #0x40
	and		r1, r0
	lsl		r1, r1, #0x10
	lsr		r6, r1, #0x10
	cmp		r6, #0x0
	beq		_0807777c
	ldr		r3, _08077778
	add		r1, r3, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r3, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r3, #0x2]
	mov		r2, #0x0
	strh	r0, [r3, #0x2]
	ldrh	r0, [r3, #0x2]
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r1, r4, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x2]
	orr		r0, r2
	strh	r0, [r3, #0x2]
	add		r0, r3, #0x0
	add		r0, #0x63
	strb	r2, [r0, #0x0]
	add		r0, #0x69
	strb	r2, [r0, #0x0]
	mov		r0, #0x30
	mov		r1, #0x0
	bl		sub_080753ec
	b		_08077a80

.incbin "base.gba", 0x77776, 0x2

_08077778:	.4byte 0x03006E20

_0807777c:
	ldr		r5, _0807779c
	add		r7, r5, #0x0
	add		r7, #0x62
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x3
	beq		_08077836
	cmp		r0, #0x3
	bgt		_080777a0
	cmp		r0, #0x1
	beq		_080777d4
	cmp		r0, #0x1
	bgt		_08077800
	cmp		r0, #0x0
	beq		_080777ba
	b		_08077aee

.incbin "base.gba", 0x7779A, 0x2

_0807779c:	.4byte 0x03006E20

_080777a0:
	cmp		r0, #0x5
	bne		_080777a6
	b		_08077a5e
_080777a6:
	cmp		r0, #0x5
	bge		_080777ac
	b		_0807798e
_080777ac:
	cmp		r0, #0xf0
	bne		_080777b2
	b		_08077a8a
_080777b2:
	cmp		r0, #0xf1
	bne		_080777b8
	b		_08077aaa
_080777b8:
	b		_08077aee
_080777ba:
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	strh	r6, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	mov		r2, #0xdc
	lsl		r2, r2, #0x2
	add		r1, r5, r2
	bl		sub_08073b18
	b		_08077aa0
_080777d4:
	add		r4, r5, #0x0
	add		r4, #0x6a
	mov		r1, #0xf2
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r2, #0x4
	bl		sub_0807c304
	mov		r2, #0xf0
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	strh	r6, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	add		r1, r4, #0x0
	mov		r2, #0x19
	bl		sub_08073810
	b		_08077aa0
_08077800:
	mov		r4, #0xf2
	lsl		r4, r4, #0x1
	add		r0, r5, r4
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	add		r4, r5, #0x0
	add		r4, #0x63
	strb	r0, [r4, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xcc
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	bl		sub_0807570c
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	strh	r6, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	ldrb	r3, [r4, #0x0]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08073020
	b		_08077aa0
_08077836:
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
	mov		r4, #0xf0
	lsl		r4, r4, #0x1
	add		r4, r4, r5
	mov		r8, r4
	ldrh	r1, [r4, #0x0]
	sub		r1, #0x1
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08075730
	ldr		r0, _0807793c
	add		r4, r5, r0
	ldr		r1, _08077940
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0807c594
	cmp		r0, #0x0
	bne		_0807786a
	b		_080779c0
_0807786a:
	add		r0, r4, #0x0
	bl		sub_0807761c
	ldr		r1, _08077944
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0807787a
	b		_08077a48
_0807787a:
	ldrb	r0, [r4, #0x0]
	sub		r0, #0x30
	mov		r1, #0x64
	add		r2, r0, #0x0
	mul		r2, r1
	ldr		r4, _08077948
	add		r0, r5, r4
	ldrb	r1, [r0, #0x0]
	sub		r1, #0x30
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	ldr		r1, _0807794c
	add		r0, r5, r1
	ldr		r4, _08077950
	add		r2, r2, r4
	ldrb	r0, [r0, #0x0]
	add		r2, r2, r0
	add		r1, r5, #0x0
	add		r1, #0x5e
	ldrh	r0, [r1, #0x0]
	strh	r2, [r1, #0x0]
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0xdc
	bne		_0807797c
	mov		r1, #0xdc
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	ldr		r1, _08077954
	bl		sub_0807c088
	ldr		r2, _08077958
	ldr		r4, _0807795c
	add		r0, r5, r4
	str		r0, [r2, #0x0]
	ldr		r1, _08077960
	ldr		r0, [r5, #0x70]
	str		r0, [r1, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_080778f0
	cmp		r0, #0x40
	beq		_080778f0
	add		r4, r2, #0x0
	add		r3, r1, #0x0
_080778d6:
	ldr		r2, [r4, #0x0]
	ldr		r1, [r3, #0x0]
	ldrb	r0, [r1, #0x0]
	strb	r0, [r2, #0x0]
	add		r1, #0x1
	str		r1, [r3, #0x0]
	add		r2, #0x1
	str		r2, [r4, #0x0]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_080778f0
	cmp		r0, #0x40
	bne		_080778d6
_080778f0:
	ldr		r0, _08077958
	ldr		r1, [r0, #0x0]
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	ldr		r4, _08077964
	ldr		r1, _08077968
	add		r0, r4, #0x0
	bl		sub_0807c160
	bl		sub_0807570c
	ldr		r0, _0807796c
	add		r5, r4, r0
	mov		r0, #0x0
	strh	r0, [r5, #0x0]
	ldr		r1, _08077970
	add		r0, r4, r1
	str		r0, [r5, #0x4]
	add		r0, r4, #0x0
	bl		sub_0807c054
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	ldr		r1, _08077974
	add		r0, r4, r1
	ldrb	r3, [r0, #0x0]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08073020
	ldr		r2, _08077978
	add		r4, r4, r2
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	b		_08077aee

_0807793c:	.4byte 0x0000047D
_08077940:	.4byte 0x000006FA
_08077944:	.4byte 0x03002448
_08077948:	.4byte 0x0000047E
_0807794c:	.4byte 0x0000047F
_08077950:	.4byte 0x0000FFD0
_08077954:	.4byte 0x0820bcdc @ "HELO"
_08077958:	.4byte 0x03002440
_0807795c:	.4byte 0x00000375
_08077960:	.4byte 0x03002444
_08077964:	.4byte 0x03007190
_08077968:	.4byte 0x0820bce4
_0807796c:	.4byte 0xFFFFFE70
_08077970:	.4byte 0xFFFFFD64
_08077974:	.4byte 0xFFFFFCF3
_08077978:	.4byte 0xFFFFFCF2

_0807797c:
	add		r2, r5, #0x0
	add		r2, #0x66
	mov		r0, #0x30
	strb	r0, [r2, #0x0]
	ldrh	r1, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	b		_08077a56
_0807798e:
	mov		r4, #0xf2
	lsl		r4, r4, #0x1
	add		r0, r5, r4
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r1, r1, r5
	mov		r8, r1
	ldrh	r1, [r1, #0x0]
	sub		r1, #0x1
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08075730
	ldr		r2, _080779dc
	add		r4, r5, r2
	ldr		r1, _080779e0
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0807c594
	cmp		r0, #0x0
	bne		_080779e4
_080779c0:
	mov		r2, r8
	strh	r6, [r2, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xd4
	str		r0, [r2, #0x4]
	sub		r0, #0x71
	ldrb	r3, [r0, #0x0]
	mov		r0, r8
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08073020
	b		_08077aee

.incbin "base.gba", 0x779DA, 0x2

_080779dc:	.4byte 0x0000047D
_080779e0:	.4byte 0x000006FA

_080779e4:
	add		r0, r4, #0x0
	bl		sub_0807761c
	ldr		r1, _08077a38
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08077a48
	ldrb	r0, [r4, #0x0]
	sub		r0, #0x30
	mov		r1, #0x64
	add		r2, r0, #0x0
	mul		r2, r1
	ldr		r4, _08077a3c
	add		r0, r5, r4
	ldrb	r1, [r0, #0x0]
	sub		r1, #0x30
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	ldr		r1, _08077a40
	add		r0, r5, r1
	ldr		r4, _08077a44
	add		r2, r2, r4
	ldrb	r0, [r0, #0x0]
	add		r2, r2, r0
	add		r1, r5, #0x0
	add		r1, #0x5e
	ldrh	r0, [r1, #0x0]
	strh	r2, [r1, #0x0]
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0xfa
	beq		_08077aa0
	add		r2, r5, #0x0
	add		r2, #0x66
	mov		r0, #0x30
	strb	r0, [r2, #0x0]
	ldrh	r1, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	b		_08077a56

_08077a38:	.4byte 0x03002448
_08077a3c:	.4byte 0x0000047E
_08077a40:	.4byte 0x0000047F
_08077a44:	.4byte 0x0000FFD0

_08077a48:
	add		r1, r5, #0x0
	add		r1, #0x66
	mov		r0, #0x30
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x68
	strh	r6, [r0, #0x0]
_08077a56:
	ldrb	r0, [r7, #0x0]
	mov		r0, #0xf0
	strb	r0, [r7, #0x0]
	b		_08077aee
_08077a5e:
	add		r1, r5, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x4
	strb	r0, [r1, #0x0]
	ldrh	r1, [r5, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	add		r0, r2, #0x0
	ldrh	r2, [r5, #0x2]
	orr		r0, r1
	strh	r0, [r5, #0x2]
_08077a80:
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_08077aee
_08077a8a:
	mov		r4, #0xf0
	lsl		r4, r4, #0x1
	add		r0, r5, r4
	strh	r6, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	sub		r1, #0x71
	ldrb	r1, [r1, #0x0]
	bl		sub_080738f8
_08077aa0:
	ldrb	r0, [r7, #0x0]
	add		r0, #0x1
	ldrb	r1, [r7, #0x0]
	strb	r0, [r7, #0x0]
	b		_08077aee
_08077aaa:
	add		r1, r5, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r5, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	mov		r4, #0x0
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r5, #0x2]
	orr		r0, r4
	strh	r0, [r5, #0x2]
	add		r0, r5, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	add		r0, r5, #0x0
	add		r0, #0xcc
	strb	r4, [r0, #0x0]
_08077aee:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_080776a8

	thumb_func_start sub_08077af8
sub_08077af8:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	bl		sub_08075358
	mov		r0, #0xc
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_08077b10
	bl		sub_0807537c
	b		_08077b72
_08077b10:
	ldr		r1, [r6, #0x0]
	cmp		r1, #0x0
	beq		_08077b4a
	ldr		r0, [r6, #0x4]
	cmp		r0, #0x0
	beq		_08077b4a
	add		r0, r1, #0x0
	bl		sub_0807c054
	cmp		r0, #0x1e
	bgt		_08077b4a
	cmp		r0, #0x0
	beq		_08077b4a
	mov		r5, #0x1
	ldr		r0, [r6, #0x4]
	cmp		r0, #0x0
	beq		_08077b62
	add		r4, r6, #0x4
_08077b34:
	ldr		r0, [r4, #0x0]
	bl		sub_0807c054
	cmp		r0, #0x0
	beq		_08077b4a
	cmp		r0, #0x7f
	bgt		_08077b4a
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r5, r0
	ble		_08077b58
_08077b4a:
	mov		r0, #0x20
	mov		r1, #0x0
	bl		sub_080753ec
	bl		sub_0807537c
	b		_08077b72
_08077b58:
	add		r4, #0x4
	add		r5, #0x1
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08077b34
_08077b62:
	ldr		r0, _08077b78
	str		r6, [r0, #0x70]
	mov		r0, #0xc
	mov		r1, #0x0
	bl		sub_0807539c
	bl		sub_0807537c
_08077b72:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08077b78:	.4byte 0x03006E20
	thumb_func_end sub_08077af8

	thumb_func_start sub_08077b7c
sub_08077b7c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r4, _08077bb4
	add		r0, r4, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_08077bca
	add		r0, r4, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x15
	bne		_08077bb8
	add		r2, r4, #0x0
	add		r2, #0x66
	mov		r1, #0x0
	mov		r0, #0x24
	strb	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	b		_08077bca

_08077bb4:	.4byte 0x03006E20

_08077bb8:
	cmp		r0, #0x24
	beq		_08077bca
	bl		sub_08074500
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xf1
	strb	r1, [r0, #0x0]
_08077bca:
	bl		sub_080728a0
	mov		r1, #0x40
	and		r1, r0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r8, r1
	cmp		r1, #0x0
	beq		_08077c24
	ldr		r3, _08077c20
	add		r1, r3, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r3, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r3, #0x2]
	mov		r2, #0x0
	strh	r0, [r3, #0x2]
	ldrh	r0, [r3, #0x2]
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r1, r4, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x2]
	orr		r0, r2
	strh	r0, [r3, #0x2]
	add		r0, r3, #0x0
	add		r0, #0x63
	strb	r2, [r0, #0x0]
	add		r0, #0x69
	strb	r2, [r0, #0x0]
	mov		r0, #0x30
	mov		r1, #0x0
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_08077f26

_08077c20:	.4byte 0x03006E20

_08077c24:
	ldr		r6, _08077c48
	add		r7, r6, #0x0
	add		r7, #0x62
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x3
	bne		_08077c32
	b		_08077dd4
_08077c32:
	cmp		r0, #0x3
	bgt		_08077c4c
	cmp		r0, #0x1
	beq		_08077cc4
	cmp		r0, #0x1
	ble		_08077c40
	b		_08077d64
_08077c40:
	cmp		r0, #0x0
	beq		_08077c66
	b		_08077f26

.incbin "base.gba", 0x77C46, 0x2

_08077c48:	.4byte 0x03006E20

_08077c4c:
	cmp		r0, #0xf0
	bne		_08077c52
	b		_08077ec0
_08077c52:
	cmp		r0, #0xf0
	bgt		_08077c5e
	cmp		r0, #0x4
	bne		_08077c5c
	b		_08077eac
_08077c5c:
	b		_08077f26
_08077c5e:
	cmp		r0, #0xf1
	bne		_08077c64
	b		_08077ee2
_08077c64:
	b		_08077f26
_08077c66:
	mov		r0, #0xdc
	lsl		r0, r0, #0x2
	add		r5, r6, r0
	ldr		r1, _08077cbc
	add		r0, r5, #0x0
	bl		sub_0807c088
	ldr		r0, [r6, #0x70]
	ldr		r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_0807c160
	ldr		r1, _08077cc0
	add		r0, r5, #0x0
	bl		sub_0807c160
	ldr		r0, [r6, #0x70]
	add		r0, #0x4
	str		r0, [r6, #0x70]
	bl		sub_0807570c
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r4, r6, r1
	mov		r2, r8
	strh	r2, [r4, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	add		r0, r5, #0x0
	bl		sub_0807c054
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r6, #0x0
	add		r0, #0x63
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08073020
	b		_08077ed8

_08077cbc:	.4byte 0x0820bce8 @ "MAIL FROM:<"
_08077cc0:	.4byte 0x0820bcf4

_08077cc4:
	mov		r4, #0xf2
	lsl		r4, r4, #0x1
	add		r0, r6, r4
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r5, r6, r1
	ldrh	r1, [r5, #0x0]
	sub		r1, #0x1
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08075730
	ldr		r2, _08077d4c
	add		r4, r6, r2
	ldr		r1, _08077d50
	add		r0, r6, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0807c594
	cmp		r0, #0x0
	bne		_08077cf6
	b		_08077e04
_08077cf6:
	add		r0, r4, #0x0
	bl		sub_0807761c
	ldr		r1, _08077d54
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08077d06
	b		_08077e94
_08077d06:
	ldrb	r0, [r4, #0x0]
	sub		r0, #0x30
	mov		r1, #0x64
	add		r2, r0, #0x0
	mul		r2, r1
	ldr		r4, _08077d58
	add		r0, r6, r4
	ldrb	r1, [r0, #0x0]
	sub		r1, #0x30
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	ldr		r1, _08077d5c
	add		r0, r6, r1
	ldr		r4, _08077d60
	add		r2, r2, r4
	ldrb	r0, [r0, #0x0]
	add		r2, r2, r0
	add		r1, r6, #0x0
	add		r1, #0x5e
	ldrh	r0, [r1, #0x0]
	strh	r2, [r1, #0x0]
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0xfa
	bne		_08077d3c
	b		_08077ed8
_08077d3c:
	add		r2, r6, #0x0
	add		r2, #0x66
	mov		r0, #0x30
	strb	r0, [r2, #0x0]
	ldrh	r1, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x68
	b		_08077ea2

_08077d4c:	.4byte 0x0000047D
_08077d50:	.4byte 0x000006FA
_08077d54:	.4byte 0x0300244C
_08077d58:	.4byte 0x0000047E
_08077d5c:	.4byte 0x0000047F
_08077d60:	.4byte 0x0000FFD0

_08077d64:
	ldr		r0, [r6, #0x70]
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08077dcc
	mov		r2, #0xdc
	lsl		r2, r2, #0x2
	add		r5, r6, r2
	ldr		r1, _08077dc4
	add		r0, r5, #0x0
	bl		sub_0807c088
	ldr		r0, [r6, #0x70]
	ldr		r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_0807c160
	ldr		r1, _08077dc8
	add		r0, r5, #0x0
	bl		sub_0807c160
	ldr		r0, [r6, #0x70]
	add		r0, #0x4
	str		r0, [r6, #0x70]
	bl		sub_0807570c
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r4, r6, r0
	mov		r1, r8
	strh	r1, [r4, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	add		r0, r5, #0x0
	bl		sub_0807c054
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r6, #0x0
	add		r0, #0x63
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08073020
	b		_08077ed8

.incbin "base.gba", 0x77DC2, 0x2

_08077dc4:	.4byte 0x0820bcf8 @ "RCPT_TO<"
_08077dc8:	.4byte 0x0820bcf4

_08077dcc:
	ldrb	r0, [r7, #0x0]
	mov		r0, #0x4
	strb	r0, [r7, #0x0]
	b		_08077f26
_08077dd4:
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
	mov		r4, #0xf0
	lsl		r4, r4, #0x1
	add		r5, r6, r4
	ldrh	r1, [r5, #0x0]
	sub		r1, #0x1
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08075730
	ldr		r0, _08077e20
	add		r4, r6, r0
	ldr		r1, _08077e24
	add		r0, r6, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0807c594
	cmp		r0, #0x0
	bne		_08077e28
_08077e04:
	mov		r2, r8
	strh	r2, [r5, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xd4
	str		r0, [r5, #0x4]
	sub		r0, #0x71
	ldrb	r3, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08073020
	b		_08077f26

.incbin "base.gba", 0x77E1E, 0x2

_08077e20:	.4byte 0x0000047D
_08077e24:	.4byte 0x000006FA

_08077e28:
	add		r0, r4, #0x0
	bl		sub_0807761c
	ldr		r1, _08077e74
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08077e94
	ldrb	r0, [r4, #0x0]
	sub		r0, #0x30
	mov		r1, #0x64
	add		r2, r0, #0x0
	mul		r2, r1
	ldr		r4, _08077e78
	add		r0, r6, r4
	ldrb	r1, [r0, #0x0]
	sub		r1, #0x30
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	ldr		r1, _08077e7c
	add		r0, r6, r1
	ldr		r4, _08077e80
	add		r2, r2, r4
	ldrb	r0, [r0, #0x0]
	add		r2, r2, r0
	add		r1, r6, #0x0
	add		r1, #0x5e
	ldrh	r0, [r1, #0x0]
	strh	r2, [r1, #0x0]
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0xfa
	bne		_08077e84
	ldrb	r0, [r7, #0x0]
	mov		r0, #0x2
	strb	r0, [r7, #0x0]
	b		_08077f26

.incbin "base.gba", 0x77E72, 0x2

_08077e74:	.4byte 0x0300244C
_08077e78:	.4byte 0x0000047E
_08077e7c:	.4byte 0x0000047F
_08077e80:	.4byte 0x0000FFD0

_08077e84:
	add		r2, r6, #0x0
	add		r2, #0x66
	mov		r0, #0x30
	strb	r0, [r2, #0x0]
	ldrh	r1, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x68
	b		_08077ea2
_08077e94:
	add		r1, r6, #0x0
	add		r1, #0x66
	mov		r0, #0x30
	strb	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x68
	mov		r1, r8
_08077ea2:
	strh	r1, [r0, #0x0]
	ldrb	r0, [r7, #0x0]
	mov		r0, #0xf0
	strb	r0, [r7, #0x0]
	b		_08077f26
_08077eac:
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	add		r0, r6, #0x0
	add		r0, #0x60
	ldrb	r1, [r0, #0x0]
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	b		_08077f26
_08077ec0:
	mov		r2, #0xf0
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	mov		r4, r8
	strh	r4, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	sub		r1, #0x71
	ldrb	r1, [r1, #0x0]
	bl		sub_080738f8
_08077ed8:
	ldrb	r0, [r7, #0x0]
	add		r0, #0x1
	ldrb	r1, [r7, #0x0]
	strb	r0, [r7, #0x0]
	b		_08077f26
_08077ee2:
	add		r1, r6, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r6, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r6, #0x2]
	mov		r4, #0x0
	strh	r0, [r6, #0x2]
	ldrh	r0, [r6, #0x2]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r6, #0x2]
	orr		r0, r4
	strh	r0, [r6, #0x2]
	add		r0, r6, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	add		r0, r6, #0x0
	add		r0, #0xcc
	strb	r4, [r0, #0x0]
_08077f26:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08077b7c

	thumb_func_start sub_08077f30
sub_08077f30:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r7, r2, #0x0
	lsl		r1, r1, #0x10
	lsr		r4, r1, #0x10
	add		r5, r4, #0x0
	bl		sub_08075358
	mov		r0, #0xd
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_08077f50
	bl		sub_0807537c
	b		_08077f8a
_08077f50:
	cmp		r4, #0x0
	bne		_08077f62
	mov		r0, #0x20
	mov		r1, #0x0
	bl		sub_080753ec
	bl		sub_0807537c
	b		_08077f8a
_08077f62:
	ldr		r1, _08077f90
	add		r0, r1, #0x0
	add		r0, #0x60
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_08077f72
	mov		r0, #0x0
	str		r0, [r1, #0x7c]
_08077f72:
	str		r6, [r1, #0x70]
	str		r5, [r1, #0x74]
	str		r7, [r1, #0x78]
	ldr		r0, [r1, #0x7c]
	add		r0, r0, r5
	str		r0, [r1, #0x7c]
	mov		r0, #0xd
	mov		r1, #0x0
	bl		sub_0807539c
	bl		sub_0807537c
_08077f8a:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08077f90:	.4byte 0x03006E20
	thumb_func_end sub_08077f30

	thumb_func_start sub_08077f94
sub_08077f94:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r4, _08077fcc
	add		r0, r4, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_08077fe2
	add		r0, r4, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x15
	bne		_08077fd0
	add		r2, r4, #0x0
	add		r2, #0x66
	mov		r1, #0x0
	mov		r0, #0x24
	strb	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	b		_08077fe2

_08077fcc:	.4byte 0x03006E20

_08077fd0:
	cmp		r0, #0x24
	beq		_08077fe2
	bl		sub_08074500
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xf1
	strb	r1, [r0, #0x0]
_08077fe2:
	bl		sub_080728a0
	mov		r1, #0x40
	and		r1, r0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r8, r1
	cmp		r1, #0x0
	beq		_08078034
	ldr		r3, _08078030
	add		r1, r3, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r3, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r3, #0x2]
	mov		r2, #0x0
	strh	r0, [r3, #0x2]
	ldrh	r0, [r3, #0x2]
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r1, r4, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x2]
	orr		r0, r2
	strh	r0, [r3, #0x2]
	add		r0, r3, #0x0
	add		r0, #0x63
	strb	r2, [r0, #0x0]
	add		r0, #0x69
	strb	r2, [r0, #0x0]
	mov		r0, #0x30
	mov		r1, #0x0
	bl		sub_080753ec
	b		_080781dc

_08078030:	.4byte 0x03006E20

_08078034:
	ldr		r6, _08078058
	add		r7, r6, #0x0
	add		r7, #0x62
	ldrb	r0, [r7, #0x0]
	add		r4, r6, #0x0
	cmp		r0, #0x32
	bne		_08078044
	b		_080781e6
_08078044:
	cmp		r0, #0x32
	bgt		_08078068
	cmp		r0, #0x1
	beq		_080780ae
	cmp		r0, #0x1
	bgt		_0807805c
	cmp		r0, #0x0
	beq		_0807808e
	b		_080783be

.incbin "base.gba", 0x78056, 0x2

_08078058:	.4byte 0x03006E20

_0807805c:
	cmp		r0, #0x2
	beq		_0807813a
	cmp		r0, #0x3
	bne		_08078066
	b		_080781dc
_08078066:
	b		_080783be
_08078068:
	cmp		r0, #0x65
	bne		_0807806e
	b		_0807827c
_0807806e:
	cmp		r0, #0x65
	bgt		_08078080
	cmp		r0, #0x33
	bne		_08078078
	b		_08078200
_08078078:
	cmp		r0, #0x64
	bne		_0807807e
	b		_08078222
_0807807e:
	b		_080783be
_08078080:
	cmp		r0, #0xf0
	bne		_08078086
	b		_08078358
_08078086:
	cmp		r0, #0xf1
	bne		_0807808c
	b		_0807837a
_0807808c:
	b		_080783be
_0807808e:
	add		r1, r6, #0x0
	add		r1, #0x60
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_080780a6
	ldrb	r0, [r1, #0x0]
	mov		r0, r8
	strb	r0, [r1, #0x0]
	ldrb	r0, [r7, #0x0]
	mov		r0, #0x64
	strb	r0, [r7, #0x0]
	b		_080783be
_080780a6:
	ldrb	r0, [r7, #0x0]
	add		r0, #0x1
	ldrb	r1, [r7, #0x0]
	strb	r0, [r7, #0x0]
_080780ae:
	ldr		r0, [r4, #0x74]
	cmp		r0, #0xfe
	bls		_080780ec
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	ldr		r1, [r4, #0x70]
	add		r2, r4, #0x0
	add		r2, #0x63
	ldrb	r3, [r2, #0x0]
	mov		r2, #0xfe
	bl		sub_08073020
	ldr		r0, [r4, #0x70]
	add		r0, #0xfe
	str		r0, [r4, #0x70]
	ldr		r0, [r4, #0x74]
	sub		r0, #0xfe
	str		r0, [r4, #0x74]
	add		r2, r4, #0x0
	add		r2, #0x84
	add		r1, r4, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	b		_08078132
_080780ec:
	bl		sub_0807570c
	mov		r2, #0xf0
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	ldr		r1, [r4, #0x70]
	ldr		r2, [r4, #0x74]
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r3, r4, #0x0
	add		r3, #0x63
	ldrb	r3, [r3, #0x0]
	bl		sub_08073020
	ldr		r0, [r4, #0x78]
	cmp		r0, #0x1
	bne		_08078128
	add		r2, r4, #0x0
	add		r2, #0x84
	add		r1, r4, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	b		_08078132
_08078128:
	add		r1, r4, #0x0
	add		r1, #0x84
	mov		r0, #0x3
	str		r0, [r1, #0x0]
	sub		r1, #0x22
_08078132:
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x32
	strb	r0, [r1, #0x0]
	b		_080783be
_0807813a:
	mov		r4, #0xf2
	lsl		r4, r4, #0x1
	add		r0, r6, r4
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r5, r6, r1
	ldrh	r1, [r5, #0x0]
	sub		r1, #0x1
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08075730
	ldr		r2, _080781c4
	add		r4, r6, r2
	ldr		r1, _080781c8
	add		r0, r6, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0807c594
	cmp		r0, #0x0
	bne		_0807816c
	b		_080782ac
_0807816c:
	add		r0, r4, #0x0
	bl		sub_0807761c
	ldr		r1, _080781cc
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0807817c
	b		_08078340
_0807817c:
	ldrb	r0, [r4, #0x0]
	sub		r0, #0x30
	mov		r1, #0x64
	add		r2, r0, #0x0
	mul		r2, r1
	ldr		r4, _080781d0
	add		r0, r6, r4
	ldrb	r1, [r0, #0x0]
	sub		r1, #0x30
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	ldr		r1, _080781d4
	add		r0, r6, r1
	ldr		r4, _080781d8
	add		r2, r2, r4
	ldrb	r0, [r0, #0x0]
	add		r2, r2, r0
	add		r1, r6, #0x0
	add		r1, #0x5e
	ldrh	r0, [r1, #0x0]
	strh	r2, [r1, #0x0]
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0xfa
	bne		_080781b2
	b		_08078370
_080781b2:
	add		r2, r6, #0x0
	add		r2, #0x66
	mov		r0, #0x30
	strb	r0, [r2, #0x0]
	ldrh	r1, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x68
	b		_0807834e

.incbin "base.gba", 0x781C2, 0x2

_080781c4:	.4byte 0x0000047D
_080781c8:	.4byte 0x000006FA
_080781cc:	.4byte 0x03002450
_080781d0:	.4byte 0x0000047E
_080781d4:	.4byte 0x0000047F
_080781d8:	.4byte 0x0000FFD0

_080781dc:
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_080783be
_080781e6:
	add		r2, r6, #0x0
	add		r2, #0x80
	ldrb	r0, [r6, #0x5]
	lsl		r0, r0, #0x2
	add		r1, r6, #0x0
	add		r1, #0x34
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r2, #0x0]
	ldrb	r0, [r7, #0x0]
	add		r0, #0x1
	ldrb	r1, [r7, #0x0]
	strb	r0, [r7, #0x0]
_08078200:
	add		r0, r4, #0x0
	add		r0, #0x80
	ldr		r1, [r0, #0x0]
	sub		r1, #0x1
	str		r1, [r0, #0x0]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_08078214
	b		_080783be
_08078214:
	add		r0, r4, #0x0
	add		r0, #0x84
	ldr		r1, [r0, #0x0]
	sub		r0, #0x22
	ldrb	r2, [r0, #0x0]
	strb	r1, [r0, #0x0]
	b		_080783be
_08078222:
	mov		r2, #0xdc
	lsl		r2, r2, #0x2
	add		r5, r6, r2
	ldr		r1, _08078278
	add		r0, r5, #0x0
	bl		sub_0807c088
	bl		sub_0807570c
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r4, r6, r0
	mov		r1, r8
	strh	r1, [r4, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	add		r0, r5, #0x0
	bl		sub_0807c054
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r6, #0x0
	add		r0, #0x63
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08073020
	ldrb	r0, [r7, #0x0]
	add		r0, #0x1
	ldrb	r1, [r7, #0x0]
	strb	r0, [r7, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x84
	ldrb	r0, [r7, #0x0]
	str		r0, [r1, #0x0]
	ldrb	r0, [r7, #0x0]
	mov		r0, #0x32
	strb	r0, [r7, #0x0]
	b		_080783be

.incbin "base.gba", 0x78276, 0x2

_08078278:	.4byte 0x0820bd04 @ "DATA"

_0807827c:
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
	mov		r4, #0xf0
	lsl		r4, r4, #0x1
	add		r5, r6, r4
	ldrh	r1, [r5, #0x0]
	sub		r1, #0x1
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08075730
	ldr		r0, _080782c8
	add		r4, r6, r0
	ldr		r1, _080782cc
	add		r0, r6, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0807c594
	cmp		r0, #0x0
	bne		_080782d0
_080782ac:
	mov		r2, r8
	strh	r2, [r5, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xd4
	str		r0, [r5, #0x4]
	sub		r0, #0x71
	ldrb	r3, [r0, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08073020
	b		_080783be

.incbin "base.gba", 0x782C6, 0x2

_080782c8:	.4byte 0x0000047D
_080782cc:	.4byte 0x000006FA

_080782d0:
	add		r0, r4, #0x0
	bl		sub_0807761c
	ldr		r1, _08078320
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08078340
	ldrb	r0, [r4, #0x0]
	sub		r0, #0x30
	mov		r1, #0x64
	add		r2, r0, #0x0
	mul		r2, r1
	ldr		r4, _08078324
	add		r0, r6, r4
	ldrb	r1, [r0, #0x0]
	sub		r1, #0x30
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	ldr		r1, _08078328
	add		r0, r6, r1
	ldr		r4, _0807832c
	add		r2, r2, r4
	ldrb	r0, [r0, #0x0]
	add		r2, r2, r0
	add		r3, r6, #0x0
	add		r3, #0x5e
	ldrh	r0, [r3, #0x0]
	strh	r2, [r3, #0x0]
	ldrh	r1, [r3, #0x0]
	mov		r0, #0xb1
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_08078330
	ldrb	r0, [r7, #0x0]
	mov		r0, #0x1
	strb	r0, [r7, #0x0]
	b		_080783be

.incbin "base.gba", 0x7831E, 0x2

_08078320:	.4byte 0x03002450
_08078324:	.4byte 0x0000047E
_08078328:	.4byte 0x0000047F
_0807832c:	.4byte 0x0000FFD0

_08078330:
	add		r1, r6, #0x0
	add		r1, #0x66
	mov		r0, #0x30
	strb	r0, [r1, #0x0]
	ldrh	r1, [r3, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x68
	b		_0807834e
_08078340:
	add		r1, r6, #0x0
	add		r1, #0x66
	mov		r0, #0x30
	strb	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x68
	mov		r1, r8
_0807834e:
	strh	r1, [r0, #0x0]
	ldrb	r0, [r7, #0x0]
	mov		r0, #0xf0
	strb	r0, [r7, #0x0]
	b		_080783be
_08078358:
	mov		r2, #0xf0
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	mov		r4, r8
	strh	r4, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	sub		r1, #0x71
	ldrb	r1, [r1, #0x0]
	bl		sub_080738f8
_08078370:
	ldrb	r0, [r7, #0x0]
	add		r0, #0x1
	ldrb	r1, [r7, #0x0]
	strb	r0, [r7, #0x0]
	b		_080783be
_0807837a:
	add		r1, r6, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r6, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r6, #0x2]
	mov		r4, #0x0
	strh	r0, [r6, #0x2]
	ldrh	r0, [r6, #0x2]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r6, #0x2]
	orr		r0, r4
	strh	r0, [r6, #0x2]
	add		r0, r6, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	add		r0, r6, #0x0
	add		r0, #0xcc
	strb	r4, [r0, #0x0]
_080783be:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x783C8, 0x50
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r4, _08078450
	add		r0, r4, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_08078466
	add		r0, r4, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x15
	bne		_08078454
	add		r2, r4, #0x0
	add		r2, #0x66
	mov		r1, #0x0
	mov		r0, #0x24
	strb	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	b		_08078466

_08078450:	.4byte 0x03006E20

_08078454:
	cmp		r0, #0x24
	beq		_08078466
	bl		sub_08074500
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xf1
	strb	r1, [r0, #0x0]
_08078466:
	bl		sub_080728a0
	mov		r1, #0x40
	and		r1, r0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r8, r1
	cmp		r1, #0x0
	beq		_080784c8
	ldr		r0, _0807848c
	add		r0, #0x5c
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x4
	bne		_08078490
	mov		r0, #0x30
	mov		r1, #0x0
	bl		sub_080753ec
	b		_08078498

_0807848c:	.4byte 0x03006E20

_08078490:
	mov		r0, #0x31
	mov		r1, #0x0
	bl		sub_080753ec
_08078498:
	ldr		r3, _080784c4
	add		r1, r3, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r3, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r3, #0x2]
	mov		r2, #0x0
	strh	r0, [r3, #0x2]
	ldrh	r0, [r3, #0x2]
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r1, r4, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x2]
	orr		r0, r2
	strh	r0, [r3, #0x2]
	add		r0, r3, #0x0
	b		_080785e0

_080784c4:	.4byte 0x03006E20

_080784c8:
	ldr		r6, _080784e4
	add		r7, r6, #0x0
	add		r7, #0x62
	ldrb	r0, [r7, #0x0]
	add		r2, r0, #0x0
	cmp		r2, #0x2
	beq		_080785a4
	cmp		r2, #0x2
	bgt		_080784e8
	cmp		r2, #0x0
	beq		_08078500
	cmp		r2, #0x1
	beq		_08078544
	b		_08078658

_080784e4:	.4byte 0x03006E20

_080784e8:
	cmp		r2, #0xf0
	bne		_080784ee
	b		_080785f2
_080784ee:
	cmp		r2, #0xf0
	bgt		_080784f8
	cmp		r2, #0x3
	beq		_080785ba
	b		_08078658
_080784f8:
	cmp		r2, #0xf1
	bne		_080784fe
	b		_08078614
_080784fe:
	b		_08078658
_08078500:
	bl		sub_0807570c
	mov		r0, #0xdc
	lsl		r0, r0, #0x2
	add		r5, r6, r0
	ldr		r1, _08078540
	add		r0, r5, #0x0
	bl		sub_0807c088
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r4, r6, r1
	mov		r2, r8
	strh	r2, [r4, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	add		r0, r5, #0x0
	bl		sub_0807c054
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r6, #0x0
	add		r0, #0x63
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08073020
	b		_0807860a

.incbin "base.gba", 0x7853E, 0x2

_08078540:	.4byte 0x0820bcd4 @ "QUIT"

_08078544:
	mov		r3, #0xf2
	lsl		r3, r3, #0x1
	add		r0, r6, r3
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r4, r6, r1
	ldrh	r1, [r4, #0x0]
	sub		r1, #0x1
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08075730
	ldr		r2, _0807858c
	add		r0, r6, r2
	ldr		r3, _08078590
	add		r1, r6, r3
	ldrh	r1, [r1, #0x0]
	bl		sub_0807c594
	cmp		r0, #0x0
	bne		_08078594
	mov		r0, r8
	strh	r0, [r4, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	sub		r0, #0x71
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08073020
	b		_08078658

_0807858c:	.4byte 0x0000047D
_08078590:	.4byte 0x000006FA

_08078594:
	ldrb	r0, [r6, #0x5]
	lsl		r0, r0, #0x2
	add		r1, r6, #0x0
	add		r1, #0x2c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r6, #0x70]
	b		_0807860a
_080785a4:
	ldr		r0, [r6, #0x70]
	sub		r0, #0x1
	str		r0, [r6, #0x70]
	cmp		r0, #0x0
	bne		_08078658
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	add		r1, r6, #0x0
	add		r1, #0x63
	b		_08078604
_080785ba:
	add		r0, r6, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	strb	r2, [r0, #0x0]
	ldrh	r1, [r6, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r6, #0x2]
	mov		r2, #0x0
	strh	r0, [r6, #0x2]
	ldrh	r0, [r6, #0x2]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r1, r3, #0x0
	orr		r0, r1
	ldrh	r1, [r6, #0x2]
	orr		r0, r2
	strh	r0, [r6, #0x2]
	add		r0, r6, #0x0
_080785e0:
	add		r0, #0x63
	strb	r2, [r0, #0x0]
	add		r0, #0x69
	strb	r2, [r0, #0x0]
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_08078658
_080785f2:
	mov		r4, #0xf0
	lsl		r4, r4, #0x1
	add		r0, r6, r4
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	sub		r1, #0x71
_08078604:
	ldrb	r1, [r1, #0x0]
	bl		sub_080738f8
_0807860a:
	ldrb	r0, [r7, #0x0]
	add		r0, #0x1
	ldrb	r1, [r7, #0x0]
	strb	r0, [r7, #0x0]
	b		_08078658
_08078614:
	add		r1, r6, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r6, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r6, #0x2]
	mov		r4, #0x0
	strh	r0, [r6, #0x2]
	ldrh	r0, [r6, #0x2]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r6, #0x2]
	orr		r0, r4
	strh	r0, [r6, #0x2]
	add		r0, r6, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	add		r0, r6, #0x0
	add		r0, #0xcc
	strb	r4, [r0, #0x0]
_08078658:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x78662, 0x2
	thumb_func_end sub_08077f94

	thumb_func_start sub_08078664
sub_08078664:
	add		r1, r0, #0x0
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x2b
	bne		_0807867c
	ldrb	r0, [r1, #0x1]
	cmp		r0, #0x4f
	bne		_0807867c
	ldrb	r0, [r1, #0x2]
	cmp		r0, #0x4b
	bne		_0807867c
	mov		r0, #0x0
	b		_0807869a
_0807867c:
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x2d
	bne		_08078698
	ldrb	r0, [r1, #0x1]
	cmp		r0, #0x45
	bne		_08078698
	ldrb	r0, [r1, #0x2]
	cmp		r0, #0x52
	bne		_08078698
	ldrb	r0, [r1, #0x3]
	cmp		r0, #0x52
	bne		_08078698
	mov		r0, #0x1
	b		_0807869a
_08078698:
	mov		r0, #0x2
_0807869a:
	bx		lr
	thumb_func_end sub_08078664

	thumb_func_start sub_0807869c
sub_0807869c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	bl		sub_08075358
	mov		r0, #0xf
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_080786b6
	bl		sub_0807537c
	b		_0807875e
_080786b6:
	add		r0, r5, #0x0
	bl		sub_0807c054
	cmp		r0, #0x1e
	bgt		_080786d2
	cmp		r0, #0x0
	beq		_080786d2
	add		r0, r6, #0x0
	bl		sub_0807c054
	cmp		r0, #0x10
	bgt		_080786d2
	cmp		r0, #0x0
	bne		_080786e0
_080786d2:
	mov		r0, #0x20
	mov		r1, #0x0
	bl		sub_080753ec
	bl		sub_0807537c
	b		_0807875e
_080786e0:
	ldr		r4, _08078710
	mov		r1, #0xdc
	lsl		r1, r1, #0x2
	add		r0, r4, r1
	str		r0, [r4, #0x70]
	bl		sub_0807be28
	ldr		r0, [r4, #0x70]
	bl		sub_0807c054
	add		r1, r0, #0x0
	ldr		r0, [r4, #0x70]
	add		r0, r0, r1
	add		r0, #0x1
	str		r0, [r4, #0x74]
	ldr		r1, _08078714
	bl		sub_0807c088
	ldr		r0, [r4, #0x74]
	add		r1, r5, #0x0
	bl		sub_0807c160
	ldr		r2, [r4, #0x74]
	b		_0807871a

_08078710:	.4byte 0x03006E20
_08078714:	.4byte 0x0820bd0c @ "USER"

_08078718:
	add		r2, #0x1
_0807871a:
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_08078724
	cmp		r0, #0x40
	bne		_08078718
_08078724:
	mov		r0, #0xd
	strb	r0, [r2, #0x0]
	add		r2, #0x1
	mov		r0, #0xa
	strb	r0, [r2, #0x0]
	add		r2, #0x1
	mov		r0, #0x0
	strb	r0, [r2, #0x0]
	add		r2, #0x1
	ldr		r4, _08078764
	str		r2, [r4, #0x78]
	ldr		r1, _08078768
	add		r0, r2, #0x0
	bl		sub_0807c088
	ldr		r0, [r4, #0x78]
	add		r1, r6, #0x0
	bl		sub_0807c160
	ldr		r0, [r4, #0x78]
	ldr		r1, _0807876c
	bl		sub_0807c160
	mov		r0, #0xf
	mov		r1, #0x0
	bl		sub_0807539c
	bl		sub_0807537c
_0807875e:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08078764:	.4byte 0x03006E20
_08078768:	.4byte 0x0820bd14 @ "PASS"
_0807876c:	.4byte 0x0820bce4
	thumb_func_end sub_0807869c

	thumb_func_start sub_08078770
sub_08078770:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r2, _08078798
	add		r0, r2, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_080787f2
	add		r0, r2, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x23
	beq		_080787c2
	cmp		r0, #0x23
	bgt		_0807879c
	cmp		r0, #0x15
	beq		_080787a6
	b		_080787e4

.incbin "base.gba", 0x78796, 0x2

_08078798:	.4byte 0x03006E20

_0807879c:
	cmp		r0, #0x24
	beq		_080787f2
	cmp		r0, #0x28
	beq		_080787c2
	b		_080787e4
_080787a6:
	add		r3, r2, #0x0
	add		r3, #0x66
	mov		r1, #0x0
	mov		r0, #0x24
	strb	r0, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	b		_080787f2
_080787c2:
	ldr		r2, _080787e0
	add		r3, r2, #0x0
	add		r3, #0x66
	mov		r1, #0x0
	mov		r0, #0x24
	strb	r0, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf1
	strb	r0, [r1, #0x0]
	b		_080787f2

_080787e0:	.4byte 0x03006E20

_080787e4:
	bl		sub_08074500
	ldr		r0, _08078840
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xf1
	strb	r1, [r0, #0x0]
_080787f2:
	bl		sub_080728a0
	mov		r1, #0x40
	and		r1, r0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r8, r1
	cmp		r1, #0x0
	beq		_08078844
	ldr		r3, _08078840
	add		r1, r3, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r3, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r3, #0x2]
	mov		r2, #0x0
	strh	r0, [r3, #0x2]
	ldrh	r0, [r3, #0x2]
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r1, r4, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x2]
	orr		r0, r2
	strh	r0, [r3, #0x2]
	add		r0, r3, #0x0
	add		r0, #0x63
	strb	r2, [r0, #0x0]
	add		r0, #0x69
	strb	r2, [r0, #0x0]
	mov		r0, #0x31
	mov		r1, #0x0
	bl		sub_080753ec
	b		_08078b22

_08078840:	.4byte 0x03006E20

_08078844:
	ldr		r5, _08078864
	add		r6, r5, #0x0
	add		r6, #0x62
	ldrb	r0, [r6, #0x0]
	cmp		r0, #0x4
	bne		_08078852
	b		_080789bc
_08078852:
	cmp		r0, #0x4
	bgt		_08078872
	cmp		r0, #0x1
	beq		_080788a4
	cmp		r0, #0x1
	bgt		_08078868
	cmp		r0, #0x0
	beq		_0807888c
	b		_08078b92

_08078864:	.4byte 0x03006E20

_08078868:
	cmp		r0, #0x2
	beq		_080788d2
	cmp		r0, #0x3
	beq		_0807890a
	b		_08078b92
_08078872:
	cmp		r0, #0x6
	bne		_08078878
	b		_08078b00
_08078878:
	cmp		r0, #0x6
	bge		_0807887e
	b		_08078a6e
_0807887e:
	cmp		r0, #0xf0
	bne		_08078884
	b		_08078b2c
_08078884:
	cmp		r0, #0xf1
	bne		_0807888a
	b		_08078b4e
_0807888a:
	b		_08078b92
_0807888c:
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r2, r8
	strh	r2, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	ldr		r1, [r5, #0x70]
	bl		sub_08073b18
	b		_08078b44
_080788a4:
	add		r4, r5, #0x0
	add		r4, #0x6a
	mov		r1, #0xf2
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	ldr		r1, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r2, #0x4
	bl		sub_0807c304
	mov		r2, #0xf0
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	add		r1, r4, #0x0
	mov		r2, #0x6e
	bl		sub_08073810
	b		_08078b44
_080788d2:
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	add		r4, r5, #0x0
	add		r4, #0x63
	strb	r0, [r4, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xcc
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	bl		sub_0807570c
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r2, r8
	strh	r2, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	ldrb	r3, [r4, #0x0]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08073020
	b		_08078b44
_0807890a:
	mov		r4, #0xf2
	lsl		r4, r4, #0x1
	add		r0, r5, r4
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r7, r5, r1
	ldrh	r1, [r7, #0x0]
	sub		r1, #0x1
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08075730
	ldr		r2, _0807894c
	add		r4, r5, r2
	ldr		r1, _08078950
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0807c594
	cmp		r0, #0x0
	bne		_08078954
	mov		r2, r8
	strh	r2, [r7, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xd4
	str		r0, [r7, #0x4]
	sub		r0, #0x71
	ldrb	r3, [r0, #0x0]
	add		r0, r7, #0x0
	b		_08078aae

_0807894c:	.4byte 0x0000047D
_08078950:	.4byte 0x000006FA

_08078954:
	add		r0, r4, #0x0
	bl		sub_08078664
	add		r1, r0, #0x0
	ldr		r0, _08078990
	str		r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_08078994
	bl		sub_0807570c
	mov		r4, r8
	strh	r4, [r7, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xd4
	str		r0, [r7, #0x4]
	ldr		r4, [r5, #0x74]
	add		r0, r4, #0x0
	bl		sub_0807c054
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r5, #0x0
	add		r0, #0x63
	ldrb	r3, [r0, #0x0]
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_08073020
	b		_08078b44

_08078990:	.4byte 0x03002454

_08078994:
	cmp		r1, #0x1
	bne		_080789aa
	add		r1, r5, #0x0
	add		r1, #0x66
	mov		r0, #0x31
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x68
	mov		r1, r8
	strh	r1, [r0, #0x0]
	b		_08078af8
_080789aa:
	add		r2, r5, #0x0
	add		r2, #0x66
	mov		r1, #0x0
	mov		r0, #0x31
	strb	r0, [r2, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	b		_08078af8
_080789bc:
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
	mov		r4, #0xf0
	lsl		r4, r4, #0x1
	add		r7, r5, r4
	ldrh	r1, [r7, #0x0]
	sub		r1, #0x1
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08075730
	ldr		r0, _08078a00
	add		r4, r5, r0
	ldr		r1, _08078a04
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0807c594
	cmp		r0, #0x0
	bne		_08078a08
	mov		r2, r8
	strh	r2, [r7, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xd4
	str		r0, [r7, #0x4]
	sub		r0, #0x71
	ldrb	r3, [r0, #0x0]
	add		r0, r7, #0x0
	b		_08078aae

.incbin "base.gba", 0x789FE, 0x2

_08078a00:	.4byte 0x0000047D
_08078a04:	.4byte 0x000006FA

_08078a08:
	add		r0, r4, #0x0
	bl		sub_08078664
	add		r1, r0, #0x0
	ldr		r0, _08078a44
	str		r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_08078a48
	bl		sub_0807570c
	mov		r4, r8
	strh	r4, [r7, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xd4
	str		r0, [r7, #0x4]
	ldr		r4, [r5, #0x78]
	add		r0, r4, #0x0
	bl		sub_0807c054
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r5, #0x0
	add		r0, #0x63
	ldrb	r3, [r0, #0x0]
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_08073020
	b		_08078b44

_08078a44:	.4byte 0x03002454

_08078a48:
	cmp		r1, #0x1
	bne		_08078a5c
	add		r1, r5, #0x0
	add		r1, #0x66
	mov		r0, #0x31
	strb	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x2
	strh	r0, [r1, #0x0]
	b		_08078af8
_08078a5c:
	add		r1, r5, #0x0
	add		r1, #0x66
	mov		r0, #0x31
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x68
	mov		r1, r8
	strh	r1, [r0, #0x0]
	b		_08078af8
_08078a6e:
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r4, r5, r1
	ldrh	r1, [r4, #0x0]
	sub		r1, #0x1
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08075730
	ldr		r2, _08078ab8
	add		r7, r5, r2
	ldr		r1, _08078abc
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r7, #0x0
	bl		sub_0807c594
	cmp		r0, #0x0
	bne		_08078ac0
	mov		r2, r8
	strh	r2, [r4, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	sub		r0, #0x71
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
_08078aae:
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08073020
	b		_08078b92

_08078ab8:	.4byte 0x0000047D
_08078abc:	.4byte 0x000006FA

_08078ac0:
	add		r0, r7, #0x0
	bl		sub_08078664
	add		r1, r0, #0x0
	ldr		r0, _08078ae4
	str		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_08078b44
	cmp		r1, #0x1
	bne		_08078ae8
	add		r1, r5, #0x0
	add		r1, #0x66
	mov		r0, #0x31
	strb	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x3
	strh	r0, [r1, #0x0]
	b		_08078af8

_08078ae4:	.4byte 0x03002454

_08078ae8:
	add		r1, r5, #0x0
	add		r1, #0x66
	mov		r0, #0x31
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x68
	mov		r4, r8
	strh	r4, [r0, #0x0]
_08078af8:
	ldrb	r0, [r6, #0x0]
	mov		r0, #0xf0
	strb	r0, [r6, #0x0]
	b		_08078b92
_08078b00:
	add		r1, r5, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x5
	strb	r0, [r1, #0x0]
	ldrh	r1, [r5, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r2, #0xa0
	lsl		r2, r2, #0x3
	add		r0, r2, #0x0
	ldrh	r2, [r5, #0x2]
	orr		r0, r1
	strh	r0, [r5, #0x2]
_08078b22:
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_08078b92
_08078b2c:
	mov		r4, #0xf0
	lsl		r4, r4, #0x1
	add		r0, r5, r4
	mov		r1, r8
	strh	r1, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	sub		r1, #0x71
	ldrb	r1, [r1, #0x0]
	bl		sub_080738f8
_08078b44:
	ldrb	r0, [r6, #0x0]
	add		r0, #0x1
	ldrb	r1, [r6, #0x0]
	strb	r0, [r6, #0x0]
	b		_08078b92
_08078b4e:
	add		r1, r5, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r5, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	mov		r4, #0x0
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r5, #0x2]
	orr		r0, r4
	strh	r0, [r5, #0x2]
	add		r0, r5, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	add		r0, r5, #0x0
	add		r0, #0xcc
	strb	r4, [r0, #0x0]
_08078b92:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08078770

	thumb_func_start sub_08078b9c
sub_08078b9c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	bl		sub_08075358
	mov		r0, #0x10
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_08078bb6
	bl		sub_0807537c
	b		_08078bc8
_08078bb6:
	ldr		r0, _08078bd0
	str		r4, [r0, #0x70]
	str		r5, [r0, #0x74]
	mov		r0, #0x10
	mov		r1, #0x0
	bl		sub_0807539c
	bl		sub_0807537c
_08078bc8:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x78BCE, 0x2

_08078bd0:	.4byte 0x03006E20
	thumb_func_end sub_08078b9c

	thumb_func_start sub_08078bd4
sub_08078bd4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r4, _08078c0c
	add		r0, r4, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_08078c22
	add		r0, r4, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x15
	bne		_08078c10
	add		r2, r4, #0x0
	add		r2, #0x66
	mov		r1, #0x0
	mov		r0, #0x24
	strb	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	b		_08078c22

_08078c0c:	.4byte 0x03006E20

_08078c10:
	cmp		r0, #0x24
	beq		_08078c22
	bl		sub_08074500
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xf1
	strb	r1, [r0, #0x0]
_08078c22:
	bl		sub_080728a0
	mov		r1, #0x40
	and		r1, r0
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	cmp		r7, #0x0
	beq		_08078c74
	ldr		r3, _08078c70
	add		r1, r3, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r3, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r3, #0x2]
	mov		r2, #0x0
	strh	r0, [r3, #0x2]
	ldrh	r0, [r3, #0x2]
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r1, r4, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x2]
	orr		r0, r2
	strh	r0, [r3, #0x2]
	add		r0, r3, #0x0
	add		r0, #0x63
	strb	r2, [r0, #0x0]
	add		r0, #0x69
	strb	r2, [r0, #0x0]
	mov		r0, #0x31
	mov		r1, #0x0
	bl		sub_080753ec
	b		_08078db4

.incbin "base.gba", 0x78C6E, 0x2

_08078c70:	.4byte 0x03006E20

_08078c74:
	ldr		r6, _08078c94
	mov		r0, #0x62
	add		r0, r0, r6
	mov		r8, r0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_08078c84
	b		_08078db4
_08078c84:
	cmp		r0, #0x2
	bgt		_08078c98
	cmp		r0, #0x0
	beq		_08078ca6
	cmp		r0, #0x1
	beq		_08078ce8
	b		_08078e26

.incbin "base.gba", 0x78C92, 0x2

_08078c94:	.4byte 0x03006E20

_08078c98:
	cmp		r0, #0xf0
	bne		_08078c9e
	b		_08078dbe
_08078c9e:
	cmp		r0, #0xf1
	bne		_08078ca4
	b		_08078de2
_08078ca4:
	b		_08078e26
_08078ca6:
	mov		r1, #0xdc
	lsl		r1, r1, #0x2
	add		r5, r6, r1
	ldr		r1, _08078ce4
	add		r0, r5, #0x0
	bl		sub_0807c088
	bl		sub_0807570c
	mov		r2, #0xf0
	lsl		r2, r2, #0x1
	add		r4, r6, r2
	strh	r7, [r4, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	add		r0, r5, #0x0
	bl		sub_0807c054
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r6, #0x0
	add		r0, #0x63
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08073020
	b		_08078d68

.incbin "base.gba", 0x78CE2, 0x2

_08078ce4:	.4byte 0x0820bd1c @ "STAT"

_08078ce8:
	mov		r1, #0xf2
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
	mov		r2, #0xf0
	lsl		r2, r2, #0x1
	add		r4, r6, r2
	ldrh	r1, [r4, #0x0]
	sub		r1, #0x1
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08075730
	ldr		r0, _08078d30
	add		r5, r6, r0
	ldr		r1, _08078d34
	add		r0, r6, r1
	ldrh	r1, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_0807c594
	cmp		r0, #0x0
	bne		_08078d38
	strh	r7, [r4, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	sub		r0, #0x71
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08073020
	b		_08078e26

_08078d30:	.4byte 0x0000047D
_08078d34:	.4byte 0x000006FA

_08078d38:
	add		r0, r5, #0x0
	bl		sub_08078664
	add		r1, r0, #0x0
	ldr		r0, _08078d74
	str		r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_08078d80
	ldr		r4, _08078d78
	ldr		r2, _08078d7c
	add		r0, r6, r2
	str		r0, [r4, #0x0]
	bl		sub_0807c424
	ldr		r1, [r6, #0x70]
	strh	r0, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	bl		sub_0807c208
	str		r0, [r4, #0x0]
	bl		sub_0807c424
	ldr		r1, [r6, #0x74]
	str		r0, [r1, #0x0]
_08078d68:
	mov		r4, r8
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	b		_08078e26

_08078d74:	.4byte 0x0300245C
_08078d78:	.4byte 0x03002458
_08078d7c:	.4byte 0x00000481

_08078d80:
	cmp		r1, #0x1
	bne		_08078d9c
	add		r1, r6, #0x0
	add		r1, #0x66
	mov		r0, #0x31
	strb	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x68
	strh	r7, [r0, #0x0]
	mov		r1, r8
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	b		_08078e26
_08078d9c:
	add		r1, r6, #0x0
	add		r1, #0x66
	mov		r0, #0x31
	strb	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x68
	strh	r7, [r0, #0x0]
	mov		r2, r8
	ldrb	r0, [r2, #0x0]
	mov		r0, #0xf0
	strb	r0, [r2, #0x0]
	b		_08078e26
_08078db4:
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_08078e26
_08078dbe:
	mov		r4, #0xf0
	lsl		r4, r4, #0x1
	add		r0, r6, r4
	strh	r7, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	sub		r1, #0x71
	ldrb	r1, [r1, #0x0]
	bl		sub_080738f8
	mov		r1, r8
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
	ldrb	r1, [r1, #0x0]
	mov		r2, r8
	strb	r0, [r2, #0x0]
	b		_08078e26
_08078de2:
	add		r1, r6, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r6, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r6, #0x2]
	mov		r4, #0x0
	strh	r0, [r6, #0x2]
	ldrh	r0, [r6, #0x2]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r6, #0x2]
	orr		r0, r4
	strh	r0, [r6, #0x2]
	add		r0, r6, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	add		r0, r6, #0x0
	add		r0, #0xcc
	strb	r4, [r0, #0x0]
_08078e26:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08078bd4

	thumb_func_start sub_08078e30
sub_08078e30:
	push	{ r4, r5, r6, lr }
	add		r5, r1, #0x0
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	add		r6, r4, #0x0
	bl		sub_08075358
	mov		r0, #0x11
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_08078e4e
	bl		sub_0807537c
	b		_08078e98
_08078e4e:
	cmp		r4, #0x0
	bne		_08078e60
	mov		r0, #0x20
	mov		r1, #0x0
	bl		sub_080753ec
	bl		sub_0807537c
	b		_08078e98
_08078e60:
	ldr		r4, _08078ea0
	str		r5, [r4, #0x70]
	mov		r0, #0xdc
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	ldr		r1, _08078ea4
	add		r0, r4, #0x0
	bl		sub_0807c088
	add		r0, r4, #0x0
	bl		sub_0807c054
	add		r1, r0, #0x0
	add		r1, r1, r4
	add		r0, r6, #0x0
	mov		r2, #0xa
	bl		sub_0807c3fc
	ldr		r1, _08078ea8
	add		r0, r4, #0x0
	bl		sub_0807c160
	mov		r0, #0x11
	mov		r1, #0x0
	bl		sub_0807539c
	bl		sub_0807537c
_08078e98:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x78E9E, 0x2

_08078ea0:	.4byte 0x03006E20
_08078ea4:	.4byte 0x0820bd24 @ "LIST"
_08078ea8:	.4byte 0x0820bce4
	thumb_func_end sub_08078e30

	thumb_func_start sub_08078eac
sub_08078eac:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r4, _08078ee4
	add		r0, r4, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_08078efa
	add		r0, r4, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x15
	bne		_08078ee8
	add		r2, r4, #0x0
	add		r2, #0x66
	mov		r1, #0x0
	mov		r0, #0x24
	strb	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	b		_08078efa

_08078ee4:	.4byte 0x03006E20

_08078ee8:
	cmp		r0, #0x24
	beq		_08078efa
	bl		sub_08074500
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xf1
	strb	r1, [r0, #0x0]
_08078efa:
	bl		sub_080728a0
	mov		r1, #0x40
	and		r1, r0
	lsl		r1, r1, #0x10
	lsr		r5, r1, #0x10
	cmp		r5, #0x0
	beq		_08078f4c
	ldr		r3, _08078f48
	add		r1, r3, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r3, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r3, #0x2]
	mov		r2, #0x0
	strh	r0, [r3, #0x2]
	ldrh	r0, [r3, #0x2]
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r1, r4, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x2]
	orr		r0, r2
	strh	r0, [r3, #0x2]
	add		r0, r3, #0x0
	add		r0, #0x63
	strb	r2, [r0, #0x0]
	add		r0, #0x69
	strb	r2, [r0, #0x0]
	mov		r0, #0x31
	mov		r1, #0x0
	bl		sub_080753ec
	b		_08079062

.incbin "base.gba", 0x78F46, 0x2

_08078f48:	.4byte 0x03006E20

_08078f4c:
	ldr		r6, _08078f68
	add		r7, r6, #0x0
	add		r7, #0x62
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x64
	bne		_08078f5a
	b		_08079062
_08078f5a:
	cmp		r0, #0x64
	bgt		_08078f6c
	cmp		r0, #0x0
	beq		_08078f7a
	cmp		r0, #0x1
	beq		_08078fae
	b		_080790d0

_08078f68:	.4byte 0x03006E20

_08078f6c:
	cmp		r0, #0xf0
	bne		_08078f72
	b		_0807906c
_08078f72:
	cmp		r0, #0xf1
	bne		_08078f78
	b		_0807908c
_08078f78:
	b		_080790d0
_08078f7a:
	bl		sub_0807570c
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r4, r6, r0
	strh	r5, [r4, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	mov		r1, #0xdc
	lsl		r1, r1, #0x2
	add		r5, r6, r1
	add		r0, r5, #0x0
	bl		sub_0807c054
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r6, #0x0
	add		r0, #0x63
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08073020
	b		_08079082
_08078fae:
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r4, r6, r1
	ldrh	r1, [r4, #0x0]
	sub		r1, #0x1
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08075730
	ldr		r2, _08078ff8
	add		r2, r2, r6
	mov		r8, r2
	ldr		r1, _08078ffc
	add		r0, r6, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, r8
	bl		sub_0807c594
	cmp		r0, #0x0
	bne		_08079000
	strh	r5, [r4, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	sub		r0, #0x71
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08073020
	b		_080790d0

_08078ff8:	.4byte 0x0000047D
_08078ffc:	.4byte 0x000006FA

_08079000:
	mov		r0, r8
	bl		sub_08078664
	add		r1, r0, #0x0
	ldr		r0, _0807902c
	str		r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_08079038
	ldr		r4, _08079030
	ldr		r2, _08079034
	add		r0, r6, r2
	bl		sub_0807c208
	str		r0, [r4, #0x0]
	bl		sub_0807c424
	ldr		r1, [r6, #0x70]
	str		r0, [r1, #0x0]
	ldrb	r0, [r7, #0x0]
	mov		r0, #0x64
	strb	r0, [r7, #0x0]
	b		_080790d0

_0807902c:	.4byte 0x03002464
_08079030:	.4byte 0x03002460
_08079034:	.4byte 0x00000481

_08079038:
	cmp		r1, #0x1
	bne		_0807904c
	add		r1, r6, #0x0
	add		r1, #0x66
	mov		r0, #0x31
	strb	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x4
	strh	r0, [r1, #0x0]
	b		_0807905a
_0807904c:
	add		r1, r6, #0x0
	add		r1, #0x66
	mov		r0, #0x31
	strb	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x68
	strh	r5, [r0, #0x0]
_0807905a:
	ldrb	r0, [r7, #0x0]
	mov		r0, #0xf0
	strb	r0, [r7, #0x0]
	b		_080790d0
_08079062:
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_080790d0
_0807906c:
	mov		r4, #0xf0
	lsl		r4, r4, #0x1
	add		r0, r6, r4
	strh	r5, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	sub		r1, #0x71
	ldrb	r1, [r1, #0x0]
	bl		sub_080738f8
_08079082:
	ldrb	r0, [r7, #0x0]
	add		r0, #0x1
	ldrb	r1, [r7, #0x0]
	strb	r0, [r7, #0x0]
	b		_080790d0
_0807908c:
	add		r1, r6, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r6, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r6, #0x2]
	mov		r4, #0x0
	strh	r0, [r6, #0x2]
	ldrh	r0, [r6, #0x2]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r6, #0x2]
	orr		r0, r4
	strh	r0, [r6, #0x2]
	add		r0, r6, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	add		r0, r6, #0x0
	add		r0, #0xcc
	strb	r4, [r0, #0x0]
_080790d0:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x790DA, 0x17E
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	ldr		r4, _08079294
	add		r0, r4, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_080792aa
	add		r0, r4, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x15
	bne		_08079298
	add		r2, r4, #0x0
	add		r2, #0x66
	mov		r1, #0x0
	mov		r0, #0x24
	strb	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	b		_080792aa

_08079294:	.4byte 0x03006E20

_08079298:
	cmp		r0, #0x24
	beq		_080792aa
	bl		sub_08074500
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xf1
	strb	r1, [r0, #0x0]
_080792aa:
	bl		sub_080728a0
	mov		r1, #0x40
	and		r1, r0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r9, r1
	cmp		r1, #0x0
	beq		_080792fc
	ldr		r3, _080792f8
	add		r1, r3, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r3, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r3, #0x2]
	mov		r2, #0x0
	strh	r0, [r3, #0x2]
	ldrh	r0, [r3, #0x2]
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r1, r4, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x2]
	orr		r0, r2
	strh	r0, [r3, #0x2]
	add		r0, r3, #0x0
	add		r0, #0x63
	strb	r2, [r0, #0x0]
	add		r0, #0x69
	strb	r2, [r0, #0x0]
	mov		r0, #0x31
	mov		r1, #0x0
	bl		sub_080753ec
	b		_080795b0

_080792f8:	.4byte 0x03006E20

_080792fc:
	ldr		r6, _08079320
	mov		r0, #0x62
	add		r0, r0, r6
	mov		r8, r0
	ldrb	r0, [r0, #0x0]
	add		r4, r0, #0x0
	add		r7, r6, #0x0
	cmp		r4, #0x64
	bne		_08079310
	b		_080795b0
_08079310:
	cmp		r4, #0x64
	bgt		_08079324
	cmp		r4, #0x0
	beq		_08079332
	cmp		r4, #0x1
	beq		_08079372
	b		_08079622

.incbin "base.gba", 0x7931E, 0x2

_08079320:	.4byte 0x03006E20

_08079324:
	cmp		r4, #0xf0
	bne		_0807932a
	b		_080795ba
_0807932a:
	cmp		r4, #0xf1
	bne		_08079330
	b		_080795de
_08079330:
	b		_08079622
_08079332:
	bl		sub_0807570c
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r4, r6, r1
	mov		r2, r9
	strh	r2, [r4, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	mov		r3, #0xdc
	lsl		r3, r3, #0x2
	add		r5, r6, r3
	add		r0, r5, #0x0
	bl		sub_0807c054
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r6, #0x0
	add		r0, #0x63
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08073020
	mov		r4, r8
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	b		_08079622
_08079372:
	ldr		r2, _080793e0
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r0, r0, r6
	mov		r10, r0
	ldrh	r0, [r0, #0x0]
	sub		r3, r0, #0x1
	str		r3, [r2, #0x0]
	ldr		r0, [r6, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08079390
	b		_08079524
_08079390:
	ldr		r0, [r6, #0x70]
	cmp		r0, #0x0
	bne		_08079398
	b		_0807952c
_08079398:
	cmp		r3, #0x1
	bgt		_0807939e
	b		_0807952c
_0807939e:
	ldr		r1, _080793e4
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0807946e
	ldr		r7, _080793e8
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r5, r6, r2
	ldr		r0, [r5, #0x0]
	add		r0, #0x1
	add		r1, r3, #0x0
	bl		sub_0807c138
	add		r1, r0, #0x0
	str		r1, [r7, #0x0]
	cmp		r1, #0x0
	bne		_080793ec
	ldr		r0, [r5, #0x0]
	add		r0, #0x1
	ldr		r3, _080793e0
	ldrh	r1, [r3, #0x0]
	bl		sub_08075730
	mov		r0, r9
	mov		r4, r10
	strh	r0, [r4, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	sub		r0, #0x71
	ldrb	r3, [r0, #0x0]
	mov		r0, r10
	b		_0807959a

_080793e0:	.4byte 0x0300246C
_080793e4:	.4byte 0x03006EAC
_080793e8:	.4byte 0x03002468

_080793ec:
	ldr		r2, [r5, #0x0]
	add		r0, r2, #0x1
	sub		r1, #0x1
	sub		r1, r1, r2
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08075730
	ldr		r1, _08079428
	add		r0, r6, r1
	bl		sub_08078664
	add		r1, r0, #0x0
	ldr		r0, _0807942c
	str		r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_08079438
	ldr		r2, [r7, #0x0]
	sub		r2, #0x1
	ldr		r1, [r5, #0x0]
	sub		r1, r2, r1
	ldr		r3, _08079430
	ldr		r0, [r3, #0x0]
	sub		r0, r0, r1
	str		r0, [r3, #0x0]
	str		r2, [r5, #0x0]
	ldr		r0, _08079434
	str		r4, [r0, #0x0]
	add		r7, r6, #0x0
	b		_0807946e

_08079428:	.4byte 0x0000047D
_0807942c:	.4byte 0x03002470
_08079430:	.4byte 0x0300246C
_08079434:	.4byte 0x03006EAC

_08079438:
	cmp		r1, #0x1
	bne		_08079454
	add		r1, r6, #0x0
	add		r1, #0x66
	mov		r0, #0x31
	strb	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x4
	strh	r0, [r1, #0x0]
	mov		r1, r8
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	b		_08079622
_08079454:
	add		r1, r6, #0x0
	add		r1, #0x66
	mov		r0, #0x31
	strb	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x68
	mov		r2, r9
	strh	r2, [r0, #0x0]
	mov		r3, r8
	ldrb	r0, [r3, #0x0]
	mov		r0, #0xf0
	strb	r0, [r3, #0x0]
	b		_08079622
_0807946e:
	ldr		r3, [r7, #0x74]
	ldr		r4, _080794ac
	ldr		r2, [r4, #0x0]
	cmp		r3, r2
	bcc		_080794b4
	ldr		r0, [r7, #0x70]
	mov		r3, #0xf2
	lsl		r3, r3, #0x1
	add		r1, r7, r3
	ldr		r1, [r1, #0x0]
	add		r1, #0x1
	bl		sub_0807c304
	ldr		r0, [r7, #0x70]
	ldr		r2, [r4, #0x0]
	add		r0, r0, r2
	str		r0, [r7, #0x70]
	ldr		r0, [r7, #0x74]
	sub		r0, r0, r2
	str		r0, [r7, #0x74]
	ldrh	r1, [r7, #0x2]
	ldr		r0, _080794b0
	and		r0, r1
	ldrh	r1, [r7, #0x2]
	strh	r0, [r7, #0x2]
	ldr		r1, [r7, #0x78]
	ldrh	r0, [r1, #0x0]
	add		r0, r0, r2
	strh	r0, [r1, #0x0]
	b		_0807952c

.incbin "base.gba", 0x794AA, 0x2

_080794ac:	.4byte 0x0300246C
_080794b0:	.4byte 0x0000FFFB

_080794b4:
	ldr		r0, [r7, #0x70]
	mov		r1, #0xf2
	lsl		r1, r1, #0x1
	add		r4, r7, r1
	ldr		r1, [r4, #0x0]
	add		r1, #0x1
	add		r2, r3, #0x0
	bl		sub_0807c304
	ldr		r2, _08079518
	ldr		r1, [r2, #0x0]
	ldr		r0, [r7, #0x74]
	sub		r1, r1, r0
	ldr		r0, _0807951c
	add		r3, r7, r0
	mov		r6, #0x0
	mov		r5, #0x0
	strh	r1, [r3, #0x0]
	ldr		r1, _08079520
	add		r0, r7, r1
	ldr		r2, [r7, #0x74]
	add		r2, #0x1
	ldr		r1, [r4, #0x0]
	add		r1, r1, r2
	ldrh	r2, [r3, #0x0]
	bl		sub_0807c304
	ldr		r2, [r7, #0x78]
	ldr		r1, [r7, #0x74]
	ldrh	r0, [r2, #0x0]
	add		r0, r0, r1
	strh	r0, [r2, #0x0]
	str		r5, [r7, #0x74]
	ldrh	r0, [r7, #0x2]
	mov		r1, #0x4
	orr		r0, r1
	ldrh	r1, [r7, #0x2]
	orr		r0, r6
	strh	r0, [r7, #0x2]
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	ldrh	r0, [r7, #0x2]
	mov		r1, #0x1
	orr		r0, r1
	ldrh	r1, [r7, #0x2]
	orr		r0, r6
	strh	r0, [r7, #0x2]
	b		_08079622

_08079518:	.4byte 0x0300246C
_0807951c:	.4byte 0x000006FA
_08079520:	.4byte 0x0000047D

_08079524:
	ldr		r0, [r6, #0x40]
	ldr		r1, _08079550
	and		r0, r1
	str		r0, [r6, #0x40]
_0807952c:
	ldr		r0, _08079554
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x4
	ble		_0807955c
	ldr		r4, _08079558
	mov		r3, #0xf2
	lsl		r3, r3, #0x1
	add		r2, r4, r3
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrh	r1, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	sub		r0, #0x5
	mov		r1, #0x5
	b		_0807956c

.incbin "base.gba", 0x7954E, 0x2

_08079550:	.4byte 0xFFFF7FFF
_08079554:	.4byte 0x0300246C
_08079558:	.4byte 0x03006E20

_0807955c:
	cmp		r1, #0x0
	beq		_08079588
	ldr		r4, _08079584
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
_0807956c:
	bl		sub_08075688
	bl		sub_080756e8
	cmp		r0, #0x1
	bne		_08079588
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0x64
	strb	r1, [r0, #0x0]
	b		_08079622

_08079584:	.4byte 0x03006E20

_08079588:
	ldr		r0, _080795a4
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r3, _080795a8
	add		r1, r0, r3
	str		r1, [r0, #0x4]
	ldr		r4, _080795ac
	add		r1, r0, r4
	ldrb	r3, [r1, #0x0]
_0807959a:
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08073020
	b		_08079622

_080795a4:	.4byte 0x03007000
_080795a8:	.4byte 0xFFFFFEF4
_080795ac:	.4byte 0xFFFFFE83

_080795b0:
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_08079622
_080795ba:
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r2, r9
	strh	r2, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	sub		r1, #0x71
	ldrb	r1, [r1, #0x0]
	bl		sub_080738f8
	mov		r3, r8
	ldrb	r0, [r3, #0x0]
	add		r0, #0x1
	ldrb	r1, [r3, #0x0]
	strb	r0, [r3, #0x0]
	b		_08079622
_080795de:
	add		r1, r6, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r6, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r6, #0x2]
	mov		r4, #0x0
	strh	r0, [r6, #0x2]
	ldrh	r0, [r6, #0x2]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r6, #0x2]
	orr		r0, r4
	strh	r0, [r6, #0x2]
	add		r0, r6, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	add		r0, r6, #0x0
	add		r0, #0xcc
	strb	r4, [r0, #0x0]
_08079622:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x79630, 0x5C
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r4, _080796c4
	add		r0, r4, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_080796da
	add		r0, r4, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x15
	bne		_080796c8
	add		r2, r4, #0x0
	add		r2, #0x66
	mov		r1, #0x0
	mov		r0, #0x24
	strb	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	b		_080796da

_080796c4:	.4byte 0x03006E20

_080796c8:
	cmp		r0, #0x24
	beq		_080796da
	bl		sub_08074500
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xf1
	strb	r1, [r0, #0x0]
_080796da:
	bl		sub_080728a0
	mov		r1, #0x40
	and		r1, r0
	lsl		r1, r1, #0x10
	lsr		r5, r1, #0x10
	cmp		r5, #0x0
	beq		_0807972c
	ldr		r3, _08079728
	add		r1, r3, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r3, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r3, #0x2]
	mov		r2, #0x0
	strh	r0, [r3, #0x2]
	ldrh	r0, [r3, #0x2]
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r1, r4, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x2]
	orr		r0, r2
	strh	r0, [r3, #0x2]
	add		r0, r3, #0x0
	add		r0, #0x63
	strb	r2, [r0, #0x0]
	add		r0, #0x69
	strb	r2, [r0, #0x0]
	mov		r0, #0x31
	mov		r1, #0x0
	bl		sub_080753ec
	b		_0807981a

.incbin "base.gba", 0x79726, 0x2

_08079728:	.4byte 0x03006E20

_0807972c:
	ldr		r6, _08079748
	add		r7, r6, #0x0
	add		r7, #0x62
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x2
	beq		_0807981a
	cmp		r0, #0x2
	bgt		_0807974c
	cmp		r0, #0x0
	beq		_08079756
	cmp		r0, #0x1
	beq		_0807978a
	b		_08079888

.incbin "base.gba", 0x79746, 0x2

_08079748:	.4byte 0x03006E20

_0807974c:
	cmp		r0, #0xf0
	beq		_08079824
	cmp		r0, #0xf1
	beq		_08079844
	b		_08079888
_08079756:
	bl		sub_0807570c
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r4, r6, r0
	strh	r5, [r4, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	mov		r1, #0xdc
	lsl		r1, r1, #0x2
	add		r5, r6, r1
	add		r0, r5, #0x0
	bl		sub_0807c054
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r6, #0x0
	add		r0, #0x63
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08073020
	b		_0807983a
_0807978a:
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r4, r6, r1
	ldrh	r1, [r4, #0x0]
	sub		r1, #0x1
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08075730
	ldr		r2, _080797d4
	add		r2, r2, r6
	mov		r8, r2
	ldr		r1, _080797d8
	add		r0, r6, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, r8
	bl		sub_0807c594
	cmp		r0, #0x0
	bne		_080797dc
	strh	r5, [r4, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	sub		r0, #0x71
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08073020
	b		_08079888

_080797d4:	.4byte 0x0000047D
_080797d8:	.4byte 0x000006FA

_080797dc:
	mov		r0, r8
	bl		sub_08078664
	add		r1, r0, #0x0
	ldr		r0, _08079800
	str		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0807983a
	cmp		r1, #0x1
	bne		_08079804
	add		r1, r6, #0x0
	add		r1, #0x66
	mov		r0, #0x31
	strb	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x4
	strh	r0, [r1, #0x0]
	b		_08079812

_08079800:	.4byte 0x03002474

_08079804:
	add		r1, r6, #0x0
	add		r1, #0x66
	mov		r0, #0x31
	strb	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x68
	strh	r5, [r0, #0x0]
_08079812:
	ldrb	r0, [r7, #0x0]
	mov		r0, #0xf0
	strb	r0, [r7, #0x0]
	b		_08079888
_0807981a:
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_08079888
_08079824:
	mov		r2, #0xf0
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	strh	r5, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	sub		r1, #0x71
	ldrb	r1, [r1, #0x0]
	bl		sub_080738f8
_0807983a:
	ldrb	r0, [r7, #0x0]
	add		r0, #0x1
	ldrb	r1, [r7, #0x0]
	strb	r0, [r7, #0x0]
	b		_08079888
_08079844:
	add		r1, r6, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r6, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r6, #0x2]
	mov		r4, #0x0
	strh	r0, [r6, #0x2]
	ldrh	r0, [r6, #0x2]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r6, #0x2]
	orr		r0, r4
	strh	r0, [r6, #0x2]
	add		r0, r6, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	add		r0, r6, #0x0
	add		r0, #0xcc
	strb	r4, [r0, #0x0]
_08079888:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x79892, 0x172
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	ldr		r4, _08079a40
	add		r0, r4, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_08079a56
	add		r0, r4, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x15
	bne		_08079a44
	add		r2, r4, #0x0
	add		r2, #0x66
	mov		r1, #0x0
	mov		r0, #0x24
	strb	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	b		_08079a56

_08079a40:	.4byte 0x03006E20

_08079a44:
	cmp		r0, #0x24
	beq		_08079a56
	bl		sub_08074500
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xf1
	strb	r1, [r0, #0x0]
_08079a56:
	bl		sub_080728a0
	mov		r1, #0x40
	and		r1, r0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r9, r1
	cmp		r1, #0x0
	beq		_08079aa8
	ldr		r3, _08079aa4
	add		r1, r3, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r3, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r3, #0x2]
	mov		r2, #0x0
	strh	r0, [r3, #0x2]
	ldrh	r0, [r3, #0x2]
	mov		r4, #0x80
	lsl		r4, r4, #0x1
	add		r1, r4, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x2]
	orr		r0, r2
	strh	r0, [r3, #0x2]
	add		r0, r3, #0x0
	add		r0, #0x63
	strb	r2, [r0, #0x0]
	add		r0, #0x69
	strb	r2, [r0, #0x0]
	mov		r0, #0x31
	mov		r1, #0x0
	bl		sub_080753ec
	b		_08079d5c

_08079aa4:	.4byte 0x03006E20

_08079aa8:
	ldr		r6, _08079acc
	mov		r0, #0x62
	add		r0, r0, r6
	mov		r8, r0
	ldrb	r0, [r0, #0x0]
	add		r4, r0, #0x0
	add		r7, r6, #0x0
	cmp		r4, #0x64
	bne		_08079abc
	b		_08079d5c
_08079abc:
	cmp		r4, #0x64
	bgt		_08079ad0
	cmp		r4, #0x0
	beq		_08079ade
	cmp		r4, #0x1
	beq		_08079b1e
	b		_08079dce

.incbin "base.gba", 0x79ACA, 0x2

_08079acc:	.4byte 0x03006E20

_08079ad0:
	cmp		r4, #0xf0
	bne		_08079ad6
	b		_08079d66
_08079ad6:
	cmp		r4, #0xf1
	bne		_08079adc
	b		_08079d8a
_08079adc:
	b		_08079dce
_08079ade:
	bl		sub_0807570c
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r4, r6, r1
	mov		r2, r9
	strh	r2, [r4, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	mov		r3, #0xdc
	lsl		r3, r3, #0x2
	add		r5, r6, r3
	add		r0, r5, #0x0
	bl		sub_0807c054
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r6, #0x0
	add		r0, #0x63
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08073020
	mov		r4, r8
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	b		_08079dce
_08079b1e:
	ldr		r2, _08079b8c
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r0, r0, r6
	mov		r10, r0
	ldrh	r0, [r0, #0x0]
	sub		r3, r0, #0x1
	str		r3, [r2, #0x0]
	ldr		r0, [r6, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08079b3c
	b		_08079cd0
_08079b3c:
	ldr		r0, [r6, #0x70]
	cmp		r0, #0x0
	bne		_08079b44
	b		_08079cd8
_08079b44:
	cmp		r3, #0x1
	bgt		_08079b4a
	b		_08079cd8
_08079b4a:
	ldr		r1, _08079b90
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08079c1a
	ldr		r7, _08079b94
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r5, r6, r2
	ldr		r0, [r5, #0x0]
	add		r0, #0x1
	add		r1, r3, #0x0
	bl		sub_0807c138
	add		r1, r0, #0x0
	str		r1, [r7, #0x0]
	cmp		r1, #0x0
	bne		_08079b98
	ldr		r0, [r5, #0x0]
	add		r0, #0x1
	ldr		r3, _08079b8c
	ldrh	r1, [r3, #0x0]
	bl		sub_08075730
	mov		r0, r9
	mov		r4, r10
	strh	r0, [r4, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xd4
	str		r0, [r4, #0x4]
	sub		r0, #0x71
	ldrb	r3, [r0, #0x0]
	mov		r0, r10
	b		_08079d46

_08079b8c:	.4byte 0x0300247C
_08079b90:	.4byte 0x03006EAC
_08079b94:	.4byte 0x03002478

_08079b98:
	ldr		r2, [r5, #0x0]
	add		r0, r2, #0x1
	sub		r1, #0x1
	sub		r1, r1, r2
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	bl		sub_08075730
	ldr		r1, _08079bd4
	add		r0, r6, r1
	bl		sub_08078664
	add		r1, r0, #0x0
	ldr		r0, _08079bd8
	str		r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_08079be4
	ldr		r2, [r7, #0x0]
	sub		r2, #0x1
	ldr		r1, [r5, #0x0]
	sub		r1, r2, r1
	ldr		r3, _08079bdc
	ldr		r0, [r3, #0x0]
	sub		r0, r0, r1
	str		r0, [r3, #0x0]
	str		r2, [r5, #0x0]
	ldr		r0, _08079be0
	str		r4, [r0, #0x0]
	add		r7, r6, #0x0
	b		_08079c1a

_08079bd4:	.4byte 0x0000047D
_08079bd8:	.4byte 0x03002480
_08079bdc:	.4byte 0x0300247C
_08079be0:	.4byte 0x03006EAC

_08079be4:
	cmp		r1, #0x1
	bne		_08079c00
	add		r1, r6, #0x0
	add		r1, #0x66
	mov		r0, #0x31
	strb	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0x4
	strh	r0, [r1, #0x0]
	mov		r1, r8
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	b		_08079dce
_08079c00:
	add		r1, r6, #0x0
	add		r1, #0x66
	mov		r0, #0x31
	strb	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x68
	mov		r2, r9
	strh	r2, [r0, #0x0]
	mov		r3, r8
	ldrb	r0, [r3, #0x0]
	mov		r0, #0xf0
	strb	r0, [r3, #0x0]
	b		_08079dce
_08079c1a:
	ldr		r3, [r7, #0x74]
	ldr		r4, _08079c58
	ldr		r2, [r4, #0x0]
	cmp		r3, r2
	bcc		_08079c60
	ldr		r0, [r7, #0x70]
	mov		r3, #0xf2
	lsl		r3, r3, #0x1
	add		r1, r7, r3
	ldr		r1, [r1, #0x0]
	add		r1, #0x1
	bl		sub_0807c304
	ldr		r0, [r7, #0x70]
	ldr		r2, [r4, #0x0]
	add		r0, r0, r2
	str		r0, [r7, #0x70]
	ldr		r0, [r7, #0x74]
	sub		r0, r0, r2
	str		r0, [r7, #0x74]
	ldrh	r1, [r7, #0x2]
	ldr		r0, _08079c5c
	and		r0, r1
	ldrh	r1, [r7, #0x2]
	strh	r0, [r7, #0x2]
	ldr		r1, [r7, #0x78]
	ldrh	r0, [r1, #0x0]
	add		r0, r0, r2
	strh	r0, [r1, #0x0]
	b		_08079cd8

.incbin "base.gba", 0x79C56, 0x2

_08079c58:	.4byte 0x0300247C
_08079c5c:	.4byte 0x0000FFFB

_08079c60:
	ldr		r0, [r7, #0x70]
	mov		r1, #0xf2
	lsl		r1, r1, #0x1
	add		r4, r7, r1
	ldr		r1, [r4, #0x0]
	add		r1, #0x1
	add		r2, r3, #0x0
	bl		sub_0807c304
	ldr		r2, _08079cc4
	ldr		r1, [r2, #0x0]
	ldr		r0, [r7, #0x74]
	sub		r1, r1, r0
	ldr		r0, _08079cc8
	add		r3, r7, r0
	mov		r6, #0x0
	mov		r5, #0x0
	strh	r1, [r3, #0x0]
	ldr		r1, _08079ccc
	add		r0, r7, r1
	ldr		r2, [r7, #0x74]
	add		r2, #0x1
	ldr		r1, [r4, #0x0]
	add		r1, r1, r2
	ldrh	r2, [r3, #0x0]
	bl		sub_0807c304
	ldr		r2, [r7, #0x78]
	ldr		r1, [r7, #0x74]
	ldrh	r0, [r2, #0x0]
	add		r0, r0, r1
	strh	r0, [r2, #0x0]
	str		r5, [r7, #0x74]
	ldrh	r0, [r7, #0x2]
	mov		r1, #0x4
	orr		r0, r1
	ldrh	r1, [r7, #0x2]
	orr		r0, r6
	strh	r0, [r7, #0x2]
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	ldrh	r0, [r7, #0x2]
	mov		r1, #0x1
	orr		r0, r1
	ldrh	r1, [r7, #0x2]
	orr		r0, r6
	strh	r0, [r7, #0x2]
	b		_08079dce

_08079cc4:	.4byte 0x0300247C
_08079cc8:	.4byte 0x000006FA
_08079ccc:	.4byte 0x0000047D

_08079cd0:
	ldr		r0, [r6, #0x40]
	ldr		r1, _08079cfc
	and		r0, r1
	str		r0, [r6, #0x40]
_08079cd8:
	ldr		r0, _08079d00
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x4
	ble		_08079d08
	ldr		r4, _08079d04
	mov		r3, #0xf2
	lsl		r3, r3, #0x1
	add		r2, r4, r3
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrh	r1, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	sub		r0, #0x5
	mov		r1, #0x5
	b		_08079d18

.incbin "base.gba", 0x79CFA, 0x2

_08079cfc:	.4byte 0xFFFF7FFF
_08079d00:	.4byte 0x0300247C
_08079d04:	.4byte 0x03006E20

_08079d08:
	cmp		r1, #0x0
	beq		_08079d34
	ldr		r4, _08079d30
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
_08079d18:
	bl		sub_08075688
	bl		sub_080756e8
	cmp		r0, #0x1
	bne		_08079d34
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0x64
	strb	r1, [r0, #0x0]
	b		_08079dce

_08079d30:	.4byte 0x03006E20

_08079d34:
	ldr		r0, _08079d50
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r3, _08079d54
	add		r1, r0, r3
	str		r1, [r0, #0x4]
	ldr		r4, _08079d58
	add		r1, r0, r4
	ldrb	r3, [r1, #0x0]
_08079d46:
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08073020
	b		_08079dce

_08079d50:	.4byte 0x03007000
_08079d54:	.4byte 0xFFFFFEF4
_08079d58:	.4byte 0xFFFFFE83

_08079d5c:
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_08079dce
_08079d66:
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r2, r9
	strh	r2, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	sub		r1, #0x71
	ldrb	r1, [r1, #0x0]
	bl		sub_080738f8
	mov		r3, r8
	ldrb	r0, [r3, #0x0]
	add		r0, #0x1
	ldrb	r1, [r3, #0x0]
	strb	r0, [r3, #0x0]
	b		_08079dce
_08079d8a:
	add		r1, r6, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r6, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r6, #0x2]
	mov		r4, #0x0
	strh	r0, [r6, #0x2]
	ldrh	r0, [r6, #0x2]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r6, #0x2]
	orr		r0, r4
	strh	r0, [r6, #0x2]
	add		r0, r6, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	add		r0, r6, #0x0
	add		r0, #0xcc
	strb	r4, [r0, #0x0]
_08079dce:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08078eac

	thumb_func_start sub_08079ddc
sub_08079ddc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r7, r2, #0x0
	mov		r9, r3
	ldr		r1, _08079e24
	add		r0, r4, #0x0
	mov		r2, #0x7
	bl		sub_0807c2a4
	cmp		r0, #0x0
	bne		_08079dfc
	add		r4, #0x7
_08079dfc:
	add		r0, r4, #0x0
	mov		r1, #0x2f
	bl		sub_0807c180
	add		r5, r0, #0x0
	ldr		r0, _08079e28
	str		r5, [r0, #0x0]
	cmp		r5, #0x0
	bne		_08079e38
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_0807c180
	sub		r0, r0, r4
	cmp		r0, #0xff
	ble		_08079e2c
	strb	r5, [r6, #0x0]
	mov		r0, #0x0
	b		_08079f2a

.incbin "base.gba", 0x79E22, 0x2

_08079e24:	.4byte 0x0820bde8 @ "http://"
_08079e28:	.4byte 0x03002484

_08079e2c:
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_0807c088
_08079e34:
	strb	r5, [r7, #0x0]
	b		_08079f26
_08079e38:
	ldr		r0, _08079e4c
	mov		r8, r0
	sub		r2, r5, r4
	str		r2, [r0, #0x0]
	cmp		r2, #0xff
	ble		_08079e50
	mov		r0, #0x0
	strb	r0, [r6, #0x0]
	mov		r0, #0x0
	b		_08079f2a

_08079e4c:	.4byte 0x0300248C

_08079e50:
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_0807c304
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	add		r0, r6, r0
	mov		r6, #0x0
	strb	r6, [r0, #0x0]
	ldr		r1, _08079e94
	add		r0, r4, #0x0
	mov		r2, #0x25
	bl		sub_0807c2a4
	add		r5, r0, #0x0
	cmp		r5, #0x0
	bne		_08079e9c
	mov		r6, #0x1
	mov		r0, r9
	strb	r6, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x2f
	bl		sub_0807c1b0
	ldr		r2, _08079e98
	add		r1, r0, #0x1
	str		r1, [r2, #0x0]
	ldrb	r0, [r0, #0x1]
	sub		r0, #0x30
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x9
	bls		_08079f24
	b		_08079e34

_08079e94:	.4byte 0x0820bd4c @ "gameboy.datacenter.ne.jp/cgb/download"
_08079e98:	.4byte 0x03002488

_08079e9c:
	ldr		r1, _08079ed0
	add		r0, r4, #0x0
	mov		r2, #0x23
	bl		sub_0807c2a4
	add		r5, r0, #0x0
	cmp		r5, #0x0
	bne		_08079ed8
	mov		r6, #0x2
	mov		r1, r9
	strb	r6, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x2f
	bl		sub_0807c1b0
	ldr		r2, _08079ed4
	add		r1, r0, #0x1
	str		r1, [r2, #0x0]
	ldrb	r0, [r0, #0x1]
	sub		r0, #0x30
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x9
	bls		_08079f24
	b		_08079e34

.incbin "base.gba", 0x79ECE, 0x2

_08079ed0:	.4byte 0x0820bd74 @ "gameboy.datacenter.ne.jp/cgb/upload"
_08079ed4:	.4byte 0x03002488

_08079ed8:
	ldr		r1, _08079ef0
	add		r0, r4, #0x0
	mov		r2, #0x24
	bl		sub_0807c2a4
	cmp		r0, #0x0
	bne		_08079ef4
	mov		r0, #0x3
	mov		r1, r9
	strb	r0, [r1, #0x0]
	strb	r0, [r7, #0x0]
	b		_08079f26

_08079ef0:	.4byte 0x0820bd98 @ "gameboy.datacenter.ne.jp/cgb/utility"

_08079ef4:
	ldr		r1, _08079f38
	add		r0, r4, #0x0
	mov		r2, #0x24
	bl		sub_0807c2a4
	add		r5, r0, #0x0
	cmp		r5, #0x0
	bne		_08079f24
	mov		r6, #0x4
	mov		r0, r9
	strb	r6, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x2f
	bl		sub_0807c1b0
	ldr		r2, _08079f3c
	add		r1, r0, #0x1
	str		r1, [r2, #0x0]
	ldrb	r0, [r0, #0x1]
	sub		r0, #0x30
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x9
	bhi		_08079e34
_08079f24:
	strb	r6, [r7, #0x0]
_08079f26:
	ldr		r0, _08079f40
	ldr		r0, [r0, #0x0]
_08079f2a:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x79F36, 0x2

_08079f38:	.4byte 0x0820bdc0 @ "gameboy.datacenter.ne.jp/cgb/ranking"
_08079f3c:	.4byte 0x03002488
_08079f40:	.4byte 0x03002484
	thumb_func_end sub_08079ddc

	thumb_func_start sub_08079f44
sub_08079f44:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x1c
	ldr		r5, [sp, #0x0+0x30]
	ldr		r6, [sp, #0x4+0x30]
	ldr		r7, [sp, #0x8+0x30]
	ldr		r4, [sp, #0xc+0x30]
	str		r4, [sp, #0x14]
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	mov		r4, #0x0
	str		r4, [sp, #0x0]
	str		r3, [sp, #0x4]
	str		r5, [sp, #0x8]
	str		r6, [sp, #0xC]
	str		r7, [sp, #0x10]
	mov		r3, #0x16
	str		r3, [sp, #0x18]
	mov		r3, #0x0
	bl		sub_08079fb0
	add		sp, #0x1c
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08079f44

	thumb_func_start sub_08079f78
sub_08079f78:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x1c
	ldr		r4, [sp, #0x0+0x30]
	ldr		r6, [sp, #0x4+0x30]
	ldr		r5, [sp, #0x8+0x30]
	ldr		r7, [sp, #0xc+0x30]
	str		r7, [sp, #0xC]
	ldr		r7, [sp, #0x10+0x30]
	str		r7, [sp, #0x10]
	ldr		r7, [sp, #0x14+0x30]
	str		r7, [sp, #0x14]
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	str		r4, [sp, #0x0]
	str		r6, [sp, #0x4]
	str		r5, [sp, #0x8]
	mov		r4, #0x17
	str		r4, [sp, #0x18]
	bl		sub_08079fb0
	add		sp, #0x1c
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08079f78

	thumb_func_start sub_08079fb0
sub_08079fb0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	str		r0, [sp, #0x4]
	str		r1, [sp, #0x8]
	str		r3, [sp, #0xC]
	ldr		r1, [sp, #0x0+0x34]
	ldr		r7, [sp, #0x4+0x34]
	ldr		r3, [sp, #0x8+0x34]
	ldr		r0, [sp, #0xc+0x34]
	mov		r9, r0
	ldr		r0, [sp, #0x4c]
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	mov		r10, r2
	lsl		r1, r1, #0x10
	lsr		r5, r1, #0x10
	lsl		r3, r3, #0x10
	lsr		r6, r3, #0x10
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	mov		r8, r0
	mov		r1, r8
	str		r1, [sp, #0x10]
	bl		sub_08075358
	mov		r0, r8
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_08079ffa
	bl		sub_0807537c
	b		_0807a308
_08079ffa:
	ldr		r4, _0807a050
	mov		r2, r8
	str		r2, [r4, #0x70]
	str		r7, [r4, #0x78]
	str		r6, [r4, #0x7c]
	mov		r0, r9
	ldr		r1, _0807a054
	str		r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x84
	ldr		r2, [sp, #0xC]
	str		r2, [r0, #0x0]
	add		r0, #0x4
	str		r5, [r0, #0x0]
	add		r0, #0x2c
	ldr		r1, [sp, #0x10+0x34]
	str		r1, [r0, #0x0]
	add		r0, #0x4
	ldr		r2, [sp, #0x48]
	str		r2, [r0, #0x0]
	sub		r0, #0x1c
	mov		r1, r10
	str		r1, [r0, #0x0]
	add		r0, #0xc
	ldr		r2, [sp, #0x8]
	str		r2, [r0, #0x0]
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x4
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	add		r5, r4, #0x0
	cmp		r0, #0x0
	beq		_0807a040
	b		_0807a216
_0807a040:
	cmp		r6, #0x0
	bne		_0807a058
	str		r6, [r4, #0x78]
	mov		r0, r9
	cmp		r0, #0x0
	beq		_0807a062
	strh	r6, [r0, #0x0]
	b		_0807a062

_0807a050:	.4byte 0x03006E20
_0807a054:	.4byte 0x03006EA0

_0807a058:
	cmp		r7, #0x0
	bne		_0807a05e
	b		_0807a254
_0807a05e:
	mov		r1, r9
	strh	r0, [r1, #0x0]
_0807a062:
	add		r0, r5, #0x0
	add		r0, #0x9c
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807a07a
	add		r0, r5, #0x0
	add		r0, #0xa8
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0807a07a
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
_0807a07a:
	ldr		r0, [sp, #0x4]
	bl		sub_0807c054
	add		r1, r0, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	ble		_0807a08c
	b		_0807a254
_0807a08c:
	cmp		r1, #0x0
	bne		_0807a092
	b		_0807a254
_0807a092:
	mov		r4, sp
	add		r4, #0x1
	mov		r0, #0x0
	strb	r0, [r4, #0x0]
	ldr		r5, _0807a0d4
	add		r0, r5, #0x0
	ldr		r1, [sp, #0x4]
	mov		r2, sp
	add		r3, r4, #0x0
	bl		sub_08079ddc
	add		r7, r0, #0x0
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_0807a0b2
	b		_0807a254
_0807a0b2:
	ldr		r2, _0807a0d8
	add		r1, r5, r2
	mov		r0, sp
	ldrb	r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0807a0e4
	ldr		r1, _0807a0dc
	add		r0, r5, r1
	ldr		r1, _0807a0e0
	str		r1, [r0, #0x0]
	add		r2, #0x18
	add		r0, r5, r2
	str		r1, [r0, #0x0]
	b		_0807a100

.incbin "base.gba", 0x7A0D2, 0x2

_0807a0d4:	.4byte 0x03007190
_0807a0d8:	.4byte 0xFFFFFD30
_0807a0dc:	.4byte 0xFFFFFD44
_0807a0e0:	.4byte 0x0820bec8

_0807a0e4:
	ldr		r0, [sp, #0x10+0x34]
	bl		sub_0807c054
	add		r1, r0, #0x0
	cmp		r1, #0x10
	ble		_0807a0f2
	b		_0807a254
_0807a0f2:
	ldr		r0, [sp, #0x48]
	bl		sub_0807c054
	add		r1, r0, #0x0
	cmp		r1, #0x10
	ble		_0807a100
	b		_0807a254
_0807a100:
	ldrb	r4, [r4, #0x0]
	ldr		r5, _0807a154
	cmp		r4, #0x1
	bne		_0807a110
	ldr		r0, [r5, #0x70]
	cmp		r0, #0x17
	bne		_0807a110
	b		_0807a254
_0807a110:
	cmp		r4, #0x2
	bne		_0807a11c
	ldr		r0, [r5, #0x70]
	cmp		r0, #0x16
	bne		_0807a11c
	b		_0807a254
_0807a11c:
	cmp		r4, #0x3
	bne		_0807a128
	ldr		r0, [r5, #0x70]
	cmp		r0, #0x17
	bne		_0807a128
	b		_0807a254
_0807a128:
	cmp		r4, #0x4
	bne		_0807a134
	ldr		r0, [r5, #0x70]
	cmp		r0, #0x16
	bne		_0807a134
	b		_0807a254
_0807a134:
	mov		r1, #0xdb
	lsl		r1, r1, #0x2
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	mov		r6, #0x0
	cmp		r0, #0x0
	bne		_0807a144
	mov		r6, #0x1
_0807a144:
	cmp		r6, #0x1
	bne		_0807a168
	cmp		r7, #0x0
	beq		_0807a158
	add		r0, r5, #0x0
	add		r0, #0x8c
	str		r7, [r0, #0x0]
	b		_0807a170

_0807a154:	.4byte 0x03006E20

_0807a158:
	add		r1, r5, #0x0
	add		r1, #0x8c
	ldr		r0, _0807a164
	str		r0, [r1, #0x0]
	b		_0807a170

.incbin "base.gba", 0x7A162, 0x2

_0807a164:	.4byte 0x0820bec4

_0807a168:
	add		r0, r5, #0x0
	add		r0, #0x8c
	ldr		r2, [sp, #0x4]
	str		r2, [r0, #0x0]
_0807a170:
	add		r4, r5, #0x0
	add		r4, #0x8c
	ldr		r0, [r4, #0x0]
	bl		sub_0807c054
	add		r1, r5, #0x0
	add		r1, #0x90
	str		r0, [r1, #0x0]
	add		r2, r5, #0x0
	add		r2, #0x94
	ldr		r1, [r4, #0x0]
	str		r1, [r2, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x98
	str		r0, [r1, #0x0]
	mov		r0, #0x7
	str		r0, [r5, #0x74]
	bl		sub_0807570c
	ldrh	r1, [r5, #0x2]
	ldr		r0, _0807a1f8
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	mov		r3, #0x0
	mov		r2, #0x0
	strh	r0, [r5, #0x2]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807a1fc
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r1, _0807a200
	add		r0, r5, r1
	strh	r2, [r0, #0x0]
	sub		r1, #0x2
	add		r0, r5, r1
	strh	r2, [r0, #0x0]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807a204
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r1, _0807a208
	add		r0, r5, r1
	strb	r3, [r0, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xa4
	str		r2, [r0, #0x0]
	add		r0, #0x18
	str		r2, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x6
	strb	r0, [r1, #0x0]
	cmp		r6, #0x0
	bne		_0807a20c
	add		r0, r5, #0x0
	add		r0, #0x6a
	mov		r2, #0xdb
	lsl		r2, r2, #0x2
	add		r1, r5, r2
	mov		r2, #0x4
	bl		sub_0807c304
	ldr		r0, [sp, #0x10]
	mov		r1, #0x2
	bl		sub_0807539c
	b		_0807a304

_0807a1f8:	.4byte 0x0000FFFB
_0807a1fc:	.4byte 0xFFFF7FFF
_0807a200:	.4byte 0x00000704
_0807a204:	.4byte 0xfffeffff
_0807a208:	.4byte 0x00000706

_0807a20c:
	ldr		r0, [sp, #0x10]
	mov		r1, #0x0
	bl		sub_0807539c
	b		_0807a304
_0807a216:
	ldrh	r1, [r4, #0x2]
	ldr		r0, _0807a248
	and		r0, r1
	ldrh	r1, [r4, #0x2]
	mov		r1, #0x0
	mov		r10, r1
	strh	r0, [r4, #0x2]
	ldr		r0, [r4, #0x40]
	ldr		r1, _0807a24c
	and		r0, r1
	str		r0, [r4, #0x40]
	cmp		r6, #0x0
	bne		_0807a250
	str		r6, [r4, #0x78]
	mov		r2, r9
	cmp		r2, #0x0
	beq		_0807a23a
	strh	r6, [r2, #0x0]
_0807a23a:
	ldr		r0, [r4, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	orr		r0, r1
	str		r0, [r4, #0x40]
	mov		r0, r8
	b		_0807a2ac

_0807a248:	.4byte 0x0000FFFB
_0807a24c:	.4byte 0xFFFF7FFF

_0807a250:
	cmp		r7, #0x0
	bne		_0807a262
_0807a254:
	mov		r0, #0x20
	mov		r1, #0x0
	bl		sub_080753ec
	bl		sub_0807537c
	b		_0807a308
_0807a262:
	mov		r1, r10
	mov		r0, r9
	strh	r1, [r0, #0x0]
	ldr		r2, _0807a2b4
	add		r5, r4, r2
	ldrh	r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_0807a2c0
	cmp		r0, r6
	bhi		_0807a2c0
	ldr		r0, _0807a2b8
	add		r1, r4, r0
	ldrh	r2, [r5, #0x0]
	add		r0, r7, #0x0
	bl		sub_0807c304
	ldrh	r1, [r5, #0x0]
	add		r7, r7, r1
	sub		r0, r6, r1
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	mov		r2, r9
	ldrh	r0, [r2, #0x0]
	add		r0, r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, r10
	strh	r0, [r5, #0x0]
	str		r7, [r4, #0x78]
	str		r6, [r4, #0x7c]
	ldr		r1, _0807a2bc
	str		r2, [r1, #0x0]
	ldr		r0, [r4, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	orr		r0, r1
	str		r0, [r4, #0x40]
	ldr		r0, [sp, #0x10]
_0807a2ac:
	mov		r1, #0x6e
	bl		sub_0807539c
	b		_0807a304

_0807a2b4:	.4byte 0x000006FA
_0807a2b8:	.4byte 0x0000047D
_0807a2bc:	.4byte 0x03006EA0

_0807a2c0:
	ldr		r4, _0807a2f8
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	add		r2, r6, #0x0
	bl		sub_0807c304
	ldr		r2, _0807a2fc
	add		r5, r4, r2
	ldr		r0, _0807a300
	add		r2, r4, r0
	ldrh	r0, [r2, #0x0]
	sub		r0, r0, r6
	strh	r0, [r2, #0x0]
	add		r1, r6, r4
	ldrh	r2, [r2, #0x0]
	add		r0, r4, #0x0
	bl		sub_0807c304
	mov		r1, r9
	strh	r6, [r1, #0x0]
	ldrh	r1, [r5, #0x2]
	mov		r0, #0x4
	ldrh	r2, [r5, #0x2]
	orr		r0, r1
	strh	r0, [r5, #0x2]
	bl		sub_0807537c
	b		_0807a308

_0807a2f8:	.4byte 0x0300729D
_0807a2fc:	.4byte 0xFFFFFB83
_0807a300:	.4byte 0x0000027D

_0807a304:
	bl		sub_0807537c
_0807a308:
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08079fb0

	thumb_func_start sub_0807a318
sub_0807a318:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	bl		sub_0807c054
	ldr		r1, _0807a340
	str		r0, [r1, #0x0]
	ldr		r2, _0807a344
	add		r4, r4, r0
	str		r4, [r2, #0x0]
	ldr		r0, _0807a348
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	sub		r0, #0x20
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x5e
	bls		_0807a34c
	mov		r0, #0x30
	strb	r0, [r4, #0x0]
	b		_0807a34e

_0807a340:	.4byte 0x03002490
_0807a344:	.4byte 0x03002494
_0807a348:	.4byte 0x080000ac

_0807a34c:
	strb	r1, [r4, #0x0]
_0807a34e:
	add		r0, r4, #0x1
	str		r0, [r2, #0x0]
	ldr		r0, _0807a374
	ldrb	r2, [r0, #0x0]
	add		r0, r2, #0x0
	sub		r0, #0x20
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x5e
	bls		_0807a37c
	ldr		r0, _0807a378
	ldr		r1, [r0, #0x0]
	mov		r2, #0x30
	strb	r2, [r1, #0x0]
	add		r1, #0x1
	str		r1, [r0, #0x0]
	add		r5, r0, #0x0
	b		_0807a388

.incbin "base.gba", 0x7A372, 0x2

_0807a374:	.4byte 0x080000ad
_0807a378:	.4byte 0x03002494

_0807a37c:
	ldr		r1, _0807a3a0
	ldr		r0, [r1, #0x0]
	strb	r2, [r0, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	add		r5, r1, #0x0
_0807a388:
	ldr		r0, _0807a3a4
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	sub		r0, #0x20
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x5e
	bls		_0807a3a8
	ldr		r0, [r5, #0x0]
	mov		r1, #0x30
	b		_0807a3aa

.incbin "base.gba", 0x7A39E, 0x2

_0807a3a0:	.4byte 0x03002494
_0807a3a4:	.4byte 0x080000ae

_0807a3a8:
	ldr		r0, [r5, #0x0]
_0807a3aa:
	strb	r1, [r0, #0x0]
	add		r0, #0x1
	str		r0, [r5, #0x0]
	ldr		r0, _0807a3c8
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	sub		r0, #0x20
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x5e
	bls		_0807a3cc
	ldr		r0, [r5, #0x0]
	mov		r1, #0x30
	b		_0807a3ce

.incbin "base.gba", 0x7A3C6, 0x2

_0807a3c8:	.4byte 0x080000af

_0807a3cc:
	ldr		r0, [r5, #0x0]
_0807a3ce:
	strb	r1, [r0, #0x0]
	add		r0, #0x1
	str		r0, [r5, #0x0]
	ldr		r1, [r5, #0x0]
	mov		r0, #0x2d
	strb	r0, [r1, #0x0]
	add		r1, #0x1
	str		r1, [r5, #0x0]
	ldr		r2, _0807a42c
	ldr		r0, _0807a430
	ldrb	r0, [r0, #0x0]
	strb	r0, [r2, #0x0]
	ldr		r4, _0807a434
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x1c
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	strb	r0, [r1, #0x0]
	add		r3, r1, #0x1
	str		r3, [r5, #0x0]
	ldrb	r2, [r2, #0x0]
	mov		r0, #0xf
	and		r0, r2
	add		r0, r0, r4
	ldrb	r0, [r0, #0x0]
	strb	r0, [r1, #0x1]
	add		r0, r3, #0x1
	str		r0, [r5, #0x0]
	mov		r4, #0xd
	strb	r4, [r3, #0x1]
	add		r1, r0, #0x1
	str		r1, [r5, #0x0]
	mov		r2, #0xa
	strb	r2, [r0, #0x1]
	add		r0, r1, #0x1
	str		r0, [r5, #0x0]
	strb	r4, [r1, #0x1]
	add		r1, r0, #0x1
	str		r1, [r5, #0x0]
	strb	r2, [r0, #0x1]
	add		r0, r1, #0x1
	str		r0, [r5, #0x0]
	mov		r0, #0x0
	strb	r0, [r1, #0x1]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0807a42c:	.4byte 0x03002498
_0807a430:	.4byte 0x080000bc
_0807a434:	.4byte 0x0820becc @ "0123456789ABCDEF"
	thumb_func_end sub_0807a318

	thumb_func_start sub_0807a438
sub_0807a438:
	ldr		r1, _0807a44c
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r2, _0807a450
	ldr		r0, [r2, #0x70]
	cmp		r0, #0x16
	beq		_0807a454
	cmp		r0, #0x17
	beq		_0807a46e
	b		_0807a4aa

_0807a44c:	.4byte 0x0300249C
_0807a450:	.4byte 0x03006E20

_0807a454:
	add		r0, r2, #0x0
	add		r0, #0xa0
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x1
	bne		_0807a4aa
	add		r0, #0x4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bls		_0807a4aa
	cmp		r0, #0x2
	bne		_0807a4aa
	str		r3, [r1, #0x0]
	b		_0807a4aa
_0807a46e:
	add		r0, r2, #0x0
	add		r0, #0xa0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_0807a488
	cmp		r0, #0x2
	bhi		_0807a482
	cmp		r0, #0x0
	beq		_0807a4a6
	b		_0807a4aa
_0807a482:
	cmp		r0, #0x4
	beq		_0807a498
	b		_0807a4aa
_0807a488:
	add		r0, r2, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bls		_0807a4aa
	cmp		r0, #0x2
	bne		_0807a4aa
	b		_0807a4a6
_0807a498:
	add		r0, r2, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807a4aa
	cmp		r0, #0x2
	bhi		_0807a4aa
_0807a4a6:
	mov		r0, #0x1
	str		r0, [r1, #0x0]
_0807a4aa:
	ldr		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x7A4AE, 0x2
	thumb_func_end sub_0807a438

	thumb_func_start sub_0807a4b0
sub_0807a4b0:
	push	{ r4, r5, lr }
	ldr		r2, _0807a4d4
	mov		r1, #0x0
	strb	r1, [r2, #0x0]
	ldr		r0, _0807a4d8
	strb	r1, [r0, #0x0]
	ldr		r4, _0807a4dc
	strb	r1, [r4, #0x0]
	ldr		r5, _0807a4e0
	strb	r1, [r5, #0x0]
	ldr		r1, _0807a4e4
	ldr		r0, [r1, #0x70]
	cmp		r0, #0x16
	beq		_0807a4e8
	cmp		r0, #0x17
	beq		_0807a522
	b		_0807a578

.incbin "base.gba", 0x7A4D2, 0x2

_0807a4d4:	.4byte 0x030024A4
_0807a4d8:	.4byte 0x030024A5
_0807a4dc:	.4byte 0x030024A6
_0807a4e0:	.4byte 0x030024A7
_0807a4e4:	.4byte 0x03006E20

_0807a4e8:
	add		r0, r1, #0x0
	add		r0, #0xa0
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x1
	beq		_0807a506
	cmp		r3, #0x1
	bcc		_0807a578
	cmp		r3, #0x3
	bne		_0807a578
	add		r0, #0x4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0807a578
_0807a502:
	strb	r0, [r4, #0x0]
	b		_0807a578
_0807a506:
	add		r0, r1, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0807a51a
	cmp		r0, #0x1
	bcc		_0807a578
	cmp		r0, #0x2
	beq		_0807a51e
	b		_0807a578
_0807a51a:
	strb	r3, [r4, #0x0]
	b		_0807a578
_0807a51e:
	strb	r3, [r5, #0x0]
	b		_0807a578
_0807a522:
	add		r0, r1, #0x0
	add		r0, #0xa0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_0807a542
	cmp		r0, #0x2
	bhi		_0807a536
	cmp		r0, #0x0
	beq		_0807a53c
	b		_0807a578
_0807a536:
	cmp		r0, #0x4
	beq		_0807a55c
	b		_0807a578
_0807a53c:
	mov		r0, #0x1
	strb	r0, [r2, #0x0]
	b		_0807a578
_0807a542:
	add		r0, r1, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0807a502
	cmp		r0, #0x1
	bcc		_0807a578
	cmp		r0, #0x2
	bne		_0807a578
	mov		r0, #0x1
	strb	r0, [r5, #0x0]
	strb	r0, [r2, #0x0]
	b		_0807a578
_0807a55c:
	add		r0, r1, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0807a570
	cmp		r0, #0x1
	bcc		_0807a578
	cmp		r0, #0x2
	beq		_0807a574
	b		_0807a578
_0807a570:
	strb	r0, [r2, #0x0]
	b		_0807a502
_0807a574:
	mov		r0, #0x1
	strb	r0, [r5, #0x0]
_0807a578:
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x1
	bne		_0807a5b4
	ldr		r4, _0807a62c
	ldr		r1, _0807a630
	add		r0, r4, #0x0
	bl		sub_0807c160
	ldr		r1, _0807a634
	add		r0, r4, #0x0
	bl		sub_0807c160
	add		r0, r4, #0x0
	bl		sub_0807c054
	add		r1, r0, #0x0
	ldr		r0, _0807a638
	str		r1, [r0, #0x0]
	ldr		r2, _0807a63c
	add		r0, r4, r2
	ldr		r0, [r0, #0x0]
	sub		r2, r4, #0x3
	add		r1, r1, r2
	mov		r2, #0xa
	bl		sub_0807c3fc
	ldr		r1, _0807a640
	add		r0, r4, #0x0
	bl		sub_0807c160
_0807a5b4:
	ldr		r0, _0807a644
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0807a5ce
	ldr		r4, _0807a62c
	ldr		r1, _0807a630
	add		r0, r4, #0x0
	bl		sub_0807c160
	ldr		r1, _0807a634
	add		r0, r4, #0x0
	bl		sub_0807c160
_0807a5ce:
	ldr		r0, _0807a648
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0807a5f2
	ldr		r4, _0807a62c
	ldr		r1, _0807a64c
	add		r0, r4, #0x0
	bl		sub_0807c160
	ldr		r0, _0807a650
	add		r1, r4, r0
	add		r0, r4, #0x0
	bl		sub_0807c160
	ldr		r1, _0807a654
	add		r0, r4, #0x0
	bl		sub_0807c160
_0807a5f2:
	ldr		r0, _0807a658
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0807a616
	ldr		r4, _0807a62c
	ldr		r1, _0807a65c
	add		r0, r4, #0x0
	bl		sub_0807c160
	ldr		r2, _0807a650
	add		r1, r4, r2
	add		r0, r4, #0x0
	bl		sub_0807c160
	ldr		r1, _0807a640
	add		r0, r4, #0x0
	bl		sub_0807c160
_0807a616:
	ldr		r4, _0807a62c
	ldr		r1, _0807a660
	add		r0, r4, #0x0
	bl		sub_0807c160
	add		r0, r4, #0x0
	bl		sub_0807a318
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0807a62c:	.4byte 0x03007190
_0807a630:	.4byte 0x0820be5c @ "Content-Type: application/x-cgb\r\n"
_0807a634:	.4byte 0x0820be0c @ "Content-Length: 0\r\n"
_0807a638:	.4byte 0x030024A0
_0807a63c:	.4byte 0xFFFFFD18
_0807a640:	.4byte 0x0820bce4
_0807a644:	.4byte 0x030024A5
_0807a648:	.4byte 0x030024A6
_0807a64c:	.4byte 0x0820be40 @ "Authorization: GB00 name=\""                                           @
_0807a650:	.4byte 0x00000396
_0807a654:	.4byte 0x0820bee0
_0807a658:	.4byte 0x030024A7
_0807a65c:	.4byte 0x0820be8c @ "Gb-Auth-ID: "
_0807a660:	.4byte 0x0820beb0 @ "User-Agent: AGB-"
	thumb_func_end sub_0807a4b0

	thumb_func_start sub_0807a664
sub_0807a664:
	add		r2, r0, #0x0
	cmp		r2, #0x1
	beq		_0807a704
	cmp		r2, #0x1
	bgt		_0807a674
	cmp		r2, #0x0
	beq		_0807a67c
	b		_0807a806
_0807a674:
	cmp		r2, #0x2
	bne		_0807a67a
	b		_0807a784
_0807a67a:
	b		_0807a806
_0807a67c:
	ldr		r1, _0807a68c
	ldr		r0, [r1, #0x70]
	cmp		r0, #0x16
	beq		_0807a690
	cmp		r0, #0x17
	beq		_0807a6a6
	b		_0807a806

.incbin "base.gba", 0x7A68A, 0x2

_0807a68c:	.4byte 0x03006E20

_0807a690:
	add		r0, r1, #0x0
	add		r0, #0xa0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0807a6f8
	cmp		r0, #0x1
	bcc		_0807a6f8
	cmp		r0, #0x3
	beq		_0807a6a4
	b		_0807a806
_0807a6a4:
	b		_0807a6f8
_0807a6a6:
	add		r0, r1, #0x0
	add		r0, #0xa0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_0807a6c0
	cmp		r0, #0x2
	bhi		_0807a6ba
	cmp		r0, #0x0
	beq		_0807a6ea
	b		_0807a806
_0807a6ba:
	cmp		r0, #0x4
	beq		_0807a6d6
	b		_0807a806
_0807a6c0:
	add		r0, r1, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0807a6f8
	cmp		r0, #0x1
	bcc		_0807a6f8
	cmp		r0, #0x2
	beq		_0807a6d4
	b		_0807a806
_0807a6d4:
	b		_0807a6ea
_0807a6d6:
	add		r0, r1, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0807a6ea
	cmp		r0, #0x1
	bcc		_0807a6f8
	cmp		r0, #0x2
	beq		_0807a6f8
	b		_0807a806
_0807a6ea:
	ldr		r1, _0807a6f4
	mov		r0, #0x64
	str		r0, [r1, #0x0]
	b		_0807a806

.incbin "base.gba", 0x7A6F2, 0x2

_0807a6f4:	.4byte 0x030024A8

_0807a6f8:
	ldr		r1, _0807a700
	mov		r0, #0x8
	str		r0, [r1, #0x0]
	b		_0807a806

_0807a700:	.4byte 0x030024A8

_0807a704:
	ldr		r1, _0807a714
	ldr		r0, [r1, #0x70]
	cmp		r0, #0x16
	beq		_0807a718
	cmp		r0, #0x17
	beq		_0807a750
	b		_0807a806

.incbin "base.gba", 0x7A712, 0x2

_0807a714:	.4byte 0x03006E20

_0807a718:
	add		r0, r1, #0x0
	add		r0, #0xa0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0807a740
	cmp		r0, #0x1
	bcc		_0807a778
	cmp		r0, #0x3
	bne		_0807a806
	add		r0, r1, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bhi		_0807a806
	mov		r0, #0x6e
	ldr		r1, _0807a73c
	str		r0, [r1, #0x0]
	b		_0807a806

_0807a73c:	.4byte 0x030024A8

_0807a740:
	add		r0, r1, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bls		_0807a778
_0807a74a:
	cmp		r0, #0x2
	bne		_0807a806
	b		_0807a7d0
_0807a750:
	add		r0, r1, #0x0
	add		r0, #0xa0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_0807a740
	cmp		r0, #0x2
	bhi		_0807a764
	cmp		r0, #0x0
	beq		_0807a778
	b		_0807a806
_0807a764:
	cmp		r0, #0x4
	bne		_0807a806
	add		r0, r1, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bls		_0807a778
	cmp		r0, #0x2
	beq		_0807a7d0
	b		_0807a806
_0807a778:
	ldr		r1, _0807a780
	mov		r0, #0x6e
	str		r0, [r1, #0x0]
	b		_0807a806

_0807a780:	.4byte 0x030024A8

_0807a784:
	ldr		r1, _0807a794
	ldr		r0, [r1, #0x70]
	cmp		r0, #0x16
	beq		_0807a798
	cmp		r0, #0x17
	beq		_0807a7b6
	b		_0807a806

.incbin "base.gba", 0x7A792, 0x2

_0807a794:	.4byte 0x03006E20

_0807a798:
	add		r0, r1, #0x0
	add		r0, #0xa0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0807a7f4
	cmp		r0, #0x1
	bcc		_0807a7d0
	cmp		r0, #0x3
	bne		_0807a806
	add		r0, r1, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0807a802
	b		_0807a74a
_0807a7b6:
	add		r0, r1, #0x0
	add		r0, #0xa0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_0807a7dc
	cmp		r0, #0x2
	bhi		_0807a7ca
	cmp		r0, #0x0
	beq		_0807a7d0
	b		_0807a806
_0807a7ca:
	cmp		r0, #0x4
	beq		_0807a7f4
	b		_0807a806
_0807a7d0:
	ldr		r1, _0807a7d8
	mov		r0, #0xff
	str		r0, [r1, #0x0]
	b		_0807a806

_0807a7d8:	.4byte 0x030024A8

_0807a7dc:
	add		r0, r1, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	bhi		_0807a806
	cmp		r0, #0x1
	bcc		_0807a806
	ldr		r1, _0807a7f0
	str		r2, [r1, #0x0]
	b		_0807a806

_0807a7f0:	.4byte 0x030024A8

_0807a7f4:
	add		r0, r1, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	bhi		_0807a806
	cmp		r0, #0x1
	bcc		_0807a806
_0807a802:
	ldr		r0, _0807a80c
	str		r2, [r0, #0x0]
_0807a806:
	ldr		r1, _0807a80c
	ldr		r0, [r1, #0x0]
	bx		lr

_0807a80c:	.4byte 0x030024A8
	thumb_func_end sub_0807a664

	thumb_func_start sub_0807a810
sub_0807a810:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	ldr		r2, _0807a854
	ldr		r1, _0807a858
	ldr		r0, _0807a85c
	mov		r3, #0x0
	str		r3, [r0, #0x0]
	str		r3, [r1, #0x0]
	str		r3, [r2, #0x0]
	ldr		r2, _0807a860
	ldr		r1, _0807a864
	ldr		r0, _0807a868
	str		r3, [r0, #0x0]
	str		r3, [r1, #0x0]
	str		r3, [r2, #0x0]
	ldr		r1, _0807a86c
	add		r0, r1, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_0807a8c2
	add		r0, r1, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x23
	beq		_0807a892
	cmp		r0, #0x23
	bgt		_0807a870
	cmp		r0, #0x15
	beq		_0807a87a
	b		_0807a8b4

_0807a854:	.4byte 0x030024AC
_0807a858:	.4byte 0x030024B0
_0807a85c:	.4byte 0x030024B4
_0807a860:	.4byte 0x030024B8
_0807a864:	.4byte 0x030024BC
_0807a868:	.4byte 0x030024C0
_0807a86c:	.4byte 0x03006E20

_0807a870:
	cmp		r0, #0x24
	beq		_0807a8c2
	cmp		r0, #0x28
	beq		_0807a892
	b		_0807a8b4
_0807a87a:
	add		r2, r1, #0x0
	add		r2, #0x66
	mov		r0, #0x24
	strb	r0, [r2, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x68
	strh	r3, [r0, #0x0]
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	b		_0807a8c2
_0807a892:
	ldr		r2, _0807a8b0
	add		r3, r2, #0x0
	add		r3, #0x66
	mov		r1, #0x0
	mov		r0, #0x24
	strb	r0, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf1
	strb	r0, [r1, #0x0]
	b		_0807a8c2

_0807a8b0:	.4byte 0x03006E20

_0807a8b4:
	bl		sub_08074500
	ldr		r0, _0807a8f4
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xf1
	strb	r1, [r0, #0x0]
_0807a8c2:
	ldr		r7, _0807a8f4
	add		r5, r7, #0x0
	add		r5, #0x62
	ldrb	r0, [r5, #0x0]
	add		r2, r0, #0x0
	add		r3, r7, #0x0
	cmp		r2, #0x7
	bne		_0807a8d4
	b		_0807ab1c
_0807a8d4:
	cmp		r2, #0x7
	bgt		_0807a906
	cmp		r2, #0x3
	bne		_0807a8de
	b		_0807a9e4
_0807a8de:
	cmp		r2, #0x3
	bgt		_0807a8f8
	cmp		r2, #0x1
	beq		_0807a976
	cmp		r2, #0x1
	bgt		_0807a990
	cmp		r2, #0x0
	beq		_0807a95a
	bl		sub_0807b332
		
	.2byte	0x0
	
_0807a8f4:
	ldr		r0, [r4, #0x60]
	lsl		r0, r0, #0xc
_0807a8f8:
	cmp		r2, #0x5
	bne		_0807a8fe
	b		_0807aa60
_0807a8fe:
	cmp		r2, #0x5
	ble		_0807a904
	b		_0807aa7e
_0807a904:
	b		_0807aa02
_0807a906:
	cmp		r2, #0x64
	bne		_0807a90c
	b		_0807b0a4
_0807a90c:
	cmp		r2, #0x64
	bgt		_0807a92e
	cmp		r2, #0x32
	bne		_0807a916
	b		_0807b068
_0807a916:
	cmp		r2, #0x32
	bgt		_0807a924
	cmp		r2, #0x8
	bne		_0807a920
	b		_0807ab8c
_0807a920:
	bl		sub_0807b332
_0807a924:
	cmp		r2, #0x33
	bne		_0807a92a
	b		_0807b082
_0807a92a:
	bl		sub_0807b332
_0807a92e:
	cmp		r2, #0xf0
	bne		_0807a936
	bl		sub_0807b270
_0807a936:
	cmp		r2, #0xf0
	bgt		_0807a946
	cmp		r2, #0x6e
	bne		_0807a942
	bl		sub_0807b130
_0807a942:
	bl		sub_0807b332
_0807a946:
	cmp		r2, #0xf1
	bne		_0807a94e
	bl		sub_0807b292
_0807a94e:
	cmp		r2, #0xff
	bne		_0807a956
	bl		sub_0807b2de
_0807a956:
	bl		sub_0807b332
_0807a95a:
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	strh	r2, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	mov		r2, #0xdc
	lsl		r2, r2, #0x2
	add		r1, r7, r2
	bl		sub_08073b18
	bl		sub_0807b288
_0807a976:
	add		r0, r7, #0x0
	add		r0, #0x6a
	mov		r3, #0xf2
	lsl		r3, r3, #0x1
	add		r1, r7, r3
	ldr		r1, [r1, #0x0]
	mov		r2, #0x4
	bl		sub_0807c304
	ldrb	r0, [r5, #0x0]
	add		r0, #0x1
	ldrb	r1, [r5, #0x0]
	strb	r0, [r5, #0x0]
_0807a990:
	ldr		r2, _0807a9b8
	mov		r0, #0x0
	strh	r0, [r2, #0x0]
	ldr		r4, _0807a9bc
	add		r0, r2, r4
	str		r0, [r2, #0x4]
	mov		r1, #0xc6
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0807a9c4
	ldr		r3, _0807a9c0
	add		r1, r2, r3
	add		r0, r2, #0x0
	mov		r2, #0x50
	bl		sub_08073810
	b		_0807a9d0

.incbin "base.gba", 0x7A9B6, 0x2

_0807a9b8:	.4byte 0x03007000
_0807a9bc:	.4byte 0xFFFFFEF4
_0807a9c0:	.4byte 0xFFFFFE8A

_0807a9c4:
	ldr		r4, _0807a9dc
	add		r1, r2, r4
	add		r0, r2, #0x0
	mov		r2, #0x50
	bl		sub_08073810
_0807a9d0:
	ldr		r0, _0807a9e0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	add		r1, #0x1
	b		_0807b09e

.incbin "base.gba", 0x7A9DA, 0x2

_0807a9dc:	.4byte 0xFFFFFE8A
_0807a9e0:	.4byte 0x03006E20

_0807a9e4:
	mov		r1, #0xf2
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x63
	strb	r0, [r1, #0x0]
	add		r1, #0x69
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	ldrb	r0, [r5, #0x0]
	add		r0, #0x1
	ldrb	r1, [r5, #0x0]
	strb	r0, [r5, #0x0]
_0807aa02:
	ldr		r4, _0807aa28
	mov		r0, #0x0
	strh	r0, [r4, #0x0]
	ldr		r2, _0807aa2c
	add		r0, r4, r2
	str		r0, [r4, #0x4]
	bl		sub_0807a438
	cmp		r0, #0x0
	bne		_0807aa38
	ldr		r1, _0807aa30
	ldr		r3, _0807aa34
	add		r0, r4, r3
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r2, #0x4
	bl		sub_08073020
	b		_0807aa48

_0807aa28:	.4byte 0x03007000
_0807aa2c:	.4byte 0xFFFFFEF4
_0807aa30:	.4byte 0x0820bdf0
_0807aa34:	.4byte 0xFFFFFE83

_0807aa38:
	ldr		r1, _0807aa54
	ldr		r2, _0807aa58
	add		r0, r4, r2
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r2, #0x5
	bl		sub_08073020
_0807aa48:
	ldr		r1, _0807aa5c
	add		r2, r1, #0x0
	add		r2, #0xc8
	add		r1, #0x62
	b		_0807aafa

.incbin "base.gba", 0x7AA52, 0x2

_0807aa54:	.4byte 0x0820bdf8 @ "POST"
_0807aa58:	.4byte 0xFFFFFE83
_0807aa5c:	.4byte 0x03006E20

_0807aa60:
	add		r1, r7, #0x0
	add		r1, #0x8c
	add		r0, r7, #0x0
	add		r0, #0x94
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	add		r1, #0x4
	add		r0, r7, #0x0
	add		r0, #0x98
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldrb	r0, [r5, #0x0]
	add		r0, #0x1
	ldrb	r1, [r5, #0x0]
	strb	r0, [r5, #0x0]
_0807aa7e:
	ldr		r4, _0807aac0
	mov		r0, #0x0
	strh	r0, [r4, #0x0]
	ldr		r3, _0807aac4
	add		r0, r4, r3
	str		r0, [r4, #0x4]
	ldr		r0, _0807aac8
	add		r6, r4, r0
	ldr		r2, [r6, #0x0]
	cmp		r2, #0xfe
	bls		_0807aadc
	ldr		r1, _0807aacc
	add		r5, r4, r1
	ldr		r1, [r5, #0x0]
	ldr		r2, _0807aad0
	add		r0, r4, r2
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	mov		r2, #0xfe
	bl		sub_08073020
	ldr		r0, [r5, #0x0]
	add		r0, #0xfe
	str		r0, [r5, #0x0]
	ldr		r0, [r6, #0x0]
	sub		r0, #0xfe
	str		r0, [r6, #0x0]
	ldr		r3, _0807aad4
	add		r2, r4, r3
	ldr		r0, _0807aad8
	add		r1, r4, r0
	ldrb	r0, [r1, #0x0]
	b		_0807aafe

_0807aac0:	.4byte 0x03007000
_0807aac4:	.4byte 0xFFFFFEF4
_0807aac8:	.4byte 0xFFFFFEB0
_0807aacc:	.4byte 0xfffffeac
_0807aad0:	.4byte 0xFFFFFE83
_0807aad4:	.4byte 0xFFFFFEE8
_0807aad8:	.4byte 0xFFFFFE82

_0807aadc:
	ldr		r1, _0807ab0c
	add		r0, r4, r1
	ldr		r1, [r0, #0x0]
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	ldr		r3, _0807ab10
	add		r0, r4, r3
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_08073020
	ldr		r0, _0807ab14
	add		r2, r4, r0
	ldr		r3, _0807ab18
	add		r1, r4, r3
_0807aafa:
	ldrb	r0, [r1, #0x0]
	add		r0, #0x1
_0807aafe:
	str		r0, [r2, #0x0]
	ldrb	r0, [r1, #0x0]
	mov		r0, #0x32
	strb	r0, [r1, #0x0]
	bl		sub_0807b332
	
	.2byte	0x0
	
_0807ab0c:
.incbin "base.gba", 0x7AB0C, 0x4
_0807ab10:
.incbin "base.gba", 0x7AB10, 0x4
_0807ab14:
.incbin "base.gba", 0x7AB14, 0x4
_0807ab18:
.incbin "base.gba", 0x7AB18, 0x4
_0807ab1c:
	mov		r4, #0xdc
	lsl		r4, r4, #0x2
	add		r6, r7, r4
	ldr		r1, _0807ab80
	add		r0, r6, #0x0
	bl		sub_0807c088
	bl		sub_0807a4b0
	bl		sub_0807570c
	add		r0, r7, #0x0
	add		r0, #0xac
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	add		r0, #0x4
	str		r4, [r0, #0x0]
	add		r0, #0x10
	str		r4, [r0, #0x0]
	ldr		r1, _0807ab84
	ldr		r0, _0807ab88
	str		r4, [r0, #0x0]
	str		r4, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_0807a664
	ldrb	r1, [r5, #0x0]
	strb	r0, [r5, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r5, r7, r0
	strh	r4, [r5, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xd4
	str		r0, [r5, #0x4]
	add		r0, r6, #0x0
	bl		sub_0807c054
	add		r2, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r7, #0x0
	add		r0, #0x63
	ldrb	r3, [r0, #0x0]
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_08073020
	b		sub_0807b332

.incbin "base.gba", 0x7AB7E, 0x2

_0807ab80:	.4byte 0x0820be00 @ " HTTP/1.0\r\n"
_0807ab84:	.4byte 0x030024AC 
_0807ab88:	.4byte 0x030024B0

_0807ab8c:
	add		r0, r7, #0x0
	add		r0, #0xac
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0807abc4
	add		r0, r7, #0x0
	add		r0, #0xc0
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0807abda
	add		r0, r7, #0x0
	add		r0, #0xb0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_0807abe8
	mov		r0, #0x1
	bl		sub_0807a664
	add		r2, r7, #0x0
	add		r2, #0x62
	ldrb	r1, [r2, #0x0]
	strb	r0, [r2, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xa4
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	b		sub_0807b332
_0807abc4:
	bl		sub_080728a0
	mov		r1, #0x40
	and		r1, r0
	cmp		r1, #0x0
	beq		_0807ac22
	add		r0, r7, #0x0
	add		r0, #0xc0
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	bne		_0807abf0
_0807abda:
	add		r2, r7, #0x0
	add		r2, #0x66
	mov		r0, #0x32
	strb	r0, [r2, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
_0807abe8:
	ldrb	r0, [r5, #0x0]
	mov		r0, #0xf0
	strb	r0, [r5, #0x0]
	b		sub_0807b332
_0807abf0:
	add		r0, r7, #0x0
	add		r0, #0xb0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0807ac06
	add		r0, r7, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xf0
	strb	r1, [r0, #0x0]
	b		sub_0807b332
_0807ac06:
	add		r2, r7, #0x0
	add		r2, #0x66
	mov		r1, #0x0
	mov		r0, #0x32
	strb	r0, [r2, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xf0
	strb	r0, [r1, #0x0]
	b		sub_0807b332
_0807ac22:
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r2, r7, r1
	ldrh	r0, [r2, #0x0]
	cmp		r0, #0x1
	bne		_0807ac30
	b		_0807aff4
_0807ac30:
	ldr		r6, _0807ac68
	sub		r0, #0x1
	str		r0, [r6, #0x0]
	ldr		r1, _0807ac6c
	mov		r3, #0xf2
	lsl		r3, r3, #0x1
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r3, _0807ac70
	ldr		r4, _0807ac74
	add		r5, r7, r4
	str		r5, [r3, #0x0]
	ldr		r0, _0807ac78
	add		r4, r7, r0
	ldrh	r0, [r4, #0x0]
	mov		r8, r1
	cmp		r0, #0x0
	beq		_0807ac5c
	add		r0, r0, r5
	str		r0, [r3, #0x0]
_0807ac5c:
	mov		r9, r3
	mov		r10, r6
	add		r6, r7, #0x0
	add		r7, #0x66
	b		_0807afd8

.incbin "base.gba", 0x7AC66, 0x2

_0807ac68:	.4byte 0x030024B8
_0807ac6c:	.4byte 0x030024AC
_0807ac70:	.4byte 0x030024B4
_0807ac74:	.4byte 0x0000047D
_0807ac78:	.4byte 0x000006FA

_0807ac7c:
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	sub		r0, r1, r0
	mov		r3, r10
	ldr		r1, [r3, #0x0]
	sub		r1, r1, r0
	str		r1, [r3, #0x0]
	ldr		r4, _0807ad38
	ldr		r0, _0807ad3c
	add		r1, r4, r0
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0807aca2
	ldr		r2, _0807ad40
	add		r0, r4, r2
	mov		r3, r9
	str		r0, [r3, #0x0]
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
_0807aca2:
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	ldr		r1, _0807ad44
	mov		r2, #0x4
	bl		sub_0807c278
	cmp		r0, #0x0
	bne		_0807ada0
	mov		r2, r9
	ldr		r3, [r2, #0x0]
	ldrb	r0, [r3, #0x9]
	sub		r0, #0x30
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x9
	bhi		_0807ad88
	ldrb	r0, [r3, #0xa]
	sub		r0, #0x30
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x9
	bhi		_0807ad88
	ldrb	r0, [r3, #0xb]
	sub		r0, #0x30
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x9
	bhi		_0807ad88
	ldrb	r0, [r3, #0x9]
	sub		r0, #0x30
	mov		r1, #0x64
	add		r2, r0, #0x0
	mul		r2, r1
	ldrb	r1, [r3, #0xa]
	sub		r1, #0x30
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	ldr		r0, _0807ad48
	add		r2, r2, r0
	ldrb	r3, [r3, #0xb]
	add		r2, r2, r3
	ldr		r1, _0807ad4c
	add		r0, r4, r1
	strh	r2, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xc0
	mov		r3, #0x1
	str		r3, [r0, #0x0]
	sub		r0, #0x20
	ldr		r0, [r0, #0x0]
	sub		r0, #0x1
	cmp		r0, #0x3
	bhi		_0807ad5c
	add		r0, r4, #0x0
	add		r0, #0xa4
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x0
	bne		_0807ad5c
	lsl		r0, r2, #0x10
	lsr		r1, r0, #0x10
	ldr		r0, _0807ad50
	cmp		r1, r0
	bne		_0807ad26
	b		_0807af40
_0807ad26:
	mov		r0, #0x32
	strb	r0, [r7, #0x0]
	cmp		r1, #0xc8
	bne		_0807ad54
	add		r0, r4, #0x0
	add		r0, #0x68
	strh	r3, [r0, #0x0]
	b		_0807ad94

.incbin "base.gba", 0x7AD36, 0x2

_0807ad38:	.4byte 0x03006E20
_0807ad3c:	.4byte 0x000006FA
_0807ad40:	.4byte 0x0000047D
_0807ad44:	.4byte 0x0820bee4
_0807ad48:	.4byte 0x0000FFD0
_0807ad4c:	.4byte 0x00000702
_0807ad50:	.4byte 0x00000191

_0807ad54:
	add		r0, r4, #0x0
	add		r0, #0x68
	strh	r2, [r0, #0x0]
	b		_0807ad94
_0807ad5c:
	ldr		r2, _0807ad7c
	ldr		r1, _0807ad80
	add		r0, r2, r1
	ldrh	r1, [r0, #0x0]
	cmp		r1, #0xc8
	bne		_0807ad6a
	b		_0807af40
_0807ad6a:
	mov		r0, #0x32
	strb	r0, [r7, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	mov		r2, #0x1
	ldr		r3, _0807ad84
	str		r2, [r3, #0x0]
	b		_0807af40

_0807ad7c:	.4byte 0x03006E20
_0807ad80:	.4byte 0x00000702
_0807ad84:	.4byte 0x03006ED0

_0807ad88:
	mov		r0, #0x0
	mov		r1, #0x32
	strb	r1, [r7, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x68
	strh	r0, [r1, #0x0]
_0807ad94:
	mov		r4, #0x1
	ldr		r0, _0807ad9c
	str		r4, [r0, #0x0]
	b		_0807af40

_0807ad9c:	.4byte 0x03006ED0

_0807ada0:
	add		r0, r4, #0x0
	add		r0, #0xa4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0807ae78
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	ldr		r1, _0807ae04
	mov		r2, #0x6
	bl		sub_0807c278
	cmp		r0, #0x0
	bne		_0807adc8
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	mov		r2, #0x1
	and		r0, r2
	cmp		r0, #0x0
	beq		_0807ade6
_0807adc8:
	mov		r3, r9
	ldr		r0, [r3, #0x0]
	ldr		r1, _0807ae08
	mov		r2, #0xa
	bl		sub_0807c278
	cmp		r0, #0x0
	bne		_0807ae78
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	mov		r1, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_0807ae78
_0807ade6:
	ldr		r4, _0807ae0c
	ldr		r0, [r4, #0x0]
	ldr		r1, _0807ae04
	mov		r2, #0x6
	bl		sub_0807c278
	cmp		r0, #0x0
	bne		_0807ae10
	add		r1, r6, #0x0
	add		r1, #0xbc
	ldr		r0, [r1, #0x0]
	mov		r4, #0x1
	orr		r0, r4
	str		r0, [r1, #0x0]
	b		_0807ae2a

_0807ae04:	.4byte 0x0820be9c @ "Date: "
_0807ae08:	.4byte 0x0820bea4 @ "Location: "
_0807ae0c:	.4byte 0x030024B4

_0807ae10:
	ldr		r0, [r4, #0x0]
	ldr		r1, _0807ae6c
	mov		r2, #0xa
	bl		sub_0807c278
	cmp		r0, #0x0
	bne		_0807ae2a
	add		r0, r6, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	mov		r2, #0x2
	orr		r1, r2
	str		r1, [r0, #0x0]
_0807ae2a:
	ldr		r1, _0807ae70
	add		r5, r1, #0x0
	add		r5, #0x9c
	ldr		r2, [r5, #0x0]
	cmp		r2, #0x0
	bne		_0807ae38
	b		_0807af40
_0807ae38:
	add		r4, r1, #0x0
	add		r4, #0xa8
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0807ae44
	b		_0807af40
_0807ae44:
	mov		r3, r9
	ldr		r1, [r3, #0x0]
	bl		sub_0807c0b4
	ldr		r1, _0807ae74
	str		r0, [r1, #0x0]
	ldr		r1, [r5, #0x0]
	sub		r2, r1, r0
	str		r2, [r5, #0x0]
	ldr		r1, [r4, #0x0]
	add		r1, r1, r0
	str		r1, [r4, #0x0]
	sub		r0, r1, #0x1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0807af40
	cmp		r2, #0x0
	beq		_0807af40
	strb	r0, [r1, #0x0]
	b		_0807af40

_0807ae6c:	.4byte 0x0820bea4 @ "Location: "
_0807ae70:	.4byte 0x03006E20
_0807ae74:	.4byte 0x030024C0

_0807ae78:
	ldr		r4, _0807aea4
	ldr		r0, [r4, #0x0]
	ldr		r1, _0807aea8
	mov		r2, #0x1d
	bl		sub_0807c278
	cmp		r0, #0x0
	bne		_0807aeb0
	ldr		r0, [r4, #0x0]
	add		r0, #0x1d
	add		r1, r6, #0x0
	add		r1, #0xb4
	ldr		r1, [r1, #0x0]
	add		r2, r6, #0x0
	add		r2, #0xb8
	ldr		r2, [r2, #0x0]
	ldr		r4, _0807aeac
	add		r3, r6, r4
	bl		sub_0807c714
	b		_0807af40

.incbin "base.gba", 0x7AEA2, 0x2

_0807aea4:	.4byte 0x030024B4
_0807aea8:	.4byte 0x0820be20 @ "WWW-Authenticate: GB00 name=\""                                        @
_0807aeac:	.4byte 0x00000706

_0807aeb0:
	ldr		r0, [r4, #0x0]
	ldr		r1, _0807aefc
	mov		r2, #0xb
	bl		sub_0807c278
	cmp		r0, #0x0
	bne		_0807af28
	ldr		r5, _0807af00
	ldr		r3, [r4, #0x0]
	ldrb	r0, [r3, #0xb]
	sub		r0, #0x30
	mov		r1, #0x64
	add		r2, r0, #0x0
	mul		r2, r1
	ldrb	r1, [r3, #0xc]
	sub		r1, #0x30
	lsl		r0, r1, #0x2
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	add		r2, r2, r0
	ldr		r0, _0807af04
	add		r2, r2, r0
	ldrb	r3, [r3, #0xd]
	add		r1, r2, r3
	ldr		r2, _0807af08
	add		r0, r5, r2
	strh	r1, [r0, #0x0]
	lsl		r0, r1, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x65
	bne		_0807af0c
	ldr		r0, [r5, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	orr		r0, r1
	str		r0, [r5, #0x40]
	b		_0807af40

.incbin "base.gba", 0x7AEFA, 0x2

_0807aefc:	.4byte 0x0820be80 @ "Gb-Status: "
_0807af00:	.4byte 0x03006E20
_0807af04:	.4byte 0x0000FFD0
_0807af08:	.4byte 0x00000704

_0807af0c:
	cmp		r0, #0x0
	beq		_0807af40
	mov		r0, #0x33
	strb	r0, [r7, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	mov		r3, #0x1
	ldr		r4, _0807af24
	str		r3, [r4, #0x0]
	b		_0807af40

.incbin "base.gba", 0x7AF22, 0x2

_0807af24:	.4byte 0x03006ED0

_0807af28:
	ldr		r0, [r4, #0x0]
	ldr		r1, _0807af68
	mov		r2, #0xc
	bl		sub_0807c278
	cmp		r0, #0x0
	bne		_0807af40
	ldr		r1, [r4, #0x0]
	add		r1, #0xc
	ldr		r0, _0807af6c
	bl		sub_0807c088
_0807af40:
	ldr		r0, _0807af70
	ldr		r2, [r0, #0x0]
	ldrb	r3, [r2, #0x0]
	add		r1, r0, #0x0
	cmp		r3, #0xd
	bne		_0807af52
	ldrb	r0, [r2, #0x1]
	cmp		r0, #0xa
	beq		_0807af56
_0807af52:
	cmp		r3, #0xa
	bne		_0807afcc
_0807af56:
	ldr		r0, [r1, #0x0]
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xd
	bne		_0807af74
	mov		r2, r10
	ldr		r0, [r2, #0x0]
	sub		r0, #0x2
	str		r0, [r2, #0x0]
	b		_0807af7c

_0807af68:	.4byte 0x0820be8c @ "Gb-Auth-ID: "
_0807af6c:	.4byte 0x03007526
_0807af70:	.4byte 0x030024B0

_0807af74:
	mov		r3, r10
	ldr		r0, [r3, #0x0]
	sub		r0, #0x1
	str		r0, [r3, #0x0]
_0807af7c:
	ldr		r3, _0807afa8
	add		r0, r3, #0x0
	add		r0, #0xac
	mov		r4, #0x1
	str		r4, [r0, #0x0]
	mov		r0, r10
	ldr		r2, [r0, #0x0]
	cmp		r2, #0x0
	beq		_0807aff4
	ldr		r1, [r1, #0x0]
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0xd
	bne		_0807afac
	mov		r4, #0xf2
	lsl		r4, r4, #0x1
	add		r0, r3, r4
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
	add		r1, #0x2
	bl		sub_0807c304
	b		_0807afbc

_0807afa8:	.4byte 0x03006E20

_0807afac:
	mov		r4, #0xf2
	lsl		r4, r4, #0x1
	add		r0, r3, r4
	ldr		r0, [r0, #0x0]
	add		r0, #0x1
	add		r1, #0x1
	bl		sub_0807c304
_0807afbc:
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	ldr		r2, _0807afc8
	strh	r0, [r2, #0x0]
	b		_0807aff4

_0807afc8:	.4byte 0x03007000

_0807afcc:
	ldr		r1, _0807b040
	str		r2, [r1, #0x0]
	ldr		r0, _0807b044
	mov		r3, r9
	str		r0, [r3, #0x0]
	mov		r8, r1
_0807afd8:
	mov		r4, r9
	ldr		r0, [r4, #0x0]
	mov		r2, r8
	ldr		r1, [r2, #0x0]
	mov		r3, r10
	ldr		r2, [r3, #0x0]
	bl		sub_0807c0f4
	add		r1, r0, #0x0
	ldr		r0, _0807b048
	str		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0807aff4
	b		_0807ac7c
_0807aff4:
	ldr		r4, _0807b04c
	add		r6, r4, #0x0
	add		r6, #0xac
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_0807b022
	ldr		r5, _0807b050
	ldr		r2, [r5, #0x0]
	cmp		r2, #0x0
	beq		_0807b01c
	ldr		r1, _0807b054
	add		r0, r4, r1
	ldr		r1, _0807b040
	ldr		r1, [r1, #0x0]
	bl		sub_0807c304
	ldr		r1, [r5, #0x0]
	ldr		r2, _0807b058
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
_0807b01c:
	ldr		r0, [r6, #0x0]
	cmp		r0, #0x0
	beq		_0807b02c
_0807b022:
	ldr		r0, _0807b050
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0807b02c
	b		sub_0807b332
_0807b02c:
	ldr		r0, _0807b05c
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r3, _0807b060
	add		r1, r0, r3
	str		r1, [r0, #0x4]
	ldr		r4, _0807b064
	add		r1, r0, r4
	b		_0807b256

.incbin "base.gba", 0x7B03E, 0x2

_0807b040:	.4byte 0x030024AC
_0807b044:	.4byte 0x0300729D
_0807b048:	.4byte 0x030024B0
_0807b04c:	.4byte 0x03006E20
_0807b050:	.4byte 0x030024B8
_0807b054:	.4byte 0x0000047D
_0807b058:	.4byte 0x000006FA
_0807b05c:	.4byte 0x03007000
_0807b060:	.4byte 0xFFFFFEF4
_0807b064:	.4byte 0xFFFFFE83

_0807b068:
	add		r2, r7, #0x0
	add		r2, #0xc4
	ldrb	r0, [r7, #0x5]
	lsl		r0, r0, #0x2
	add		r1, r7, #0x0
	add		r1, #0x34
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r2, #0x0]
	ldrb	r0, [r5, #0x0]
	add		r0, #0x1
	ldrb	r1, [r5, #0x0]
	strb	r0, [r5, #0x0]
_0807b082:
	add		r0, r3, #0x0
	add		r0, #0xc4
	ldr		r1, [r0, #0x0]
	sub		r1, #0x1
	str		r1, [r0, #0x0]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	beq		_0807b096
	b		sub_0807b332
_0807b096:
	add		r0, r3, #0x0
	add		r0, #0xc8
	ldr		r1, [r0, #0x0]
	sub		r0, #0x66
_0807b09e:
	ldrb	r2, [r0, #0x0]
	strb	r1, [r0, #0x0]
	b		sub_0807b332
_0807b0a4:
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	add		r6, r7, r0
	mov		r4, #0x0
	strh	r4, [r6, #0x0]
	add		r0, r7, #0x0
	add		r0, #0xd4
	str		r0, [r6, #0x4]
	mov		r1, #0x88
	add		r1, r1, r7
	mov		r8, r1
	ldr		r2, [r1, #0x0]
	cmp		r2, #0xfe
	bls		_0807b0e8
	add		r4, r7, #0x0
	add		r4, #0x84
	ldr		r1, [r4, #0x0]
	sub		r0, #0x71
	ldrb	r3, [r0, #0x0]
	add		r0, r6, #0x0
	mov		r2, #0xfe
	bl		sub_08073020
	ldr		r0, [r4, #0x0]
	add		r0, #0xfe
	str		r0, [r4, #0x0]
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	sub		r0, #0xfe
	str		r0, [r2, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xc8
	ldrb	r0, [r5, #0x0]
	b		_0807b11c
_0807b0e8:
	add		r0, r7, #0x0
	add		r0, #0x84
	ldr		r1, [r0, #0x0]
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	sub		r0, #0x21
	ldrb	r3, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_08073020
	add		r0, r7, #0x0
	add		r0, #0xac
	str		r4, [r0, #0x0]
	add		r0, #0x4
	str		r4, [r0, #0x0]
	add		r0, #0x10
	str		r4, [r0, #0x0]
	ldr		r1, _0807b128
	ldr		r0, _0807b12c
	str		r4, [r0, #0x0]
	str		r4, [r1, #0x0]
	bl		sub_0807570c
	add		r1, r7, #0x0
	add		r1, #0xc8
	mov		r0, #0x8
_0807b11c:
	str		r0, [r1, #0x0]
	ldrb	r0, [r5, #0x0]
	mov		r0, #0x32
	strb	r0, [r5, #0x0]
	b		sub_0807b332

.incbin "base.gba", 0x7B126, 0x2

_0807b128:	.4byte 0x030024AC
_0807b12c:	.4byte 0x030024B0
	thumb_func_end sub_0807a810

	thumb_func_start sub_0807b130
sub_0807b130:
	ldr		r6, [r7, #0x40]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r6, r0
	cmp		r6, #0x0
	bne		_0807b208
	ldr		r5, [r7, #0x78]
	cmp		r5, #0x0
	beq		_0807b210
	mov		r3, #0xf0
	lsl		r3, r3, #0x1
	add		r1, r7, r3
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x1
	bls		_0807b210
	ldr		r4, _0807b194
	mov		r8, r4
	sub		r2, r0, #0x1
	str		r2, [r4, #0x0]
	ldr		r3, [r7, #0x7c]
	cmp		r3, r2
	bcc		_0807b19c
	mov		r1, #0xf2
	lsl		r1, r1, #0x1
	add		r0, r7, r1
	ldr		r1, [r0, #0x0]
	add		r1, #0x1
	add		r0, r5, #0x0
	bl		sub_0807c304
	ldr		r0, [r7, #0x78]
	ldr		r2, [r4, #0x0]
	add		r0, r0, r2
	str		r0, [r7, #0x78]
	ldr		r0, [r7, #0x7c]
	sub		r0, r0, r2
	str		r0, [r7, #0x7c]
	ldrh	r1, [r7, #0x2]
	ldr		r0, _0807b198
	and		r0, r1
	ldrh	r1, [r7, #0x2]
	strh	r0, [r7, #0x2]
	add		r0, r7, #0x0
	add		r0, #0x80
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x0]
	add		r0, r0, r2
	strh	r0, [r1, #0x0]
	b		_0807b210

.incbin "base.gba", 0x7B192, 0x2

_0807b194:	.4byte 0x030024BC
_0807b198:	.4byte 0x0000FFFB

_0807b19c:
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r4, r7, r2
	ldr		r1, [r4, #0x0]
	add		r1, #0x1
	add		r0, r5, #0x0
	add		r2, r3, #0x0
	bl		sub_0807c304
	mov		r3, r8
	ldr		r0, [r3, #0x0]
	ldr		r2, [r7, #0x7c]
	sub		r0, r0, r2
	ldr		r1, _0807b200
	add		r3, r7, r1
	mov		r5, #0x0
	strh	r0, [r3, #0x0]
	ldr		r1, _0807b204
	add		r0, r7, r1
	add		r2, #0x1
	ldr		r1, [r4, #0x0]
	add		r1, r1, r2
	ldrh	r2, [r3, #0x0]
	bl		sub_0807c304
	add		r0, r7, #0x0
	add		r0, #0x80
	ldr		r2, [r0, #0x0]
	ldr		r1, [r7, #0x7c]
	ldrh	r0, [r2, #0x0]
	add		r0, r0, r1
	strh	r0, [r2, #0x0]
	str		r6, [r7, #0x7c]
	ldrh	r0, [r7, #0x2]
	mov		r1, #0x4
	orr		r0, r1
	ldrh	r1, [r7, #0x2]
	orr		r0, r5
	strh	r0, [r7, #0x2]
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	ldrh	r0, [r7, #0x2]
	mov		r1, #0x1
	orr		r0, r1
	ldrh	r1, [r7, #0x2]
	orr		r0, r5
	strh	r0, [r7, #0x2]
	b		sub_0807b332

_0807b200:	.4byte 0x000006FA
_0807b204:	.4byte 0x0000047D

_0807b208:
	ldr		r0, [r7, #0x40]
	ldr		r1, _0807b23c
	and		r0, r1
	str		r0, [r7, #0x40]
_0807b210:
	bl		sub_080728a0
	mov		r1, #0x40
	and		r1, r0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	cmp		r1, #0x0
	beq		_0807b248
	ldr		r4, _0807b240
	ldrh	r1, [r4, #0x2]
	ldr		r0, _0807b244
	and		r0, r1
	ldrh	r1, [r4, #0x2]
	strh	r0, [r4, #0x2]
	mov		r0, #0x2
	bl		sub_0807a664
	add		r4, #0x62
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	b		sub_0807b332

.incbin "base.gba", 0x7B23A, 0x2

_0807b23c:	.4byte 0xFFFF7FFF
_0807b240:	.4byte 0x03006E20
_0807b244:	.4byte 0x0000FFFB

_0807b248:
	ldr		r0, _0807b264
	strh	r1, [r0, #0x0]
	ldr		r2, _0807b268
	add		r1, r0, r2
	str		r1, [r0, #0x4]
	ldr		r3, _0807b26c
	add		r1, r0, r3
_0807b256:
	ldrb	r3, [r1, #0x0]
	mov		r1, #0x0
	mov		r2, #0x0
	bl		sub_08073020
	b		sub_0807b332

.incbin "base.gba", 0x7B262, 0x2

_0807b264:	.4byte 0x03007000
_0807b268:	.4byte 0xFFFFFEF4
_0807b26c:	.4byte 0xFFFFFE83
	thumb_func_end sub_0807b130

	thumb_func_start sub_0807b270
sub_0807b270:
	mov		r4, #0xf0
	lsl		r4, r4, #0x1
	add		r0, r7, r4
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	sub		r1, #0x71
	ldrb	r1, [r1, #0x0]
	bl		sub_080738f8
	thumb_func_end sub_0807b270

	thumb_func_start sub_0807b288
sub_0807b288:
	ldrb	r0, [r5, #0x0]
	add		r0, #0x1
	ldrb	r1, [r5, #0x0]
	strb	r0, [r5, #0x0]
	b		sub_0807b332
	thumb_func_end sub_0807b288

	non_word_aligned_thumb_func_start sub_0807b292
sub_0807b292:
	add		r1, r7, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r5, #0x0
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r1, [r7, #0x2]
	mov		r0, #0xff
	and		r0, r1
	ldrh	r1, [r7, #0x2]
	mov		r4, #0x0
	strh	r0, [r7, #0x2]
	ldrh	r0, [r7, #0x2]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r7, #0x2]
	orr		r0, r4
	strh	r0, [r7, #0x2]
	add		r0, r7, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r7, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	add		r0, r7, #0x0
	add		r0, #0xcc
	strb	r4, [r0, #0x0]
	sub		r0, #0x10
	str		r5, [r0, #0x0]
	b		sub_0807b332
	thumb_func_end sub_0807b292

	non_word_aligned_thumb_func_start sub_0807b2de
sub_0807b2de:
	add		r1, r7, #0x0
	add		r1, #0x5c
	ldrb	r0, [r1, #0x0]
	mov		r5, #0x0
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	ldrh	r0, [r7, #0x2]
	and		r2, r0
	ldrh	r0, [r7, #0x2]
	mov		r4, #0x0
	strh	r2, [r7, #0x2]
	ldrh	r0, [r7, #0x2]
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r1, r3, #0x0
	orr		r0, r1
	ldrh	r1, [r7, #0x2]
	orr		r0, r4
	strh	r0, [r7, #0x2]
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	add		r0, r7, #0x0
	add		r0, #0xcc
	strb	r4, [r0, #0x0]
	sub		r0, #0x10
	str		r5, [r0, #0x0]
	ldr		r0, [r7, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	and		r0, r1
	cmp		r0, #0x0
	beq		sub_0807b332
	mov		r0, #0x33
	mov		r1, #0x65
	bl		sub_080753ec
	ldr		r0, [r7, #0x40]
	ldr		r1, _0807b340
	and		r0, r1
	str		r0, [r7, #0x40]
	thumb_func_end sub_0807b2de

	non_word_aligned_thumb_func_start sub_0807b332
sub_0807b332:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.align 2, 0
_0807b340:	.4byte 0xfffeffff
	thumb_func_end sub_0807b332

	thumb_func_start sub_0807b344
sub_0807b344:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _0807b38c
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	add		r5, r0, #0x0
	cmp		r1, r2
	bge		_0807b37c
	ldrb	r0, [r4, #0x0]
	strb	r0, [r3, #0x0]
	lsl		r0, r0, #0x18
	add		r3, #0x1
	cmp		r0, #0x0
	beq		_0807b37c
	add		r1, r5, #0x0
_0807b364:
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
	cmp		r0, r2
	bge		_0807b37c
	add		r0, r4, r0
	ldrb	r0, [r0, #0x0]
	strb	r0, [r3, #0x0]
	lsl		r0, r0, #0x18
	add		r3, #0x1
	cmp		r0, #0x0
	bne		_0807b364
_0807b37c:
	ldr		r0, [r5, #0x0]
	cmp		r0, r2
	bne		_0807b386
	mov		r0, #0x0
	strb	r0, [r3, #0x0]
_0807b386:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0807b38c:	.4byte 0x030024C4
	thumb_func_end sub_0807b344

	thumb_func_start sub_0807b390
sub_0807b390:
	push	{ r4, r5, lr }
	add		r5, r1, #0x0
	cmp		r0, #0x19
	beq		_0807b3c8
	cmp		r0, #0x19
	bgt		_0807b3a2
	cmp		r0, #0x18
	beq		_0807b3a8
	b		_0807b3e2
_0807b3a2:
	cmp		r0, #0x1a
	beq		_0807b3d8
	b		_0807b3e2
_0807b3a8:
	ldr		r4, _0807b3c4
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0807c4a4
	add		r0, r5, #0x0
	add		r0, #0x11
	add		r4, #0x8
	add		r1, r4, #0x0
	mov		r2, #0x10
	bl		sub_0807b344
	b		_0807b3e2

.incbin "base.gba", 0x7B3C2, 0x2

_0807b3c4:	.4byte 0x03007313

_0807b3c8:
	ldr		r1, _0807b3d4
	add		r0, r5, #0x0
	mov		r2, #0x20
	bl		sub_0807b344
	b		_0807b3e2

_0807b3d4:	.4byte 0x030072A9

_0807b3d8:
	ldr		r1, _0807b3e8
	add		r0, r5, #0x0
	mov		r2, #0x1e
	bl		sub_0807b344
_0807b3e2:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0807b3e8:	.4byte 0x030072C9
	thumb_func_end sub_0807b390

	thumb_func_start sub_0807b3ec
sub_0807b3ec:
	push	{ r4, r5, lr }
	ldr		r4, _0807b410
	add		r0, r4, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_0807b452
	add		r0, r4, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x18
	beq		_0807b41a
	cmp		r0, #0x18
	bgt		_0807b414
	cmp		r0, #0x11
	beq		_0807b452
	b		_0807b444

.incbin "base.gba", 0x7B40E, 0x2

_0807b410:	.4byte 0x03006E20

_0807b414:
	cmp		r0, #0x19
	beq		_0807b428
	b		_0807b444
_0807b41a:
	bl		sub_08074500
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xfa
	b		_0807b450
_0807b428:
	add		r2, r4, #0x0
	add		r2, #0x66
	mov		r1, #0x0
	mov		r0, #0x14
	strb	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x62
	ldrb	r0, [r1, #0x0]
	mov		r0, #0xfa
	strb	r0, [r1, #0x0]
	b		_0807b452
_0807b444:
	bl		sub_08074500
	ldr		r0, _0807b470
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xfb
_0807b450:
	strb	r1, [r0, #0x0]
_0807b452:
	ldr		r5, _0807b470
	add		r4, r5, #0x0
	add		r4, #0x62
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x4
	beq		_0807b50c
	cmp		r0, #0x4
	bgt		_0807b47e
	cmp		r0, #0x1
	beq		_0807b49a
	cmp		r0, #0x1
	bgt		_0807b474
	cmp		r0, #0x0
	beq		_0807b494
	b		_0807b6c2

_0807b470:	.4byte 0x03006E20

_0807b474:
	cmp		r0, #0x2
	beq		_0807b4aa
	cmp		r0, #0x3
	beq		_0807b4c4
	b		_0807b6c2
_0807b47e:
	cmp		r0, #0x6
	beq		_0807b560
	cmp		r0, #0x6
	blt		_0807b556
	cmp		r0, #0xfa
	bne		_0807b48c
	b		_0807b610
_0807b48c:
	cmp		r0, #0xfb
	bne		_0807b492
	b		_0807b61e
_0807b492:
	b		_0807b6c2
_0807b494:
	bl		sub_08072c88
	b		_0807b614
_0807b49a:
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	mov		r0, #0x1
	bl		sub_080733b8
	b		_0807b6c2
_0807b4aa:
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	mov		r1, #0x0
	mov		r2, #0x80
	bl		sub_0807344c
	b		_0807b614
_0807b4c4:
	add		r0, r5, #0x0
	add		r0, #0xd5
	bl		sub_08076430
	add		r1, r0, #0x0
	cmp		r1, #0x0
	bne		_0807b4da
	add		r2, r5, #0x0
	add		r2, #0x66
	mov		r0, #0x25
	b		_0807b534
_0807b4da:
	ldr		r2, _0807b508
	add		r0, r5, r2
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldr		r1, [r1, #0x0]
	add		r1, #0x1
	mov		r2, #0x80
	bl		sub_0807c304
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	mov		r1, #0x80
	mov		r2, #0x40
	bl		sub_0807344c
	b		_0807b614

_0807b508:	.4byte 0x0000047D

_0807b50c:
	ldr		r2, _0807b544
	add		r0, r5, r2
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldr		r1, [r1, #0x0]
	add		r1, #0x1
	mov		r2, #0x40
	bl		sub_0807c304
	ldr		r1, _0807b548
	add		r0, r5, r1
	bl		sub_080763d0
	add		r1, r0, #0x0
	cmp		r1, #0x0
	bne		_0807b54c
	add		r2, r5, #0x0
	add		r2, #0x66
	mov		r0, #0x14
_0807b534:
	strb	r0, [r2, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x68
	strh	r1, [r0, #0x0]
	ldrb	r0, [r4, #0x0]
	mov		r0, #0xfa
	strb	r0, [r4, #0x0]
	b		_0807b6c2

_0807b544:	.4byte 0x000004FD
_0807b548:	.4byte 0x0000047D

_0807b54c:
	add		r1, r5, #0x0
	add		r1, #0x65
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	b		_0807b610
_0807b556:
	ldr		r0, [r5, #0x70]
	ldr		r1, [r5, #0x74]
	bl		sub_0807b390
	b		_0807b614
_0807b560:
	mov		r0, #0x0
	bl		sub_08072b58
	add		r0, r5, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r1, #0x0
	strh	r0, [r5, #0xc]
	str		r4, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r1, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807b5fc
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807b600
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807b604
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _0807b608
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _0807b60c
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r5, #0x2]
	and		r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r4, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_0807b6c2

_0807b5fc:	.4byte 0xfffffdff
_0807b600:	.4byte 0xfffffbff
_0807b604:	.4byte 0xffffdfff
_0807b608:	.4byte 0x0000FFF7
_0807b60c:	.4byte 0x0000FFEF

_0807b610:
	bl		sub_08072da8
_0807b614:
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	b		_0807b6c2
_0807b61e:
	add		r0, r5, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r1, #0x0
	strh	r0, [r5, #0xc]
	str		r4, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r1, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807b6c8
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807b6cc
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807b6d0
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _0807b6d4
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _0807b6d8
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r5, #0x2]
	and		r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r4, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	add		r0, r5, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x5e
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
_0807b6c2:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0807b6c8:	.4byte 0xfffffdff
_0807b6cc:	.4byte 0xfffffbff
_0807b6d0:	.4byte 0xffffdfff
_0807b6d4:	.4byte 0x0000FFF7
_0807b6d8:	.4byte 0x0000FFEF
	thumb_func_end sub_0807b3ec

	thumb_func_start sub_0807b6dc
sub_0807b6dc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_08075358
	mov		r0, #0x1c
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_0807b6f4
	bl		sub_0807537c
	b		_0807b726
_0807b6f4:
	ldr		r0, _0807b72c
	str		r4, [r0, #0x70]
	ldr		r4, _0807b730
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	mov		r0, #0x1c
	mov		r1, #0x0
	bl		sub_0807539c
	bl		sub_0807537c
	ldr		r0, [r4, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0xf
	and		r0, r1
	cmp		r0, #0x0
	beq		_0807b722
	ldr		r0, [r4, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_0807b726
_0807b722:
	bl		sub_0807be3c
_0807b726:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0807b72c:	.4byte 0x03006E20
_0807b730:	.4byte Timer3Counter_Reload
	thumb_func_end sub_0807b6dc

	thumb_func_start sub_0807b734
sub_0807b734:
	push	{ r4, r5, lr }
	ldr		r4, _0807b768
	add		r0, r4, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_0807b77a
	add		r0, r4, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x11
	beq		_0807b77a
	cmp		r0, #0x11
	blt		_0807b76c
	cmp		r0, #0x19
	bgt		_0807b76c
	cmp		r0, #0x18
	blt		_0807b76c
	bl		sub_08074500
	add		r0, r4, #0x0
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xfa
	b		_0807b778

.incbin "base.gba", 0x7B766, 0x2

_0807b768:	.4byte 0x03006E20

_0807b76c:
	bl		sub_08074500
	ldr		r0, _0807b798
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xfb
_0807b778:
	strb	r1, [r0, #0x0]
_0807b77a:
	ldr		r5, _0807b798
	add		r4, r5, #0x0
	add		r4, #0x62
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x3
	beq		_0807b7e2
	cmp		r0, #0x3
	bgt		_0807b79c
	cmp		r0, #0x1
	beq		_0807b7b8
	cmp		r0, #0x1
	bgt		_0807b7c8
	cmp		r0, #0x0
	beq		_0807b7b2
	b		_0807b986

_0807b798:	.4byte 0x03006E20

_0807b79c:
	cmp		r0, #0x5
	beq		_0807b824
	cmp		r0, #0x5
	blt		_0807b80e
	cmp		r0, #0xfa
	bne		_0807b7aa
	b		_0807b8d4
_0807b7aa:
	cmp		r0, #0xfb
	bne		_0807b7b0
	b		_0807b8e2
_0807b7b0:
	b		_0807b986
_0807b7b2:
	bl		sub_08072c88
	b		_0807b8d8
_0807b7b8:
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	mov		r0, #0x1
	bl		sub_080733b8
	b		_0807b986
_0807b7c8:
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	mov		r1, #0x0
	mov		r2, #0x80
	bl		sub_0807344c
	b		_0807b8d8
_0807b7e2:
	ldr		r0, [r5, #0x70]
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldr		r1, [r1, #0x0]
	add		r1, #0x1
	mov		r2, #0x80
	bl		sub_0807c304
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	mov		r1, #0x80
	mov		r2, #0x40
	bl		sub_0807344c
	b		_0807b8d8
_0807b80e:
	ldr		r0, [r5, #0x70]
	add		r0, #0x80
	mov		r2, #0xf2
	lsl		r2, r2, #0x1
	add		r1, r5, r2
	ldr		r1, [r1, #0x0]
	add		r1, #0x1
	mov		r2, #0x40
	bl		sub_0807c304
	b		_0807b8d4
_0807b824:
	mov		r0, #0x0
	bl		sub_08072b58
	add		r0, r5, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r1, #0x0
	strh	r0, [r5, #0xc]
	str		r4, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r1, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807b8c0
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807b8c4
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807b8c8
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _0807b8cc
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _0807b8d0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r5, #0x2]
	and		r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r4, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_0807b986

_0807b8c0:	.4byte 0xfffffdff
_0807b8c4:	.4byte 0xfffffbff
_0807b8c8:	.4byte 0xffffdfff
_0807b8cc:	.4byte 0x0000FFF7
_0807b8d0:	.4byte 0x0000FFEF

_0807b8d4:
	bl		sub_08072da8
_0807b8d8:
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	b		_0807b986
_0807b8e2:
	add		r0, r5, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r1, #0x0
	strh	r0, [r5, #0xc]
	str		r4, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r1, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807b98c
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807b990
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807b994
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _0807b998
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _0807b99c
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r5, #0x2]
	and		r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r4, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	add		r0, r5, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
_0807b986:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0807b98c:	.4byte 0xfffffdff
_0807b990:	.4byte 0xfffffbff
_0807b994:	.4byte 0xffffdfff
_0807b998:	.4byte 0x0000FFF7
_0807b99c:	.4byte 0x0000FFEF
	thumb_func_end sub_0807b734

	thumb_func_start sub_0807b9a0
sub_0807b9a0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_08075358
	mov		r0, #0x1d
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_0807b9b8
	bl		sub_0807537c
	b		_0807b9ea
_0807b9b8:
	ldr		r0, _0807b9f0
	str		r4, [r0, #0x70]
	ldr		r4, _0807b9f4
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	mov		r0, #0x1d
	mov		r1, #0x0
	bl		sub_0807539c
	bl		sub_0807537c
	ldr		r0, [r4, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0xf
	and		r0, r1
	cmp		r0, #0x0
	beq		_0807b9e6
	ldr		r0, [r4, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_0807b9ea
_0807b9e6:
	bl		sub_0807be3c
_0807b9ea:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0807b9f0:	.4byte 0x03006E20
_0807b9f4:	.4byte Timer3Counter_Reload
	thumb_func_end sub_0807b9a0

	thumb_func_start sub_0807b9f8
sub_0807b9f8:
	push	{ r4, r5, lr }
	ldr		r1, _0807ba1c
	add		r0, r1, #0x0
	add		r0, #0x45
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xee
	bne		_0807ba46
	add		r0, r1, #0x0
	add		r0, #0x50
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x18
	beq		_0807ba24
	cmp		r0, #0x18
	bgt		_0807ba20
	cmp		r0, #0x11
	beq		_0807ba46
	b		_0807ba38

.incbin "base.gba", 0x7BA1A, 0x2

_0807ba1c:	.4byte 0x03006E20

_0807ba20:
	cmp		r0, #0x1a
	bne		_0807ba38
_0807ba24:
	bl		sub_08074500
	ldr		r0, _0807ba34
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xfa
	b		_0807ba44

.incbin "base.gba", 0x7BA32, 0x2

_0807ba34:	.4byte 0x03006E20

_0807ba38:
	bl		sub_08074500
	ldr		r0, _0807ba64
	add		r0, #0x62
	ldrb	r1, [r0, #0x0]
	mov		r1, #0xfb
_0807ba44:
	strb	r1, [r0, #0x0]
_0807ba46:
	ldr		r5, _0807ba64
	add		r4, r5, #0x0
	add		r4, #0x62
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x3
	beq		_0807bab2
	cmp		r0, #0x3
	bgt		_0807ba68
	cmp		r0, #0x1
	beq		_0807ba86
	cmp		r0, #0x1
	bgt		_0807ba96
	cmp		r0, #0x0
	beq		_0807ba80
	b		_0807bc32

_0807ba64:	.4byte 0x03006E20

_0807ba68:
	cmp		r0, #0x5
	beq		_0807bad0
	cmp		r0, #0x5
	bge		_0807ba72
	b		_0807bb80
_0807ba72:
	cmp		r0, #0xfa
	bne		_0807ba78
	b		_0807bb80
_0807ba78:
	cmp		r0, #0xfb
	bne		_0807ba7e
	b		_0807bb8e
_0807ba7e:
	b		_0807bc32
_0807ba80:
	bl		sub_08072c88
	b		_0807bb84
_0807ba86:
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	mov		r0, #0x1
	bl		sub_080733b8
	b		_0807bc32
_0807ba96:
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	ldr		r2, [r5, #0x70]
	mov		r1, #0x0
	mov		r3, #0x80
	bl		sub_08073500
	b		_0807bb84
_0807bab2:
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0xd4
	str		r1, [r0, #0x4]
	ldr		r2, [r5, #0x70]
	add		r2, #0x80
	mov		r1, #0x80
	mov		r3, #0x40
	bl		sub_08073500
	b		_0807bb84
_0807bad0:
	mov		r0, #0x0
	bl		sub_08072b58
	add		r0, r5, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r1, #0x0
	strh	r0, [r5, #0xc]
	str		r4, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r1, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807bb6c
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807bb70
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807bb74
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _0807bb78
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _0807bb7c
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r5, #0x2]
	and		r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r4, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
	b		_0807bc32

_0807bb6c:	.4byte 0xfffffdff
_0807bb70:	.4byte 0xfffffbff
_0807bb74:	.4byte 0xffffdfff
_0807bb78:	.4byte 0x0000FFF7
_0807bb7c:	.4byte 0x0000FFEF

_0807bb80:
	bl		sub_08072da8
_0807bb84:
	ldrb	r0, [r4, #0x0]
	add		r0, #0x1
	ldrb	r1, [r4, #0x0]
	strb	r0, [r4, #0x0]
	b		_0807bc32
_0807bb8e:
	add		r0, r5, #0x0
	add		r0, #0x5c
	ldrb	r1, [r0, #0x0]
	mov		r4, #0x0
	strb	r4, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_08072b58
	ldrb	r0, [r5, #0x5]
	lsl		r0, r0, #0x1
	add		r1, r5, #0x0
	add		r1, #0x8
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r5, #0xc]
	mov		r1, #0x0
	strh	r0, [r5, #0xc]
	str		r4, [r5, #0x3c]
	ldrb	r0, [r5, #0x4]
	strb	r1, [r5, #0x4]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807bc38
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807bc3c
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	ldr		r1, _0807bc40
	and		r0, r1
	str		r0, [r5, #0x40]
	ldr		r0, [r5, #0x40]
	mov		r1, #0x5
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x40]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _0807bc44
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	ldr		r0, _0807bc48
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	mov		r4, #0xff
	add		r0, r4, #0x0
	and		r0, r1
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	bl		sub_0807c6e4
	ldrh	r0, [r5, #0x2]
	and		r4, r0
	ldrh	r0, [r5, #0x2]
	strh	r4, [r5, #0x2]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r5, #0x2]
	strh	r0, [r5, #0x2]
	add		r0, r5, #0x0
	add		r0, #0x66
	ldrb	r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x68
	ldrh	r1, [r1, #0x0]
	bl		sub_080753ec
	mov		r0, #0x0
	mov		r1, #0x0
	bl		sub_0807539c
_0807bc32:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0807bc38:	.4byte 0xfffffdff
_0807bc3c:	.4byte 0xfffffbff
_0807bc40:	.4byte 0xffffdfff
_0807bc44:	.4byte 0x0000FFF7
_0807bc48:	.4byte 0x0000FFEF
	thumb_func_end sub_0807b9f8

	thumb_func_start sub_0807bc4c
sub_0807bc4c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	bl		sub_08075358
	mov		r0, #0x18
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_0807bc64
	bl		sub_0807537c
	b		_0807bcda
_0807bc64:
	add		r0, r5, #0x0
	mov		r1, #0x24
	mov		r2, #0x0
	bl		sub_0807c328
	ldr		r4, _0807bc94
	add		r0, r4, #0x0
	add		r0, #0x65
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0807bc9c
	mov		r0, #0x18
	add		r1, r5, #0x0
	bl		sub_0807b390
	bl		sub_0807537c
	ldrh	r0, [r4, #0x2]
	ldr		r1, _0807bc98
	and		r1, r0
	ldrh	r0, [r4, #0x2]
	strh	r1, [r4, #0x2]
	b		_0807bcda

.incbin "base.gba", 0x7BC92, 0x2

_0807bc94:	.4byte 0x03006E20
_0807bc98:	.4byte 0x0000FFFE

_0807bc9c:
	mov		r0, #0x18
	str		r0, [r4, #0x70]
	str		r5, [r4, #0x74]
	ldr		r5, _0807bce0
	mov		r0, #0x0
	str		r0, [r5, #0x0]
	mov		r0, #0x1b
	mov		r1, #0x0
	bl		sub_0807539c
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x1
	ldrh	r2, [r4, #0x2]
	orr		r0, r1
	strh	r0, [r4, #0x2]
	bl		sub_0807537c
	ldr		r0, [r5, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0xf
	and		r0, r1
	cmp		r0, #0x0
	beq		_0807bcd6
	ldr		r0, [r5, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_0807bcda
_0807bcd6:
	bl		sub_0807be3c
_0807bcda:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0807bce0:	.4byte Timer3Counter_Reload
	thumb_func_end sub_0807bc4c

	thumb_func_start sub_0807bce4
sub_0807bce4:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	bl		sub_08075358
	mov		r0, #0x19
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_0807bcfc
	bl		sub_0807537c
	b		_0807bd70
_0807bcfc:
	ldr		r4, _0807bd20
	add		r0, r4, #0x0
	add		r0, #0x65
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0807bd28
	mov		r0, #0x19
	add		r1, r5, #0x0
	bl		sub_0807b390
	bl		sub_0807537c
	ldrh	r0, [r4, #0x2]
	ldr		r1, _0807bd24
	and		r1, r0
	ldrh	r0, [r4, #0x2]
	strh	r1, [r4, #0x2]
	b		_0807bd70

_0807bd20:	.4byte 0x03006E20
_0807bd24:	.4byte 0x0000FFFE

_0807bd28:
	add		r0, r5, #0x0
	mov		r1, #0x21
	mov		r2, #0x0
	bl		sub_0807c328
	mov		r0, #0x19
	str		r0, [r4, #0x70]
	str		r5, [r4, #0x74]
	ldr		r5, _0807bd78
	mov		r0, #0x0
	str		r0, [r5, #0x0]
	mov		r0, #0x1b
	mov		r1, #0x0
	bl		sub_0807539c
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x1
	ldrh	r2, [r4, #0x2]
	orr		r0, r1
	strh	r0, [r4, #0x2]
	bl		sub_0807537c
	ldr		r0, [r5, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0xf
	and		r0, r1
	cmp		r0, #0x0
	beq		_0807bd6c
	ldr		r0, [r5, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_0807bd70
_0807bd6c:
	bl		sub_0807be3c
_0807bd70:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7BD76, 0x2

_0807bd78:	.4byte Timer3Counter_Reload
	thumb_func_end sub_0807bce4

	thumb_func_start sub_0807bd7c
sub_0807bd7c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	bl		sub_08075358
	mov		r0, #0x1a
	bl		sub_080755c4
	cmp		r0, #0x0
	bne		_0807bd94
	bl		sub_0807537c
	b		_0807be0a
_0807bd94:
	add		r0, r5, #0x0
	mov		r1, #0x1f
	mov		r2, #0x0
	bl		sub_0807c328
	ldr		r4, _0807bdc4
	add		r0, r4, #0x0
	add		r0, #0x65
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0807bdcc
	mov		r0, #0x1a
	add		r1, r5, #0x0
	bl		sub_0807b390
	bl		sub_0807537c
	ldrh	r0, [r4, #0x2]
	ldr		r1, _0807bdc8
	and		r1, r0
	ldrh	r0, [r4, #0x2]
	strh	r1, [r4, #0x2]
	b		_0807be0a

.incbin "base.gba", 0x7BDC2, 0x2

_0807bdc4:	.4byte 0x03006E20
_0807bdc8:	.4byte 0x0000FFFE

_0807bdcc:
	mov		r0, #0x1a
	str		r0, [r4, #0x70]
	str		r5, [r4, #0x74]
	ldr		r5, _0807be10
	mov		r0, #0x0
	str		r0, [r5, #0x0]
	mov		r0, #0x1b
	mov		r1, #0x0
	bl		sub_0807539c
	ldrh	r1, [r4, #0x2]
	mov		r0, #0x1
	ldrh	r2, [r4, #0x2]
	orr		r0, r1
	strh	r0, [r4, #0x2]
	bl		sub_0807537c
	ldr		r0, [r5, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0xf
	and		r0, r1
	cmp		r0, #0x0
	beq		_0807be06
	ldr		r0, [r5, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_0807be0a
_0807be06:
	bl		sub_0807be3c
_0807be0a:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0807be10:	.4byte Timer3Counter_Reload
	thumb_func_end sub_0807bd7c

	thumb_func_start sub_0807be14
sub_0807be14:
	push	{ lr }
	ldr		r1, _0807be24
	mov		r2, #0x14
	bl		sub_0807b344
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7BE22, 0x2

_0807be24:	.4byte 0x03007164
	thumb_func_end sub_0807be14

	thumb_func_start sub_0807be28
sub_0807be28:
	push	{ lr }
	ldr		r1, _0807be38
	mov		r2, #0x14
	bl		sub_0807b344
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7BE36, 0x2

_0807be38:	.4byte 0x03007178
	thumb_func_end sub_0807be28

	thumb_func_start sub_0807be3c
sub_0807be3c:
	push	{ lr }
	ldr		r0, _0807bee8
	add		r2, r0, #0x0
	add		r2, #0x61
	ldrb	r1, [r2, #0x0]
	add		r3, r0, #0x0
	cmp		r1, #0x1
	beq		_0807be92
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x2
	beq		_0807be92
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x3
	beq		_0807be92
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x4
	beq		_0807be92
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x8
	beq		_0807be92
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x9
	beq		_0807be92
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x5
	beq		_0807be92
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x1b
	beq		_0807be92
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x1c
	beq		_0807be92
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x1d
	beq		_0807be92
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x1e
	beq		_0807be92
	ldr		r0, [r3, #0x40]
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0807bee4
_0807be92:
	ldr		r0, [r3, #0x40]
	mov		r1, #0x4
	and		r0, r1
	cmp		r0, #0x0
	bne		_0807bee4
	ldrh	r1, [r3, #0x2]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_0807bee4
	ldrh	r1, [r3, #0x2]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0807bee4
	ldr		r0, [r3, #0x40]
	mov		r1, #0x80
	lsl		r1, r1, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0807beca
	add		r0, r3, #0x0
	add		r0, #0x44
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x15
	bne		_0807beca
	bl		sub_08076ed4
_0807beca:
	ldr		r0, _0807bee8
	add		r1, r0, #0x0
	add		r1, #0x61
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0807bee4
	ldr		r0, _0807beec
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	bl		sub_0807d7d0
_0807bee4:
	pop		{ r0 }
	bx		r0

_0807bee8:	.4byte 0x03006E20
_0807beec:	.4byte 0x0820beec
	thumb_func_end sub_0807be3c

	thumb_func_start sub_0807bef0
sub_0807bef0:
	ldr		r0, _0807bef8
	ldrh	r0, [r0, #0x2]
	bx		lr

.incbin "base.gba", 0x7BEF6, 0x2

_0807bef8:	.4byte 0x03006E20
	thumb_func_end sub_0807bef0

	thumb_func_start sub_0807befc
sub_0807befc:
	push	{ r4, r5, lr }
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	mov		r2, #0x0
	ldr		r0, _0807bf44
	cmp		r1, r0
	bls		_0807bf26
	ldr		r3, _0807bf48
	add		r5, r3, #0x0
	mov		r3, #0x80
	lsl		r3, r3, #0x5
	add		r4, r3, #0x0
	add		r3, r0, #0x0
_0807bf16:
	add		r0, r1, r5
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	add		r0, r2, r4
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r1, r3
	bhi		_0807bf16
_0807bf26:
	cmp		r1, #0x63
	bls		_0807bf5c
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r3, r0, #0x0
_0807bf30:
	add		r0, r1, #0x0
	sub		r0, #0x64
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	add		r0, r2, r3
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r1, #0x63
	bhi		_0807bf30
	b		_0807bf5c

_0807bf44:	.4byte 0x000003E7
_0807bf48:	.4byte 0xFFFFFC18

_0807bf4c:
	add		r0, r1, #0x0
	sub		r0, #0xa
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	add		r0, r2, #0x0
	add		r0, #0x10
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_0807bf5c:
	cmp		r1, #0x9
	bhi		_0807bf4c
	add		r0, r2, r1
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	add		r0, r2, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7BF6E, 0x2
	thumb_func_end sub_0807befc

	thumb_func_start sub_0807bf70
sub_0807bf70:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r2, _0807bf8c
	ldrh	r1, [r2, #0x2]
	mov		r3, #0x2
	add		r0, r3, #0x0
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_0807bf90
	strh	r0, [r4, #0x0]
	mov		r0, #0x0
	b		_0807c04a

_0807bf8c:	.4byte 0x03006E20

_0807bf90:
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x84
	beq		_0807bfbc
	cmp		r0, #0x84
	bgt		_0807bfa0
	cmp		r0, #0x83
	beq		_0807bfaa
	b		_0807bfec
_0807bfa0:
	cmp		r0, #0x85
	beq		_0807bfdc
	cmp		r0, #0x87
	beq		_0807bfcc
	b		_0807bfec
_0807bfaa:
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x0
	mov		r0, #0x15
	strb	r0, [r2, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x5e
	ldrh	r2, [r0, #0x0]
	strh	r1, [r0, #0x0]
	b		_0807bfec
_0807bfbc:
	ldrb	r0, [r2, #0x0]
	mov		r0, #0x15
	strb	r0, [r2, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x5e
	ldrh	r0, [r1, #0x0]
	mov		r0, #0x1
	b		_0807bfea
_0807bfcc:
	ldrb	r0, [r2, #0x0]
	mov		r0, #0x15
	strb	r0, [r2, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x5e
	ldrh	r1, [r0, #0x0]
	strh	r3, [r0, #0x0]
	b		_0807bfec
_0807bfdc:
	ldrb	r0, [r2, #0x0]
	mov		r0, #0x15
	strb	r0, [r2, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x5e
	ldrh	r0, [r1, #0x0]
	mov		r0, #0x3
_0807bfea:
	strh	r0, [r1, #0x0]
_0807bfec:
	ldr		r2, _0807c01c
	ldrh	r0, [r2, #0x2]
	ldr		r1, _0807c020
	and		r1, r0
	ldrh	r0, [r2, #0x2]
	strh	r1, [r2, #0x2]
	cmp		r4, #0x0
	beq		_0807c028
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x15
	beq		_0807c00e
	cmp		r0, #0x15
	blt		_0807c024
	cmp		r0, #0x33
	bgt		_0807c024
	cmp		r0, #0x30
	blt		_0807c024
_0807c00e:
	add		r0, r2, #0x0
	add		r0, #0x5e
	ldrh	r0, [r0, #0x0]
	bl		sub_0807befc
	b		_0807c026

.incbin "base.gba", 0x7C01A, 0x2

_0807c01c:	.4byte 0x03006E20
_0807c020:	.4byte 0x0000FFFD

_0807c024:
	mov		r0, #0x0
_0807c026:
	strh	r0, [r4, #0x0]
_0807c028:
	ldr		r3, _0807c050
	ldrh	r1, [r3, #0x2]
	mov		r0, #0x20
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x0
	bne		_0807c048
	add		r0, r3, #0x0
	add		r0, #0x44
	ldrb	r1, [r0, #0x0]
	strb	r2, [r0, #0x0]
	add		r1, r3, #0x0
	add		r1, #0x45
	ldrb	r0, [r1, #0x0]
	strb	r2, [r1, #0x0]
_0807c048:
	ldrb	r0, [r3, #0x0]
_0807c04a:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0807c050:	.4byte 0x03006E20
	thumb_func_end sub_0807bf70

	thumb_func_start sub_0807c054
sub_0807c054:
	push	{ r4, lr }
	add		r3, r0, #0x0
	ldr		r0, _0807c084
	ldrb	r2, [r3, #0x0]
	add		r1, r3, #0x1
	str		r1, [r0, #0x0]
	add		r4, r0, #0x0
	cmp		r2, #0x0
	beq		_0807c074
	add		r2, r4, #0x0
_0807c068:
	ldr		r0, [r2, #0x0]
	ldrb	r1, [r0, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	cmp		r1, #0x0
	bne		_0807c068
_0807c074:
	ldr		r0, [r4, #0x0]
	sub		r0, r0, r3
	sub		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0807c084:	.4byte 0x030024C8
	thumb_func_end sub_0807c054

	thumb_func_start sub_0807c088
sub_0807c088:
	add		r2, r0, #0x0
	ldr		r3, _0807c0b0
	str		r1, [r3, #0x0]
	ldrb	r0, [r1, #0x0]
	strb	r0, [r2, #0x0]
	add		r2, #0x1
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	beq		_0807c0ac
_0807c09a:
	ldr		r1, [r3, #0x0]
	add		r0, r1, #0x1
	str		r0, [r3, #0x0]
	ldrb	r0, [r1, #0x1]
	strb	r0, [r2, #0x0]
	add		r2, #0x1
	ldrb	r0, [r1, #0x1]
	cmp		r0, #0x0
	bne		_0807c09a
_0807c0ac:
	bx		lr

.incbin "base.gba", 0x7C0AE, 0x2

_0807c0b0:	.4byte 0x030024CC
	thumb_func_end sub_0807c088

	thumb_func_start sub_0807c0b4
sub_0807c0b4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	ldr		r1, _0807c0c4
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r5, r1, #0x0
	b		_0807c0d4

_0807c0c4:	.4byte 0x030024D0

_0807c0c8:
	add		r4, #0x1
	add		r3, #0x1
	sub		r2, #0x1
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
_0807c0d4:
	cmp		r2, #0x0
	beq		_0807c0ec
	ldrb	r0, [r3, #0x0]
	strb	r0, [r4, #0x0]
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_0807c0c8
	cmp		r2, #0x0
	beq		_0807c0ec
	ldr		r0, [r5, #0x0]
	add		r0, #0x1
	str		r0, [r5, #0x0]
_0807c0ec:
	ldr		r0, [r5, #0x0]
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0807c0b4

	thumb_func_start sub_0807c0f4
sub_0807c0f4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	cmp		r2, #0x0
	bne		_0807c10e
	b		_0807c12e
_0807c0fe:
	mov		r0, #0x0
	strb	r0, [r4, #0x0]
	add		r0, r1, #0x2
	b		_0807c130
_0807c106:
	mov		r0, #0x0
	strb	r0, [r4, #0x0]
	add		r0, r1, #0x1
	b		_0807c130
_0807c10e:
	ldrb	r5, [r1, #0x0]
	add		r3, r5, #0x0
	cmp		r3, #0xd
	bne		_0807c11c
	ldrb	r0, [r1, #0x1]
	cmp		r0, #0xa
	beq		_0807c0fe
_0807c11c:
	cmp		r3, #0xa
	beq		_0807c106
	strb	r5, [r4, #0x0]
	add		r1, #0x1
	add		r4, #0x1
	sub		r2, #0x1
	cmp		r2, #0x0
	bne		_0807c10e
	strb	r2, [r4, #0x0]
_0807c12e:
	mov		r0, #0x0
_0807c130:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7C136, 0x2
	thumb_func_end sub_0807c0f4

	thumb_func_start sub_0807c138
sub_0807c138:
	add		r2, r0, #0x0
	cmp		r1, #0x1
	bgt		_0807c148
	b		_0807c15c
_0807c140:
	mov		r0, #0x0
	strb	r0, [r2, #0x0]
	add		r0, r2, #0x2
	b		_0807c15e
_0807c148:
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0xd
	bne		_0807c154
	ldrb	r0, [r2, #0x1]
	cmp		r0, #0xa
	beq		_0807c140
_0807c154:
	add		r2, #0x1
	sub		r1, #0x1
	cmp		r1, #0x1
	bne		_0807c148
_0807c15c:
	mov		r0, #0x0
_0807c15e:
	bx		lr
	thumb_func_end sub_0807c138

	thumb_func_start sub_0807c160
sub_0807c160:
	add		r2, r0, #0x0
	b		_0807c166
_0807c164:
	add		r2, #0x1
_0807c166:
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_0807c164
	b		_0807c170
_0807c16e:
	add		r1, #0x1
_0807c170:
	ldrb	r0, [r1, #0x0]
	strb	r0, [r2, #0x0]
	add		r2, #0x1
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_0807c16e
	bx		lr

.incbin "base.gba", 0x7C17E, 0x2
	thumb_func_end sub_0807c160

	thumb_func_start sub_0807c180
sub_0807c180:
	add		r2, r0, #0x0
	add		r3, r1, #0x0
	ldrb	r1, [r2, #0x0]
	cmp		r1, #0x0
	beq		_0807c19e
	lsl		r0, r3, #0x18
	lsr		r0, r0, #0x18
	cmp		r1, r0
	beq		_0807c1ac
_0807c192:
	add		r2, #0x1
	ldrb	r1, [r2, #0x0]
	cmp		r1, #0x0
	beq		_0807c19e
	cmp		r1, r0
	bne		_0807c192
_0807c19e:
	ldrb	r1, [r2, #0x0]
	lsl		r0, r3, #0x18
	lsr		r0, r0, #0x18
	cmp		r1, r0
	beq		_0807c1ac
	mov		r0, #0x0
	b		_0807c1ae
_0807c1ac:
	add		r0, r2, #0x0
_0807c1ae:
	bx		lr
	thumb_func_end sub_0807c180

	thumb_func_start sub_0807c1b0
sub_0807c1b0:
	push	{ r4, r5, lr }
	add		r3, r1, #0x0
	ldr		r2, _0807c1bc
	ldr		r1, _0807c1c0
	str		r0, [r1, #0x0]
	b		_0807c1c6

_0807c1bc:	.4byte 0x030024D8
_0807c1c0:	.4byte 0x030024D4

_0807c1c4:
	ldr		r0, [r2, #0x0]
_0807c1c6:
	ldrb	r1, [r0, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	cmp		r1, #0x0
	bne		_0807c1c4
	lsl		r5, r3, #0x18
	ldr		r1, _0807c1f8
	ldr		r0, _0807c1fc
	ldr		r4, [r0, #0x0]
	lsr		r3, r5, #0x18
_0807c1da:
	ldr		r0, [r1, #0x0]
	sub		r2, r0, #0x1
	str		r2, [r1, #0x0]
	cmp		r2, r4
	beq		_0807c1ea
	ldrb	r0, [r2, #0x0]
	cmp		r0, r3
	bne		_0807c1da
_0807c1ea:
	ldrb	r1, [r2, #0x0]
	lsr		r0, r5, #0x18
	cmp		r1, r0
	beq		_0807c200
	mov		r0, #0x0
	b		_0807c202

.incbin "base.gba", 0x7C1F6, 0x2

_0807c1f8:	.4byte 0x030024D8
_0807c1fc:	.4byte 0x030024D4

_0807c200:
	add		r0, r2, #0x0
_0807c202:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0807c1b0

	thumb_func_start sub_0807c208
sub_0807c208:
	add		r1, r0, #0x0
	b		_0807c20e
_0807c20c:
	add		r1, #0x1
_0807c20e:
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0807c232
	cmp		r0, #0x20
	bne		_0807c20c
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0807c232
	b		_0807c224
_0807c220:
	add		r1, #0x1
	ldrb	r0, [r1, #0x0]
_0807c224:
	cmp		r0, #0x20
	beq		_0807c220
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0807c232
	add		r0, r1, #0x0
	b		_0807c234
_0807c232:
	mov		r0, #0x0
_0807c234:
	bx		lr

.incbin "base.gba", 0x7C236, 0x2
	thumb_func_end sub_0807c208

	thumb_func_start sub_0807c238
sub_0807c238:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	ldr		r2, _0807c254
	mov		r0, #0x0
	str		r0, [r2, #0x0]
	ldrb	r0, [r4, #0x0]
	ldrb	r1, [r3, #0x0]
	sub		r0, r0, r1
	str		r0, [r2, #0x0]
	add		r5, r2, #0x0
	cmp		r0, #0x0
	bne		_0807c26e
	b		_0807c268

_0807c254:	.4byte 0x030024DC

_0807c258:
	add		r4, #0x1
	add		r3, #0x1
	ldrb	r1, [r4, #0x0]
	ldrb	r0, [r3, #0x0]
	sub		r1, r1, r0
	str		r1, [r2, #0x0]
	cmp		r1, #0x0
	bne		_0807c26e
_0807c268:
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x0
	bne		_0807c258
_0807c26e:
	ldr		r0, [r5, #0x0]
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7C276, 0x2
	thumb_func_end sub_0807c238

	thumb_func_start sub_0807c278
sub_0807c278:
	push	{ r4, lr }
	cmp		r2, #0x0
	bne		_0807c286
	mov		r0, #0x0
	b		_0807c29e
_0807c282:
	add		r0, #0x1
	add		r1, #0x1
_0807c286:
	sub		r2, #0x1
	cmp		r2, #0x0
	beq		_0807c298
	ldrb	r3, [r0, #0x0]
	cmp		r3, #0x0
	beq		_0807c298
	ldrb	r4, [r1, #0x0]
	cmp		r3, r4
	beq		_0807c282
_0807c298:
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r1, #0x0]
	sub		r0, r0, r1
_0807c29e:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0807c278

	thumb_func_start sub_0807c2a4
sub_0807c2a4:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	cmp		r2, #0x0
	beq		_0807c2fa
	ldr		r4, _0807c2b4
	ldr		r1, _0807c2b8
	b		_0807c2c8

_0807c2b4:	.4byte 0x030024E0
_0807c2b8:	.4byte 0x030024E4

_0807c2bc:
	ldr		r3, [r4, #0x0]
	cmp		r3, #0x0
	beq		_0807c2f2
	ldr		r0, [r1, #0x0]
	cmp		r3, r0
	bne		_0807c2f2
_0807c2c8:
	ldrb	r0, [r6, #0x0]
	str		r0, [r4, #0x0]
	add		r6, #0x1
	cmp		r0, #0x40
	ble		_0807c2da
	cmp		r0, #0x5a
	bgt		_0807c2da
	add		r0, #0x20
	str		r0, [r4, #0x0]
_0807c2da:
	ldrb	r0, [r5, #0x0]
	str		r0, [r1, #0x0]
	add		r5, #0x1
	cmp		r0, #0x40
	ble		_0807c2ec
	cmp		r0, #0x5a
	bgt		_0807c2ec
	add		r0, #0x20
	str		r0, [r1, #0x0]
_0807c2ec:
	sub		r2, #0x1
	cmp		r2, #0x0
	bne		_0807c2bc
_0807c2f2:
	ldr		r0, [r4, #0x0]
	ldr		r1, [r1, #0x0]
	sub		r0, r0, r1
	b		_0807c2fc
_0807c2fa:
	mov		r0, #0x0
_0807c2fc:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7C302, 0x2
	thumb_func_end sub_0807c2a4

	thumb_func_start sub_0807c304
sub_0807c304:
	push	{ r4, lr }
	add		r3, r0, #0x0
	sub		r2, #0x1
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	beq		_0807c322
	add		r4, r0, #0x0
_0807c314:
	ldrb	r0, [r1, #0x0]
	strb	r0, [r3, #0x0]
	add		r1, #0x1
	add		r3, #0x1
	sub		r2, #0x1
	cmp		r2, r4
	bne		_0807c314
_0807c322:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807c304

	thumb_func_start sub_0807c328
sub_0807c328:
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	sub		r2, #0x1
	mov		r3, #0x1
	neg		r3, r3
	cmp		r2, r3
	beq		_0807c340
_0807c336:
	strb	r1, [r0, #0x0]
	add		r0, #0x1
	sub		r2, #0x1
	cmp		r2, r3
	bne		_0807c336
_0807c340:
	bx		lr

.incbin "base.gba", 0x7C342, 0x2
	thumb_func_end sub_0807c328

	thumb_func_start sub_0807c344
sub_0807c344:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	add		r7, r2, #0x0
	ldr		r0, _0807c398
	str		r1, [r0, #0x0]
	mov		r8, r0
	cmp		r3, #0x0
	beq		_0807c366
	mov		r0, #0x2d
	strb	r0, [r1, #0x0]
	add		r0, r1, #0x1
	mov		r1, r8
	str		r0, [r1, #0x0]
	neg		r5, r5
_0807c366:
	ldr		r1, _0807c39c
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	ldr		r0, _0807c3a0
	mov		r9, r0
	mov		r6, r8
_0807c374:
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	bl		sub_0807de68
	add		r4, r0, #0x0
	mov		r1, r9
	str		r4, [r1, #0x0]
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	bl		sub_0807ddf0
	add		r5, r0, #0x0
	cmp		r4, #0x9
	bls		_0807c3a4
	ldr		r1, [r6, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x57
	b		_0807c3aa

_0807c398:	.4byte 0x030024E8
_0807c39c:	.4byte 0x030024EC
_0807c3a0:	.4byte 0x030024F4

_0807c3a4:
	ldr		r1, [r6, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x30
_0807c3aa:
	strb	r0, [r1, #0x0]
	add		r1, #0x1
	str		r1, [r6, #0x0]
	cmp		r5, #0x0
	bne		_0807c374
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	strb	r5, [r0, #0x0]
	sub		r0, #0x1
	str		r0, [r2, #0x0]
	ldr		r4, _0807c3f4
	mov		r3, r8
	ldr		r2, _0807c3f8
_0807c3c4:
	ldr		r1, [r3, #0x0]
	ldrb	r0, [r1, #0x0]
	strb	r0, [r4, #0x0]
	ldr		r0, [r2, #0x0]
	ldrb	r0, [r0, #0x0]
	strb	r0, [r1, #0x0]
	ldr		r1, [r2, #0x0]
	ldrb	r0, [r4, #0x0]
	strb	r0, [r1, #0x0]
	ldr		r1, [r3, #0x0]
	sub		r1, #0x1
	str		r1, [r3, #0x0]
	ldr		r0, [r2, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	cmp		r0, r1
	bcc		_0807c3c4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7C3F2, 0x2

_0807c3f4:	.4byte 0x030024F0
_0807c3f8:	.4byte 0x030024EC
	thumb_func_end sub_0807c344

	thumb_func_start sub_0807c3fc
sub_0807c3fc:
	push	{ r4, lr }
	add		r4, r1, #0x0
	cmp		r2, #0xa
	bne		_0807c412
	cmp		r0, #0x0
	bge		_0807c412
	mov		r2, #0xa
	mov		r3, #0x1
	bl		sub_0807c344
	b		_0807c41a
_0807c412:
	add		r1, r4, #0x0
	mov		r3, #0x0
	bl		sub_0807c344
_0807c41a:
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7C422, 0x2
	thumb_func_end sub_0807c3fc

	thumb_func_start sub_0807c424
sub_0807c424:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r0, _0807c48c
	ldrb	r1, [r4, #0x0]
	strb	r1, [r0, #0x0]
	add		r4, #0x1
	ldr		r2, _0807c490
	strb	r1, [r2, #0x0]
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r3, r0, #0x0
	add		r6, r2, #0x0
	cmp		r1, #0x2d
	beq		_0807c444
	cmp		r1, #0x2b
	bne		_0807c44a
_0807c444:
	ldrb	r0, [r4, #0x0]
	strb	r0, [r3, #0x0]
	add		r4, #0x1
_0807c44a:
	ldr		r1, _0807c494
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldrb	r0, [r3, #0x0]
	sub		r0, #0x30
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	add		r2, r1, #0x0
	cmp		r0, #0x9
	bhi		_0807c482
	add		r5, r2, #0x0
	add		r1, r3, #0x0
	mov		r3, #0x0
_0807c464:
	lsl		r0, r3, #0x2
	add		r0, r0, r3
	lsl		r0, r0, #0x1
	sub		r0, #0x30
	ldrb	r7, [r1, #0x0]
	add		r3, r0, r7
	ldrb	r0, [r4, #0x0]
	strb	r0, [r1, #0x0]
	add		r4, #0x1
	sub		r0, #0x30
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x9
	bls		_0807c464
	str		r3, [r5, #0x0]
_0807c482:
	ldrb	r0, [r6, #0x0]
	cmp		r0, #0x2d
	beq		_0807c498
	ldr		r0, [r2, #0x0]
	b		_0807c49c

_0807c48c:	.4byte 0x030024F8
_0807c490:	.4byte 0x030024F9
_0807c494:	.4byte 0x030024FC

_0807c498:
	ldr		r0, [r2, #0x0]
	neg		r0, r0
_0807c49c:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x7C4A2, 0x2
	thumb_func_end sub_0807c424

	thumb_func_start sub_0807c4a4
sub_0807c4a4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	ldr		r1, _0807c4fc
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r0, _0807c500
	mov		r9, r0
	ldr		r1, _0807c504
	mov		r8, r1
	mov		r10, r9
	mov		r7, r8
	mov		r0, #0x0
	mov		r12, r0
	ldr		r6, _0807c4fc
	ldr		r5, _0807c508
_0807c4cc:
	ldrb	r0, [r4, #0x0]
	lsr		r2, r0, #0x4
	mov		r1, r10
	strb	r2, [r1, #0x0]
	mov		r1, #0xf
	and		r1, r0
	strb	r1, [r7, #0x0]
	add		r4, #0x1
	cmp		r2, #0xf
	beq		_0807c4f4
	mov		r1, r9
	ldrb	r0, [r1, #0x0]
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	strb	r0, [r3, #0x0]
	add		r3, #0x1
	mov		r1, r8
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0xf
	bne		_0807c50c
_0807c4f4:
	mov		r0, r12
	strb	r0, [r3, #0x0]
	b		_0807c520

.incbin "base.gba", 0x7C4FA, 0x2

_0807c4fc:	.4byte 0x03002500
_0807c500:	.4byte 0x03002504
_0807c504:	.4byte 0x03002505
_0807c508:	.4byte 0x0820bf80

_0807c50c:
	ldrb	r0, [r7, #0x0]
	add		r0, r0, r5
	ldrb	r0, [r0, #0x0]
	strb	r0, [r3, #0x0]
	add		r3, #0x1
	ldr		r0, [r6, #0x0]
	add		r0, #0x1
	str		r0, [r6, #0x0]
	cmp		r0, #0x7
	ble		_0807c4cc
_0807c520:
	ldr		r1, _0807c53c
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x8
	bne		_0807c52c
	mov		r0, #0x0
	strb	r0, [r3, #0x0]
_0807c52c:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7C53A, 0x2

_0807c53c:	.4byte 0x03002500
	thumb_func_end sub_0807c4a4

	thumb_func_start sub_0807c540
sub_0807c540:
	push	{ r4, r5, r6, lr }
	add		r2, r0, #0x0
	ldrb	r1, [r2, #0x0]
	cmp		r1, #0x0
	beq		_0807c58c
	ldr		r5, _0807c57c
	ldr		r0, _0807c580
	ldrb	r6, [r0, #0x0]
_0807c550:
	mov		r0, #0x0
	str		r0, [r5, #0x0]
	cmp		r1, r6
	beq		_0807c570
	ldr		r3, _0807c57c
	ldr		r4, _0807c580
_0807c55c:
	ldr		r0, [r3, #0x0]
	add		r0, #0x1
	str		r0, [r3, #0x0]
	cmp		r0, #0xc
	bhi		_0807c570
	add		r1, r0, r4
	ldrb	r0, [r2, #0x0]
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bne		_0807c55c
_0807c570:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0xd
	bne		_0807c584
	mov		r0, #0x0
	b		_0807c58e

.incbin "base.gba", 0x7C57A, 0x2

_0807c57c:	.4byte 0x03002508
_0807c580:	.4byte 0x0820bf80

_0807c584:
	add		r2, #0x1
	ldrb	r1, [r2, #0x0]
	cmp		r1, #0x0
	bne		_0807c550
_0807c58c:
	mov		r0, #0x1
_0807c58e:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0807c540

	thumb_func_start sub_0807c594
sub_0807c594:
	add		r2, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r0, r1, #0x10
	cmp		r0, #0x2
	bls		_0807c5b4
	add		r1, r0, r2
	sub		r0, r1, #0x2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xd
	bne		_0807c5b4
	sub		r0, r1, #0x1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xa
	bne		_0807c5b4
	mov		r0, #0x1
	b		_0807c5b6
_0807c5b4:
	mov		r0, #0x0
_0807c5b6:
	bx		lr
	thumb_func_end sub_0807c594

	thumb_func_start sub_0807c5b8
sub_0807c5b8:
	push	{ r4, r5, r6, lr }
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	mov		r2, #0x0
	ldr		r3, _0807c5d8
	mov		r5, #0x1
	add		r6, r3, #0x0
	sub		r6, #0x69
_0807c5c8:
	add		r1, r2, r3
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0807c5dc
	strb	r5, [r1, #0x0]
	add		r0, r2, r6
	strb	r4, [r0, #0x0]
	b		_0807c5e2

_0807c5d8:	.4byte 0x03006EEC

_0807c5dc:
	add		r2, #0x1
	cmp		r2, #0x1
	ble		_0807c5c8
_0807c5e2:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0807c5b8

	thumb_func_start sub_0807c5e8
sub_0807c5e8:
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	mov		r2, #0x0
	ldr		r1, _0807c604
	add		r0, r1, #0x0
	add		r0, #0x63
	ldrb	r0, [r0, #0x0]
	cmp		r0, r3
	bne		_0807c608
	add		r0, r1, #0x0
	add		r0, #0xcc
	strb	r2, [r0, #0x0]
	b		_0807c624

.incbin "base.gba", 0x7C602, 0x2

_0807c604:	.4byte 0x03006E20

_0807c608:
	add		r2, #0x1
	cmp		r2, #0x1
	bgt		_0807c624
	add		r0, r1, #0x0
	add		r0, #0x63
	add		r0, r2, r0
	ldrb	r0, [r0, #0x0]
	cmp		r0, r3
	bne		_0807c608
	add		r0, r1, #0x0
	add		r0, #0xcc
	add		r0, r2, r0
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
_0807c624:
	bx		lr

.incbin "base.gba", 0x7C626, 0x36
	thumb_func_end sub_0807c5e8

	thumb_func_start sub_0807c65c
sub_0807c65c:
	mov		r2, #0x0
	mov		r1, #0x0
	ldr		r3, _0807c678
_0807c662:
	add		r0, r1, r3
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0807c66c
	add		r2, #0x1
_0807c66c:
	add		r1, #0x1
	cmp		r1, #0x1
	ble		_0807c662
	add		r0, r2, #0x0
	bx		lr

.incbin "base.gba", 0x7C676, 0x2

_0807c678:	.4byte 0x03006EEC
	thumb_func_end sub_0807c65c

	thumb_func_start sub_0807c67c
sub_0807c67c:
	mov		r3, #0x0
	mov		r1, #0x0
	ldr		r2, _0807c688
	add		r0, r2, #0x0
	add		r0, #0xcc
	b		_0807c698

_0807c688:	.4byte 0x03006E20

_0807c68c:
	add		r1, #0x1
	cmp		r1, #0x1
	bgt		_0807c6a0
	add		r0, r2, #0x0
	add		r0, #0xcc
	add		r0, r1, r0
_0807c698:
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0807c68c
	mov		r3, #0x1
_0807c6a0:
	add		r0, r3, #0x0
	bx		lr
	thumb_func_end sub_0807c67c

	thumb_func_start sub_0807c6a4
sub_0807c6a4:
	add		r3, r0, #0x0
	ldr		r2, _0807c6dc
	add		r1, r2, #0x0
	add		r1, #0x6a
	ldrb	r0, [r3, #0x0]
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bne		_0807c6e0
	add		r1, r2, #0x0
	add		r1, #0x6b
	ldrb	r0, [r3, #0x1]
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bne		_0807c6e0
	add		r1, r2, #0x0
	add		r1, #0x6c
	ldrb	r0, [r3, #0x2]
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bne		_0807c6e0
	add		r1, r2, #0x0
	add		r1, #0x6d
	ldrb	r0, [r3, #0x3]
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bne		_0807c6e0
	mov		r0, #0x1
	b		_0807c6e2

_0807c6dc:	.4byte 0x03006E20

_0807c6e0:
	mov		r0, #0x0
_0807c6e2:
	bx		lr
	thumb_func_end sub_0807c6a4

	thumb_func_start sub_0807c6e4
sub_0807c6e4:
	ldr		r2, _0807c710
	mov		r3, #0x0
	mov		r1, #0x1
	add		r0, r2, #0x0
	add		r0, #0xcd
_0807c6ee:
	strb	r3, [r0, #0x0]
	sub		r0, #0x1
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0807c6ee
	add		r1, r2, #0x0
	add		r1, #0x6a
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	add		r1, #0x1
	strb	r0, [r1, #0x0]
	add		r1, #0x1
	strb	r0, [r1, #0x0]
	add		r1, #0x1
	strb	r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x7C70E, 0x2

_0807c710:	.4byte 0x03006E20
	thumb_func_end sub_0807c6e4

	thumb_func_start sub_0807c714
sub_0807c714:
	push	{ r4, r5, r6, lr }
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6 }
	add		r6, r0, #0x0
	add		r5, r3, #0x0
	ldr		r0, _0807c784
	mov		r9, r0
	mov		r0, #0x0
	mov		r3, r9
	strb	r0, [r3, #0x0]
	ldr		r3, _0807c788
	mov		r8, r3
	strb	r0, [r3, #0x0]
	strb	r0, [r5, #0x0]
	ldr		r4, _0807c78c
	add		r0, r6, #0x0
	add		r3, r4, #0x0
	bl		sub_0807c794
	mov		r0, #0x30
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_0807c808
	mov		r0, #0x24
	add		r1, r4, #0x0
	mov		r2, r9
	bl		sub_0807ca84
	ldr		r4, _0807c790
	mov		r0, #0x30
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_0807cb64
	mov		r0, #0x20
	add		r1, r4, #0x0
	mov		r2, r8
	bl		sub_0807ca84
	add		r0, r5, #0x0
	mov		r1, r8
	bl		sub_0807c088
	add		r5, #0x2c
	add		r0, r5, #0x0
	mov		r1, r9
	bl		sub_0807c088
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0807c784:	.4byte 0x03002538
_0807c788:	.4byte 0x03002598
_0807c78c:	.4byte 0x03002510
_0807c790:	.4byte 0x03002570
	thumb_func_end sub_0807c714

	thumb_func_start sub_0807c794
sub_0807c794:
	push	{ r4, r5, r6, lr }
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6 }
	mov		r9, r0
	add		r6, r1, #0x0
	mov		r8, r2
	add		r5, r3, #0x0
	ldr		r4, _0807c800
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x11
	bl		sub_0807c328
	add		r0, r4, #0x0
	mov		r1, r9
	mov		r2, r8
	bl		sub_0807c850
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x10
	bl		sub_0807c304
	add		r4, r5, #0x0
	add		r4, #0x10
	add		r0, r6, #0x0
	bl		sub_0807c054
	add		r2, r0, #0x0
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_0807c304
	ldr		r4, _0807c804
	add		r0, r6, #0x0
	bl		sub_0807c054
	add		r0, #0x10
	str		r0, [r4, #0x0]
	add		r5, r5, r0
	mov		r2, #0x24
	sub		r2, r2, r0
	add		r0, r5, #0x0
	mov		r1, #0xff
	bl		sub_0807c328
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7C7FE, 0x2

_0807c800:	.4byte 0x030025C8
_0807c804:	.4byte 0x030025DC
	thumb_func_end sub_0807c794

	thumb_func_start sub_0807c808
sub_0807c808:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	mov		r8, r2
	ldr		r4, _0807c848
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x25
	bl		sub_0807c328
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	bl		sub_0807cb64
	ldr		r5, _0807c84c
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0807c8ac
	mov		r0, r8
	add		r1, r5, #0x0
	bl		sub_0807c9ec
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7C846, 0x2

_0807c848:	.4byte 0x030025E0
_0807c84c:	.4byte 0x03002608
	thumb_func_end sub_0807c808

	thumb_func_start sub_0807c850
sub_0807c850:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	mov		r8, r0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	ldr		r4, _0807c8a4
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x64
	bl		sub_0807c328
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x30
	bl		sub_0807c304
	add		r0, r6, #0x0
	bl		sub_0807c054
	add		r2, r0, #0x0
	ldr		r5, _0807c8a8
	str		r2, [r5, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x30
	add		r1, r6, #0x0
	bl		sub_0807c304
	add		r0, r4, #0x0
	bl		sub_0807c054
	add		r1, r0, #0x0
	str		r1, [r5, #0x0]
	add		r0, r4, #0x0
	mov		r2, r8
	bl		sub_0807ca44
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0807c8a4:	.4byte 0x03002630
_0807c8a8:	.4byte 0x03002714
	thumb_func_end sub_0807c850

	thumb_func_start sub_0807c8ac
sub_0807c8ac:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	mov		r9, r0
	str		r1, [sp, #0x0]
	mov		r1, #0x0
	mov		r2, #0x25
	bl		sub_0807c328
	ldr		r1, _0807c9e0
	mov		r0, #0x12
	str		r0, [r1, #0x0]
	ldr		r1, _0807c9e4
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r6, r1, #0x0
	mov		r0, #0x40
	mov		r10, r0
	mov		r1, #0x10
	mov		r8, r1
	mov		r0, #0x4
	mov		r12, r0
	mov		r7, #0x1
_0807c8e0:
	ldr		r4, [r6, #0x0]
	lsl		r3, r4, #0x1
	ldr		r1, _0807c9e8
	str		r3, [r1, #0x0]
	mov		r0, r9
	add		r5, r0, r4
	ldr		r1, [sp, #0x0]
	add		r3, r1, r3
	ldrb	r2, [r3, #0x0]
	mov		r1, r10
	and		r1, r2
	lsl		r1, r1, #0x1
	ldrb	r0, [r5, #0x0]
	orr		r1, r0
	mov		r0, r8
	and		r0, r2
	lsl		r0, r0, #0x2
	orr		r1, r0
	mov		r0, r12
	and		r0, r2
	lsl		r0, r0, #0x3
	orr		r1, r0
	add		r0, r7, #0x0
	and		r0, r2
	lsl		r0, r0, #0x4
	orr		r1, r0
	ldrb	r2, [r3, #0x1]
	mov		r0, r10
	and		r0, r2
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x1b
	orr		r1, r0
	mov		r0, r8
	and		r0, r2
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x1a
	orr		r1, r0
	mov		r0, r12
	and		r0, r2
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x19
	orr		r1, r0
	add		r0, r7, #0x0
	and		r0, r2
	orr		r1, r0
	strb	r1, [r5, #0x0]
	add		r4, #0x1
	str		r4, [r6, #0x0]
	cmp		r4, #0x12
	blt		_0807c8e0
	ldr		r1, _0807c9e4
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x23
	bgt		_0807c9ce
	mov		r12, r1
	ldr		r0, _0807c9e0
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x4]
	mov		r0, #0x80
	mov		r10, r0
	mov		r1, #0x20
	mov		r8, r1
	mov		r7, #0x8
	mov		r6, #0x2
_0807c960:
	mov		r0, r12
	ldr		r4, [r0, #0x0]
	ldr		r1, [sp, #0x4]
	sub		r2, r4, r1
	lsl		r2, r2, #0x1
	ldr		r0, _0807c9e8
	str		r2, [r0, #0x0]
	mov		r1, r9
	add		r5, r1, r4
	ldr		r0, [sp, #0x0]
	add		r2, r0, r2
	ldrb	r3, [r2, #0x0]
	mov		r1, r10
	and		r1, r3
	ldrb	r0, [r5, #0x0]
	orr		r1, r0
	mov		r0, r8
	and		r0, r3
	lsl		r0, r0, #0x1
	orr		r1, r0
	add		r0, r7, #0x0
	and		r0, r3
	lsl		r0, r0, #0x2
	orr		r1, r0
	add		r0, r6, #0x0
	and		r0, r3
	lsl		r0, r0, #0x3
	orr		r1, r0
	ldrb	r2, [r2, #0x1]
	mov		r0, r10
	and		r0, r2
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x1c
	orr		r1, r0
	mov		r0, r8
	and		r0, r2
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x1b
	orr		r1, r0
	add		r0, r7, #0x0
	and		r0, r2
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x1a
	orr		r1, r0
	add		r0, r6, #0x0
	and		r0, r2
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x19
	orr		r1, r0
	strb	r1, [r5, #0x0]
	add		r4, #0x1
	mov		r1, r12
	str		r4, [r1, #0x0]
	cmp		r4, #0x23
	ble		_0807c960
_0807c9ce:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7C9DE, 0x2

_0807c9e0:	.4byte 0x03002694
_0807c9e4:	.4byte 0x03002708
_0807c9e8:	.4byte 0x0300270C
	thumb_func_end sub_0807c8ac

	thumb_func_start sub_0807c9ec
sub_0807c9ec:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	ldr		r1, _0807ca3c
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r5, r1, #0x0
	ldr		r0, _0807ca40
	mov		r12, r0
_0807c9fe:
	ldr		r3, [r5, #0x0]
	add		r4, r7, r3
	add		r0, r6, r3
	ldrb	r1, [r4, #0x0]
	ldrb	r0, [r0, #0x0]
	eor		r1, r0
	mov		r2, #0xb6
	and		r2, r1
	mov		r0, #0x8
	and		r0, r1
	lsl		r0, r0, #0x3
	orr		r2, r0
	mov		r0, #0x1
	and		r0, r1
	lsl		r0, r0, #0x3
	orr		r2, r0
	mov		r0, #0x40
	and		r1, r0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x1e
	orr		r2, r1
	mov		r0, r12
	strb	r2, [r0, #0x0]
	strb	r2, [r4, #0x0]
	add		r3, #0x1
	str		r3, [r5, #0x0]
	cmp		r3, #0x23
	ble		_0807c9fe
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807ca3c:	.4byte 0x03002708
_0807ca40:	.4byte 0x03002698
	thumb_func_end sub_0807c9ec

	thumb_func_start sub_0807ca44
sub_0807ca44:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	mov		r8, r2
	ldr		r4, _0807ca80
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x58
	bl		sub_0807c328
	add		r0, r4, #0x0
	bl		sub_0807cc68
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_0807cc90
	mov		r0, r8
	add		r1, r4, #0x0
	bl		sub_0807cd40
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7CA7E, 0x2

_0807ca80:	.4byte 0x030026A0
	thumb_func_end sub_0807ca44

	thumb_func_start sub_0807ca84
sub_0807ca84:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r12, r0
	add		r4, r1, #0x0
	ldr		r0, _0807cac0
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	cmp		r1, r12
	bge		_0807cb4c
	ldr		r5, _0807cac4
	ldr		r6, _0807cac8
_0807caa0:
	mov		r0, #0x0
	str		r0, [r5, #0x0]
	str		r0, [r6, #0x0]
_0807caa6:
	ldr		r1, _0807cac0
	ldr		r3, [r1, #0x0]
	cmp		r3, r12
	blt		_0807cacc
	ldr		r0, [r6, #0x0]
	mov		r1, #0x3
	sub		r1, r1, r0
	lsl		r1, r1, #0x3
	ldr		r0, [r5, #0x0]
	lsl		r0, r1
	str		r0, [r5, #0x0]
	b		_0807cae8

.incbin "base.gba", 0x7CABE, 0x2

_0807cac0:	.4byte 0x03002714
_0807cac4:	.4byte 0x030026F8
_0807cac8:	.4byte 0x03002708

_0807cacc:
	ldr		r0, [r5, #0x0]
	lsl		r0, r0, #0x8
	ldrb	r1, [r4, #0x0]
	orr		r0, r1
	str		r0, [r5, #0x0]
	add		r4, #0x1
	add		r0, r3, #0x1
	ldr		r7, _0807cb20
	str		r0, [r7, #0x0]
	ldr		r0, [r6, #0x0]
	add		r0, #0x1
	str		r0, [r6, #0x0]
	cmp		r0, #0x2
	ble		_0807caa6
_0807cae8:
	mov		r0, #0x0
	ldr		r1, _0807cb24
	str		r0, [r1, #0x0]
	add		r3, r1, #0x0
	ldr		r7, _0807cb28
	mov		r10, r7
	ldr		r0, _0807cb2c
	mov		r9, r0
	ldr		r1, _0807cb30
	mov		r8, r1
_0807cafc:
	ldr		r1, [r3, #0x0]
	mov		r7, r10
	ldr		r0, [r7, #0x0]
	cmp		r1, r0
	bgt		_0807cb34
	mov		r7, #0x3
	sub		r0, r7, r1
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x1
	mov		r7, r8
	ldr		r0, [r7, #0x0]
	lsr		r0, r1
	mov		r1, #0x3f
	and		r0, r1
	add		r0, r9
	ldrb	r0, [r0, #0x0]
	b		_0807cb36

_0807cb20:	.4byte 0x03002714
_0807cb24:	.4byte 0x03002710
_0807cb28:	.4byte 0x03002708
_0807cb2c:	.4byte 0x0820bf90 @ "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
_0807cb30:	.4byte 0x030026F8

_0807cb34:
	mov		r0, #0x3d
_0807cb36:
	strb	r0, [r2, #0x0]
	add		r2, #0x1
	ldr		r0, [r3, #0x0]
	add		r0, #0x1
	str		r0, [r3, #0x0]
	cmp		r0, #0x3
	ble		_0807cafc
	ldr		r1, _0807cb60
	ldr		r0, [r1, #0x0]
	cmp		r0, r12
	blt		_0807caa0
_0807cb4c:
	mov		r0, #0x0
	strb	r0, [r2, #0x0]
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7CB5E, 0x2

_0807cb60:	.4byte 0x03002714
	thumb_func_end sub_0807ca84

	thumb_func_start sub_0807cb64
sub_0807cb64:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	str		r0, [sp, #0x0]
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	ldr		r1, _0807cbb4
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r2, [sp, #0x0]
	cmp		r0, r2
	bge		_0807cc4a
	ldr		r7, _0807cbb8
	ldr		r6, _0807cbbc
	mov		r8, r6
	ldr		r0, _0807cbc0
	mov		r9, r0
	mov		r10, r1
_0807cb8e:
	mov		r1, #0x0
	str		r1, [r7, #0x0]
	mov		r2, r8
	str		r1, [r2, #0x0]
_0807cb96:
	ldrb	r0, [r4, #0x0]
	sub		r0, #0x20
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x5f
	bhi		_0807cbc8
	ldrb	r0, [r4, #0x0]
	sub		r0, #0x20
	ldr		r6, _0807cbc4
	add		r0, r0, r6
	ldrb	r0, [r0, #0x0]
	mov		r1, r9
	str		r0, [r1, #0x0]
	b		_0807cbce

.incbin "base.gba", 0x7CBB2, 0x2

_0807cbb4:	.4byte 0x03002704
_0807cbb8:	.4byte 0x030026FC
_0807cbbc:	.4byte 0x03002708
_0807cbc0:	.4byte 0x03002700
_0807cbc4:	.4byte 0x0820bfd1

_0807cbc8:
	mov		r0, #0xff
	mov		r2, r9
	str		r0, [r2, #0x0]
_0807cbce:
	add		r4, #0x1
	mov		r6, r10
	ldr		r0, [r6, #0x0]
	add		r0, #0x1
	str		r0, [r6, #0x0]
	mov		r0, r9
	ldr		r1, [r0, #0x0]
	cmp		r1, #0xff
	bne		_0807cbf6
	mov		r1, r8
	ldr		r0, [r1, #0x0]
	mov		r1, #0x4
	sub		r1, r1, r0
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x1
	ldr		r1, [r7, #0x0]
	lsl		r1, r0
	str		r1, [r7, #0x0]
	b		_0807cc0a
_0807cbf6:
	ldr		r0, [r7, #0x0]
	lsl		r0, r0, #0x6
	orr		r0, r1
	str		r0, [r7, #0x0]
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	add		r0, #0x1
	str		r0, [r2, #0x0]
	cmp		r0, #0x3
	ble		_0807cb96
_0807cc0a:
	mov		r6, #0x0
	ldr		r0, _0807cc60
	str		r6, [r0, #0x0]
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	sub		r0, #0x1
	cmp		r6, r0
	bge		_0807cc40
	ldr		r1, _0807cc64
	mov		r12, r1
	ldr		r3, _0807cc60
_0807cc20:
	ldr		r0, [r3, #0x0]
	mov		r6, #0x2
	sub		r0, r6, r0
	lsl		r0, r0, #0x3
	mov		r6, r12
	ldr		r1, [r6, #0x0]
	lsr		r1, r0
	strb	r1, [r5, #0x0]
	add		r5, #0x1
	ldr		r1, [r3, #0x0]
	add		r1, #0x1
	str		r1, [r3, #0x0]
	ldr		r0, [r2, #0x0]
	sub		r0, #0x1
	cmp		r1, r0
	blt		_0807cc20
_0807cc40:
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	ldr		r2, [sp, #0x0]
	cmp		r0, r2
	blt		_0807cb8e
_0807cc4a:
	mov		r0, #0x0
	strb	r0, [r5, #0x0]
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7CC5E, 0x2

_0807cc60:	.4byte 0x03002710
_0807cc64:	.4byte 0x030026FC
	thumb_func_end sub_0807cb64

	thumb_func_start sub_0807cc68
sub_0807cc68:
	mov		r1, #0x0
	str		r1, [r0, #0x14]
	str		r1, [r0, #0x10]
	ldr		r1, _0807cc80
	str		r1, [r0, #0x0]
	ldr		r1, _0807cc84
	str		r1, [r0, #0x4]
	ldr		r1, _0807cc88
	str		r1, [r0, #0x8]
	ldr		r1, _0807cc8c
	str		r1, [r0, #0xc]
	bx		lr

_0807cc80:	.4byte 0x67452301
_0807cc84:	.4byte 0xEFCDAB89
_0807cc88:	.4byte 0x98BADCFE
_0807cc8c:	.4byte 0x10325476
	thumb_func_end sub_0807cc68

	thumb_func_start sub_0807cc90
sub_0807cc90:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	add		r6, r2, #0x0
	ldr		r3, _0807cd14
	ldr		r2, [r5, #0x10]
	lsr		r0, r2, #0x3
	mov		r1, #0x3f
	and		r0, r1
	str		r0, [r3, #0x0]
	lsl		r0, r6, #0x3
	add		r2, r2, r0
	str		r2, [r5, #0x10]
	cmp		r2, r0
	bcs		_0807ccb4
	ldr		r0, [r5, #0x14]
	add		r0, #0x1
	str		r0, [r5, #0x14]
_0807ccb4:
	lsr		r0, r6, #0x1d
	ldr		r1, [r5, #0x14]
	add		r1, r1, r0
	str		r1, [r5, #0x14]
	ldr		r4, _0807cd18
	ldr		r1, [r3, #0x0]
	mov		r0, #0x40
	sub		r2, r0, r1
	str		r2, [r4, #0x0]
	cmp		r6, r2
	bcc		_0807cd20
	add		r0, r1, #0x0
	add		r0, #0x18
	add		r0, r5, r0
	add		r1, r7, #0x0
	bl		sub_0807d744
	add		r1, r5, #0x0
	add		r1, #0x18
	add		r0, r5, #0x0
	bl		sub_0807cdb8
	ldr		r1, _0807cd1c
	ldr		r0, [r4, #0x0]
	str		r0, [r1, #0x0]
	add		r0, #0x3f
	cmp		r0, r6
	bcs		_0807cd06
	add		r4, r1, #0x0
_0807ccee:
	ldr		r1, [r4, #0x0]
	add		r1, r7, r1
	add		r0, r5, #0x0
	bl		sub_0807cdb8
	ldr		r1, [r4, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x40
	str		r0, [r4, #0x0]
	add		r1, #0x7f
	cmp		r1, r6
	bcc		_0807ccee
_0807cd06:
	ldr		r1, _0807cd14
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	add		r3, r1, #0x0
	ldr		r1, _0807cd1c
	b		_0807cd26

.incbin "base.gba", 0x7CD12, 0x2

_0807cd14:	.4byte 0x03002718
_0807cd18:	.4byte 0x0300271C
_0807cd1c:	.4byte 0x03002780

_0807cd20:
	ldr		r1, _0807cd3c
	mov		r0, #0x0
	str		r0, [r1, #0x0]
_0807cd26:
	ldr		r0, [r3, #0x0]
	add		r0, #0x18
	add		r0, r5, r0
	ldr		r2, [r1, #0x0]
	add		r1, r7, r2
	sub		r2, r6, r2
	bl		sub_0807d744
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807cd3c:	.4byte 0x03002780
	thumb_func_end sub_0807cc90

	thumb_func_start sub_0807cd40
sub_0807cd40:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	ldr		r0, _0807cd68
	add		r1, #0x10
	mov		r2, #0x8
	bl		sub_0807d684
	ldr		r1, _0807cd6c
	ldr		r0, [r4, #0x10]
	lsr		r2, r0, #0x3
	mov		r0, #0x3f
	and		r2, r0
	str		r2, [r1, #0x0]
	ldr		r1, _0807cd70
	cmp		r2, #0x37
	bhi		_0807cd74
	mov		r0, #0x38
	b		_0807cd76

.incbin "base.gba", 0x7CD66, 0x2

_0807cd68:	.4byte 0x03002720
_0807cd6c:	.4byte 0x03002728
_0807cd70:	.4byte 0x0300272C

_0807cd74:
	mov		r0, #0x78
_0807cd76:
	sub		r0, r0, r2
	str		r0, [r1, #0x0]
	ldr		r1, _0807cdac
	ldr		r0, _0807cdb0
	ldr		r2, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_0807cc90
	ldr		r1, _0807cdb4
	add		r0, r4, #0x0
	mov		r2, #0x8
	bl		sub_0807cc90
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x10
	bl		sub_0807d684
	add		r0, r4, #0x0
	mov		r1, #0x0
	mov		r2, #0x58
	bl		sub_0807d774
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7CDAA, 0x2

_0807cdac:	.4byte 0x0820c034
_0807cdb0:	.4byte 0x0300272C
_0807cdb4:	.4byte 0x03002720
	thumb_func_end sub_0807cd40

	thumb_func_start sub_0807cdb8
sub_0807cdb8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r7, r0, #0x0
	ldr		r0, [r7, #0x0]
	ldr		r2, _0807d1b4
	str		r0, [r2, #0x0]
	ldr		r0, [r7, #0x4]
	ldr		r3, _0807d1b8
	str		r0, [r3, #0x0]
	ldr		r0, [r7, #0x8]
	ldr		r4, _0807d1bc
	str		r0, [r4, #0x0]
	ldr		r0, [r7, #0xc]
	ldr		r5, _0807d1c0
	str		r0, [r5, #0x0]
	ldr		r6, _0807d1c4
	mov		r9, r6
	mov		r0, r9
	mov		r2, #0x40
	bl		sub_0807d6dc
	ldr		r0, _0807d1b4
	ldr		r2, [r0, #0x0]
	ldr		r1, _0807d1c8
	add		r2, r2, r1
	ldr		r4, _0807d1b8
	ldr		r3, [r4, #0x0]
	ldr		r5, _0807d1bc
	ldr		r4, [r5, #0x0]
	add		r1, r3, #0x0
	and		r1, r4
	ldr		r6, _0807d1c0
	ldr		r5, [r6, #0x0]
	add		r0, r5, #0x0
	bic		r0, r3
	orr		r1, r0
	mov		r0, r9
	ldr		r0, [r0, #0x0]
	add		r1, r1, r0
	add		r2, r2, r1
	mov		r1, #0x19
	mov		r8, r1
	ror		r2, r1
	add		r2, r2, r3
	ldr		r6, _0807d1cc
	add		r5, r5, r6
	add		r1, r2, #0x0
	and		r1, r3
	add		r0, r4, #0x0
	bic		r0, r2
	orr		r1, r0
	mov		r0, r9
	ldr		r0, [r0, #0x4]
	add		r1, r1, r0
	add		r5, r5, r1
	mov		r6, #0x14
	ror		r5, r6
	add		r5, r5, r2
	ldr		r1, _0807d1d0
	add		r1, r1, r4
	mov		r10, r1
	add		r1, r5, #0x0
	and		r1, r2
	add		r0, r3, #0x0
	bic		r0, r5
	orr		r1, r0
	mov		r4, r9
	ldr		r4, [r4, #0x8]
	add		r1, r1, r4
	mov		r0, r10
	add		r4, r0, r1
	mov		r1, #0xf
	mov		r10, r1
	ror		r4, r1
	add		r4, r4, r5
	ldr		r0, _0807d1d4
	add		r0, r0, r3
	mov		r12, r0
	add		r1, r4, #0x0
	and		r1, r5
	add		r0, r2, #0x0
	bic		r0, r4
	orr		r1, r0
	mov		r3, r9
	ldr		r3, [r3, #0xc]
	add		r1, r1, r3
	mov		r0, r12
	add		r3, r0, r1
	mov		r1, #0xa
	mov		r12, r1
	ror		r3, r1
	add		r3, r3, r4
	ldr		r0, _0807d1d8
	add		r0, r2, r0
	str		r0, [sp, #0x0]
	add		r1, r3, #0x0
	and		r1, r4
	add		r0, r5, #0x0
	bic		r0, r3
	orr		r1, r0
	mov		r2, r9
	ldr		r2, [r2, #0x10]
	add		r1, r1, r2
	ldr		r0, [sp, #0x0]
	add		r2, r0, r1
	mov		r1, r8
	ror		r2, r1
	add		r2, r2, r3
	ldr		r0, _0807d1dc
	add		r0, r5, r0
	str		r0, [sp, #0x4]
	add		r1, r2, #0x0
	and		r1, r3
	add		r0, r4, #0x0
	bic		r0, r2
	orr		r1, r0
	mov		r5, r9
	ldr		r5, [r5, #0x14]
	add		r1, r1, r5
	ldr		r0, [sp, #0x4]
	add		r5, r0, r1
	ror		r5, r6
	add		r5, r5, r2
	ldr		r1, _0807d1e0
	add		r1, r4, r1
	str		r1, [sp, #0x8]
	add		r1, r5, #0x0
	and		r1, r2
	add		r0, r3, #0x0
	bic		r0, r5
	orr		r1, r0
	mov		r4, r9
	ldr		r4, [r4, #0x18]
	add		r1, r1, r4
	ldr		r0, [sp, #0x8]
	add		r4, r0, r1
	mov		r1, r10
	ror		r4, r1
	add		r4, r4, r5
	ldr		r0, _0807d1e4
	add		r0, r3, r0
	str		r0, [sp, #0xC]
	add		r1, r4, #0x0
	and		r1, r5
	add		r0, r2, #0x0
	bic		r0, r4
	orr		r1, r0
	mov		r3, r9
	ldr		r3, [r3, #0x1c]
	add		r1, r1, r3
	ldr		r0, [sp, #0xC]
	add		r3, r0, r1
	mov		r1, r12
	ror		r3, r1
	add		r3, r3, r4
	ldr		r0, _0807d1e8
	add		r0, r2, r0
	str		r0, [sp, #0x0]
	add		r1, r3, #0x0
	and		r1, r4
	add		r0, r5, #0x0
	bic		r0, r3
	orr		r1, r0
	mov		r2, r9
	ldr		r2, [r2, #0x20]
	add		r1, r1, r2
	ldr		r0, [sp, #0x0]
	add		r2, r0, r1
	mov		r1, r8
	ror		r2, r1
	add		r2, r2, r3
	ldr		r0, _0807d1ec
	add		r0, r5, r0
	str		r0, [sp, #0x4]
	add		r1, r2, #0x0
	and		r1, r3
	add		r0, r4, #0x0
	bic		r0, r2
	orr		r1, r0
	mov		r5, r9
	ldr		r5, [r5, #0x24]
	add		r1, r1, r5
	ldr		r0, [sp, #0x4]
	add		r5, r0, r1
	ror		r5, r6
	add		r5, r5, r2
	ldr		r1, _0807d1f0
	add		r1, r4, r1
	str		r1, [sp, #0x8]
	add		r1, r5, #0x0
	and		r1, r2
	add		r0, r3, #0x0
	bic		r0, r5
	orr		r1, r0
	mov		r4, r9
	ldr		r4, [r4, #0x28]
	add		r1, r1, r4
	ldr		r0, [sp, #0x8]
	add		r4, r0, r1
	mov		r1, r10
	ror		r4, r1
	add		r4, r4, r5
	ldr		r0, _0807d1f4
	add		r0, r3, r0
	str		r0, [sp, #0xC]
	add		r1, r4, #0x0
	and		r1, r5
	add		r0, r2, #0x0
	bic		r0, r4
	orr		r1, r0
	mov		r3, r9
	ldr		r3, [r3, #0x2c]
	add		r1, r1, r3
	ldr		r0, [sp, #0xC]
	add		r3, r0, r1
	mov		r1, r12
	ror		r3, r1
	add		r3, r3, r4
	ldr		r0, _0807d1f8
	add		r0, r2, r0
	str		r0, [sp, #0x0]
	add		r1, r3, #0x0
	and		r1, r4
	add		r0, r5, #0x0
	bic		r0, r3
	orr		r1, r0
	mov		r2, r9
	ldr		r2, [r2, #0x30]
	add		r1, r1, r2
	ldr		r0, [sp, #0x0]
	add		r2, r0, r1
	mov		r1, r8
	ror		r2, r1
	add		r2, r2, r3
	ldr		r0, _0807d1fc
	add		r0, r0, r5
	mov		r8, r0
	add		r1, r2, #0x0
	and		r1, r3
	add		r0, r4, #0x0
	bic		r0, r2
	orr		r1, r0
	mov		r5, r9
	ldr		r5, [r5, #0x34]
	add		r1, r1, r5
	mov		r0, r8
	add		r5, r0, r1
	ror		r5, r6
	add		r5, r5, r2
	ldr		r1, _0807d200
	add		r4, r4, r1
	add		r1, r5, #0x0
	and		r1, r2
	mvn		r6, r5
	mov		r8, r6
	mov		r0, r8
	and		r0, r3
	orr		r1, r0
	mov		r0, r9
	ldr		r0, [r0, #0x38]
	add		r1, r1, r0
	add		r4, r4, r1
	mov		r1, r10
	ror		r4, r1
	add		r4, r4, r5
	ldr		r6, _0807d204
	add		r6, r6, r3
	mov		r10, r6
	add		r1, r4, #0x0
	and		r1, r5
	mvn		r6, r4
	add		r0, r6, #0x0
	and		r0, r2
	orr		r1, r0
	mov		r0, r9
	ldr		r0, [r0, #0x3c]
	add		r1, r1, r0
	mov		r0, r10
	add		r3, r0, r1
	mov		r1, r12
	ror		r3, r1
	add		r3, r3, r4
	ldr		r0, _0807d208
	add		r0, r0, r2
	mov		r10, r0
	add		r0, r3, #0x0
	and		r0, r5
	mov		r1, r8
	and		r1, r4
	orr		r0, r1
	mov		r2, r9
	ldr		r2, [r2, #0x4]
	add		r0, r0, r2
	mov		r1, r10
	add		r2, r1, r0
	mov		r0, #0x1b
	mov		r10, r0
	ror		r2, r0
	add		r2, r2, r3
	ldr		r1, _0807d20c
	add		r5, r5, r1
	add		r0, r2, #0x0
	and		r0, r4
	and		r6, r3
	orr		r0, r6
	mov		r6, r9
	ldr		r6, [r6, #0x18]
	add		r0, r0, r6
	add		r5, r5, r0
	mov		r0, #0x17
	mov		r12, r0
	ror		r5, r0
	add		r5, r5, r2
	ldr		r1, _0807d210
	add		r4, r4, r1
	add		r0, r5, #0x0
	and		r0, r3
	add		r1, r2, #0x0
	bic		r1, r3
	orr		r0, r1
	mov		r6, r9
	ldr		r6, [r6, #0x2c]
	add		r0, r0, r6
	add		r4, r4, r0
	mov		r0, #0x12
	mov		r8, r0
	ror		r4, r0
	add		r4, r4, r5
	ldr		r1, _0807d214
	add		r3, r3, r1
	add		r0, r4, #0x0
	and		r0, r2
	add		r1, r5, #0x0
	bic		r1, r2
	orr		r0, r1
	mov		r6, r9
	ldr		r6, [r6, #0x0]
	add		r0, r0, r6
	add		r3, r3, r0
	mov		r6, #0xc
	ror		r3, r6
	add		r3, r3, r4
	ldr		r0, _0807d218
	add		r0, r2, r0
	str		r0, [sp, #0x0]
	add		r0, r3, #0x0
	and		r0, r5
	add		r1, r4, #0x0
	bic		r1, r5
	orr		r0, r1
	mov		r1, r9
	ldr		r1, [r1, #0x14]
	add		r0, r0, r1
	ldr		r1, [sp, #0x0]
	add		r2, r1, r0
	mov		r0, r10
	ror		r2, r0
	add		r2, r2, r3
	ldr		r1, _0807d21c
	add		r1, r5, r1
	str		r1, [sp, #0x4]
	add		r0, r2, #0x0
	and		r0, r4
	add		r1, r3, #0x0
	bic		r1, r4
	orr		r0, r1
	mov		r5, r9
	ldr		r5, [r5, #0x28]
	add		r0, r0, r5
	ldr		r1, [sp, #0x4]
	add		r5, r1, r0
	mov		r0, r12
	ror		r5, r0
	add		r5, r5, r2
	ldr		r1, _0807d220
	add		r1, r4, r1
	str		r1, [sp, #0x8]
	add		r0, r5, #0x0
	and		r0, r3
	add		r1, r2, #0x0
	bic		r1, r3
	orr		r0, r1
	mov		r4, r9
	ldr		r4, [r4, #0x3c]
	add		r0, r0, r4
	ldr		r1, [sp, #0x8]
	add		r4, r1, r0
	mov		r0, r8
	ror		r4, r0
	add		r4, r4, r5
	ldr		r1, _0807d224
	add		r1, r3, r1
	str		r1, [sp, #0xC]
	add		r0, r4, #0x0
	and		r0, r2
	add		r1, r5, #0x0
	bic		r1, r2
	orr		r0, r1
	mov		r3, r9
	ldr		r3, [r3, #0x10]
	add		r0, r0, r3
	ldr		r1, [sp, #0xC]
	add		r3, r1, r0
	ror		r3, r6
	add		r3, r3, r4
	ldr		r0, _0807d228
	add		r0, r2, r0
	str		r0, [sp, #0x0]
	add		r0, r3, #0x0
	and		r0, r5
	add		r1, r4, #0x0
	bic		r1, r5
	orr		r0, r1
	mov		r1, r9
	ldr		r1, [r1, #0x24]
	add		r0, r0, r1
	ldr		r1, [sp, #0x0]
	add		r2, r1, r0
	mov		r0, r10
	ror		r2, r0
	add		r2, r2, r3
	ldr		r1, _0807d22c
	add		r1, r5, r1
	str		r1, [sp, #0x4]
	add		r0, r2, #0x0
	and		r0, r4
	add		r1, r3, #0x0
	bic		r1, r4
	orr		r0, r1
	mov		r5, r9
	ldr		r5, [r5, #0x38]
	add		r0, r0, r5
	ldr		r1, [sp, #0x4]
	add		r5, r1, r0
	mov		r0, r12
	ror		r5, r0
	add		r5, r5, r2
	ldr		r1, _0807d230
	add		r1, r4, r1
	str		r1, [sp, #0x8]
	add		r0, r5, #0x0
	and		r0, r3
	add		r1, r2, #0x0
	bic		r1, r3
	orr		r0, r1
	mov		r4, r9
	ldr		r4, [r4, #0xc]
	add		r0, r0, r4
	ldr		r1, [sp, #0x8]
	add		r4, r1, r0
	mov		r0, r8
	ror		r4, r0
	add		r4, r4, r5
	ldr		r1, _0807d234
	add		r1, r3, r1
	str		r1, [sp, #0xC]
	add		r0, r4, #0x0
	and		r0, r2
	add		r1, r5, #0x0
	bic		r1, r2
	orr		r0, r1
	mov		r3, r9
	ldr		r3, [r3, #0x20]
	add		r0, r0, r3
	ldr		r1, [sp, #0xC]
	add		r3, r1, r0
	ror		r3, r6
	add		r3, r3, r4
	ldr		r0, _0807d238
	add		r0, r2, r0
	str		r0, [sp, #0x0]
	add		r0, r3, #0x0
	and		r0, r5
	add		r1, r4, #0x0
	bic		r1, r5
	orr		r0, r1
	mov		r1, r9
	ldr		r1, [r1, #0x34]
	add		r0, r0, r1
	ldr		r1, [sp, #0x0]
	add		r2, r1, r0
	mov		r0, r10
	ror		r2, r0
	add		r2, r2, r3
	ldr		r1, _0807d23c
	add		r1, r1, r5
	mov		r10, r1
	add		r0, r2, #0x0
	and		r0, r4
	add		r1, r3, #0x0
	bic		r1, r4
	orr		r0, r1
	mov		r5, r9
	ldr		r5, [r5, #0x8]
	add		r0, r0, r5
	mov		r1, r10
	add		r5, r1, r0
	mov		r0, r12
	ror		r5, r0
	add		r5, r5, r2
	ldr		r1, _0807d240
	add		r1, r1, r4
	mov		r10, r1
	add		r0, r5, #0x0
	b		_0807d244

.incbin "base.gba", 0x7D1B2, 0x2

_0807d1b4:	.4byte 0x03002730
_0807d1b8:	.4byte 0x03002734
_0807d1bc:	.4byte 0x03002738
_0807d1c0:	.4byte 0x0300273C
_0807d1c4:	.4byte 0x03002740
_0807d1c8:	.4byte 0xD76AA478
_0807d1cc:	.4byte 0xE8C7B756
_0807d1d0:	.4byte 0x242070DB
_0807d1d4:	.4byte 0xC1BDCEEE
_0807d1d8:	.4byte 0xF57C0FAF
_0807d1dc:	.4byte 0x4787C62A
_0807d1e0:	.4byte 0xA8304613
_0807d1e4:	.4byte 0xFD469501
_0807d1e8:	.4byte 0x698098D8
_0807d1ec:	.4byte 0x8B44F7AF
_0807d1f0:	.4byte 0xFFFF5BB1
_0807d1f4:	.4byte 0x895CD7BE
_0807d1f8:	.4byte 0x6B901122
_0807d1fc:	.4byte 0xFD987193
_0807d200:	.4byte 0xA679438E
_0807d204:	.4byte 0x49B40821
_0807d208:	.4byte 0xF61E2562
_0807d20c:	.4byte 0xC040B340
_0807d210:	.4byte 0x265E5A51
_0807d214:	.4byte 0xE9B6C7AA
_0807d218:	.4byte 0xD62F105D
_0807d21c:	.4byte 0x02441453
_0807d220:	.4byte 0xD8A1E681
_0807d224:	.4byte 0xE7D3FBC8
_0807d228:	.4byte 0x21E1CDE6
_0807d22c:	.4byte 0xC33707D6
_0807d230:	.4byte 0xF4D50D87
_0807d234:	.4byte 0x455A14ED
_0807d238:	.4byte 0xA9E3E905
_0807d23c:	.4byte 0xFCEFA3F8
_0807d240:	.4byte 0x676F02D9

_0807d244:
	and		r0, r3
	add		r1, r2, #0x0
	bic		r1, r3
	orr		r0, r1
	mov		r4, r9
	ldr		r4, [r4, #0x1c]
	add		r0, r0, r4
	mov		r1, r10
	add		r4, r1, r0
	mov		r0, r8
	ror		r4, r0
	add		r4, r4, r5
	ldr		r1, _0807d5f0
	add		r1, r1, r3
	mov		r8, r1
	add		r0, r4, #0x0
	and		r0, r2
	add		r1, r5, #0x0
	bic		r1, r2
	orr		r0, r1
	mov		r3, r9
	ldr		r3, [r3, #0x30]
	add		r0, r0, r3
	mov		r1, r8
	add		r3, r1, r0
	ror		r3, r6
	add		r3, r3, r4
	ldr		r6, _0807d5f4
	add		r2, r2, r6
	add		r0, r3, #0x0
	eor		r0, r4
	eor		r0, r5
	mov		r1, r9
	ldr		r1, [r1, #0x14]
	add		r0, r0, r1
	add		r2, r2, r0
	mov		r6, #0x1c
	mov		r10, r6
	ror		r2, r6
	add		r2, r2, r3
	ldr		r0, _0807d5f8
	add		r5, r5, r0
	add		r0, r2, #0x0
	eor		r0, r3
	eor		r0, r4
	mov		r1, r9
	ldr		r1, [r1, #0x20]
	add		r0, r0, r1
	add		r5, r5, r0
	mov		r6, #0x15
	mov		r8, r6
	ror		r5, r6
	add		r5, r5, r2
	ldr		r0, _0807d5fc
	add		r4, r4, r0
	add		r0, r5, #0x0
	eor		r0, r2
	eor		r0, r3
	mov		r1, r9
	ldr		r1, [r1, #0x2c]
	add		r0, r0, r1
	add		r4, r4, r0
	mov		r6, #0x10
	mov		r12, r6
	ror		r4, r6
	add		r4, r4, r5
	ldr		r0, _0807d600
	add		r0, r3, r0
	str		r0, [sp, #0xC]
	add		r0, r4, #0x0
	eor		r0, r5
	eor		r0, r2
	mov		r1, r9
	ldr		r1, [r1, #0x38]
	add		r0, r0, r1
	ldr		r6, [sp, #0xC]
	add		r3, r6, r0
	mov		r1, #0x9
	ror		r3, r1
	add		r3, r3, r4
	ldr		r0, _0807d604
	add		r0, r2, r0
	str		r0, [sp, #0x0]
	add		r0, r3, #0x0
	eor		r0, r4
	eor		r0, r5
	mov		r2, r9
	ldr		r2, [r2, #0x4]
	add		r0, r0, r2
	ldr		r6, [sp, #0x0]
	add		r2, r6, r0
	mov		r0, r10
	ror		r2, r0
	add		r2, r2, r3
	ldr		r6, _0807d608
	add		r6, r5, r6
	add		r0, r2, #0x0
	eor		r0, r3
	eor		r0, r4
	mov		r5, r9
	ldr		r5, [r5, #0x10]
	add		r0, r0, r5
	add		r5, r6, r0
	mov		r6, r8
	ror		r5, r6
	add		r5, r5, r2
	ldr		r0, _0807d60c
	add		r0, r4, r0
	str		r0, [sp, #0x8]
	add		r0, r5, #0x0
	eor		r0, r2
	eor		r0, r3
	mov		r4, r9
	ldr		r4, [r4, #0x1c]
	add		r0, r0, r4
	ldr		r6, [sp, #0x8]
	add		r4, r6, r0
	mov		r0, r12
	ror		r4, r0
	add		r4, r4, r5
	ldr		r6, _0807d610
	add		r6, r3, r6
	add		r0, r4, #0x0
	eor		r0, r5
	eor		r0, r2
	mov		r3, r9
	ldr		r3, [r3, #0x28]
	add		r0, r0, r3
	add		r3, r6, r0
	ror		r3, r1
	add		r3, r3, r4
	ldr		r6, _0807d614
	add		r6, r2, r6
	add		r0, r3, #0x0
	eor		r0, r4
	eor		r0, r5
	mov		r2, r9
	ldr		r2, [r2, #0x34]
	add		r0, r0, r2
	add		r2, r6, r0
	mov		r6, r10
	ror		r2, r6
	add		r2, r2, r3
	ldr		r0, _0807d618
	add		r0, r5, r0
	str		r0, [sp, #0x4]
	add		r0, r2, #0x0
	eor		r0, r3
	eor		r0, r4
	mov		r5, r9
	ldr		r5, [r5, #0x0]
	add		r0, r0, r5
	ldr		r6, [sp, #0x4]
	add		r5, r6, r0
	mov		r0, r8
	ror		r5, r0
	add		r5, r5, r2
	ldr		r6, _0807d61c
	add		r6, r4, r6
	add		r0, r5, #0x0
	eor		r0, r2
	eor		r0, r3
	mov		r4, r9
	ldr		r4, [r4, #0xc]
	add		r0, r0, r4
	add		r4, r6, r0
	mov		r6, r12
	ror		r4, r6
	add		r4, r4, r5
	ldr		r0, _0807d620
	add		r0, r3, r0
	str		r0, [sp, #0xC]
	add		r0, r4, #0x0
	eor		r0, r5
	eor		r0, r2
	mov		r3, r9
	ldr		r3, [r3, #0x18]
	add		r0, r0, r3
	ldr		r6, [sp, #0xC]
	add		r3, r6, r0
	ror		r3, r1
	add		r3, r3, r4
	ldr		r0, _0807d624
	add		r0, r2, r0
	str		r0, [sp, #0x0]
	add		r0, r3, #0x0
	eor		r0, r4
	eor		r0, r5
	mov		r2, r9
	ldr		r2, [r2, #0x24]
	add		r0, r0, r2
	ldr		r6, [sp, #0x0]
	add		r2, r6, r0
	mov		r0, r10
	ror		r2, r0
	add		r2, r2, r3
	ldr		r6, _0807d628
	add		r6, r6, r5
	add		r0, r2, #0x0
	eor		r0, r3
	eor		r0, r4
	mov		r5, r9
	ldr		r5, [r5, #0x30]
	add		r0, r0, r5
	add		r5, r6, r0
	mov		r6, r8
	ror		r5, r6
	add		r5, r5, r2
	ldr		r0, _0807d62c
	add		r0, r0, r4
	mov		r8, r0
	add		r0, r5, #0x0
	eor		r0, r2
	eor		r0, r3
	mov		r4, r9
	ldr		r4, [r4, #0x3c]
	add		r0, r0, r4
	mov		r6, r8
	add		r4, r6, r0
	mov		r0, r12
	ror		r4, r0
	add		r4, r4, r5
	ldr		r6, _0807d630
	add		r6, r6, r3
	add		r0, r4, #0x0
	eor		r0, r5
	eor		r0, r2
	mov		r3, r9
	ldr		r3, [r3, #0x8]
	add		r0, r0, r3
	add		r3, r6, r0
	ror		r3, r1
	add		r3, r3, r4
	ldr		r6, _0807d634
	add		r2, r2, r6
	mvn		r0, r5
	orr		r0, r3
	eor		r0, r4
	mov		r1, r9
	ldr		r1, [r1, #0x0]
	add		r0, r0, r1
	add		r2, r2, r0
	mov		r1, #0x1a
	ror		r2, r1
	add		r2, r2, r3
	ldr		r6, _0807d638
	add		r6, r6, r5
	mvn		r0, r4
	orr		r0, r2
	eor		r0, r3
	mov		r5, r9
	ldr		r5, [r5, #0x1c]
	add		r0, r0, r5
	add		r5, r6, r0
	mov		r6, #0x16
	mov		r12, r6
	ror		r5, r6
	add		r5, r5, r2
	ldr		r0, _0807d63c
	add		r0, r0, r4
	mov		r8, r0
	mvn		r0, r3
	orr		r0, r5
	eor		r0, r2
	mov		r4, r9
	ldr		r4, [r4, #0x38]
	add		r0, r0, r4
	mov		r6, r8
	add		r4, r6, r0
	mov		r0, #0x11
	mov		r8, r0
	ror		r4, r0
	add		r4, r4, r5
	ldr		r6, _0807d640
	add		r6, r6, r3
	mvn		r0, r2
	orr		r0, r4
	eor		r0, r5
	mov		r3, r9
	ldr		r3, [r3, #0x14]
	add		r0, r0, r3
	add		r3, r6, r0
	mov		r6, #0xb
	mov		r10, r6
	ror		r3, r6
	add		r3, r3, r4
	ldr		r0, _0807d644
	add		r0, r2, r0
	str		r0, [sp, #0x0]
	mvn		r0, r5
	orr		r0, r3
	eor		r0, r4
	mov		r2, r9
	ldr		r2, [r2, #0x30]
	add		r0, r0, r2
	ldr		r6, [sp, #0x0]
	add		r2, r6, r0
	ror		r2, r1
	add		r2, r2, r3
	ldr		r0, _0807d648
	add		r0, r5, r0
	str		r0, [sp, #0x4]
	mvn		r0, r4
	orr		r0, r2
	eor		r0, r3
	mov		r5, r9
	ldr		r5, [r5, #0xc]
	add		r0, r0, r5
	ldr		r6, [sp, #0x4]
	add		r5, r6, r0
	mov		r0, r12
	ror		r5, r0
	add		r5, r5, r2
	ldr		r6, _0807d64c
	add		r6, r4, r6
	mvn		r0, r3
	orr		r0, r5
	eor		r0, r2
	mov		r4, r9
	ldr		r4, [r4, #0x28]
	add		r0, r0, r4
	add		r4, r6, r0
	mov		r6, r8
	ror		r4, r6
	add		r4, r4, r5
	ldr		r0, _0807d650
	add		r0, r3, r0
	str		r0, [sp, #0xC]
	mvn		r0, r2
	orr		r0, r4
	eor		r0, r5
	mov		r3, r9
	ldr		r3, [r3, #0x4]
	add		r0, r0, r3
	ldr		r6, [sp, #0xC]
	add		r3, r6, r0
	mov		r0, r10
	ror		r3, r0
	add		r3, r3, r4
	ldr		r6, _0807d654
	add		r6, r2, r6
	mvn		r0, r5
	orr		r0, r3
	eor		r0, r4
	mov		r2, r9
	ldr		r2, [r2, #0x20]
	add		r0, r0, r2
	add		r2, r6, r0
	ror		r2, r1
	add		r2, r2, r3
	ldr		r6, _0807d658
	add		r6, r5, r6
	mvn		r0, r4
	orr		r0, r2
	eor		r0, r3
	mov		r5, r9
	ldr		r5, [r5, #0x3c]
	add		r0, r0, r5
	add		r5, r6, r0
	mov		r6, r12
	ror		r5, r6
	add		r5, r5, r2
	ldr		r0, _0807d65c
	add		r0, r4, r0
	str		r0, [sp, #0x8]
	mvn		r0, r3
	orr		r0, r5
	eor		r0, r2
	mov		r4, r9
	ldr		r4, [r4, #0x18]
	add		r0, r0, r4
	ldr		r6, [sp, #0x8]
	add		r4, r6, r0
	mov		r0, r8
	ror		r4, r0
	add		r4, r4, r5
	ldr		r6, _0807d660
	add		r6, r3, r6
	mvn		r0, r2
	orr		r0, r4
	eor		r0, r5
	mov		r3, r9
	ldr		r3, [r3, #0x34]
	add		r0, r0, r3
	add		r3, r6, r0
	mov		r6, r10
	ror		r3, r6
	add		r3, r3, r4
	ldr		r0, _0807d664
	add		r0, r2, r0
	str		r0, [sp, #0x0]
	mvn		r0, r5
	orr		r0, r3
	eor		r0, r4
	mov		r2, r9
	ldr		r2, [r2, #0x10]
	add		r0, r0, r2
	ldr		r6, [sp, #0x0]
	add		r2, r6, r0
	ror		r2, r1
	add		r2, r2, r3
	ldr		r0, _0807d668
	str		r2, [r0, #0x0]
	ldr		r1, _0807d66c
	add		r1, r5, r1
	mvn		r0, r4
	orr		r0, r2
	eor		r0, r3
	mov		r5, r9
	ldr		r5, [r5, #0x2c]
	add		r0, r0, r5
	add		r5, r1, r0
	mov		r6, r12
	ror		r5, r6
	add		r5, r5, r2
	ldr		r0, _0807d670
	str		r5, [r0, #0x0]
	ldr		r1, _0807d674
	add		r4, r4, r1
	mvn		r0, r3
	orr		r0, r5
	eor		r0, r2
	mov		r6, r9
	ldr		r6, [r6, #0x8]
	add		r0, r0, r6
	add		r4, r4, r0
	mov		r0, r8
	ror		r4, r0
	add		r4, r4, r5
	ldr		r1, _0807d678
	str		r4, [r1, #0x0]
	ldr		r6, _0807d67c
	add		r3, r3, r6
	mvn		r0, r2
	orr		r0, r4
	eor		r0, r5
	mov		r1, r9
	ldr		r1, [r1, #0x24]
	add		r0, r0, r1
	add		r3, r3, r0
	mov		r6, r10
	ror		r3, r6
	add		r3, r3, r4
	ldr		r0, _0807d680
	str		r3, [r0, #0x0]
	ldr		r0, [r7, #0x0]
	add		r0, r0, r2
	str		r0, [r7, #0x0]
	ldr		r0, [r7, #0x4]
	add		r0, r0, r3
	str		r0, [r7, #0x4]
	ldr		r0, [r7, #0x8]
	add		r0, r0, r4
	str		r0, [r7, #0x8]
	ldr		r0, [r7, #0xc]
	add		r0, r0, r5
	str		r0, [r7, #0xc]
	mov		r0, r9
	mov		r1, #0x0
	mov		r2, #0x40
	bl		sub_0807d774
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807d5f0:	.4byte 0x8D2A4C8A
_0807d5f4:	.4byte 0xFFFA3942
_0807d5f8:	.4byte 0x8771F681
_0807d5fc:	.4byte 0x6D9D6122
_0807d600:	.4byte 0xFDE5380C
_0807d604:	.4byte 0xA4BEEA44
_0807d608:	.4byte 0x4BDECFA9
_0807d60c:	.4byte 0xF6BB4B60
_0807d610:	.4byte 0xBEBFBC70
_0807d614:	.4byte 0x289B7EC6
_0807d618:	.4byte 0xEAA127FA
_0807d61c:	.4byte 0xD4EF3085
_0807d620:	.4byte 0x04881D05
_0807d624:	.4byte 0xD9D4D039
_0807d628:	.4byte 0xE6DB99E5
_0807d62c:	.4byte 0x1FA27CF8
_0807d630:	.4byte 0xC4AC5665
_0807d634:	.4byte 0xF4292244
_0807d638:	.4byte 0x432AFF97
_0807d63c:	.4byte 0xAB9423A7
_0807d640:	.4byte 0xFC93A039
_0807d644:	.4byte 0x655B59C3
_0807d648:	.4byte 0x8F0CCC92
_0807d64c:	.4byte 0xFFEFF47D
_0807d650:	.4byte 0x85845DD1
_0807d654:	.4byte 0x6FA87E4F
_0807d658:	.4byte 0xFE2CE6E0
_0807d65c:	.4byte 0xA3014314
_0807d660:	.4byte 0x4E0811A1
_0807d664:	.4byte 0xF7537E82
_0807d668:	.4byte 0x03002730
_0807d66c:	.4byte 0xBD3AF235
_0807d670:	.4byte 0x0300273C
_0807d674:	.4byte 0x2AD7D2BB
_0807d678:	.4byte 0x03002738
_0807d67c:	.4byte 0xEB86D391
_0807d680:	.4byte 0x03002734
	thumb_func_end sub_0807cdb8

	thumb_func_start sub_0807d684
sub_0807d684:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	mov		r8, r0
	mov		r12, r1
	add		r5, r2, #0x0
	ldr		r3, _0807d6d4
	mov		r0, #0x0
	str		r0, [r3, #0x0]
	ldr		r4, _0807d6d8
	str		r0, [r4, #0x0]
	cmp		r0, r5
	bcs		_0807d6ca
	add		r7, r4, #0x0
	add		r6, r3, #0x0
_0807d6a2:
	ldr		r4, [r7, #0x0]
	mov		r0, r8
	add		r2, r0, r4
	ldr		r3, [r6, #0x0]
	lsl		r0, r3, #0x2
	add		r0, r12
	ldr		r1, [r0, #0x0]
	strb	r1, [r2, #0x0]
	lsr		r0, r1, #0x8
	strb	r0, [r2, #0x1]
	lsr		r0, r1, #0x10
	strb	r0, [r2, #0x2]
	lsr		r1, r1, #0x18
	strb	r1, [r2, #0x3]
	add		r3, #0x1
	str		r3, [r6, #0x0]
	add		r4, #0x4
	str		r4, [r7, #0x0]
	cmp		r4, r5
	bcc		_0807d6a2
_0807d6ca:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0807d6d4:	.4byte 0x03002780
_0807d6d8:	.4byte 0x03002784
	thumb_func_end sub_0807d684

	thumb_func_start sub_0807d6dc
sub_0807d6dc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r9, r0
	mov		r8, r1
	add		r6, r2, #0x0
	ldr		r4, _0807d73c
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	ldr		r3, _0807d740
	str		r0, [r3, #0x0]
	cmp		r0, r6
	bcs		_0807d72e
	mov		r12, r4
	add		r7, r3, #0x0
_0807d6fc:
	mov		r0, r12
	ldr		r4, [r0, #0x0]
	lsl		r5, r4, #0x2
	add		r5, r9
	ldr		r3, [r7, #0x0]
	mov		r0, r8
	add		r2, r0, r3
	ldrb	r1, [r2, #0x0]
	ldrb	r0, [r2, #0x1]
	lsl		r0, r0, #0x8
	orr		r1, r0
	ldrb	r0, [r2, #0x2]
	lsl		r0, r0, #0x10
	orr		r1, r0
	ldrb	r0, [r2, #0x3]
	lsl		r0, r0, #0x18
	orr		r1, r0
	str		r1, [r5, #0x0]
	add		r4, #0x1
	mov		r0, r12
	str		r4, [r0, #0x0]
	add		r3, #0x4
	str		r3, [r7, #0x0]
	cmp		r3, r6
	bcc		_0807d6fc
_0807d72e:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x7D73A, 0x2

_0807d73c:	.4byte 0x03002780
_0807d740:	.4byte 0x03002784
	thumb_func_end sub_0807d6dc

	thumb_func_start sub_0807d744
sub_0807d744:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	add		r3, r2, #0x0
	ldr		r1, _0807d770
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	cmp		r0, r3
	bcs		_0807d76a
	add		r4, r1, #0x0
_0807d758:
	ldr		r1, [r4, #0x0]
	add		r2, r6, r1
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	strb	r0, [r2, #0x0]
	add		r1, #0x1
	str		r1, [r4, #0x0]
	cmp		r1, r3
	bcc		_0807d758
_0807d76a:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0807d770:	.4byte 0x03002780
	thumb_func_end sub_0807d744

	thumb_func_start sub_0807d774
sub_0807d774:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r3, _0807d798
	mov		r0, #0x0
	str		r0, [r3, #0x0]
	cmp		r0, r2
	bcs		_0807d792
	add		r5, r3, #0x0
	mov		r3, #0x0
_0807d786:
	add		r0, r4, r3
	strb	r1, [r0, #0x0]
	add		r3, #0x1
	cmp		r3, r2
	bcc		_0807d786
	str		r3, [r5, #0x0]
_0807d792:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0807d798:	.4byte 0x03002780
	thumb_func_end sub_0807d774

	thumb_func_start sub_0807d79c
sub_0807d79c:
	push	{ r4, r5, r6, lr }
	add		r6, r1, #0x0
	add		r5, r0, #0x0
	cmp		r2, #0x0
	beq		_0807d7cc
	mov		r0, #0x20
	sub		r0, r0, r2
	cmp		r0, #0x0
	bgt		_0807d7b8
	mov		r3, #0x0
	neg		r0, r0
	add		r4, r5, #0x0
	lsl		r4, r0
	b		_0807d7c8
_0807d7b8:
	add		r1, r5, #0x0
	lsr		r1, r0
	add		r3, r5, #0x0
	lsl		r3, r2
	add		r0, r6, #0x0
	lsl		r0, r2
	add		r4, r0, #0x0
	orr		r4, r1
_0807d7c8:
	add		r1, r4, #0x0
	add		r0, r3, #0x0
_0807d7cc:
	pop		{ r4, r5, r6, pc }

.incbin "base.gba", 0x7D7CE, 0x2
	thumb_func_end sub_0807d79c

	thumb_func_start sub_0807d7d0
sub_0807d7d0:
	bx		r0

.incbin "base.gba", 0x7D7D2, 0x2
	thumb_func_end sub_0807d7d0

	thumb_func_start sub_0807d7d4
sub_0807d7d4:
	bx		r1

.incbin "base.gba", 0x7D7D6, 0x2
	thumb_func_end sub_0807d7d4

	thumb_func_start sub_0807d7d8
sub_0807d7d8:
	bx		r2

.incbin "base.gba", 0x7D7DA, 0x2
	thumb_func_end sub_0807d7d8

	thumb_func_start sub_0807d7dc
sub_0807d7dc:
	bx		r3

.incbin "base.gba", 0x7D7DE, 0x2
	thumb_func_end sub_0807d7dc

	thumb_func_start sub_0807d7e0
sub_0807d7e0:
	bx		r4

.incbin "base.gba", 0x7D7E2, 0x2
	thumb_func_end sub_0807d7e0

	thumb_func_start sub_0807d7e4
sub_0807d7e4:
	bx		r5

.incbin "base.gba", 0x7D7E6, 0x6
	thumb_func_end sub_0807d7e4

	thumb_func_start sub_0807d7ec
sub_0807d7ec:
	bx		r7

.incbin "base.gba", 0x7D7EE, 0x2
	thumb_func_end sub_0807d7ec

	thumb_func_start sub_0807d7f0
sub_0807d7f0:
	bx		r8

.incbin "base.gba", 0x7D7F2, 0x6
	thumb_func_end sub_0807d7f0

	thumb_func_start sub_0807d7f8
sub_0807d7f8:
	bx		r10

.incbin "base.gba", 0x7D7FA, 0x12
	thumb_func_end sub_0807d7f8

	thumb_func_start sub_0807d80c
sub_0807d80c:
	cmp		r1, #0x0
	beq		_0807d894
	push	{ r4 }
	add		r4, r0, #0x0
	eor		r4, r1
	mov		r12, r4
	mov		r3, #0x1
	mov		r2, #0x0
	cmp		r1, #0x0
	bpl		_0807d822
	neg		r1, r1
_0807d822:
	cmp		r0, #0x0
	bpl		_0807d828
	neg		r0, r0
_0807d828:
	cmp		r0, r1
	bcc		_0807d886
	mov		r4, #0x1
	lsl		r4, r4, #0x1c
_0807d830:
	cmp		r1, r4
	bcs		_0807d83e
	cmp		r1, r0
	bcs		_0807d83e
	lsl		r1, r1, #0x4
	lsl		r3, r3, #0x4
	b		_0807d830
_0807d83e:
	lsl		r4, r4, #0x3
_0807d840:
	cmp		r1, r4
	bcs		_0807d84e
	cmp		r1, r0
	bcs		_0807d84e
	lsl		r1, r1, #0x1
	lsl		r3, r3, #0x1
	b		_0807d840
_0807d84e:
	cmp		r0, r1
	bcc		_0807d856
	sub		r0, r0, r1
	orr		r2, r3
_0807d856:
	lsr		r4, r1, #0x1
	cmp		r0, r4
	bcc		_0807d862
	sub		r0, r0, r4
	lsr		r4, r3, #0x1
	orr		r2, r4
_0807d862:
	lsr		r4, r1, #0x2
	cmp		r0, r4
	bcc		_0807d86e
	sub		r0, r0, r4
	lsr		r4, r3, #0x2
	orr		r2, r4
_0807d86e:
	lsr		r4, r1, #0x3
	cmp		r0, r4
	bcc		_0807d87a
	sub		r0, r0, r4
	lsr		r4, r3, #0x3
	orr		r2, r4
_0807d87a:
	cmp		r0, #0x0
	beq		_0807d886
	lsr		r3, r3, #0x4
	beq		_0807d886
	lsr		r1, r1, #0x4
	b		_0807d84e
_0807d886:
	add		r0, r2, #0x0
	mov		r4, r12
	cmp		r4, #0x0
	bpl		_0807d890
	neg		r0, r0
_0807d890:
	pop		{ r4 }
	mov		pc, lr
_0807d894:
	push	{ lr }
	bl		sub_0807d8a0
	mov		r0, #0x0
	pop		{ pc }

.incbin "base.gba", 0x7D89E, 0x2
	thumb_func_end sub_0807d80c

	thumb_func_start sub_0807d8a0
sub_0807d8a0:
	mov		pc, lr

.incbin "base.gba", 0x7D8A2, 0x2
	thumb_func_end sub_0807d8a0

	thumb_func_start sub_0807d8a4
sub_0807d8a4:
	push	{ r4, r5, r6, lr }
	add		r6, r1, #0x0
	add		r5, r0, #0x0
	cmp		r2, #0x0
	beq		_0807d8d4
	mov		r0, #0x20
	sub		r0, r0, r2
	cmp		r0, #0x0
	bgt		_0807d8c0
	mov		r4, #0x0
	neg		r0, r0
	add		r3, r6, #0x0
	lsr		r3, r0
	b		_0807d8d0
_0807d8c0:
	add		r1, r6, #0x0
	lsl		r1, r0
	add		r4, r6, #0x0
	lsr		r4, r2
	add		r0, r5, #0x0
	lsr		r0, r2
	add		r3, r0, #0x0
	orr		r3, r1
_0807d8d0:
	add		r1, r4, #0x0
	add		r0, r3, #0x0
_0807d8d4:
	pop		{ r4, r5, r6, pc }

.incbin "base.gba", 0x7D8D6, 0x2
	thumb_func_end sub_0807d8a4

	thumb_func_start sub_0807d8d8
sub_0807d8d8:
	mov		r3, #0x1
	cmp		r1, #0x0
	beq		_0807d99c
	bpl		_0807d8e2
	neg		r1, r1
_0807d8e2:
	push	{ r4 }
	push	{ r0 }
	cmp		r0, #0x0
	bpl		_0807d8ec
	neg		r0, r0
_0807d8ec:
	cmp		r0, r1
	bcc		_0807d990
	mov		r4, #0x1
	lsl		r4, r4, #0x1c
_0807d8f4:
	cmp		r1, r4
	bcs		_0807d902
	cmp		r1, r0
	bcs		_0807d902
	lsl		r1, r1, #0x4
	lsl		r3, r3, #0x4
	b		_0807d8f4
_0807d902:
	lsl		r4, r4, #0x3
_0807d904:
	cmp		r1, r4
	bcs		_0807d912
	cmp		r1, r0
	bcs		_0807d912
	lsl		r1, r1, #0x1
	lsl		r3, r3, #0x1
	b		_0807d904
_0807d912:
	mov		r2, #0x0
	cmp		r0, r1
	bcc		_0807d91a
	sub		r0, r0, r1
_0807d91a:
	lsr		r4, r1, #0x1
	cmp		r0, r4
	bcc		_0807d92c
	sub		r0, r0, r4
	mov		r12, r3
	mov		r4, #0x1
	ror		r3, r4
	orr		r2, r3
	mov		r3, r12
_0807d92c:
	lsr		r4, r1, #0x2
	cmp		r0, r4
	bcc		_0807d93e
	sub		r0, r0, r4
	mov		r12, r3
	mov		r4, #0x2
	ror		r3, r4
	orr		r2, r3
	mov		r3, r12
_0807d93e:
	lsr		r4, r1, #0x3
	cmp		r0, r4
	bcc		_0807d950
	sub		r0, r0, r4
	mov		r12, r3
	mov		r4, #0x3
	ror		r3, r4
	orr		r2, r3
	mov		r3, r12
_0807d950:
	mov		r12, r3
	cmp		r0, #0x0
	beq		_0807d95e
	lsr		r3, r3, #0x4
	beq		_0807d95e
	lsr		r1, r1, #0x4
	b		_0807d912
_0807d95e:
	mov		r4, #0xe
	lsl		r4, r4, #0x1c
	and		r2, r4
	beq		_0807d990
	mov		r3, r12
	mov		r4, #0x3
	ror		r3, r4
	tst		r2, r3
	beq		_0807d974
	lsr		r4, r1, #0x3
	add		r0, r0, r4
_0807d974:
	mov		r3, r12
	mov		r4, #0x2
	ror		r3, r4
	tst		r2, r3
	beq		_0807d982
	lsr		r4, r1, #0x2
	add		r0, r0, r4
_0807d982:
	mov		r3, r12
	mov		r4, #0x1
	ror		r3, r4
	tst		r2, r3
	beq		_0807d990
	lsr		r4, r1, #0x1
	add		r0, r0, r4
_0807d990:
	pop		{ r4 }
	cmp		r4, #0x0
	bpl		_0807d998
	neg		r0, r0
_0807d998:
	pop		{ r4 }
	mov		pc, lr
_0807d99c:
	push	{ lr }
	bl		sub_0807d8a0
	mov		r0, #0x0
	pop		{ pc }

.incbin "base.gba", 0x7D9A6, 0x2
	thumb_func_end sub_0807d8d8

	thumb_func_start sub_0807d9a8
sub_0807d9a8:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x10
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	str		r2, [sp, #0x8]
	str		r3, [sp, #0xC]
	ldr		r3, [sp, #0x0]
	ldr		r0, _0807da14
	mov		r12, r0
	add		r2, r3, #0x0
	and		r2, r0
	lsr		r3, r3, #0x10
	ldr		r1, [sp, #0x8]
	add		r0, r1, #0x0
	mov		r4, r12
	and		r0, r4
	lsr		r1, r1, #0x10
	add		r5, r2, #0x0
	mul		r5, r0
	add		r4, r2, #0x0
	mul		r4, r1
	add		r2, r3, #0x0
	mul		r2, r0
	mul		r3, r1
	lsr		r0, r5, #0x10
	add		r4, r4, r0
	add		r4, r4, r2
	cmp		r4, r2
	bcs		_0807d9e8
	mov		r0, #0x80
	lsl		r0, r0, #0x9
	add		r3, r3, r0
_0807d9e8:
	lsr		r0, r4, #0x10
	add		r7, r3, r0
	mov		r1, r12
	and		r4, r1
	lsl		r0, r4, #0x10
	and		r5, r1
	add		r6, r0, #0x0
	orr		r6, r5
	add		r1, r7, #0x0
	add		r0, r6, #0x0
	ldr		r3, [sp, #0x0]
	ldr		r4, [sp, #0xC]
	add		r2, r3, #0x0
	mul		r2, r4
	ldr		r5, [sp, #0x4]
	ldr		r4, [sp, #0x8]
	add		r3, r5, #0x0
	mul		r3, r4
	add		r2, r2, r3
	add		r1, r7, r2
	add		sp, #0x10
	pop		{ r4, r5, r6, r7, pc }

_0807da14:	.4byte 0x0000FFFF
	thumb_func_end sub_0807d9a8

	thumb_func_start sub_0807da18
sub_0807da18:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x20
	add		r7, r2, #0x0
	add		r6, r3, #0x0
	mov		r10, r0
	mov		r8, r1
	cmp		r6, #0x0
	beq		_0807da32
	b		_0807dc80
_0807da32:
	cmp		r7, r8
	bls		_0807db0c
	ldr		r0, _0807da48
	cmp		r7, r0
	bhi		_0807da4c
	mov		r1, #0x0
	cmp		r7, #0xff
	bls		_0807da56
	mov		r1, #0x8
	b		_0807da56

.incbin "base.gba", 0x7DA46, 0x2

_0807da48:	.4byte 0x0000FFFF

_0807da4c:
	ldr		r0, _0807db00
	mov		r1, #0x18
	cmp		r7, r0
	bhi		_0807da56
	mov		r1, #0x10
_0807da56:
	ldr		r0, _0807db04
	lsr		r2, r1
	add		r0, r2, r0
	ldrb	r0, [r0, #0x0]
	add		r0, r0, r1
	mov		r1, #0x20
	sub		r2, r1, r0
	cmp		r2, #0x0
	beq		_0807da82
	lsl		r7, r2
	mov		r0, r8
	lsl		r0, r2
	mov		r8, r0
	sub		r1, r1, r2
	mov		r0, r10
	lsr		r0, r1
	mov		r1, r8
	orr		r1, r0
	mov		r8, r1
	mov		r3, r10
	lsl		r3, r2
	mov		r10, r3
_0807da82:
	lsr		r4, r7, #0x10
	mov		r9, r4
	ldr		r0, _0807db08
	and		r0, r7
	str		r0, [sp, #0x0]
	mov		r0, r8
	mov		r1, r9
	bl		sub_0807de68
	add		r4, r0, #0x0
	mov		r0, r8
	mov		r1, r9
	bl		sub_0807ddf0
	add		r6, r0, #0x0
	ldr		r1, [sp, #0x0]
	add		r2, r6, #0x0
	mul		r2, r1
	lsl		r4, r4, #0x10
	mov		r3, r10
	lsr		r0, r3, #0x10
	orr		r4, r0
	cmp		r4, r2
	bcs		_0807dac2
	sub		r6, #0x1
	add		r4, r4, r7
	cmp		r4, r7
	bcc		_0807dac2
	cmp		r4, r2
	bcs		_0807dac2
	sub		r6, #0x1
	add		r4, r4, r7
_0807dac2:
	sub		r4, r4, r2
	add		r0, r4, #0x0
	mov		r1, r9
	bl		sub_0807de68
	add		r5, r0, #0x0
	add		r0, r4, #0x0
	mov		r1, r9
	bl		sub_0807ddf0
	add		r1, r0, #0x0
	ldr		r4, [sp, #0x0]
	add		r2, r1, #0x0
	mul		r2, r4
	lsl		r5, r5, #0x10
	ldr		r0, _0807db08
	mov		r3, r10
	and		r3, r0
	orr		r5, r3
	cmp		r5, r2
	bcs		_0807dafa
	sub		r1, #0x1
	add		r5, r5, r7
	cmp		r5, r7
	bcc		_0807dafa
	cmp		r5, r2
	bcs		_0807dafa
	sub		r1, #0x1
_0807dafa:
	lsl		r6, r6, #0x10
	orr		r6, r1
	b		_0807dc86

_0807db00:	.4byte 0x00FFFFFF
_0807db04:	.4byte 0x0820c074
_0807db08:	.4byte 0x0000FFFF

_0807db0c:
	cmp		r2, #0x0
	bne		_0807db1a
	mov		r0, #0x1
	mov		r1, #0x0
	bl		sub_0807ddf0
	add		r7, r0, #0x0
_0807db1a:
	add		r1, r7, #0x0
	ldr		r0, _0807db2c
	cmp		r7, r0
	bhi		_0807db30
	mov		r2, #0x0
	cmp		r7, #0xff
	bls		_0807db3a
	mov		r2, #0x8
	b		_0807db3a

_0807db2c:	.4byte 0x0000FFFF

_0807db30:
	ldr		r0, _0807db58
	mov		r2, #0x18
	cmp		r7, r0
	bhi		_0807db3a
	mov		r2, #0x10
_0807db3a:
	ldr		r0, _0807db5c
	lsr		r1, r2
	add		r0, r1, r0
	ldrb	r0, [r0, #0x0]
	add		r0, r0, r2
	mov		r1, #0x20
	sub		r2, r1, r0
	cmp		r2, #0x0
	bne		_0807db60
	mov		r0, r8
	sub		r0, r0, r7
	mov		r8, r0
	mov		r1, #0x1
	str		r1, [sp, #0x4]
	b		_0807dbfe

_0807db58:	.4byte 0x00FFFFFF
_0807db5c:	.4byte 0x0820c074

_0807db60:
	sub		r1, r1, r2
	lsl		r7, r2
	mov		r5, r8
	lsr		r5, r1
	mov		r3, r8
	lsl		r3, r2
	mov		r0, r10
	lsr		r0, r1
	orr		r3, r0
	mov		r8, r3
	mov		r4, r10
	lsl		r4, r2
	mov		r10, r4
	lsr		r0, r7, #0x10
	mov		r9, r0
	ldr		r1, _0807dc7c
	and		r1, r7
	str		r1, [sp, #0x8]
	add		r0, r5, #0x0
	mov		r1, r9
	bl		sub_0807de68
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	mov		r1, r9
	bl		sub_0807ddf0
	add		r6, r0, #0x0
	ldr		r2, [sp, #0x8]
	add		r1, r6, #0x0
	mul		r1, r2
	lsl		r4, r4, #0x10
	mov		r3, r8
	lsr		r0, r3, #0x10
	orr		r4, r0
	cmp		r4, r1
	bcs		_0807dbba
	sub		r6, #0x1
	add		r4, r4, r7
	cmp		r4, r7
	bcc		_0807dbba
	cmp		r4, r1
	bcs		_0807dbba
	sub		r6, #0x1
	add		r4, r4, r7
_0807dbba:
	sub		r4, r4, r1
	add		r0, r4, #0x0
	mov		r1, r9
	bl		sub_0807de68
	add		r5, r0, #0x0
	add		r0, r4, #0x0
	mov		r1, r9
	bl		sub_0807ddf0
	add		r2, r0, #0x0
	ldr		r4, [sp, #0x8]
	add		r1, r2, #0x0
	mul		r1, r4
	lsl		r5, r5, #0x10
	ldr		r0, _0807dc7c
	mov		r3, r8
	and		r3, r0
	orr		r5, r3
	cmp		r5, r1
	bcs		_0807dbf4
	sub		r2, #0x1
	add		r5, r5, r7
	cmp		r5, r7
	bcc		_0807dbf4
	cmp		r5, r1
	bcs		_0807dbf4
	sub		r2, #0x1
	add		r5, r5, r7
_0807dbf4:
	lsl		r6, r6, #0x10
	orr		r6, r2
	str		r6, [sp, #0x4]
	sub		r1, r5, r1
	mov		r8, r1
_0807dbfe:
	lsr		r4, r7, #0x10
	mov		r9, r4
	ldr		r0, _0807dc7c
	and		r0, r7
	str		r0, [sp, #0xC]
	mov		r0, r8
	mov		r1, r9
	bl		sub_0807de68
	add		r4, r0, #0x0
	mov		r0, r8
	mov		r1, r9
	bl		sub_0807ddf0
	add		r6, r0, #0x0
	ldr		r1, [sp, #0xC]
	add		r2, r6, #0x0
	mul		r2, r1
	lsl		r4, r4, #0x10
	mov		r3, r10
	lsr		r0, r3, #0x10
	orr		r4, r0
	cmp		r4, r2
	bcs		_0807dc3e
	sub		r6, #0x1
	add		r4, r4, r7
	cmp		r4, r7
	bcc		_0807dc3e
	cmp		r4, r2
	bcs		_0807dc3e
	sub		r6, #0x1
	add		r4, r4, r7
_0807dc3e:
	sub		r4, r4, r2
	add		r0, r4, #0x0
	mov		r1, r9
	bl		sub_0807de68
	add		r5, r0, #0x0
	add		r0, r4, #0x0
	mov		r1, r9
	bl		sub_0807ddf0
	add		r1, r0, #0x0
	ldr		r4, [sp, #0xC]
	add		r2, r1, #0x0
	mul		r2, r4
	lsl		r5, r5, #0x10
	ldr		r0, _0807dc7c
	mov		r3, r10
	and		r3, r0
	orr		r5, r3
	cmp		r5, r2
	bcs		_0807dc76
	sub		r1, #0x1
	add		r5, r5, r7
	cmp		r5, r7
	bcc		_0807dc76
	cmp		r5, r2
	bcs		_0807dc76
	sub		r1, #0x1
_0807dc76:
	lsl		r6, r6, #0x10
	orr		r6, r1
	b		_0807ddd6

_0807dc7c:	.4byte 0x0000FFFF

_0807dc80:
	cmp		r6, r8
	bls		_0807dc8c
	mov		r6, #0x0
_0807dc86:
	mov		r4, #0x0
	str		r4, [sp, #0x4]
	b		_0807ddd6
_0807dc8c:
	add		r1, r6, #0x0
	ldr		r0, _0807dca0
	cmp		r6, r0
	bhi		_0807dca4
	mov		r2, #0x0
	cmp		r6, #0xff
	bls		_0807dcae
	mov		r2, #0x8
	b		_0807dcae

.incbin "base.gba", 0x7DC9E, 0x2

_0807dca0:	.4byte 0x0000FFFF

_0807dca4:
	ldr		r0, _0807dcd0
	mov		r2, #0x18
	cmp		r6, r0
	bhi		_0807dcae
	mov		r2, #0x10
_0807dcae:
	ldr		r0, _0807dcd4
	lsr		r1, r2
	add		r0, r1, r0
	ldrb	r0, [r0, #0x0]
	add		r0, r0, r2
	mov		r1, #0x20
	sub		r2, r1, r0
	cmp		r2, #0x0
	bne		_0807dcdc
	cmp		r8, r6
	bhi		_0807dcc8
	cmp		r10, r7
	bcc		_0807dcd8
_0807dcc8:
	mov		r6, #0x1
	mov		r1, r10
	b		_0807ddd0

.incbin "base.gba", 0x7DCCE, 0x2

_0807dcd0:	.4byte 0x00FFFFFF
_0807dcd4:	.4byte 0x0820c074

_0807dcd8:
	mov		r6, #0x0
	b		_0807ddd2
_0807dcdc:
	sub		r1, r1, r2
	lsl		r6, r2
	add		r0, r7, #0x0
	lsr		r0, r1
	orr		r6, r0
	lsl		r7, r2
	mov		r5, r8
	lsr		r5, r1
	mov		r3, r8
	lsl		r3, r2
	mov		r0, r10
	lsr		r0, r1
	orr		r3, r0
	mov		r8, r3
	mov		r4, r10
	lsl		r4, r2
	mov		r10, r4
	lsr		r0, r6, #0x10
	mov		r9, r0
	ldr		r1, _0807ddec
	and		r1, r6
	str		r1, [sp, #0x10]
	add		r0, r5, #0x0
	mov		r1, r9
	bl		sub_0807de68
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	mov		r1, r9
	bl		sub_0807ddf0
	add		r3, r0, #0x0
	ldr		r2, [sp, #0x10]
	add		r1, r3, #0x0
	mul		r1, r2
	lsl		r4, r4, #0x10
	mov		r2, r8
	lsr		r0, r2, #0x10
	orr		r4, r0
	cmp		r4, r1
	bcs		_0807dd3e
	sub		r3, #0x1
	add		r4, r4, r6
	cmp		r4, r6
	bcc		_0807dd3e
	cmp		r4, r1
	bcs		_0807dd3e
	sub		r3, #0x1
	add		r4, r4, r6
_0807dd3e:
	sub		r4, r4, r1
	add		r0, r4, #0x0
	mov		r1, r9
	str		r3, [sp, #0x1C]
	bl		sub_0807de68
	add		r5, r0, #0x0
	add		r0, r4, #0x0
	mov		r1, r9
	bl		sub_0807ddf0
	add		r2, r0, #0x0
	ldr		r4, [sp, #0x10]
	add		r1, r2, #0x0
	mul		r1, r4
	lsl		r5, r5, #0x10
	ldr		r0, _0807ddec
	mov		r4, r8
	and		r4, r0
	orr		r5, r4
	ldr		r3, [sp, #0x1C]
	cmp		r5, r1
	bcs		_0807dd7c
	sub		r2, #0x1
	add		r5, r5, r6
	cmp		r5, r6
	bcc		_0807dd7c
	cmp		r5, r1
	bcs		_0807dd7c
	sub		r2, #0x1
	add		r5, r5, r6
_0807dd7c:
	lsl		r6, r3, #0x10
	orr		r6, r2
	sub		r1, r5, r1
	mov		r8, r1
	ldr		r0, _0807ddec
	mov		r9, r0
	add		r1, r6, #0x0
	and		r1, r0
	lsr		r3, r6, #0x10
	add		r0, r7, #0x0
	mov		r2, r9
	and		r0, r2
	lsr		r2, r7, #0x10
	add		r5, r1, #0x0
	mul		r5, r0
	add		r4, r1, #0x0
	mul		r4, r2
	add		r1, r3, #0x0
	mul		r1, r0
	mul		r3, r2
	lsr		r0, r5, #0x10
	add		r4, r4, r0
	add		r4, r4, r1
	cmp		r4, r1
	bcs		_0807ddb4
	mov		r0, #0x80
	lsl		r0, r0, #0x9
	add		r3, r3, r0
_0807ddb4:
	lsr		r0, r4, #0x10
	add		r3, r3, r0
	mov		r1, r9
	and		r4, r1
	lsl		r0, r4, #0x10
	and		r5, r1
	add		r1, r0, r5
	cmp		r3, r8
	bhi		_0807ddce
	cmp		r3, r8
	bne		_0807ddd2
	cmp		r1, r10
	bls		_0807ddd2
_0807ddce:
	sub		r6, #0x1
_0807ddd0:
	sub		r0, r1, r7
_0807ddd2:
	mov		r2, #0x0
	str		r2, [sp, #0x4]
_0807ddd6:
	str		r6, [sp, #0x14]
	ldr		r3, [sp, #0x4]
	str		r3, [sp, #0x18]
	ldr		r0, [sp, #0x14]
	ldr		r1, [sp, #0x18]
	add		sp, #0x20
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7, pc }

_0807ddec:	.4byte 0x0000FFFF
	thumb_func_end sub_0807da18

	thumb_func_start sub_0807ddf0
sub_0807ddf0:
	cmp		r1, #0x0
	beq		_0807de5e
	mov		r3, #0x1
	mov		r2, #0x0
	push	{ r4 }
	cmp		r0, r1
	bcc		_0807de58
	mov		r4, #0x1
	lsl		r4, r4, #0x1c
_0807de02:
	cmp		r1, r4
	bcs		_0807de10
	cmp		r1, r0
	bcs		_0807de10
	lsl		r1, r1, #0x4
	lsl		r3, r3, #0x4
	b		_0807de02
_0807de10:
	lsl		r4, r4, #0x3
_0807de12:
	cmp		r1, r4
	bcs		_0807de20
	cmp		r1, r0
	bcs		_0807de20
	lsl		r1, r1, #0x1
	lsl		r3, r3, #0x1
	b		_0807de12
_0807de20:
	cmp		r0, r1
	bcc		_0807de28
	sub		r0, r0, r1
	orr		r2, r3
_0807de28:
	lsr		r4, r1, #0x1
	cmp		r0, r4
	bcc		_0807de34
	sub		r0, r0, r4
	lsr		r4, r3, #0x1
	orr		r2, r4
_0807de34:
	lsr		r4, r1, #0x2
	cmp		r0, r4
	bcc		_0807de40
	sub		r0, r0, r4
	lsr		r4, r3, #0x2
	orr		r2, r4
_0807de40:
	lsr		r4, r1, #0x3
	cmp		r0, r4
	bcc		_0807de4c
	sub		r0, r0, r4
	lsr		r4, r3, #0x3
	orr		r2, r4
_0807de4c:
	cmp		r0, #0x0
	beq		_0807de58
	lsr		r3, r3, #0x4
	beq		_0807de58
	lsr		r1, r1, #0x4
	b		_0807de20
_0807de58:
	add		r0, r2, #0x0
	pop		{ r4 }
	mov		pc, lr
_0807de5e:
	push	{ lr }
	bl		sub_0807d8a0
	mov		r0, #0x0
	pop		{ pc }
	thumb_func_end sub_0807ddf0

	thumb_func_start sub_0807de68
sub_0807de68:
	cmp		r1, #0x0
	beq		_0807df1e
	mov		r3, #0x1
	cmp		r0, r1
	bcs		_0807de74
	mov		pc, lr
_0807de74:
	push	{ r4 }
	mov		r4, #0x1
	lsl		r4, r4, #0x1c
_0807de7a:
	cmp		r1, r4
	bcs		_0807de88
	cmp		r1, r0
	bcs		_0807de88
	lsl		r1, r1, #0x4
	lsl		r3, r3, #0x4
	b		_0807de7a
_0807de88:
	lsl		r4, r4, #0x3
_0807de8a:
	cmp		r1, r4
	bcs		_0807de98
	cmp		r1, r0
	bcs		_0807de98
	lsl		r1, r1, #0x1
	lsl		r3, r3, #0x1
	b		_0807de8a
_0807de98:
	mov		r2, #0x0
	cmp		r0, r1
	bcc		_0807dea0
	sub		r0, r0, r1
_0807dea0:
	lsr		r4, r1, #0x1
	cmp		r0, r4
	bcc		_0807deb2
	sub		r0, r0, r4
	mov		r12, r3
	mov		r4, #0x1
	ror		r3, r4
	orr		r2, r3
	mov		r3, r12
_0807deb2:
	lsr		r4, r1, #0x2
	cmp		r0, r4
	bcc		_0807dec4
	sub		r0, r0, r4
	mov		r12, r3
	mov		r4, #0x2
	ror		r3, r4
	orr		r2, r3
	mov		r3, r12
_0807dec4:
	lsr		r4, r1, #0x3
	cmp		r0, r4
	bcc		_0807ded6
	sub		r0, r0, r4
	mov		r12, r3
	mov		r4, #0x3
	ror		r3, r4
	orr		r2, r3
	mov		r3, r12
_0807ded6:
	mov		r12, r3
	cmp		r0, #0x0
	beq		_0807dee4
	lsr		r3, r3, #0x4
	beq		_0807dee4
	lsr		r1, r1, #0x4
	b		_0807de98
_0807dee4:
	mov		r4, #0xe
	lsl		r4, r4, #0x1c
	and		r2, r4
	bne		_0807def0
	pop		{ r4 }
	mov		pc, lr
_0807def0:
	mov		r3, r12
	mov		r4, #0x3
	ror		r3, r4
	tst		r2, r3
	beq		_0807defe
	lsr		r4, r1, #0x3
	add		r0, r0, r4
_0807defe:
	mov		r3, r12
	mov		r4, #0x2
	ror		r3, r4
	tst		r2, r3
	beq		_0807df0c
	lsr		r4, r1, #0x2
	add		r0, r0, r4
_0807df0c:
	mov		r3, r12
	mov		r4, #0x1
	ror		r3, r4
	tst		r2, r3
	beq		_0807df1a
	lsr		r4, r1, #0x1
	add		r0, r0, r4
_0807df1a:
	pop		{ r4 }
	mov		pc, lr
_0807df1e:
	push	{ lr }
	bl		sub_0807d8a0
	mov		r0, #0x0
	pop		{ pc }
	bx		lr

.incbin "base.gba", 0x7DF2A, 0x3E
	thumb_func_end sub_0807de68

	thumb_func_start sub_0807df68
sub_0807df68:
	ldr		r2, _0807df74
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x7DF72, 0x2

_0807df74:	.4byte 0x03005300
	thumb_func_end sub_0807df68

	thumb_func_start sub_0807df78
sub_0807df78:
	add		r2, r1, #0x0
	cmp		r0, #0x1
	beq		_0807dfa8
	cmp		r0, #0x1
	bgt		_0807df90
	cmp		r0, #0x0
	beq		_0807df9c
	ldr		r1, _0807df8c
	b		_0807dfbc

.align 2, 0
.pool

_0807df8c:	.4byte 0x03002788

_0807df90:
	cmp		r0, #0x2
	beq		_0807dfb4
	ldr		r1, _0807df98
	b		_0807dfbc

_0807df98:	.4byte 0x03002788

_0807df9c:
	ldr		r0, _0807dfa4
	str		r2, [r0, #0x0]
	add		r1, r0, #0x0
	b		_0807dfbc

_0807dfa4:	.4byte 0x03002788

_0807dfa8:
	ldr		r1, _0807dfb0
	ldr		r0, [r1, #0x0]
	and		r0, r2
	b		_0807dfba

_0807dfb0:	.4byte 0x03002788

_0807dfb4:
	ldr		r1, _0807dfd4
	ldr		r0, [r1, #0x0]
	orr		r0, r2
_0807dfba:
	str		r0, [r1, #0x0]
_0807dfbc:
	ldr		r0, _0807dfd8
	ldr		r1, [r1, #0x0]
	strh	r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	and		r2, r1
	cmp		r2, #0x0
	beq		_0807dfe0
	ldr		r1, _0807dfdc
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	b		_0807dfe4

_0807dfd4:	.4byte 0x03002788
_0807dfd8:	.4byte InterruptEnableRegister
_0807dfdc:	.4byte InterruptMasterEnableRegister

_0807dfe0:
	ldr		r0, _0807dfe8
	strh	r2, [r0, #0x0]
_0807dfe4:
	bx		lr

.align 2, 0
.pool

_0807dfe8:	.4byte InterruptMasterEnableRegister
	thumb_func_end sub_0807df78

	thumb_func_start sub_0807dfec
sub_0807dfec:
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	ldr		r3, _0807e014
	strh	r0, [r3, #0x0]
	add		r3, #0x2
	asr		r0, r0, #0x10
	strh	r0, [r3, #0x0]
	ldr		r0, _0807e018
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	asr		r1, r1, #0x10
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	ldr		r1, _0807e01c
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	bx		lr

_0807e014:	.4byte DMA3SourceAddress
_0807e018:	.4byte DMA3DestinationAddress
_0807e01c:	.4byte DMA3Control

.incbin "base.gba", 0x7E020, 0x30
	thumb_func_end sub_0807dfec

	thumb_func_start sub_0807e050
sub_0807e050:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	cmp		r3, #0x0
	ble		_0807e086
	lsl		r0, r0, #0x5
	mov		r4, #0xc0
	lsl		r4, r4, #0x13
	add		r6, r0, r4
	add		r5, r1, #0x0
	lsl		r0, r2, #0x14
	mov		r8, r0
	lsl		r7, r2, #0x5
	add		r4, r3, #0x0
_0807e06c:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r3, r8
	asr		r2, r3, #0x10
	bl		sub_0807dfec
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	add		r6, r6, r0
	add		r5, r5, r7
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0807e06c
_0807e086:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7, pc }
	thumb_func_end sub_0807e050

	thumb_func_start sub_0807e08c
sub_0807e08c:
	push	{ r4, lr }
	mov		r4, #0x80
	lsl		r4, r4, #0x4
	add		r0, r0, r4
	bl		sub_0807e050
	pop		{ r4, pc }

.incbin "base.gba", 0x7E09A, 0x2
	thumb_func_end sub_0807e08c

	thumb_func_start sub_0807e09c
sub_0807e09c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	cmp		r3, #0x0
	ble		_0807e0c8
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	lsl		r0, r2, #0x10
	mov		r8, r0
	lsl		r7, r2, #0x1
	add		r4, r3, #0x0
_0807e0b2:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r3, r8
	asr		r2, r3, #0x10
	bl		sub_0807dfec
	add		r6, #0x40
	add		r5, r5, r7
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0807e0b2
_0807e0c8:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0x7E0CE, 0x2
	thumb_func_end sub_0807e09c


.incbin "base.gba", 0x7E0D0, 0x2528
_080805f8:	.4byte 0x081b317f

.incbin "base.gba", 0x805FC, 0x39EC

_08083fe8:

.incbin "base.gba", 0x83FE8, 0x1EA
_080841d2:

.incbin "base.gba", 0x841D2, 0x47F6

_080889c8:

.incbin "base.gba", 0x889C8, 0x2A18

_0808b3e0:

.incbin "base.gba", 0x8B3E0, 0x1590

_0808c970:

.incbin "base.gba", 0x8C970, 0x5FA8

_08092918:

.incbin "base.gba", 0x92918, 0xB60

_08093478:

.incbin "base.gba", 0x93478, 0x1108
_08094580:

.incbin "base.gba", 0x94580, 0x330
_080948b0:

.incbin "base.gba", 0x948B0, 0x934

_080951e4:

.incbin "base.gba", 0x951E4, 0xFC
_080952e0:

.incbin "base.gba", 0x952E0, 0xAC
_0809538c:

.incbin "base.gba", 0x9538C, 0x39C
_08095728:

.incbin "base.gba", 0x95728, 0x114
_0809583c:

.incbin "base.gba", 0x9583C, 0x110
_0809594c:

.incbin "base.gba", 0x9594C, 0x27C

_08095bc8:

.incbin "base.gba", 0x95BC8, 0x160
_08095d28:

.incbin "base.gba", 0x95D28, 0x1BC
_08095ee4:

.incbin "base.gba", 0x95EE4, 0x164
_08096048:

.incbin "base.gba", 0x96048, 0x160
_080961a8:

.incbin "base.gba", 0x961A8, 0x1D0
_08096378:

.incbin "base.gba", 0x96378, 0x216C

_080984e4:

.incbin "base.gba", 0x984E4, 0xED4

_080993b8:

.incbin "base.gba", 0x993B8, 0x220

_080995d8:

.incbin "base.gba", 0x995D8, 0x114
_080996ec:

.incbin "base.gba", 0x996EC, 0x460
PTR_H_Reset_08099b4c:	.4byte 0xffff0000

.incbin "base.gba", 0x99B50, 0x42C0
PTR_H_Reset_0809de10:	.4byte 0xffff0000

.incbin "base.gba", 0x9DE14, 0xE84
PTR_H_Reset_0809ec98:	.4byte 0xffff0000

.incbin "base.gba", 0x9EC9C, 0x1F1C

_080a0bb8:

.incbin "base.gba", 0xA0BB8, 0xD04

_080a18bc:

.incbin "base.gba", 0xA18BC, 0xC78

_080a2534:

.incbin "base.gba", 0xA2534, 0xFFC

_080a3530:

.incbin "base.gba", 0xA3530, 0xDD0

_080a4300:

.incbin "base.gba", 0xA4300, 0x1028

_080a5328:

.incbin "base.gba", 0xA5328, 0xDC0

_080a60e8:

.incbin "base.gba", 0xA60E8, 0xED4

_080a6fbc:

.incbin "base.gba", 0xA6FBC, 0xDA4

_080a7d60:

.incbin "base.gba", 0xA7D60, 0xF4C

_080a8cac:

.incbin "base.gba", 0xA8CAC, 0xF50

_080a9bfc:

.incbin "base.gba", 0xA9BFC, 0xAF8

_080aa6f4:

.incbin "base.gba", 0xAA6F4, 0xE90

_080ab584:

.incbin "base.gba", 0xAB584, 0xB50

_080ac0d4:

.incbin "base.gba", 0xAC0D4, 0xF68

_080ad03c:

.incbin "base.gba", 0xAD03C, 0xFB4

_080adff0:

.incbin "base.gba", 0xADFF0, 0xEE8

_080aeed8:

.incbin "base.gba", 0xAEED8, 0xE68

_080afd40:

.incbin "base.gba", 0xAFD40, 0x1028

_080b0d68:

.incbin "base.gba", 0xB0D68, 0x10FC

_080b1e64:

.incbin "base.gba", 0xB1E64, 0x5348

_080b71ac:

.incbin "base.gba", 0xB71AC, 0x14
_080b71c0:

.incbin "base.gba", 0xB71C0, 0x14
_080b71d4:

.incbin "base.gba", 0xB71D4, 0x14
_080b71e8:

.incbin "base.gba", 0xB71E8, 0x14
_080b71fc:

.incbin "base.gba", 0xB71FC, 0x14
_080b7210:

.incbin "base.gba", 0xB7210, 0x14
_080b7224:

.incbin "base.gba", 0xB7224, 0x14
_080b7238:

.incbin "base.gba", 0xB7238, 0x64

_080b729c:

.incbin "base.gba", 0xB729C, 0x14
_080b72b0:

.incbin "base.gba", 0xB72B0, 0x14
_080b72c4:

.incbin "base.gba", 0xB72C4, 0xB2C

_080b7df0:

.incbin "base.gba", 0xB7DF0, 0x14
_080b7e04:

.incbin "base.gba", 0xB7E04, 0x14
_080b7e18:

.incbin "base.gba", 0xB7E18, 0x14
_080b7e2c:

.incbin "base.gba", 0xB7E2C, 0x14
_080b7e40:

.incbin "base.gba", 0xB7E40, 0x14
_080b7e54:

.incbin "base.gba", 0xB7E54, 0xD2C

_080b8b80:

.incbin "base.gba", 0xB8B80, 0x250
_080b8dd0:

.incbin "base.gba", 0xB8DD0, 0x1EC
_080b8fbc:

.incbin "base.gba", 0xB8FBC, 0x4
_080b8fc0:

.incbin "base.gba", 0xB8FC0, 0x4FC

_080b94bc:

.incbin "base.gba", 0xB94BC, 0x502

_080b99be:

.incbin "base.gba", 0xB99BE, 0x4FE

_080b9ebc:

.incbin "base.gba", 0xB9EBC, 0xA4C

_080ba908:

.incbin "base.gba", 0xBA908, 0x2E4
_080babec:

.incbin "base.gba", 0xBABEC, 0x278
_080bae64:

.incbin "base.gba", 0xBAE64, 0x280
_080bb0e4:

.incbin "base.gba", 0xBB0E4, 0x214
_080bb2f8:

.incbin "base.gba", 0xBB2F8, 0x2B4
_080bb5ac:

.incbin "base.gba", 0xBB5AC, 0x2DCC

_080be378:

.incbin "base.gba", 0xBE378, 0x2484

_080c07fc:

.incbin "base.gba", 0xC07FC, 0xEC
_080c08e8:

.incbin "base.gba", 0xC08E8, 0x440
_080c0d28:

.incbin "base.gba", 0xC0D28, 0x464
_080c118c:

.incbin "base.gba", 0xC118C, 0x44C
_080c15d8:

.incbin "base.gba", 0xC15D8, 0x414
_080c19ec:

.incbin "base.gba", 0xC19EC, 0x404
_080c1df0:

.incbin "base.gba", 0xC1DF0, 0x41C
_080c220c:

.incbin "base.gba", 0xC220C, 0x458
_080c2664:

.incbin "base.gba", 0xC2664, 0x498

_080c2afc:

.incbin "base.gba", 0xC2AFC, 0x110
_080c2c0c:

.incbin "base.gba", 0xC2C0C, 0x5A4

_080c31b0:

.incbin "base.gba", 0xC31B0, 0x114
_080c32c4:

.incbin "base.gba", 0xC32C4, 0x108
_080c33cc:

.incbin "base.gba", 0xC33CC, 0xF0
_080c34bc:

.incbin "base.gba", 0xC34BC, 0xE8
_080c35a4:

.incbin "base.gba", 0xC35A4, 0xD4
_080c3678:

.incbin "base.gba", 0xC3678, 0x438

_080c3ab0:

.incbin "base.gba", 0xC3AB0, 0xE0
_080c3b90:

.incbin "base.gba", 0xC3B90, 0xE0
_080c3c70:

.incbin "base.gba", 0xC3C70, 0x444

_080c40b4:

.incbin "base.gba", 0xC40B4, 0xE8
_080c419c:

.incbin "base.gba", 0xC419C, 0xE0
_080c427c:

.incbin "base.gba", 0xC427C, 0xD8
_080c4354:

.incbin "base.gba", 0xC4354, 0xDC
_080c4430:

.incbin "base.gba", 0xC4430, 0xD8
_080c4508:

.incbin "base.gba", 0xC4508, 0xCC
_080c45d4:

.incbin "base.gba", 0xC45D4, 0x2C8

_080c489c:

.incbin "base.gba", 0xC489C, 0xD0
_080c496c:

.incbin "base.gba", 0xC496C, 0xD4
_080c4a40:

.incbin "base.gba", 0xC4A40, 0xD0
_080c4b10:

.incbin "base.gba", 0xC4B10, 0x1A8

_080c4cb8:

.incbin "base.gba", 0xC4CB8, 0xD0
_080c4d88:

.incbin "base.gba", 0xC4D88, 0xCC
_080c4e54:

.incbin "base.gba", 0xC4E54, 0xCC
_080c4f20:

.incbin "base.gba", 0xC4F20, 0xD4
_080c4ff4:

.incbin "base.gba", 0xC4FF4, 0xCC
_080c50c0:

.incbin "base.gba", 0xC50C0, 0xD0
_080c5190:

.incbin "base.gba", 0xC5190, 0xCC
_080c525c:

.incbin "base.gba", 0xC525C, 0xC4
_080c5320:

.incbin "base.gba", 0xC5320, 0xC8
_080c53e8:

.incbin "base.gba", 0xC53E8, 0x1F24

_080c730c:

.incbin "base.gba", 0xC730C, 0x2B44

_080c9e50:

.incbin "base.gba", 0xC9E50, 0xC84

_080caad4:

.incbin "base.gba", 0xCAAD4, 0x51C

_080caff0:

.incbin "base.gba", 0xCAFF0, 0x674

_080cb664:

.incbin "base.gba", 0xCB664, 0x120
_080cb784:

.incbin "base.gba", 0xCB784, 0x110
_080cb894:

.incbin "base.gba", 0xCB894, 0x11C
_080cb9b0:

.incbin "base.gba", 0xCB9B0, 0x8DC

_080cc28c:

.incbin "base.gba", 0xCC28C, 0x1094

_080cd320:

.incbin "base.gba", 0xCD320, 0x20
_080cd340:

.incbin "base.gba", 0xCD340, 0x209C

_080cf3dc:

.incbin "base.gba", 0xCF3DC, 0x24
_080cf400:

.incbin "base.gba", 0xCF400, 0x28
_080cf428:

.incbin "base.gba", 0xCF428, 0x3420

_080d2848:

.incbin "base.gba", 0xD2848, 0x19B8

_080d4200:

.incbin "base.gba", 0xD4200, 0x220

_080d4420:

.incbin "base.gba", 0xD4420, 0x178
_080d4598:

.incbin "base.gba", 0xD4598, 0x1D0
_080d4768:

.incbin "base.gba", 0xD4768, 0x188
_080d48f0:

.incbin "base.gba", 0xD48F0, 0x1F0
_080d4ae0:

.incbin "base.gba", 0xD4AE0, 0x190
_080d4c70:

.incbin "base.gba", 0xD4C70, 0x1B0
_080d4e20:

.incbin "base.gba", 0xD4E20, 0x198
_080d4fb8:

.incbin "base.gba", 0xD4FB8, 0xC00

_080d5bb8:

.incbin "base.gba", 0xD5BB8, 0x1268

_080d6e20:

.incbin "base.gba", 0xD6E20, 0xA2C

_080d784c:

.incbin "base.gba", 0xD784C, 0x1B94

_080d93e0:

.incbin "base.gba", 0xD93E0, 0x3F00

_080dd2e0:

.incbin "base.gba", 0xDD2E0, 0xCFC

_080ddfdc:

.incbin "base.gba", 0xDDFDC, 0x19C
PTR_H_Reset_080de178:	.4byte 0xffff0000

.incbin "base.gba", 0xDE17C, 0x1C
PTR_H_Reset_080de198:	.4byte 0xffff0000

.incbin "base.gba", 0xDE19C, 0xED2

_080df06e:

.incbin "base.gba", 0xDF06E, 0x476

_080df4e4:

.incbin "base.gba", 0xDF4E4, 0x7B8

_080dfc9c:

.incbin "base.gba", 0xDFC9C, 0x1F8
_080dfe94:

.incbin "base.gba", 0xDFE94, 0x58
_080dfeec:

.incbin "base.gba", 0xDFEEC, 0x6C
_080dff58:

.incbin "base.gba", 0xDFF58, 0x88
_080dffe0:

.incbin "base.gba", 0xDFFE0, 0x12C
_080e010c:

.incbin "base.gba", 0xE010C, 0x12C
_080e0238:

.incbin "base.gba", 0xE0238, 0x500

_080e0738:

.incbin "base.gba", 0xE0738, 0x848

_080e0f80:

.incbin "base.gba", 0xE0F80, 0x180C

_080e278c:

.incbin "base.gba", 0xE278C, 0xCD4

_080e3460:

.incbin "base.gba", 0xE3460, 0x20
_080e3480:

.incbin "base.gba", 0xE3480, 0x1F4
_080e3674:

.incbin "base.gba", 0xE3674, 0x178
_080e37ec:

.incbin "base.gba", 0xE37EC, 0x2510

_080e5cfc:

.incbin "base.gba", 0xE5CFC, 0x20C

_080e5f08:

.incbin "base.gba", 0xE5F08, 0xF4C

_080e6e54:

.incbin "base.gba", 0xE6E54, 0x764
_080e75b8:

.incbin "base.gba", 0xE75B8, 0x4E40

_080ec3f8:

.incbin "base.gba", 0xEC3F8, 0x377C

_080efb74:

.incbin "base.gba", 0xEFB74, 0x238
_080efdac:

.incbin "base.gba", 0xEFDAC, 0x1198

_080f0f44:

.incbin "base.gba", 0xF0F44, 0x3A8
_080f12ec:

.incbin "base.gba", 0xF12EC, 0x20
_080f130c:

.incbin "base.gba", 0xF130C, 0x100

_080f140c:

.incbin "base.gba", 0xF140C, 0x774
_080f1b80:

.incbin "base.gba", 0xF1B80, 0x710
_080f2290:

.incbin "base.gba", 0xF2290, 0x730
_080f29c0:

.incbin "base.gba", 0xF29C0, 0x7C0
_080f3180:

.incbin "base.gba", 0xF3180, 0x7B8 @ 0xE80

_MGBIntroLogo_Pal:
.incbin "../graphics/mobile_adapter_gb/intro/mgb_intro_logo.gbapal" // 80F3938
_MGBIntroLogo_LZ:
.incbin "../graphics/mobile_adapter_gb/intro/mgb_intro_logo.lz" // 80F3958

.incbin "base.gba", 0xF48e4, 0xe4
_080f49c8:	.4byte 0x080e3c40

.incbin "base.gba", 0xF49CC, 0xC
_080f49d8:	.4byte 0x080e3dcc

.incbin "base.gba", 0xF49DC, 0x14
_080f49f0:	.4byte 0x080d4420

.incbin "base.gba", 0xF49F4, 0x20
_080f4a14:	.4byte 0x080e3dec

.incbin "base.gba", 0xF4A18, 0x4C
_080f4a64:	.4byte 0x080e3cc8

.incbin "base.gba", 0xF4A68, 0x48
_080f4ab0:	.4byte 0x00000018
_080f4ab4:	.4byte 0x00000019

.incbin "base.gba", 0xF4AB8, 0x8
_080f4ac0:	.4byte 0x080cc500

.incbin "base.gba", 0xF4AC4, 0x58
_080f4b1c:	.4byte 0x080e3fbc

.incbin "base.gba", 0xF4B20, 0x10
_080f4b30:	.4byte 0x080e3fc4

.incbin "base.gba", 0xF4B34, 0x4C
_080f4b80:	.4byte 0x080e424c

.incbin "base.gba", 0xF4B84, 0x10
_080f4b94:	.4byte 0x080e3dc4

.incbin "base.gba", 0xF4B98, 0x10
_080f4ba8:	.4byte 0x080e3f90

.incbin "base.gba", 0xF4BAC, 0x50
_080f4bfc:	.4byte 0x080c2a9c

.incbin "base.gba", 0xF4C00, 0x8
_080f4c08:	.4byte 0x080d52b0

.incbin "base.gba", 0xF4C0C, 0x14
_080f4c20:	.4byte 0x080e42d4

.incbin "base.gba", 0xF4C24, 0x30
_080f4c54:	.4byte 0x080e4574

.incbin "base.gba", 0xF4C58, 0xC
_080f4c64:	.4byte 0x080e4574

.incbin "base.gba", 0xF4C68, 0x3C
_080f4ca4:	.4byte 0x080e457c

.incbin "base.gba", 0xF4CA8, 0xC
_080f4cb4:	.4byte 0x080e457c

.incbin "base.gba", 0xF4CB8, 0x3C
_080f4cf4:	.4byte 0x080e49ac

.incbin "base.gba", 0xF4CF8, 0xC
_080f4d04:	.4byte 0x080e49ac

.incbin "base.gba", 0xF4D08, 0x590
_080f5298:	.4byte 0x080f4da0

.incbin "base.gba", 0xF529C, 0x5C
PTR_PTR_H_Reset_080f52f8:	.4byte PTR_H_Reset_08099b4c

.incbin "base.gba", 0xF52FC, 0x3C
_080f5338:	.4byte 0x08099b8c

.incbin "base.gba", 0xF533C, 0x68
_080f53a4:	.4byte 0x080e56a0

.incbin "base.gba", 0xF53A8, 0x2C
_080f53d4:	.4byte 0x080e5804

.incbin "base.gba", 0xF53D8, 0x24
_080f53fc:	.4byte 0x08F80001

.incbin "base.gba", 0xF5400, 0x4
_080f5404:	.4byte 0x080dfe94

.incbin "base.gba", 0xF5408, 0x88
_080f5490:	.4byte 0x080f5450

.incbin "base.gba", 0xF5494, 0x88
_080f551c:	.4byte 0x080e5804

.incbin "base.gba", 0xF5520, 0xC
_080f552c:	.4byte 0x080e57dc

.incbin "base.gba", 0xF5530, 0x4C
_080f557c:	.4byte 0x080f5450

.incbin "base.gba", 0xF5580, 0x338
_080f58b8:	.4byte 0x080e5824

.incbin "base.gba", 0xF58BC, 0x34
_080f58f0:	.4byte 0x080f58d0

.incbin "base.gba", 0xF58F4, 0x8D0
_080f61c4:	.4byte 0x0809727c

.incbin "base.gba", 0xF61C8, 0x3D0
_080f6598:	.4byte 0x080c08e8

.incbin "base.gba", 0xF659C, 0x54
_080f65f0:	.4byte 0x080de0d8

.incbin "base.gba", 0xF65F4, 0x2C
_080f6620:	.4byte 0x080c2afc

.incbin "base.gba", 0xF6624, 0x3C
_080f6660:	.4byte 0x080c3ab0

.incbin "base.gba", 0xF6664, 0x3C
_080f66a0:	.4byte 0x080c489c

.incbin "base.gba", 0xF66A4, 0x3C
_080f66e0:	.4byte 0x080f6620

.incbin "base.gba", 0xF66E4, 0xC
_080f66f0:	.4byte 0x080c2a9c

.incbin "base.gba", 0xF66F4, 0x1EC4
_080f85b8:	.4byte 0x080f85c8 @ "DIRECTOR"

.incbin "base.gba", 0xF85BC, 0x4B8
_080f8a74:	.4byte _080f85b8

.incbin "base.gba", 0xF8A78, 0x88
_080f8b00:	.4byte 0x080a040a

.incbin "base.gba", 0xF8B04, 0x40

_080f8b44:

.incbin "base.gba", 0xF8B44, 0x4
_080f8b48:

.incbin "base.gba", 0xF8B48, 0x4
_080f8b4c:

.incbin "base.gba", 0xF8B4C, 0x4
_080f8b50:

.incbin "base.gba", 0xF8B50, 0x4
_080f8b54:

.incbin "base.gba", 0xF8B54, 0x4
_080f8b58:

.incbin "base.gba", 0xF8B58, 0x4
_080f8b5c:

.incbin "base.gba", 0xF8B5C, 0x4
_080f8b60:

.incbin "base.gba", 0xF8B60, 0x4
_080f8b64:

.incbin "base.gba", 0xF8B64, 0x4
_080f8b68:	.4byte 0xF007F006

.incbin "base.gba", 0xF8B6C, 0x6

_080f8b72:

.incbin "base.gba", 0xF8B72, 0x9A
_080f8c0c:

.incbin "base.gba", 0xF8C0C, 0x8460

.incbin "base.gba", 0x10106C, 0x3C
_081010a8:	.4byte 0x00000C8B

.incbin "base.gba", 0x1010AC, 0x13C
_081011e8:	.4byte 0x0000471C

.incbin "base.gba", 0x1011EC, 0x23C
_08101428:	.4byte 0x00007F62

.incbin "base.gba", 0x10142C, 0x3C
_08101468:	.4byte 0x00008000

.incbin "base.gba", 0x10146C, 0x17C
_081015e8:	.4byte 0x00006A6D

.incbin "base.gba", 0x1015EC, 0x67C
_08101c68:	.4byte 0xFFFF8000

.incbin "base.gba", 0x101C6C, 0x27C
_08101ee8:	.4byte 0xFFFFB8E4

.incbin "base.gba", 0x101EEC, 0x184
_08102070:	.4byte 0x00000004
_08102074:	.4byte 0x00000005

.incbin "base.gba", 0x102078, 0x58
_081020d0:	.4byte 0x00000020
_081020d4:	.4byte 0x00000021

.incbin "base.gba", 0x1020D8, 0x4F8
_081025d0:	.4byte 0x080be464

.incbin "base.gba", 0x1025D4, 0x34
_08102608:	.4byte 0x080be5c8

.incbin "base.gba", 0x10260C, 0x64C
_08102c58:	.4byte 0x081025a0
_08102c5c:	.4byte 0x081025d8

.incbin "base.gba", 0x102C60, 0x78
_08102cd8:	.4byte 0x08091a20

.incbin "base.gba", 0x102CDC, 0xC
_08102ce8:	.4byte 0x0808dfa0

.incbin "base.gba", 0x102CEC, 0x14
_08102d00:	.4byte 0x0808f320

.incbin "base.gba", 0x102D04, 0x14
_08102d18:	.4byte 0x080906a0

.incbin "base.gba", 0x102D1C, 0x14
_08102d30:	.4byte 0x08102ce8

.incbin "base.gba", 0x102D34, 0x8
_08102d3c:	.4byte 0x08091aa0

.incbin "base.gba", 0x102D40, 0x2C
_08102d6c:	.4byte 0x08091b2c

.incbin "base.gba", 0x102D70, 0xFC
_08102e6c:	.4byte 0x080920e8

.incbin "base.gba", 0x102E70, 0x24
_08102e94:	.4byte 0x00000140

.incbin "base.gba", 0x102E98, 0x64
_08102efc:	.4byte 0x08092168

.incbin "base.gba", 0x102F00, 0x3B40
_08106a40:	.4byte 0x080000e0

.incbin "base.gba", 0x106A44, 0x42C
_08106e70:	.4byte 0xffffffab

.incbin "base.gba", 0x106E74, 0xA42
_081078b6:	.4byte 0x08100006

.incbin "base.gba", 0x1078BA, 0xCFE
_081085b8:	.4byte 0x08089060

.incbin "base.gba", 0x1085BC, 0x1C
_081085d8:	.4byte 0x08096598
_081085dc:	.4byte 0x00000005

.incbin "base.gba", 0x1085E0, 0xE0
_081086c0:	.4byte 0x080964d8

.incbin "base.gba", 0x1086C4, 0x14
_081086d8:	.4byte 0x08096508

.incbin "base.gba", 0x1086DC, 0x14
_081086f0:	.4byte 0x08096538

.incbin "base.gba", 0x1086F4, 0x14
_08108708:	.4byte 0x00000000

.incbin "base.gba", 0x10870C, 0x8
_08108714:	.4byte 0x00000000

.incbin "base.gba", 0x108718, 0xBF8
_08109310:	.4byte 0x08081268

.incbin "base.gba", 0x109314, 0x1C
_08109330:	.4byte 0x0808d3a0

.incbin "base.gba", 0x109334, 0x80

_081093b4:

.incbin "base.gba", 0x1093B4, 0x10
_081093c4:

.incbin "base.gba", 0x1093C4, 0x10
_081093d4:

.incbin "base.gba", 0x1093D4, 0x14AC
_0810a880:	.4byte 0x0810a7fc

.incbin "base.gba", 0x10A884, 0xCC
_0810a950:	.4byte 0x0809272c

.incbin "base.gba", 0x10A954, 0x10
_0810a964:	.4byte 0x080bb7f8

.incbin "base.gba", 0x10A968, 0x8C
_0810a9f4:	.4byte 0x080972dc

.incbin "base.gba", 0x10A9F8, 0x5C
_0810aa54:	.4byte 0x0809733c

.incbin "base.gba", 0x10AA58, 0x3C
_0810aa94:	.4byte 0x0809735c

.incbin "base.gba", 0x10AA98, 0x5C
_0810aaf4:	.4byte 0x08098264

.incbin "base.gba", 0x10AAF8, 0x1C
_0810ab14:	.4byte 0x08098284

.incbin "base.gba", 0x10AB18, 0x1C
_0810ab34:	.4byte 0x0809829c

.incbin "base.gba", 0x10AB38, 0x3C
_0810ab74:	.4byte 0x0809830c

.incbin "base.gba", 0x10AB78, 0x1C
_0810ab94:	.4byte 0x0809832c

.incbin "base.gba", 0x10AB98, 0x3C
_0810abd4:	.4byte 0x0809836c

.incbin "base.gba", 0x10ABD8, 0x1C
_0810abf4:	.4byte 0x08098374

.incbin "base.gba", 0x10ABF8, 0x1C
_0810ac14:	.4byte 0x0809741c

.incbin "base.gba", 0x10AC18, 0x1C
_0810ac34:	.4byte 0x08097424

.incbin "base.gba", 0x10AC38, 0x1C
_0810ac54:	.4byte 0x0809740c

.incbin "base.gba", 0x10AC58, 0xDC
_0810ad34:	.4byte 0x0809736c

.incbin "base.gba", 0x10AD38, 0x1C
_0810ad54:	.4byte 0x0809738c

.incbin "base.gba", 0x10AD58, 0x1C
_0810ad74:	.4byte 0x080973ac

.incbin "base.gba", 0x10AD78, 0x1C
_0810ad94:	.4byte 0x080973cc

.incbin "base.gba", 0x10AD98, 0x1C
_0810adb4:	.4byte 0x080973ec

.incbin "base.gba", 0x10ADB8, 0x1C
_0810add4:	.4byte 0x0809743c

.incbin "base.gba", 0x10ADD8, 0x1C
_0810adf4:	.4byte 0x08097444

.incbin "base.gba", 0x10ADF8, 0x1C
_0810ae14:	.4byte 0x0809746c

.incbin "base.gba", 0x10AE18, 0x1C
_0810ae34:	.4byte 0x080974bc

.incbin "base.gba", 0x10AE38, 0x1C
_0810ae54:	.4byte 0x080974c4

.incbin "base.gba", 0x10AE58, 0x1C
_0810ae74:	.4byte 0x0809748c

.incbin "base.gba", 0x10AE78, 0x1C
_0810ae94:	.4byte 0x08097494

.incbin "base.gba", 0x10AE98, 0x1C
_0810aeb4:	.4byte 0x080974fc

.incbin "base.gba", 0x10AEB8, 0x1C
_0810aed4:	.4byte 0x08097514

.incbin "base.gba", 0x10AED8, 0x1C
_0810aef4:	.4byte 0x0809758c

.incbin "base.gba", 0x10AEF8, 0x1C
_0810af14:	.4byte 0x080975a4

.incbin "base.gba", 0x10AF18, 0x1C
_0810af34:	.4byte 0x080975cc

.incbin "base.gba", 0x10AF38, 0x1C
_0810af54:	.4byte 0x08097634

.incbin "base.gba", 0x10AF58, 0x1C
_0810af74:	.4byte 0x08097d6c

.incbin "base.gba", 0x10AF78, 0x1C
_0810af94:	.4byte 0x08097d84

.incbin "base.gba", 0x10AF98, 0x1C
_0810afb4:	.4byte 0x08097fd8

.incbin "base.gba", 0x10AFB8, 0x1C
_0810afd4:	.4byte 0x0809752c

.incbin "base.gba", 0x10AFD8, 0x1C
_0810aff4:	.4byte 0x080975e4

.incbin "base.gba", 0x10AFF8, 0x1C
_0810b014:	.4byte 0x08097544

.incbin "base.gba", 0x10B018, 0x1C
_0810b034:	.4byte 0x08097554

.incbin "base.gba", 0x10B038, 0x1C
_0810b054:	.4byte 0x08097564

.incbin "base.gba", 0x10B058, 0x1C
_0810b074:	.4byte 0x0809757c

.incbin "base.gba", 0x10B078, 0x1C
_0810b094:	.4byte 0x080975bc

.incbin "base.gba", 0x10B098, 0x1C
_0810b0b4:	.4byte 0x080975fc

.incbin "base.gba", 0x10B0B8, 0x1C
_0810b0d4:	.4byte 0x0809761c

.incbin "base.gba", 0x10B0D8, 0x1C
_0810b0f4:	.4byte 0x08097654

.incbin "base.gba", 0x10B0F8, 0x1C
_0810b114:	.4byte 0x080976cc

.incbin "base.gba", 0x10B118, 0x1C
_0810b134:	.4byte 0x08097674

.incbin "base.gba", 0x10B138, 0x1C
_0810b154:	.4byte 0x0809768c

.incbin "base.gba", 0x10B158, 0x1C
_0810b174:	.4byte 0x08097694

.incbin "base.gba", 0x10B178, 0x1C
_0810b194:	.4byte 0x080976f0

.incbin "base.gba", 0x10B198, 0x1C
_0810b1b4:	.4byte 0x080976f8

.incbin "base.gba", 0x10B1B8, 0x1C
_0810b1d4:	.4byte 0x08097700

.incbin "base.gba", 0x10B1D8, 0x1C
_0810b1f4:	.4byte 0x08097708

.incbin "base.gba", 0x10B1F8, 0x1C
_0810b214:	.4byte 0x08097720

.incbin "base.gba", 0x10B218, 0x1C
_0810b234:	.4byte 0x0809772c

.incbin "base.gba", 0x10B238, 0x1C
_0810b254:	.4byte 0x08097744

.incbin "base.gba", 0x10B258, 0x1C
_0810b274:	.4byte 0x0809775c

.incbin "base.gba", 0x10B278, 0x3C
_0810b2b4:	.4byte 0x080978a4

.incbin "base.gba", 0x10B2B8, 0x1C
_0810b2d4:	.4byte 0x080978c4

.incbin "base.gba", 0x10B2D8, 0x1C
_0810b2f4:	.4byte 0x080978e4

.incbin "base.gba", 0x10B2F8, 0xBC
_0810b3b4:	.4byte 0x0809797c

.incbin "base.gba", 0x10B3B8, 0x1C
_0810b3d4:	.4byte 0x080979d4

.incbin "base.gba", 0x10B3D8, 0x7C
_0810b454:	.4byte 0x08097a0c

.incbin "base.gba", 0x10B458, 0x5C
_0810b4b4:	.4byte 0x08097a54

.incbin "base.gba", 0x10B4B8, 0x1C
_0810b4d4:	.4byte 0x08097a74

.incbin "base.gba", 0x10B4D8, 0x1C
_0810b4f4:	.4byte 0x08097a8c

.incbin "base.gba", 0x10B4F8, 0x1C
_0810b514:	.4byte 0x08097aac

.incbin "base.gba", 0x10B518, 0x1C
_0810b534:	.4byte 0x08097acc

.incbin "base.gba", 0x10B538, 0x1C
_0810b554:	.4byte 0x08097adc

.incbin "base.gba", 0x10B558, 0x1C
_0810b574:	.4byte 0x08097b34

.incbin "base.gba", 0x10B578, 0x1C
_0810b594:	.4byte 0x08097b54

.incbin "base.gba", 0x10B598, 0x1C
_0810b5b4:	.4byte 0x08097b74

.incbin "base.gba", 0x10B5B8, 0x1C
_0810b5d4:	.4byte 0x08097b84

.incbin "base.gba", 0x10B5D8, 0x1C
_0810b5f4:	.4byte 0x08097bf4

.incbin "base.gba", 0x10B5F8, 0x1C
_0810b614:	.4byte 0x08097c14

.incbin "base.gba", 0x10B618, 0x9C
_0810b6b4:	.4byte 0x08097d34

.incbin "base.gba", 0x10B6B8, 0x1C
_0810b6d4:	.4byte 0x08097d54

.incbin "base.gba", 0x10B6D8, 0x1C
_0810b6f4:	.4byte 0x08097ca4

.incbin "base.gba", 0x10B6F8, 0xBC
_0810b7b4:	.4byte 0x08097cd4

.incbin "base.gba", 0x10B7B8, 0x1C
_0810b7d4:	.4byte 0x08097d9c

.incbin "base.gba", 0x10B7D8, 0x1C
_0810b7f4:	.4byte 0x08097db4

.incbin "base.gba", 0x10B7F8, 0x1C
_0810b814:	.4byte 0x08097dcc

.incbin "base.gba", 0x10B818, 0xBC
_0810b8d4:	.4byte 0x08097e4c

.incbin "base.gba", 0x10B8D8, 0x1C
_0810b8f4:	.4byte 0x08097e9c

.incbin "base.gba", 0x10B8F8, 0x1C
_0810b914:	.4byte 0x08097eb8

.incbin "base.gba", 0x10B918, 0x1C
_0810b934:	.4byte 0x08097ee4

.incbin "base.gba", 0x10B938, 0x1C
_0810b954:	.4byte 0x08097f18

.incbin "base.gba", 0x10B958, 0x1C
_0810b974:	.4byte 0x08097f38

.incbin "base.gba", 0x10B978, 0x1C
_0810b994:	.4byte 0x08097f40

.incbin "base.gba", 0x10B998, 0x1C
_0810b9b4:	.4byte 0x08097f48

.incbin "base.gba", 0x10B9B8, 0x1C
_0810b9d4:	.4byte 0x08097f68

.incbin "base.gba", 0x10B9D8, 0x1C
_0810b9f4:	.4byte 0x08097f88

.incbin "base.gba", 0x10B9F8, 0x1C
_0810ba14:	.4byte 0x08097fb8

.incbin "base.gba", 0x10BA18, 0x4
_0810ba1c:	.4byte 0x08097fc0

.incbin "base.gba", 0x10BA20, 0x14
_0810ba34:	.4byte 0x08097ff0

.incbin "base.gba", 0x10BA38, 0x3C
_0810ba74:	.4byte 0x08098020

.incbin "base.gba", 0x10BA78, 0x1C
_0810ba94:	.4byte 0x08098028

.incbin "base.gba", 0x10BA98, 0x1C
_0810bab4:	.4byte 0x08098048

.incbin "base.gba", 0x10BAB8, 0x1C
_0810bad4:	.4byte 0x08098050

.incbin "base.gba", 0x10BAD8, 0x1C
_0810baf4:	.4byte 0x08098070

.incbin "base.gba", 0x10BAF8, 0xBC
_0810bbb4:	.4byte 0x080980c0

.incbin "base.gba", 0x10BBB8, 0x1C
_0810bbd4:	.4byte 0x080980d8

.incbin "base.gba", 0x10BBD8, 0x1C
_0810bbf4:	.4byte 0x080979f4

.incbin "base.gba", 0x10BBF8, 0x718
_0810c310:	.4byte 0x0808cc10

.incbin "base.gba", 0x10C314, 0x314
_0810c628:	.4byte 0x0808d0c0

.incbin "base.gba", 0x10C62C, 0x10C
_0810c738:	.4byte 0x0808d0d8

.incbin "base.gba", 0x10C73C, 0x58
_0810c794:	.4byte 0x08091d18

.incbin "base.gba", 0x10C798, 0x90
_0810c828:	.4byte 0x08091d54

.incbin "base.gba", 0x10C82C, 0x90
_0810c8bc:	.4byte 0x08091df4

.incbin "base.gba", 0x10C8C0, 0x154
_0810ca14:	.4byte 0x08091e84

.incbin "base.gba", 0x10CA18, 0x138
_0810cb50:	.4byte 0x08091f08

.incbin "base.gba", 0x10CB54, 0x18
_0810cb6c:	.4byte 0x08091fe8

.incbin "base.gba", 0x10CB70, 0x140
_0810ccb0:	.4byte 0x0808d0e4

.incbin "base.gba", 0x10CCB4, 0x74
_0810cd28:	.4byte 0x08091a40

.incbin "base.gba", 0x10CD2C, 0xA4
_0810cdd0:	.4byte 0x0808ccc8

.incbin "base.gba", 0x10CDD4, 0x58
_0810ce2c:	.4byte 0x0808cd60

.incbin "base.gba", 0x10CE30, 0xC4
_0810cef4:	.4byte 0x0808d104

.incbin "base.gba", 0x10CEF8, 0xE4
_0810cfdc:	.4byte 0x0808d164

.incbin "base.gba", 0x10CFE0, 0x10C
_0810d0ec:	.4byte 0x0808d194

.incbin "base.gba", 0x10D0F0, 0x70
_0810d160:	.4byte 0x0808d1b8

.incbin "base.gba", 0x10D164, 0x23C
_0810d3a0:	.4byte 0x0808d268

.incbin "base.gba", 0x10D3A4, 0xE4
_0810d488:	.4byte 0x0808d2c8

.incbin "base.gba", 0x10D48C, 0x374
_0810d800:	.4byte 0x0810d6e8

.incbin "base.gba", 0x10D804, 0xC4
_0810d8c8:	.4byte 0x080969ec

.incbin "base.gba", 0x10D8CC, 0x2C
_0810d8f8:	.4byte 0x08096ba4

.incbin "base.gba", 0x10D8FC, 0x2C
_0810d928:	.4byte 0x08096a8c

.incbin "base.gba", 0x10D92C, 0x2C
_0810d958:	.4byte 0x08096c6c

.incbin "base.gba", 0x10D95C, 0x2C
_0810d988:	.4byte 0x08096b18

.incbin "base.gba", 0x10D98C, 0x2C
_0810d9b8:	.4byte 0x08096cd0

.incbin "base.gba", 0x10D9BC, 0x2C
_0810d9e8:	.4byte 0x08096d34

.incbin "base.gba", 0x10D9EC, 0x3C
_0810da28:	.4byte 0x08096d34

.incbin "base.gba", 0x10DA2C, 0x94
_0810dac0:	.4byte 0x08096d34

.incbin "base.gba", 0x10DAC4, 0x4C
_0810db10:	.4byte 0x0810d9e8

.incbin "base.gba", 0x10DB14, 0x74
_0810db88:	.4byte 0x08096620

.incbin "base.gba", 0x10DB8C, 0x64
_0810dbf0:	.4byte 0x08096774

.incbin "base.gba", 0x10DBF4, 0x2C
_0810dc20:	.4byte 0x08096818

.incbin "base.gba", 0x10DC24, 0x1C
_0810dc40:	.4byte 0x080969e4

.incbin "base.gba", 0x10DC44, 0xC
_0810dc50:	.4byte 0x08096e60

.incbin "base.gba", 0x10DC54, 0x6C
_0810dcc0:	.4byte 0x08096fd4

.incbin "base.gba", 0x10DCC4, 0x74
_0810dd38:	.4byte 0x08097114

.incbin "base.gba", 0x10DD3C, 0x28
_0810dd64:	.4byte 0x08097124

.incbin "base.gba", 0x10DD68, 0x24
_0810dd8c:	.4byte 0x0810dd84

.incbin "base.gba", 0x10DD90, 0xC
_0810dd9c:	.4byte 0x0810dd84

.incbin "base.gba", 0x10DDA0, 0x1C
_0810ddbc:	.4byte 0x0810ddb4

.incbin "base.gba", 0x10DDC0, 0x64
_0810de24:	.4byte 0x0810ef24
_0810de28:	.4byte 0x0810ee18
_0810de2c:	.4byte 0x0810ed90
_0810de30:	.4byte 0x0810ec84
_0810de34:	.4byte 0x0810eba4
_0810de38:	.4byte 0x0810eac4
_0810de3c:	.4byte 0x0810ea10
_0810de40:	.4byte 0x0810e930
_0810de44:	.4byte 0x0810e87c
_0810de48:	.4byte 0x0810e79c
_0810de4c:	.4byte 0x0810e714
_0810de50:	.4byte 0x0810e660
_0810de54:	.4byte 0x0810e5ac
_0810de58:	.4byte 0x0810e4a0
_0810de5c:	.4byte 0x0810e3c0
_0810de60:	.4byte 0x0810e338
_0810de64:	.4byte 0x0810e22c
_0810de68:	.4byte 0x0810e14c
_0810de6c:	.4byte 0x0810e06c
_0810de70:	.4byte 0x0810dfe4
_0810de74:	.4byte 0x0810df30
_0810de78:	.4byte 0x0810de7c

.incbin "base.gba", 0x10DE7C, 0x1F0

_0810e06c:

.incbin "base.gba", 0x10E06C, 0x34
_0810e0a0:

.incbin "base.gba", 0x10E0A0, 0x10
_0810e0b0:

.incbin "base.gba", 0x10E0B0, 0x38
_0810e0e8:

.incbin "base.gba", 0x10E0E8, 0x1C
_0810e104:

.incbin "base.gba", 0x10E104, 0x48
_0810e14c:

.incbin "base.gba", 0x10E14C, 0x8
_0810e154:

.incbin "base.gba", 0x10E154, 0xEDC
_0810f030:	.4byte 0x00000009

.incbin "base.gba", 0x10F034, 0xC
_0810f040:	.4byte 0x0001869F

.incbin "base.gba", 0x10F044, 0x30
_0810f074:	.4byte 0xffffffff
_0810f078:	.4byte sub_0805ae04
_0810f07c:	.4byte 0x00000090

.incbin "base.gba", 0x10F080, 0x8
_0810f088:	.4byte 0x00000090

.incbin "base.gba", 0x10F08C, 0x20
_0810f0ac:	.4byte 0x0805AF0D
_0810f0b0:	.4byte 0x08066DB9
_0810f0b4:	.4byte 0x0000008E
_0810f0b8:	.4byte sub_0805c788
_0810f0bc:	.4byte 0x08066DB9
_0810f0c0:	.4byte 0x0000008E
_0810f0c4:	.4byte 0xffffffff
_0810f0c8:	.4byte 0x08069C05
_0810f0cc:	.4byte 0x0000008E
_0810f0d0:	.4byte 0xffffffff
_0810f0d4:	.4byte 0x080658A5
_0810f0d8:	.4byte 0x0000008E

.incbin "base.gba", 0x10F0DC, 0x2FC

_0810f3d8:

.incbin "base.gba", 0x10F3D8, 0x20
_0810f3f8:

.incbin "base.gba", 0x10F3F8, 0x14
_0810f40c:

.incbin "base.gba", 0x10F40C, 0x4
_0810f410:

.incbin "base.gba", 0x10F410, 0x14
_0810f424:

.incbin "base.gba", 0x10F424, 0x14
_0810f438:

.incbin "base.gba", 0x10F438, 0x14
_0810f44c:	.4byte 0x0805C58D
_0810f450:	.4byte 0x080649B1
_0810f454:	.4byte 0x0000008E
_0810f458:	.4byte 0x0805C58D
_0810f45c:	.4byte 0x080657B1
_0810f460:	.4byte 0x0000008E
_0810f464:	.4byte 0xffffffff
_0810f468:	.4byte 0x0805C1F9
_0810f46c:	.4byte 0x0000008E
_0810f470:	.4byte 0xffffffff
_0810f474:	.4byte 0x0805AE79
_0810f478:	.4byte 0x0000008E

.incbin "base.gba", 0x10F47C, 0x18

_0810f494:

.incbin "base.gba", 0x10F494, 0x1C
_0810f4b0:

.incbin "base.gba", 0x10F4B0, 0x1C
_0810f4cc:

.incbin "base.gba", 0x10F4CC, 0x1C
_0810f4e8:

.incbin "base.gba", 0x10F4E8, 0x1C
_0810f504:

.incbin "base.gba", 0x10F504, 0x1C
_0810f520:

.incbin "base.gba", 0x10F520, 0x14
_0810f534:

.incbin "base.gba", 0x10F534, 0x30
_0810f564:

.incbin "base.gba", 0x10F564, 0xA90
_0810fff4:	.4byte 0x08110070
_0810fff8:	.4byte 0x08110068 @ "&rk_2="

.incbin "base.gba", 0x10FFFC, 0x130
_0811012c:	.4byte 0x081100fc @ "0.dlghostid.cgb"
_08110130:	.4byte 0x0811010c @ "0.dlghostst.cgb"
_08110134:	.4byte 0x0811011c @ "0.dlghostdr.cgb"

.incbin "base.gba", 0x110138, 0x5A0
_081106d8:	.4byte 0x0806F0B9
_081106dc:	.4byte sub_0806f540
_081106e0:	.4byte sub_0806f63c
_081106e4:	.4byte sub_0806f404
_081106e8:	.4byte sub_0806f744
_081106ec:	.4byte sub_0806f844
_081106f0:	.4byte 0x0806f1b1

.incbin "base.gba", 0x1106F4, 0xAB0
_081111a4:	.4byte 0x08111244

.incbin "base.gba", 0x1111A8, 0x354
_081114fc:	.4byte 0x0000001E
_08111500:	.4byte 0x00000050
_08111504:	.4byte 0x080983fc
_08111508:	.4byte 0x00000000
_0811150c:	.4byte 0x0000003F
_08111510:	.4byte 0x00000050
_08111514:	.4byte 0x08098404
_08111518:	.4byte 0x0000000A

.incbin "base.gba", 0x11151C, 0x4C
_08111568:	.4byte 0x00000076

.incbin "base.gba", 0x11156C, 0x360
_081118cc:	.4byte 0x08111e90

.incbin "base.gba", 0x1118D0, 0x5D0
_08111ea0:	.4byte 0x08111e90

.incbin "base.gba", 0x111EA4, 0x550
_081123f4:	.4byte 0x08112468

.incbin "base.gba", 0x1123F8, 0x7C
_08112474:	.4byte 0x081124ac

.incbin "base.gba", 0x112478, 0x246C
_081148e4:	.4byte 0x08080807

.incbin "base.gba", 0x1148E8, 0x144
_08114a2c:	.4byte 0x08115114
_08114a30:	.4byte 0x081150fc

.incbin "base.gba", 0x114A34, 0x744
_08115178:	.4byte 0x08115270

.incbin "base.gba", 0x11517C, 0x104
_08115280:	.4byte 0x081152f8
_08115284:	.4byte 0x081152f0

.incbin "base.gba", 0x115288, 0x78
_08115300:	.4byte 0x0806FE79
_08115304:	.4byte 0x0806fee9

.incbin "base.gba", 0x115308, 0x164
_0811546c:	.4byte 0xE411F03A
_08115470:	.4byte 0xF1A1BF39

.incbin "base.gba", 0x115474, 0x134
_081155a8:	.4byte sub_08071a60

.incbin "base.gba", 0x1155AC, 0xEF98
_08124544:	.4byte 0x03006A60
_08124548:	.4byte 0x02032400

.incbin "base.gba", 0x12454C, 0x4
_08124550:	.4byte 0x03006C70
_08124554:	.4byte 0x02032680

.incbin "base.gba", 0x124558, 0x1C
_08124574:	.4byte 0x03006D30

.incbin "base.gba", 0x124578, 0x8
_08124580:	.4byte 0x030069A0

.incbin "base.gba", 0x124584, 0x8
_0812458c:	.4byte 0x03006A20

.incbin "base.gba", 0x124590, 0x8
_08124598:	.4byte 0x03006C30

.incbin "base.gba", 0x12459C, 0x8
_081245a4:	.4byte 0x03006D80

.incbin "base.gba", 0x1245A8, 0x8
_081245b0:	.4byte 0x030069E0

.incbin "base.gba", 0x1245B4, 0x14
_081245c8:	.4byte 0x08125240

.incbin "base.gba", 0x1245CC, 0x4
_081245d0:	.4byte 0x081e68c0

.incbin "base.gba", 0x1245D4, 0x31C
_081248f0:	.4byte 0x08206cec

.incbin "base.gba", 0x1248f4, 0x4
_081248f8:	.4byte 0x08206d14

.incbin "base.gba", 0x1248fc, 0xAC
_081249a8:	.4byte 0x08207224

.incbin "base.gba", 0x1249ac, 0x14
_081249c0:	.4byte 0x0820739c

.incbin "base.gba", 0x1249c4, 0x74
_08124a38:	.4byte 0x082076f0

.incbin "base.gba", 0x124A3C, 0x9C
_08124ad8:	.4byte 0x08208138

.incbin "base.gba", 0x124adc, 0xA4
_08124b80:	.4byte 0x082084e4

.incbin "base.gba", 0x124b84, 0x6C
_08124bf0:	.4byte 0x08208b3c

.incbin "base.gba", 0x124bf4, 0x5B4
_081251a8:	.4byte 0x0820b1b0

.incbin "base.gba", 0x1251ac, 0x12F54

_08138100:

.incbin "base.gba", 0x138100, 0x75C

_0813885c:

.incbin "base.gba", 0x13885C, 0x6600

_0813ee5c:

.incbin "base.gba", 0x13EE5C, 0x11D0

_0814002c:

.incbin "base.gba", 0x14002C, 0x29F4

_08142a20:

.incbin "base.gba", 0x142A20, 0xADB80
_081f05a0:	.4byte 0x927F28DD

.incbin "base.gba", 0x1F05A4, 0x1104
_081f16a8:	.4byte 0x64378C40

.incbin "base.gba", 0x1F16AC, 0xA16C
_081fb818:	.4byte 0x41F19843

.incbin "base.gba", 0x1FB81C, 0xFF04
_0820b720:	.4byte 0x0820b800
_0820b722:	.4byte 0x0820b8fc

.incbin "base.gba", 0x20B728, 0xAC
_0820b7d4:	.4byte sub_0807219c

.incbin "base.gba", 0x20B7D8, 0x28
_0820b800:	.4byte 0x0807219D
_0820b804:	.4byte sub_08072054
_0820b808:	.4byte 0x080720C9
_0820b80c:	.4byte 0x08071E2D
_0820b810:	.4byte 0x0820b7bc

.incbin "base.gba", 0x20B814, 0x70
_0820b884:	.4byte sub_080722fc

.incbin "base.gba", 0x20B888, 0x28
_0820b8b0:	.4byte sub_080722fc

.incbin "base.gba", 0x20B8B4, 0x48
_0820b8fc:	.4byte sub_08072598

.incbin "base.gba", 0x20B900, 0x14
_0820b914:	.4byte 0x00001000

.incbin "base.gba", 0x20B918, 0x10
_0820b928:	.4byte sub_08072520

.incbin "base.gba", 0x20B92C, 0x14
_0820b940:	.4byte 0x00000080

.incbin "base.gba", 0x20B944, 0x360
_0820bca4:	.4byte 0x0820ba58

.incbin "base.gba", 0x20BCA8, 0xC
_0820bcb4:	.4byte 0x0820bbd4

.incbin "base.gba", 0x20BCB8, 0x6E10
_08212ac8:	.4byte 0x927F28DD

.incbin "base.gba", 0x212ACC, 0x1104
_08213bd0:	.4byte 0x64378C40

.incbin "base.gba", 0x213BD4, 0xA16C
_0821dd40:	.4byte 0x41F19843

.incbin "base.gba", 0x21DD44, 0xFF04
_0822dc48:	.4byte 0x0822dd28

.incbin "base.gba", 0x22DC4C, 0xB0
_0822dcfc:	.4byte 0x0807ea69

.incbin "base.gba", 0x22DD00, 0x28
_0822dd28:	.4byte 0x0807ea69

.incbin "base.gba", 0x22DD2C, 0x80
_0822ddac:	.4byte 0x0807ebc9

.incbin "base.gba", 0x22DDB0, 0x28
_0822ddd8:	.4byte 0x0807ebc9

.incbin "base.gba", 0x22DDDC, 0x48
_0822de24:	.4byte 0x0807ee65

.incbin "base.gba", 0x22DE28, 0x72550

_082a0378:

.incbin "base.gba", 0x2A0378, 0x68454
	thumb_func_start sub_083087cc
sub_083087cc:
	push	{ r4, lr }
	sub		sp, #0x4
	add		r4, r0, #0x0
	mov		r0, #0xe
	ldrsb	r0, [r4, r0]
	cmp		r0, #0x14
	bls		_083087dc
	b		_08308ab0
_083087dc:
	lsl		r0, r0, #0x2
	ldr		r1, _083087e8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x3087E6, 0x2

_083087e8:	.4byte 0x020027EC

.incbin "base.gba", 0x3087EC, 0x2C4

_08308ab0:
	add		sp, #0x4
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_083087cc

	thumb_func_start sub_08308ab8
sub_08308ab8:
	ldrh	r2, [r0, #0x0]
	add		r0, #0x2
	cmp		r2, r1
	bgt		_08308ac2
	sub		r1, r2, #0x1
_08308ac2:
	cmp		r1, #0x0
	ble		_08308ace
_08308ac6:
	add		r0, #0x6
	sub		r1, #0x1
	cmp		r1, #0x0
	bne		_08308ac6
_08308ace:
	ldrh	r0, [r0, #0x2]
	ldr		r2, _08308ae4
	add		r1, r2, #0x0
	and		r1, r0
	add		r0, r1, #0x0
	cmp		r0, #0xff
	bls		_08308ae0
	eor		r0, r2
	neg		r0, r0
_08308ae0:
	bx		lr

.incbin "base.gba", 0x308AE2, 0x2

_08308ae4:	.4byte 0x000001FF
	thumb_func_end sub_08308ab8

	thumb_func_start sub_08308ae8
sub_08308ae8:
	ldrh	r2, [r0, #0x0]
	add		r0, #0x2
	cmp		r2, r1
	bgt		_08308af2
	sub		r1, r2, #0x1
_08308af2:
	cmp		r1, #0x0
	ble		_08308afe
_08308af6:
	add		r0, #0x6
	sub		r1, #0x1
	cmp		r1, #0x0
	bne		_08308af6
_08308afe:
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	bx		lr

.incbin "base.gba", 0x308B06, 0x2
	thumb_func_end sub_08308ae8

	thumb_func_start sub_08308b08
sub_08308b08:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	str		r0, [sp, #0x0]
	str		r1, [sp, #0x4]
	add		r4, r2, #0x0
	ldr		r0, [r3, #0x0]
	mov		r9, r0
	ldrh	r1, [r0, #0x0]
	mov		r8, r1
	mov		r7, #0x0
	cmp		r7, r8
	bge		_08308b7a
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	mov		r10, r0
	mov		r5, r8
	sub		r5, #0x1
	add		r6, r3, #0x0
_08308b34:
	ldr		r0, [r6, #0x4]
	str		r0, [r4, #0x0]
	mov		r1, r10
	strh	r1, [r4, #0x4]
	mov		r0, r9
	add		r1, r5, #0x0
	bl		sub_08308ae8
	ldr		r1, [sp, #0x4]
	add		r0, r1, r0
	strh	r0, [r4, #0x6]
	mov		r0, r10
	strh	r0, [r4, #0xa]
	strh	r0, [r4, #0x8]
	mov		r1, #0x0
	strh	r1, [r4, #0xc]
	mov		r0, #0x1
	strb	r0, [r4, #0xe]
	strh	r1, [r4, #0x10]
	mov		r0, r9
	add		r1, r5, #0x0
	bl		sub_08308ab8
	ldr		r1, [sp, #0x0]
	add		r0, r1, r0
	strh	r0, [r4, #0x12]
	strb	r7, [r4, #0x16]
	mov		r0, r8
	strb	r0, [r4, #0x17]
	add		r4, #0x18
	sub		r5, #0x1
	add		r6, #0x4
	add		r7, #0x1
	cmp		r7, r8
	blt		_08308b34
_08308b7a:
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x308B8A, 0x6
	thumb_func_end sub_08308b08

	thumb_func_start sub_08308b90
sub_08308b90:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0xc
	add		r7, r0, #0x0
	mov		r5, #0x0
	mov		r1, #0xa9
	lsl		r1, r1, #0x2
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	bge		_08308bba
	add		r6, r7, r1
	add		r4, r7, #0x0
	add		r4, #0x4c
_08308baa:
	add		r0, r4, #0x0
	bl		sub_083087cc
	add		r4, #0x18
	add		r5, #0x1
	ldr		r0, [r6, #0x0]
	cmp		r5, r0
	blt		_08308baa
_08308bba:
	mov		r5, #0x0
	mov		r3, #0xa9
	lsl		r3, r3, #0x2
	add		r1, r7, r3
	ldr		r0, [r1, #0x0]
	cmp		r5, r0
	bge		_08308c06
	add		r6, r1, #0x0
_08308bca:
	add		r4, r5, #0x1
	ldr		r0, [r6, #0x0]
	sub		r0, r0, r4
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x3
	add		r1, #0x4c
	add		r1, r7, r1
	ldrh	r2, [r1, #0x6]
	lsl		r2, r2, #0x10
	ldrh	r0, [r1, #0x4]
	orr		r0, r2
	str		r0, [sp, #0x8]
	ldr		r0, [r1, #0x0]
	mov		r5, #0x8
	ldrsh	r2, [r1, r5]
	mov		r5, #0xa
	ldrsh	r3, [r1, r5]
	mov		r5, #0xc
	ldrsh	r1, [r1, r5]
	str		r1, [sp, #0x0]
	mov		r1, #0x0
	str		r1, [sp, #0x4]
	add		r1, sp, #0x8
	bl		sub_0830f6a0
	add		r5, r4, #0x0
	ldr		r0, [r6, #0x0]
	cmp		r5, r0
	blt		_08308bca
_08308c06:
	add		sp, #0xc
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x308C0E, 0x1CB2
	thumb_func_end sub_08308b90

	thumb_func_start sub_0830a8c0
sub_0830a8c0:
	add		r2, r0, #0x0
	mov		r1, #0x0
	strb	r1, [r2, #0x1e]
	strb	r1, [r2, #0x18]
	strb	r1, [r2, #0x1d]
	add		r3, r2, #0x0
	add		r3, #0x4a
	mov		r0, #0xf
	strb	r0, [r3, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x48
	strb	r1, [r0, #0x0]
	strh	r1, [r2, #0x16]
	ldr		r0, _0830a8ec
	strh	r1, [r0, #0x0]
	ldr		r2, _0830a8f0
	ldr		r3, _0830a8f4
	add		r0, r3, #0x0
	strh	r0, [r2, #0x0]
	ldr		r0, _0830a8f8
	strh	r1, [r0, #0x0]
	bx		lr

_0830a8ec:	.4byte SIOModeSelect_GeneralPurposeData
_0830a8f0:	.4byte SIOControlRegister
_0830a8f4:	.4byte 0x00002003
_0830a8f8:	.4byte SIOData_Normal_8bitandUARTMode
	thumb_func_end sub_0830a8c0

	thumb_func_start sub_0830a8fc
sub_0830a8fc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	bl		sub_0830ae20
	cmp		r0, #0x0
	beq		_0830a912
	b		_0830acda
_0830a912:
	add		r0, r7, #0x0
	add		r0, #0x4a
	ldrb	r1, [r0, #0x0]
	mov		r10, r0
	cmp		r1, #0xf
	bls		_0830a926
	sub		r0, r1, #0x1
	mov		r1, r10
	strb	r0, [r1, #0x0]
	b		_0830acda
_0830a926:
	add		r1, r7, #0x0
	add		r1, #0x48
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0830a950
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	ldr		r0, _0830a94c
	ldrh	r0, [r0, #0x0]
	mov		r5, #0xfc
	and		r5, r0
	cmp		r5, #0x8
	beq		_0830a950
	add		r0, r7, #0x0
	bl		sub_0830a8c0
	mov		r0, #0x8
	eor		r0, r5
	b		_0830acdc

_0830a94c:	.4byte SIOControlRegister

_0830a950:
	ldrb	r0, [r7, #0x18]
	cmp		r0, #0xdf
	bls		_0830a9a2
	add		r0, r7, #0x0
	bl		sub_0830ae30
	add		r5, r0, #0x0
	cmp		r5, #0x0
	beq		_0830a964
	b		_0830acdc
_0830a964:
	add		r0, r7, #0x0
	add		r0, #0x4b
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0830a980
	ldrb	r0, [r7, #0x18]
	cmp		r0, #0xe1
	bls		_0830a980
	add		r0, r7, #0x0
	bl		sub_0830ae20
	cmp		r0, #0x0
	bne		_0830a980
	b		_0830acca
_0830a980:
	add		r0, r7, #0x0
	bl		sub_0830ae20
	cmp		r0, #0x0
	beq		_0830a98c
	b		_0830acda
_0830a98c:
	ldrh	r0, [r7, #0x16]
	cmp		r0, #0x0
	bne		_0830a99c
	add		r0, r7, #0x0
	bl		sub_0830a8c0
	mov		r0, #0x71
	b		_0830acdc
_0830a99c:
	sub		r0, #0x1
	strh	r0, [r7, #0x16]
	b		_0830acda
_0830a9a2:
	ldrb	r0, [r7, #0x18]
	cmp		r0, #0x2
	bne		_0830a9aa
	b		_0830aae0
_0830a9aa:
	cmp		r0, #0x2
	bgt		_0830a9b8
	cmp		r0, #0x0
	beq		_0830a9c6
	cmp		r0, #0x1
	beq		_0830aa82
	b		_0830ac18
_0830a9b8:
	cmp		r0, #0xd0
	bne		_0830a9be
	b		_0830ab2c
_0830a9be:
	cmp		r0, #0xd1
	bne		_0830a9c4
	b		_0830abc6
_0830a9c4:
	b		_0830ac18
_0830a9c6:
	mov		r3, #0xe
	mov		r5, #0x3
	ldr		r0, _0830aa0c
	ldrh	r0, [r0, #0x6]
	add		r1, r0, #0x0
	ldr		r0, _0830aa10
	ldrb	r2, [r7, #0x1e]
	add		r6, r2, #0x0
	cmp		r1, r0
	bne		_0830a9ee
	add		r4, r1, #0x0
	ldr		r1, _0830aa14
_0830a9de:
	asr		r3, r3, #0x1
	sub		r1, #0x2
	sub		r5, #0x1
	cmp		r5, #0x0
	beq		_0830a9ee
	ldrh	r0, [r1, #0x0]
	cmp		r0, r4
	beq		_0830a9de
_0830a9ee:
	mov		r0, #0xe
	and		r3, r0
	strb	r3, [r7, #0x1d]
	mov		r5, #0x3
	ldr		r0, _0830aa0c
	ldrh	r0, [r0, #0x6]
	add		r4, r0, #0x0
	asr		r0, r2, #0x3
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0830aa1c
	ldr		r0, _0830aa18
	b		_0830aa42

.incbin "base.gba", 0x30AA0A, 0x2

_0830aa0c:	.4byte SIOData0_Parent__Multi_PlayerMode_
_0830aa10:	.4byte 0x0000FFFF
_0830aa14:	.4byte SIOData3_3rdChild__Multi_PlayerMode_
_0830aa18:	.4byte 0x00007208

_0830aa1c:
	sub		r5, #0x1
	cmp		r5, #0x0
	beq		_0830aa48
	lsl		r0, r5, #0x1
	ldr		r1, _0830aa70
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	add		r4, r0, #0x0
	add		r0, r2, #0x0
	asr		r0, r5
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0830aa1c
	add		r0, r1, #0x0
	lsl		r0, r5
	mov		r1, #0xe4
	lsl		r1, r1, #0x7
	orr		r0, r1
_0830aa42:
	cmp		r4, r0
	beq		_0830aa1c
	mov		r3, #0x0
_0830aa48:
	add		r0, r3, #0x0
	and		r0, r6
	strb	r0, [r7, #0x1e]
	cmp		r3, #0x0
	bne		_0830aa58
	mov		r0, #0xf
	mov		r2, r10
	strb	r0, [r2, #0x0]
_0830aa58:
	mov		r1, r10
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0830aa74
	ldrb	r0, [r7, #0x1d]
	ldrb	r2, [r7, #0x1e]
	cmp		r0, r2
	beq		_0830aa7a
	add		r0, r7, #0x0
	bl		sub_0830ad38
	b		_0830aa82

_0830aa70:	.4byte SIOData0_Parent__Multi_PlayerMode_

_0830aa74:
	sub		r0, #0x1
	mov		r1, r10
	strb	r0, [r1, #0x0]
_0830aa7a:
	ldrb	r1, [r7, #0x1e]
	mov		r2, #0xc4
	lsl		r2, r2, #0x7
	b		_0830ab82
_0830aa82:
	add		r1, r7, #0x0
	add		r1, #0x49
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
	mov		r5, #0x3
	mov		r12, r1
	ldr		r3, _0830aad8
_0830aa90:
	lsl		r0, r5, #0x1
	ldr		r2, _0830aadc
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	add		r4, r0, #0x0
	asr		r0, r4, #0x8
	sub		r2, r5, #0x1
	cmp		r0, #0x72
	bne		_0830aaba
	lsl		r0, r2, #0x1
	add		r0, r0, r3
	strh	r4, [r0, #0x0]
	mov		r0, #0xff
	and		r4, r0
	mov		r0, #0x1
	lsl		r0, r5
	cmp		r4, r0
	bne		_0830aaba
	ldrb	r0, [r1, #0x0]
	orr		r4, r0
	strb	r4, [r1, #0x0]
_0830aaba:
	add		r5, r2, #0x0
	cmp		r5, #0x0
	bne		_0830aa90
	ldrb	r0, [r7, #0x1d]
	mov		r1, r12
	ldrb	r1, [r1, #0x0]
	cmp		r0, r1
	bne		_0830aa7a
	mov		r0, #0x2
	strb	r0, [r7, #0x18]
	mov		r2, r12
	ldrb	r1, [r2, #0x0]
	mov		r2, #0xc2
	lsl		r2, r2, #0x7
	b		_0830ab82

_0830aad8:	.4byte 0x03000184
_0830aadc:	.4byte SIOData0_Parent__Multi_PlayerMode_

_0830aae0:
	mov		r5, #0x3
	mov		r0, #0x49
	add		r0, r0, r7
	mov		r12, r0
	mov		r4, r12
	mov		r6, #0x1
	ldr		r1, _0830ab24
	mov		r9, r1
	ldr		r2, _0830ab28
	mov		r8, r2
_0830aaf4:
	ldrb	r3, [r4, #0x0]
	add		r0, r3, #0x0
	asr		r0, r5
	and		r0, r6
	sub		r2, r5, #0x1
	cmp		r0, #0x0
	beq		_0830ab1a
	lsl		r0, r5, #0x1
	add		r0, r8
	ldrh	r1, [r0, #0x0]
	lsl		r0, r2, #0x1
	add		r0, r9
	ldrh	r0, [r0, #0x0]
	cmp		r1, r0
	beq		_0830ab1a
	add		r0, r6, #0x0
	lsl		r0, r5
	eor		r3, r0
	strb	r3, [r4, #0x0]
_0830ab1a:
	add		r5, r2, #0x0
	cmp		r5, #0x0
	bne		_0830aaf4
	b		_0830ac80

.incbin "base.gba", 0x30AB22, 0x2

_0830ab24:	.4byte 0x03000184
_0830ab28:	.4byte SIOData0_Parent__Multi_PlayerMode_

_0830ab2c:
	mov		r3, #0x1
	mov		r5, #0x3
	mov		r0, #0x49
	add		r0, r0, r7
	mov		r12, r0
	add		r6, r7, #0x0
	add		r6, #0x19
	ldr		r1, _0830ab90
	mov		r8, r1
_0830ab3e:
	lsl		r0, r5, #0x1
	ldr		r2, _0830ab94
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	add		r4, r0, #0x0
	sub		r2, r5, #0x1
	add		r0, r6, r2
	strb	r4, [r0, #0x0]
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	asr		r1, r5
	mov		r0, #0x1
	and		r1, r0
	cmp		r1, #0x0
	beq		_0830ab72
	asr		r0, r4, #0x8
	sub		r0, #0x72
	cmp		r0, #0x1
	bls		_0830ab66
	b		_0830acd0
_0830ab66:
	lsl		r0, r2, #0x1
	add		r0, r8
	ldrh	r0, [r0, #0x0]
	cmp		r4, r0
	bne		_0830ab72
	mov		r3, #0x0
_0830ab72:
	add		r5, r2, #0x0
	cmp		r5, #0x0
	bne		_0830ab3e
	cmp		r3, #0x0
	bne		_0830ab98
	ldrb	r1, [r7, #0x1c]
	mov		r2, #0xc6
	lsl		r2, r2, #0x7
_0830ab82:
	add		r0, r2, #0x0
	orr		r1, r0
	add		r0, r7, #0x0
	bl		sub_0830acec
	b		_0830acdc

.incbin "base.gba", 0x30AB8E, 0x2

_0830ab90:	.4byte 0x03000184
_0830ab94:	.4byte SIOData0_Parent__Multi_PlayerMode_

_0830ab98:
	mov		r0, #0xd1
	strb	r0, [r7, #0x18]
	mov		r3, #0x11
	mov		r5, #0x3
	add		r1, r6, #0x2
_0830aba2:
	ldrb	r0, [r1, #0x0]
	add		r3, r3, r0
	sub		r1, #0x1
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_0830aba2
	strb	r3, [r7, #0x14]
	mov		r0, #0xff
	and		r3, r0
	mov		r1, #0xc8
	lsl		r1, r1, #0x7
	add		r0, r1, #0x0
	orr		r3, r0
	add		r0, r7, #0x0
	add		r1, r3, #0x0
	bl		sub_0830acec
	b		_0830acdc
_0830abc6:
	mov		r5, #0x3
	mov		r2, #0x49
	ldrb	r1, [r2, r7]
	ldr		r2, _0830ac04
	mov		r3, #0x1
_0830abd0:
	ldrh	r0, [r2, #0x0]
	add		r4, r0, #0x0
	add		r0, r1, #0x0
	asr		r0, r5
	and		r0, r3
	cmp		r0, #0x0
	beq		_0830abe4
	asr		r0, r4, #0x8
	cmp		r0, #0x73
	bne		_0830acd0
_0830abe4:
	sub		r2, #0x2
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_0830abd0
	add		r0, r7, #0x0
	bl		sub_083272dc
	add		r5, r0, #0x0
	cmp		r5, #0x0
	bne		_0830ac08
	mov		r0, #0xe0
	strb	r0, [r7, #0x18]
	add		r0, #0xb0
	strh	r0, [r7, #0x16]
	b		_0830acda

.incbin "base.gba", 0x30AC02, 0x2

_0830ac04:	.4byte SIOData3_3rdChild__Multi_PlayerMode_

_0830ac08:
	add		r0, r7, #0x0
	bl		sub_0830a8c0
	mov		r0, #0x1e
	mov		r1, r10
	strb	r0, [r1, #0x0]
	mov		r0, #0x70
	b		_0830acdc
_0830ac18:
	mov		r5, #0x3
	mov		r2, #0x49
	add		r2, r2, r7
	mov		r12, r2
	mov		r8, r12
	mov		r0, #0x1
	mov		r9, r0
_0830ac26:
	mov		r1, r8
	ldrb	r6, [r1, #0x0]
	add		r0, r6, #0x0
	asr		r0, r5
	mov		r2, r9
	and		r0, r2
	cmp		r0, #0x0
	beq		_0830ac60
	lsl		r0, r5, #0x1
	ldr		r1, _0830ac7c
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	add		r4, r0, #0x0
	asr		r2, r4, #0x8
	ldrb	r0, [r7, #0x18]
	lsr		r0, r0, #0x1
	mov		r1, #0x62
	sub		r1, r1, r0
	mov		r3, r9
	lsl		r3, r5
	cmp		r2, r1
	bne		_0830ac5a
	mov		r0, #0xff
	and		r4, r0
	cmp		r4, r3
	beq		_0830ac60
_0830ac5a:
	eor		r6, r3
	mov		r2, r8
	strb	r6, [r2, #0x0]
_0830ac60:
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_0830ac26
	ldrb	r0, [r7, #0x18]
	cmp		r0, #0xc4
	bne		_0830ac80
	mov		r0, r12
	ldrb	r1, [r0, #0x0]
	mov		r0, #0xe
	and		r0, r1
	strb	r0, [r7, #0x1e]
	strb	r5, [r7, #0x18]
	b		_0830aa7a

.incbin "base.gba", 0x30AC7A, 0x2

_0830ac7c:	.4byte SIOData0_Parent__Multi_PlayerMode_

_0830ac80:
	mov		r1, r12
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0830ac92
	add		r0, r7, #0x0
	bl		sub_0830a8c0
	mov		r0, #0x50
	b		_0830acdc
_0830ac92:
	ldrb	r0, [r7, #0x18]
	add		r0, #0x2
	strb	r0, [r7, #0x18]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0xc4
	bne		_0830aca2
	b		_0830aa7a
_0830aca2:
	ldrb	r0, [r7, #0x18]
	ldr		r1, [r7, #0x28]
	add		r0, r0, r1
	sub		r1, r0, #0x3
	ldrb	r2, [r1, #0x0]
	lsl		r2, r2, #0x8
	sub		r0, #0x4
	ldrb	r1, [r0, #0x0]
	orr		r1, r2
	add		r0, r7, #0x0
	bl		sub_0830acec
	add		r5, r0, #0x0
	cmp		r5, #0x0
	bne		_0830acdc
	add		r0, r7, #0x0
	add		r0, #0x4b
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bne		_0830acda
_0830acca:
	bl		sub_0830af34
	b		_0830a926
_0830acd0:
	add		r0, r7, #0x0
	bl		sub_0830a8c0
	mov		r0, #0x60
	b		_0830acdc
_0830acda:
	mov		r0, #0x0
_0830acdc:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x30ACEA, 0x2
	thumb_func_end sub_0830a8fc

	thumb_func_start sub_0830acec
sub_0830acec:
	push	{ r4, lr }
	add		r2, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	ldr		r3, _0830ad18
	ldrh	r0, [r3, #0x0]
	mov		r4, #0x8c
	and		r4, r0
	cmp		r4, #0x8
	bne		_0830ad24
	ldr		r0, _0830ad1c
	strh	r1, [r0, #0x0]
	ldr		r1, _0830ad20
	add		r0, r1, #0x0
	strh	r0, [r3, #0x0]
	add		r1, r2, #0x0
	add		r1, #0x48
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	mov		r0, #0x0
	b		_0830ad30

.incbin "base.gba", 0x30AD16, 0x2

_0830ad18:	.4byte SIOControlRegister
_0830ad1c:	.4byte SIOData_Normal_8bitandUARTMode
_0830ad20:	.4byte 0x00002083

_0830ad24:
	add		r0, r2, #0x0
	bl		sub_0830a8c0
	mov		r0, #0x8
	eor		r4, r0
	add		r0, r4, #0x0
_0830ad30:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x30AD36, 0x2
	thumb_func_end sub_0830acec

	thumb_func_start sub_0830ad38
sub_0830ad38:
	push	{ lr }
	add		r1, r0, #0x0
	ldrb	r0, [r1, #0x18]
	cmp		r0, #0x0
	beq		_0830ad4a
	add		r0, r1, #0x0
	bl		sub_0830a8c0
	b		_0830ad56
_0830ad4a:
	add		r2, r1, #0x0
	add		r2, #0x4a
	strb	r0, [r2, #0x0]
	strb	r0, [r1, #0x1e]
	mov		r0, #0x1
	strb	r0, [r1, #0x18]
_0830ad56:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x30AD5A, 0xC6
	thumb_func_end sub_0830ad38

	thumb_func_start sub_0830ae20
sub_0830ae20:
	ldrb	r0, [r0, #0x18]
	cmp		r0, #0xe9
	beq		_0830ae2a
	mov		r0, #0x0
	b		_0830ae2c
_0830ae2a:
	mov		r0, #0x1
_0830ae2c:
	bx		lr

.incbin "base.gba", 0x30AE2E, 0x2
	thumb_func_end sub_0830ae20

	thumb_func_start sub_0830ae30
sub_0830ae30:
	push	{ r4, r5, r6, lr }
	add		r3, r0, #0x0
	ldrb	r0, [r3, #0x18]
	cmp		r0, #0xe0
	beq		_0830ae4c
	cmp		r0, #0xe0
	blt		_0830ae5c
	cmp		r0, #0xe8
	bgt		_0830ae5c
	cmp		r0, #0xe7
	blt		_0830ae5c
	mov		r4, #0x3
	ldrb	r5, [r3, #0x1e]
	b		_0830aebc
_0830ae4c:
	mov		r1, #0x0
	mov		r0, #0xe1
	strb	r0, [r3, #0x18]
	str		r1, [r3, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0xd
	str		r0, [r3, #0x0]
	b		_0830aeae
_0830ae5c:
	mov		r4, #0x3
	ldrb	r5, [r3, #0x1e]
	mov		r6, #0x1
	ldr		r1, _0830aeb8
_0830ae64:
	ldrh	r0, [r1, #0x0]
	add		r2, r0, #0x0
	add		r0, r5, #0x0
	asr		r0, r4
	and		r0, r6
	cmp		r0, #0x0
	beq		_0830ae78
	ldr		r0, [r3, #0x4]
	cmp		r2, r0
	bne		_0830ae4c
_0830ae78:
	sub		r1, #0x2
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0830ae64
	ldrb	r0, [r3, #0x18]
	add		r0, #0x1
	strb	r0, [r3, #0x18]
	ldr		r1, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	str		r0, [r3, #0x4]
	cmp		r1, #0x0
	bne		_0830aea6
	ldr		r0, [r3, #0x28]
	add		r1, r0, #0x0
	add		r1, #0xac
	ldrb	r1, [r1, #0x0]
	add		r0, #0xad
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	orr		r1, r0
	str		r1, [r3, #0x4]
	lsl		r1, r1, #0x5
	str		r1, [r3, #0x0]
_0830aea6:
	ldr		r0, [r3, #0x0]
	lsr		r0, r0, #0x5
	str		r0, [r3, #0x0]
_0830aeac:
	ldrh	r1, [r3, #0x0]
_0830aeae:
	add		r0, r3, #0x0
	bl		sub_0830acec
	b		_0830af14

.incbin "base.gba", 0x30AEB6, 0x2

_0830aeb8:	.4byte SIOData3_3rdChild__Multi_PlayerMode_

_0830aebc:
	lsl		r0, r4, #0x1
	ldr		r1, _0830af04
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	add		r2, r0, #0x0
	add		r0, r5, #0x0
	asr		r0, r4
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0830aed8
	ldr		r0, [r3, #0x4]
	cmp		r2, r0
	bne		_0830af08
_0830aed8:
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0830aebc
	ldrb	r0, [r3, #0x18]
	add		r0, #0x1
	strb	r0, [r3, #0x18]
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0xe9
	beq		_0830af12
	ldr		r0, [r3, #0x28]
	add		r1, r0, #0x0
	add		r1, #0xae
	ldrb	r1, [r1, #0x0]
	add		r0, #0xaf
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	orr		r1, r0
	str		r1, [r3, #0x0]
	str		r1, [r3, #0x4]
	b		_0830aeac

.incbin "base.gba", 0x30AF02, 0x2

_0830af04:	.4byte SIOData0_Parent__Multi_PlayerMode_

_0830af08:
	add		r0, r3, #0x0
	bl		sub_0830a8c0
	mov		r0, #0x71
	b		_0830af14
_0830af12:
	mov		r0, #0x0
_0830af14:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x30AF1A, 0x2
	thumb_func_end sub_0830ae30

	thumb_func_start sub_0830af1c
sub_0830af1c:
	mov		r2, pc
	lsr		r2, r2, #0x18
	mov		r1, #0xc
	cmp		r2, #0x2
	beq		_0830af2e
	mov		r1, #0xd
	cmp		r2, #0x8
	beq		_0830af2e
	mov		r1, #0x4
_0830af2e:
	sub		r0, r0, r1
	bgt		_0830af2e
	bx		lr
	thumb_func_end sub_0830af1c

	thumb_func_start sub_0830af34
sub_0830af34:
	push	{ r4, r5, lr }
	mov		r2, #0x0
	ldr		r3, _0830af68
	ldrh	r1, [r3, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_0830af58
	ldr		r5, _0830af6c
	mov		r4, #0x80
_0830af48:
	add		r2, #0x1
	cmp		r2, r5
	bgt		_0830af58
	ldrh	r1, [r3, #0x0]
	add		r0, r4, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_0830af48
_0830af58:
	mov		r0, #0x96
	lsl		r0, r0, #0x2
	bl		sub_0830af1c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x30AF66, 0x2

_0830af68:	.4byte SIOControlRegister
_0830af6c:	.4byte 0x0000795C
	thumb_func_end sub_0830af34

	thumb_func_start sub_0830af70
sub_0830af70:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	ldr		r3, _0830b038
	mov		r4, #0x0
	strh	r4, [r3, #0x0]
	ldr		r2, _0830b03c
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0830b040
	and		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	strh	r0, [r3, #0x0]
	ldr		r0, _0830b044
	strh	r4, [r0, #0x0]
	sub		r2, #0xd8
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	str		r0, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	ldr		r3, _0830b048
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	ldr		r4, _0830b04c
	ldr		r2, _0830b050
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_083272c4
	strb	r5, [r4, #0x2]
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r4, #0x14]
	add		r0, r4, #0x0
	add		r0, #0x60
	str		r0, [r4, #0x28]
	add		r0, #0x10
	str		r0, [r4, #0x2c]
	mov		r3, #0x0
	add		r5, r4, #0x0
	add		r5, #0xa0
	mov		r2, #0x0
	mov		r7, #0x30
	add		r7, r7, r4
	mov		r8, r7
	mov		r0, #0x80
	add		r0, r0, r4
	mov		r12, r0
	add		r6, r4, #0x0
	add		r6, #0x90
	mov		r7, #0x40
	add		r7, r7, r4
	mov		r9, r7
_0830afe6:
	lsl		r1, r3, #0x2
	mov		r7, r12
	add		r0, r2, r7
	mov		r7, r8
	add		r7, #0x4
	mov		r8, r7
	sub		r7, #0x4
	stmia	r7!, { r0 }
	add		r0, r2, r6
	mov		r7, r9
	add		r7, #0x4
	mov		r9, r7
	sub		r7, #0x4
	stmia	r7!, { r0 }
	add		r0, r4, #0x0
	add		r0, #0x50
	add		r1, r1, r0
	str		r5, [r1, #0x0]
	add		r5, #0x30
	add		r2, #0x30
	add		r3, #0x1
	cmp		r3, #0x3
	ble		_0830afe6
	mov		r0, #0x0
	ldr		r3, _0830b038
	strh	r0, [r3, #0x0]
	ldr		r2, _0830b03c
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x80
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	strh	r0, [r3, #0x0]
	add		sp, #0x4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x30B036, 0x2

_0830b038:	.4byte InterruptMasterEnableRegister
_0830b03c:	.4byte InterruptEnableRegister
_0830b040:	.4byte 0x0000FF3F
_0830b044:	.4byte SIOModeSelect_GeneralPurposeData
_0830b048:	.4byte 0x00004003
_0830b04c:	.4byte 0x03002E80
_0830b050:	.4byte 0x05000050

.incbin "base.gba", 0x30B054, 0x9C0
	thumb_func_end sub_0830af70

	thumb_func_start sub_0830ba14
sub_0830ba14:
	lsl		r0, r0, #0x18
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r3, r1, #0x0
	mov		r2, #0x0
	cmp		r0, #0x0
	beq		_0830ba32
	cmp		r1, #0x7
	bhi		_0830ba2c
	add		r2, r1, #0x0
	add		r2, #0x5c
	b		_0830ba82
_0830ba2c:
	add		r2, r1, #0x0
	add		r2, #0x50
	b		_0830ba82
_0830ba32:
	cmp		r3, #0x9
	bhi		_0830ba82
	lsl		r0, r3, #0x2
	ldr		r1, _0830ba40
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0830ba40:	.4byte 0x02005A44

.incbin "base.gba", 0x30BA44, 0x3E

_0830ba82:
	add		r0, r2, #0x0
	bx		lr

.incbin "base.gba", 0x30BA86, 0x2
	thumb_func_end sub_0830ba14

	thumb_func_start sub_0830ba88
sub_0830ba88:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	str		r0, [sp, #0x0]
	ldr		r0, _0830bac0
	ldr		r1, _0830bac4
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	mov		r8, r0
	mov		r2, #0x0
	mov		r9, r2
	sub		r0, #0x1
	cmp		r9, r0
	bge		_0830bb1c
	mov		r3, #0xc0
	lsl		r3, r3, #0x8
	mov		r10, r3
_0830bab0:
	mov		r4, #0x2
	mov		r0, r8
	cmp		r0, #0x3
	beq		_0830bac8
	cmp		r0, #0x4
	beq		_0830bace
	mov		r7, #0x9
	b		_0830bad0

_0830bac0:	.4byte 0x030031D0
_0830bac4:	.4byte 0x0000076F

_0830bac8:
	mov		r4, #0x3
	mov		r7, #0x7
	b		_0830bad0
_0830bace:
	mov		r7, #0x6
_0830bad0:
	mov		r6, r9
	add		r6, #0x1
	lsl		r5, r6, #0x18
	lsr		r5, r5, #0x18
	mov		r0, #0x0
	add		r1, r5, #0x0
	bl		sub_0830ba14
	mov		r1, r9
	mul		r1, r4
	add		r4, r1, #0x0
	add		r4, r7, r4
	lsl		r4, r4, #0x6
	ldr		r2, [sp, #0x0]
	add		r4, r4, r2
	mov		r1, r10
	orr		r1, r0
	strh	r1, [r4, #0x2]
	mov		r0, #0x1
	add		r1, r5, #0x0
	bl		sub_0830ba14
	add		r2, r4, #0x0
	add		r2, #0x42
	mov		r1, r10
	orr		r1, r0
	strh	r1, [r2, #0x0]
	add		r4, #0x44
	mov		r0, r9
	add		r0, #0xd0
	mov		r3, r10
	orr		r0, r3
	strh	r0, [r4, #0x0]
	mov		r9, r6
	mov		r0, r8
	sub		r0, #0x1
	cmp		r9, r0
	blt		_0830bab0
_0830bb1c:
	mov		r2, #0x0
	cmp		r2, r8
	blt		_0830bb24
	b		_0830bc5a
_0830bb24:
	lsl		r1, r2, #0x2
	ldr		r4, _0830bb4c
	mov		r3, #0xed
	lsl		r3, r3, #0x3
	add		r0, r4, r3
	add		r0, r0, r1
	ldr		r7, [r0, #0x0]
	mov		r4, #0x0
	str		r4, [sp, #0x4]
	mov		r0, #0x0
	str		r0, [sp, #0x8]
	str		r1, [sp, #0x10]
	mov		r1, r8
	cmp		r1, #0x3
	beq		_0830bb66
	cmp		r1, #0x3
	bgt		_0830bb50
	cmp		r1, #0x2
	beq		_0830bb58
	b		_0830bb8e

_0830bb4c:	.4byte 0x030031F4

_0830bb50:
	mov		r3, r8
	cmp		r3, #0x4
	beq		_0830bb7a
	b		_0830bb8e
_0830bb58:
	mov		r0, #0xb
	mul		r0, r2
	add		r0, #0x9
	str		r0, [sp, #0x4]
	mov		r4, #0x9
	str		r4, [sp, #0x8]
	b		_0830bb8e
_0830bb66:
	add		r0, r7, #0x0
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x1
	lsl		r0, r0, #0x3
	add		r0, #0x6
	str		r0, [sp, #0x4]
	mov		r0, #0x7
	str		r0, [sp, #0x8]
	b		_0830bb8e
_0830bb7a:
	add		r0, r7, #0x0
	add		r0, #0xba
	ldrh	r1, [r0, #0x0]
	lsr		r1, r1, #0x1
	lsl		r0, r1, #0x3
	sub		r0, r0, r1
	add		r0, #0x5
	str		r0, [sp, #0x4]
	mov		r1, #0x6
	str		r1, [sp, #0x8]
_0830bb8e:
	mov		r3, #0x0
	mov		r9, r3
	mov		r4, #0x1
	neg		r4, r4
	add		r4, r8
	mov		r10, r4
	add		r2, #0x1
	str		r2, [sp, #0xC]
	cmp		r9, r10
	bge		_0830bc52
_0830bba2:
	ldr		r1, _0830bd04
	mov		r2, #0xf1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	mov		r6, #0xc0
	lsl		r6, r6, #0x8
	cmp		r0, r7
	bne		_0830bbb8
	mov		r6, #0xb0
	lsl		r6, r6, #0x8
_0830bbb8:
	mov		r4, #0x2
	mov		r3, r8
	cmp		r3, #0x3
	bne		_0830bbc2
	mov		r4, #0x3
_0830bbc2:
	ldr		r0, _0830bd08
	ldr		r5, [sp, #0x10]
	add		r5, r9
	add		r5, r5, r0
	ldrb	r0, [r5, #0x0]
	mov		r1, #0xa
	bl		sub_083273d8
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r0, #0x0
	bl		sub_0830ba14
	mov		r1, r9
	mul		r1, r4
	ldr		r4, [sp, #0x8]
	add		r1, r4, r1
	ldr		r2, [sp, #0x4]
	lsl		r4, r2, #0x1
	lsl		r1, r1, #0x6
	ldr		r3, [sp, #0x0]
	add		r1, r1, r3
	add		r4, r4, r1
	add		r1, r6, #0x0
	orr		r1, r0
	strh	r1, [r4, #0x0]
	ldrb	r0, [r5, #0x0]
	mov		r1, #0xa
	bl		sub_083273d8
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r0, #0x1
	bl		sub_0830ba14
	add		r2, r4, #0x0
	add		r2, #0x40
	add		r1, r6, #0x0
	orr		r1, r0
	strh	r1, [r2, #0x0]
	ldrb	r0, [r5, #0x0]
	mov		r1, #0xa
	bl		sub_08327450
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r0, #0x0
	bl		sub_0830ba14
	add		r1, r6, #0x0
	orr		r1, r0
	strh	r1, [r4, #0x2]
	ldrb	r0, [r5, #0x0]
	mov		r1, #0xa
	bl		sub_08327450
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r0, #0x1
	bl		sub_0830ba14
	add		r4, #0x42
	orr		r6, r0
	strh	r6, [r4, #0x0]
	mov		r4, #0x1
	add		r9, r4
	cmp		r9, r10
	blt		_0830bba2
_0830bc52:
	ldr		r2, [sp, #0xC]
	cmp		r2, r8
	bge		_0830bc5a
	b		_0830bb24
_0830bc5a:
	ldr		r0, [sp, #0x0]
	mov		r2, #0x88
	lsl		r2, r2, #0x3
	add		r1, r0, r2
	ldr		r3, _0830bd0c
	add		r0, r3, #0x0
	strh	r0, [r1, #0x0]
	ldr		r4, [sp, #0x0]
	mov		r0, #0x90
	lsl		r0, r0, #0x3
	add		r1, r4, r0
	ldr		r2, _0830bd10
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	ldr		r5, _0830bd14
	ldrb	r0, [r5, #0x0]
	mov		r1, #0xa
	bl		sub_083273d8
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r0, #0x0
	bl		sub_0830ba14
	ldr		r3, _0830bd18
	add		r1, r4, r3
	mov		r2, #0xc0
	lsl		r2, r2, #0x8
	add		r4, r2, #0x0
	orr		r0, r4
	strh	r0, [r1, #0x0]
	ldrb	r0, [r5, #0x0]
	mov		r1, #0xa
	bl		sub_083273d8
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r0, #0x1
	bl		sub_0830ba14
	ldr		r3, [sp, #0x0]
	ldr		r2, _0830bd1c
	add		r1, r3, r2
	orr		r0, r4
	strh	r0, [r1, #0x0]
	ldrb	r0, [r5, #0x0]
	mov		r1, #0xa
	bl		sub_08327450
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r0, #0x0
	bl		sub_0830ba14
	ldr		r3, [sp, #0x0]
	ldr		r2, _0830bd20
	add		r1, r3, r2
	orr		r0, r4
	strh	r0, [r1, #0x0]
	ldrb	r0, [r5, #0x0]
	mov		r1, #0xa
	bl		sub_08327450
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r0, #0x1
	bl		sub_0830ba14
	ldr		r3, [sp, #0x0]
	ldr		r2, _0830bd24
	add		r1, r3, r2
	orr		r0, r4
	strh	r0, [r1, #0x0]
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0830bd04:	.4byte 0x030031F4
_0830bd08:	.4byte 0x03002FC0
_0830bd0c:	.4byte 0x0000C037
_0830bd10:	.4byte 0x0000C038
_0830bd14:	.4byte 0x03002D68
_0830bd18:	.4byte 0x00000444
_0830bd1c:	.4byte 0x00000484
_0830bd20:	.4byte 0x00000446
_0830bd24:	.4byte 0x00000486

.incbin "base.gba", 0x30BD28, 0x17C0
	thumb_func_end sub_0830ba88

	thumb_func_start sub_0830d4e8
sub_0830d4e8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	ldr		r0, _0830d538
	mov		r8, r0
	mov		r0, #0x18
	mov		r1, #0x6
	bl		sub_0830d550
	mov		r3, #0x0
	mov		r2, #0x0
	ldr		r1, _0830d53c
	mov		r12, r1
	ldr		r6, _0830d540
	ldr		r5, _0830d544
	ldr		r4, _0830d548
_0830d508:
	lsl		r0, r3, #0x1
	mov		r7, r12
	strh	r2, [r7, #0x0]
	strh	r2, [r6, #0x0]
	strh	r2, [r5, #0x0]
	strh	r2, [r4, #0x0]
	ldr		r1, _0830d54c
	add		r0, r0, r1
	mov		r7, r8
	ldrh	r1, [r7, #0x20]
	strh	r1, [r0, #0x0]
	mov		r0, #0x2
	add		r12, r0
	add		r6, #0x2
	add		r5, #0x2
	add		r4, #0x2
	add		r3, #0x1
	cmp		r3, #0x3
	ble		_0830d508
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0830d538:	.4byte 0x030031D0
_0830d53c:	.4byte 0x030051B8
_0830d540:	.4byte 0x030051A8
_0830d544:	.4byte 0x03005100
_0830d548:	.4byte 0x03005190
_0830d54c:	.4byte 0x03000198
	thumb_func_end sub_0830d4e8

	thumb_func_start sub_0830d550
sub_0830d550:
	ldr		r3, _0830d568
	strh	r0, [r3, #0x20]
	strh	r1, [r3, #0x22]
	ldr		r2, _0830d56c
	mov		r1, #0x3
_0830d55a:
	ldrh	r0, [r3, #0x20]
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0830d55a
	bx		lr

_0830d568:	.4byte 0x030031D0
_0830d56c:	.4byte 0x03000198
	thumb_func_end sub_0830d550

	thumb_func_start sub_0830d570
sub_0830d570:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	ldr		r7, _0830d5d0
	ldr		r0, _0830d5d4
	mov		r10, r0
	ldr		r1, _0830d5d8
	mov		r9, r1
	ldr		r2, _0830d5dc
	mov		r8, r2
	ldr		r0, _0830d5e0
	mov		r12, r0
	mov		r5, r12
	mov		r6, #0x0
	ldr		r4, _0830d5e4
_0830d592:
	mov		r1, r10
	add		r0, r6, r1
	ldrh	r1, [r0, #0x0]
	ldr		r2, _0830d5e8
	add		r0, r2, #0x0
	add		r3, r0, #0x0
	eor		r3, r1
	mov		r0, r9
	add		r2, r6, r0
	ldrh	r1, [r5, #0x0]
	add		r0, r3, #0x0
	bic		r0, r1
	strh	r0, [r2, #0x0]
	mov		r2, r8
	add		r1, r6, r2
	strh	r0, [r1, #0x0]
	cmp		r3, #0x0
	beq		_0830d5ec
	ldrh	r0, [r5, #0x0]
	cmp		r3, r0
	bne		_0830d5ec
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x1
	strh	r0, [r4, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_0830d5f0
	strh	r3, [r1, #0x0]
	ldrh	r0, [r7, #0x22]
	b		_0830d5ee

.incbin "base.gba", 0x30D5CE, 0x2

_0830d5d0:	.4byte 0x030031D0
_0830d5d4:	.4byte 0x030051B8
_0830d5d8:	.4byte 0x03005100
_0830d5dc:	.4byte 0x030051A8
_0830d5e0:	.4byte 0x03005190
_0830d5e4:	.4byte 0x03000198
_0830d5e8:	.4byte 0x000003FF

_0830d5ec:
	ldrh	r0, [r7, #0x20]
_0830d5ee:
	strh	r0, [r4, #0x0]
_0830d5f0:
	strh	r3, [r5, #0x0]
	add		r5, #0x2
	add		r6, #0x2
	add		r4, #0x2
	mov		r0, r12
	add		r0, #0x6
	cmp		r5, r0
	ble		_0830d592
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x30D60E, 0x166
	thumb_func_end sub_0830d570

	thumb_func_start sub_0830d774
sub_0830d774:
	push	{ r4, r5, lr }
	ldr		r5, _0830d79c
	mov		r4, #0x0
_0830d77a:
	str		r4, [r5, #0x0]
	bl		sub_083272fc
	bl		sub_08325e88
	bl		sub_0830da08
	cmp		r0, #0x0
	bne		_0830d77a
	bl		sub_0830d570
	bl		sub_0831019c
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x30D79A, 0x2

_0830d79c:	.4byte 0x030001A4

.incbin "base.gba", 0x30D7A0, 0x68
	thumb_func_end sub_0830d774

	thumb_func_start sub_0830d808
sub_0830d808:
	push	{ r4, lr }
	add		r4, r0, #0x0
	str		r1, [r4, #0x0]
	str		r1, [r4, #0x4]
	str		r2, [r4, #0x8]
	mov		r3, #0x0
	lsr		r2, r2, #0x2
	cmp		r3, r2
	bcs		_0830d828
	mov		r2, #0x0
_0830d81c:
	stmia	r1!, {  r2 }
	add		r3, #0x1
	ldr		r0, [r4, #0x8]
	lsr		r0, r0, #0x2
	cmp		r3, r0
	bcc		_0830d81c
_0830d828:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x30D82E, 0x2
	thumb_func_end sub_0830d808

	thumb_func_start sub_0830d830
sub_0830d830:
	ldr		r1, [r0, #0x0]
	str		r1, [r0, #0x4]
	bx		lr

.incbin "base.gba", 0x30D836, 0x2
	thumb_func_end sub_0830d830

	thumb_func_start sub_0830d838
sub_0830d838:
	push	{ r4, r5, r6, lr }
	add		r3, r0, #0x0
	mov		r6, #0x0
	add		r5, r1, #0x0
	mul		r5, r2
	ldr		r2, [r3, #0x4]
	add		r4, r2, r5
	ldr		r0, [r3, #0x0]
	ldr		r1, [r3, #0x8]
	add		r0, r0, r1
	cmp		r4, r0
	bhi		_0830d880
	add		r6, r2, #0x0
	str		r4, [r3, #0x4]
	add		r0, r6, #0x0
	mov		r1, #0x0
	lsr		r2, r5, #0x2
	cmp		r1, r2
	bcs		_0830d86a
	mov		r3, #0x0
_0830d860:
	str		r3, [r0, #0x0]
	add		r0, #0x1
	add		r1, #0x1
	cmp		r1, r2
	bcc		_0830d860
_0830d86a:
	mov		r1, #0x0
	mov		r2, #0x3
	and		r2, r5
	cmp		r1, r2
	bcs		_0830d880
	mov		r3, #0x0
_0830d876:
	strb	r3, [r0, #0x0]
	add		r0, #0x1
	add		r1, #0x1
	cmp		r1, r2
	bcc		_0830d876
_0830d880:
	add		r0, r6, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x30D888, 0x8
	thumb_func_end sub_0830d838

	thumb_func_start sub_0830d890
sub_0830d890:
	push	{ r4, r5, r6, lr }
	bl		sub_0830e2c8
	ldr		r1, _0830d8e0
	ldrh	r2, [r1, #0x16]
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	and		r0, r2
	mov		r2, #0x0
	strh	r0, [r1, #0x16]
	mov		r0, #0x1
	neg		r0, r0
	strb	r0, [r1, #0x0]
	strb	r2, [r1, #0x1]
	mov		r2, #0x0
	add		r6, r1, #0x0
	add		r6, #0xd
	mov		r3, #0x0
	add		r5, r1, #0x0
	add		r5, #0x11
	add		r4, r1, #0x0
_0830d8ba:
	lsl		r0, r2, #0x18
	lsr		r0, r0, #0x18
	add		r1, r0, r6
	strb	r3, [r1, #0x0]
	add		r0, r0, r5
	strb	r3, [r0, #0x0]
	add		r2, #0x1
	cmp		r2, #0x3
	ble		_0830d8ba
	mov		r0, #0x0
	strb	r0, [r4, #0xa]
	strb	r0, [r4, #0xb]
	strb	r0, [r4, #0xc]
	ldr		r1, _0830d8e4
	ldr		r0, _0830d8e8
	strh	r1, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0830d8e0:	.4byte 0x03003030
_0830d8e4:	.4byte 0x00003FFF
_0830d8e8:	.4byte 0x030001F0
	thumb_func_end sub_0830d890

	thumb_func_start sub_0830d8ec
sub_0830d8ec:
	push	{ lr }
	ldr		r0, _0830d8fc
	bl		sub_0830e1d8
	bl		sub_0830d890
	pop		{ r0 }
	bx		r0

_0830d8fc:	.4byte 0x0202A8D0
	thumb_func_end sub_0830d8ec

	thumb_func_start sub_0830d900
sub_0830d900:
	push	{ r4, lr }
	ldr		r2, _0830d938
	ldrb	r0, [r2, #0x1]
	mov		r1, #0xc0
	orr		r0, r1
	strb	r0, [r2, #0x1]
	mov		r1, #0xc1
	neg		r1, r1
	mov		r0, #0x1
	bl		sub_08327560
	ldr		r1, _0830d93c
	mov		r0, #0xc0
	strh	r0, [r1, #0x0]
	ldr		r4, _0830d940
	mov		r0, #0x7
	add		r1, r4, #0x0
	bl		sub_08327550
	mov		r0, #0x6
	add		r1, r4, #0x0
	bl		sub_08327550
	bl		sub_0830d890
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0830d938:	.4byte SIOModeSelect_GeneralPurposeData
_0830d93c:	.4byte InterruptRequestFlags_IRQAcknowledge
_0830d940:	.4byte 0x02007771
	thumb_func_end sub_0830d900

	thumb_func_start sub_0830d944
sub_0830d944:
	push	{ lr }
	bl		sub_0830e5c0
	mov		r1, #0x0
	cmp		r0, #0x0
	bne		_0830d952
	mov		r1, #0x1
_0830d952:
	add		r0, r1, #0x0
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0830d944

	thumb_func_start sub_0830d958
sub_0830d958:
	ldr		r0, _0830d96c
	mov		r1, #0x0
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_0830d968
	mov		r1, #0x1
_0830d968:
	add		r0, r1, #0x0
	bx		lr

_0830d96c:	.4byte 0x03003030
	thumb_func_end sub_0830d958

	thumb_func_start sub_0830d970
sub_0830d970:
	ldr		r0, _0830d984
	mov		r1, #0x0
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	ble		_0830d980
	mov		r1, #0x1
_0830d980:
	add		r0, r1, #0x0
	bx		lr

_0830d984:	.4byte 0x03003030
	thumb_func_end sub_0830d970

	thumb_func_start sub_0830d988
sub_0830d988:
	push	{ r4, r5, lr }
	ldr		r5, _0830d9c0
	ldrh	r4, [r5, #0x0]
	bl		sub_0830d944
	cmp		r0, #0x0
	beq		_0830d9d0
	bl		sub_0830d958
	cmp		r0, #0x0
	beq		_0830d9f0
	ldr		r0, _0830d9c4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_0830d9b4
	ldr		r1, _0830d9c8
	mov		r0, #0x0
	strh	r0, [r1, #0x16]
	bl		sub_0830d900
_0830d9b4:
	add		r0, r4, #0x0
	bl		sub_0830e11c
	ldr		r0, _0830d9cc
	strh	r0, [r5, #0x0]
	b		_0830d9f0

_0830d9c0:	.4byte 0x030001F0
_0830d9c4:	.4byte SIOControlRegister
_0830d9c8:	.4byte 0x03003030
_0830d9cc:	.4byte 0x00003FFF

_0830d9d0:
	ldr		r0, _0830d9f8
	mov		r1, #0x0
	ldrsb	r1, [r0, r1]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_0830d9e0
	mov		r1, #0x0
_0830d9e0:
	ldr		r0, _0830d9fc
	ldrh	r2, [r0, #0x0]
	ldr		r0, _0830da00
	lsl		r1, r1, #0x1
	add		r1, r1, r0
	ldr		r0, _0830da04
	and		r0, r2
	strh	r0, [r1, #0x0]
_0830d9f0:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x30D9F6, 0x2

_0830d9f8:	.4byte 0x03003030
_0830d9fc:	.4byte KeyStatus
_0830da00:	.4byte 0x030051B8
_0830da04:	.4byte 0x000003FF
	thumb_func_end sub_0830d988

	thumb_func_start sub_0830da08
sub_0830da08:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	mov		r0, #0x1
	str		r0, [sp, #0xC]
	ldr		r4, _0830da80
	ldrh	r1, [r4, #0x16]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0830da7c
	bl		sub_0830e64c
	add		r2, r0, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	bne		_0830da5e
	mov		r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp		r0, r2
	beq		_0830da5e
	ldrh	r0, [r4, #0x16]
	mov		r1, #0xff
	lsl		r1, r1, #0x8
	and		r1, r0
	mov		r0, #0x0
	strh	r1, [r4, #0x16]
	strb	r0, [r4, #0x1]
	mov		r1, #0x0
	add		r4, #0xd
	mov		r3, #0x0
_0830da50:
	lsl		r0, r1, #0x18
	lsr		r0, r0, #0x18
	add		r0, r0, r4
	strb	r3, [r0, #0x0]
	add		r1, #0x1
	cmp		r1, #0x3
	ble		_0830da50
_0830da5e:
	ldr		r4, _0830da80
	mov		r6, #0x0
	strb	r2, [r4, #0x0]
	ldr		r5, _0830da84
	ldr		r0, [r5, #0x0]
	cmp		r0, #0xa
	ble		_0830da74
	strh	r6, [r4, #0x16]
	bl		sub_0830d900
	str		r6, [r5, #0x0]
_0830da74:
	bl		sub_0830d944
	cmp		r0, #0x0
	bne		_0830da88
_0830da7c:
	mov		r0, #0x0
	b		_0830dce0

_0830da80:	.4byte 0x03003030
_0830da84:	.4byte 0x03005198

_0830da88:
	mov		r10, r4
	b		_0830dc74
_0830da8c:
	ldr		r0, _0830db0c
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	mov		r0, sp
	bl		sub_0830e014
	mov		r1, #0x1
	neg		r1, r1
	cmp		r0, r1
	bne		_0830daa2
	b		_0830dc6e
_0830daa2:
	mov		r1, r10
	strb	r4, [r1, #0xa]
	ldr		r2, _0830db10
	mov		r12, r2
	ldr		r5, _0830db14
	mov		r3, r12
	mov		r2, sp
_0830dab0:
	ldrh	r0, [r2, #0x0]
	cmp		r0, r5
	beq		_0830dac0
	mov		r0, #0x1
	lsl		r0, r4
	ldrb	r1, [r3, #0xa]
	orr		r0, r1
	strb	r0, [r3, #0xa]
_0830dac0:
	add		r2, #0x2
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_0830dab0
	mov		r3, r12
	ldrb	r0, [r3, #0xa]
	cmp		r0, #0x0
	bne		_0830dad2
	b		_0830dc6e
_0830dad2:
	ldrb	r1, [r3, #0xb]
	cmp		r0, r1
	beq		_0830dba4
	mov		r4, #0x0
	mov		r5, r12
	mov		r2, #0xd
	add		r2, r12
	mov		r8, r2
	ldr		r3, _0830db18
	mov		r9, r3
	mov		r6, #0x0
	mov		r3, sp
	mov		r7, #0x0
_0830daec:
	ldrh	r1, [r3, #0x0]
	add		r2, r1, #0x0
	ldr		r0, _0830db14
	cmp		r2, r0
	bne		_0830db1c
	mov		r0, #0x1
	lsl		r0, r4
	ldrb	r1, [r5, #0xb]
	bic		r1, r0
	strb	r1, [r5, #0xb]
	lsr		r0, r6, #0x18
	add		r0, r8
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	b		_0830db54

.incbin "base.gba", 0x30DB0A, 0x2

_0830db0c:	.4byte 0x03005198
_0830db10:	.4byte 0x03003030
_0830db14:	.4byte 0x0000FFFF
_0830db18:	.4byte 0x00003FFF

_0830db1c:
	mov		r0, r9
	and		r0, r1
	cmp		r0, r9
	beq		_0830db54
	ldr		r0, _0830db98
	cmp		r2, r0
	bne		_0830db3c
	mov		r0, #0x1
	lsl		r0, r4
	ldrb	r1, [r5, #0xb]
	orr		r0, r1
	strb	r0, [r5, #0xb]
	lsr		r0, r6, #0x18
	add		r0, r8
	mov		r1, #0x2
	strb	r1, [r0, #0x0]
_0830db3c:
	ldrb	r1, [r5, #0xc]
	add		r0, r1, #0x0
	asr		r0, r4
	mov		r2, #0x1
	and		r0, r2
	cmp		r0, #0x0
	bne		_0830db54
	add		r0, r2, #0x0
	lsl		r0, r4
	orr		r1, r0
	mov		r2, r12
	strb	r1, [r2, #0xc]
_0830db54:
	ldr		r1, _0830db9c
	add		r0, r7, r1
	ldr		r2, _0830dba0
	strh	r2, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	add		r6, r6, r0
	add		r3, #0x2
	add		r7, #0x2
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_0830daec
	mov		r2, #0x2
	mov		r3, r10
	ldrh	r1, [r3, #0x16]
	mov		r3, #0xff
	lsl		r3, r3, #0x8
	add		r0, r3, #0x0
	and		r1, r0
	mov		r3, #0x0
	orr		r1, r2
	mov		r0, r10
	strh	r1, [r0, #0x16]
	strb	r3, [r0, #0x1]
	ldrb	r0, [r0, #0xc]
	mov		r1, r10
	ldrb	r1, [r1, #0xa]
	cmp		r0, r1
	bne		_0830dc6e
	mov		r2, r12
	strb	r3, [r2, #0xc]
	mov		r3, #0x0
	str		r3, [sp, #0xC]
	b		_0830dc8a

_0830db98:	.4byte 0x00004B4D
_0830db9c:	.4byte 0x030051B8
_0830dba0:	.4byte 0x000003FF

_0830dba4:
	mov		r1, r12
	ldrh	r0, [r1, #0x16]
	mov		r2, #0xff
	lsl		r2, r2, #0x8
	add		r1, r2, #0x0
	and		r0, r1
	mov		r3, #0x1
	orr		r0, r3
	mov		r1, r12
	strh	r0, [r1, #0x16]
	mov		r4, #0x0
	mov		r2, #0xd
	add		r2, r12
	mov		r9, r2
	mov		r7, #0x0
	mov		r6, r12
	add		r6, #0x2
	mov		r5, sp
	ldr		r3, _0830dbe4
	mov		r8, r3
_0830dbcc:
	ldrh	r2, [r5, #0x0]
	add		r1, r2, #0x0
	ldr		r0, _0830dbe8
	cmp		r1, r0
	bne		_0830dbec
	strh	r2, [r6, #0x0]
	lsr		r0, r7, #0x18
	add		r0, r9
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	b		_0830dc1c

.incbin "base.gba", 0x30DBE2, 0x2

_0830dbe4:	.4byte 0x00003FFF
_0830dbe8:	.4byte 0x0000FFFF

_0830dbec:
	mov		r0, r8
	and		r0, r2
	cmp		r0, r8
	beq		_0830dc1c
	ldr		r3, _0830dca0
	cmp		r1, r3
	beq		_0830dc1c
	ldr		r0, _0830dca4
	ldrb	r1, [r0, #0xc]
	add		r0, r1, #0x0
	asr		r0, r4
	mov		r3, #0x1
	and		r0, r3
	cmp		r0, #0x0
	bne		_0830dc1c
	add		r0, r3, #0x0
	lsl		r0, r4
	orr		r1, r0
	mov		r0, r12
	strb	r1, [r0, #0xc]
	strh	r2, [r6, #0x0]
	lsr		r0, r7, #0x18
	add		r0, r9
	strb	r3, [r0, #0x0]
_0830dc1c:
	mov		r1, #0x80
	lsl		r1, r1, #0x11
	add		r7, r7, r1
	add		r6, #0x2
	add		r5, #0x2
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_0830dbcc
	mov		r2, r10
	ldrb	r0, [r2, #0xc]
	ldrb	r3, [r2, #0xb]
	cmp		r0, r3
	bne		_0830dc6e
	mov		r5, #0x0
	mov		r4, #0x0
	ldr		r6, _0830dca4
	ldr		r7, _0830dca8
	add		r3, r6, #0x2
	ldr		r2, _0830dcac
_0830dc42:
	ldrb	r0, [r6, #0xb]
	asr		r0, r4
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0830dc50
	add		r5, #0x1
_0830dc50:
	ldrh	r1, [r3, #0x0]
	add		r0, r7, #0x0
	and		r0, r1
	strh	r0, [r2, #0x0]
	add		r3, #0x2
	add		r2, #0x2
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_0830dc42
	mov		r0, #0x0
	mov		r2, r10
	strb	r5, [r2, #0x1]
	strb	r0, [r2, #0xc]
	mov		r3, #0x0
	str		r3, [sp, #0xC]
_0830dc6e:
	ldr		r0, [sp, #0xC]
	cmp		r0, #0x0
	beq		_0830dc8a
_0830dc74:
	mov		r0, #0x0
	bl		sub_0830e5d8
	str		r0, [sp, #0x8]
	cmp		r0, #0x0
	ble		_0830dc82
	b		_0830da8c
_0830dc82:
	ldr		r1, _0830dcb0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
_0830dc8a:
	ldr		r1, [sp, #0x8]
	cmp		r1, #0x2
	bgt		_0830dcde
	ldr		r0, _0830dca4
	ldrb	r0, [r0, #0x16]
	cmp		r0, #0x1
	beq		_0830dcb4
	cmp		r0, #0x2
	beq		_0830dcd8
	b		_0830dcde

.incbin "base.gba", 0x30DC9E, 0x2

_0830dca0:	.4byte 0x00004B4D
_0830dca4:	.4byte 0x03003030
_0830dca8:	.4byte 0x000003FF
_0830dcac:	.4byte 0x030051B8
_0830dcb0:	.4byte 0x03005198

_0830dcb4:
	ldr		r0, _0830dccc
	ldrh	r0, [r0, #0x0]
	ldr		r1, _0830dcd0
	and		r1, r0
	ldr		r0, _0830dcd4
	ldrh	r2, [r0, #0x0]
	mov		r0, #0xe0
	lsl		r0, r0, #0x5
	and		r0, r2
	orr		r1, r0
	b		_0830dcda

.incbin "base.gba", 0x30DCCA, 0x2

_0830dccc:	.4byte KeyStatus
_0830dcd0:	.4byte 0x000003FF
_0830dcd4:	.4byte 0x030051B0

_0830dcd8:
	ldr		r1, _0830dcf0
_0830dcda:
	ldr		r0, _0830dcf4
	strh	r1, [r0, #0x0]
_0830dcde:
	ldr		r0, [sp, #0xC]
_0830dce0:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0830dcf0:	.4byte 0x00004B4D
_0830dcf4:	.4byte 0x030001F0
	thumb_func_end sub_0830da08

	thumb_func_start sub_0830dcf8
sub_0830dcf8:
	push	{ r4, lr }
	ldr		r4, _0830dd14
	ldrh	r1, [r4, #0x0]
	mov		r0, #0x8
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	bne		_0830dd1c
	ldr		r0, _0830dd18
	strh	r1, [r0, #0x16]
	bl		sub_0830d900
	b		_0830dd44

_0830dd14:	.4byte SIOControlRegister
_0830dd18:	.4byte 0x03003030

_0830dd1c:
	bl		sub_0830d970
	cmp		r0, #0x0
	beq		_0830dd44
	ldrh	r1, [r4, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_0830dd38
	ldr		r1, _0830dd4c
	mov		r0, #0x0
	strh	r0, [r1, #0x16]
	bl		sub_0830d900
_0830dd38:
	ldr		r4, _0830dd50
	ldrh	r0, [r4, #0x0]
	bl		sub_0830e11c
	ldr		r0, _0830dd54
	strh	r0, [r4, #0x0]
_0830dd44:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x30DD4A, 0x2

_0830dd4c:	.4byte 0x03003030
_0830dd50:	.4byte 0x030001F0
_0830dd54:	.4byte 0x00003FFF
	thumb_func_end sub_0830dcf8

	thumb_func_start sub_0830dd58
sub_0830dd58:
	cmp		r0, r1
	bls		_0830dd64
	sub		r0, r0, r1
	asr		r0, r0, #0x1
	sub		r0, r2, r0
	b		_0830dd68
_0830dd64:
	sub		r0, r1, r0
	asr		r0, r0, #0x1
_0830dd68:
	bx		lr

.incbin "base.gba", 0x30DD6A, 0x96
	thumb_func_end sub_0830dd58

	thumb_func_start sub_0830de00
sub_0830de00:
	ldr		r1, _0830de10
	neg		r0, r0
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	mov		r0, #0xc3
	strh	r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x30DE0E, 0x2

_0830de10:	.4byte Timer3Counter_Reload

.incbin "base.gba", 0x30DE14, 0x200
	thumb_func_end sub_0830de00

	thumb_func_start sub_0830e014
sub_0830e014:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	ldr		r1, _0830e03c
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0830e10c
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x1
	bne		_0830e044
	ldr		r1, _0830e040
	add		r0, r1, #0x0
	strh	r0, [r4, #0x0]
	add		r4, #0x2
	strh	r0, [r4, #0x0]
	add		r4, #0x2
	strh	r0, [r4, #0x0]
	strh	r0, [r4, #0x2]
	b		_0830e104

_0830e03c:	.4byte 0x03000294
_0830e040:	.4byte 0x00007FFF

_0830e044:
	ldr		r2, _0830e058
	ldr		r1, [r2, #0x4]
	ldr		r0, [r2, #0x8]
	cmp		r1, r0
	bne		_0830e060
	ldr		r1, _0830e05c
	add		r0, r1, #0x0
	strh	r0, [r4, #0x0]
	add		r4, #0x2
	b		_0830e0ae

_0830e058:	.4byte 0x030001F8
_0830e05c:	.4byte 0x00007FFF

_0830e060:
	ldr		r0, _0830e0bc
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_0830e0c8
	mov		r7, #0x0
	add		r0, r4, #0x2
	mov		r12, r0
	ldr		r1, _0830e0c0
	mov		r8, r1
	add		r6, r2, #0x4
_0830e078:
	mov		r0, r8
	ldr		r1, [r0, #0x0]
	lsl		r2, r7, #0x3
	add		r0, r1, #0x0
	add		r0, #0xc
	add		r5, r0, r2
	ldr		r3, [r5, #0x0]
	add		r1, #0x10
	add		r1, r1, r2
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x1
	add		r3, r3, r0
	ldr		r0, [r6, #0x0]
	add		r0, #0x2
	str		r0, [r6, #0x0]
	cmp		r0, r3
	bne		_0830e09e
	ldr		r0, [r5, #0x0]
	str		r0, [r6, #0x0]
_0830e09e:
	add		r6, #0x10
	add		r7, #0x1
	cmp		r7, #0x3
	ble		_0830e078
	ldr		r1, _0830e0c4
	add		r0, r1, #0x0
	strh	r0, [r4, #0x0]
	mov		r4, r12
_0830e0ae:
	strh	r0, [r4, #0x0]
	add		r4, #0x2
	strh	r0, [r4, #0x0]
	strh	r0, [r4, #0x2]
	mov		r0, #0x1
	neg		r0, r0
	b		_0830e110

_0830e0bc:	.4byte 0x03005238
_0830e0c0:	.4byte 0x030002A0
_0830e0c4:	.4byte 0x00007FFF

_0830e0c8:
	mov		r7, #0x0
	add		r6, r2, #0x4
	ldr		r0, _0830e108
	mov		r8, r0
_0830e0d0:
	mov		r0, r8
	ldr		r1, [r0, #0x0]
	lsl		r2, r7, #0x3
	add		r0, r1, #0x0
	add		r0, #0xc
	add		r5, r0, r2
	ldr		r3, [r5, #0x0]
	add		r1, #0x10
	add		r1, r1, r2
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x1
	add		r3, r3, r0
	ldr		r1, [r6, #0x0]
	ldrh	r0, [r1, #0x0]
	strh	r0, [r4, #0x0]
	add		r1, #0x2
	str		r1, [r6, #0x0]
	add		r4, #0x2
	cmp		r1, r3
	bne		_0830e0fc
	ldr		r0, [r5, #0x0]
	str		r0, [r6, #0x0]
_0830e0fc:
	add		r6, #0x10
	add		r7, #0x1
	cmp		r7, #0x3
	ble		_0830e0d0
_0830e104:
	mov		r0, #0x5
	b		_0830e110

_0830e108:	.4byte 0x030002A0

_0830e10c:
	mov		r0, #0x8
	neg		r0, r0
_0830e110:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x30E11A, 0x2
	thumb_func_end sub_0830e014

	thumb_func_start sub_0830e11c
sub_0830e11c:
	push	{ lr }
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	ldr		r0, _0830e130
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x3
	ble		_0830e134
	mov		r0, #0x4
	neg		r0, r0
	b		_0830e1d4

_0830e130:	.4byte 0x0300024C

_0830e134:
	ldr		r0, _0830e15c
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0830e1d0
	ldr		r0, _0830e160
	strh	r2, [r0, #0x0]
	cmp		r1, #0x0
	bne		_0830e1ba
	mov		r1, #0x0
	ldr		r0, _0830e164
	ldr		r0, [r0, #0x0]
	ldrh	r0, [r0, #0x36]
	cmp		r0, #0x0
	beq		_0830e16c
	ldr		r0, _0830e168
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0830e16e
	b		_0830e172

.incbin "base.gba", 0x30E15A, 0x2

_0830e15c:	.4byte 0x03000294
_0830e160:	.4byte SIOData_Normal_8bitandUARTMode
_0830e164:	.4byte 0x030002A0
_0830e168:	.4byte 0x03000284

_0830e16c:
	mov		r1, #0x1
_0830e16e:
	cmp		r1, #0x0
	beq		_0830e1ba
_0830e172:
	ldr		r0, _0830e190
	ldr		r0, [r0, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_0830e19c
	ldr		r1, _0830e194
	ldr		r0, _0830e198
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	b		_0830e19e

.incbin "base.gba", 0x30E18E, 0x2

_0830e190:	.4byte 0x03000254
_0830e194:	.4byte 0x0202A91C
_0830e198:	.4byte 0x03004AF4

_0830e19c:
	mov		r1, #0x0
_0830e19e:
	cmp		r1, #0x0
	beq		_0830e1aa
	add		r0, r1, #0x0
	bl		sub_0830de00
	b		_0830e1ba
_0830e1aa:
	ldr		r2, _0830e1c4
	ldr		r0, _0830e1c8
	ldr		r0, [r0, #0x0]
	mov		r3, #0xc1
	lsl		r3, r3, #0x7
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
_0830e1ba:
	ldr		r1, _0830e1cc
	mov		r0, #0x1
	str		r0, [r1, #0x0]
	mov		r0, #0x5
	b		_0830e1d4

_0830e1c4:	.4byte SIOControlRegister
_0830e1c8:	.4byte 0x03000250
_0830e1cc:	.4byte 0x03000284

_0830e1d0:
	mov		r0, #0x8
	neg		r0, r0
_0830e1d4:
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0830e11c

	thumb_func_start sub_0830e1d8
sub_0830e1d8:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r0, _0830e27c
	mov		r5, #0x0
	str		r5, [r0, #0x0]
	ldr		r6, _0830e280
	str		r4, [r6, #0x0]
	ldr		r0, _0830e284
	str		r5, [r0, #0x0]
	ldr		r1, _0830e288
	ldr		r0, _0830e28c
	str		r5, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r2, _0830e290
	str		r5, [r2, #0x0]
	ldr		r3, _0830e294
	ldrh	r1, [r4, #0x30]
	mov		r0, #0x3
	and		r0, r1
	str		r0, [r3, #0x0]
	ldr		r0, _0830e298
	str		r5, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	str		r0, [r2, #0x0]
	ldrh	r0, [r4, #0x2e]
	add		r7, r3, #0x0
	cmp		r0, #0x0
	bne		_0830e216
	mov		r0, #0xa
	strh	r0, [r4, #0x2e]
_0830e216:
	ldr		r0, _0830e29c
	str		r5, [r0, #0x4]
	ldr		r1, [r0, #0x4]
	str		r1, [r0, #0x0]
	ldr		r1, _0830e2a0
	ldr		r0, [r6, #0x0]
	ldrh	r0, [r0, #0x2c]
	strh	r0, [r1, #0x0]
	ldr		r4, _0830e2a4
	ldr		r3, _0830e2a8
	ldr		r5, _0830e2ac
	mov		r2, #0x3
_0830e22e:
	ldrh	r0, [r1, #0x0]
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x2]
	add		r1, #0x2
	sub		r2, #0x1
	cmp		r2, #0x0
	bge		_0830e22e
	mov		r2, #0x0
	str		r2, [r3, #0x0]
	str		r2, [r4, #0x0]
	ldr		r0, _0830e2b0
	strh	r2, [r0, #0x0]
	ldr		r3, _0830e2b4
	ldr		r0, [r7, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0x6
	add		r1, r4, #0x0
	orr		r0, r1
	strh	r0, [r3, #0x0]
	ldr		r0, _0830e2b8
	strh	r2, [r0, #0x0]
	mov		r0, #0x7
	add		r1, r5, #0x0
	bl		sub_08327550
	ldr		r1, _0830e2bc
	mov		r0, #0x6
	bl		sub_08327550
	ldr		r1, _0830e2c0
	mov		r0, #0x2
	bl		sub_08327560
	ldr		r1, _0830e2c4
	mov		r0, #0xf0
	str		r0, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0830e27c:	.4byte 0x030051C0
_0830e280:	.4byte 0x030002A0
_0830e284:	.4byte 0x03004AF4
_0830e288:	.4byte 0x03000298
_0830e28c:	.4byte 0x03000294
_0830e290:	.4byte 0x03000254
_0830e294:	.4byte 0x03000250
_0830e298:	.4byte 0x03000264
_0830e29c:	.4byte 0x03000268
_0830e2a0:	.4byte 0x030002A8
_0830e2a4:	.4byte 0x030002B4
_0830e2a8:	.4byte 0x030002B8
_0830e2ac:	.4byte 0x02007FED
_0830e2b0:	.4byte SIOModeSelect_GeneralPurposeData
_0830e2b4:	.4byte SIOControlRegister
_0830e2b8:	.4byte Timer3Control
_0830e2bc:	.4byte 0x02007E15
_0830e2c0:	.4byte 0x000100C0
_0830e2c4:	.4byte 0x0300024C
	thumb_func_end sub_0830e1d8

	thumb_func_start sub_0830e2c8
sub_0830e2c8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	ldr		r0, _0830e374
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	ldr		r1, _0830e378
	ldr		r0, _0830e37c
	str		r2, [r0, #0x0]
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	ldr		r3, _0830e380
	ldr		r0, [r3, #0x0]
	mov		r1, #0x4
	neg		r1, r1
	and		r0, r1
	str		r0, [r3, #0x0]
	ldr		r0, _0830e384
	str		r2, [r0, #0x0]
	ldr		r0, _0830e388
	str		r2, [r0, #0x0]
	ldr		r0, _0830e38c
	str		r2, [r0, #0x0]
	ldr		r0, _0830e390
	str		r2, [r0, #0x4]
	ldr		r1, [r0, #0x4]
	str		r1, [r0, #0x0]
	ldr		r0, _0830e394
	str		r2, [r0, #0x4]
	ldr		r1, [r0, #0x4]
	str		r1, [r0, #0x0]
	ldr		r0, _0830e398
	str		r2, [r0, #0x0]
	ldr		r1, _0830e39c
	str		r2, [r1, #0x0]
	ldr		r3, _0830e3a0
	ldr		r0, [r3, #0x0]
	ldr		r0, [r0, #0x4]
	str		r0, [r1, #0x8]
	str		r0, [r1, #0x4]
	ldrh	r0, [r1, #0xc]
	strh	r2, [r1, #0xc]
	mov		r4, #0x0
	mov		r9, r3
	ldr		r7, _0830e3a4
	mov		r6, #0x0
	ldr		r0, _0830e3a8
	mov		r8, r0
	add		r3, r7, #0x0
	add		r5, r3, #0x0
	mov		r1, #0xff
	mov		r12, r1
_0830e332:
	lsl		r2, r4, #0x4
	mov		r0, r12
	str		r0, [r3, #0x0]
	add		r0, r7, #0x4
	add		r2, r2, r0
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	lsl		r1, r4, #0x3
	add		r0, #0xc
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r5, #0x8]
	str		r0, [r2, #0x0]
	ldrh	r0, [r3, #0xc]
	strh	r6, [r3, #0xc]
	ldrh	r0, [r3, #0xe]
	strh	r6, [r3, #0xe]
	mov		r0, r8
	add		r0, #0x4
	mov		r8, r0
	sub		r0, #0x4
	stmia	r0!, {  r6 }
	add		r5, #0x10
	add		r3, #0x10
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_0830e332
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0830e374:	.4byte 0x0300029C
_0830e378:	.4byte 0x03000298
_0830e37c:	.4byte 0x03000294
_0830e380:	.4byte 0x03000254
_0830e384:	.4byte 0x03000260
_0830e388:	.4byte 0x03000280
_0830e38c:	.4byte 0x03000284
_0830e390:	.4byte 0x03000268
_0830e394:	.4byte 0x03000288
_0830e398:	.4byte 0x030002BC
_0830e39c:	.4byte 0x03000238
_0830e3a0:	.4byte 0x030002A0
_0830e3a4:	.4byte 0x030001F8
_0830e3a8:	.4byte 0x03000270
	thumb_func_end sub_0830e2c8

	thumb_func_start sub_0830e3ac
sub_0830e3ac:
	push	{ r4, r5, lr }
	ldr		r4, _0830e3c0
	ldr		r3, [r4, #0x0]
	cmp		r3, #0x0
	beq		_0830e3c8
	cmp		r3, #0x1
	beq		_0830e434
	ldr		r0, _0830e3c4
	ldr		r0, [r0, #0x0]
	b		_0830e4cc

_0830e3c0:	.4byte 0x030002BC
_0830e3c4:	.4byte 0x0300024C

_0830e3c8:
	ldr		r0, _0830e418
	strh	r3, [r0, #0x0]
	ldr		r1, _0830e41c
	ldr		r0, _0830e420
	ldr		r0, [r0, #0x0]
	ldrh	r0, [r0, #0x2c]
	mvn		r0, r0
	strh	r0, [r1, #0x0]
	ldr		r2, _0830e424
	ldr		r0, _0830e428
	ldr		r0, [r0, #0x0]
	mov		r5, #0xc0
	lsl		r5, r5, #0x7
	add		r1, r5, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	add		r2, r0, #0x0
	mov		r0, #0x8
	and		r0, r2
	cmp		r0, #0x0
	beq		_0830e4c8
	mov		r0, #0x40
	and		r0, r2
	cmp		r0, #0x0
	bne		_0830e4c8
	ldr		r1, _0830e42c
	mov		r0, #0x4
	and		r0, r2
	str		r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0830e40c
	mov		r0, #0xf0
	str		r0, [r1, #0x0]
_0830e40c:
	ldr		r0, _0830e430
	str		r3, [r0, #0x0]
	mov		r0, #0x1
	str		r0, [r4, #0x0]
	b		_0830e4c8

.incbin "base.gba", 0x30E416, 0x2

_0830e418:	.4byte SIOModeSelect_GeneralPurposeData
_0830e41c:	.4byte SIOData_Normal_8bitandUARTMode
_0830e420:	.4byte 0x030002A0
_0830e424:	.4byte SIOControlRegister
_0830e428:	.4byte 0x03000250
_0830e42c:	.4byte 0x0300024C
_0830e430:	.4byte 0x030051C0

_0830e434:
	ldr		r0, _0830e480
	ldrh	r0, [r0, #0x0]
	add		r2, r0, #0x0
	ldr		r0, _0830e484
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0830e49c
	mov		r1, #0x40
	and		r1, r2
	cmp		r1, #0x0
	bne		_0830e49c
	ldr		r0, _0830e488
	str		r1, [r0, #0x0]
	ldr		r1, _0830e48c
	mov		r0, #0x30
	and		r0, r2
	asr		r0, r0, #0x4
	str		r0, [r1, #0x0]
	ldr		r2, _0830e490
	lsl		r1, r0, #0x4
	add		r1, r1, r2
	ldrh	r2, [r1, #0xe]
	strh	r3, [r1, #0xe]
	ldr		r3, _0830e494
	ldr		r1, [r3, #0x0]
	mov		r2, #0x4
	neg		r2, r2
	and		r1, r2
	str		r1, [r3, #0x0]
	ldr		r1, [r3, #0x0]
	mov		r2, #0x2
	orr		r1, r2
	str		r1, [r3, #0x0]
	ldr		r1, _0830e498
	str		r2, [r1, #0x0]
	str		r2, [r4, #0x0]
	b		_0830e4cc

.incbin "base.gba", 0x30E47E, 0x2

_0830e480:	.4byte SIOControlRegister
_0830e484:	.4byte 0x030051C0
_0830e488:	.4byte 0x03000248
_0830e48c:	.4byte 0x0300024C
_0830e490:	.4byte 0x030001F8
_0830e494:	.4byte 0x03000254
_0830e498:	.4byte 0x03000294

_0830e49c:
	ldr		r1, _0830e4d4
	ldr		r0, _0830e4d8
	ldr		r0, [r0, #0x0]
	ldrh	r0, [r0, #0x2c]
	mvn		r0, r0
	strh	r0, [r1, #0x0]
	ldr		r2, _0830e4dc
	ldr		r0, _0830e4e0
	ldr		r0, [r0, #0x0]
	mov		r3, #0xc0
	lsl		r3, r3, #0x7
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r0, _0830e4e4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0830e4c8
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x80
	orr		r0, r1
	strh	r0, [r2, #0x0]
_0830e4c8:
	mov		r0, #0x1
	neg		r0, r0
_0830e4cc:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x30E4D2, 0x2

_0830e4d4:	.4byte SIOData_Normal_8bitandUARTMode
_0830e4d8:	.4byte 0x030002A0
_0830e4dc:	.4byte SIOControlRegister
_0830e4e0:	.4byte 0x03000250
_0830e4e4:	.4byte 0x0300024C

.incbin "base.gba", 0x30E4E8, 0xD8
	thumb_func_end sub_0830e3ac

	thumb_func_start sub_0830e5c0
sub_0830e5c0:
	ldr		r0, _0830e5d0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_0830e5d4
	mov		r0, #0x8
	neg		r0, r0
	b		_0830e5d6

.incbin "base.gba", 0x30E5CE, 0x2

_0830e5d0:	.4byte 0x03000294

_0830e5d4:
	mov		r0, #0x0
_0830e5d6:
	bx		lr
	thumb_func_end sub_0830e5c0

	thumb_func_start sub_0830e5d8
sub_0830e5d8:
	push	{ r4, lr }
	ldr		r2, _0830e610
	lsl		r3, r0, #0x4
	add		r1, r2, #0x4
	add		r1, r3, r1
	ldr		r4, [r1, #0x0]
	add		r2, #0x8
	add		r3, r3, r2
	ldr		r1, [r3, #0x0]
	ldr		r2, _0830e614
	ldr		r2, [r2, #0x0]
	lsl		r0, r0, #0x3
	add		r2, #0x10
	add		r2, r2, r0
	ldr		r2, [r2, #0x0]
	add		r0, r4, #0x0
	bl		sub_0830dd58
	add		r1, r0, #0x0
	ldr		r2, _0830e618
	ldr		r0, [r2, #0x0]
	cmp		r1, r0
	ble		_0830e608
	str		r1, [r2, #0x0]
_0830e608:
	add		r0, r1, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0830e610:	.4byte 0x030001F8
_0830e614:	.4byte 0x030002A0
_0830e618:	.4byte 0x030002B8

.incbin "base.gba", 0x30E61C, 0x30
	thumb_func_end sub_0830e5d8

	thumb_func_start sub_0830e64c
sub_0830e64c:
	push	{ lr }
	bl		sub_0830e3ac
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x30E656, 0x6A
	thumb_func_end sub_0830e64c

	thumb_func_start sub_0830e6c0
sub_0830e6c0:
	lsl		r0, r0, #0x9
	ldr		r1, _0830e6c8
	add		r0, r0, r1
	bx		lr

_0830e6c8:	.4byte 0x030002C0
	thumb_func_end sub_0830e6c0

	thumb_func_start sub_0830e6cc
sub_0830e6cc:
	ldr		r1, _0830e6d4
	str		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x30E6D2, 0x2

_0830e6d4:	.4byte 0x030006C0

.incbin "base.gba", 0x30E6D8, 0xC
	thumb_func_end sub_0830e6cc

	thumb_func_start sub_0830e6e4
sub_0830e6e4:
	lsl		r0, r0, #0xb
	lsl		r2, r2, #0x5
	add		r2, r2, r1
	lsl		r2, r2, #0x1
	ldr		r1, _0830e6f4
	add		r2, r2, r1
	add		r0, r0, r2
	bx		lr

_0830e6f4:	.4byte 0x030006C8

.incbin "base.gba", 0x30E6F8, 0x38
	thumb_func_end sub_0830e6e4

	thumb_func_start sub_0830e730
sub_0830e730:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	ldr		r2, _0830e740
	ldrh	r1, [r2, #0x0]
	orr		r0, r1
	strh	r0, [r2, #0x0]
	bx		lr

.incbin "base.gba", 0x30E73E, 0x2

_0830e740:	.4byte 0x030016C8

.incbin "base.gba", 0x30E744, 0x68
	thumb_func_end sub_0830e730

	thumb_func_start sub_0830e7ac
sub_0830e7ac:
	push	{ r4, r5, r6, lr }
	cmp		r0, #0x0
	bge		_0830e7b4
	neg		r0, r0
_0830e7b4:
	ldr		r2, _0830e804
	add		r4, r2, #0x0
	and		r4, r0
	cmp		r1, #0x0
	bge		_0830e7c0
	neg		r1, r1
_0830e7c0:
	add		r5, r2, #0x0
	and		r5, r1
	cmp		r4, r5
	bcs		_0830e7ce
	add		r0, r4, #0x0
	add		r4, r5, #0x0
	add		r5, r0, #0x0
_0830e7ce:
	cmp		r5, #0x0
	beq		_0830e7fa
	mov		r6, #0x2
_0830e7d4:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_083272c8
	add		r2, r0, #0x0
	add		r0, r2, #0x0
	mul		r0, r2
	add		r2, r0, #0x0
	add		r1, r2, #0x4
	bl		sub_083272c8
	add		r2, r0, #0x0
	lsl		r0, r2, #0x1
	mul		r0, r4
	add		r4, r4, r0
	mul		r5, r2
	sub		r6, #0x1
	cmp		r6, #0x0
	bge		_0830e7d4
_0830e7fa:
	add		r0, r4, #0x0
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x30E802, 0x2

_0830e804:	.4byte 0x7FFFFFFF
	thumb_func_end sub_0830e7ac

	thumb_func_start sub_0830e808
sub_0830e808:
	push	{ lr }
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_083272bc
	lsl		r0, r0, #0x10
	mov		r1, #0x80
	lsl		r1, r1, #0x17
	add		r0, r0, r1
	lsr		r0, r0, #0x10
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x30E824, 0x1C
	thumb_func_end sub_0830e808

	thumb_func_start sub_0830e840
sub_0830e840:
	push	{ lr }
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_083272bc
	mov		r1, #0x80
	lsl		r1, r1, #0x7
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x30E85C, 0x10
	thumb_func_end sub_0830e840

	thumb_func_start sub_0830e86c
sub_0830e86c:
	add		r2, r0, #0x0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	ldr		r0, [r2, #0x4]
	cmp		r0, #0x0
	beq		_0830e87c
	str		r1, [r0, #0x0]
	b		_0830e87e
_0830e87c:
	str		r1, [r2, #0x0]
_0830e87e:
	str		r1, [r2, #0x4]
	bx		lr

.incbin "base.gba", 0x30E882, 0x2E
	thumb_func_end sub_0830e86c

	thumb_func_start sub_0830e8b0
sub_0830e8b0:
	add		r3, r0, #0x0
	ldr		r2, [r3, #0x4]
	str		r2, [r1, #0x4]
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	cmp		r2, #0x0
	beq		_0830e8c2
	str		r1, [r2, #0x0]
	b		_0830e8c4
_0830e8c2:
	str		r1, [r3, #0x0]
_0830e8c4:
	str		r1, [r3, #0x4]
	bx		lr
	thumb_func_end sub_0830e8b0

	thumb_func_start sub_0830e8c8
sub_0830e8c8:
	add		r3, r0, #0x0
	ldr		r0, [r1, #0x4]
	str		r0, [r2, #0x4]
	str		r1, [r2, #0x0]
	ldr		r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_0830e8da
	str		r2, [r0, #0x0]
	b		_0830e8dc
_0830e8da:
	str		r2, [r3, #0x0]
_0830e8dc:
	str		r2, [r1, #0x4]
	bx		lr

.incbin "base.gba", 0x30E8E0, 0x50
	thumb_func_end sub_0830e8c8

	thumb_func_start sub_0830e930
sub_0830e930:
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldr		r0, [r3, #0x0]
	cmp		r2, r0
	bne		_0830e940
	ldr		r0, [r2, #0x0]
	str		r0, [r3, #0x0]
	b		_0830e946
_0830e940:
	ldr		r1, [r2, #0x4]
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
_0830e946:
	ldr		r0, [r3, #0x4]
	cmp		r2, r0
	bne		_0830e952
	ldr		r0, [r2, #0x4]
	str		r0, [r3, #0x4]
	b		_0830e958
_0830e952:
	ldr		r1, [r2, #0x0]
	ldr		r0, [r2, #0x4]
	str		r0, [r1, #0x4]
_0830e958:
	mov		r0, #0x0
	str		r0, [r2, #0x0]
	str		r0, [r2, #0x4]
	bx		lr
	thumb_func_end sub_0830e930

	thumb_func_start sub_0830e960
sub_0830e960:
	mov		r1, #0x0
	str		r1, [r0, #0x4]
	str		r1, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x30E968, 0x8
	thumb_func_end sub_0830e960

	thumb_func_start sub_0830e970
sub_0830e970:
	add		r3, r0, #0x0
	mov		r0, #0x0
	ldr		r2, [r3, #0x0]
	str		r0, [r1, #0x40]
	str		r2, [r1, #0x3c]
	cmp		r2, #0x0
	beq		_0830e982
	str		r1, [r2, #0x40]
	b		_0830e984
_0830e982:
	str		r1, [r3, #0x4]
_0830e984:
	str		r1, [r3, #0x0]
	bx		lr

.incbin "base.gba", 0x30E988, 0x18
	thumb_func_end sub_0830e970

	thumb_func_start sub_0830e9a0
sub_0830e9a0:
	ldr		r2, [r0, #0x0]
	ldr		r1, [r2, #0x3c]
	str		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0830e9b0
	mov		r0, #0x0
	str		r0, [r1, #0x40]
	b		_0830e9b2
_0830e9b0:
	str		r1, [r0, #0x4]
_0830e9b2:
	mov		r0, #0x0
	str		r0, [r2, #0x40]
	str		r0, [r2, #0x3c]
	add		r0, r2, #0x0
	bx		lr
	thumb_func_end sub_0830e9a0

	thumb_func_start sub_0830e9bc
sub_0830e9bc:
	ldr		r2, [r0, #0x4]
	ldr		r1, [r2, #0x40]
	str		r1, [r0, #0x4]
	cmp		r1, #0x0
	beq		_0830e9cc
	mov		r0, #0x0
	str		r0, [r1, #0x3c]
	b		_0830e9ce
_0830e9cc:
	str		r1, [r0, #0x0]
_0830e9ce:
	mov		r0, #0x0
	str		r0, [r2, #0x40]
	str		r0, [r2, #0x3c]
	add		r0, r2, #0x0
	bx		lr
	thumb_func_end sub_0830e9bc

	thumb_func_start sub_0830e9d8
sub_0830e9d8:
	push	{ lr }
	add		r2, r0, #0x0
	add		r3, r1, #0x0
	ldr		r0, [r2, #0x0]
	cmp		r1, r0
	bne		_0830e9ec
	add		r0, r2, #0x0
	bl		sub_0830e9a0
	b		_0830ea0c
_0830e9ec:
	ldr		r0, [r2, #0x4]
	cmp		r1, r0
	bne		_0830e9fa
	add		r0, r2, #0x0
	bl		sub_0830e9bc
	b		_0830ea0c
_0830e9fa:
	ldr		r1, [r3, #0x40]
	ldr		r0, [r3, #0x3c]
	str		r0, [r1, #0x3c]
	ldr		r1, [r3, #0x3c]
	ldr		r0, [r3, #0x40]
	str		r0, [r1, #0x40]
	mov		r0, #0x0
	str		r0, [r3, #0x40]
	str		r0, [r3, #0x3c]
_0830ea0c:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x30EA10, 0x40
	thumb_func_end sub_0830e9d8

	thumb_func_start sub_0830ea50
sub_0830ea50:
	ldr		r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x30EA54, 0x4
	thumb_func_end sub_0830ea50

	thumb_func_start sub_0830ea58
sub_0830ea58:
	ldr		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x30EA5C, 0x4
	thumb_func_end sub_0830ea58

	thumb_func_start sub_0830ea60
sub_0830ea60:
	mov		r1, #0x0
	str		r1, [r0, #0x4]
	str		r1, [r0, #0x0]
	bx		lr
	thumb_func_end sub_0830ea60

	thumb_func_start sub_0830ea68
sub_0830ea68:
	mov		r1, #0x0
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0830ea72
	mov		r1, #0x1
_0830ea72:
	add		r0, r1, #0x0
	bx		lr

.incbin "base.gba", 0x30EA76, 0xA
	thumb_func_end sub_0830ea68

	thumb_func_start sub_0830ea80
sub_0830ea80:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r4, r1, #0x0
	ldrb	r2, [r3, #0x0]
	cmp		r2, #0x18
	beq		_0830ea9c
	lsl		r1, r2, #0x2
	add		r0, r3, #0x4
	add		r0, r0, r1
	str		r4, [r0, #0x0]
	add		r2, #0x1
	strb	r2, [r3, #0x0]
	mov		r0, #0x1
	b		_0830ea9e
_0830ea9c:
	mov		r0, #0x0
_0830ea9e:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0830ea80

	thumb_func_start sub_0830eaa4
sub_0830eaa4:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r4, r1, #0x0
	ldrb	r2, [r3, #0x1]
	cmp		r2, #0x40
	beq		_0830eac0
	lsl		r1, r2, #0x2
	add		r0, #0x64
	add		r0, r0, r1
	str		r4, [r0, #0x0]
	add		r2, #0x1
	strb	r2, [r3, #0x1]
	mov		r0, #0x1
	b		_0830eac2
_0830eac0:
	mov		r0, #0x0
_0830eac2:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0830eaa4

	thumb_func_start sub_0830eac8
sub_0830eac8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	mov		r8, r2
	mov		r9, r3
	mov		r2, #0x0
	sub		r0, r7, #0x1
	cmp		r2, r0
	bge		_0830eb28
	mov		r10, r0
_0830eae4:
	lsl		r1, r2, #0x2
	add		r0, r1, r6
	ldr		r0, [r0, #0x0]
	add		r0, #0x36
	ldrb	r5, [r0, #0x0]
	add		r4, r2, #0x0
	add		r3, r4, #0x1
	add		r2, r1, #0x0
	mov		r12, r3
	cmp		r3, r7
	bge		_0830eb14
	lsl		r0, r3, #0x2
	add		r1, r0, r6
_0830eafe:
	ldr		r0, [r1, #0x0]
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	cmp		r0, r5
	bge		_0830eb0c
	add		r5, r0, #0x0
	add		r4, r3, #0x0
_0830eb0c:
	add		r1, #0x4
	add		r3, #0x1
	cmp		r3, r7
	blt		_0830eafe
_0830eb14:
	lsl		r1, r4, #0x2
	add		r1, r1, r6
	ldr		r3, [r1, #0x0]
	add		r2, r2, r6
	ldr		r0, [r2, #0x0]
	str		r0, [r1, #0x0]
	str		r3, [r2, #0x0]
	mov		r2, r12
	cmp		r2, r10
	blt		_0830eae4
_0830eb28:
	mov		r3, #0x0
	mov		r2, #0x0
	mov		r4, #0x0
	cmp		r2, r7
	bge		_0830eb68
_0830eb32:
	lsl		r0, r3, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	add		r0, #0x36
	add		r3, #0x1
	mov		r10, r3
	add		r3, r4, #0x1
	ldrb	r1, [r0, #0x0]
	cmp		r2, r1
	bgt		_0830eb56
	add		r1, r0, #0x0
_0830eb48:
	mov		r5, r8
	add		r0, r5, r2
	strb	r4, [r0, #0x0]
	add		r2, #0x1
	ldrb	r0, [r1, #0x0]
	cmp		r2, r0
	ble		_0830eb48
_0830eb56:
	add		r4, r3, #0x0
	mov		r3, r10
	cmp		r3, r7
	blt		_0830eb32
	b		_0830eb68
_0830eb60:
	mov		r1, r8
	add		r0, r1, r2
	strb	r4, [r0, #0x0]
	add		r2, #0x1
_0830eb68:
	cmp		r2, r9
	blt		_0830eb60
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x30EB7A, 0x636
	thumb_func_end sub_0830eac8

	thumb_func_start sub_0830f1b0
sub_0830f1b0:
	mov		r2, #0x0
	mov		r1, #0x0
	strh	r1, [r0, #0x10]
	str		r1, [r0, #0x0]
	str		r1, [r0, #0x4]
	str		r1, [r0, #0x8]
	strh	r1, [r0, #0x26]
	str		r1, [r0, #0x28]
	str		r1, [r0, #0x2c]
	str		r1, [r0, #0x30]
	strh	r1, [r0, #0x20]
	strh	r1, [r0, #0x22]
	strh	r1, [r0, #0x24]
	strb	r2, [r0, #0xc]
	strb	r2, [r0, #0xd]
	strb	r2, [r0, #0xe]
	strh	r1, [r0, #0x34]
	add		r3, r0, #0x0
	add		r3, #0x36
	mov		r2, #0x7f
	strb	r2, [r3, #0x0]
	strh	r1, [r0, #0x38]
	str		r1, [r0, #0x14]
	str		r1, [r0, #0x18]
	bx		lr

.incbin "base.gba", 0x30F1E2, 0x4A
	thumb_func_end sub_0830f1b0

	thumb_func_start sub_0830f22c
sub_0830f22c:
	mov		r3, #0x1e
	ldrsh	r2, [r0, r3]
	mov		r3, #0x1e
	ldrsh	r0, [r1, r3]
	mov		r1, #0x0
	cmp		r2, r0
	bge		_0830f23c
	mov		r1, #0x1
_0830f23c:
	add		r0, r1, #0x0
	bx		lr
	thumb_func_end sub_0830f22c

	thumb_func_start sub_0830f240
sub_0830f240:
	mov		r3, #0x20
	ldrsh	r2, [r0, r3]
	mov		r3, #0x20
	ldrsh	r0, [r1, r3]
	mov		r1, #0x0
	cmp		r2, r0
	ble		_0830f250
	mov		r1, #0x1
_0830f250:
	add		r0, r1, #0x0
	bx		lr
	thumb_func_end sub_0830f240

	thumb_func_start sub_0830f254
sub_0830f254:
	ldrb	r0, [r0, #0x1e]
	ldrb	r1, [r1, #0x1e]
	sub		r0, r0, r1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bge		_0830f26a
	neg		r0, r0
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
_0830f26a:
	add		r0, r1, #0x0
	bx		lr

.incbin "base.gba", 0x30F26E, 0x2
	thumb_func_end sub_0830f254

	thumb_func_start sub_0830f270
sub_0830f270:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	add		r6, r0, #0x0
	ldr		r4, _0830f2a8
	add		r4, #0x24
	add		r5, r6, #0x0
	add		r5, #0x1c
	add		r3, r6, #0x0
	add		r3, #0x24
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	add		r2, r5, #0x0
	bl		sub_0831ed70
	add		r2, r6, #0x0
	add		r2, #0x20
	ldr		r3, [r6, #0x8]
	mov		r1, #0x24
	ldrsh	r0, [r6, r1]
	str		r0, [sp, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0831ed84
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0830f2a8:	.4byte 0x030031D0

.incbin "base.gba", 0x30F2AC, 0x7C
	thumb_func_end sub_0830f270

	thumb_func_start sub_0830f328
sub_0830f328:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r6, _0830f364
	ldr		r5, [r6, #0x0]
	cmp		r5, #0x1f
	bgt		_0830f36c
	lsl		r3, r5, #0x5
	ldr		r2, _0830f368
	add		r1, r3, r2
	ldrh	r0, [r4, #0x18]
	strh	r0, [r1, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x8
	add		r0, r3, r0
	ldrh	r1, [r4, #0x1a]
	strh	r1, [r0, #0x0]
	add		r0, r2, #0x0
	add		r0, #0x10
	add		r0, r3, r0
	ldrh	r1, [r4, #0x1c]
	strh	r1, [r0, #0x0]
	add		r2, #0x18
	add		r3, r3, r2
	ldrh	r0, [r4, #0x1e]
	strh	r0, [r3, #0x0]
	add		r0, r5, #0x1
	str		r0, [r6, #0x0]
	add		r0, r5, #0x0
	b		_0830f370

.incbin "base.gba", 0x30F362, 0x2

_0830f364:	.4byte 0x030016DC
_0830f368:	.4byte 0x030016E6

_0830f36c:
	mov		r0, #0x1
	neg		r0, r0
_0830f370:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x30F376, 0x2
	thumb_func_end sub_0830f328

	thumb_func_start sub_0830f378
sub_0830f378:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x28
	mov		r10, r0
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	mov		r1, r10
	ldrh	r1, [r1, #0x4]
	str		r1, [sp, #0x0]
	mov		r2, r10
	ldrh	r2, [r2, #0x6]
	str		r2, [sp, #0x4]
	ldrh	r3, [r0, #0x0]
	str		r3, [sp, #0x8]
	mov		r4, #0x2
	add		r8, r4
	mov		r5, r10
	ldrh	r5, [r5, #0x20]
	str		r5, [sp, #0xC]
	mov		r6, r10
	ldrh	r6, [r6, #0x22]
	str		r6, [sp, #0x10]
	ldr		r0, _0830f480
	ldr		r1, [r0, #0x0]
	ldr		r2, _0830f484
	cmp		r1, r2
	ble		_0830f3b6
	b		_0830f4de
_0830f3b6:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	ldr		r1, [sp, #0xC]
	cmp		r1, r0
	bne		_0830f490
	ldr		r3, [sp, #0x10]
	cmp		r3, r1
	bne		_0830f490
	mov		r4, r10
	ldr		r0, [r4, #0x18]
	cmp		r0, r1
	bne		_0830f490
	ldr		r5, [sp, #0x8]
	cmp		r5, #0x0
	bgt		_0830f3d6
	b		_0830f676
_0830f3d6:
	mov		r12, r2
	ldr		r7, _0830f488
	add		r6, r7, #0x4
	mov		r9, r6
_0830f3de:
	ldr		r0, _0830f480
	ldr		r6, [r0, #0x0]
	cmp		r6, r12
	ble		_0830f3e8
	b		_0830f676
_0830f3e8:
	mov		r1, r8
	ldrh	r5, [r1, #0x0]
	mov		r2, #0x2
	add		r8, r2
	lsl		r4, r6, #0x1
	add		r2, r4, r7
	ldr		r3, [sp, #0x4]
	add		r1, r5, r3
	mov		r0, #0xff
	and		r1, r0
	mov		r3, #0xff
	lsl		r3, r3, #0x8
	add		r0, r3, #0x0
	and		r5, r0
	orr		r1, r5
	strh	r1, [r2, #0x0]
	mov		r0, r8
	ldrh	r5, [r0, #0x0]
	mov		r1, #0x2
	add		r8, r1
	add		r2, r7, #0x2
	add		r2, r4, r2
	ldr		r3, [sp, #0x0]
	add		r1, r5, r3
	mov		r0, r12
	and		r1, r0
	mov		r3, #0xfe
	lsl		r3, r3, #0x8
	add		r0, r3, #0x0
	and		r5, r0
	orr		r1, r5
	strh	r1, [r2, #0x0]
	lsr		r2, r6, #0x1f
	add		r2, r6, r2
	asr		r2, r2, #0x1
	lsl		r2, r2, #0x2
	add		r3, r2, r7
	ldr		r0, [r3, #0x0]
	mov		r5, r10
	ldr		r1, [r5, #0xc]
	and		r0, r1
	str		r0, [r3, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r1, [r5, #0x8]
	orr		r0, r1
	str		r0, [r3, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r1, _0830f48c
	and		r0, r1
	str		r0, [r3, #0x0]
	mov		r0, r8
	ldrh	r5, [r0, #0x0]
	mov		r1, #0x2
	add		r8, r1
	add		r4, r9
	strh	r5, [r4, #0x0]
	add		r2, r9
	ldr		r0, [r2, #0x0]
	mov		r3, r10
	ldr		r1, [r3, #0x14]
	and		r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, [r2, #0x0]
	ldr		r1, [r3, #0x10]
	orr		r0, r1
	str		r0, [r2, #0x0]
	add		r0, r6, #0x4
	ldr		r4, _0830f480
	str		r0, [r4, #0x0]
	ldr		r5, [sp, #0x8]
	sub		r5, #0x1
	str		r5, [sp, #0x8]
	cmp		r5, #0x0
	bgt		_0830f3de
	b		_0830f676

.incbin "base.gba", 0x30F47E, 0x2

_0830f480:	.4byte 0x030016D8
_0830f484:	.4byte 0x000001FF
_0830f488:	.4byte 0x030016E0
_0830f48c:	.4byte 0xfffffcff

_0830f490:
	mov		r6, r8
	ldrh	r5, [r6, #0x2]
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	and		r0, r5
	mov		r1, #0x1
	cmp		r0, #0x0
	beq		_0830f4a2
	sub		r1, #0x2
_0830f4a2:
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	and		r5, r0
	mov		r2, #0x1
	cmp		r5, #0x0
	beq		_0830f4b0
	sub		r2, #0x2
_0830f4b0:
	mov		r3, r10
	mov		r4, #0x18
	ldrsh	r0, [r3, r4]
	mul		r0, r1
	strh	r0, [r3, #0x18]
	mov		r5, #0x1a
	ldrsh	r0, [r3, r5]
	mul		r0, r1
	strh	r0, [r3, #0x1a]
	mov		r6, #0x1c
	ldrsh	r0, [r3, r6]
	mul		r0, r2
	strh	r0, [r3, #0x1c]
	mov		r1, #0x1e
	ldrsh	r0, [r3, r1]
	mul		r0, r2
	strh	r0, [r3, #0x1e]
	mov		r0, r10
	bl		sub_0830f328
	str		r0, [sp, #0x18]
	cmp		r0, #0x0
	bge		_0830f4e4
_0830f4de:
	mov		r0, #0x1
	neg		r0, r0
	b		_0830f678
_0830f4e4:
	ldr		r0, [sp, #0xC]
	cmp		r0, #0xff
	ble		_0830f4f0
	ldr		r0, [sp, #0x10]
	cmp		r0, #0xff
	bgt		_0830f4f8
_0830f4f0:
	mov		r2, #0xc0
	lsl		r2, r2, #0x2
	str		r2, [sp, #0x14]
	b		_0830f4fe
_0830f4f8:
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	str		r3, [sp, #0x14]
_0830f4fe:
	ldr		r4, [sp, #0x8]
	cmp		r4, #0x0
	bgt		_0830f506
	b		_0830f676
_0830f506:
	mov		r5, r8
	ldrh	r0, [r5, #0x0]
	lsr		r3, r0, #0xe
	ldrh	r0, [r5, #0x2]
	lsr		r4, r0, #0xe
	ldr		r6, _0830f5a0
	ldr		r0, [r6, #0x0]
	ldr		r1, _0830f5a4
	cmp		r0, r1
	ble		_0830f51c
	b		_0830f676
_0830f51c:
	ldrh	r5, [r5, #0x0]
	mov		r2, #0x2
	add		r8, r2
	mov		r2, #0xff
	and		r2, r5
	lsl		r0, r2, #0x18
	asr		r6, r0, #0x18
	ldr		r1, _0830f5a8
	lsl		r4, r4, #0x2
	lsl		r3, r3, #0x4
	add		r0, r4, r3
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r9, r0
	add		r7, r6, r0
	lsl		r6, r7, #0x8
	add		r0, r6, #0x0
	ldr		r1, [sp, #0x10]
	str		r2, [sp, #0x20]
	str		r3, [sp, #0x24]
	bl		sub_083272c8
	add		r6, r0, #0x0
	sub		r0, r6, r7
	ldr		r2, [sp, #0x20]
	add		r6, r2, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r7, r4, #0x0
	ldr		r3, [sp, #0x24]
	add		r4, r3, #0x0
	ldr		r3, [sp, #0x14]
	cmp		r3, r0
	beq		_0830f564
	mov		r0, r9
	sub		r6, r6, r0
_0830f564:
	ldr		r1, _0830f5a0
	ldr		r2, [r1, #0x0]
	lsl		r2, r2, #0x1
	ldr		r0, _0830f5ac
	add		r2, r2, r0
	ldr		r3, [sp, #0x4]
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	add		r0, r0, r6
	mov		r1, #0xff
	and		r0, r1
	mov		r6, #0xff
	lsl		r6, r6, #0x8
	add		r1, r6, #0x0
	and		r5, r1
	orr		r0, r5
	strh	r0, [r2, #0x0]
	mov		r0, r8
	ldrh	r5, [r0, #0x0]
	mov		r1, #0x2
	add		r8, r1
	add		r2, r5, #0x0
	ldr		r3, _0830f5a4
	and		r2, r3
	cmp		r2, #0xff
	ble		_0830f5b0
	add		r0, r2, #0x0
	eor		r0, r3
	neg		r6, r0
	b		_0830f5b2

_0830f5a0:	.4byte 0x030016D8
_0830f5a4:	.4byte 0x000001FF
_0830f5a8:	.4byte 0x0202A970
_0830f5ac:	.4byte 0x030016E0

_0830f5b0:
	add		r6, r2, #0x0
_0830f5b2:
	ldr		r1, _0830f688
	add		r0, r7, r4
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	add		r7, r6, r4
	lsl		r6, r7, #0x8
	add		r0, r6, #0x0
	ldr		r1, [sp, #0xC]
	str		r2, [sp, #0x20]
	bl		sub_083272c8
	add		r6, r0, #0x0
	sub		r0, r6, r7
	ldr		r2, [sp, #0x20]
	add		r6, r2, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	ldr		r1, [sp, #0x14]
	cmp		r1, r0
	beq		_0830f5dc
	sub		r6, r6, r4
_0830f5dc:
	ldr		r2, _0830f68c
	ldr		r4, [r2, #0x0]
	lsl		r7, r4, #0x1
	ldr		r0, _0830f690
	add		r3, r7, r0
	ldr		r1, [sp, #0x0]
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	add		r0, r0, r6
	ldr		r2, _0830f694
	and		r0, r2
	ldr		r6, [sp, #0x18]
	lsl		r1, r6, #0x9
	mov		r6, #0xf8
	lsl		r6, r6, #0x6
	add		r2, r6, #0x0
	and		r1, r2
	orr		r0, r1
	mov		r2, #0xc0
	lsl		r2, r2, #0x8
	add		r1, r2, #0x0
	and		r5, r1
	orr		r0, r5
	strh	r0, [r3, #0x0]
	lsr		r3, r4, #0x1f
	add		r3, r4, r3
	asr		r3, r3, #0x1
	lsl		r3, r3, #0x2
	ldr		r2, _0830f690
	sub		r2, #0x2
	add		r2, r3, r2
	ldr		r0, [r2, #0x0]
	mov		r5, r10
	ldr		r1, [r5, #0xc]
	and		r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, [r2, #0x0]
	ldr		r1, [r5, #0x8]
	orr		r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, [r2, #0x0]
	ldr		r1, _0830f698
	and		r0, r1
	str		r0, [r2, #0x0]
	ldr		r0, [r2, #0x0]
	ldr		r6, [sp, #0x14]
	orr		r0, r6
	str		r0, [r2, #0x0]
	ldr		r0, _0830f69c
	add		r0, r7, r0
	str		r0, [sp, #0x1C]
	mov		r1, r8
	ldrh	r0, [r1, #0x0]
	ldr		r2, [sp, #0x1C]
	strh	r0, [r2, #0x0]
	mov		r5, #0x2
	add		r8, r5
	ldr		r6, _0830f69c
	add		r3, r3, r6
	ldr		r0, [r3, #0x0]
	mov		r2, r10
	ldr		r1, [r2, #0x14]
	and		r0, r1
	str		r0, [r3, #0x0]
	ldr		r0, [r3, #0x0]
	ldr		r1, [r2, #0x10]
	orr		r0, r1
	str		r0, [r3, #0x0]
	add		r4, #0x4
	ldr		r3, _0830f68c
	str		r4, [r3, #0x0]
	ldr		r4, [sp, #0x8]
	sub		r4, #0x1
	str		r4, [sp, #0x8]
	cmp		r4, #0x0
	ble		_0830f676
	b		_0830f506
_0830f676:
	mov		r0, #0x0
_0830f678:
	add		sp, #0x28
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0830f688:	.4byte 0x0202A940
_0830f68c:	.4byte 0x030016D8
_0830f690:	.4byte 0x030016E2
_0830f694:	.4byte 0x000001FF
_0830f698:	.4byte 0xfffffcff
_0830f69c:	.4byte 0x030016E4
	thumb_func_end sub_0830f378

	thumb_func_start sub_0830f6a0
sub_0830f6a0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x24
	mov		r8, r0
	add		r7, r1, #0x0
	mov		r12, r2
	add		r6, r3, #0x0
	ldr		r0, [sp, #0x4+0x44]
	mov		r9, r0
	cmp		r0, #0x0
	bne		_0830f788
	mov		r5, sp
	mov		r1, r8
	str		r1, [sp, #0x0]
	ldrh	r0, [r7, #0x0]
	strh		r0, [r5, #0x4]
	ldrh	r0, [r7, #0x2]
	strh		r0, [r5, #0x6]
	mov		r2, r9
	str		r2, [sp, #0x8]
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [sp, #0xC]
	str		r2, [sp, #0x10]
	str		r0, [sp, #0x14]
	mov		r3, r12
	cmp		r3, #0x0
	beq		_0830f6e2
	cmp		r6, #0x0
	bne		_0830f6e8
_0830f6e2:
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	mov		r12, r6
_0830f6e8:
	ldr		r1, _0830f778
	ldr		r7, [sp, #0x0+0x44]
	lsl		r0, r7, #0x10
	asr		r2, r0, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0830f6f8
	add		r0, #0x3f
_0830f6f8:
	asr		r3, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r4, _0830f77c
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	mov		r8, r0
	ldr		r0, [r0, #0x0]
	mov		r7, r12
	mul		r7, r0
	add		r0, r7, #0x0
	cmp		r0, #0x0
	bge		_0830f71a
	ldr		r7, _0830f780
	add		r0, r0, r7
_0830f71a:
	asr		r0, r0, #0xf
	strh		r0, [r5, #0x18]
	add		r0, r3, #0x0
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r1, r0, r1
	ldr		r0, [r1, #0x0]
	mov		r3, r12
	mul		r3, r0
	add		r0, r3, #0x0
	cmp		r0, #0x0
	bge		_0830f736
	ldr		r7, _0830f780
	add		r0, r0, r7
_0830f736:
	asr		r0, r0, #0xf
	strh		r0, [r5, #0x1A]
	ldr		r1, [r1, #0x0]
	neg		r0, r6
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0830f748
	ldr		r1, _0830f780
	add		r0, r0, r1
_0830f748:
	asr		r0, r0, #0xf
	strh		r0, [r5, #0x1C]
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	mul		r0, r6
	cmp		r0, #0x0
	bge		_0830f75a
	ldr		r3, _0830f780
	add		r0, r0, r3
_0830f75a:
	asr		r0, r0, #0xf
	strh		r0, [r5, #0x1E]
	mov		r7, r12
	strh		r7, [r5, #0x20]
	strh		r6, [r5, #0x22]
	ldr		r4, _0830f784
	mov		r0, #0x1
	str		r0, [r4, #0x0]
	add		r0, r5, #0x0
	bl		sub_0830f378
	mov		r0, #0x0
	str		r0, [r4, #0x0]
	b		_0830f8a6

.incbin "base.gba", 0x30F776, 0x2

_0830f778:	.4byte 0x0202A9A0
_0830f77c:	.4byte 0x000003FF
_0830f780:	.4byte 0x00007FFF
_0830f784:	.4byte 0x03002174

_0830f788:
	ldr		r0, _0830f7b0
	ldr		r1, [r0, #0x0]
	mov		r10, r0
	cmp		r1, #0x1f
	ble		_0830f794
	b		_0830f8a6
_0830f794:
	mov		r0, #0x34
	mul		r1, r0
	ldr		r0, _0830f7b4
	add		r2, r1, r0
	ldr		r3, _0830f7b8
	ldr		r1, [r3, #0x0]
	cmp		r1, #0x0
	bne		_0830f7c0
	ldr		r0, _0830f7bc
	str		r2, [r0, #0x0]
	str		r2, [r3, #0x0]
	str		r1, [r2, #0x4]
	str		r1, [r2, #0x0]
	b		_0830f7ce

_0830f7b0:	.4byte 0x03002168
_0830f7b4:	.4byte 0x03001AE0
_0830f7b8:	.4byte 0x03002160
_0830f7bc:	.4byte 0x03002164

_0830f7c0:
	ldr		r1, _0830f8b8
	ldr		r0, [r1, #0x0]
	str		r2, [r0, #0x0]
	str		r0, [r2, #0x4]
	mov		r0, #0x0
	str		r0, [r2, #0x0]
	str		r2, [r1, #0x0]
_0830f7ce:
	mov		r0, r10
	ldr		r1, [r0, #0x0]
	mov		r0, #0x34
	add		r5, r1, #0x0
	mul		r5, r0
	ldr		r3, _0830f8bc
	add		r4, r5, r3
	mov		r1, r9
	ldr		r0, [r1, #0x0]
	str		r0, [r4, #0x0]
	ldr		r1, [r1, #0x4]
	mov		r0, r8
	ldrh	r2, [r0, #0x6]
	mov		r0, #0xc0
	lsl		r0, r0, #0x4
	and		r0, r2
	lsl		r0, r0, #0x10
	add		r1, r1, r0
	str		r1, [r4, #0x4]
	add		r3, #0x8
	add		r5, r5, r3
	mov		r1, r8
	str		r1, [r5, #0x0]
	ldrh	r0, [r7, #0x0]
	mov		r1, #0x0
	strh	r0, [r5, #0x4]
	ldrh	r0, [r7, #0x2]
	strh	r0, [r5, #0x6]
	str		r1, [r5, #0x8]
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r5, #0xc]
	str		r1, [r5, #0x10]
	str		r0, [r5, #0x14]
	mov		r2, r12
	cmp		r2, #0x0
	beq		_0830f81c
	cmp		r6, #0x0
	bne		_0830f822
_0830f81c:
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	mov		r12, r6
_0830f822:
	ldr		r1, _0830f8c0
	ldr		r3, [sp, #0x0+0x44]
	lsl		r0, r3, #0x10
	asr		r2, r0, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0830f832
	add		r0, #0x3f
_0830f832:
	asr		r3, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r4, _0830f8c4
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	mov		r8, r0
	ldr		r0, [r0, #0x0]
	mov		r7, r12
	mul		r7, r0
	add		r0, r7, #0x0
	cmp		r0, #0x0
	bge		_0830f854
	ldr		r7, _0830f8c8
	add		r0, r0, r7
_0830f854:
	asr		r0, r0, #0xf
	strh	r0, [r5, #0x18]
	add		r0, r3, #0x0
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r1, r0, r1
	ldr		r0, [r1, #0x0]
	mov		r3, r12
	mul		r3, r0
	add		r0, r3, #0x0
	cmp		r0, #0x0
	bge		_0830f870
	ldr		r7, _0830f8c8
	add		r0, r0, r7
_0830f870:
	asr		r0, r0, #0xf
	strh	r0, [r5, #0x1a]
	ldr		r1, [r1, #0x0]
	neg		r0, r6
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0830f882
	ldr		r1, _0830f8c8
	add		r0, r0, r1
_0830f882:
	asr		r0, r0, #0xf
	strh	r0, [r5, #0x1c]
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	mul		r0, r6
	cmp		r0, #0x0
	bge		_0830f894
	ldr		r3, _0830f8c8
	add		r0, r0, r3
_0830f894:
	asr		r0, r0, #0xf
	strh	r0, [r5, #0x1e]
	mov		r7, r12
	strh	r7, [r5, #0x20]
	strh	r6, [r5, #0x22]
	mov		r1, r10
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
_0830f8a6:
	add		sp, #0x24
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x30F8B6, 0x2

_0830f8b8:	.4byte 0x03002164
_0830f8bc:	.4byte 0x03001AE8
_0830f8c0:	.4byte 0x0202A9A0
_0830f8c4:	.4byte 0x000003FF
_0830f8c8:	.4byte 0x00007FFF
	thumb_func_end sub_0830f6a0

	thumb_func_start sub_0830f8cc
sub_0830f8cc:
	push	{ r4, lr }
	ldr		r0, _0830f8ec
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0830f8e6
_0830f8d6:
	add		r4, r0, #0x0
	add		r0, r4, #0x0
	add		r0, #0x10
	bl		sub_0830f378
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_0830f8d6
_0830f8e6:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0830f8ec:	.4byte 0x03002160
	thumb_func_end sub_0830f8cc

	thumb_func_start sub_0830f8f0
sub_0830f8f0:
	push	{ r4, lr }
	sub		sp, #0xc
	ldr		r4, [sp, #0x14]
	lsl		r1, r1, #0x10
	lsl		r2, r2, #0x10
	lsr		r1, r1, #0x10
	orr		r1, r2
	str		r1, [sp, #0x8]
	mov		r1, #0x0
	str		r1, [sp, #0x0]
	str		r4, [sp, #0x4]
	add		r1, sp, #0x8
	add		r2, r3, #0x0
	bl		sub_0830f6a0
	add		sp, #0xc
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x30F916, 0x2A2
	thumb_func_end sub_0830f8f0

	thumb_func_start sub_0830fbb8
sub_0830fbb8:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	ldr		r0, _0830fc04
	mov		r1, #0xe8
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_083214a4
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_0830fbfc
	add		r1, r4, #0x0
	add		r1, #0x4c
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	str		r5, [r4, #0x5c]
	str		r6, [r4, #0x60]
	add		r1, #0x18
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	ldr		r0, _0830fc08
	str		r0, [r4, #0x14]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	add		r0, #0x58
	strh	r1, [r0, #0x0]
	cmp		r7, #0x0
	beq		_0830fbfc
	add		r0, r4, #0x0
	bl		sub_08327320
_0830fbfc:
	add		r0, r4, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_0830fc04:	.4byte 0x030031D0
_0830fc08:	.4byte 0x02009DB1
	thumb_func_end sub_0830fbb8

	thumb_func_start sub_0830fc0c
sub_0830fc0c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x5c]
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x83
	bne		_0830fc1e
	b		_0830fd30
_0830fc1e:
	cmp		r0, #0x83
	bgt		_0830fc4e
	cmp		r0, #0x41
	beq		_0830fc84
	cmp		r0, #0x41
	bgt		_0830fc3c
	cmp		r0, #0x11
	beq		_0830fc7e
	cmp		r0, #0x11
	ble		_0830fc34
	b		_0830fda0
_0830fc34:
	cmp		r0, #0x0
	bne		_0830fc3a
	b		_0830fda4
_0830fc3a:
	b		_0830fda0
_0830fc3c:
	cmp		r0, #0x43
	beq		_0830fc8e
	cmp		r0, #0x43
	blt		_0830fc8a
	cmp		r0, #0x81
	beq		_0830fd00
	cmp		r0, #0x82
	beq		_0830fd08
	b		_0830fda0
_0830fc4e:
	cmp		r0, #0xf2
	beq		_0830fcd6
	cmp		r0, #0xf2
	bgt		_0830fc6a
	cmp		r0, #0x85
	beq		_0830fd00
	cmp		r0, #0x85
	blt		_0830fd58
	cmp		r0, #0x86
	bne		_0830fc64
	b		_0830fd98
_0830fc64:
	cmp		r0, #0xf1
	beq		_0830fcb8
	b		_0830fda0
_0830fc6a:
	cmp		r0, #0xf5
	beq		_0830fcaa
	cmp		r0, #0xf5
	bgt		_0830fc78
	cmp		r0, #0xf4
	beq		_0830fca0
	b		_0830fda0
_0830fc78:
	cmp		r0, #0xf6
	beq		_0830fcde
	b		_0830fda0
_0830fc7e:
	ldr		r0, [r5, #0x4]
	str		r0, [r4, #0x48]
	b		_0830fcc8
_0830fc84:
	ldr		r0, [r5, #0x4]
	str		r0, [r4, #0x68]
	b		_0830fcc8
_0830fc8a:
	ldr		r0, [r5, #0x4]
	b		_0830fda4
_0830fc8e:
	ldr		r0, [r5, #0x4]
	str		r0, [r4, #0x60]
	add		r2, r4, #0x0
	add		r2, #0x64
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x1
	orr		r0, r1
	mov		r1, #0x2
	b		_0830fcd0
_0830fca0:
	ldr		r1, [r5, #0x4]
	add		r0, r4, #0x0
	bl		sub_08327308
	b		_0830fcc8
_0830fcaa:
	ldr		r1, [r5, #0x4]
	add		r0, r4, #0x0
	bl		sub_08327308
	cmp		r0, #0x0
	beq		_0830fda6
	b		_0830fcc8
_0830fcb8:
	ldr		r1, [r5, #0x4]
	cmp		r1, #0x0
	beq		_0830fcc8
	sub		r1, #0x1
	add		r0, r4, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	b		_0830fda0
_0830fcc8:
	add		r2, r4, #0x0
	add		r2, #0x64
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x1
_0830fcd0:
	orr		r0, r1
	strb	r0, [r2, #0x0]
	b		_0830fda0
_0830fcd6:
	ldr		r0, [r5, #0x4]
	lsl		r0, r0, #0x3
	add		r0, r5, r0
	b		_0830fcf0
_0830fcde:
	ldr		r1, [r5, #0x4]
	ldr		r0, [r4, #0x68]
	cmp		r0, #0x0
	beq		_0830fcec
	lsl		r0, r1, #0x3
	add		r0, r5, r0
	b		_0830fcf0
_0830fcec:
	add		r0, r5, #0x0
	add		r0, #0x8
_0830fcf0:
	str		r0, [r4, #0x5c]
	add		r2, r4, #0x0
	add		r2, #0x64
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	b		_0830fda6
_0830fd00:
	ldrh	r0, [r5, #0x4]
	bl		sub_08325e94
	b		_0830fcc8
_0830fd08:
	ldr		r2, [r5, #0x4]
	ldr		r0, _0830fd28
	ldr		r1, _0830fd2c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0830fcc8
	lsl		r0, r2, #0x10
	lsr		r0, r0, #0x10
	bl		sub_08325e94
	b		_0830fcc8

.incbin "base.gba", 0x30FD26, 0x2

_0830fd28:	.4byte 0x030031D0
_0830fd2c:	.4byte 0x000007AC

_0830fd30:
	ldrh	r0, [r5, #0x4]
	ldr		r3, _0830fd50
	ldr		r2, _0830fd54
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, [r2, #0x8]
	bl		sub_08326580
	b		_0830fcc8

.incbin "base.gba", 0x30FD4E, 0x2

_0830fd50:	.4byte 0x0202E890
_0830fd54:	.4byte 0x0202E8F0

_0830fd58:
	ldr		r0, _0830fd8c
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	add		r7, r4, #0x0
	add		r7, #0x64
	add		r5, #0x8
	mov		r8, r5
	cmp		r0, #0x0
	beq		_0830fd80
	ldr		r6, _0830fd90
	add		r5, r0, #0x0
_0830fd6e:
	ldr		r0, [r6, #0x0]
	ldr		r1, _0830fd94
	ldr		r1, [r1, #0x8]
	bl		sub_08326580
	add		r6, #0xc
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_0830fd6e
_0830fd80:
	ldrb	r1, [r7, #0x0]
	mov		r0, #0x1
	orr		r0, r1
	strb	r0, [r7, #0x0]
	mov		r0, r8
	b		_0830fda4

_0830fd8c:	.4byte 0x00000008
_0830fd90:	.4byte 0x0202E890
_0830fd94:	.4byte 0x0202E8F0

_0830fd98:
	ldrh	r0, [r5, #0x4]
	bl		sub_08325f60
	b		_0830fcc8
_0830fda0:
	add		r0, r5, #0x0
	add		r0, #0x8
_0830fda4:
	str		r0, [r4, #0x5c]
_0830fda6:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0830fc0c

	thumb_func_start sub_0830fdb0
sub_0830fdb0:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r1, r5, #0x0
	add		r1, #0x4c
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x0
	beq		_0830fdc8
	sub		r0, r2, #0x1
	strh	r0, [r1, #0x0]
	b		_0830fdf6
_0830fdc8:
	ldr		r0, [r5, #0x5c]
	cmp		r0, #0x0
	beq		_0830fdf6
	add		r4, r5, #0x0
	add		r4, #0x64
	mov		r6, #0xfe
_0830fdd4:
	ldrb	r1, [r4, #0x0]
	add		r0, r6, #0x0
	and		r0, r1
	strb	r0, [r4, #0x0]
	add		r0, r5, #0x0
	bl		sub_0830fc0c
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_0830fdd4
	ldr		r0, [r5, #0x5c]
	cmp		r0, #0x0
	bne		_0830fdf6
	ldr		r0, _0830fe1c
	str		r0, [r5, #0x14]
_0830fdf6:
	ldr		r2, [r5, #0x60]
	cmp		r2, #0x0
	beq		_0830fe26
	add		r4, r5, #0x0
	add		r4, #0x64
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_0830fe20
	add		r0, r5, #0x0
	bl		sub_0832730c
	ldrb	r1, [r4, #0x0]
	mov		r0, #0xfd
	and		r0, r1
	strb	r0, [r4, #0x0]
	b		_0830fe26

.incbin "base.gba", 0x30FE1A, 0x2

_0830fe1c:	.4byte 0x02009E2D

_0830fe20:
	add		r0, r5, #0x0
	bl		sub_0832730c
_0830fe26:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0830fdb0

	thumb_func_start sub_0830fe2c
sub_0830fe2c:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _0830fe40
	mov		r2, #0xe8
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	bl		sub_08321500
	pop		{ r0 }
	bx		r0

_0830fe40:	.4byte 0x030031D0

.incbin "base.gba", 0x30FE44, 0x18
	thumb_func_end sub_0830fe2c

	thumb_func_start sub_0830fe5c
sub_0830fe5c:
	add		r1, r0, #0x0
	ldr		r0, [r1, #0x14]
	cmp		r0, #0x0
	beq		_0830fe68
	mov		r0, #0x0
	b		_0830fe6c
_0830fe68:
	mov		r0, #0x1
	str		r0, [r1, #0x14]
_0830fe6c:
	bx		lr

.incbin "base.gba", 0x30FE6E, 0x2
	thumb_func_end sub_0830fe5c

	thumb_func_start sub_0830fe70
sub_0830fe70:
	mov		r1, #0x0
	str		r1, [r0, #0x14]
	bx		lr

.incbin "base.gba", 0x30FE76, 0x2
	thumb_func_end sub_0830fe70

	thumb_func_start sub_0830fe78
sub_0830fe78:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r0, #0x8
	ldr		r1, _0830fe98
	mov		r2, #0xc0
	lsl		r2, r2, #0x3
	bl		sub_0830d808
	mov		r0, #0x0
	str		r0, [r4, #0x4]
	str		r0, [r4, #0x0]
	str		r0, [r4, #0x14]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x30FE96, 0x2

_0830fe98:	.4byte 0x03004B00
	thumb_func_end sub_0830fe78

	thumb_func_start sub_0830fe9c
sub_0830fe9c:
	push	{ r4, lr }
	add		r4, r0, #0x0
_0830fea0:
	add		r0, r4, #0x0
	bl		sub_0830fe5c
	cmp		r0, #0x0
	beq		_0830fea0
	add		r0, r4, #0x0
	add		r0, #0x8
	bl		sub_0830d830
	mov		r0, #0x0
	str		r0, [r4, #0x4]
	str		r0, [r4, #0x0]
	add		r0, r4, #0x0
	bl		sub_0830fe70
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0830fe9c

	thumb_func_start sub_0830fec4
sub_0830fec4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r7, r2, #0x0
	mov		r8, r3
_0830fed2:
	add		r0, r5, #0x0
	bl		sub_0830fe5c
	cmp		r0, #0x0
	beq		_0830fed2
	add		r0, r5, #0x0
	add		r0, #0x8
	mov		r1, #0x1
	mov		r2, #0x10
	bl		sub_0830d838
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_0830fefe
	str		r6, [r4, #0x4]
	str		r7, [r4, #0x8]
	mov		r0, r8
	str		r0, [r4, #0xc]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0830e86c
_0830fefe:
	add		r0, r5, #0x0
	bl		sub_0830fe70
	add		r0, r4, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0830fec4

	thumb_func_start sub_0830ff10
sub_0830ff10:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	str		r0, [sp, #0x0]
	bl		sub_0830fe5c
	cmp		r0, #0x0
	beq		_0830ffea
	ldr		r0, [sp, #0x0]
	ldr		r6, [r0, #0x0]
	add		r0, #0x8
	str		r0, [sp, #0x4]
	cmp		r6, #0x0
	beq		_0830ffdc
	ldr		r1, _0830ffa8
	mov		r9, r1
_0830ff36:
	ldr		r5, [r6, #0x4]
	ldr		r4, [r6, #0x8]
	ldr		r1, [r6, #0xc]
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	and		r0, r1
	mov		r2, #0x1
	mov		r8, r2
	cmp		r0, #0x0
	beq		_0830ff4e
	mov		r7, #0x2
	mov		r8, r7
_0830ff4e:
	add		r3, r1, #0x0
	ldr		r0, _0830ffac
	and		r3, r0
	mov		r2, r8
	lsl		r3, r2
	mov		r7, #0xc0
	lsl		r7, r7, #0x11
	mov		r12, r7
	mov		r0, r12
	and		r0, r1
	mov		r12, r0
	mov		r2, #0xc0
	lsl		r2, r2, #0xf
	and		r2, r1
	str		r2, [sp, #0x8]
	ldr		r7, [r6, #0x0]
	mov		r10, r7
_0830ff70:
	add		r2, r3, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r3, r0
	bls		_0830ff7c
	add		r2, r0, #0x0
_0830ff7c:
	mov		r0, r9
	str		r5, [r0, #0x0]
	str		r4, [r0, #0x4]
	ldr		r1, [r6, #0xc]
	ldr		r0, _0830ffb0
	and		r1, r0
	add		r0, r2, #0x0
	mov		r7, r8
	asr		r0, r7
	ldr		r7, _0830ffac
	and		r0, r7
	orr		r1, r0
	mov		r0, r9
	str		r1, [r0, #0x8]
	mov		r1, r12
	cmp		r1, #0x0
	beq		_0830ffb4
	mov		r0, #0x80
	lsl		r0, r0, #0x10
	cmp		r12, r0
	beq		_0830ffb8
	b		_0830ffba

_0830ffa8:	.4byte DMA3SourceAddress
_0830ffac:	.4byte 0x0000FFFF
_0830ffb0:	.4byte 0xffff0000

_0830ffb4:
	add		r5, r5, r2
	b		_0830ffba
_0830ffb8:
	sub		r5, r5, r2
_0830ffba:
	ldr		r7, [sp, #0x8]
	cmp		r7, #0x0
	beq		_0830ffca
	mov		r0, #0x80
	lsl		r0, r0, #0xe
	cmp		r7, r0
	beq		_0830ffce
	b		_0830ffd0
_0830ffca:
	add		r4, r4, r2
	b		_0830ffd0
_0830ffce:
	sub		r4, r4, r2
_0830ffd0:
	sub		r3, r3, r2
	cmp		r3, #0x0
	bne		_0830ff70
	mov		r6, r10
	cmp		r6, #0x0
	bne		_0830ff36
_0830ffdc:
	ldr		r0, [sp, #0x4]
	bl		sub_0830d830
	mov		r0, #0x0
	ldr		r1, [sp, #0x0]
	str		r0, [r1, #0x4]
	str		r0, [r1, #0x0]
_0830ffea:
	ldr		r0, [sp, #0x0]
	bl		sub_0830fe70
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0830ff10

	thumb_func_start sub_08310000
sub_08310000:
	ldr		r0, _08310004
	bx		lr

_08310004:	.4byte 0x03002178
	thumb_func_end sub_08310000

	thumb_func_start sub_08310008
sub_08310008:
	push	{ r4, lr }
	ldr		r1, _0831003c
	ldrb	r0, [r1, #0x1]
	mov		r3, #0x0
	strb	r3, [r1, #0x1]
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x21
	neg		r0, r0
	and		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r4, _08310040
	str		r3, [r4, #0x14]
	add		r0, r4, #0x0
	add		r0, #0x8
	ldr		r1, _08310044
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	bl		sub_0830d808
	add		r0, r4, #0x0
	bl		sub_0830ea60
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31003A, 0x2

_0831003c:	.4byte GeneralLCDStatus_STAT_LYC_
_08310040:	.4byte 0x03005220
_08310044:	.4byte 0x030030D0
	thumb_func_end sub_08310008

	thumb_func_start sub_08310048
sub_08310048:
	push	{ r4, lr }
	ldr		r1, _08310074
	ldrb	r0, [r1, #0x1]
	mov		r3, #0x0
	strb	r3, [r1, #0x1]
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x21
	neg		r0, r0
	and		r0, r2
	strb	r0, [r1, #0x0]
	ldr		r4, _08310078
	str		r3, [r4, #0x14]
	add		r0, r4, #0x0
	add		r0, #0x8
	bl		sub_0830d830
	add		r0, r4, #0x0
	bl		sub_0830ea60
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08310074:	.4byte GeneralLCDStatus_STAT_LYC_
_08310078:	.4byte 0x03005220
	thumb_func_end sub_08310048

	thumb_func_start sub_0831007c
sub_0831007c:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	ldr		r7, _083100a4
	add		r0, r7, #0x0
	mov		r1, #0x1
	mov		r2, #0x10
	bl		sub_0830d838
	add		r5, r0, #0x0
	cmp		r5, #0x0
	beq		_083100ea
	str		r4, [r5, #0x8]
	str		r6, [r5, #0xc]
	add		r0, r7, #0x0
	sub		r0, #0x8
	bl		sub_0830ea50
	b		_083100ae

.incbin "base.gba", 0x3100A2, 0x2

_083100a4:	.4byte 0x03005228

_083100a8:
	ldr		r0, _083100c4
	bl		sub_0830ea58
_083100ae:
	add		r1, r0, #0x0
	cmp		r1, #0x0
	beq		_083100c8
	ldr		r0, [r1, #0x8]
	cmp		r0, r4
	ble		_083100a8
	ldr		r0, _083100c4
	add		r2, r5, #0x0
	bl		sub_0830e8c8
	b		_083100d0

_083100c4:	.4byte 0x03005220

_083100c8:
	ldr		r0, _083100f4
	add		r1, r5, #0x0
	bl		sub_0830e8b0
_083100d0:
	ldr		r4, _083100f4
	add		r0, r4, #0x0
	bl		sub_0830ea50
	ldr		r2, _083100f8
	str		r0, [r4, #0x14]
	ldr		r0, [r0, #0x8]
	ldrb	r1, [r2, #0x1]
	strb	r0, [r2, #0x1]
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x20
	orr		r0, r1
	strb	r0, [r2, #0x0]
_083100ea:
	add		r0, r5, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3100F2, 0x2

_083100f4:	.4byte 0x03005220
_083100f8:	.4byte GeneralLCDStatus_STAT_LYC_
	thumb_func_end sub_0831007c

	thumb_func_start sub_083100fc
sub_083100fc:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _0831010c
	bl		sub_0830e930
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31010A, 0x2

_0831010c:	.4byte 0x03005220
	thumb_func_end sub_083100fc

	thumb_func_start sub_08310110
sub_08310110:
	push	{ r4, r5, lr }
	ldr		r5, _0831014c
	ldr		r4, [r5, #0x14]
	ldr		r0, [r4, #0xc]
	bl		sub_08327304
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0830ea58
	add		r4, r0, #0x0
	cmp		r4, #0x0
	bne		_08310132
	add		r0, r5, #0x0
	bl		sub_0830ea50
	add		r4, r0, #0x0
_08310132:
	ldr		r2, _08310150
	str		r4, [r5, #0x14]
	ldr		r0, [r4, #0x8]
	ldrb	r1, [r2, #0x1]
	strb	r0, [r2, #0x1]
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x20
	orr		r0, r1
	strb	r0, [r2, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31014A, 0x2

_0831014c:	.4byte 0x03005220
_08310150:	.4byte GeneralLCDStatus_STAT_LYC_
	thumb_func_end sub_08310110

	thumb_func_start sub_08310154
sub_08310154:
	ldr		r1, _08310168
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	str		r0, [r1, #0x4]
	str		r0, [r1, #0x8]
	strb	r0, [r1, #0xd]
	strb	r0, [r1, #0xe]
	strb	r0, [r1, #0xf]
	strb	r0, [r1, #0xc]
	bx		lr

_08310168:	.4byte 0x030051D0
	thumb_func_end sub_08310154

	thumb_func_start sub_0831016c
sub_0831016c:
	push	{ r4, lr }
	ldr		r4, _08310180
	ldr		r0, [r4, #0x4]
	cmp		r0, #0x0
	beq		_08310184
	bl		sub_08327304
	mov		r0, #0x1
	b		_08310186

.incbin "base.gba", 0x31017E, 0x2

_08310180:	.4byte 0x030051D0

_08310184:
	mov		r0, #0x2
_08310186:
	strb	r0, [r4, #0xc]
	ldr		r0, _08310198
	ldrb	r1, [r0, #0xe]
	mov		r2, #0x0
	strb	r1, [r0, #0xd]
	strb	r2, [r0, #0xf]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08310198:	.4byte 0x030051D0
	thumb_func_end sub_0831016c

	thumb_func_start sub_0831019c
sub_0831019c:
	push	{ r4, lr }
	ldr		r1, _083101d8
	ldrb	r2, [r1, #0xc]
	mov		r0, #0x2
	and		r0, r2
	add		r4, r1, #0x0
	cmp		r0, #0x0
	beq		_083101ec
	mov		r0, #0x80
	and		r0, r2
	cmp		r0, #0x0
	bne		_083101ec
	ldrb	r0, [r4, #0xd]
	sub		r0, #0x1
	strb	r0, [r4, #0xd]
	lsl		r0, r0, #0x18
	cmp		r0, #0x0
	bgt		_08310200
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_083101dc
	bl		sub_08327304
	ldrb	r0, [r4, #0xf]
	add		r0, #0x1
	strb	r0, [r4, #0xf]
	ldrb	r0, [r4, #0xe]
	strb	r0, [r4, #0xd]
	b		_08310200

.incbin "base.gba", 0x3101D6, 0x2

_083101d8:	.4byte 0x030051D0

_083101dc:
	ldr		r1, [r4, #0x8]
	cmp		r1, #0x0
	beq		_083101e6
	bl		sub_08327308
_083101e6:
	bl		sub_08310154
	b		_08310200
_083101ec:
	ldrb	r1, [r4, #0xc]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08310200
	mov		r0, #0xfe
	and		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strb	r0, [r4, #0xc]
_08310200:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x310206, 0x11A
	thumb_func_end sub_0831019c

	thumb_func_start sub_08310320
sub_08310320:
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x9
	lsl		r2, r2, #0x4
	ldr		r1, _08310330
	add		r2, r2, r1
	add		r0, r0, r2
	bx		lr

_08310330:	.4byte 0x03005240

.incbin "base.gba", 0x310334, 0xC
	thumb_func_end sub_08310320

	thumb_func_start sub_08310340
sub_08310340:
	ldr		r2, [r0, #0x50]
	mov		r1, #0x1
	sub		r1, r1, r2
	str		r1, [r0, #0x50]
	bx		lr

.incbin "base.gba", 0x31034A, 0x1E
	thumb_func_end sub_08310340

	thumb_func_start sub_08310368
sub_08310368:
	push	{ lr }
	lsl		r1, r1, #0x10
	str		r1, [r0, #0xc]
	bl		sub_083104d4
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x310376, 0x15E
	thumb_func_end sub_08310368

	thumb_func_start sub_083104d4
sub_083104d4:
	push	{ lr }
	ldr		r1, [r0, #0xc]
	ldr		r2, [r0, #0x30]
	add		r1, r1, r2
	str		r1, [r0, #0x34]
	bl		sub_08310584
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3104E6, 0x1A
	thumb_func_end sub_083104d4

	thumb_func_start sub_08310500
sub_08310500:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r6, #0x5c
	ldr		r2, [r0, #0x10]
	ldr		r1, [r0, #0xc]
	sub		r3, r2, r1
	add		r7, r0, #0x0
	add		r7, #0x38
	add		r5, r0, #0x0
	add		r1, r3, #0x0
	cmp		r3, #0x0
	bge		_0831051a
	neg		r1, r3
_0831051a:
	ldr		r0, _08310528
	cmp		r1, r0
	bgt		_0831052c
	mov		r2, #0x0
	mov		r4, #0x10
	b		_08310550

.incbin "base.gba", 0x310526, 0x2

_08310528:	.4byte 0x0000FFFF

_0831052c:
	ldr		r0, _08310538
	cmp		r1, r0
	bgt		_0831053c
	mov		r2, #0x5
	mov		r4, #0xb
	b		_08310550

_08310538:	.4byte 0x000FFFFF

_0831053c:
	ldr		r0, _08310548
	cmp		r1, r0
	bgt		_0831054c
	mov		r2, #0x9
	mov		r4, #0x7
	b		_08310550

_08310548:	.4byte 0x00FFFFFF

_0831054c:
	mov		r2, #0xd
	mov		r4, #0x3
_08310550:
	asr		r3, r2
	add		r2, r3, #0x0
	ldr		r0, [r6, #0x8]
	add		r1, r2, #0x0
	mul		r1, r0
	asr		r1, r4
	ldr		r0, [r5, #0x0]
	sub		r0, r0, r1
	str		r0, [r7, #0x0]
	ldr		r0, [r6, #0x14]
	add		r1, r2, #0x0
	mul		r1, r0
	asr		r1, r4
	ldr		r0, [r5, #0x4]
	sub		r0, r0, r1
	str		r0, [r7, #0x4]
	ldr		r0, [r6, #0x20]
	add		r1, r2, #0x0
	mul		r1, r0
	asr		r1, r4
	ldr		r0, [r5, #0x8]
	sub		r0, r0, r1
	str		r0, [r7, #0x8]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08310500

	thumb_func_start sub_08310584
sub_08310584:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	add		r5, r4, #0x0
	add		r5, #0x80
	ldr		r6, _0831060c
	mov		r0, #0x16
	ldrsh	r1, [r4, r0]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0831059e
	add		r0, #0x3f
_0831059e:
	asr		r2, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r2
	ldr		r3, _08310610
	and		r0, r3
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r7, [r0, #0x0]
	add		r0, r2, #0x0
	and		r0, r3
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	mov		r6, #0x40
_083105be:
	ldr		r0, [r4, #0x10]
	cmp		r0, #0x0
	bge		_083105c8
	ldr		r1, _08310614
	add		r0, r0, r1
_083105c8:
	asr		r0, r0, #0x10
	add		r1, r0, #0x0
	mul		r1, r7
	ldr		r0, [r4, #0x28]
	sub		r0, r6, r0
	mov		r2, r8
	mul		r2, r0
	add		r0, r2, #0x0
	add		r0, r1, r0
	cmp		r0, #0x0
	bge		_083105e0
	add		r0, #0x7f
_083105e0:
	asr		r1, r0, #0x7
	ldr		r0, [r4, #0x34]
	bl		sub_08327340
	str		r0, [r5, #0x0]
	mul		r0, r7
	cmp		r0, #0x0
	bge		_083105f4
	ldr		r1, _08310618
	add		r0, r0, r1
_083105f4:
	asr		r0, r0, #0xf
	str		r0, [r5, #0x4]
	add		r5, #0x8
	add		r6, #0x1
	cmp		r6, #0x9f
	ble		_083105be
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31060A, 0x2

_0831060c:	.4byte 0x0202A9A0
_08310610:	.4byte 0x000003FF
_08310614:	.4byte 0x0000FFFF
_08310618:	.4byte 0x00007FFF

.incbin "base.gba", 0x31061C, 0x14
	thumb_func_end sub_08310584

	thumb_func_start sub_08310630
sub_08310630:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r6, _08310670
	mov		r0, #0x16
	ldrsh	r2, [r4, r0]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08310642
	add		r0, #0x3f
_08310642:
	asr		r3, r0, #0x6
	ldr		r0, _08310674
	add		r1, r0, #0x0
	add		r0, r3, #0x0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r5, [r0, #0x0]
	cmp		r5, #0x0
	beq		_08310678
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _08310674
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	bl		sub_083272c8
	b		_0831067a

.incbin "base.gba", 0x31066E, 0x2

_08310670:	.4byte 0x0202A9A0
_08310674:	.4byte 0x000003FF

_08310678:
	mov		r0, #0x0
_0831067a:
	add		r3, r0, #0x0
	ldr		r2, [r4, #0x10]
	sub		r1, r2, #0x1
	ldr		r0, _083106a0
	cmp		r1, r0
	bls		_08310690
	cmp		r2, #0x0
	bge		_083106ac
	ldr		r0, _083106a4
	cmp		r2, r0
	ble		_083106ac
_08310690:
	add		r0, r2, #0x0
	mul		r0, r3
	cmp		r0, #0x0
	bge		_0831069c
	ldr		r1, _083106a8
	add		r0, r0, r1
_0831069c:
	asr		r0, r0, #0x10
	b		_0831075e

_083106a0:	.4byte 0x0000FFFE
_083106a4:	.4byte 0xffff0000
_083106a8:	.4byte 0x0000FFFF

_083106ac:
	ldr		r0, _083106d8
	sub		r1, r2, #0x1
	cmp		r1, r0
	bls		_083106be
	cmp		r2, #0x0
	bge		_083106e4
	ldr		r0, _083106dc
	cmp		r2, r0
	ble		_083106e4
_083106be:
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_083106c6
	add		r0, #0xf
_083106c6:
	asr		r0, r0, #0x4
	mul		r0, r3
	cmp		r0, #0x0
	bge		_083106d2
	ldr		r1, _083106e0
	add		r0, r0, r1
_083106d2:
	asr		r1, r0, #0x1b
	b		_08310768

.incbin "base.gba", 0x3106D6, 0x2

_083106d8:	.4byte 0x000FFFFE
_083106dc:	.4byte 0xFFF00000
_083106e0:	.4byte 0x07FFFFFF

_083106e4:
	ldr		r0, _08310710
	cmp		r1, r0
	bls		_083106f6
	cmp		r2, #0x0
	bge		_08310718
	mov		r0, #0xff
	lsl		r0, r0, #0x18
	cmp		r2, r0
	ble		_08310718
_083106f6:
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_083106fe
	add		r0, #0xff
_083106fe:
	asr		r0, r0, #0x8
	mul		r0, r3
	cmp		r0, #0x0
	bge		_0831070a
	ldr		r1, _08310714
	add		r0, r0, r1
_0831070a:
	asr		r1, r0, #0x17
	b		_08310768

.incbin "base.gba", 0x31070E, 0x2

_08310710:	.4byte 0x00FFFFFE
_08310714:	.4byte 0x007FFFFF

_08310718:
	ldr		r0, _08310744
	cmp		r1, r0
	bls		_0831072a
	cmp		r2, #0x0
	bge		_08310750
	mov		r0, #0xf0
	lsl		r0, r0, #0x18
	cmp		r2, r0
	ble		_08310750
_0831072a:
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08310734
	ldr		r1, _08310748
	add		r0, r2, r1
_08310734:
	asr		r0, r0, #0xc
	mul		r0, r3
	cmp		r0, #0x0
	bge		_08310740
	ldr		r1, _0831074c
	add		r0, r0, r1
_08310740:
	asr		r1, r0, #0x13
	b		_08310768

_08310744:	.4byte 0x0FFFFFFE
_08310748:	.4byte 0x00000FFF
_0831074c:	.4byte 0x0007FFFF

_08310750:
	add		r0, r2, #0x0
	cmp		r0, #0x0
	bge		_0831075a
	ldr		r1, _08310774
	add		r0, r0, r1
_0831075a:
	asr		r0, r0, #0x10
	mul		r0, r3
_0831075e:
	cmp		r0, #0x0
	bge		_08310766
	ldr		r1, _08310778
	add		r0, r0, r1
_08310766:
	asr		r1, r0, #0xf
_08310768:
	ldr		r0, [r4, #0x28]
	sub		r0, r0, r1
	str		r0, [r4, #0x2c]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08310774:	.4byte 0x0000FFFF
_08310778:	.4byte 0x00007FFF
	thumb_func_end sub_08310630

	thumb_func_start sub_0831077c
sub_0831077c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x14
	mov		r10, r0
	ldr		r4, _083108a0
	mov		r2, #0x14
	ldrsh	r1, [r0, r2]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08310798
	add		r0, #0x3f
_08310798:
	asr		r2, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r2
	ldr		r3, _083108a4
	and		r0, r3
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x0]
	add		r0, r2, #0x0
	and		r0, r3
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	str		r0, [sp, #0x4]
	mov		r4, #0x9f
	mov		r9, r4
	mov		r0, #0xde
	lsl		r0, r0, #0x2
	add		r0, r10
	mov		r8, r0
	mov		r2, r10
	ldr		r1, [r2, #0x50]
	mov		r0, r10
	mov		r2, #0x5f
	bl		sub_08310320
	add		r3, r0, #0x0
	mov		r1, r10
	add		r1, #0x18
	mov		r4, r10
	ldr		r0, [r4, #0x18]
	cmp		r0, #0x0
	bge		_083107e0
	add		r0, #0xff
_083107e0:
	asr		r0, r0, #0x8
	str		r0, [sp, #0x8]
	ldr		r0, [r1, #0x4]
	cmp		r0, #0x0
	bge		_083107ec
	add		r0, #0xff
_083107ec:
	asr		r0, r0, #0x8
	str		r0, [sp, #0xc]
	mov		r1, r10
	ldr		r0, [r1, #0x24]
	neg		r0, r0
	str		r0, [sp, #0x10]
	ldr		r0, [r1, #0x28]
	mov		r2, r9
	sub		r5, r2, r0
	ldr		r4, _083108a8
	mov		r12, r4
_08310802:
	mov		r0, r8
	ldr		r1, [r0, #0x4]
	ldr		r2, [r0, #0x0]
	ldr		r4, [sp, #0x0]
	add		r0, r1, #0x0
	mul		r0, r4
	cmp		r0, #0x0
	bge		_08310814
	add		r0, r12
_08310814:
	asr		r7, r0, #0xf
	neg		r0, r2
	ldr		r4, [sp, #0x4]
	mul		r0, r4
	cmp		r0, #0x0
	bge		_08310822
	add		r0, r12
_08310822:
	asr		r6, r0, #0xf
	ldr		r4, [sp, #0x4]
	add		r0, r1, #0x0
	mul		r0, r4
	cmp		r0, #0x0
	bge		_08310830
	add		r0, r12
_08310830:
	asr		r4, r0, #0xf
	ldr		r1, [sp, #0x0]
	add		r0, r2, #0x0
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0831083e
	add		r0, r12
_0831083e:
	asr		r2, r0, #0xf
	ldr		r1, [sp, #0x10]
	add		r0, r1, #0x0
	mul		r0, r7
	ldr		r1, [sp, #0x8]
	add		r0, r1, r0
	add		r1, r5, #0x0
	mul		r1, r6
	add		r0, r0, r1
	str		r0, [r3, #0x8]
	ldr		r1, [sp, #0x10]
	add		r0, r1, #0x0
	mul		r0, r4
	ldr		r1, [sp, #0xc]
	add		r0, r1, r0
	add		r1, r5, #0x0
	mul		r1, r2
	add		r0, r0, r1
	str		r0, [r3, #0xc]
	ldrh	r0, [r3, #0x0]
	strh	r7, [r3, #0x0]
	ldrh	r0, [r3, #0x2]
	strh	r6, [r3, #0x2]
	ldrh	r0, [r3, #0x4]
	strh	r4, [r3, #0x4]
	ldrh	r0, [r3, #0x6]
	strh	r2, [r3, #0x6]
	sub		r3, #0x10
	mov		r2, #0x8
	neg		r2, r2
	add		r8, r2
	sub		r5, #0x1
	mov		r4, #0x1
	neg		r4, r4
	add		r9, r4
	mov		r0, r9
	cmp		r0, #0x3f
	bgt		_08310802
	mov		r0, r10
	bl		sub_08310340
	add		sp, #0x14
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_083108a0:	.4byte 0x0202A9A0
_083108a4:	.4byte 0x000003FF
_083108a8:	.4byte 0x00007FFF
	thumb_func_end sub_0831077c

	thumb_func_start sub_083108ac
sub_083108ac:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x3c
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	str		r2, [sp, #0x18]
	add		r4, r3, #0x0
	mov		r0, sp
	str		r0, [sp, #0x34]
	add		r1, sp, #0xc
	mov		r8, r1
	add		r7, r6, #0x0
	add		r7, #0x38
	add		r0, r6, #0x0
	add		r0, #0x5c
	ldr		r2, [r6, #0x5c]
	mov		r9, r2
	ldr		r1, [r0, #0x4]
	mov		r10, r1
	ldr		r2, [r0, #0x8]
	str		r2, [sp, #0x1C]
	ldr		r1, [r0, #0xc]
	str		r1, [sp, #0x20]
	ldr		r2, [r0, #0x10]
	str		r2, [sp, #0x24]
	ldr		r1, [r0, #0x14]
	str		r1, [sp, #0x28]
	ldr		r2, [r0, #0x1c]
	str		r2, [sp, #0x2C]
	ldr		r0, [r0, #0x20]
	str		r0, [sp, #0x30]
	ldr		r1, [r5, #0x0]
	ldr		r0, [r6, #0x38]
	sub		r2, r1, r0
	str		r2, [sp, #0x0]
	ldr		r0, _0831090c
	mov		r12, r0
	add		r0, r2, r0
	ldr		r3, _08310910
	cmp		r0, r3
	bls		_08310914
	mov		r1, #0x1
	neg		r1, r1
	add		r0, r1, #0x0
	b		_08310aba

_0831090c:	.4byte 0x03FFFFFF
_08310910:	.4byte 0x07FFFFFE

_08310914:
	ldr		r0, [r5, #0x4]
	ldr		r1, [r7, #0x4]
	sub		r0, r0, r1
	str		r0, [sp, #0x4]
	ldr		r1, _0831092c
	add		r0, r0, r1
	cmp		r0, r3
	bls		_08310930
	mov		r2, #0x1
	neg		r2, r2
	add		r0, r2, #0x0
	b		_08310aba

_0831092c:	.4byte 0x03FFFFFF

_08310930:
	ldr		r0, [r7, #0x8]
	neg		r0, r0
	str		r0, [sp, #0x8]
	add		r0, r12
	cmp		r0, r3
	bls		_08310944
	mov		r1, #0x1
	neg		r1, r1
	add		r0, r1, #0x0
	b		_08310aba
_08310944:
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0831094c
	add		r0, #0x7f
_0831094c:
	asr		r1, r0, #0x7
	mov		r0, r9
	cmp		r0, #0x0
	bge		_08310956
	add		r0, #0xf
_08310956:
	asr		r0, r0, #0x4
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08310960
	add		r0, #0x1f
_08310960:
	asr		r0, r0, #0x5
	str		r0, [sp, #0x38]
	mov		r0, r10
	cmp		r0, #0x0
	bge		_0831096c
	add		r0, #0xf
_0831096c:
	asr		r0, r0, #0x4
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08310976
	add		r0, #0x1f
_08310976:
	asr		r0, r0, #0x5
	mov		r12, r0
	ldr		r0, [sp, #0x1C]
	cmp		r0, #0x0
	bge		_08310982
	add		r0, #0xf
_08310982:
	asr		r0, r0, #0x4
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0831098c
	add		r0, #0x1f
_0831098c:
	asr		r0, r0, #0x5
	mov		r10, r0
	ldr		r2, [sp, #0x34]
	ldr		r1, [r2, #0x4]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0831099c
	add		r0, #0x7f
_0831099c:
	asr		r2, r0, #0x7
	ldr		r0, [sp, #0x20]
	cmp		r0, #0x0
	bge		_083109a6
	add		r0, #0xf
_083109a6:
	asr		r0, r0, #0x4
	mul		r0, r2
	cmp		r0, #0x0
	bge		_083109b0
	add		r0, #0x1f
_083109b0:
	asr		r0, r0, #0x5
	mov		r9, r0
	ldr		r0, [sp, #0x24]
	cmp		r0, #0x0
	bge		_083109bc
	add		r0, #0xf
_083109bc:
	asr		r0, r0, #0x4
	mul		r0, r2
	cmp		r0, #0x0
	bge		_083109c6
	add		r0, #0x1f
_083109c6:
	asr		r7, r0, #0x5
	ldr		r0, [sp, #0x28]
	cmp		r0, #0x0
	bge		_083109d0
	add		r0, #0xf
_083109d0:
	asr		r0, r0, #0x4
	mul		r0, r2
	cmp		r0, #0x0
	bge		_083109da
	add		r0, #0x1f
_083109da:
	asr		r5, r0, #0x5
	ldr		r0, [sp, #0x34]
	ldr		r2, [r0, #0x8]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_083109e8
	add		r0, #0x7f
_083109e8:
	asr		r1, r0, #0x7
	ldr		r0, [sp, #0x2C]
	cmp		r0, #0x0
	bge		_083109f2
	add		r0, #0xf
_083109f2:
	asr		r0, r0, #0x4
	mul		r0, r1
	cmp		r0, #0x0
	bge		_083109fc
	add		r0, #0x1f
_083109fc:
	asr		r3, r0, #0x5
	ldr		r0, [sp, #0x30]
	cmp		r0, #0x0
	bge		_08310a06
	add		r0, #0xf
_08310a06:
	asr		r0, r0, #0x4
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08310a10
	add		r0, #0x1f
_08310a10:
	asr		r1, r0, #0x5
	ldr		r0, [sp, #0x38]
	add		r0, r9
	mov		r2, r8
	str		r0, [r2, #0x0]
	mov		r2, r12
	add		r0, r2, r7
	add		r0, r0, r3
	mov		r2, r8
	str		r0, [r2, #0x4]
	mov		r2, r10
	add		r0, r2, r5
	add		r0, r0, r1
	mov		r1, r8
	str		r0, [r1, #0x8]
	ldr		r1, [r6, #0x10]
	sub		r2, r1, r0
	cmp		r2, #0x0
	bgt		_08310a3e
	mov		r2, #0x1
	neg		r2, r2
	add		r0, r2, #0x0
	b		_08310aba
_08310a3e:
	ldr		r0, _08310a48
	cmp		r2, r0
	bgt		_08310a4c
	lsl		r0, r2, #0x8
	b		_08310a56

_08310a48:	.4byte 0x001FFFFF

_08310a4c:
	cmp		r1, #0x0
	bge		_08310a52
	add		r1, #0xff
_08310a52:
	asr		r1, r1, #0x8
	add		r0, r2, #0x0
_08310a56:
	bl		sub_083272c8
	strh	r0, [r4, #0x0]
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x20
	lsl		r0, r0, #0x10
	mov		r1, #0xf8
	lsl		r1, r1, #0x12
	cmp		r0, r1
	bls		_08310a72
	mov		r1, #0x1
	neg		r1, r1
	add		r0, r1, #0x0
	b		_08310aba
_08310a72:
	mov		r2, r8
	ldr		r0, [r2, #0x0]
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	bl		sub_083272c8
	cmp		r0, #0x0
	bge		_08310a84
	add		r0, #0xff
_08310a84:
	asr		r5, r0, #0x8
	mov		r1, r8
	ldr		r0, [r1, #0x4]
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	bl		sub_083272c8
	cmp		r0, #0x0
	bge		_08310a98
	add		r0, #0xff
_08310a98:
	asr		r2, r0, #0x8
	ldr		r0, [r6, #0x24]
	add		r0, r0, r5
	ldr		r1, [sp, #0x18]
	strh	r0, [r1, #0x0]
	ldr		r1, [r6, #0x28]
	add		r1, r1, r2
	mov		r2, #0xe0
	lsl		r2, r2, #0x2
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	add		r0, r0, r1
	ldr		r1, [sp, #0x18]
	strh	r0, [r1, #0x2]
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	lsl		r0, r0, #0x2
_08310aba:
	strh	r0, [r4, #0x0]
	add		sp, #0x3c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_083108ac

	thumb_func_start sub_08310acc
sub_08310acc:
	push	{ lr }
	add		r2, r1, #0x0
	add		r2, #0x1c
	add		r3, r1, #0x0
	add		r3, #0x24
	bl		sub_083108ac
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x310ADE, 0x2
	thumb_func_end sub_08310acc

	thumb_func_start sub_08310ae0
sub_08310ae0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	cmp		r4, #0x0
	bne		_08310af0
	mov		r0, #0x0
	b		_08310b2e
_08310af0:
	add		r2, r4, #0x0
	cmp		r4, #0x0
	bge		_08310af8
	neg		r2, r4
_08310af8:
	add		r0, r2, #0x0
	cmp		r0, #0x0
	bge		_08310b02
	ldr		r2, _08310b14
	add		r0, r0, r2
_08310b02:
	asr		r2, r0, #0xe
	lsl		r0, r1, #0x10
	asr		r1, r0, #0x10
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	bne		_08310b18
	add		r0, r2, #0x0
	b		_08310b1e

_08310b14:	.4byte 0x00003FFF

_08310b18:
	lsl		r0, r2, #0x8
	bl		sub_083272c8
_08310b1e:
	cmp		r4, #0x0
	bge		_08310b2a
	neg		r0, r0
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	b		_08310b2e
_08310b2a:
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
_08310b2e:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08310ae0

	thumb_func_start sub_08310b34
sub_08310b34:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r0, r2, #0x0
	lsl		r3, r3, #0x10
	lsr		r1, r3, #0x10
	mov		r2, #0x0
	cmp		r0, #0x0
	beq		_08310b52
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_08310ae0
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_08310b52:
	ldrh	r0, [r4, #0x0]
	strh	r0, [r5, #0x0]
	ldrh	r1, [r4, #0x2]
	lsl		r0, r2, #0x10
	asr		r0, r0, #0x10
	sub		r1, r1, r0
	strh	r1, [r5, #0x2]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x310B66, 0x1D6
	thumb_func_end sub_08310b34

	thumb_func_start sub_08310d3c
sub_08310d3c:
	push	{ r4, r5, lr }
	add		r2, r0, #0x0
	mov		r0, #0xe2
	lsl		r0, r0, #0x2
	add		r1, r2, r0
	mov		r3, #0xe6
	lsl		r3, r3, #0x2
	add		r0, r2, r3
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r4, #0xe3
	lsl		r4, r4, #0x2
	add		r1, r2, r4
	mov		r5, #0xe7
	lsl		r5, r5, #0x2
	add		r0, r2, r5
	ldr		r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	mov		r0, #0xe8
	lsl		r0, r0, #0x2
	add		r3, r2, r0
	mov		r1, #0xe4
	lsl		r1, r1, #0x2
	add		r4, r2, r1
	ldrh	r0, [r3, #0x0]
	ldrh	r1, [r4, #0x0]
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	blt		_08310d8a
	add		r5, #0xe4
	add		r0, r1, r5
	strh	r0, [r4, #0x0]
	ldrh	r1, [r3, #0x0]
	sub		r0, r1, r0
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08310d9c
	b		_08310d9a
_08310d8a:
	ldr		r5, _08310db0
	add		r0, r1, r5
	strh	r0, [r4, #0x0]
	ldrh	r1, [r3, #0x0]
	sub		r0, r1, r0
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	ble		_08310d9c
_08310d9a:
	strh	r1, [r4, #0x0]
_08310d9c:
	ldr		r0, _08310db4
	add		r1, r2, r0
	ldrh	r3, [r1, #0x0]
	mov		r4, #0x0
	ldrsh	r0, [r1, r4]
	cmp		r0, #0x27
	bgt		_08310db8
	add		r0, r3, #0x0
	add		r0, #0x8
	b		_08310dba

_08310db0:	.4byte 0xFFFFFB80
_08310db4:	.4byte 0x00000396

_08310db8:
	mov		r0, #0x30
_08310dba:
	strh	r0, [r1, #0x0]
	ldr		r5, _08310e08
	add		r0, r2, r5
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08310dda
	ldr		r3, _08310e0c
	add		r0, r2, r3
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	cmp		r1, #0x0
	bne		_08310dda
	add		r5, #0x4
	add		r0, r2, r5
	strh	r1, [r0, #0x0]
_08310dda:
	ldr		r0, _08310e0c
	add		r4, r2, r0
	ldr		r1, _08310e08
	add		r3, r2, r1
	ldrh	r0, [r4, #0x0]
	ldrh	r1, [r3, #0x0]
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	ble		_08310e14
	ldr		r5, _08310e10
	add		r0, r2, r5
	ldrh	r0, [r0, #0x0]
	add		r0, r1, r0
	strh	r0, [r3, #0x0]
	ldrh	r1, [r4, #0x0]
	sub		r0, r1, r0
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08310e2e
	b		_08310e2c

.incbin "base.gba", 0x310E06, 0x2

_08310e08:	.4byte 0x00000392
_08310e0c:	.4byte 0x000003A2
_08310e10:	.4byte 0x00000396

_08310e14:
	cmp		r0, #0x0
	bge		_08310e2e
	ldr		r5, _08310e50
	add		r0, r2, r5
	ldrh	r0, [r0, #0x0]
	sub		r0, r1, r0
	strh	r0, [r3, #0x0]
	ldrh	r1, [r4, #0x0]
	sub		r0, r1, r0
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	ble		_08310e2e
_08310e2c:
	strh	r1, [r3, #0x0]
_08310e2e:
	mov		r1, #0xe9
	lsl		r1, r1, #0x2
	add		r0, r2, r1
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	mov		r4, #0xe5
	lsl		r4, r4, #0x2
	add		r2, r2, r4
	mov		r5, #0x0
	ldrsh	r0, [r2, r5]
	sub		r1, r1, r0
	cmp		r1, #0x0
	ble		_08310e54
	ldrh	r0, [r2, #0x0]
	add		r0, #0x1
	b		_08310e5c

.incbin "base.gba", 0x310E4E, 0x2

_08310e50:	.4byte 0x00000396

_08310e54:
	cmp		r1, #0x0
	bge		_08310e5e
	ldrh	r0, [r2, #0x0]
	sub		r0, #0x1
_08310e5c:
	strh	r0, [r2, #0x0]
_08310e5e:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08310d3c

	thumb_func_start sub_08310e64
sub_08310e64:
	push	{ r4, lr }
	add		r3, r0, #0x0
	mov		r1, #0xe4
	lsl		r1, r1, #0x2
	add		r0, r3, r1
	ldr		r1, _08310ea0
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	bge		_08310e7a
	add		r0, #0x3f
_08310e7a:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	mov		r4, #0xe2
	lsl		r4, r4, #0x2
	add		r2, r3, r4
	add		r4, #0xc
	add		r0, r3, r4
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r1, r0
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x310E9E, 0x2

_08310ea0:	.4byte 0x0202A9A0
	thumb_func_end sub_08310e64

	thumb_func_start sub_08310ea4
sub_08310ea4:
	push	{ r4, lr }
	add		r3, r0, #0x0
	mov		r1, #0xe4
	lsl		r1, r1, #0x2
	add		r0, r3, r1
	ldr		r2, _08310ee8
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	cmp		r1, #0x0
	bge		_08310eba
	add		r1, #0x3f
_08310eba:
	asr		r1, r1, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r1
	ldr		r1, _08310eec
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	mov		r0, #0xe3
	lsl		r0, r0, #0x2
	add		r2, r3, r0
	mov		r4, #0xe5
	lsl		r4, r4, #0x2
	add		r0, r3, r4
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mul		r1, r0
	ldr		r0, [r2, #0x0]
	sub		r0, r0, r1
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08310ee8:	.4byte 0x0202A9A0
_08310eec:	.4byte 0x000003FF

.incbin "base.gba", 0x310EF0, 0x18
	thumb_func_end sub_08310ea4

	thumb_func_start sub_08310f08
sub_08310f08:
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	ldr		r2, _08310f20
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	add		r2, r0, #0x0
	add		r2, #0x88
	ldr		r2, [r2, #0x0]
	add		r0, r0, r2
	add		r0, r0, r1
	bx		lr

.incbin "base.gba", 0x310F1E, 0x2

_08310f20:	.4byte 0x00000574
	thumb_func_end sub_08310f08

	thumb_func_start sub_08310f24
sub_08310f24:
	push	{ lr }
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	bl		sub_08310f08
	ldrb	r0, [r0, #0x0]
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08310f24

	thumb_func_start sub_08310f34
sub_08310f34:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r6, r0, #0x0
	mov		r8, r1
	mov		r9, r2
	lsl		r5, r3, #0x18
	lsr		r5, r5, #0x18
	mov		r3, #0x0
	bl		sub_08310fac
	add		r4, r0, #0x0
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_08311824
	lsl		r0, r0, #0x18
	lsr		r7, r0, #0x18
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_08311858
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	mov		r0, r8
	cmp		r0, #0x0
	bge		_08310f76
	add		r0, #0x7
_08310f76:
	asr		r0, r0, #0x3
	sub		r0, r7, r0
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r3, r0, #0x1
	mov		r2, r9
	cmp		r2, #0x0
	bge		_08310f88
	add		r2, #0x7
_08310f88:
	asr		r1, r2, #0x3
	sub		r1, r4, r1
	lsr		r0, r1, #0x1f
	add		r1, r1, r0
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r1, #0xf
	asr		r1, r1, #0x10
	bl		sub_0830e840
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08310f34

	thumb_func_start sub_08310fac
sub_08310fac:
	cmp		r1, #0x0
	bge		_08310fb2
	add		r1, #0xf
_08310fb2:
	asr		r3, r1, #0x4
	cmp		r2, #0x0
	bge		_08310fba
	add		r2, #0xf
_08310fba:
	asr		r2, r2, #0x4
	ldr		r1, _08310fd8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldrb	r1, [r0, #0x4]
	mul		r1, r2
	lsl		r1, r1, #0x6
	add		r1, r3, r1
	add		r2, r0, #0x0
	add		r2, #0xf0
	ldr		r2, [r2, #0x0]
	add		r0, r0, r2
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	bx		lr

_08310fd8:	.4byte 0x00000574
	thumb_func_end sub_08310fac

	thumb_func_start sub_08310fdc
sub_08310fdc:
	push	{ r4, lr }
	add		r3, r1, #0x0
	ldr		r1, [r3, #0x0]
	cmp		r1, #0x0
	bge		_08310fea
	ldr		r2, _08311010
	add		r1, r1, r2
_08310fea:
	asr		r4, r1, #0x10
	ldr		r2, [r3, #0x4]
	cmp		r2, #0x0
	bge		_08310ff6
	ldr		r1, _08311010
	add		r2, r2, r1
_08310ff6:
	asr		r2, r2, #0x10
	ldr		r1, [r3, #0x8]
	cmp		r1, #0x0
	bge		_08311002
	ldr		r3, _08311010
	add		r1, r1, r3
_08311002:
	asr		r3, r1, #0x10
	add		r1, r4, #0x0
	bl		sub_08310fac
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08311010:	.4byte 0x0000FFFF
	thumb_func_end sub_08310fdc

	thumb_func_start sub_08311014
sub_08311014:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_08311a18
	add		r1, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	add		r0, r4, #0x0
	bl		sub_08310f24
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x311032, 0x426
	thumb_func_end sub_08311014

	thumb_func_start sub_08311458
sub_08311458:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	ldr		r1, _08311490
	add		r0, r6, r1
	ldr		r7, [r0, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x98
	ldr		r0, [r0, #0x0]
	mov		r4, #0x0
	cmp		r0, #0x0
	beq		_08311474
	add		r4, r7, r0
_08311474:
	cmp		r4, #0x0
	beq		_08311510
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08311510
	ldr		r3, _08311494
	mov		r8, r3
_08311482:
	add		r0, #0x7f
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	cmp		r5, #0x7
	bls		_08311498
	add		r4, #0x4
	b		_0831150a

_08311490:	.4byte 0x00000574
_08311494:	.4byte 0x03003945

_08311498:
	add		r4, #0x1
	mov		r1, r8
	ldrb	r0, [r1, #0x0]
	bl		sub_08311aa8
	cmp		r0, #0x0
	beq		_083114b4
	lsl		r2, r5, #0x4
	add		r1, r6, #0x0
	add		r1, #0x24
	add		r1, r1, r2
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x13
	b		_083114c6
_083114b4:
	lsl		r2, r5, #0x4
	add		r1, r6, #0x0
	add		r1, #0x24
	add		r1, r1, r2
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x13
	mov		r3, #0x80
	lsl		r3, r3, #0xb
	add		r0, r0, r3
_083114c6:
	str		r0, [r1, #0x0]
	add		r4, #0x1
	add		r1, r6, #0x0
	add		r1, #0x28
	add		r1, r1, r2
	ldrb	r0, [r4, #0x0]
	lsl		r0, r0, #0x13
	mov		r3, #0x80
	lsl		r3, r3, #0xb
	add		r0, r0, r3
	str		r0, [r1, #0x0]
	add		r4, #0x1
	add		r0, r7, #0x0
	add		r0, #0xca
	ldrb	r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_08311500
	add		r1, r6, #0x0
	add		r1, #0x2c
	add		r1, r1, r2
	ldr		r2, _083114fc
	lsl		r0, r5, #0x1
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	str		r0, [r1, #0x0]
	b		_08311508

.incbin "base.gba", 0x3114FA, 0x2

_083114fc:	.4byte 0x0202B9A0

_08311500:
	add		r0, r6, #0x0
	add		r0, #0x2c
	add		r0, r0, r2
	str		r1, [r0, #0x0]
_08311508:
	add		r4, #0x1
_0831150a:
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_08311482
_08311510:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31151A, 0x2
	thumb_func_end sub_08311458

	thumb_func_start sub_0831151c
sub_0831151c:
	ldr		r2, _0831155c
	add		r0, r0, r2
	ldr		r3, [r0, #0x0]
	add		r0, r3, #0x0
	add		r0, #0x98
	ldr		r0, [r0, #0x0]
	mov		r2, #0x0
	cmp		r0, #0x0
	beq		_08311530
	add		r2, r3, r0
_08311530:
	cmp		r2, #0x0
	beq		_08311584
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_08311584
	mov		r3, #0x80
	lsl		r3, r3, #0xb
_0831153e:
	cmp		r0, #0x89
	bne		_08311560
	add		r2, #0x1
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x13
	add		r0, r0, r3
	str		r0, [r1, #0x0]
	add		r2, #0x1
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x13
	add		r0, r0, r3
	str		r0, [r1, #0x4]
	add		r2, #0x2
	b		_0831157e

.incbin "base.gba", 0x31155A, 0x2

_0831155c:	.4byte 0x00000574

_08311560:
	cmp		r0, #0x8a
	bne		_0831157c
	add		r2, #0x1
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x13
	add		r0, r0, r3
	str		r0, [r1, #0x8]
	add		r2, #0x1
	ldrb	r0, [r2, #0x0]
	lsl		r0, r0, #0x13
	add		r0, r0, r3
	str		r0, [r1, #0xc]
	add		r2, #0x2
	b		_0831157e
_0831157c:
	add		r2, #0x4
_0831157e:
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	bne		_0831153e
_08311584:
	bx		lr

.incbin "base.gba", 0x311586, 0x36
	thumb_func_end sub_0831151c

	thumb_func_start sub_083115bc
sub_083115bc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x20
	add		r7, r0, #0x0
	ldr		r4, _083115f0
	ldr		r1, _083115f4
	add		r0, r4, r1
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xf0
	lsl		r1, r1, #0x4
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	beq		_08311612
	cmp		r1, r0
	bgt		_083115f8
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r1, r0
	beq		_0831160a
	b		_0831175a

.incbin "base.gba", 0x3115EE, 0x2

_083115f0:	.4byte 0x030031D0
_083115f4:	.4byte 0x00000772

_083115f8:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r1, r0
	beq		_08311634
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r1, r0
	beq		_0831160a
	b		_0831175a
_0831160a:
	add		r0, r7, #0x0
	bl		sub_08311458
	b		_0831175a
_08311612:
	add		r0, r7, #0x0
	mov		r1, sp
	bl		sub_0831151c
	ldr		r0, [sp, #0x0]
	ldr		r1, [sp, #0x8]
	add		r0, r0, r1
	asr		r0, r0, #0x1
	str		r0, [r7, #0x24]
	ldr		r0, [sp, #0x4]
	ldr		r1, [sp, #0xC]
	add		r0, r0, r1
	asr		r0, r0, #0x1
	str		r0, [r7, #0x28]
	mov		r0, #0x0
	str		r0, [r7, #0x2c]
	b		_0831175a
_08311634:
	add		r6, sp, #0x10
	add		r0, r7, #0x0
	add		r1, r6, #0x0
	bl		sub_0831151c
	ldr		r2, _08311654
	add		r0, r4, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	beq		_083116bc
	cmp		r0, #0x3
	bgt		_08311658
	cmp		r0, #0x2
	beq		_0831165e
	b		_08311748

.incbin "base.gba", 0x311652, 0x2

_08311654:	.4byte 0x0000076F

_08311658:
	cmp		r0, #0x4
	beq		_083116e4
	b		_08311748
_0831165e:
	ldr		r4, [sp, #0x10]
	lsl		r0, r4, #0x1
	ldr		r1, [r6, #0x8]
	mov		r10, r1
	add		r0, r10
	mov		r1, #0x3
	bl		sub_08327340
	mov		r9, r0
	str		r0, [r7, #0x24]
	ldr		r5, [r6, #0x4]
	lsl		r0, r5, #0x1
	ldr		r6, [r6, #0xC]
	mov		r8, r6
	add		r0, r8
	mov		r1, #0x3
	bl		sub_08327340
	add		r6, r0, #0x0
	str		r6, [r7, #0x28]
	add		r4, r10
	add		r4, r10
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_08327340
	add		r4, r0, #0x0
	str		r4, [r7, #0x34]
	add		r5, r8
	add		r5, r8
	add		r0, r5, #0x0
	mov		r1, #0x3
	bl		sub_08327340
	ldr		r1, _083116b8
	mov		r2, r9
	and		r2, r1
	str		r2, [r7, #0x24]
	and		r6, r1
	str		r6, [r7, #0x28]
	and		r4, r1
	str		r4, [r7, #0x34]
	and		r0, r1
	str		r0, [r7, #0x38]
	b		_08311748

_083116b8:	.4byte 0xffff0000

_083116bc:
	ldr		r0, [sp, #0x10]
	str		r0, [r7, #0x24]
	ldr		r1, [r6, #0x4]
	str		r1, [r7, #0x28]
	ldr		r3, [r6, #0x8]
	add		r0, r0, r3
	asr		r0, r0, #0x1
	ldr		r2, [r6, #0xC]
	add		r1, r1, r2
	asr		r1, r1, #0x1
	str		r3, [r7, #0x44]
	str		r2, [r7, #0x48]
	ldr		r2, _083116e0
	and		r0, r2
	str		r0, [r7, #0x34]
	and		r1, r2
	str		r1, [r7, #0x38]
	b		_08311748

_083116e0:	.4byte 0xffff0000

_083116e4:
	ldr		r4, [sp, #0x10]
	str		r4, [r7, #0x24]
	ldr		r5, [r6, #0x4]
	str		r5, [r7, #0x28]
	lsl		r0, r4, #0x1
	ldr		r1, [r6, #0x8]
	mov		r10, r1
	add		r0, r10
	mov		r1, #0x3
	bl		sub_08327340
	mov		r8, r0
	str		r0, [r7, #0x34]
	lsl		r0, r5, #0x1
	ldr		r6, [r6, #0xC]
	mov		r9, r6
	add		r0, r9
	mov		r1, #0x3
	bl		sub_08327340
	add		r6, r0, #0x0
	str		r6, [r7, #0x38]
	add		r4, r10
	add		r4, r10
	add		r0, r4, #0x0
	mov		r1, #0x3
	bl		sub_08327340
	add		r4, r0, #0x0
	str		r4, [r7, #0x44]
	add		r5, r9
	add		r5, r9
	add		r0, r5, #0x0
	mov		r1, #0x3
	bl		sub_08327340
	mov		r2, r10
	str		r2, [r7, #0x54]
	mov		r1, r9
	str		r1, [r7, #0x58]
	ldr		r1, _0831176c
	mov		r2, r8
	and		r2, r1
	str		r2, [r7, #0x34]
	and		r6, r1
	str		r6, [r7, #0x38]
	and		r4, r1
	str		r4, [r7, #0x44]
	and		r0, r1
	str		r0, [r7, #0x48]
_08311748:
	add		r1, r7, #0x0
	add		r1, #0x2c
	mov		r2, #0x0
	add		r0, r7, #0x0
	add		r0, #0x5c
_08311752:
	str		r2, [r0, #0x0]
	sub		r0, #0x10
	cmp		r0, r1
	bge		_08311752
_0831175a:
	add		sp, #0x20
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31176A, 0x2

_0831176c:	.4byte 0xffff0000
	thumb_func_end sub_083115bc

	thumb_func_start sub_08311770
sub_08311770:
	push	{ r4, lr }
	mov		r12, r0
	ldr		r4, [sp, #0x0+0x8]
	lsl		r1, r1, #0x4
	add		r0, #0x24
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r2, #0x0]
	mov		r0, r12
	add		r0, #0x28
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r3, #0x0]
	mov		r0, r12
	add		r0, #0x2c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31179A, 0x2
	thumb_func_end sub_08311770

	thumb_func_start sub_0831179c
sub_0831179c:
	ldr		r0, [r0, #0x20]
	bx		lr
	thumb_func_end sub_0831179c

	thumb_func_start sub_083117a0
sub_083117a0:
	push	{ lr }
	add		r2, r0, #0x0
	lsl		r0, r2, #0x3
	add		r2, r0, #0x0
	sub		r2, #0x8
	lsl		r0, r1, #0x3
	add		r1, r0, #0x0
	sub		r1, #0x8
	cmp		r2, #0x0
	bne		_083117c8
	cmp		r1, #0x0
	bne		_083117bc
	mov		r0, #0x80
	b		_083117fc
_083117bc:
	mvn		r0, r1
	asr		r1, r0, #0x1f
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r1, r0
	b		_083117ec
_083117c8:
	cmp		r1, #0x0
	bne		_083117dc
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	cmp		r2, #0x0
	bge		_083117d8
	mov		r0, #0xc0
	lsl		r0, r0, #0x8
_083117d8:
	add		r1, r0, #0x0
	b		_083117ec
_083117dc:
	lsl		r0, r2, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_0830e808
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
_083117ec:
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_083117f6
	add		r0, #0xff
_083117f6:
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
_083117fc:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x311800, 0x10
	thumb_func_end sub_083117a0

	thumb_func_start sub_08311810
sub_08311810:
	ldrb	r1, [r0, #0x3]
	add		r1, r0, r1
	ldrb	r0, [r0, #0x4]
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	add		r0, r1, #0x0
	bx		lr

.incbin "base.gba", 0x31181E, 0x6
	thumb_func_end sub_08311810

	thumb_func_start sub_08311824
sub_08311824:
	push	{ r4, lr }
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r4, #0x7f
	and		r4, r1
	ldr		r3, _08311854
	add		r1, r0, r3
	ldr		r1, [r1, #0x0]
	add		r3, r1, #0x0
	add		r3, #0xf4
	ldr		r3, [r3, #0x0]
	add		r1, r1, r3
	ldrh	r0, [r0, #0x14]
	mul		r0, r2
	add		r0, r0, r4
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	ldrb	r0, [r1, #0x0]
	ldrb	r1, [r1, #0x1]
	lsl		r1, r1, #0x8
	add		r0, r0, r1
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08311854:	.4byte 0x00000574
	thumb_func_end sub_08311824

	thumb_func_start sub_08311858
sub_08311858:
	push	{ r4, lr }
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r4, #0x7f
	and		r4, r1
	ldr		r3, _08311888
	add		r1, r0, r3
	ldr		r1, [r1, #0x0]
	add		r3, r1, #0x0
	add		r3, #0xf4
	ldr		r3, [r3, #0x0]
	add		r1, r1, r3
	ldrh	r0, [r0, #0x14]
	mul		r0, r2
	add		r0, r0, r4
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	ldrb	r0, [r1, #0x2]
	ldrb	r1, [r1, #0x3]
	lsl		r1, r1, #0x8
	add		r0, r0, r1
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08311888:	.4byte 0x00000574
	thumb_func_end sub_08311858

	thumb_func_start sub_0831188c
sub_0831188c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	mov		r4, #0x7f
	and		r4, r1
	ldr		r1, _083118c0
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xcc
	ldr		r1, [r1, #0x0]
	add		r0, r0, r1
	bl		sub_08311810
	ldr		r1, _083118c4
	ldrh	r2, [r5, #0x14]
	ldr		r3, _083118c8
	add		r1, r1, r3
	ldrb	r1, [r1, #0x0]
	mul		r1, r2
	add		r1, r1, r4
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldrb	r0, [r0, #0x4]
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

_083118c0:	.4byte 0x00000574
_083118c4:	.4byte 0x030031D0
_083118c8:	.4byte 0x00000BFC
	thumb_func_end sub_0831188c

	thumb_func_start sub_083118cc
sub_083118cc:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r3, #0xbc
	cmp		r1, #0x0
	bge		_083118d8
	add		r1, #0x7
_083118d8:
	asr		r1, r1, #0x3
	ldr		r0, [r3, #0x20]
	add		r4, r0, r1
	cmp		r2, #0x0
	bge		_083118e4
	add		r2, #0x7
_083118e4:
	asr		r0, r2, #0x3
	lsl		r0, r0, #0x1
	ldr		r1, [r3, #0x2c]
	mul		r0, r1
	add		r0, r4, r0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_083118cc

	thumb_func_start sub_083118f4
sub_083118f4:
	cmp		r1, #0x0
	bge		_083118fa
	add		r1, #0xf
_083118fa:
	asr		r0, r1, #0x4
	cmp		r0, #0x3f
	bhi		_08311916
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08311908
	add		r0, #0xf
_08311908:
	asr		r0, r0, #0x4
	cmp		r0, #0x0
	blt		_08311916
	cmp		r0, #0x3f
	bgt		_08311916
	mov		r0, #0x0
	b		_08311918
_08311916:
	mov		r0, #0x1
_08311918:
	bx		lr

.incbin "base.gba", 0x31191A, 0x2
	thumb_func_end sub_083118f4

	thumb_func_start sub_0831191c
sub_0831191c:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r3, #0xbc
	cmp		r1, #0x0
	bge		_08311928
	add		r1, #0x7
_08311928:
	asr		r0, r1, #0x3
	mov		r4, #0x7f
	and		r0, r4
	ldr		r1, [r3, #0x14]
	add		r1, r1, r0
	cmp		r2, #0x0
	bge		_08311938
	add		r2, #0x7
_08311938:
	asr		r0, r2, #0x3
	and		r0, r4
	lsl		r0, r0, #0x7
	add		r0, r1, r0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x311946, 0x2
	thumb_func_end sub_0831191c

	thumb_func_start sub_08311948
sub_08311948:
	mov		r1, #0xaf
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x10]
	bx		lr
	thumb_func_end sub_08311948

	thumb_func_start sub_08311954
sub_08311954:
	mov		r1, #0xaf
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldrb	r0, [r0, #0x18]
	bx		lr
	thumb_func_end sub_08311954

	thumb_func_start sub_08311960
sub_08311960:
	mov		r1, #0xaf
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x1c]
	bx		lr
	thumb_func_end sub_08311960

	thumb_func_start sub_0831196c
sub_0831196c:
	cmp		r1, #0x0
	blt		_08311988
	add		r3, r0, #0x0
	add		r3, #0xbc
	ldr		r0, [r3, #0x2c]
	lsl		r0, r0, #0x14
	cmp		r1, r0
	bge		_08311988
	cmp		r2, #0x0
	blt		_08311988
	ldr		r0, [r3, #0x30]
	lsl		r0, r0, #0x14
	cmp		r2, r0
	blt		_0831198c
_08311988:
	mov		r0, #0x1
	b		_0831198e
_0831198c:
	mov		r0, #0x0
_0831198e:
	bx		lr
	thumb_func_end sub_0831196c

	thumb_func_start sub_08311990
sub_08311990:
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	ldrh	r0, [r0, #0x14]
	sub		r0, #0x1
	cmp		r1, r0
	beq		_083119a4
	add		r0, r1, #0x1
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	b		_083119a6
_083119a4:
	mov		r0, #0x0
_083119a6:
	bx		lr
	thumb_func_end sub_08311990

	thumb_func_start sub_083119a8
sub_083119a8:
	add		r2, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r0, r1, #0x18
	cmp		r0, #0x0
	bne		_083119b4
	ldrb	r0, [r2, #0x14]
_083119b4:
	sub		r0, #0x1
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	bx		lr
	thumb_func_end sub_083119a8

	thumb_func_start sub_083119bc
sub_083119bc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	lsl		r3, r3, #0x18
	lsr		r3, r3, #0x18
	mov		r8, r3
	mov		r9, r8
	bl		sub_0831191c
	add		r7, r0, #0x0
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_083118f4
	cmp		r0, #0x0
	bne		_08311a0a
	mov		r2, #0x2
	neg		r2, r2
	and		r2, r7
	mov		r0, #0x1
	and		r0, r7
	cmp		r0, #0x0
	beq		_083119fc
	ldrb	r0, [r2, #0x0]
	mov		r3, r8
	lsl		r1, r3, #0x8
	b		_08311a06
_083119fc:
	ldrh	r1, [r2, #0x0]
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	and		r0, r1
	mov		r1, r9
_08311a06:
	orr		r0, r1
	strh	r0, [r2, #0x0]
_08311a0a:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x311A16, 0x2
	thumb_func_end sub_083119bc

	thumb_func_start sub_08311a18
sub_08311a18:
	push	{ lr }
	bl		sub_083118cc
	ldrb	r0, [r0, #0x0]
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08311a18

	thumb_func_start sub_08311a24
sub_08311a24:
	ldr		r1, _08311a38
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r0, #0xca
	ldrb	r1, [r0, #0x0]
	neg		r0, r1
	orr		r0, r1
	lsr		r0, r0, #0x1f
	bx		lr

.incbin "base.gba", 0x311A36, 0x2

_08311a38:	.4byte 0x00000574

.incbin "base.gba", 0x311A3C, 0x24
	thumb_func_end sub_08311a24

	thumb_func_start sub_08311a60
sub_08311a60:
	mov		r0, #0x1
	bx		lr

.incbin "base.gba", 0x311A64, 0x44
	thumb_func_end sub_08311a60

	thumb_func_start sub_08311aa8
sub_08311aa8:
	mov		r0, #0x1
	bx		lr
	thumb_func_end sub_08311aa8

	thumb_func_start sub_08311aac
sub_08311aac:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	mov		r0, #0x0
	str		r0, [r5, #0x18]
	add		r6, r5, #0x0
	add		r6, #0x18
	ldrb	r1, [r4, #0x4]
	ldrb	r2, [r4, #0x5]
	add		r0, r6, #0x0
	bl		sub_08311af8
	ldr		r1, [r5, #0x38]
	ldrb	r0, [r4, #0x3]
	mov		r2, #0x2
	and		r2, r0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	add		r0, r6, #0x0
	bl		sub_08311b68
	ldr		r0, _08311aec
	str		r0, [r5, #0x2c]
	add		r0, r4, #0x0
	add		r0, #0xd4
	ldr		r0, [r0, #0x0]
	add		r4, r4, r0
	str		r4, [r5, #0x34]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x311AEA, 0x2

_08311aec:	.4byte 0x0600C000

.incbin "base.gba", 0x311AF0, 0x8
	thumb_func_end sub_08311aac

	thumb_func_start sub_08311af8
sub_08311af8:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	mov		r0, #0x0
	str		r0, [r3, #0x0]
	ldr		r0, _08311b24
	ldrh	r0, [r0, #0x0]
	mov		r2, #0xc0
	lsl		r2, r2, #0x8
	add		r1, r2, #0x0
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	cmp		r1, r0
	beq		_08311b3a
	cmp		r1, r0
	bgt		_08311b28
	cmp		r1, #0x0
	beq		_08311b36
	b		_08311b46

.incbin "base.gba", 0x311B22, 0x2

_08311b24:	.4byte BG2Control

_08311b28:
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	cmp		r1, r0
	beq		_08311b3e
	cmp		r1, r2
	beq		_08311b42
	b		_08311b46
_08311b36:
	mov		r0, #0x10
	b		_08311b44
_08311b3a:
	mov		r0, #0x20
	b		_08311b44
_08311b3e:
	mov		r0, #0x40
	b		_08311b44
_08311b42:
	mov		r0, #0x80
_08311b44:
	str		r0, [r3, #0x24]
_08311b46:
	ldr		r0, [r3, #0x24]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	str		r0, [r3, #0x28]
	lsl		r0, r4, #0x6
	str		r0, [r3, #0x2c]
	lsl		r0, r5, #0x6
	str		r0, [r3, #0x30]
	ldr		r0, _08311b64
	str		r0, [r3, #0x20]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x311B62, 0x2

_08311b64:	.4byte 0x0600C000
	thumb_func_end sub_08311af8

	thumb_func_start sub_08311b68
sub_08311b68:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r1, #0x0
	ldr		r5, [r0, #0x1c]
	cmp		r2, #0x0
	beq		_08311ba2
	add		r6, r5, #0x0
	mov		r4, #0x0
	ldrh	r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_08311b8a
	add		r0, r5, r0
_08311b7e:
	lsl		r1, r4, #0xc
	add		r1, r7, r1
	bl		sub_083272d4
	bl		sub_0830d774
_08311b8a:
	add		r4, #0x1
	cmp		r4, #0xf
	bgt		_08311ba8
	lsl		r0, r4, #0x1
	add		r0, r6, r0
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08311b8a
	add		r0, r5, r0
	cmp		r4, #0x3
	ble		_08311b7e
	b		_08311ba8
_08311ba2:
	add		r0, r5, #0x0
	bl		sub_083272d4
_08311ba8:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x311BAE, 0x12
	thumb_func_end sub_08311b68

	thumb_func_start sub_08311bc0
sub_08311bc0:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	mov		r0, #0x1
	neg		r0, r0
	cmp		r2, r0
	bne		_08311c00
	mov		r0, sp
	mov		r5, #0x0
	strh	r5, [r0, #0x0]
	ldr		r4, _08311bfc
	and		r4, r3
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	orr		r4, r0
	mov		r0, sp
	add		r2, r4, #0x0
	bl		sub_083272c4
	mov		r0, sp
	add		r0, #0x2
	strh	r5, [r0, #0x0]
	ldr		r1, [r6, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r7, r1
	add		r2, r4, #0x0
	bl		sub_083272c4
	b		_08311c2a

_08311bfc:	.4byte 0x001FFFFF

_08311c00:
	asr		r0, r2, #0x1
	lsl		r0, r0, #0x1
	ldr		r4, [r6, #0x20]
	add		r4, r4, r0
	ldr		r5, _08311c34
	and		r5, r3
	add		r0, r4, #0x0
	add		r1, r7, #0x0
	add		r2, r5, #0x0
	bl		sub_083272c4
	ldr		r0, [r6, #0x2c]
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldr		r1, [r6, #0x28]
	lsl		r1, r1, #0x1
	add		r1, r7, r1
	add		r0, r4, #0x0
	add		r2, r5, #0x0
	bl		sub_083272c4
_08311c2a:
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x311C32, 0x2

_08311c34:	.4byte 0x001FFFFF
	thumb_func_end sub_08311bc0

	thumb_func_start sub_08311c38
sub_08311c38:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	ldr		r6, [r5, #0x38]
	lsl		r0, r6, #0x1
	ldr		r2, [r5, #0x24]
	sub		r1, r2, #0x1
	and		r0, r1
	add		r1, r0, #0x0
	mul		r1, r2
	ldr		r0, [r5, #0x14]
	add		r7, r0, r1
	cmp		r6, #0x0
	blt		_08311c66
	ldr		r0, [r5, #0x30]
	cmp		r6, r0
	bge		_08311c66
	ldr		r3, [r5, #0x28]
	ldr		r2, [r5, #0x34]
	cmn		r2, r3
	blt		_08311c66
	ldr		r4, [r5, #0x2c]
	cmp		r2, r4
	blt		_08311c76
_08311c66:
	mov		r2, #0x1
	neg		r2, r2
	ldr		r3, [r5, #0x28]
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	bl		sub_08311bc0
	b		_08311d06
_08311c76:
	add		r0, r6, #0x0
	mul		r0, r4
	lsl		r0, r0, #0x2
	lsl		r1, r2, #0x1
	add		r6, r0, r1
	cmp		r2, #0x0
	bge		_08311cae
	sub		r4, r3, #0x1
	and		r4, r2
	lsl		r1, r4, #0x1
	add		r1, r7, r1
	mov		r2, #0x1
	neg		r2, r2
	sub		r3, r3, r4
	add		r0, r5, #0x0
	bl		sub_08311bc0
	ldr		r0, [r5, #0x2c]
	lsl		r0, r0, #0x2
	ldr		r1, [r5, #0x38]
	add		r2, r1, #0x0
	mul		r2, r0
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	add		r3, r4, #0x0
	bl		sub_08311bc0
	b		_08311d06
_08311cae:
	sub		r0, r4, r3
	cmp		r2, r0
	ble		_08311cd2
	sub		r4, r3, #0x1
	and		r4, r2
	mov		r2, #0x1
	neg		r2, r2
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	add		r3, r4, #0x0
	bl		sub_08311bc0
	lsl		r1, r4, #0x1
	add		r1, r7, r1
	ldr		r3, [r5, #0x28]
	sub		r3, r3, r4
	add		r0, r5, #0x0
	b		_08311cde
_08311cd2:
	sub		r4, r3, #0x1
	and		r4, r2
	cmp		r4, #0x0
	bne		_08311ce6
	add		r0, r5, #0x0
	add		r1, r7, #0x0
_08311cde:
	add		r2, r6, #0x0
	bl		sub_08311bc0
	b		_08311d06
_08311ce6:
	sub		r2, r3, r4
	lsl		r2, r2, #0x1
	add		r2, r6, r2
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	add		r3, r4, #0x0
	bl		sub_08311bc0
	lsl		r1, r4, #0x1
	add		r1, r7, r1
	ldr		r3, [r5, #0x28]
	sub		r3, r3, r4
	add		r0, r5, #0x0
	add		r2, r6, #0x0
	bl		sub_08311bc0
_08311d06:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08311c38

	thumb_func_start sub_08311d0c
sub_08311d0c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r0, #0x0
	str		r0, [r4, #0x34]
	str		r0, [r4, #0x38]
	ldr		r0, [r4, #0x28]
	cmp		r0, #0x0
	ble		_08311d30
	add		r5, r0, #0x0
_08311d1e:
	add		r0, r4, #0x0
	bl		sub_08311c38
	ldr		r0, [r4, #0x38]
	add		r0, #0x1
	str		r0, [r4, #0x38]
	sub		r5, #0x1
	cmp		r5, #0x0
	bne		_08311d1e
_08311d30:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x311D36, 0x42
	thumb_func_end sub_08311d0c

	thumb_func_start sub_08311d78
sub_08311d78:
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1f
	bls		_08311d84
	mov		r0, #0x1
	b		_08311d86
_08311d84:
	mov		r0, #0x0
_08311d86:
	bx		lr
	thumb_func_end sub_08311d78

	thumb_func_start sub_08311d88
sub_08311d88:
	push	{ r4, r5, lr }
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	mov		r5, #0x0
	add		r0, r4, #0x0
	bl		sub_08311d78
	cmp		r0, #0x0
	bne		_08311dbc
	mov		r1, #0x0
	ldr		r2, _08311db8
_08311d9e:
	lsl		r0, r1, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, r4
	bne		_08311daa
	add		r5, r1, #0x0
_08311daa:
	add		r0, r1, #0x1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x13
	bls		_08311d9e
	b		_08311dd6

.incbin "base.gba", 0x311DB6, 0x2

_08311db8:	.4byte 0x0202B9A8

_08311dbc:
	mov		r1, #0x0
	ldr		r2, _08311de0
_08311dc0:
	lsl		r0, r1, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, r4
	bne		_08311dcc
	add		r5, r1, #0x0
_08311dcc:
	add		r0, r1, #0x1
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	cmp		r1, #0x13
	bls		_08311dc0
_08311dd6:
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x311DDE, 0x2

_08311de0:	.4byte 0x0202BA08

.incbin "base.gba", 0x311DE4, 0x334
	thumb_func_end sub_08311d88

	thumb_func_start sub_08312118
sub_08312118:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	ldr		r2, _08312184
	ldr		r0, _08312188
	add		r3, r2, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x13
	ldrh	r1, [r0, #0x0]
	ldr		r0, _0831218c
	and		r0, r1
	ldrh	r1, [r3, #0x0]
	mov		r4, #0x0
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x2
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldrh	r0, [r3, #0x0]
	mov		r6, #0x80
	lsl		r6, r6, #0x3
	add		r1, r6, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	ldr		r0, _08312190
	add		r2, r2, r0
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x2
	beq		_08312194
	ldrh	r0, [r3, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x4
	add		r1, r2, #0x0
	orr		r0, r1
	ldrh	r1, [r3, #0x0]
	orr		r0, r4
	strh	r0, [r3, #0x0]
	b		_0831219e

.incbin "base.gba", 0x312182, 0x2

_08312184:	.4byte 0x030031D0
_08312188:	.4byte 0x0000057C
_0831218c:	.4byte 0x0000FFF8
_08312190:	.4byte 0x00000781

_08312194:
	ldrh	r0, [r3, #0x0]
	ldr		r1, _0831220c
	and		r1, r0
	ldrh	r0, [r3, #0x0]
	strh	r1, [r3, #0x0]
_0831219e:
	mov		r0, #0x0
	str		r0, [r3, #0x4]
	ldr		r0, _08312210
	str		r0, [sp, #0x0]
	ldr		r0, _08312214
	str		r0, [sp, #0x4]
	ldr		r0, _08312218
	str		r0, [sp, #0x8]
	mov		r0, sp
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0x8]
	strh	r0, [r3, #0x8]
	add		r0, sp, #0x4
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0xa]
	strh	r0, [r3, #0xa]
	add		r0, sp, #0x8
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r3, #0xc]
	strh	r0, [r3, #0xc]
	lsl		r0, r5, #0x10
	asr		r2, r0, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_083121d2
	add		r0, #0x3f
_083121d2:
	asr		r0, r0, #0x6
	sub		r0, #0x28
	ldrh	r1, [r3, #0xe]
	strh	r0, [r3, #0xe]
	ldrh	r0, [r3, #0x10]
	mov		r4, #0x26
	strh	r4, [r3, #0x10]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_083121e8
	add		r0, #0x7f
_083121e8:
	asr		r0, r0, #0x7
	ldrh	r1, [r3, #0x12]
	strh	r0, [r3, #0x12]
	ldrh	r0, [r3, #0x14]
	strh	r4, [r3, #0x14]
	add		r0, r2, #0x0
	cmp		r0, #0x0
	bge		_083121fa
	add		r0, #0xff
_083121fa:
	asr		r0, r0, #0x8
	ldrh	r1, [r3, #0x16]
	strh	r0, [r3, #0x16]
	ldrh	r0, [r3, #0x18]
	strh	r4, [r3, #0x18]
	add		sp, #0xc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_0831220c:	.4byte 0x0000F7FF
_08312210:	.4byte 0x00000F07
_08312214:	.4byte 0x00000E07
_08312218:	.4byte 0x00000D07

.incbin "base.gba", 0x31221C, 0x41C
	thumb_func_end sub_08312118

	thumb_func_start sub_08312638
sub_08312638:
	push	{ r4, r5, r6, r7, lr }
	mov		r12, r0
	ldr		r0, _0831268c
	ldr		r1, _08312690
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldrh	r4, [r0, #0x20]
	ldrh	r5, [r0, #0x22]
	mov		r2, #0x0
	ldrh	r6, [r0, #0x24]
	cmp		r12, r0
	bne		_08312736
	mov		r3, r12
	ldr		r0, [r3, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08312736
	mov		r1, r12
	add		r1, #0x5a
	ldrh	r3, [r1, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r3
	add		r7, r1, #0x0
	cmp		r0, #0x0
	beq		_08312736
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r3
	cmp		r0, #0x0
	beq		_0831270a
	mov		r0, r12
	add		r0, #0x5c
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x1
	beq		_083126a4
	cmp		r0, #0x1
	bgt		_08312694
	cmp		r0, #0x0
	beq		_0831269e
	b		_083126c4

_0831268c:	.4byte 0x030031D0
_08312690:	.4byte 0x000007AC

_08312694:
	cmp		r0, #0x2
	beq		_083126ae
	cmp		r0, #0x3
	beq		_083126b8
	b		_083126c4
_0831269e:
	mov		r0, r12
	add		r0, #0x50
	b		_083126bc
_083126a4:
	mov		r0, r12
	add		r0, #0x50
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	b		_083126c2
_083126ae:
	mov		r0, r12
	add		r0, #0x4e
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	b		_083126c2
_083126b8:
	mov		r0, r12
	add		r0, #0x4e
_083126bc:
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mvn		r0, r0
_083126c2:
	lsr		r2, r0, #0x1f
_083126c4:
	mov		r0, r12
	add		r0, #0xbc
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x0
	bge		_083126d2
	mov		r0, #0x1
	eor		r2, r0
_083126d2:
	cmp		r2, #0x0
	beq		_083126f0
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r5, #0x10
	asr		r1, r1, #0x10
	lsl		r2, r6, #0x10
	mov		r4, #0x80
	lsl		r4, r4, #0x9
	add		r2, r2, r4
	asr		r2, r2, #0x10
	lsr		r3, r3, #0x1f
	bl		sub_08324aa0
	b		_08312732
_083126f0:
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r5, #0x10
	asr		r1, r1, #0x10
	lsl		r2, r6, #0x10
	mov		r4, #0x80
	lsl		r4, r4, #0x9
	add		r2, r2, r4
	asr		r2, r2, #0x10
	lsr		r3, r3, #0x1f
	bl		sub_08324b04
	b		_08312732
_0831270a:
	sub		r0, r3, #0x4
	ldr		r2, _0831273c
	add		r1, r2, #0x0
	and		r0, r1
	strh	r0, [r7, #0x0]
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r5, #0x10
	asr		r1, r1, #0x10
	lsl		r2, r6, #0x10
	mov		r3, #0x80
	lsl		r3, r3, #0x9
	add		r2, r2, r3
	asr		r2, r2, #0x10
	mov		r3, r12
	add		r3, #0xbc
	ldr		r3, [r3, #0x0]
	lsr		r3, r3, #0x1f
	bl		sub_08324a3c
_08312732:
	mov		r0, #0x0
	strh	r0, [r7, #0x0]
_08312736:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0831273c:	.4byte 0x00003FFF
	thumb_func_end sub_08312638

	thumb_func_start sub_08312740
sub_08312740:
	add		r2, r0, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_0831276e
	add		r1, r2, #0x0
	add		r1, #0x76
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0xe
	bhi		_08312758
	add		r0, #0x1
	strh	r0, [r1, #0x0]
_08312758:
	ldrh	r0, [r1, #0x0]
	neg		r0, r0
	lsl		r0, r0, #0xf
	str		r0, [r2, #0x8]
	ldrh	r0, [r1, #0x0]
	lsl		r0, r0, #0xb
	add		r1, r2, #0x0
	add		r1, #0x82
	strh	r0, [r1, #0x0]
	mov		r0, #0x1
	b		_08312776
_0831276e:
	add		r1, r2, #0x0
	add		r1, #0x76
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
_08312776:
	bx		lr
	thumb_func_end sub_08312740

	thumb_func_start sub_08312778
sub_08312778:
	add		r3, r0, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x7
	bhi		_083127f6
	lsl		r0, r0, #0x2
	ldr		r1, _0831278c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_0831278c:	.4byte 0x0200C790

.incbin "base.gba", 0x312790, 0x66

_083127f6:
	bx		lr

.incbin "base.gba", 0x3127F8, 0x4
	thumb_func_end sub_08312778

	thumb_func_start sub_083127fc
sub_083127fc:
	add		r2, r0, #0x0
	mov		r1, #0xce
	lsl		r1, r1, #0x1
	add		r0, r2, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_08312820
	ldr		r1, _0831281c
	add		r0, r2, #0x0
	add		r0, #0x76
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrh	r1, [r0, #0x0]
	b		_08312852

.incbin "base.gba", 0x31281A, 0x2

_0831281c:	.4byte 0x0202BFEC

_08312820:
	cmp		r0, #0x1
	bne		_0831283c
	ldr		r1, _08312838
	add		r0, r2, #0x0
	add		r0, #0x76
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x11
	b		_0831284e

_08312838:	.4byte 0x0202BFEC

_0831283c:
	ldr		r1, _08312864
	add		r0, r2, #0x0
	add		r0, #0x76
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x12
_0831284e:
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
_08312852:
	add		r0, r2, #0x0
	add		r0, #0x68
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	bne		_08312868
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	b		_0831287a

_08312864:	.4byte 0x0202BFEC

_08312868:
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x7
	cmp		r0, #0x0
	bge		_08312878
	add		r0, #0xff
_08312878:
	asr		r0, r0, #0x8
_0831287a:
	bx		lr
	thumb_func_end sub_083127fc

	thumb_func_start sub_0831287c
sub_0831287c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_083127fc
	mov		r2, #0xcb
	lsl		r2, r2, #0x1
	add		r1, r4, r2
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	mul		r0, r1
	asr		r0, r0, #0x8
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0831287c

	thumb_func_start sub_08312898
sub_08312898:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_083127fc
	add		r1, r0, #0x0
	mov		r0, #0xcc
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	mul		r0, r1
	asr		r1, r0, #0x8
	add		r0, r1, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08312898

	thumb_func_start sub_083128b8
sub_083128b8:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r1, r4, #0x0
	add		r1, #0x6a
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x0
	beq		_08312924
	sub		r0, r2, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_083128e6
	add		r0, r4, #0x0
	add		r0, #0x58
	ldrh	r1, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x8
	add		r2, r3, #0x0
	orr		r1, r2
	strh	r1, [r0, #0x0]
	b		_08312924
_083128e6:
	add		r5, r4, #0x0
	add		r5, #0xb4
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r1
	strh	r0, [r5, #0x0]
	add		r2, r4, #0x0
	add		r2, #0x58
	ldrh	r1, [r2, #0x0]
	ldr		r0, _083129d8
	and		r0, r1
	strh	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x78
	ldrb	r1, [r0, #0x0]
	add		r0, #0xc
	strb	r1, [r0, #0x0]
	ldr		r0, _083129dc
	ldr		r1, _083129e0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_0831291c
	mov		r0, #0x10
	bl		sub_08323b80
_0831291c:
	ldrh	r1, [r5, #0x0]
	ldr		r0, _083129e4
	and		r0, r1
	strh	r0, [r5, #0x0]
_08312924:
	add		r0, r4, #0x0
	add		r0, #0xac
	mov		r2, #0x0
	ldrsh	r1, [r0, r2]
	add		r6, r0, #0x0
	cmp		r1, #0x0
	beq		_0831294c
	add		r0, #0xa
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0xff
	bgt		_08312948
	add		r0, r4, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_0831294c
_08312948:
	mov		r0, #0x0
	strh	r0, [r6, #0x0]
_0831294c:
	add		r1, r4, #0x0
	add		r1, #0x66
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x0
	beq		_08312976
	sub		r0, r2, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_08312976
	ldr		r0, _083129dc
	ldr		r1, _083129e0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08312976
	mov		r0, #0x8
	bl		sub_08323b80
_08312976:
	add		r0, r4, #0x0
	add		r0, #0x68
	ldrh	r2, [r0, #0x0]
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	add		r5, r0, #0x0
	cmp		r1, #0x0
	ble		_083129b4
	sub		r0, r2, #0x1
	strh	r0, [r5, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bne		_083129b4
	add		r0, r4, #0x0
	mov		r1, #0x4
	bl		sub_08317658
	ldr		r0, _083129dc
	ldr		r1, _083129e0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_083129b4
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_083129b4
	mov		r0, #0x28
	bl		sub_08325e94
_083129b4:
	add		r1, r5, #0x0
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x0
	bge		_083129c2
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
_083129c2:
	mov		r3, #0x0
	ldrsh	r0, [r5, r3]
	cmp		r0, #0x0
	beq		_083129ec
	add		r2, r4, #0x0
	add		r2, #0x58
	ldrh	r1, [r2, #0x0]
	ldr		r0, _083129e8
	add		r3, r1, #0x0
	and		r3, r0
	b		_083129f8

_083129d8:	.4byte 0x00007FFF
_083129dc:	.4byte 0x030031D0
_083129e0:	.4byte 0x000007AC
_083129e4:	.4byte 0x0000FFFC
_083129e8:	.4byte 0x0000FFEF

_083129ec:
	add		r2, r4, #0x0
	add		r2, #0x58
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x10
	add		r3, r1, #0x0
	orr		r3, r0
_083129f8:
	strh	r3, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x84
	ldrb	r1, [r0, #0x0]
	add		r5, r0, #0x0
	cmp		r1, #0x8
	bne		_08312a0e
	mov		r0, #0x20
	add		r1, r3, #0x0
	orr		r1, r0
	b		_08312a14
_08312a0e:
	ldr		r0, _08312a24
	add		r1, r3, #0x0
	and		r1, r0
_08312a14:
	strh	r1, [r2, #0x0]
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0xa
	bne		_08312a2c
	ldr		r0, _08312a28
	and		r0, r1
	b		_08312a30

.incbin "base.gba", 0x312A22, 0x2

_08312a24:	.4byte 0x0000FFDF
_08312a28:	.4byte 0x0000FFBF

_08312a2c:
	mov		r0, #0x40
	orr		r0, r1
_08312a30:
	strh	r0, [r2, #0x0]
	add		r2, r6, #0x0
	ldrh	r5, [r2, #0x0]
	mov		r0, #0x0
	ldrsh	r3, [r2, r0]
	cmp		r3, #0x0
	beq		_08312a5c
	add		r0, r4, #0x0
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08312a5c
	cmp		r3, #0x9
	ble		_08312a58
	add		r0, r5, #0x0
	sub		r0, #0xa
	strh	r0, [r2, #0x0]
	b		_08312a5c
_08312a58:
	mov		r0, #0x0
	strh	r0, [r6, #0x0]
_08312a5c:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x312A62, 0x2
	thumb_func_end sub_083128b8

	thumb_func_start sub_08312a64
sub_08312a64:
	push	{ r4, lr }
	add		r1, r0, #0x0
	add		r4, r1, #0x0
	add		r4, #0xac
	ldrh	r2, [r4, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r4, r3]
	cmp		r0, #0x0
	beq		_08312a9c
	add		r0, r1, #0x0
	add		r0, #0x6a
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x0
	beq		_08312a86
	mov		r0, #0x0
	b		_08312a9a
_08312a86:
	mov		r0, #0x3f
	and		r0, r2
	cmp		r0, #0x0
	bne		_08312a96
	add		r0, r1, #0x0
	mov		r1, #0x5
	bl		sub_083178b8
_08312a96:
	ldrh	r0, [r4, #0x0]
	sub		r0, #0x1
_08312a9a:
	strh	r0, [r4, #0x0]
_08312a9c:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x312AA2, 0x2
	thumb_func_end sub_08312a64

	thumb_func_start sub_08312aa4
sub_08312aa4:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r2, r5, #0x0
	add		r2, #0x64
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_08312aca
	ldrh	r1, [r5, #0x38]
	mov		r0, #0xdf
	lsl		r0, r0, #0x7
	cmp		r1, r0
	bne		_08312aca
	mov		r4, #0x0
	strb	r4, [r2, #0x0]
	add		r0, r5, #0x0
	mov		r1, #0x7
	bl		sub_08317658
	strh	r4, [r5, #0x38]
_08312aca:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08312aa4

	thumb_func_start sub_08312ad0
sub_08312ad0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r1, _08312b0c
	add		r1, #0x24
	bl		sub_08316514
	ldr		r1, _08312b10
	and		r1, r0
	add		r5, r4, #0x0
	add		r5, #0xca
	strh	r1, [r5, #0x0]
	add		r0, r4, #0x0
	bl		sub_083163d4
	add		r1, r4, #0x0
	add		r1, #0x7c
	ldrh	r0, [r5, #0x0]
	ldrh	r1, [r1, #0x0]
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x10
	ldr		r0, _08312b14
	cmp		r1, r0
	ble		_08312b18
	add		r1, r4, #0x0
	add		r1, #0x96
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	b		_08312b32

.incbin "base.gba", 0x312B0A, 0x2

_08312b0c:	.4byte 0x030031D0
_08312b10:	.4byte 0xFFFFFF00
_08312b14:	.4byte 0x000005FF

_08312b18:
	ldr		r0, _08312b28
	cmp		r1, r0
	bge		_08312b2c
	add		r1, r4, #0x0
	add		r1, #0x96
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	b		_08312b32

_08312b28:	.4byte 0xFFFFFA00

_08312b2c:
	add		r1, r4, #0x0
	add		r1, #0x96
	mov		r0, #0x0
_08312b32:
	strh	r0, [r1, #0x0]
	add		r2, r1, #0x0
	ldrh	r3, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	ldr		r0, _08312b4c
	cmp		r1, r0
	bgt		_08312b50
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	b		_08312b54

.incbin "base.gba", 0x312B4A, 0x2

_08312b4c:	.4byte 0x01FFFFFF

_08312b50:
	mov		r0, #0x80
	lsl		r0, r0, #0x7
_08312b54:
	orr		r0, r3
	strh	r0, [r2, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x312B5E, 0x2
	thumb_func_end sub_08312ad0

	thumb_func_start sub_08312b60
sub_08312b60:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r0, #0xbd
	lsl		r0, r0, #0x1
	add		r6, r4, r0
	ldrh	r0, [r6, #0x0]
	cmp		r0, #0x0
	bne		_08312b72
	b		_08312d4a
_08312b72:
	cmp		r0, #0x1
	bne		_08312b78
	b		_08312d4a
_08312b78:
	add		r0, r4, #0x0
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	bne		_08312b88
	b		_08312d4a
_08312b88:
	ldr		r1, [r4, #0x48]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08312b96
	b		_08312d4a
_08312b96:
	mov		r2, #0xbe
	lsl		r2, r2, #0x1
	add		r0, r4, r2
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08312ba4
	b		_08312d4a
_08312ba4:
	mov		r0, #0x80
	lsl		r0, r0, #0x9
	and		r1, r0
	cmp		r1, #0x0
	beq		_08312bb0
	b		_08312d4a
_08312bb0:
	ldr		r5, _08312bfc
	ldr		r1, _08312c00
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08312bc0
	bl		sub_0832045c
_08312bc0:
	mov		r2, #0xe6
	lsl		r2, r2, #0x3
	add		r0, r5, r2
	bl		sub_083214a4
	add		r2, r0, #0x0
	str		r4, [r2, #0x54]
	ldrh	r1, [r6, #0x0]
	ldr		r0, _08312c04
	cmp		r1, r0
	bne		_08312bd8
	b		_08312d1c
_08312bd8:
	cmp		r1, r0
	bgt		_08312c4c
	sub		r0, #0x6
	cmp		r1, r0
	bne		_08312be4
	b		_08312cd0
_08312be4:
	cmp		r1, r0
	bgt		_08312c1c
	sub		r0, #0x4
	cmp		r1, r0
	beq		_08312cb8
	cmp		r1, r0
	bgt		_08312c08
	sub		r0, #0x2
	cmp		r1, r0
	beq		_08312cb0
	b		_08312d3c

.incbin "base.gba", 0x312BFA, 0x2

_08312bfc:	.4byte 0x030031D0
_08312c00:	.4byte 0x000007AC
_08312c04:	.4byte 0x0000100C

_08312c08:
	ldr		r0, _08312c18
	cmp		r1, r0
	beq		_08312cc0
	add		r0, #0x1
	cmp		r1, r0
	beq		_08312cc8
	b		_08312d3c

.incbin "base.gba", 0x312C16, 0x2

_08312c18:	.4byte 0x00001004

_08312c1c:
	ldr		r0, _08312c34
	cmp		r1, r0
	beq		_08312ce0
	cmp		r1, r0
	bgt		_08312c38
	sub		r0, #0x2
	cmp		r1, r0
	beq		_08312cd8
	add		r0, #0x1
	cmp		r1, r0
	beq		_08312d08
	b		_08312d3c

_08312c34:	.4byte 0x00001009

_08312c38:
	ldr		r0, _08312c48
	cmp		r1, r0
	beq		_08312d24
	add		r0, #0x1
	cmp		r1, r0
	bne		_08312c46
	b		_08312d34
_08312c46:
	b		_08312d3c

_08312c48:	.4byte 0x0000100A

_08312c4c:
	ldr		r0, _08312c68
	cmp		r1, r0
	beq		_08312cc0
	cmp		r1, r0
	bgt		_08312c80
	ldr		r0, _08312c6c
	cmp		r1, r0
	beq		_08312cf8
	cmp		r1, r0
	bgt		_08312c70
	sub		r0, #0x1
	cmp		r1, r0
	beq		_08312cf0
	b		_08312d3c

_08312c68:	.4byte 0x00002004
_08312c6c:	.4byte 0x0000100F

_08312c70:
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	cmp		r1, r0
	beq		_08312cb0
	add		r0, #0x2
	cmp		r1, r0
	beq		_08312cb8
	b		_08312d3c
_08312c80:
	ldr		r0, _08312c98
	cmp		r1, r0
	beq		_08312cd8
	cmp		r1, r0
	bgt		_08312c9c
	sub		r0, #0x2
	cmp		r1, r0
	beq		_08312cc8
	add		r0, #0x1
	cmp		r1, r0
	beq		_08312cd0
	b		_08312d3c

_08312c98:	.4byte 0x00002007

_08312c9c:
	ldr		r0, _08312cac
	cmp		r1, r0
	beq		_08312d24
	add		r0, #0x2
	cmp		r1, r0
	beq		_08312d1c
	b		_08312d3c

.incbin "base.gba", 0x312CAA, 0x2

_08312cac:	.4byte 0x0000200A

_08312cb0:
	add		r0, r2, #0x0
	bl		sub_0831cc48
	b		_08312d2a
_08312cb8:
	add		r0, r2, #0x0
	bl		sub_0831ccdc
	b		_08312d2a
_08312cc0:
	add		r0, r2, #0x0
	bl		sub_0831cd70
	b		_08312d2a
_08312cc8:
	add		r0, r2, #0x0
	bl		sub_0831d498
	b		_08312d2a
_08312cd0:
	add		r0, r2, #0x0
	bl		sub_0831d53c
	b		_08312d2a
_08312cd8:
	add		r0, r2, #0x0
	bl		sub_0831d69c
	b		_08312d2a
_08312ce0:
	add		r0, r2, #0x0
	bl		sub_0831d6f0
	ldr		r1, _08312cec
	b		_08312d10

.incbin "base.gba", 0x312CEA, 0x2

_08312cec:	.4byte 0x0000100E

_08312cf0:
	add		r0, r2, #0x0
	bl		sub_0831d718
	b		_08312d4a
_08312cf8:
	add		r0, r2, #0x0
	bl		sub_0831d778
	ldr		r1, _08312d04
	b		_08312d10

.incbin "base.gba", 0x312D02, 0x2

_08312d04:	.4byte 0x00001007

_08312d08:
	add		r0, r2, #0x0
	bl		sub_0831d748
	ldr		r1, _08312d18
_08312d10:
	add		r0, r4, #0x0
	bl		sub_08317a88
	b		_08312d4a

_08312d18:	.4byte 0x0000100F

_08312d1c:
	add		r0, r2, #0x0
	bl		sub_0831d7e0
	b		_08312d2a
_08312d24:
	add		r0, r2, #0x0
	bl		sub_0831d9ec
_08312d2a:
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_08317a88
	b		_08312d4a
_08312d34:
	add		r0, r2, #0x0
	bl		sub_0831da88
	b		_08312d4a
_08312d3c:
	add		r0, r2, #0x0
	bl		sub_0831d498
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_08317a88
_08312d4a:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08312b60

	thumb_func_start sub_08312d50
sub_08312d50:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r5, r1, #0x10
	mov		r0, #0xbc
	lsl		r0, r0, #0x1
	add		r1, r4, r0
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x40
	ble		_08312d66
	mov		r0, #0x40
_08312d66:
	ldrh	r1, [r1, #0x0]
	cmp		r1, #0x4
	bhi		_08312d70
	lsl		r2, r0, #0xf
	b		_08312d9e
_08312d70:
	cmp		r1, #0x14
	bhi		_08312d80
	lsl		r0, r0, #0x11
	ldr		r1, _08312d7c
	add		r2, r0, r1
	b		_08312d9e

_08312d7c:	.4byte 0xFFF60000

_08312d80:
	cmp		r1, #0x24
	bhi		_08312d8e
	lsl		r0, r0, #0x10
	mov		r1, #0x90
	lsl		r1, r1, #0xd
	add		r2, r0, r1
	b		_08312d9e
_08312d8e:
	cmp		r1, #0x40
	bhi		_08312d9c
	lsl		r0, r0, #0xf
	mov		r1, #0x88
	lsl		r1, r1, #0xe
	add		r2, r0, r1
	b		_08312d9e
_08312d9c:
	mov		r2, #0x0
_08312d9e:
	add		r1, r4, #0x0
	add		r1, #0xa8
	add		r0, r4, #0x0
	add		r0, #0x8c
	ldr		r0, [r0, #0x0]
	add		r0, r0, r2
	str		r0, [r1, #0x0]
	ldr		r1, [r4, #0x48]
	cmp		r1, #0x0
	beq		_08312e6e
	mov		r2, #0x80
	lsl		r2, r2, #0x7
	add		r0, r1, #0x0
	and		r0, r2
	cmp		r0, #0x0
	bne		_08312e6e
	mov		r0, #0x20
	and		r1, r0
	cmp		r1, #0x0
	bne		_08312e38
	add		r0, r4, #0x0
	add		r0, #0x96
	mov		r3, #0x0
	strh	r5, [r0, #0x0]
	add		r0, r5, #0x0
	and		r0, r2
	cmp		r0, #0x0
	bne		_08312dde
	mov		r0, #0x10
	and		r0, r5
	cmp		r0, #0x0
	beq		_08312dee
_08312dde:
	add		r1, r4, #0x0
	add		r1, #0xb0
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	sub		r1, #0x5c
	mov		r0, #0x7
	strb	r0, [r1, #0x0]
	b		_08312e2c
_08312dee:
	add		r0, r4, #0x0
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08312e0a
	add		r0, r4, #0x0
	add		r0, #0xb0
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	sub		r0, #0x5c
	strb	r1, [r0, #0x0]
	b		_08312e2c
_08312e0a:
	add		r0, r4, #0x0
	add		r0, #0xb0
	strb	r3, [r0, #0x0]
	ldr		r1, _08312e34
	sub		r0, #0x2a
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r2, r4, #0x0
	add		r2, #0x54
	strb	r0, [r2, #0x0]
	mov		r1, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_08312e2c
	strb	r3, [r2, #0x0]
_08312e2c:
	add		r0, r4, #0x0
	bl		sub_08312b60
	b		_08312e5c

_08312e34:	.4byte 0x0202BE04

_08312e38:
	add		r0, r4, #0x0
	bl		sub_08312ad0
	add		r3, r4, #0x0
	add		r3, #0x96
	mov		r0, #0x40
	and		r0, r5
	ldrh	r1, [r3, #0x0]
	orr		r0, r1
	mov		r2, #0x0
	strh	r0, [r3, #0x0]
	add		r1, r4, #0x0
	add		r1, #0xb0
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x54
	strb	r2, [r0, #0x0]
_08312e5c:
	add		r0, r4, #0x0
	bl		sub_08313aac
	add		r0, r4, #0x0
	bl		sub_0831377c
	add		r0, r4, #0x0
	bl		sub_08312f2c
_08312e6e:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08312d50

	thumb_func_start sub_08312e74
sub_08312e74:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	add		r2, r3, #0x0
	add		r2, #0xbc
	add		r0, #0xc0
	ldr		r1, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	add		r1, r1, r0
	str		r1, [r2, #0x0]
	mov		r0, #0xfc
	lsl		r0, r0, #0x13
	cmp		r1, r0
	ble		_08312e90
	str		r0, [r2, #0x0]
_08312e90:
	mov		r0, #0x7a
	add		r0, r0, r3
	mov		r12, r0
	ldr		r4, _08312f00
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bge		_08312ea2
	add		r0, #0x3f
_08312ea2:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x16
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	ldr		r1, [r0, #0x0]
	mov		r5, #0x2
	ldrsh	r0, [r2, r5]
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08312eba
	ldr		r1, _08312f04
	add		r0, r0, r1
_08312eba:
	asr		r0, r0, #0xf
	add		r1, r3, #0x0
	add		r1, #0x4e
	strh	r0, [r1, #0x0]
	mov		r5, r12
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	cmp		r1, #0x0
	bge		_08312ece
	add		r1, #0x3f
_08312ece:
	asr		r1, r1, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r1
	ldr		r1, _08312f08
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	mov		r4, #0x2
	ldrsh	r1, [r2, r4]
	neg		r0, r0
	mul		r1, r0
	cmp		r1, #0x0
	bge		_08312ef0
	ldr		r5, _08312f04
	add		r1, r1, r5
_08312ef0:
	asr		r1, r1, #0xf
	add		r0, r3, #0x0
	add		r0, #0x50
	strh	r1, [r0, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x312EFE, 0x2

_08312f00:	.4byte 0x0202A9A0
_08312f04:	.4byte 0x00007FFF
_08312f08:	.4byte 0x000003FF
	thumb_func_end sub_08312e74

	thumb_func_start sub_08312f0c
sub_08312f0c:
	add		r3, r0, #0x0
	add		r0, #0xbc
	mov		r1, #0x0
	str		r1, [r0, #0x0]
	add		r0, #0x4
	str		r1, [r0, #0x0]
	sub		r0, #0x38
	mov		r2, #0x0
	strh	r1, [r0, #0x0]
	sub		r0, #0xa
	strb	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	bx		lr
	thumb_func_end sub_08312f0c

	thumb_func_start sub_08312f2c
sub_08312f2c:
	push	{ r4, r5, r6, r7, lr }
	add		r3, r0, #0x0
	ldr		r0, [r3, #0x48]
	mov		r1, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_08312f80
	add		r2, r3, #0x0
	add		r2, #0xbc
	ldr		r1, [r2, #0x0]
	ldr		r0, _08312f50
	cmp		r1, r0
	ble		_08312f58
	add		r0, r3, #0x0
	add		r0, #0xc0
	ldrh	r1, [r0, #0x0]
	ldr		r2, _08312f54
	b		_08312f68

_08312f50:	.4byte 0x001FFFFF
_08312f54:	.4byte 0xFFF00000

_08312f58:
	ldr		r0, _08312f70
	cmp		r1, r0
	bgt		_08312f74
	add		r0, r3, #0x0
	add		r0, #0xc0
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0xd
_08312f68:
	orr		r1, r2
	str		r1, [r0, #0x0]
	b		_083132ac

.incbin "base.gba", 0x312F6E, 0x2

_08312f70:	.4byte 0xFFE00000

_08312f74:
	add		r1, r3, #0x0
	add		r1, #0xc0
	mov		r0, #0x0
	str		r0, [r1, #0x0]
	str		r0, [r2, #0x0]
	b		_083132ac
_08312f80:
	add		r0, r3, #0x0
	add		r0, #0x84
	ldrb	r1, [r0, #0x0]
	add		r7, r0, #0x0
	cmp		r1, #0xb
	bhi		_08313056
	lsl		r0, r1, #0x2
	ldr		r1, _08312f98
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x312F96, 0x2

_08312f98:	.4byte 0x0200CF9C

.incbin "base.gba", 0x312F9C, 0xBA

_08313056:
	add		r0, r3, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	add		r6, r0, #0x0
	add		r4, r3, #0x0
	add		r4, #0xc0
	cmp		r1, #0x0
	bgt		_0831306e
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bge		_0831306e
	b		_083132a6
_0831306e:
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0xc
	bls		_08313076
	b		_0831329c
_08313076:
	lsl		r0, r0, #0x2
	ldr		r1, _08313080
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08313080:	.4byte 0x0200D084

.incbin "base.gba", 0x313084, 0x218

_0831329c:
	ldr		r0, [r6, #0x0]
	ldr		r1, [r4, #0x0]
	add		r0, r0, r1
	cmp		r0, #0x0
	bgt		_083132ac
_083132a6:
	mov		r0, #0x0
	str		r0, [r6, #0x0]
	str		r0, [r4, #0x0]
_083132ac:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3132B2, 0x3F2
	thumb_func_end sub_08312f2c

	thumb_func_start sub_083136a4
sub_083136a4:
	mov		r12, r0
	mov		r2, r12
	add		r2, #0xbc
	ldr		r1, [r2, #0x0]
	cmp		r1, #0x0
	bge		_083136b2
	neg		r1, r1
_083136b2:
	ldr		r0, _083136e0
	cmp		r1, r0
	bgt		_083136cc
	mov		r0, r12
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	beq		_083136e4
_083136cc:
	mov		r0, r12
	add		r0, #0x88
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bge		_083136da
	add		r0, #0x7
_083136da:
	lsl		r0, r0, #0xd
	lsr		r1, r0, #0x10
	b		_08313742

_083136e0:	.4byte 0x006FFFFF

_083136e4:
	mov		r0, r12
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x4
	beq		_08313700
	mov		r0, r12
	add		r0, #0x88
	strh	r1, [r0, #0x0]
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bge		_083136fc
	neg		r0, r0
_083136fc:
	asr		r2, r0, #0x14
	b		_08313702
_08313700:
	mov		r2, #0x8
_08313702:
	mov		r0, r12
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08313728
	ldr		r0, _08313724
	lsl		r1, r2, #0x1
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	neg		r0, r0
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	b		_08313742

.incbin "base.gba", 0x313722, 0x2

_08313724:	.4byte 0x0202C00C

_08313728:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08313740
	ldr		r1, _0831373c
	lsl		r0, r2, #0x1
	add		r0, r0, r1
	ldrh	r1, [r0, #0x0]
	b		_08313742

_0831373c:	.4byte 0x0202C00C

_08313740:
	mov		r1, #0x0
_08313742:
	mov		r0, r12
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08313752
	lsl		r0, r1, #0x10
	neg		r0, r0
	lsr		r1, r0, #0x10
_08313752:
	mov		r2, r12
	add		r2, #0x7c
	ldrh	r0, [r2, #0x0]
	add		r0, r0, r1
	strh	r0, [r2, #0x0]
	mov		r1, r12
	add		r1, #0x80
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	mov		r3, r12
	add		r3, #0x7a
	strh	r0, [r3, #0x0]
	mov		r1, r12
	add		r1, #0x82
	ldrh	r0, [r2, #0x0]
	ldrh	r1, [r1, #0x0]
	sub		r0, r0, r1
	mov		r1, r12
	add		r1, #0x56
	strh	r0, [r1, #0x0]
	bx		lr
	thumb_func_end sub_083136a4

	thumb_func_start sub_0831377c
sub_0831377c:
	push	{ r4, r5, r6, lr }
	add		r2, r0, #0x0
	ldr		r0, [r2, #0x48]
	mov		r1, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_08313794
	add		r1, r2, #0x0
	add		r1, #0x88
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	b		_0831386e
_08313794:
	add		r0, r2, #0x0
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0x3
	and		r0, r1
	mov		r4, #0x80
	lsl		r4, r4, #0x2
	cmp		r0, r4
	beq		_0831386e
	add		r0, r2, #0x0
	add		r0, #0xb0
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x3
	mov		r1, #0x9a
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	add		r3, r2, r0
	add		r0, r2, #0x0
	add		r0, #0x7e
	ldrb	r1, [r0, #0x0]
	sub		r0, r1, #0x5
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x3
	bls		_0831386e
	cmp		r1, #0xd
	beq		_0831386e
	add		r0, r2, #0x0
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831380a
	add		r0, r2, #0x0
	add		r0, #0x88
	ldrh	r2, [r0, #0x0]
	mov		r4, #0x0
	ldrsh	r1, [r0, r4]
	add		r4, r0, #0x0
	cmp		r1, #0x0
	bgt		_08313802
	mov		r5, #0x0
	ldrsh	r0, [r4, r5]
	neg		r0, r0
	mov		r6, #0x0
	ldrsh	r1, [r3, r6]
	cmp		r0, r1
	blt		_083137fe
	ldrh	r0, [r3, #0x0]
	neg		r0, r0
	b		_08313806
_083137fe:
	ldrh	r0, [r3, #0x4]
	b		_08313804
_08313802:
	ldrh	r0, [r3, #0x2]
_08313804:
	sub		r0, r2, r0
_08313806:
	strh	r0, [r4, #0x0]
	b		_0831386e
_0831380a:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r4, r0, #0x10
	cmp		r4, #0x0
	beq		_08313844
	add		r1, r2, #0x0
	add		r1, #0x88
	ldrh	r5, [r1, #0x0]
	mov		r0, #0x0
	ldrsh	r2, [r1, r0]
	add		r4, r1, #0x0
	cmp		r2, #0x0
	blt		_0831383c
	ldrh	r1, [r3, #0x0]
	mov		r6, #0x0
	ldrsh	r0, [r3, r6]
	cmp		r2, r0
	blt		_08313836
	add		r0, r1, #0x0
	b		_08313806
_08313836:
	ldrh	r3, [r3, #0x4]
	add		r0, r5, r3
	b		_08313806
_0831383c:
	ldrh	r0, [r3, #0x2]
	add		r0, r5, r0
	strh	r0, [r1, #0x0]
	b		_0831386e
_08313844:
	add		r1, r2, #0x0
	add		r1, #0x88
	ldrh	r2, [r1, #0x0]
	mov		r5, #0x0
	ldrsh	r0, [r1, r5]
	cmp		r0, #0x0
	bge		_08313860
	ldrh	r0, [r3, #0x6]
	add		r0, r2, r0
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	ble		_0831386e
	b		_0831386c
_08313860:
	ldrh	r0, [r3, #0x6]
	sub		r0, r2, r0
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0831386e
_0831386c:
	strh	r4, [r1, #0x0]
_0831386e:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0831377c

	thumb_func_start sub_08313874
sub_08313874:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r2, r4, #0x0
	add		r2, #0xb8
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp		r0, #0x0
	bne		_08313888
	b		_08313a92
_08313888:
	sub		r0, r1, #0x1
	strh	r0, [r2, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x3b
	bne		_083138ac
	add		r1, r4, #0x0
	add		r1, #0x82
	ldr		r3, _08313938
	add		r0, r3, #0x0
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	ldr		r1, _0831393c
	cmp		r0, r1
	bls		_083138ac
	mov		r0, #0x0
	strh	r0, [r2, #0x0]
_083138ac:
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	mov		r0, #0xa0
	lsl		r0, r0, #0x12
	add		r2, r4, #0x0
	add		r2, #0xb8
	cmp		r1, r0
	bgt		_083138c2
	mov		r0, #0x0
	strh	r0, [r2, #0x0]
_083138c2:
	ldr		r3, [r4, #0x48]
	mov		r0, #0x20
	and		r3, r0
	cmp		r3, #0x0
	bne		_08313954
	add		r0, r4, #0x0
	add		r0, #0x96
	ldrh	r0, [r0, #0x0]
	mov		r1, #0x86
	lsl		r1, r1, #0x7
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	cmp		r1, r0
	bne		_08313954
	ldr		r0, _08313940
	strh	r3, [r2, #0x0]
	add		r2, r4, #0x0
	add		r2, #0x7e
	mov		r1, #0xe
	strb	r1, [r2, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x82
	strh	r3, [r1, #0x0]
	ldr		r1, _08313944
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_083139e8
	mov		r2, #0x20
	ldrsh	r0, [r4, r2]
	mov		r3, #0x22
	ldrsh	r1, [r4, r3]
	mov		r3, #0x24
	ldrsh	r2, [r4, r3]
	sub		r2, #0x5
	lsl		r2, r2, #0x10
	asr		r2, r2, #0x10
	bl		sub_0832517c
	ldr		r0, _08313948
	ldrh	r0, [r0, #0x0]
	ldr		r2, _0831394c
	ldr		r1, _08313950
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	bl		sub_08326664
	mov		r0, #0x40
	bl		sub_08325e94
	b		_083139e8

.incbin "base.gba", 0x313936, 0x2

_08313938:	.4byte 0x000012FF
_0831393c:	.4byte 0x25FE0000
_08313940:	.4byte 0x030031D0
_08313944:	.4byte 0x000007AC
_08313948:	.4byte 0x0202C43C
_0831394c:	.4byte 0x0202E890
_08313950:	.4byte 0x0202E8F0

_08313954:
	mov		r0, #0x0
	ldrsh	r5, [r2, r0]
	cmp		r5, #0x0
	beq		_083139ec
	cmp		r5, #0x37
	ble		_08313970
	add		r1, r4, #0x0
	add		r1, #0x82
	mov		r2, #0xc0
	lsl		r2, r2, #0x3
	add		r0, r2, #0x0
	ldrh	r3, [r1, #0x0]
	add		r0, r0, r3
	b		_083139e6
_08313970:
	cmp		r5, #0x2f
	ble		_08313988
	add		r1, r4, #0x0
	add		r1, #0x82
	ldr		r2, _08313984
	add		r0, r2, #0x0
	ldrh	r3, [r1, #0x0]
	add		r0, r0, r3
	b		_083139e6

.incbin "base.gba", 0x313982, 0x2

_08313984:	.4byte 0xFFFFFA00

_08313988:
	cmp		r5, #0x27
	ble		_0831399c
	add		r1, r4, #0x0
	add		r1, #0x82
	mov		r2, #0xc0
	lsl		r2, r2, #0x3
	add		r0, r2, #0x0
	ldrh	r3, [r1, #0x0]
	add		r0, r0, r3
	b		_083139e6
_0831399c:
	cmp		r5, #0x1f
	ble		_083139b4
	add		r1, r4, #0x0
	add		r1, #0x82
	ldr		r2, _083139b0
	add		r0, r2, #0x0
	ldrh	r3, [r1, #0x0]
	add		r0, r0, r3
	b		_083139e6

.incbin "base.gba", 0x3139AE, 0x2

_083139b0:	.4byte 0xFFFFFA00

_083139b4:
	cmp		r5, #0x17
	ble		_083139c8
	add		r1, r4, #0x0
	add		r1, #0x82
	mov		r2, #0xc0
	lsl		r2, r2, #0x3
	add		r0, r2, #0x0
	ldrh	r3, [r1, #0x0]
	add		r0, r0, r3
	b		_083139e6
_083139c8:
	cmp		r5, #0xf
	ble		_083139e8
	add		r1, r4, #0x0
	add		r1, #0x82
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp		r0, #0x0
	ble		_083139e4
	ldr		r3, _083139e0
	add		r0, r2, r3
	b		_083139e6

_083139e0:	.4byte 0xFFFFFA00

_083139e4:
	mov		r0, #0x0
_083139e6:
	strh	r0, [r1, #0x0]
_083139e8:
	mov		r0, #0x1
	b		_08313a94
_083139ec:
	add		r0, r4, #0x0
	add		r0, #0x7e
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x5
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	bhi		_08313a10
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_083178b8
	add		r2, r4, #0x0
	add		r2, #0x74
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x3
	orr		r0, r1
	strh	r0, [r2, #0x0]
_08313a10:
	add		r0, r4, #0x0
	add		r0, #0x92
	strh	r5, [r0, #0x0]
	add		r0, #0x2
	strh	r5, [r0, #0x0]
	ldr		r0, _08313a9c
	ldr		r1, _08313aa0
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08313a92
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08313a92
	mov		r6, #0x0
	mov		r5, #0x0
	ldr		r2, _08313aa4
	ldr		r3, _08313aa8
	mov		r0, #0xcc
	lsl		r0, r0, #0x1
	add		r4, r3, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_08313a5a
	ldr		r1, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	cmp		r1, r0
	bne		_08313a5a
	mov		r5, #0x1
_08313a5a:
	cmp		r5, #0x0
	beq		_08313a88
	mov		r4, #0x0
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r3, r3, r1
	ldrh	r0, [r3, #0x4]
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	ldr		r0, [r1, #0x4]
	cmp		r0, #0x0
	bge		_08313a82
	ldr		r1, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	bne		_08313a82
	mov		r4, #0x1
_08313a82:
	cmp		r4, #0x0
	bne		_08313a88
	mov		r6, #0x1
_08313a88:
	cmp		r6, #0x0
	bne		_08313a92
	mov		r0, #0x33
	bl		sub_08325e94
_08313a92:
	mov		r0, #0x0
_08313a94:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x313A9A, 0x2

_08313a9c:	.4byte 0x030031D0
_08313aa0:	.4byte 0x000007AC
_08313aa4:	.4byte 0x0202E890
_08313aa8:	.4byte 0x0202E8F0
	thumb_func_end sub_08313874

	thumb_func_start sub_08313aac
sub_08313aac:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	add		r0, #0x54
	ldrb	r7, [r0, #0x0]
	add		r2, r5, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_08313ace
	ldr		r0, _08313ae8
	and		r0, r1
	strh	r0, [r2, #0x0]
_08313ace:
	add		r0, r5, #0x0
	add		r0, #0x7e
	ldrb	r1, [r0, #0x0]
	mov		r8, r0
	cmp		r1, #0xf
	bls		_08313ade
	bl		sub_08314300
_08313ade:
	lsl		r0, r1, #0x2
	ldr		r1, _08313aec
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08313ae8:	.4byte 0x0000FFD3
_08313aec:	.4byte 0x0200DAF0

.incbin "base.gba", 0x313AF0, 0x810
	thumb_func_end sub_08313aac

	thumb_func_start sub_08314300
sub_08314300:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08314300

	thumb_func_start sub_0831430c
sub_0831430c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r3, r4, #0x0
	add		r3, #0x82
	ldrh	r5, [r3, #0x0]
	mov		r0, #0x0
	ldrsh	r2, [r3, r0]
	ldr		r7, _08314344
	cmp		r2, #0x0
	beq		_0831435e
	lsl		r0, r6, #0x4
	add		r0, r0, r7
	ldrh	r0, [r0, #0xc]
	add		r1, r0, #0x0
	cmp		r2, #0x0
	ble		_08314348
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	sub		r0, r5, r0
	strh	r0, [r3, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0831435e
	b		_0831435a

.incbin "base.gba", 0x314342, 0x2

_08314344:	.4byte 0x0202BCE4

_08314348:
	cmp		r2, #0x0
	bge		_0831435e
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	add		r0, r0, r5
	strh	r0, [r3, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	ble		_0831435e
_0831435a:
	mov		r0, #0x0
	strh	r0, [r3, #0x0]
_0831435e:
	lsl		r0, r6, #0x4
	add		r0, r0, r7
	ldrh	r1, [r0, #0x8]
	mov		r12, r1
	mov		r7, #0x0
	mov		r5, #0x0
	add		r0, r4, #0x0
	add		r0, #0x80
	ldrh	r3, [r0, #0x0]
	mov		r6, #0x0
	ldrsh	r2, [r0, r6]
	mov		r8, r0
	cmp		r2, #0x0
	ble		_0831438c
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	sub		r0, r3, r0
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	asr		r0, r0, #0x10
	mvn		r0, r0
	lsr		r5, r0, #0x1f
	b		_083143a2
_0831438c:
	cmp		r2, #0x0
	bge		_083143a2
	mov		r1, r12
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	add		r0, r0, r3
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	cmp		r0, #0x0
	bgt		_083143a2
	mov		r5, #0x1
_083143a2:
	cmp		r5, #0x0
	beq		_083143ac
	mov		r2, r8
	strh	r7, [r2, #0x0]
	b		_08314482
_083143ac:
	ldr		r3, _08314454
	add		r7, r3, #0x0
	add		r7, #0x24
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x40
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	add		r5, r2, #0x0
	cmp		r1, #0x0
	beq		_0831447c
	add		r1, r4, #0x0
	add		r1, #0xbc
	add		r0, r4, #0x0
	add		r0, #0xa8
	ldr		r0, [r0, #0x0]
	ldr		r6, _08314458
	add		r0, r0, r6
	ldr		r1, [r1, #0x0]
	cmp		r1, r0
	blt		_08314460
	add		r0, r4, #0x0
	add		r0, #0x84
	ldrb	r1, [r0, #0x0]
	add		r6, r0, #0x0
	cmp		r1, #0x8
	beq		_08314460
	ldr		r1, [r4, #0x48]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	bne		_08314482
	ldr		r2, _0831445c
	add		r0, r3, r2
	ldr		r0, [r0, #0x0]
	cmp		r0, r4
	bne		_0831440a
	mov		r0, #0x20
	and		r1, r0
	cmp		r1, #0x0
	bne		_0831440a
	mov		r0, #0x43
	bl		sub_08325e94
_0831440a:
	add		r0, r4, #0x0
	add		r0, #0xb0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	beq		_08314436
	mov		r3, #0xf1
	lsl		r3, r3, #0x3
	add		r0, r7, r3
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08314436
	mov		r1, #0x20
	ldrsh	r0, [r4, r1]
	mov		r2, #0x22
	ldrsh	r1, [r4, r2]
	mov		r3, #0x24
	ldrsh	r2, [r4, r3]
	sub		r2, #0x1
	lsl		r2, r2, #0x10
	asr		r2, r2, #0x10
	bl		sub_08324bb0
_08314436:
	add		r2, r4, #0x0
	add		r2, #0x7e
	mov		r1, #0x0
	mov		r0, #0xe
	strb	r0, [r2, #0x0]
	mov		r0, r8
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0xcc
	mov		r0, #0x30
	strh	r0, [r1, #0x0]
	mov		r0, #0xc
	strb	r0, [r6, #0x0]
	b		_0831446c

.incbin "base.gba", 0x314452, 0x2

_08314454:	.4byte 0x030031D0
_08314458:	.4byte 0xFF800000
_0831445c:	.4byte 0x000007AC

_08314460:
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	and		r0, r1
	cmp		r0, #0x0
	bne		_08314482
_0831446c:
	ldrh	r1, [r5, #0x0]
	ldr		r0, _08314478
	and		r0, r1
	strh	r0, [r5, #0x0]
	b		_08314482

.incbin "base.gba", 0x314476, 0x2

_08314478:	.4byte 0x0000FFBF

_0831447c:
	add		r0, r4, #0x0
	add		r0, #0x7e
	strb	r1, [r0, #0x0]
_08314482:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0831430c

	thumb_func_start sub_0831448c
sub_0831448c:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	ldr		r0, _083144d4
	lsl		r1, r1, #0x4
	add		r1, r1, r0
	ldrh	r4, [r1, #0xc]
	ldrh	r7, [r1, #0xe]
	add		r5, r6, #0x0
	add		r5, #0x82
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp		r0, #0x0
	ble		_083144be
	add		r0, r6, #0x0
	bl		sub_08314524
	mov		r2, #0x0
	ldrsh	r1, [r5, r2]
	lsl		r0, r7, #0x10
	asr		r0, r0, #0x10
	cmp		r1, r0
	ble		_083144be
	lsl		r0, r4, #0x10
	neg		r0, r0
	lsr		r4, r0, #0x10
_083144be:
	add		r1, r6, #0x0
	add		r1, #0x82
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	ldrh	r2, [r1, #0x0]
	add		r0, r0, r2
	strh	r0, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3144D2, 0x2

_083144d4:	.4byte 0x0202BCE4
	thumb_func_end sub_0831448c

	thumb_func_start sub_083144d8
sub_083144d8:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	ldr		r0, _08314520
	lsl		r1, r1, #0x4
	add		r1, r1, r0
	ldrh	r4, [r1, #0xc]
	ldrh	r7, [r1, #0xe]
	add		r5, r6, #0x0
	add		r5, #0x82
	mov		r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp		r0, #0x0
	bge		_0831450c
	add		r0, r6, #0x0
	bl		sub_08314524
	mov		r0, #0x0
	ldrsh	r1, [r5, r0]
	neg		r1, r1
	lsl		r0, r7, #0x10
	asr		r0, r0, #0x10
	cmp		r1, r0
	ble		_0831450c
	lsl		r0, r4, #0x10
	neg		r0, r0
	lsr		r4, r0, #0x10
_0831450c:
	add		r2, r6, #0x0
	add		r2, #0x82
	ldrh	r1, [r2, #0x0]
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	sub		r1, r1, r0
	strh	r1, [r2, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08314520:	.4byte 0x0202BCE4
	thumb_func_end sub_083144d8

	thumb_func_start sub_08314524
sub_08314524:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r4, #0xb4
	ldrh	r2, [r4, #0x0]
	mov		r1, #0x25
	neg		r1, r1
	and		r2, r1
	add		r0, #0x82
	ldrh	r3, [r0, #0x0]
	mov		r1, #0xc0
	lsl		r1, r1, #0x4
	add		r0, r3, r1
	lsl		r0, r0, #0x10
	ldr		r1, _08314564
	cmp		r0, r1
	bls		_08314548
	mov		r0, #0x4
	orr		r2, r0
_08314548:
	mov		r1, #0xc0
	lsl		r1, r1, #0x5
	add		r0, r3, r1
	lsl		r0, r0, #0x10
	ldr		r1, _08314568
	cmp		r0, r1
	bls		_0831455a
	mov		r0, #0x20
	orr		r2, r0
_0831455a:
	strh	r2, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x314562, 0x2

_08314564:	.4byte 0x17FF0000
_08314568:	.4byte 0x2FFF0000
	thumb_func_end sub_08314524

	thumb_func_start sub_0831456c
sub_0831456c:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	ldr		r0, _083145d4
	add		r7, r0, #0x0
	add		r7, #0x24
	add		r0, r6, #0x0
	add		r0, #0x90
	ldrb	r5, [r0, #0x0]
	ldrb	r1, [r0, #0x0]
	ldrh	r0, [r7, #0x14]
	sub		r0, #0x1
	cmp		r1, r0
	bne		_08314588
	sub		r5, #0x1
_08314588:
	lsl		r5, r5, #0x18
	lsr		r5, r5, #0x18
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_08311824
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	mov		r2, #0x0
	bl		sub_08311858
	add		r5, r0, #0x0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0xd
	lsl		r5, r5, #0x10
	asr		r5, r5, #0xd
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	add		r2, r5, #0x0
	mov		r3, #0x0
	bl		sub_08310f34
	add		r1, r6, #0x0
	add		r1, #0xa2
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x9e
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r5, [r0, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3145D2, 0x2

_083145d4:	.4byte 0x030031D0
	thumb_func_end sub_0831456c

	thumb_func_start sub_083145d8
sub_083145d8:
	push	{ r4, r5, r6, lr }
	mov		r12, r0
	mov		r2, r12
	add		r2, #0x7c
	add		r0, #0xa2
	ldrh	r4, [r2, #0x0]
	ldrh	r3, [r0, #0x0]
	sub		r0, r4, r3
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	add		r5, r1, #0x0
	mov		r6, #0x0
	cmp		r1, #0x0
	beq		_08314624
	lsl		r0, r1, #0x10
	cmp		r0, #0x0
	ble		_0831460c
	ldr		r0, _08314604
	cmp		r1, r0
	bls		_08314620
	ldr		r1, _08314608
	b		_08314616

_08314604:	.4byte 0x000001FF
_08314608:	.4byte 0xFFFFFEC0

_0831460c:
	ldr		r0, _0831461c
	cmp		r5, r0
	bhi		_08314620
	mov		r1, #0xa0
	lsl		r1, r1, #0x1
_08314616:
	add		r0, r4, r1
	strh	r0, [r2, #0x0]
	b		_08314622

_0831461c:	.4byte 0x0000FDFF

_08314620:
	strh	r3, [r2, #0x0]
_08314622:
	mov		r6, #0x1
_08314624:
	mov		r1, r12
	add		r1, #0x7c
	ldrh	r0, [r1, #0x0]
	mov		r2, r12
	add		r2, #0x56
	strh	r0, [r2, #0x0]
	ldrh	r1, [r1, #0x0]
	mov		r0, r12
	add		r0, #0x7a
	strh	r1, [r0, #0x0]
	mov		r0, #0x0
	cmp		r6, #0x0
	bne		_08314640
	mov		r0, #0x1
_08314640:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x314646, 0x142
	thumb_func_end sub_083145d8

	thumb_func_start sub_08314788
sub_08314788:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r1, r4, #0x0
	add		r1, #0x86
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x9
	bls		_083147b4
	add		r2, r4, #0x0
	add		r2, #0xbc
	ldr		r0, _0831480c
	ldrb	r1, [r1, #0x0]
	sub		r1, #0xa
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	ldr		r1, [r2, #0x0]
	cmp		r1, r0
	blt		_083147b4
	ldr		r3, _08314810
	add		r0, r1, r3
	str		r0, [r2, #0x0]
_083147b4:
	ldr		r0, _08314814
	ldr		r1, _08314818
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_083147de
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_083147de
	mov		r0, #0x20
	bl		sub_08325e94
	mov		r3, #0xcd
	lsl		r3, r3, #0x1
	add		r2, r4, r3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xef
	and		r0, r1
	strb	r0, [r2, #0x0]
_083147de:
	add		r1, r4, #0x0
	add		r1, #0x52
	mov		r0, #0xe0
	strh	r0, [r1, #0x0]
	add		r1, #0x26
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x8
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	orr		r0, r1
	str		r0, [r4, #0x48]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0831480c:	.4byte 0x0202BE68
_08314810:	.4byte 0xFFC00000
_08314814:	.4byte 0x030031D0
_08314818:	.4byte 0x000007AC
	thumb_func_end sub_08314788

	thumb_func_start sub_0831481c
sub_0831481c:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r2, r3, #0x0
	add		r2, #0xbc
	ldr		r1, [r2, #0x0]
	ldr		r0, _08314860
	cmp		r1, r0
	bgt		_08314830
	add		r0, #0x1
	str		r0, [r2, #0x0]
_08314830:
	add		r1, r3, #0x0
	add		r1, #0x52
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x0]
	add		r1, #0x26
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	add		r2, r3, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0x8
	add		r0, r4, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r0, [r3, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	orr		r0, r1
	str		r0, [r3, #0x48]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08314860:	.4byte 0x00FFFFFF
	thumb_func_end sub_0831481c

	thumb_func_start sub_08314864
sub_08314864:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	ldr		r0, _08314890
	add		r7, r0, #0x0
	add		r7, #0x24
	mov		r9, r7
	add		r0, r5, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x9
	bls		_08314884
	bl		sub_083152e4
_08314884:
	lsl		r0, r0, #0x2
	ldr		r1, _08314894
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x31488E, 0x2

_08314890:	.4byte 0x030031D0
_08314894:	.4byte 0x0200E898

.incbin "base.gba", 0x314898, 0xA4C
	thumb_func_end sub_08314864

	thumb_func_start sub_083152e4
sub_083152e4:
	add		r0, r5, #0x0
	bl		sub_08312f0c
	add		r0, r5, #0x0
	add		r0, #0x4e
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	ldr		r0, [r5, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x7
	orr		r0, r1
	str		r0, [r5, #0x48]
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_083152e4

	thumb_func_start sub_0831530c
sub_0831530c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	ldr		r0, _08315350
	mov		r12, r0
	mov		r1, #0x24
	add		r1, r12
	mov		r9, r1
	add		r7, r4, #0x0
	add		r7, #0xb4
	ldrh	r6, [r7, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x2
	mov		r8, r2
	mov		r0, r8
	and		r0, r6
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x0
	beq		_08315354
	add		r1, r4, #0x0
	add		r1, #0x7e
	mov		r2, #0x0
	mov		r0, #0xd
	strb	r0, [r1, #0x0]
	add		r1, #0x6
	mov		r0, #0xa
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x88
	strh	r2, [r0, #0x0]
	b		_08315602

_08315350:	.4byte 0x030031D0

_08315354:
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r6
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	cmp		r3, #0x0
	beq		_08315398
	add		r0, r4, #0x0
	add		r0, #0x82
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	mov		r1, #0x8
	cmp		r0, #0x0
	bge		_08315372
	mov		r1, #0x7
_08315372:
	add		r0, r4, #0x0
	add		r0, #0x7e
	strb	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	ldrh	r1, [r7, #0x0]
	ldr		r0, _08315394
	and		r0, r1
	strh	r0, [r7, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x88
	strh	r2, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0xb8
	mov		r0, #0x3c
	strh	r0, [r1, #0x0]
	b		_08315602

_08315394:	.4byte 0x0000E7FF

_08315398:
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	and		r0, r6
	cmp		r0, #0x0
	beq		_083153ec
	add		r1, r4, #0x0
	add		r1, #0xbc
	ldr		r0, [r1, #0x0]
	mov		r2, #0xe0
	lsl		r2, r2, #0x12
	cmp		r0, r2
	ble		_083153b2
	str		r2, [r1, #0x0]
_083153b2:
	add		r0, r4, #0x0
	add		r0, #0x84
	strb	r3, [r0, #0x0]
	add		r0, #0x44
	mov		r2, #0x3c
	strh	r2, [r0, #0x0]
	sub		r0, #0x46
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r1, #0x6
	cmp		r0, #0x0
	bge		_083153cc
	mov		r1, #0x5
_083153cc:
	add		r0, r4, #0x0
	add		r0, #0x7e
	strb	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r3, [r0, #0x0]
	add		r0, #0x8
	strh	r3, [r0, #0x0]
	add		r0, #0x30
	strh	r2, [r0, #0x0]
	ldrh	r1, [r7, #0x0]
	ldr		r0, _083153e8
	and		r0, r1
	strh	r0, [r7, #0x0]
	b		_08315602

_083153e8:	.4byte 0x0000E7FF

_083153ec:
	add		r1, r4, #0x0
	add		r1, #0xb2
	ldrh	r2, [r1, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x8
	add		r0, r3, #0x0
	and		r0, r2
	add		r5, r1, #0x0
	cmp		r0, #0x0
	beq		_08315470
	ldr		r1, _08315464
	add		r3, r4, #0x0
	add		r3, #0x7e
	ldrb	r0, [r3, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r2, [r0, #0x0]
	cmp		r2, #0x0
	beq		_08315414
	b		_08315602
_08315414:
	add		r1, r4, #0x0
	add		r1, #0xcc
	mov		r0, #0x32
	strh	r0, [r1, #0x0]
	mov		r0, #0xe
	strb	r0, [r3, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x80
	strh	r2, [r0, #0x0]
	ldrh	r1, [r5, #0x0]
	ldr		r0, _08315468
	and		r0, r1
	strh	r0, [r5, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xb0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	beq		_08315458
	ldr		r0, _0831546c
	add		r0, r12
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08315458
	mov		r2, #0x20
	ldrsh	r0, [r4, r2]
	mov		r3, #0x22
	ldrsh	r1, [r4, r3]
	mov		r3, #0x24
	ldrsh	r2, [r4, r3]
	sub		r2, #0x1
	lsl		r2, r2, #0x10
	asr		r2, r2, #0x10
	bl		sub_08324b68
_08315458:
	mov		r0, #0xf1
	lsl		r0, r0, #0x3
	add		r0, r9
	ldr		r0, [r0, #0x0]
	b		_083154d2

.incbin "base.gba", 0x315462, 0x2

_08315464:	.4byte 0x0202BE80
_08315468:	.4byte 0x00007FFF
_0831546c:	.4byte 0x000007AC

_08315470:
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	and		r0, r2
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	cmp		r1, #0x0
	beq		_0831549c
	mov		r0, #0x2
	orr		r0, r6
	strh	r0, [r7, #0x0]
	ldrh	r1, [r5, #0x0]
	ldr		r0, _08315498
	and		r0, r1
	strh	r0, [r5, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x84
	mov		r0, #0x9
	strb	r0, [r1, #0x0]
	b		_08315602

.incbin "base.gba", 0x315496, 0x2

_08315498:	.4byte 0x0000DFFF

_0831549c:
	mov		r6, #0x1
	add		r0, r6, #0x0
	and		r0, r2
	cmp		r0, #0x0
	beq		_08315518
	strh	r1, [r5, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xcc
	mov		r1, #0x18
	strh	r1, [r0, #0x0]
	ldr		r5, _08315510
	add		r5, r12
	ldr		r0, [r5, #0x0]
	cmp		r4, r0
	bne		_083154d0
	mov		r1, #0x20
	ldrsh	r0, [r4, r1]
	mov		r2, #0x22
	ldrsh	r1, [r4, r2]
	mov		r3, #0x24
	ldrsh	r2, [r4, r3]
	sub		r2, #0x1
	lsl		r2, r2, #0x10
	asr		r2, r2, #0x10
	bl		sub_08324b68
_083154d0:
	ldr		r0, [r5, #0x0]
_083154d2:
	cmp		r0, r4
	bne		_083154e6
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_083154e6
	mov		r0, #0x26
	bl		sub_08325e94
_083154e6:
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x80
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x84
	mov		r0, #0x8
	strb	r0, [r1, #0x0]
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_08315506
	b		_08315602
_08315506:
	ldr		r0, _08315514
	and		r0, r1
	strh	r0, [r2, #0x0]
	b		_08315602

.incbin "base.gba", 0x31550E, 0x2

_08315510:	.4byte 0x000007AC
_08315514:	.4byte 0x0000FFDE

_08315518:
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r2
	cmp		r0, #0x0
	beq		_0831558c
	ldr		r0, _08315558
	and		r0, r2
	strh	r0, [r5, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x52
	mov		r0, #0xf0
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	str		r2, [r4, #0x8]
	add		r1, #0x2c
	mov		r0, #0xc
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	mov		r0, r8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08315566
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831555c
	strh	r3, [r7, #0x0]
	b		_08315574

_08315558:	.4byte 0x0000BFFF

_0831555c:
	mov		r1, r12
	ldr		r0, [r1, #0x10]
	and		r0, r6
	cmp		r0, #0x0
	beq		_0831556e
_08315566:
	mov		r0, #0xa0
	lsl		r0, r0, #0x8
	strh	r0, [r7, #0x0]
	b		_08315574
_0831556e:
	add		r0, r4, #0x0
	add		r0, #0xb4
	strh	r3, [r0, #0x0]
_08315574:
	add		r0, r4, #0x0
	add		r0, #0x84
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	sub		r0, #0xc
	strb	r1, [r0, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	orr		r0, r1
	str		r0, [r4, #0x48]
	b		_08315602
_0831558c:
	mov		r3, #0x80
	add		r0, r3, #0x0
	and		r0, r2
	cmp		r0, #0x0
	beq		_083155a8
	ldr		r0, _083155a4
	and		r0, r2
	strh	r0, [r5, #0x0]
	add		r0, r4, #0x0
	bl		sub_0831481c
	b		_08315602

_083155a4:	.4byte 0x0000FF7F

_083155a8:
	ldr		r1, [r4, #0x48]
	add		r0, r1, #0x0
	and		r0, r3
	cmp		r0, #0x0
	bne		_083155d6
	add		r0, r4, #0x0
	add		r0, #0x96
	ldrh	r2, [r0, #0x0]
	mov		r0, #0x24
	and		r0, r2
	cmp		r0, #0x4
	beq		_083155c8
	mov		r0, #0x18
	and		r0, r2
	cmp		r0, #0x8
	bne		_083155d0
_083155c8:
	add		r0, r4, #0x0
	bl		sub_08314788
	b		_083155d6
_083155d0:
	ldr		r0, _08315610
	and		r1, r0
	str		r1, [r4, #0x48]
_083155d6:
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08315602
	ldr		r0, _08315614
	and		r0, r1
	strh	r0, [r5, #0x0]
	mov		r0, #0xf1
	lsl		r0, r0, #0x3
	add		r0, r9
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08315602
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08315602
	mov		r0, #0x34
	bl		sub_08325e94
_08315602:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31560E, 0x2

_08315610:	.4byte 0xFFFFF7FF
_08315614:	.4byte 0x0000FFFD
	thumb_func_end sub_0831530c

	thumb_func_start sub_08315618
sub_08315618:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	ldr		r0, [r6, #0x48]
	ldr		r1, _08315654
	and		r0, r1
	str		r0, [r6, #0x48]
	add		r4, r6, #0x0
	add		r4, #0x4e
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp		r0, #0x0
	bne		_08315658
	add		r0, r6, #0x0
	add		r0, #0x50
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	add		r7, r0, #0x0
	cmp		r2, #0x0
	bne		_08315658
	add		r0, #0x2c
	ldrh	r0, [r0, #0x0]
	add		r1, r6, #0x0
	add		r1, #0x7a
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x80
	strh	r2, [r0, #0x0]
	add		r5, r6, #0x0
	add		r5, #0xbc
	b		_08315698

_08315654:	.4byte 0xffffefff

_08315658:
	add		r4, r6, #0x0
	add		r4, #0x4e
	add		r5, r6, #0x0
	add		r5, #0x50
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	mov		r2, #0x0
	ldrsh	r1, [r5, r2]
	bl		sub_0830e808
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	add		r0, r6, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	add		r7, r5, #0x0
	add		r2, r6, #0x0
	add		r2, #0x7c
	add		r5, r0, #0x0
	cmp		r1, #0x0
	blt		_083156be
	ldrh	r0, [r2, #0x0]
	sub		r0, r3, r0
	add		r1, r6, #0x0
	add		r1, #0x80
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x84
	mov		r1, #0xb
	strb	r1, [r0, #0x0]
	sub		r0, #0x6
	strb	r1, [r0, #0x0]
_08315698:
	add		r1, r6, #0x0
	add		r1, #0x92
	ldrh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x11
	strh	r0, [r1, #0x0]
	cmp		r0, #0xff
	bgt		_083156ae
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x0]
_083156ae:
	mov		r1, #0x0
	ldrsh	r0, [r4, r1]
	mov		r2, #0x0
	ldrsh	r1, [r7, r2]
	bl		sub_0830e7ac
	lsl		r0, r0, #0x10
	str		r0, [r5, #0x0]
_083156be:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08315618

	thumb_func_start sub_083156c4
sub_083156c4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x48]
	ldr		r1, _08315718
	and		r0, r1
	str		r0, [r4, #0x48]
	add		r2, r4, #0x0
	add		r2, #0x4e
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	cmp		r0, #0x0
	bne		_083156e8
	add		r0, r4, #0x0
	add		r0, #0x50
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x0
	beq		_08315712
_083156e8:
	add		r1, r4, #0x0
	add		r1, #0x50
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	bl		sub_0830e808
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	add		r1, r4, #0x0
	add		r1, #0x56
	ldrh	r1, [r1, #0x0]
	sub		r0, r0, r1
	add		r2, r4, #0x0
	add		r2, #0x82
	strh	r0, [r2, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x84
	mov		r0, #0xb
	strb	r0, [r1, #0x0]
_08315712:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08315718:	.4byte 0xffffefff
	thumb_func_end sub_083156c4

	thumb_func_start sub_0831571c
sub_0831571c:
	push	{ r4, r5, r6, r7, lr }
	add		r3, r0, #0x0
	add		r4, r3, #0x0
	add		r4, #0xb4
	ldrh	r7, [r4, #0x0]
	mov		r0, #0x1
	and		r0, r7
	cmp		r0, #0x0
	beq		_08315788
	add		r0, r3, #0x0
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	mov		r6, #0x40
	neg		r6, r6
	cmp		r0, #0x0
	beq		_08315744
	add		r6, #0x30
_08315744:
	add		r2, r3, #0x0
	add		r2, #0x92
	ldrh	r5, [r2, #0x0]
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	ldr		r0, _08315764
	cmp		r1, r0
	ble		_08315768
	add		r0, r5, r6
	strh	r0, [r2, #0x0]
	ldrh	r1, [r4, #0x0]
	mov		r0, #0x20
	orr		r0, r1
	strh	r0, [r4, #0x0]
	b		_08315788

.incbin "base.gba", 0x315762, 0x2

_08315764:	.4byte 0x000001FF

_08315768:
	ldr		r0, _08315790
	and		r0, r7
	strh	r0, [r4, #0x0]
	add		r2, r3, #0x0
	add		r2, #0xb2
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08315794
	and		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0xcd
	lsl		r0, r0, #0x1
	add		r2, r3, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xef
	and		r0, r1
	strb	r0, [r2, #0x0]
_08315788:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31578E, 0x2

_08315790:	.4byte 0x0000FFDE
_08315794:	.4byte 0x0000FFFD
	thumb_func_end sub_0831571c

	thumb_func_start sub_08315798
sub_08315798:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	add		r0, r6, #0x0
	bl		sub_08311a24
	cmp		r0, #0x0
	bne		_08315890
	add		r0, r4, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_083157b6
	cmp		r0, #0x7
	bne		_08315890
_083157b6:
	ldr		r0, _08315834
	add		r1, r4, #0x0
	add		r1, #0x7e
	ldrb	r1, [r1, #0x0]
	lsl		r1, r1, #0x2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_08315890
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_08316514
	add		r1, r4, #0x0
	add		r1, #0x56
	ldrh	r1, [r1, #0x0]
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_08316514
	add		r1, r4, #0x0
	add		r1, #0x7a
	ldrh	r1, [r1, #0x0]
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	lsl		r0, r5, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_083157fa
	neg		r0, r0
_083157fa:
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08315808
	neg		r0, r0
_08315808:
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	add		r0, r4, #0x0
	add		r0, #0xb0
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	bne		_0831583c
	ldr		r1, [r4, #0x48]
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	beq		_08315890
	ldr		r0, _08315838
	and		r1, r0
	str		r1, [r4, #0x48]
	add		r2, r4, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x4
	b		_0831588a

_08315834:	.4byte 0x0202BE80
_08315838:	.4byte 0xfffffbff

_0831583c:
	ldr		r2, [r4, #0x48]
	mov		r6, #0x80
	lsl		r6, r6, #0x3
	add		r0, r2, #0x0
	and		r0, r6
	cmp		r0, #0x0
	beq		_0831586c
	lsl		r1, r5, #0x10
	ldr		r0, _08315864
	cmp		r1, r0
	bgt		_08315890
	ldr		r0, _08315868
	and		r2, r0
	str		r2, [r4, #0x48]
	add		r2, r4, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x4
	b		_0831588a

_08315864:	.4byte 0x2FFF0000
_08315868:	.4byte 0xfffffbff

_0831586c:
	lsl		r1, r5, #0x10
	ldr		r0, _08315898
	cmp		r1, r0
	ble		_08315890
	lsl		r1, r3, #0x10
	ldr		r0, _0831589c
	cmp		r1, r0
	ble		_08315890
	orr		r2, r6
	str		r2, [r4, #0x48]
	add		r2, r4, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x5
_0831588a:
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
_08315890:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x315896, 0x2

_08315898:	.4byte 0x67FF0000
_0831589c:	.4byte 0x57FF0000
	thumb_func_end sub_08315798

	thumb_func_start sub_083158a0
sub_083158a0:
	add		r2, r0, #0x0
	add		r0, #0x60
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_083158d8
	ldrh	r0, [r2, #0x38]
	cmp		r0, #0x0
	beq		_083158bc
	sub		r0, #0x1
	strh	r0, [r2, #0x38]
	b		_083158d8
_083158bc:
	add		r1, r2, #0x0
	add		r1, #0x62
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_083158d4
	ldr		r0, [r2, #0x48]
	ldr		r1, _083158d0
	and		r0, r1
	b		_083158e0

.incbin "base.gba", 0x3158CE, 0x2

_083158d0:	.4byte 0xffffbfff

_083158d4:
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
_083158d8:
	ldr		r0, [r2, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x7
	orr		r0, r1
_083158e0:
	str		r0, [r2, #0x48]
	bx		lr
	thumb_func_end sub_083158a0

	thumb_func_start sub_083158e4
sub_083158e4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	cmp		r2, #0x7
	bhi		_083159c2
	lsl		r0, r2, #0x2
	ldr		r1, _08315900
	add		r1, r0, r1
	ldr		r1, [r1, #0x0]
	mov		r9, r0
	mov		pc, r1

_08315900:	.4byte 0x0200F904

.incbin "base.gba", 0x315904, 0xBE

_083159c2:
	add		r1, r6, #0x0
	add		r1, #0x5a
	ldr		r0, _083159d8
	strh	r0, [r1, #0x0]
	mov		r0, #0x1
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_083159d8:	.4byte 0x0000C007
	thumb_func_end sub_083158e4

	thumb_func_start sub_083159dc
sub_083159dc:
	push	{ lr }
	add		r3, r0, #0x0
	cmp		r2, #0x1
	beq		_08315a0a
	cmp		r2, #0x1
	bgt		_083159ee
	cmp		r2, #0x0
	beq		_083159f6
	b		_08315a14
_083159ee:
	cmp		r2, #0x2
	beq		_08315a00
	cmp		r2, #0x3
	bne		_08315a14
_083159f6:
	add		r2, r3, #0x0
	add		r2, #0x4e
	ldrh	r0, [r2, #0x0]
	neg		r0, r0
	strh	r0, [r2, #0x0]
_08315a00:
	add		r0, r3, #0x0
	mov		r2, #0x2
	bl		sub_083158e4
	b		_08315a16
_08315a0a:
	add		r0, r3, #0x0
	mov		r2, #0x0
	bl		sub_083158e4
	b		_08315a16
_08315a14:
	mov		r0, #0x1
_08315a16:
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x315A1A, 0x2
	thumb_func_end sub_083159dc

	thumb_func_start sub_08315a1c
sub_08315a1c:
	push	{ r4, r5, r6, lr }
	add		r2, r0, #0x0
	ldr		r0, _08315a5c
	add		r5, r0, #0x0
	add		r5, #0x24
	ldr		r1, [r2, #0x0]
	cmp		r1, #0x0
	bge		_08315a30
	ldr		r0, _08315a60
	add		r1, r1, r0
_08315a30:
	asr		r6, r1, #0x10
	ldr		r0, [r2, #0x4]
	cmp		r0, #0x0
	bge		_08315a3c
	ldr		r1, _08315a60
	add		r0, r0, r1
_08315a3c:
	asr		r4, r0, #0x10
	add		r0, r5, #0x0
	bl		sub_08311948
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x8
	beq		_08315a64
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	mov		r3, #0x0
	bl		sub_083119bc
	b		_08315a70

.incbin "base.gba", 0x315A5A, 0x2

_08315a5c:	.4byte 0x030031D0
_08315a60:	.4byte 0x0000FFFF

_08315a64:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	add		r2, r4, #0x0
	mov		r3, #0x8
	bl		sub_083119bc
_08315a70:
	ldr		r0, _08315a84
	ldr		r1, _08315a88
	add		r0, r0, r1
	ldrh	r2, [r0, #0x0]
	mov		r1, #0x1
	orr		r1, r2
	strh	r1, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08315a84:	.4byte 0x030031D0
_08315a88:	.4byte 0x00000B86
	thumb_func_end sub_08315a1c

	thumb_func_start sub_08315a8c
sub_08315a8c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	add		r0, #0x85
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x8f
	bhi		_08315b64
	cmp		r0, #0x81
	bls		_08315b64
	cmp		r0, #0x84
	beq		_08315aac
	add		r0, r7, #0x0
	bl		sub_08315a1c
	b		_08315b64
_08315aac:
	add		r0, r7, #0x0
	bl		sub_08315a1c
	ldr		r0, _08315b50
	add		r1, r7, #0x0
	add		r1, #0xbc
	ldr		r4, [r1, #0x0]
	ldr		r1, _08315b54
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r7, r0
	bne		_08315b40
	ldr		r0, [r7, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08315b40
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_08315ad6
	neg		r0, r4
_08315ad6:
	lsl		r0, r0, #0x6
	lsr		r0, r0, #0x16
	ldr		r1, _08315b58
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	add		r1, r4, #0x0
	cmp		r1, #0x0
	bge		_08315aea
	neg		r1, r1
_08315aea:
	asr		r4, r1, #0x14
	mov		r0, #0x3f
	and		r4, r0
	add		r4, #0xc0
	lsl		r6, r6, #0x10
	asr		r6, r6, #0x10
	mov		r0, #0x2b
	bl		sub_08325e94
	ldr		r0, _08315b5c
	mov		r8, r0
	ldr		r5, _08315b60
	mov		r1, #0xac
	lsl		r1, r1, #0x1
	add		r5, r5, r1
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_08326084
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r4, #0x0
	bl		sub_08326df4
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08326e5c
_08315b40:
	add		r0, r7, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_08315b64
	mov		r0, #0x0
	b		_08315b66

_08315b50:	.4byte 0x030031D0
_08315b54:	.4byte 0x000007AC
_08315b58:	.4byte 0xFFFFFE00
_08315b5c:	.4byte 0x0202E890
_08315b60:	.4byte 0x0202E8F0

_08315b64:
	mov		r0, #0x1
_08315b66:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08315a8c

	thumb_func_start sub_08315b70
sub_08315b70:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r7, r0, #0x0
	mov		r10, r1
	ldr		r1, [r7, #0x8]
	mov		r2, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	cmp		r1, r0
	ble		_08315b8c
	mov		r2, #0x1
_08315b8c:
	cmp		r2, #0x0
	beq		_08315b92
	b		_08315de2
_08315b92:
	ldr		r1, [r7, #0x0]
	ldr		r2, [r7, #0x4]
	mov		r0, r10
	mov		r3, #0x0
	bl		sub_0831196c
	add		r4, r0, #0x0
	cmp		r4, #0x0
	beq		_08315bba
	ldr		r0, [r7, #0x48]
	mov		r1, #0x1
	orr		r0, r1
	str		r0, [r7, #0x48]
	mov		r0, r10
	mov		r1, #0x0
	bl		sub_08310f24
	add		r1, r7, #0x0
	add		r1, #0x85
	b		_08315de8
_08315bba:
	ldr		r0, [r7, #0x0]
	cmp		r0, #0x0
	bge		_08315bc4
	ldr		r1, _08315c64
	add		r0, r0, r1
_08315bc4:
	lsr		r1, r0, #0x10
	ldr		r2, [r7, #0x4]
	cmp		r2, #0x0
	bge		_08315bd0
	ldr		r0, _08315c64
	add		r2, r2, r0
_08315bd0:
	asr		r2, r2, #0x10
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08315bda
	add		r0, r2, #0x7
_08315bda:
	asr		r0, r0, #0x3
	lsl		r3, r0, #0x8
	lsl		r0, r1, #0x10
	asr		r1, r0, #0x10
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08315bea
	add		r0, r1, #0x7
_08315bea:
	asr		r0, r0, #0x3
	add		r3, r3, r0
	mov		r9, r3
	mov		r0, r10
	mov		r3, #0x0
	bl		sub_08311014
	add		r5, r7, #0x0
	add		r5, #0x85
	strb	r0, [r5, #0x0]
	mov		r1, #0x90
	and		r1, r0
	cmp		r1, #0x80
	beq		_08315c08
	b		_08315dce
_08315c08:
	add		r0, r7, #0x0
	bl		sub_08315a8c
	cmp		r0, #0x0
	bne		_08315c14
	b		_08315dea
_08315c14:
	add		r0, r7, #0x0
	add		r0, #0x7e
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x5
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	bhi		_08315c68
	add		r2, r7, #0x0
	add		r2, #0x4e
	ldrh	r3, [r2, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	add		r1, r7, #0x0
	add		r1, #0x50
	cmp		r0, #0x0
	bne		_08315c3e
	mov		r4, #0x0
	ldrsh	r0, [r1, r4]
	cmp		r0, #0x0
	beq		_08315c58
_08315c3e:
	neg		r0, r3
	strh	r0, [r2, #0x0]
	ldrh	r0, [r1, #0x0]
	neg		r0, r0
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0xa
	orr		r0, r1
	str		r0, [r7, #0x48]
	add		r0, r7, #0x0
	bl		sub_08317f6c
_08315c58:
	add		r1, r7, #0x0
	add		r1, #0x60
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	b		_08315dec

.incbin "base.gba", 0x315C62, 0x2

_08315c64:	.4byte 0x0000FFFF

_08315c68:
	add		r1, r7, #0x0
	add		r1, #0x62
	mov		r0, #0x8
	strh	r0, [r1, #0x0]
	add		r0, r7, #0x0
	add		r0, #0x9c
	strh	r4, [r0, #0x0]
	add		r2, r7, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08315c9c
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r4, _08315ca0
	add		r4, #0x24
	mov		r0, r10
	bl		sub_08311948
	lsl		r0, r0, #0x18
	lsr		r1, r0, #0x18
	mov		r8, r4
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x84
	bne		_08315ca4
	mov		r3, #0x2b
	b		_08315cb2

_08315c9c:	.4byte 0x0000FFBF
_08315ca0:	.4byte 0x030031D0

_08315ca4:
	cmp		r1, #0x0
	beq		_08315cac
	cmp		r1, #0xc
	bne		_08315cb0
_08315cac:
	mov		r3, #0x3c
	b		_08315cb2
_08315cb0:
	mov		r3, #0x3b
_08315cb2:
	lsl		r3, r3, #0x10
	mov		r5, #0x0
	ldr		r2, _08315d94
	ldr		r1, _08315d98
	lsr		r0, r3, #0xd
	add		r6, r0, r1
	ldrh	r1, [r6, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_08315cda
	ldr		r1, [r1, #0x0]
	ldr		r0, [r6, #0x0]
	cmp		r1, r0
	bne		_08315cda
	mov		r5, #0x1
_08315cda:
	cmp		r5, #0x0
	bne		_08315d6c
	lsr		r5, r3, #0x10
	add		r0, r7, #0x0
	add		r0, #0xbc
	ldr		r4, [r0, #0x0]
	mov		r0, #0xf1
	lsl		r0, r0, #0x3
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r7, r0
	bne		_08315d6c
	ldr		r0, [r7, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08315d6c
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_08315d04
	neg		r0, r4
_08315d04:
	lsl		r0, r0, #0x6
	lsr		r0, r0, #0x16
	ldr		r1, _08315d9c
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	add		r0, r4, #0x0
	cmp		r0, #0x0
	bge		_08315d18
	neg		r0, r0
_08315d18:
	asr		r4, r0, #0x14
	mov		r0, #0x3f
	and		r4, r0
	add		r4, #0xc0
	lsl		r6, r6, #0x10
	asr		r6, r6, #0x10
	add		r0, r5, #0x0
	bl		sub_08325e94
	ldr		r2, _08315d94
	mov		r8, r2
	ldr		r0, _08315d98
	lsl		r5, r5, #0x3
	add		r5, r5, r0
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_08326084
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r4, #0x0
	bl		sub_08326df4
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08326e5c
_08315d6c:
	add		r1, r7, #0x0
	add		r1, #0x5e
	ldrh	r0, [r1, #0x0]
	mov		r4, r9
	sub		r0, r4, r0
	strh	r4, [r1, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08315da4
	neg		r0, r0
	lsl		r0, r0, #0x10
	ldr		r1, _08315da0
	add		r0, r0, r1
	lsr		r2, r0, #0x10
	cmp		r0, #0x0
	bge		_08315db6
	mov		r2, #0x4
	b		_08315db6

.incbin "base.gba", 0x315D92, 0x2

_08315d94:	.4byte 0x0202E890
_08315d98:	.4byte 0x0202E8F0
_08315d9c:	.4byte 0xFFFFFE00
_08315da0:	.4byte 0xFF060000

_08315da4:
	sub		r0, #0x1
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_08315db6
	sub		r0, #0xfd
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_08315db6:
	lsl		r2, r2, #0x10
	lsr		r0, r2, #0x10
	cmp		r0, #0x7
	bls		_08315dc2
	mov		r0, #0x1
	b		_08315dec
_08315dc2:
	asr		r2, r2, #0x10
	add		r0, r7, #0x0
	mov		r1, r10
	bl		sub_083158e4
	b		_08315dec
_08315dce:
	ldr		r0, [r7, #0x48]
	mov		r1, #0x2
	neg		r1, r1
	and		r0, r1
	str		r0, [r7, #0x48]
	add		r0, r7, #0x0
	add		r0, #0x5e
	mov		r2, r9
	strh	r2, [r0, #0x0]
	b		_08315dea
_08315de2:
	add		r1, r7, #0x0
	add		r1, #0x85
	mov		r0, #0x40
_08315de8:
	strb	r0, [r1, #0x0]
_08315dea:
	mov		r0, #0x0
_08315dec:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x315DFA, 0x2
	thumb_func_end sub_08315b70

	thumb_func_start sub_08315dfc
sub_08315dfc:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	add		r4, r5, #0x0
	add		r4, #0x60
	ldrh	r1, [r4, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	beq		_08315e14
	b		_08315f4c
_08315e14:
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	bl		sub_08315b70
	cmp		r0, #0x0
	beq		_08315e4e
	ldrh	r2, [r4, #0x0]
	ldrb	r1, [r4, #0x0]
	mov		r0, #0xff
	lsl		r0, r0, #0x8
	and		r0, r2
	strh	r0, [r4, #0x0]
	add		r1, #0x1
	lsl		r1, r1, #0x18
	lsr		r2, r1, #0x18
	ldrh	r1, [r4, #0x0]
	cmp		r2, #0x7
	bhi		_08315e3e
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	b		_08315e42
_08315e3e:
	mov		r0, #0xc0
	lsl		r0, r0, #0x8
_08315e42:
	orr		r1, r0
	orr		r1, r2
	add		r0, r5, #0x0
	add		r0, #0x60
	strh	r1, [r0, #0x0]
	b		_08315f92
_08315e4e:
	ldrh	r1, [r4, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08315f3c
	ldr		r0, [r5, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r5, #0x48]
	add		r4, r5, #0x0
	add		r4, #0x4e
	mov		r0, #0x0
	ldrsh	r2, [r4, r0]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08315e74
	neg		r0, r2
_08315e74:
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	add		r0, r5, #0x0
	add		r0, #0x50
	mov		r6, #0x0
	ldrsh	r1, [r0, r6]
	add		r6, r0, #0x0
	cmp		r1, #0x0
	bge		_08315e88
	neg		r1, r1
_08315e88:
	lsl		r0, r1, #0x10
	lsr		r1, r0, #0x10
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0xbf
	bgt		_08315e9c
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0xbf
	ble		_08315f0c
_08315e9c:
	add		r0, r5, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	ldr		r0, _08315ec4
	cmp		r1, r0
	ble		_08315ec8
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08315eb0
	add		r0, r2, #0x3
_08315eb0:
	asr		r0, r0, #0x2
	strh	r0, [r4, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp		r0, #0x0
	bge		_08315ebe
	add		r0, #0x3
_08315ebe:
	asr		r0, r0, #0x2
	strh	r0, [r6, #0x0]
	b		_08315f3c

_08315ec4:	.4byte 0x04FFFFFF

_08315ec8:
	ldr		r0, _08315f04
	add		r3, r5, #0x0
	add		r3, #0x5c
	ldrh	r1, [r3, #0x0]
	lsl		r1, r1, #0x1
	add		r0, r1, r0
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mul		r0, r2
	cmp		r0, #0x0
	bge		_08315ee0
	add		r0, #0xff
_08315ee0:
	asr		r0, r0, #0x8
	strh	r0, [r4, #0x0]
	mov		r0, #0x0
	ldrsh	r2, [r6, r0]
	ldr		r1, _08315f08
	ldrh	r0, [r3, #0x0]
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mul		r0, r2
	cmp		r0, #0x0
	bge		_08315efc
	add		r0, #0xff
_08315efc:
	asr		r0, r0, #0x8
	strh	r0, [r6, #0x0]
	b		_08315f3c

.incbin "base.gba", 0x315F02, 0x2

_08315f04:	.4byte 0x0202C070
_08315f08:	.4byte 0x0202C078

_08315f0c:
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	cmp		r0, #0x0
	beq		_08315f24
	ldr		r2, _08315f48
	add		r1, r2, #0x0
	cmp		r0, #0x0
	blt		_08315f22
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r1, r0, #0x0
_08315f22:
	strh	r1, [r4, #0x0]
_08315f24:
	mov		r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp		r0, #0x0
	beq		_08315f3c
	ldr		r2, _08315f48
	add		r1, r2, #0x0
	cmp		r0, #0x0
	blt		_08315f3a
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	add		r1, r0, #0x0
_08315f3a:
	strh	r1, [r6, #0x0]
_08315f3c:
	add		r1, r5, #0x0
	add		r1, #0x60
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	b		_08315f92

.incbin "base.gba", 0x315F46, 0x2

_08315f48:	.4byte 0xFFFFFF00

_08315f4c:
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	bl		sub_08315b70
	cmp		r0, #0x0
	beq		_08315f90
	add		r0, r5, #0x0
	add		r0, #0x56
	ldrh	r1, [r0, #0x0]
	lsr		r1, r1, #0xe
	ldr		r0, _08315f88
	lsl		r1, r1, #0x1
	add		r0, r1, r0
	ldrh	r0, [r0, #0x0]
	add		r3, r5, #0x0
	add		r3, #0x4e
	mov		r2, #0x0
	strh	r0, [r3, #0x0]
	ldr		r0, _08315f8c
	add		r1, r1, r0
	ldrh	r1, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0x50
	strh	r1, [r0, #0x0]
	add		r0, #0xa
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	b		_08315f92

.incbin "base.gba", 0x315F86, 0x2

_08315f88:	.4byte 0x0202C060
_08315f8c:	.4byte 0x0202C068

_08315f90:
	strh	r0, [r4, #0x0]
_08315f92:
	ldr		r1, [r5, #0x8]
	mov		r2, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	cmp		r1, r0
	ble		_08315fa0
	mov		r2, #0x1
_08315fa0:
	cmp		r2, #0x0
	bne		_08316018
	ldr		r1, [r5, #0x0]
	ldr		r2, [r5, #0x4]
	add		r0, r7, #0x0
	mov		r3, #0x0
	bl		sub_0831196c
	cmp		r0, #0x0
	beq		_08315fcc
	ldr		r0, [r5, #0x48]
	mov		r1, #0x1
	orr		r0, r1
	str		r0, [r5, #0x48]
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_08310f24
	add		r1, r5, #0x0
	add		r1, #0x85
	strb	r0, [r1, #0x0]
	b		_08316018
_08315fcc:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bge		_08315fd6
	ldr		r1, _08316024
	add		r0, r0, r1
_08315fd6:
	lsr		r2, r0, #0x10
	ldr		r0, [r5, #0x4]
	cmp		r0, #0x0
	bge		_08315fe2
	ldr		r6, _08316024
	add		r0, r0, r6
_08315fe2:
	lsr		r3, r0, #0x10
	add		r0, r5, #0x0
	add		r0, #0x85
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x90
	and		r0, r1
	cmp		r0, #0x90
	bne		_08316018
	lsl		r0, r2, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08315ffc
	add		r0, #0x7
_08315ffc:
	asr		r0, r0, #0x3
	lsl		r0, r0, #0x3
	add		r1, r0, #0x4
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_0831600c
	add		r0, #0x7
_0831600c:
	asr		r2, r0, #0x3
	lsl		r2, r2, #0x3
	add		r2, #0x4
	add		r0, r5, #0x0
	bl		sub_083195bc
_08316018:
	add		r0, r5, #0x0
	bl		sub_083158a0
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08316024:	.4byte 0x0000FFFF

.incbin "base.gba", 0x316028, 0x18
	thumb_func_end sub_08315dfc

	thumb_func_start sub_08316040
sub_08316040:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r2, r1, #0x0
	ldr		r1, _083160b0
	add		r6, r1, #0x0
	add		r6, #0x24
	add		r0, #0xf0
	mov		r3, #0x0
	ldrsh	r5, [r0, r3]
	mov		r0, #0x6
	ldrsh	r7, [r4, r0]
	ldr		r3, _083160b4
	add		r1, r1, r3
	ldrh	r1, [r1, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08316068
	b		_083161ce
_08316068:
	ldr		r1, [r4, #0x48]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08316074
	b		_083161ce
_08316074:
	add		r0, r4, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x6
	bne		_08316080
	b		_083161ce
_08316080:
	mov		r0, #0xc1
	neg		r0, r0
	and		r1, r0
	str		r1, [r4, #0x48]
	add		r0, r2, #0x0
	bl		sub_0831179c
	cmp		r0, r5
	beq		_083160b8
	cmp		r0, r5
	blt		_083160b8
	cmp		r0, r7
	ble		_0831609c
	b		_083161ce
_0831609c:
	add		r2, r4, #0x0
	add		r2, #0x91
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x74
	bhi		_083160a8
	b		_083161ce
_083160a8:
	sub		r0, #0x1
	strb	r0, [r2, #0x0]
	b		_083161ce

.incbin "base.gba", 0x3160AE, 0x2

_083160b0:	.4byte 0x030031D0
_083160b4:	.4byte 0x00000772

_083160b8:
	cmp		r0, r7
	bgt		_083160be
	b		_083161ce
_083160be:
	add		r2, r4, #0x0
	add		r2, #0x91
	ldrb	r0, [r2, #0x0]
	add		r0, #0x1
	mov		r1, #0x0
	strb	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x90
	strb	r1, [r0, #0x0]
	sub		r0, #0x5a
	strb	r1, [r0, #0x0]
	ldrb	r0, [r2, #0x0]
	lsl		r2, r0, #0x8
	add		r1, r4, #0x0
	add		r1, #0xc6
	ldrh	r3, [r1, #0x0]
	cmp		r2, r3
	ble		_083161ce
	mov		r7, #0x0
	strh	r2, [r1, #0x0]
	cmp		r0, #0x80
	beq		_083161ce
	ldr		r2, _08316150
	add		r0, r6, r2
	ldrh	r2, [r0, #0x0]
	ldrh	r1, [r1, #0x0]
	sub		r0, r1, r2
	cmp		r0, #0x0
	blt		_0831615c
	ldr		r5, [r4, #0x48]
	mov		r0, #0x20
	and		r5, r0
	cmp		r5, #0x0
	bne		_083161ce
	mov		r3, #0xf1
	lsl		r3, r3, #0x3
	add		r0, r6, r3
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_0831612a
	add		r2, r4, #0x0
	add		r2, #0xa4
	ldrh	r0, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x7
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	bl		sub_08320664
	mov		r1, #0x8
	ldr		r2, _08316154
	add		r0, r6, r2
	str		r1, [r0, #0x0]
_0831612a:
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_08317980
	ldr		r0, [r4, #0x48]
	mov		r1, #0x39
	neg		r1, r1
	and		r0, r1
	ldr		r1, _08316158
	orr		r0, r1
	str		r0, [r4, #0x48]
	add		r0, r4, #0x0
	add		r0, #0x82
	strh	r5, [r0, #0x0]
	sub		r0, #0x2
	strh	r5, [r0, #0x0]
	sub		r0, #0x2
	strb	r7, [r0, #0x0]
	b		_083161ce

_08316150:	.4byte 0x0000075A
_08316154:	.4byte 0x00000B58
_08316158:	.4byte 0x00002038

_0831615c:
	mov		r3, #0x80
	lsl		r3, r3, #0x1
	add		r0, r1, r3
	cmp		r0, r2
	bne		_083161a0
	ldr		r0, [r4, #0x48]
	mov		r1, #0x8
	orr		r0, r1
	str		r0, [r4, #0x48]
	mov		r3, #0xf1
	lsl		r3, r3, #0x3
	add		r0, r6, r3
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08316184
	ldr		r1, _0831619c
	mov		r0, #0x0
	mov		r2, #0x0
	bl		sub_0830fbb8
_08316184:
	add		r0, r4, #0x0
	add		r0, #0xa4
	ldrh	r1, [r0, #0x0]
	mov		r2, #0x80
	orr		r1, r2
	strh	r1, [r0, #0x0]
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_08317980
	b		_083161ce

.incbin "base.gba", 0x31619A, 0x2

_0831619c:	.4byte 0x0202C080

_083161a0:
	ldr		r0, [r4, #0x48]
	mov		r1, #0x4
	orr		r0, r1
	str		r0, [r4, #0x48]
	add		r2, r4, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r1, #0xf1
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_083161c6
	mov		r0, #0x13
	bl		sub_08325e94
_083161c6:
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_08317980
_083161ce:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08316040

	thumb_func_start sub_083161d4
sub_083161d4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	ldr		r0, [r5, #0x48]
	mov		r1, #0x4
	neg		r1, r1
	and		r0, r1
	str		r0, [r5, #0x48]
	ldr		r1, [r5, #0x0]
	cmp		r1, #0x0
	bge		_083161f2
	ldr		r0, _08316220
	add		r1, r1, r0
_083161f2:
	lsr		r7, r1, #0x10
	ldr		r2, [r5, #0x4]
	cmp		r2, #0x0
	bge		_083161fe
	ldr		r1, _08316220
	add		r2, r2, r1
_083161fe:
	lsr		r4, r2, #0x10
	ldr		r2, _08316224
	add		r2, r2, r5
	mov		r8, r2
	mov		r0, #0x0
	strb	r0, [r2, #0x0]
	ldr		r1, [r5, #0x0]
	ldr		r2, [r5, #0x4]
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_0831196c
	cmp		r0, #0x0
	beq		_08316228
	ldr		r0, [r5, #0x48]
	mov		r1, #0x1
	b		_083162b0

_08316220:	.4byte 0x0000FFFF
_08316224:	.4byte 0x0000019B

_08316228:
	lsl		r1, r7, #0x10
	asr		r1, r1, #0x10
	lsl		r2, r4, #0x10
	asr		r2, r2, #0x10
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_08310fac
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	mov		r7, #0x80
	add		r0, r4, #0x0
	and		r0, r7
	cmp		r0, #0x0
	beq		_0831627c
	mov		r1, #0x7f
	and		r4, r1
	cmp		r4, #0x7f
	bne		_08316258
	ldr		r0, [r5, #0x48]
	mov		r1, #0x2
	orr		r0, r1
	str		r0, [r5, #0x48]
	b		_0831626a
_08316258:
	add		r0, r5, #0x0
	add		r0, #0x90
	ldrb	r2, [r0, #0x0]
	cmp		r4, r2
	beq		_0831626a
	strb	r4, [r0, #0x0]
	and		r4, r1
	sub		r0, #0x5a
	strb	r4, [r0, #0x0]
_0831626a:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_08316040
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_0831ed60
	b		_083162d4
_0831627c:
	cmp		r4, #0x7f
	beq		_083162ac
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_0831ed60
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_0831188c
	mov		r1, r8
	strb	r0, [r1, #0x0]
	and		r0, r7
	cmp		r0, #0x0
	beq		_083162b6
	ldr		r1, [r5, #0x8]
	mov		r2, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	cmp		r1, r0
	ble		_083162a8
	mov		r2, #0x1
_083162a8:
	cmp		r2, #0x0
	beq		_083162b6
_083162ac:
	ldr		r0, [r5, #0x48]
	mov		r1, #0x2
_083162b0:
	orr		r0, r1
	str		r0, [r5, #0x48]
	b		_083162d4
_083162b6:
	add		r0, r5, #0x0
	add		r0, #0x90
	ldrb	r2, [r0, #0x0]
	cmp		r4, r2
	beq		_083162d4
	strb	r4, [r0, #0x0]
	mov		r0, #0x7f
	and		r4, r0
	add		r0, r5, #0x0
	add		r0, #0x36
	strb	r4, [r0, #0x0]
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_0831ed60
_083162d4:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3162DE, 0x2
	thumb_func_end sub_083161d4

	thumb_func_start sub_083162e0
sub_083162e0:
	push	{ r4, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r2, r1, #0x10
	asr		r1, r1, #0x10
	ldr		r0, _08316320
	cmp		r1, r0
	ble		_083162f2
	add		r2, r0, #0x0
_083162f2:
	mov		r1, #0xba
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldr		r3, [r0, #0x0]
	lsl		r1, r2, #0x10
	asr		r1, r1, #0x16
	mov		r0, #0x7
	and		r1, r0
	add		r0, r4, #0x0
	add		r0, #0x9a
	ldrb	r2, [r0, #0x0]
	mov		r0, #0xf
	and		r0, r2
	lsl		r0, r0, #0x3
	add		r1, r1, r0
	add		r3, #0x24
	add		r3, r3, r1
	ldrb	r0, [r3, #0x0]
	lsl		r0, r0, #0x4
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x31631E, 0x2

_08316320:	.4byte 0x000001FF
	thumb_func_end sub_083162e0

	thumb_func_start sub_08316324
sub_08316324:
	push	{ r4, r5, r6, lr }
	mov		r12, r0
	add		r0, #0xb6
	ldrh	r2, [r0, #0x0]
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	cmp		r0, r1
	ble		_0831633a
	add		r2, r1, #0x0
_0831633a:
	lsl		r0, r2, #0x10
	asr		r3, r0, #0x10
	mov		r2, r12
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	and		r0, r1
	add		r6, r2, #0x0
	cmp		r0, #0x0
	bne		_08316356
	neg		r0, r3
	lsl		r0, r0, #0x10
	b		_08316358
_08316356:
	lsl		r0, r3, #0x10
_08316358:
	lsr		r1, r0, #0x10
	mov		r0, r12
	add		r0, #0x82
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	ldrh	r2, [r0, #0x0]
	add		r3, r1, r2
	strh	r3, [r0, #0x0]
	mov		r2, r12
	add		r2, #0xb6
	ldrh	r5, [r2, #0x0]
	mov		r4, #0x0
	ldrsh	r1, [r2, r4]
	add		r4, r0, #0x0
	cmp		r1, #0xff
	ble		_08316380
	add		r0, r5, #0x0
	sub		r0, #0x40
	strh	r0, [r2, #0x0]
	b		_083163ca
_08316380:
	lsl		r0, r3, #0x10
	cmp		r0, #0x0
	blt		_08316398
	ldr		r1, _08316394
	add		r0, r3, r1
	strh	r0, [r4, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_083163ca
	b		_083163a6

_08316394:	.4byte 0xFFFFFB80

_08316398:
	mov		r2, #0x90
	lsl		r2, r2, #0x3
	add		r0, r3, r2
	strh	r0, [r4, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	blt		_083163ca
_083163a6:
	mov		r0, r12
	add		r0, #0x84
	mov		r1, #0x0
	strb	r1, [r0, #0x0]
	mov		r2, #0x0
	strh	r1, [r4, #0x0]
	sub		r0, #0x4
	strh	r1, [r0, #0x0]
	sub		r0, #0x2
	strb	r2, [r0, #0x0]
	ldrh	r1, [r6, #0x0]
	ldr		r0, _083163d0
	and		r0, r1
	mov		r4, #0x80
	lsl		r4, r4, #0x3
	add		r1, r4, #0x0
	orr		r0, r1
	strh	r0, [r6, #0x0]
_083163ca:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_083163d0:	.4byte 0x000040FF
	thumb_func_end sub_08316324

	thumb_func_start sub_083163d4
sub_083163d4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r2, r4, #0x0
	add		r2, #0xca
	add		r5, r4, #0x0
	add		r5, #0x7a
	ldrh	r0, [r2, #0x0]
	ldrh	r1, [r5, #0x0]
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x10
	cmp		r1, #0x0
	blt		_08316408
	ldr		r0, _08316404
	cmp		r1, r0
	ble		_08316428
	add		r0, r4, #0x0
	bl		sub_083162e0
	ldrh	r5, [r5, #0x0]
	add		r0, r0, r5
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	b		_0831642a

_08316404:	.4byte 0x000001FF

_08316408:
	ldr		r0, _08316424
	cmp		r1, r0
	bge		_08316428
	neg		r1, r1
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	add		r0, r4, #0x0
	bl		sub_083162e0
	ldrh	r1, [r5, #0x0]
	sub		r1, r1, r0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	b		_0831642a

_08316424:	.4byte 0xFFFFFE00

_08316428:
	ldrh	r1, [r2, #0x0]
_0831642a:
	add		r0, r4, #0x0
	add		r0, #0x7a
	strh	r1, [r0, #0x0]
	sub		r0, #0x24
	strh	r1, [r0, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31643A, 0x86
	thumb_func_end sub_083163d4

	thumb_func_start sub_083164c0
sub_083164c0:
	push	{ r4, lr }
	mov		r12, r0
	ldr		r0, _0831650c
	add		r0, r12
	ldrb	r0, [r0, #0x0]
	mov		r3, #0x3
	and		r3, r0
	mov		r0, #0xbc
	lsl		r0, r0, #0x1
	add		r0, r12
	ldrh	r4, [r0, #0x0]
	mov		r0, #0xba
	lsl		r0, r0, #0x1
	add		r0, r12
	ldr		r1, [r0, #0x0]
	mov		r0, r12
	add		r0, #0x9a
	ldrb	r2, [r0, #0x0]
	mov		r0, #0xf
	and		r0, r2
	lsl		r0, r0, #0x2
	add		r3, r3, r0
	add		r1, #0x10
	add		r1, r1, r3
	ldrb	r0, [r1, #0x0]
	lsl		r2, r0, #0x4
	cmp		r4, #0x10
	ble		_083164fa
	mov		r4, #0x10
_083164fa:
	lsl		r1, r4, #0x1
	ldr		r0, _08316510
	add		r0, r12
	ldrb	r0, [r0, #0x0]
	add		r0, r2, r0
	add		r0, r0, r1
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_0831650c:	.4byte 0x0000019B
_08316510:	.4byte 0x0000019D
	thumb_func_end sub_083164c0

	thumb_func_start sub_08316514
sub_08316514:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, [r4, #0x48]
	mov		r1, #0x3
	and		r0, r1
	cmp		r0, #0x0
	beq		_08316574
	add		r6, r4, #0x0
	add		r6, #0x90
	ldrb	r1, [r6, #0x0]
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_08311824
	lsl		r1, r0, #0x3
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bge		_0831653e
	ldr		r2, _08316570
	add		r0, r0, r2
_0831653e:
	asr		r0, r0, #0x10
	sub		r0, r1, r0
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	ldrb	r1, [r6, #0x0]
	add		r0, r5, #0x0
	mov		r2, #0x0
	bl		sub_08311858
	lsl		r2, r0, #0x3
	ldr		r0, [r4, #0x4]
	cmp		r0, #0x0
	bge		_0831655c
	ldr		r3, _08316570
	add		r0, r0, r3
_0831655c:
	asr		r1, r0, #0x10
	sub		r1, r2, r1
	lsl		r0, r7, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_0830e808
	b		_0831659c

.incbin "base.gba", 0x31656E, 0x2

_08316570:	.4byte 0x0000FFFF

_08316574:
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	bge		_0831657e
	ldr		r0, _083165ac
	add		r1, r1, r0
_0831657e:
	lsr		r1, r1, #0x10
	ldr		r2, [r4, #0x4]
	cmp		r2, #0x0
	bge		_0831658a
	ldr		r3, _083165ac
	add		r2, r2, r3
_0831658a:
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	asr		r2, r2, #0x10
	ldr		r3, _083165b0
	add		r0, r4, r3
	ldrb	r3, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_08310f34
_0831659c:
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3165AA, 0x2

_083165ac:	.4byte 0x0000FFFF
_083165b0:	.4byte 0x00000191
	thumb_func_end sub_08316514

	thumb_func_start sub_083165b4
sub_083165b4:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	bl		sub_08316514
	ldr		r1, _083165e8
	and		r1, r0
	add		r0, r4, #0x0
	add		r0, #0xca
	mov		r7, #0x0
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x96
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	strh	r0, [r1, #0x0]
	add		r5, r4, #0x0
	add		r5, #0x84
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x1
	beq		_083166c0
	cmp		r0, #0x1
	bgt		_083165ec
	cmp		r0, #0x0
	beq		_083165f6
	b		_08316760

_083165e8:	.4byte 0xFFFFFF00

_083165ec:
	cmp		r0, #0x8
	beq		_08316678
	cmp		r0, #0xb
	beq		_083166ca
	b		_08316760
_083165f6:
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_083164c0
	add		r2, r0, #0x0
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08316610
	ldr		r3, _08316640
	add		r0, r1, r3
_08316610:
	asr		r0, r0, #0x10
	sub		r0, r2, r0
	cmp		r0, #0x0
	blt		_08316648
	asr		r0, r1, #0x10
	ldr		r1, _08316644
	cmp		r0, r1
	ble		_08316622
	add		r0, r1, #0x0
_08316622:
	asr		r1, r0, #0x6
	mov		r0, #0xf
	and		r1, r0
	add		r2, r4, #0x0
	add		r2, #0xc0
	mov		r3, #0xba
	lsl		r3, r3, #0x1
	add		r0, r4, r3
	ldr		r0, [r0, #0x0]
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0xc
	str		r0, [r2, #0x0]
	b		_08316766

.incbin "base.gba", 0x31663E, 0x2

_08316640:	.4byte 0x0000FFFF
_08316644:	.4byte 0x000003FF

_08316648:
	neg		r0, r0
	ldr		r1, _08316670
	cmp		r0, r1
	ble		_08316652
	add		r0, r1, #0x0
_08316652:
	add		r2, r4, #0x0
	add		r2, #0xc0
	ldrh	r1, [r2, #0x0]
	str		r1, [r2, #0x0]
	ldr		r3, _08316674
	asr		r0, r0, #0x6
	lsl		r0, r0, #0x1
	add		r0, r0, r3
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x10
	orr		r1, r0
	str		r1, [r2, #0x0]
	b		_08316766

.incbin "base.gba", 0x31666E, 0x2

_08316670:	.4byte 0x000001FF
_08316674:	.4byte 0x0202C0A0

_08316678:
	add		r1, r4, #0x0
	add		r1, #0xcc
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_083166aa
	sub		r1, #0x10
	ldr		r0, [r1, #0x0]
	mov		r2, #0xfc
	lsl		r2, r2, #0x13
	cmp		r0, r2
	ble		_0831669a
	str		r2, [r1, #0x0]
	add		r1, #0x4
	b		_083166c4
_0831669a:
	add		r0, r4, #0x0
	add		r0, #0xc0
	ldrh	r1, [r0, #0x0]
	mov		r2, #0xc8
	lsl		r2, r2, #0xe
	orr		r1, r2
	str		r1, [r0, #0x0]
	b		_08316766
_083166aa:
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _083166bc
	and		r0, r1
	strh	r0, [r2, #0x0]
_083166b6:
	strb	r7, [r5, #0x0]
	b		_08316766

.incbin "base.gba", 0x3166BA, 0x2

_083166bc:	.4byte 0x0000FF3F

_083166c0:
	add		r1, r4, #0x0
	add		r1, #0xc0
_083166c4:
	ldrh	r0, [r1, #0x0]
	str		r0, [r1, #0x0]
	b		_08316766
_083166ca:
	ldr		r2, [r4, #0x48]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r2, r0
	cmp		r2, #0x0
	bne		_08316766
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	ldr		r0, _08316704
	add		r3, r4, #0x0
	add		r3, #0x82
	cmp		r1, r0
	bgt		_083166e8
	strh	r2, [r3, #0x0]
_083166e8:
	ldrh	r0, [r3, #0x0]
	mov		r2, #0x0
	ldrsh	r1, [r3, r2]
	cmp		r1, #0x0
	bge		_08316708
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	strh	r0, [r3, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	blt		_0831672c
	b		_083166b6

.incbin "base.gba", 0x316702, 0x2

_08316704:	.4byte 0x00FFFFFF

_08316708:
	cmp		r1, #0x0
	ble		_08316718
	ldr		r2, _08316728
	add		r0, r0, r2
	strh	r0, [r3, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	blt		_083166b6
_08316718:
	mov		r0, #0x0
	ldrsh	r1, [r3, r0]
	cmp		r1, #0x0
	bne		_0831672c
	add		r0, r4, #0x0
	add		r0, #0x84
	strb	r1, [r0, #0x0]
	b		_08316766

_08316728:	.4byte 0xFFFFFC00

_0831672c:
	mov		r2, #0x0
	ldrsh	r1, [r3, r2]
	cmp		r1, #0x0
	bge		_08316736
	neg		r1, r1
_08316736:
	ldr		r0, _08316758
	cmp		r1, r0
	ble		_08316740
	mov		r1, #0xfc
	lsl		r1, r1, #0x6
_08316740:
	asr		r0, r1, #0xb
	mov		r1, #0x7
	and		r0, r1
	add		r2, r4, #0x0
	add		r2, #0xc0
	ldr		r1, _0831675c
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	str		r0, [r2, #0x0]
	b		_08316766

_08316758:	.4byte 0x00003FFF
_0831675c:	.4byte 0x0202BE48

_08316760:
	add		r0, r4, #0x0
	bl		sub_08312f2c
_08316766:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_083165b4

	thumb_func_start sub_0831676c
sub_0831676c:
	bx		lr

.incbin "base.gba", 0x31676E, 0x2
	thumb_func_end sub_0831676c

	thumb_func_start sub_08316770
sub_08316770:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x2c
	add		r6, r0, #0x0
	str		r1, [sp, #0x0]
	add		r0, #0xbc
	mov		r4, #0x0
	str		r4, [r0, #0x0]
	sub		r0, #0x6a
	mov		r5, #0x0
	strh	r4, [r0, #0x0]
	sub		r0, #0x2
	strh	r4, [r0, #0x0]
	sub		r0, #0x2
	strh	r4, [r0, #0x0]
	add		r0, #0x72
	str		r4, [r0, #0x0]
	sub		r0, #0x38
	strh	r4, [r0, #0x0]
	sub		r0, #0xa
	strb	r5, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	add		r0, #0x46
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	sub		r0, #0x34
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	sub		r0, #0x6
	strh	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r4, [r0, #0x0]
	sub		r0, #0x40
	strb	r5, [r0, #0x0]
	add		r0, #0x24
	strb	r5, [r0, #0x0]
	add		r0, #0x22
	strb	r5, [r0, #0x0]
	sub		r0, #0x16
	strb	r5, [r0, #0x0]
	sub		r0, #0x18
	strh	r4, [r0, #0x0]
	add		r0, r6, #0x0
	bl		sub_08317898
	add		r0, r6, #0x0
	add		r0, #0xb2
	strh	r4, [r0, #0x0]
	sub		r0, #0x16
	strh	r4, [r0, #0x0]
	add		r0, #0x30
	strh	r4, [r0, #0x0]
	sub		r0, #0x16
	strh	r4, [r0, #0x0]
	sub		r0, #0x12
	strh	r4, [r0, #0x0]
	sub		r0, #0x2
	strh	r4, [r0, #0x0]
	sub		r0, #0x2
	strh	r4, [r0, #0x0]
	sub		r0, #0x2
	strh	r4, [r0, #0x0]
	add		r2, r6, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r0, [r6, #0x48]
	mov		r1, #0x41
	neg		r1, r1
	and		r0, r1
	str		r0, [r6, #0x48]
	ldr		r1, [r6, #0x0]
	cmp		r1, #0x0
	bge		_0831681e
	ldr		r0, _08316974
	add		r1, r1, r0
_0831681e:
	asr		r1, r1, #0x10
	ldr		r2, [r6, #0x4]
	cmp		r2, #0x0
	bge		_0831682a
	ldr		r0, _08316974
	add		r2, r2, r0
_0831682a:
	asr		r2, r2, #0x10
	ldr		r0, [sp, #0x0]
	mov		r3, #0x0
	bl		sub_08310fac
	add		r2, r6, #0x0
	add		r2, #0x90
	strb	r0, [r2, #0x0]
	mov		r1, #0x7f
	and		r0, r1
	add		r3, r6, #0x0
	add		r3, #0x36
	strb	r0, [r3, #0x0]
	add		r0, r6, #0x0
	add		r0, #0x91
	strb	r1, [r0, #0x0]
	ldrb	r0, [r2, #0x0]
	mov		r2, #0xfe
	lsl		r2, r2, #0x7
	add		r1, r2, #0x0
	orr		r0, r1
	add		r1, r6, #0x0
	add		r1, #0xc6
	strh	r0, [r1, #0x0]
	add		r0, r6, #0x0
	add		r0, #0xb0
	strb	r5, [r0, #0x0]
	add		r3, #0xb2
	mov		r0, #0x68
	add		r0, r0, r6
	mov		r10, r0
	sub		r1, #0x5c
	str		r1, [sp, #0x14]
	mov		r2, #0x66
	add		r2, r2, r6
	mov		r9, r2
	mov		r0, #0x5a
	add		r0, r0, r6
	mov		r12, r0
	add		r1, #0xa
	str		r1, [sp, #0x20]
	mov		r2, #0x64
	add		r2, r2, r6
	mov		r8, r2
	add		r5, r6, #0x0
	add		r5, #0xac
	add		r0, r6, #0x0
	add		r0, #0xb8
	str		r0, [sp, #0x8]
	add		r1, #0x2
	str		r1, [sp, #0x24]
	add		r2, r6, #0x0
	add		r2, #0xd0
	str		r2, [sp, #0x18]
	add		r0, #0x1c
	str		r0, [sp, #0x1C]
	sub		r1, #0x14
	str		r1, [sp, #0x10]
	add		r7, r6, #0x0
	add		r7, #0xd8
	sub		r2, #0x4b
	str		r2, [sp, #0x28]
	sub		r0, #0x2c
	str		r0, [sp, #0x4]
	sub		r1, #0x6
	str		r1, [sp, #0xC]
	add		r1, #0x80
	mov		r2, #0x0
	add		r0, #0x3c
_083168b4:
	strh	r2, [r0, #0x0]
	sub		r0, #0x2
	cmp		r0, r1
	bge		_083168b4
	mov		r4, #0x0
	str		r4, [r3, #0x0]
	mov		r2, r10
	strh	r4, [r2, #0x0]
	ldr		r0, [sp, #0x14]
	strh	r4, [r0, #0x0]
	mov		r1, r9
	strh	r4, [r1, #0x0]
	mov		r2, r12
	strh	r4, [r2, #0x0]
	ldr		r0, [sp, #0x20]
	strh	r4, [r0, #0x0]
	mov		r2, #0x0
	mov		r1, r8
	strb	r2, [r1, #0x0]
	strh	r4, [r5, #0x0]
	strh	r4, [r6, #0x38]
	mov		r1, #0xc9
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	strb	r2, [r0, #0x0]
	ldr		r2, [sp, #0x8]
	strh	r4, [r2, #0x0]
	ldr		r0, [sp, #0x24]
	strh	r4, [r0, #0x0]
	ldr		r1, [sp, #0x18]
	str		r4, [r1, #0x0]
	ldr		r2, [sp, #0x1C]
	str		r4, [r2, #0x0]
	mov		r1, #0xca
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	strh	r4, [r0, #0x0]
	mov		r2, #0xcb
	lsl		r2, r2, #0x1
	add		r0, r6, r2
	sub		r1, #0x94
	strh	r1, [r0, #0x0]
	add		r2, #0x2
	add		r0, r6, r2
	strh	r1, [r0, #0x0]
	add		r1, #0x9a
	add		r0, r6, r1
	mov		r2, #0x0
	strb	r2, [r0, #0x0]
	add		r0, r6, #0x0
	ldr		r1, [sp, #0x0]
	bl		sub_0831791c
	ldr		r2, _08316978
	add		r1, r6, r2
	strb	r0, [r1, #0x0]
	ldr		r0, [sp, #0x10]
	strh	r4, [r0, #0x0]
	ldrb	r1, [r7, #0x0]
	mov		r0, #0x4
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strb	r0, [r7, #0x0]
	ldrh	r1, [r7, #0x0]
	ldr		r0, _0831697c
	and		r0, r1
	strh	r0, [r7, #0x0]
	ldrb	r1, [r7, #0x1]
	mov		r0, #0x1f
	and		r0, r1
	strb	r0, [r7, #0x1]
	mov		r2, #0x0
	ldr		r1, [sp, #0x28]
	strb	r2, [r1, #0x0]
	ldr		r1, _08316980
	add		r0, r6, r1
	strb	r2, [r0, #0x0]
	ldr		r2, [sp, #0x4]
	str		r4, [r2, #0x0]
	ldr		r0, [sp, #0xC]
	strh	r4, [r0, #0x0]
	ldrh	r0, [r6, #0x34]
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r6, #0x34]
	add		sp, #0x2c
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x316972, 0x2

_08316974:	.4byte 0x0000FFFF
_08316978:	.4byte 0x00000191
_0831697c:	.4byte 0xFFFFE003
_08316980:	.4byte 0x0000019B

.incbin "base.gba", 0x316984, 0x8
	thumb_func_end sub_08316770

	thumb_func_start sub_0831698c
sub_0831698c:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	ldrb	r5, [r0, #0x0]
	add		r2, r6, #0x0
	add		r2, #0x8c
	ldr		r1, _08316a04
	lsl		r0, r5, #0x1
	add		r0, r0, r1
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	ldr		r1, _08316a08
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	str		r0, [r2, #0x0]
	ldr		r2, _08316a0c
	mov		r12, r2
	add		r3, r6, #0x0
	add		r3, #0xf4
	ldr		r2, _08316a10
	add		r4, r2, #0x0
	add		r4, #0x1e
_083169be:
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	lsl		r1, r0, #0x4
	cmp		r5, #0x1
	ble		_083169d2
	asr		r0, r1, #0x1
	add		r1, r1, r0
	cmp		r1, #0x31
	bgt		_083169d2
	mov		r1, #0xe0
_083169d2:
	strh	r1, [r3, #0x0]
	add		r3, #0x2
	add		r2, #0x2
	cmp		r2, r4
	ble		_083169be
	mov		r4, #0x0
	ldr		r0, _08316a14
	mov		r2, #0x8a
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	add		r2, r0, #0x0
	sub		r2, #0x14
_083169ea:
	cmp		r4, #0x9
	ble		_08316a24
	mov		r3, #0x0
	ldrsh	r0, [r2, r3]
	lsl		r0, r0, #0x4
	cmp		r5, #0x1
	beq		_08316a28
	cmp		r5, #0x1
	bgt		_08316a18
	cmp		r5, #0x0
	beq		_08316a20
	b		_08316a28

.incbin "base.gba", 0x316A02, 0x2

_08316a04:	.4byte 0x0202C0B0
_08316a08:	.4byte 0x0000039E
_08316a0c:	.4byte 0x0202BF00
_08316a10:	.4byte 0x0202BDA8
_08316a14:	.4byte 0x0202BDC8

_08316a18:
	cmp		r5, #0x3
	bgt		_08316a28
	add		r0, #0xa0
	b		_08316a28
_08316a20:
	sub		r0, #0x80
	b		_08316a28
_08316a24:
	mov		r0, #0x1
	neg		r0, r0
_08316a28:
	strh	r0, [r1, #0x0]
	add		r1, #0x2
	add		r2, #0x2
	add		r4, #0x1
	cmp		r4, #0xf
	ble		_083169ea
	mov		r0, #0x9a
	lsl		r0, r0, #0x1
	add		r3, r6, r0
	ldr		r2, _08316a88
	mov		r4, #0x3
	add		r0, #0x2
	add		r1, r6, r0
_08316a42:
	ldrh	r0, [r2, #0x0]
	strh	r0, [r3, #0x0]
	ldrh	r0, [r2, #0x2]
	strh	r0, [r1, #0x0]
	ldrh	r0, [r2, #0x4]
	strh	r0, [r1, #0x2]
	ldrh	r0, [r2, #0x6]
	strh	r0, [r1, #0x4]
	add		r3, #0x8
	add		r2, #0x8
	add		r1, #0x8
	sub		r4, #0x1
	cmp		r4, #0x0
	bge		_08316a42
	mov		r2, #0xba
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	mov		r0, #0x4c
	mul		r0, r5
	add		r0, r12
	str		r0, [r1, #0x0]
	ldr		r3, _08316a8c
	add		r0, r7, r3
	ldrb	r0, [r0, #0x0]
	bl		sub_08311aa8
	cmp		r0, #0x0
	beq		_08316a98
	ldr		r0, _08316a90
	add		r0, r5, r0
	ldrb	r0, [r0, #0x0]
	ldr		r2, _08316a94
	add		r1, r6, r2
	b		_08316a9c

.incbin "base.gba", 0x316A86, 0x2

_08316a88:	.4byte 0x0202BDD4
_08316a8c:	.4byte 0x00000751
_08316a90:	.4byte 0x0202BFE4
_08316a94:	.4byte 0x0000019D

_08316a98:
	ldr		r3, _08316aa4
	add		r1, r6, r3
_08316a9c:
	strb	r0, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08316aa4:	.4byte 0x0000019D
	thumb_func_end sub_0831698c

	thumb_func_start sub_08316aa8
sub_08316aa8:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r3, #0x0
	ldr		r1, _08316acc
	add		r1, #0x24
	add		r0, #0x4c
	strb	r2, [r0, #0x0]
	add		r0, r5, #0x0
	bl		sub_0831698c
	cmp		r4, #0x0
	beq		_08316ad8
	ldr		r0, _08316ad0
	str		r0, [r5, #0x48]
	ldr		r0, _08316ad4
	b		_08316ae0

.incbin "base.gba", 0x316ACA, 0x2

_08316acc:	.4byte 0x030031D0
_08316ad0:	.4byte 0x00008040
_08316ad4:	.4byte 0x00002001

_08316ad8:
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	str		r0, [r5, #0x48]
	add		r0, #0x2
_08316ae0:
	strh	r0, [r5, #0x10]
	mov		r0, #0xa
	strb	r0, [r5, #0xe]
	strb	r0, [r5, #0xd]
	strb	r0, [r5, #0xc]
	ldr		r0, _08316b68
	str		r0, [r5, #0x18]
	add		r2, r5, #0x0
	add		r2, #0x58
	mov		r4, #0x0
	mov		r3, #0x0
	mov		r0, #0x5b
	strh	r0, [r2, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	beq		_08316b1a
	add		r1, r5, #0x0
	add		r1, #0x68
	ldr		r0, _08316b6c
	strh	r0, [r1, #0x0]
	ldrh	r1, [r2, #0x0]
	sub		r0, #0x10
	and		r0, r1
	strh	r0, [r2, #0x0]
_08316b1a:
	ldr		r0, _08316b70
	add		r1, r5, r0
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	add		r0, #0xec
	strb	r6, [r0, #0x0]
	ldrh	r0, [r5, #0x34]
	mov		r1, #0x1
	orr		r0, r1
	strh	r0, [r5, #0x34]
	mov		r1, #0xbd
	lsl		r1, r1, #0x1
	add		r0, r5, r1
	strh	r3, [r0, #0x0]
	add		r1, #0x2
	add		r0, r5, r1
	strb	r4, [r0, #0x0]
	add		r1, #0x4
	add		r0, r5, r1
	str		r3, [r0, #0x0]
	add		r1, #0x4
	add		r0, r5, r1
	str		r3, [r0, #0x0]
	add		r1, #0x4
	add		r0, r5, r1
	str		r3, [r0, #0x0]
	add		r1, #0x4
	add		r0, r5, r1
	strh	r3, [r0, #0x0]
	add		r1, #0x2
	add		r0, r5, r1
	strh	r3, [r0, #0x0]
	add		r1, #0x2
	add		r0, r5, r1
	strb	r4, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08316b68:	.4byte 0x020113E9
_08316b6c:	.4byte 0x0000FFFF
_08316b70:	.4byte 0x0000017D
	thumb_func_end sub_08316aa8

	thumb_func_start sub_08316b74
sub_08316b74:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	mov		r0, #0x1
	bl		sub_0830e6c0
	add		r1, r0, #0x0
	add		r4, #0xec
	ldrb	r0, [r4, #0x0]
	add		r0, #0x8
	lsl		r0, r0, #0x5
	add		r1, r1, r0
	add		r0, r5, #0x0
	mov		r2, #0x8
	bl		sub_083272c0
	mov		r0, #0x1
	bl		sub_0830e6cc
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08316b74

	thumb_func_start sub_08316ba0
sub_08316ba0:
	push	{ r4, lr }
	mov		r12, r0
	ldr		r4, [sp, #0x8]
	str		r1, [r0, #0x0]
	str		r2, [r0, #0x4]
	str		r3, [r0, #0x8]
	cmp		r2, #0x0
	bge		_08316bb4
	ldr		r0, _08316bdc
	add		r2, r2, r0
_08316bb4:
	asr		r1, r2, #0x10
	mov		r0, r12
	add		r0, #0xf0
	strh	r1, [r0, #0x0]
	sub		r0, #0x9a
	strh	r4, [r0, #0x0]
	ldr		r0, _08316bdc
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	and		r0, r1
	mov		r2, r12
	add		r2, #0x7a
	strh	r0, [r2, #0x0]
	and		r0, r1
	mov		r1, r12
	add		r1, #0x7c
	strh	r0, [r1, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08316bdc:	.4byte 0x0000FFFF
	thumb_func_end sub_08316ba0

	thumb_func_start sub_08316be0
sub_08316be0:
	bx		lr

.incbin "base.gba", 0x316BE2, 0x2
	thumb_func_end sub_08316be0

	thumb_func_start sub_08316be4
sub_08316be4:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	lsl		r2, r2, #0x10
	lsr		r7, r2, #0x10
	add		r6, r5, #0x0
	ldr		r1, [r4, #0x48]
	mov		r0, #0x80
	lsl		r0, r0, #0xa
	and		r0, r1
	cmp		r0, #0x0
	beq		_08316c1e
	ldr		r0, _08316d14
	and		r1, r0
	str		r1, [r4, #0x48]
	add		r0, r4, #0x0
	add		r0, #0x4e
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0xb8
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x1
	ble		_08316c1e
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
_08316c1e:
	ldr		r1, [r4, #0x4]
	cmp		r1, #0x0
	bge		_08316c28
	ldr		r0, _08316d18
	add		r1, r1, r0
_08316c28:
	asr		r1, r1, #0x10
	add		r0, r4, #0x0
	add		r0, #0xf0
	strh	r1, [r0, #0x0]
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bge		_08316c3a
	ldr		r1, _08316d18
	add		r0, r0, r1
_08316c3a:
	asr		r0, r0, #0x10
	add		r1, r4, #0x0
	add		r1, #0xee
	strh	r0, [r1, #0x0]
	ldr		r1, [r4, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x4e
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	str		r1, [r4, #0x0]
	ldr		r1, [r4, #0x4]
	add		r0, r4, #0x0
	add		r0, #0x50
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	str		r1, [r4, #0x4]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_083161d4
	add		r0, r4, #0x0
	bl		sub_083128b8
	add		r0, r4, #0x0
	bl		sub_08312638
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_08315dfc
	add		r0, r4, #0x0
	bl		sub_08312aa4
	add		r0, r4, #0x0
	bl		sub_08312740
	add		r0, r4, #0x0
	bl		sub_08312778
	ldr		r1, _08316d1c
	add		r0, r5, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08316ca6
	add		r0, r4, #0x0
	bl		sub_08316be0
_08316ca6:
	add		r0, r4, #0x0
	bl		sub_0831676c
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_08316cbe
	add		r0, r4, #0x0
	bl		sub_08312e74
_08316cbe:
	add		r0, r4, #0x0
	bl		sub_08314864
	add		r0, r4, #0x0
	bl		sub_083136a4
	add		r0, r4, #0x0
	add		r1, r7, #0x0
	bl		sub_08312d50
	add		r0, r4, #0x0
	bl		sub_08312a64
	add		r0, r4, #0x0
	bl		sub_0831571c
	add		r0, r4, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08316cf2
	add		r0, r4, #0x0
	bl		sub_08317524
_08316cf2:
	ldr		r0, _08316d20
	ldr		r0, [r0, #0x10]
	mov		r1, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_08316d0c
	add		r0, r4, #0x0
	add		r1, r6, #0x0
	bl		sub_08315798
	add		r0, r4, #0x0
	bl		sub_08319b4c
_08316d0c:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x316D12, 0x2

_08316d14:	.4byte 0xfffdffff
_08316d18:	.4byte 0x0000FFFF
_08316d1c:	.4byte 0x0000074E
_08316d20:	.4byte 0x030031D0

.incbin "base.gba", 0x316D24, 0xAC
	thumb_func_end sub_08316be4

	thumb_func_start sub_08316dd0
sub_08316dd0:
	mov		r2, #0x24
	ldrsh	r1, [r0, r2]
	ldr		r0, _08316de0
	cmp		r1, r0
	bgt		_08316de4
	mov		r0, #0x0
	b		_08316df6

.incbin "base.gba", 0x316DDE, 0x2

_08316de0:	.4byte 0x000001FF

_08316de4:
	ldr		r0, _08316df0
	cmp		r1, r0
	ble		_08316df4
	mov		r0, #0x2
	b		_08316df6

.incbin "base.gba", 0x316DEE, 0x2

_08316df0:	.4byte 0x000003FF

_08316df4:
	mov		r0, #0x1
_08316df6:
	bx		lr
	thumb_func_end sub_08316dd0

	thumb_func_start sub_08316df8
sub_08316df8:
	push	{ r4, lr }
	add		r2, r0, #0x0
	add		r0, #0x4c
	ldrb	r0, [r0, #0x0]
	mov		r4, #0x7
	and		r4, r0
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_08316e2c
	ldr		r0, _08316e24
	ldr		r0, [r0, #0x10]
	lsr		r0, r0, #0x2
	mov		r1, #0x3
	and		r0, r1
	lsl		r0, r0, #0x5
	ldr		r1, _08316e28
	add		r1, r0, r1
	b		_08316e8e

.incbin "base.gba", 0x316E22, 0x2

_08316e24:	.4byte 0x030031D0
_08316e28:	.4byte 0x020274A2

_08316e2c:
	add		r0, r2, #0x0
	add		r0, #0x68
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	ldr		r0, _08316e4c
	cmp		r1, r0
	ble		_08316e58
	ldr		r0, _08316e50
	ldr		r0, [r0, #0x10]
	lsr		r0, r0, #0x2
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_08316e58
	ldr		r1, _08316e54
	b		_08316e8e

_08316e4c:	.4byte 0x00000127
_08316e50:	.4byte 0x030031D0
_08316e54:	.4byte 0x020274A2

_08316e58:
	mov		r0, #0xca
	lsl		r0, r0, #0x1
	add		r3, r2, r0
	ldrh	r2, [r3, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0x7
	and		r0, r2
	cmp		r0, #0x0
	beq		_08316e88
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	and		r0, r2
	ldr		r1, _08316e80
	cmp		r0, #0x0
	beq		_08316e78
	sub		r1, #0x20
_08316e78:
	ldr		r0, _08316e84
	and		r0, r2
	strh	r0, [r3, #0x0]
	b		_08316e8e

_08316e80:	.4byte 0x02027542
_08316e84:	.4byte 0x00009FFF

_08316e88:
	lsl		r1, r4, #0x5
	ldr		r0, _08316e98
	add		r1, r1, r0
_08316e8e:
	add		r0, r1, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x316E96, 0x2

_08316e98:	.4byte 0x0202A0F6
	thumb_func_end sub_08316df8

	thumb_func_start sub_08316e9c
sub_08316e9c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	add		r1, r5, #0x0
	add		r1, #0xd4
	ldr		r0, [r1, #0x0]
	cmp		r0, r4
	beq		_08316ed2
	str		r4, [r1, #0x0]
	mov		r0, #0x1
	bl		sub_0830e6c0
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	add		r0, #0xec
	ldrb	r0, [r0, #0x0]
	add		r0, #0x8
	lsl		r0, r0, #0x5
	add		r0, #0x6
	add		r1, r1, r0
	add		r0, r4, #0x0
	mov		r2, #0xd
	bl		sub_083272c4
	mov		r0, #0x1
	bl		sub_0830e6cc
_08316ed2:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08316e9c

	thumb_func_start sub_08316ed8
sub_08316ed8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_08316df8
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		sub_08316e9c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x316EEE, 0x2
	thumb_func_end sub_08316ed8

	thumb_func_start sub_08316ef0
sub_08316ef0:
	push	{ r4, r5, r6, lr }
	add		r2, r0, #0x0
	add		r0, #0xec
	ldrb	r5, [r0, #0x0]
	sub		r0, #0x30
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_08316f02
	neg		r0, r0
_08316f02:
	lsr		r0, r0, #0x10
	cmp		r0, #0x0
	beq		_08316f20
	cmp		r0, #0xf
	bls		_08316f0e
	mov		r0, #0xf
_08316f0e:
	ldr		r1, _08316f1c
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrh	r1, [r0, #0x0]
	add		r4, r2, #0x0
	add		r4, #0xd8
	b		_08316f32

_08316f1c:	.4byte 0x0202C0F2

_08316f20:
	add		r2, #0xd8
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x3
	and		r0, r1
	mov		r1, #0x0
	add		r4, r2, #0x0
	cmp		r0, #0x2
	bne		_08316f32
	mov		r1, #0x1
_08316f32:
	ldrh	r3, [r4, #0x0]
	ldr		r0, _08316f6c
	and		r0, r3
	cmp		r0, #0x0
	beq		_08316f78
	ldr		r0, [r4, #0x0]
	lsl		r0, r0, #0x13
	lsr		r0, r0, #0x15
	sub		r0, #0x1
	ldr		r2, _08316f70
	add		r5, r2, #0x0
	and		r0, r5
	lsl		r0, r0, #0x2
	ldr		r6, _08316f74
	add		r2, r6, #0x0
	and		r2, r3
	orr		r2, r0
	strh	r2, [r4, #0x0]
	ldr		r0, [r4, #0x0]
	lsl		r0, r0, #0x13
	lsr		r0, r0, #0x15
	cmp		r0, r1
	bls		_08317000
	and		r1, r5
	lsl		r0, r1, #0x2
	and		r2, r6
	orr		r2, r0
	strh	r2, [r4, #0x0]
	b		_08317000

_08316f6c:	.4byte 0x00001FFC
_08316f70:	.4byte 0x000007FF
_08316f74:	.4byte 0xFFFFE003

_08316f78:
	cmp		r1, #0x0
	beq		_08317000
	ldr		r0, _08316f9c
	and		r1, r0
	lsl		r1, r1, #0x2
	ldr		r0, _08316fa0
	and		r0, r3
	orr		r0, r1
	strh	r0, [r4, #0x0]
	add		r3, r4, #0x0
	ldr		r0, [r4, #0x0]
	lsl		r1, r0, #0x1e
	lsr		r0, r1, #0x1e
	cmp		r0, #0x1
	bhi		_08316fa4
	add		r0, #0x1
	b		_08316fa6

.incbin "base.gba", 0x316F9A, 0x2

_08316f9c:	.4byte 0x000007FF
_08316fa0:	.4byte 0xFFFFE003

_08316fa4:
	mov		r0, #0x0
_08316fa6:
	mov		r1, #0x3
	and		r1, r0
	ldrb	r2, [r3, #0x0]
	mov		r0, #0x4
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x0]
	ldr		r1, [r4, #0x0]
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x1d
	add		r1, #0x1
	lsl		r1, r1, #0x5
	ldrb	r2, [r4, #0x1]
	mov		r0, #0x1f
	and		r0, r2
	orr		r0, r1
	strb	r0, [r4, #0x1]
	ldr		r4, [r4, #0x0]
	lsl		r4, r4, #0x1e
	lsr		r4, r4, #0x1c
	ldr		r0, _08317008
	add		r4, r4, r0
	mov		r0, #0x1
	bl		sub_0830e6c0
	lsl		r5, r5, #0x5
	add		r0, r5, r0
	mov		r2, #0x81
	lsl		r2, r2, #0x1
	add		r1, r0, r2
	ldrh	r0, [r4, #0x0]
	strh	r0, [r1, #0x0]
	mov		r0, #0x1
	bl		sub_0830e6c0
	add		r5, r5, r0
	mov		r0, #0x82
	lsl		r0, r0, #0x1
	add		r5, r5, r0
	ldrh	r0, [r4, #0x2]
	strh	r0, [r5, #0x0]
	mov		r0, #0x1
	bl		sub_0830e6cc
_08317000:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x317006, 0x2

_08317008:	.4byte 0x0202C0B6
	thumb_func_end sub_08316ef0

	thumb_func_start sub_0831700c
sub_0831700c:
	add		r1, r0, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x3
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x1
	bhi		_08317022
	ldr		r0, [r1, #0x8]
	cmp		r0, #0x0
	beq		_08317040
_08317022:
	add		r0, r1, #0x0
	add		r0, #0x76
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0xf
	beq		_08317040
	add		r0, r1, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x8
	bne		_08317044
	add		r0, r1, #0x0
	add		r0, #0x9c
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x3c
	bhi		_08317044
_08317040:
	mov		r0, #0x1
	b		_08317046
_08317044:
	mov		r0, #0x0
_08317046:
	bx		lr
	thumb_func_end sub_0831700c

	thumb_func_start sub_08317048
sub_08317048:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r6, _083170e4
	ldr		r0, _083170e8
	add		r5, r6, r0
	cmp		r5, #0x0
	bne		_08317058
	b		_083171a8
_08317058:
	add		r0, r4, #0x0
	bl		sub_08317828
	cmp		r0, #0x0
	beq		_08317064
	b		_08317194
_08317064:
	ldr		r1, _083170ec
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	beq		_08317070
	b		_08317194
_08317070:
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831707c
	b		_08317194
_0831707c:
	mov		r3, #0x14
	ldrsh	r0, [r5, r3]
	add		r1, r4, #0x0
	add		r1, #0x56
	ldrh	r1, [r1, #0x0]
	sub		r0, r0, r1
	asr		r0, r0, #0x8
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	add		r0, r4, #0x0
	add		r0, #0x88
	mov		r3, #0x0
	ldrsh	r1, [r0, r3]
	add		r7, r0, #0x0
	cmp		r1, #0x0
	bge		_0831709e
	neg		r1, r1
_0831709e:
	lsl		r0, r1, #0x8
	lsr		r1, r0, #0x10
	cmp		r1, #0xe
	bls		_083170a8
	mov		r1, #0xe
_083170a8:
	ldr		r0, _083170f0
	add		r0, r1, r0
	ldrb	r3, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	add		r5, r0, #0x0
	cmp		r1, #0x0
	bge		_083170bc
	neg		r1, r1
_083170bc:
	asr		r1, r1, #0x15
	cmp		r1, #0xe
	ble		_083170c4
	mov		r1, #0xe
_083170c4:
	ldr		r0, _083170f4
	add		r0, r1, r0
	ldrb	r0, [r0, #0x0]
	cmp		r3, r0
	bls		_083170d0
	add		r3, r0, #0x0
_083170d0:
	ldr		r1, _083170f8
	add		r0, r6, r1
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	blt		_083170fc
	asr		r0, r0, #0x18
	add		r0, r3, r0
	b		_08317100

.incbin "base.gba", 0x3170E2, 0x2

_083170e4:	.4byte 0x030031D0
_083170e8:	.4byte 0x000007BC
_083170ec:	.4byte 0x000007AC
_083170f0:	.4byte 0x0202C112
_083170f4:	.4byte 0x0202C121
_083170f8:	.4byte 0x00000B4E

_083170fc:
	asr		r0, r0, #0x18
	sub		r0, r3, r0
_08317100:
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	add		r0, r4, #0x0
	add		r0, #0x82
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x18
	cmp		r0, #0x0
	bge		_08317114
	neg		r0, r0
_08317114:
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x12
	ble		_08317120
	mov		r1, #0x12
_08317120:
	mov		r0, #0x12
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	sub		r0, r0, r1
	lsl		r1, r0, #0x10
	asr		r0, r1, #0x10
	cmp		r3, r0
	ble		_08317132
	lsr		r3, r1, #0x10
_08317132:
	cmp		r2, #0x0
	beq		_08317164
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bge		_0831713e
	mov		r3, #0x0
_0831713e:
	cmp		r3, #0x0
	beq		_08317158
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	cmp		r0, #0x0
	blt		_08317150
	add		r0, r3, #0x2
	sub		r0, r2, r0
	b		_08317154
_08317150:
	add		r0, r3, #0x2
	add		r0, r2, r0
_08317154:
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
_08317158:
	lsl		r0, r2, #0x18
	asr		r1, r0, #0x18
	lsr		r0, r0, #0x1f
	add		r1, r1, r0
	asr		r2, r1, #0x1
	b		_083171a2
_08317164:
	mov		r1, #0x0
	ldrsh	r0, [r7, r1]
	cmp		r0, #0x0
	blt		_08317176
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	bge		_08317180
	add		r0, r2, r3
	b		_08317184
_08317176:
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	blt		_08317180
	add		r0, r2, r3
	b		_08317184
_08317180:
	add		r0, r3, #0x2
	sub		r0, r2, r0
_08317184:
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	lsl		r0, r2, #0x18
	asr		r1, r0, #0x18
	lsr		r0, r0, #0x1f
	add		r1, r1, r0
	asr		r2, r1, #0x1
	b		_083171a2
_08317194:
	mov		r3, #0x14
	ldrsh	r0, [r5, r3]
	add		r1, r4, #0x0
	add		r1, #0x56
	ldrh	r1, [r1, #0x0]
	sub		r0, r0, r1
	asr		r2, r0, #0x9
_083171a2:
	mov		r0, #0x7f
	and		r2, r0
	b		_083171aa
_083171a8:
	mov		r2, #0x0
_083171aa:
	add		r0, r2, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3171B2, 0x2
	thumb_func_end sub_08317048

	thumb_func_start sub_083171b4
sub_083171b4:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	mov		r12, r1
	add		r0, #0xd8
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x1d
	ldr		r0, [r4, #0x48]
	mov		r1, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_083171ec
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	ldr		r0, _083171e4
	cmp		r1, r0
	bgt		_083171ec
	ldr		r0, _083171e8
	ldr		r3, [r0, #0x10]
	mov		r0, #0x1
	and		r3, r0
	b		_083171ee

.incbin "base.gba", 0x3171E2, 0x2

_083171e4:	.4byte 0x009FFFFF
_083171e8:	.4byte 0x030031D0

_083171ec:
	mov		r3, #0x0
_083171ee:
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	add		r7, r2, #0x0
	cmp		r0, #0x0
	bne		_08317220
	mov		r5, #0x1
	and		r5, r6
	sub		r2, #0x2f
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x1e
	and		r0, r1
	cmp		r0, #0xc
	bls		_0831721c
	lsr		r0, r6, #0x1
	mov		r1, #0x1
	and		r0, r1
	add		r0, r5, r0
	add		r3, r3, r0
	b		_08317224
_0831721c:
	add		r3, r3, r5
	b		_08317224
_08317220:
	add		r2, r4, #0x0
	add		r2, #0x85
_08317224:
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x5c
	bne		_0831723c
	ldrh	r1, [r7, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831723c
	add		r0, r3, #0x4
	lsl		r0, r0, #0x18
	b		_0831723e
_0831723c:
	lsl		r0, r3, #0x18
_0831723e:
	lsr		r1, r0, #0x18
	mov		r2, r12
	ldrh	r0, [r2, #0x2]
	add		r0, r0, r1
	strh	r0, [r2, #0x2]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31724E, 0x2
	thumb_func_end sub_083171b4

	thumb_func_start sub_08317250
sub_08317250:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	lsl		r2, r2, #0x18
	mov		r1, #0x0
	mov		r0, #0xfc
	lsl		r0, r0, #0x16
	and		r0, r2
	lsr		r0, r0, #0x18
	cmp		r0, #0x0
	beq		_0831726a
	cmp		r0, #0x3f
	bne		_08317296
_0831726a:
	add		r0, r4, #0x0
	bl		sub_08317828
	cmp		r0, #0x0
	beq		_08317284
	add		r0, r4, #0x0
	add		r0, #0x6d
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x1
	and		r1, r0
	neg		r0, r1
	orr		r0, r1
	b		_0831728e
_08317284:
	add		r0, r4, #0x0
	add		r0, #0x88
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	mvn		r0, r0
_0831728e:
	asr		r1, r0, #0x1f
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	and		r1, r0
_08317296:
	ldrh	r0, [r5, #0x4]
	orr		r1, r0
	strh	r1, [r5, #0x4]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3172A2, 0x2
	thumb_func_end sub_08317250

	thumb_func_start sub_083172a4
sub_083172a4:
	add		r2, r1, #0x0
	add		r0, #0x76
	ldrh	r0, [r0, #0x0]
	mov		r1, #0x1
	cmp		r0, #0x0
	beq		_083172b2
	mov		r1, #0x3
_083172b2:
	lsl		r0, r1, #0xa
	ldrh	r1, [r2, #0x6]
	orr		r0, r1
	strh	r0, [r2, #0x6]
	bx		lr
	thumb_func_end sub_083172a4

	thumb_func_start sub_083172bc
sub_083172bc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r10, r2
	ldr		r4, _083173d0
	add		r5, r6, #0x0
	add		r5, #0xec
	ldrb	r0, [r5, #0x0]
	mov		r8, r0
	bl		sub_0831a26c
	add		r7, r0, #0x0
	ldr		r1, _083173d4
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, r6
	beq		_08317334
	ldr		r2, _083173d8
	add		r0, r4, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	and		r0, r1
	cmp		r0, #0x0
	bne		_08317334
	ldr		r1, _083173dc
	add		r0, r6, #0x0
	add		r0, #0x7e
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r3, [r0, #0x0]
	cmp		r3, #0x0
	bne		_08317318
	ldr		r0, [r4, #0x10]
	mov		r1, #0x7
	and		r0, r1
	ldrb	r2, [r5, #0x0]
	and		r1, r2
	cmp		r0, r1
	beq		_08317334
_08317318:
	mov		r0, #0x1
	neg		r0, r0
	mov		r1, r8
	lsl		r1, r1, #0x3
	mov		r9, r1
	cmp		r3, r0
	bne		_08317390
	ldr		r0, [r4, #0x10]
	mov		r1, #0x3
	and		r0, r1
	ldrb	r2, [r5, #0x0]
	and		r1, r2
	cmp		r0, r1
	bne		_08317390
_08317334:
	add		r0, r6, #0x0
	add		r0, #0x4c
	ldrb	r0, [r0, #0x0]
	strb	r0, [r7, #0x0]
	mov		r2, r10
	strb	r2, [r7, #0x1]
	add		r0, r6, #0x0
	bl		sub_08316dd0
	strb	r0, [r7, #0x2]
	mov		r2, #0xce
	lsl		r2, r2, #0x1
	add		r1, r6, r2
	strb	r0, [r1, #0x0]
	add		r0, r6, #0x0
	bl		sub_08317828
	cmp		r0, #0x0
	beq		_08317360
	add		r0, r6, #0x0
	add		r0, #0x6c
	ldrb	r0, [r0, #0x0]
_08317360:
	strb	r0, [r7, #0x3]
	mov		r0, r8
	lsl		r4, r0, #0x3
	ldr		r5, _083173e0
	add		r5, r4, r5
	mov		r2, r8
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_0831a288
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_083171b4
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	mov		r2, r10
	bl		sub_08317250
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_083172a4
	mov		r9, r4
_08317390:
	ldr		r1, _083173e4
	mov		r2, #0xe9
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_083173bc
	add		r0, r6, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_083173bc
	add		r0, r6, #0x0
	bl		sub_08316ef0
	add		r0, r6, #0x0
	bl		sub_08316ed8
_083173bc:
	ldr		r0, _083173e0
	add		r0, r9
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3173CE, 0x2

_083173d0:	.4byte 0x030031D0
_083173d4:	.4byte 0x000007AC
_083173d8:	.4byte 0x00000772
_083173dc:	.4byte 0x0202BEC0
_083173e0:	.4byte 0x03002198
_083173e4:	.4byte 0x030031F4
	thumb_func_end sub_083172bc

	thumb_func_start sub_083173e8
sub_083173e8:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	ldrh	r4, [r2, #0x10]
	mov		r1, #0xf0
	lsl		r1, r1, #0x8
	and		r1, r4
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	cmp		r1, r0
	beq		_08317432
	cmp		r1, r0
	bgt		_0831740c
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	cmp		r1, r0
	beq		_08317416
	b		_0831744c
_0831740c:
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	cmp		r1, r0
	beq		_08317420
	b		_0831744c
_08317416:
	add		r0, r3, #0x0
	add		r1, r2, #0x0
	bl		sub_08319140
	b		_0831744c
_08317420:
	mov		r0, #0x88
	lsl		r0, r0, #0x8
	cmp		r4, r0
	beq		_0831744c
	add		r0, r3, #0x0
	add		r1, r2, #0x0
	bl		sub_08318c70
	b		_0831744c
_08317432:
	ldr		r0, _08317454
	ldr		r1, _08317458
	add		r0, r0, r1
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831744c
	add		r0, r3, #0x0
	add		r1, r2, #0x0
	bl		sub_08318984
_0831744c:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x317452, 0x2

_08317454:	.4byte 0x030031D0
_08317458:	.4byte 0x00000772
	thumb_func_end sub_083173e8

	thumb_func_start sub_0831745c
sub_0831745c:
	add		r1, r0, #0x0
	add		r0, #0x91
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x8
	add		r1, #0x90
	ldrb	r1, [r1, #0x0]
	add		r0, r0, r1
	bx		lr

.incbin "base.gba", 0x31746C, 0x18
	thumb_func_end sub_0831745c

	thumb_func_start sub_08317484
sub_08317484:
	push	{ lr }
	cmp		r1, #0x0
	beq		_08317492
	mov		r1, #0x9
	bl		sub_08317658
	b		_08317498
_08317492:
	mov		r1, #0x8
	bl		sub_08317658
_08317498:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08317484

	thumb_func_start sub_0831749c
sub_0831749c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_0830f22c
	cmp		r0, #0x0
	beq		_083174bc
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0830f240
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_08317484
	b		_083174cc
_083174bc:
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0830f240
	add		r1, r0, #0x0
	add		r0, r4, #0x0
	bl		sub_08317484
_083174cc:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3174D2, 0x2
	thumb_func_end sub_0831749c

	thumb_func_start sub_083174d4
sub_083174d4:
	push	{ r4, r5, r6, lr }
	ldr		r2, _08317518
	add		r6, r2, #0x0
	add		r6, #0x24
	add		r0, #0x90
	ldrb	r0, [r0, #0x0]
	mov		r2, #0x7f
	add		r4, r2, #0x0
	and		r4, r0
	add		r1, #0x90
	ldrb	r0, [r1, #0x0]
	add		r5, r2, #0x0
	and		r5, r0
	cmp		r4, r5
	beq		_08317512
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_083119a8
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, r5
	beq		_08317512
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_08311990
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, r5
	bne		_0831751c
_08317512:
	mov		r0, #0x1
	b		_0831751e

.incbin "base.gba", 0x317516, 0x2

_08317518:	.4byte 0x030031D0

_0831751c:
	mov		r0, #0x0
_0831751e:
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_083174d4

	thumb_func_start sub_08317524
sub_08317524:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r5, r0, #0x0
	ldr		r0, _0831758c
	mov		r1, #0x24
	add		r1, r1, r0
	mov		r9, r1
	mov		r7, #0x0
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	mov		r8, r1
	mov		r6, #0x0
	ldr		r1, _08317590
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	cmp		r7, r0
	bge		_083175b4
_0831754a:
	lsl		r1, r6, #0x2
	mov		r0, #0xed
	lsl		r0, r0, #0x3
	add		r0, r9
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	cmp		r5, r4
	beq		_083175a8
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_083174d4
	cmp		r0, #0x0
	beq		_083175a8
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0830f22c
	cmp		r0, #0x0
	beq		_08317594
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0830f254
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x37
	bgt		_083175a8
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0831749c
	b		_083175a8

_0831758c:	.4byte 0x030031D0
_08317590:	.4byte 0x00000789

_08317594:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0830f254
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r8, r0
	ble		_083175a8
	mov		r8, r0
	add		r7, r4, #0x0
_083175a8:
	add		r6, #0x1
	ldr		r0, _083175cc
	add		r0, r9
	ldrb	r0, [r0, #0x0]
	cmp		r6, r0
	blt		_0831754a
_083175b4:
	cmp		r7, #0x0
	beq		_083175c0
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	bl		sub_0831749c
_083175c0:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_083175cc:	.4byte 0x00000765
	thumb_func_end sub_08317524

	thumb_func_start sub_083175d0
sub_083175d0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	ldr		r1, _08317654
	add		r0, r1, #0x0
	add		r0, #0x24
	mov		r2, #0x0
	mov		r8, r2
	mov		r7, #0x80
	lsl		r7, r7, #0x5
	mov		r2, #0xe7
	lsl		r2, r2, #0x3
	add		r1, r1, r2
	ldr		r4, [r1, #0x0]
	add		r1, r4, #0x0
	bl		sub_08310fdc
	add		r6, r0, #0x0
	mov		r0, #0x7f
	and		r6, r0
	cmp		r4, #0x0
	beq		_08317634
_083175fe:
	ldr		r0, [r4, #0x54]
	cmp		r0, r5
	beq		_0831762e
	add		r0, r5, #0x0
	add		r0, #0x90
	ldrb	r0, [r0, #0x0]
	cmp		r0, r6
	bne		_0831762e
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0830f22c
	cmp		r0, #0x0
	beq		_0831762e
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0830f254
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r7, r0
	ble		_0831762e
	add		r7, r0, #0x0
	mov		r8, r4
_0831762e:
	ldr		r4, [r4, #0x3c]
	cmp		r4, #0x0
	bne		_083175fe
_08317634:
	mov		r0, r8
	cmp		r0, #0x0
	beq		_0831764a
	add		r0, r5, #0x0
	mov		r1, r8
	bl		sub_0830f240
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_08317484
_0831764a:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08317654:	.4byte 0x030031D0
	thumb_func_end sub_083175d0

	thumb_func_start sub_08317658
sub_08317658:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r5, r1, #0x18
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08317682
	cmp		r5, #0x2
	beq		_0831767c
	cmp		r5, #0xf
	bne		_08317682
	add		r0, r4, #0x0
	bl		sub_08324498
	b		_08317682
_0831767c:
	add		r0, r4, #0x0
	bl		sub_08324068
_08317682:
	sub		r0, r5, #0x1
	cmp		r0, #0x6
	bhi		_083176da
	lsl		r0, r0, #0x2
	ldr		r1, _08317694
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x317692, 0x2

_08317694:	.4byte 0x02011698

.incbin "base.gba", 0x317698, 0x42

_083176da:
	sub		r0, r5, #0x3
	cmp		r0, #0xb
	bhi		_08317746
	lsl		r0, r0, #0x2
	ldr		r1, _083176ec
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x3176EA, 0x2

_083176ec:	.4byte 0x020116F0

.incbin "base.gba", 0x3176F0, 0x56

_08317746:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08317658

	thumb_func_start sub_0831774c
sub_0831774c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x70]
	lsl		r0, r0, #0x1c
	lsr		r0, r0, #0x1c
	sub		r0, #0x1
	cmp		r0, #0x6
	bhi		_083177ae
	lsl		r0, r0, #0x2
	ldr		r1, _08317768
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x317766, 0x2

_08317768:	.4byte 0x0201176C

.incbin "base.gba", 0x31776C, 0x42

_083177ae:
	add		r0, r4, #0x0
	add		r0, #0x72
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x1c
	lsr		r0, r0, #0x1c
	sub		r0, #0x3
	cmp		r0, #0xb
	bhi		_08317822
	lsl		r0, r0, #0x2
	ldr		r1, _083177c8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_083177c8:	.4byte 0x020117CC

.incbin "base.gba", 0x3177CC, 0x56

_08317822:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0831774c

	thumb_func_start sub_08317828
sub_08317828:
	add		r1, r0, #0x0
	add		r1, #0x6e
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x1c
	lsr		r0, r0, #0x1c
	cmp		r0, #0x2
	beq		_08317842
	cmp		r0, #0x2
	blt		_08317852
	cmp		r0, #0x9
	bgt		_08317852
	cmp		r0, #0x8
	blt		_08317852
_08317842:
	ldrh	r0, [r1, #0x0]
	mov		r1, #0xf8
	lsl		r1, r1, #0x1
	and		r1, r0
	neg		r0, r1
	orr		r0, r1
	lsr		r0, r0, #0x1f
	b		_08317854
_08317852:
	mov		r0, #0x0
_08317854:
	bx		lr

.incbin "base.gba", 0x317856, 0x1A
	thumb_func_end sub_08317828

	thumb_func_start sub_08317870
sub_08317870:
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x17
	add		r1, r1, r0
	add		r1, #0x6e
	ldrb	r2, [r1, #0x0]
	mov		r0, #0x10
	neg		r0, r0
	and		r0, r2
	strb	r0, [r1, #0x0]
	ldrh	r2, [r1, #0x0]
	ldr		r0, _08317894
	and		r0, r2
	strh	r0, [r1, #0x0]
	ldrb	r2, [r1, #0x1]
	mov		r0, #0x1
	and		r0, r2
	strb	r0, [r1, #0x1]
	bx		lr

_08317894:	.4byte 0xFFFFFE0F
	thumb_func_end sub_08317870

	thumb_func_start sub_08317898
sub_08317898:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r1, #0x0
	bl		sub_08317870
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_08317870
	add		r0, r4, #0x0
	mov		r1, #0x2
	bl		sub_08317870
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08317898

	thumb_func_start sub_083178b8
sub_083178b8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r2, r1, #0x18
	mov		r3, #0x0
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08317916
	sub		r0, r2, #0x1
	cmp		r0, #0x4
	bhi		_08317902
	lsl		r0, r0, #0x2
	ldr		r1, _083178dc
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_083178dc:	.4byte 0x020118E0

.incbin "base.gba", 0x3178E0, 0x22

_08317902:
	mov		r0, #0xbc
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	cmp		r0, r1
	ble		_08317912
	add		r0, r1, #0x0
_08317912:
	sub		r0, r1, r0
	strh	r0, [r2, #0x0]
_08317916:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_083178b8

	thumb_func_start sub_0831791c
sub_0831791c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r2, r1, #0x0
	add		r0, #0x91
	ldrb	r0, [r0, #0x0]
	mov		r5, #0x7f
	and		r5, r0
	cmp		r0, #0x7f
	bne		_08317932
	mov		r0, #0x0
	b		_08317958
_08317932:
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08317940
	mov		r0, #0x1
	b		_08317958
_08317940:
	add		r0, r2, #0x0
	bl		sub_08311960
	add		r1, r4, #0x0
	add		r1, #0xba
	ldrh	r1, [r1, #0x0]
	lsr		r1, r1, #0x1
	mov		r2, #0x5
	mul		r1, r2
	add		r0, r0, r5
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
_08317958:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x31795E, 0x2
	thumb_func_end sub_0831791c

	thumb_func_start sub_08317960
sub_08317960:
	add		r1, r0, #0x0
	add		r1, #0x7c
	add		r0, #0x82
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	bx		lr
	thumb_func_end sub_08317960

	thumb_func_start sub_08317978
sub_08317978:
	add		r0, #0x7c
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	bx		lr
	thumb_func_end sub_08317978

	thumb_func_start sub_08317980
sub_08317980:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	add		r0, #0xc6
	ldrh	r0, [r0, #0x0]
	lsr		r0, r0, #0x8
	add		r4, r0, #0x0
	sub		r4, #0x81
	cmp		r4, #0x4
	bhi		_083179e0
	bl		sub_08320678
	add		r2, r5, #0x0
	add		r2, #0xe8
	ldr		r1, [r2, #0x0]
	sub		r0, r0, r1
	ldr		r3, _083179bc
	add		r6, r2, #0x0
	cmp		r0, r3
	bhi		_083179c0
	bl		sub_08320678
	lsl		r2, r4, #0x1
	add		r1, r5, #0x0
	add		r1, #0xdc
	add		r1, r1, r2
	ldr		r2, [r6, #0x0]
	sub		r0, r0, r2
	strh	r0, [r1, #0x0]
	b		_083179ca

_083179bc:	.4byte 0x0000EA5F

_083179c0:
	lsl		r1, r4, #0x1
	add		r0, r5, #0x0
	add		r0, #0xdc
	add		r0, r0, r1
	strh	r3, [r0, #0x0]
_083179ca:
	mov		r1, #0xf1
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	bne		_083179da
	bl		sub_083208f0
_083179da:
	bl		sub_08320678
	str		r0, [r6, #0x0]
_083179e0:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3179E6, 0x2
	thumb_func_end sub_08317980

	thumb_func_start sub_083179e8
sub_083179e8:
	lsl		r1, r1, #0x1
	add		r0, #0xdc
	add		r0, r0, r1
	ldrh	r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x3179F2, 0x2A
	thumb_func_end sub_083179e8

	thumb_func_start sub_08317a1c
sub_08317a1c:
	add		r1, r0, #0x0
	ldr		r0, _08317a40
	cmp		r1, r0
	beq		_08317a72
	cmp		r1, r0
	bgt		_08317a58
	sub		r0, #0x3
	cmp		r1, r0
	beq		_08317a72
	cmp		r1, r0
	bgt		_08317a44
_08317a32:
	sub		r0, #0x2
	cmp		r1, r0
	beq		_08317a72
	add		r0, #0x1
	cmp		r1, r0
	beq		_08317a80
	b		_08317a84

_08317a40:	.4byte 0x00001005

_08317a44:
	ldr		r0, _08317a54
	cmp		r1, r0
	beq		_08317a80
	add		r0, #0x1
	cmp		r1, r0
	beq		_08317a72
	b		_08317a84

.incbin "base.gba", 0x317A52, 0x2

_08317a54:	.4byte 0x00001003

_08317a58:
	ldr		r0, _08317a78
	cmp		r1, r0
	beq		_08317a72
	cmp		r1, r0
	ble		_08317a32
	ldr		r0, _08317a7c
	cmp		r1, r0
	beq		_08317a72
	cmp		r1, r0
	blt		_08317a80
	add		r0, #0x1
	cmp		r1, r0
	bne		_08317a84
_08317a72:
	mov		r0, #0x1
	b		_08317a86

.incbin "base.gba", 0x317A76, 0x2

_08317a78:	.4byte 0x00002002
_08317a7c:	.4byte 0x00002004

_08317a80:
	mov		r0, #0x3
	b		_08317a86
_08317a84:
	mov		r0, #0x0
_08317a86:
	bx		lr
	thumb_func_end sub_08317a1c

	thumb_func_start sub_08317a88
sub_08317a88:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r6, r0, #0x0
	mov		r8, r1
	ldr		r5, _08317ac4
	mov		r0, r8
	bl		sub_08317a1c
	add		r4, r0, #0x0
	mov		r0, #0xbd
	lsl		r0, r0, #0x1
	add		r6, r6, r0
	ldrh	r0, [r6, #0x0]
	bl		sub_08317a1c
	ldr		r1, _08317ac8
	add		r5, r5, r1
	sub		r4, r4, r0
	ldrb	r0, [r5, #0x0]
	add		r4, r4, r0
	strb	r4, [r5, #0x0]
	mov		r1, r8
	strh	r1, [r6, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x317AC2, 0x2

_08317ac4:	.4byte 0x030031D0
_08317ac8:	.4byte 0x00000C1C

.incbin "base.gba", 0x317ACC, 0x4A0
	thumb_func_end sub_08317a88

	thumb_func_start sub_08317f6c
sub_08317f6c:
	add		r2, r0, #0x0
	ldr		r1, [r2, #0x0]
	add		r0, #0x4e
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	str		r1, [r2, #0x0]
	ldr		r1, [r2, #0x4]
	add		r0, r2, #0x0
	add		r0, #0x50
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	str		r1, [r2, #0x4]
	bx		lr

.incbin "base.gba", 0x317F8E, 0x2
	thumb_func_end sub_08317f6c

	thumb_func_start sub_08317f90
sub_08317f90:
	mov		r12, r0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08317fb6
	mov		r0, r12
	add		r0, #0x58
	ldrh	r3, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r3
	cmp		r0, #0x0
	bne		_08317fae
	mov		r0, #0x1
	b		_08317fe2
_08317fae:
	mov		r0, #0x20
	and		r0, r3
	cmp		r0, #0x0
	beq		_08317fbc
_08317fb6:
	mov		r0, #0x80
	lsl		r0, r0, #0xa
	b		_08317fe2
_08317fbc:
	ldr		r2, _08317fe4
	mov		r1, #0x7
	and		r1, r3
	mov		r0, #0x10
	and		r0, r3
	lsl		r1, r1, #0x3
	cmp		r0, #0x0
	bne		_08317fce
	add		r1, #0x4
_08317fce:
	add		r2, r1, r2
	mov		r0, #0xbc
	lsl		r0, r0, #0x1
	add		r0, r12
	ldrh	r0, [r0, #0x0]
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	ldr		r0, [r2, #0x0]
	add		r0, r0, r1
_08317fe2:
	bx		lr

_08317fe4:	.4byte 0x0202C180
	thumb_func_end sub_08317f90

	thumb_func_start sub_08317fe8
sub_08317fe8:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _08318008
	ldr		r0, [r0, #0x10]
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831800c
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r3, #0xc0
	lsl		r3, r3, #0x2
	b		_08318016

.incbin "base.gba", 0x318006, 0x2

_08318008:	.4byte 0x030031D0

_0831800c:
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x2
_08318016:
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r1, r4, #0x0
	add		r1, #0xb6
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	add		r2, r4, #0x0
	add		r2, #0x74
	ldrh	r1, [r2, #0x0]
	mov		r0, #0x3
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x1
	bl		sub_083178b8
	mov		r1, #0xf1
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_083180b2
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_083180b2
	mov		r6, #0x0
	mov		r5, #0x0
	ldr		r2, _083180b8
	ldr		r3, _083180bc
	mov		r0, #0xcc
	lsl		r0, r0, #0x1
	add		r4, r3, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_0831807a
	ldr		r1, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	cmp		r1, r0
	bne		_0831807a
	mov		r5, #0x1
_0831807a:
	cmp		r5, #0x0
	beq		_083180a8
	mov		r4, #0x0
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r3, r3, r1
	ldrh	r0, [r3, #0x4]
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	ldr		r0, [r1, #0x4]
	cmp		r0, #0x0
	bge		_083180a2
	ldr		r1, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	bne		_083180a2
	mov		r4, #0x1
_083180a2:
	cmp		r4, #0x0
	bne		_083180a8
	mov		r6, #0x1
_083180a8:
	cmp		r6, #0x0
	bne		_083180b2
	mov		r0, #0x33
	bl		sub_08325e94
_083180b2:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_083180b8:	.4byte 0x0202E890
_083180bc:	.4byte 0x0202E8F0
	thumb_func_end sub_08317fe8

	thumb_func_start sub_083180c0
sub_083180c0:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r4, r3, #0x0
	ldr		r0, [r5, #0x0]
	sub		r0, r0, r1
	cmp		r0, #0x0
	bge		_083180d2
	ldr		r1, _083180f0
	add		r0, r0, r1
_083180d2:
	asr		r1, r0, #0x10
	ldr		r0, [r5, #0x4]
	sub		r0, r0, r2
	cmp		r0, #0x0
	bge		_083180e0
	ldr		r2, _083180f0
	add		r0, r0, r2
_083180e0:
	asr		r2, r0, #0x10
	cmp		r1, #0x0
	bne		_083180f4
	cmp		r2, #0x0
	bne		_083180f4
	ldr		r2, [sp, #0x0+0x10]
	b		_08318104

.incbin "base.gba", 0x3180EE, 0x2

_083180f0:	.4byte 0x0000FFFF

_083180f4:
	lsl		r0, r1, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r2, #0x10
	asr		r1, r1, #0x10
	bl		sub_0830e808
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_08318104:
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	cmp		r4, r1
	bgt		_0831810e
	add		r4, r1, #0x0
_0831810e:
	ldr		r0, _08318130
	cmp		r4, r0
	ble		_08318118
	mov		r4, #0x80
	lsl		r4, r4, #0x3
_08318118:
	cmp		r4, r1
	beq		_0831813c
	ldr		r0, _08318134
	ldr		r0, [r0, #0x10]
	mov		r1, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_08318138
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	add		r2, r2, r0
	b		_0831813c

_08318130:	.4byte 0x000003FF
_08318134:	.4byte 0x030031D0

_08318138:
	ldr		r1, _08318198
	add		r2, r2, r1
_0831813c:
	ldr		r6, _0831819c
	lsl		r0, r2, #0x10
	asr		r2, r0, #0x10
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0831814a
	add		r1, #0x3f
_0831814a:
	asr		r3, r1, #0x6
	ldr		r1, _083181a0
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r6
	ldr		r0, [r1, #0x0]
	mul		r0, r4
	cmp		r0, #0x0
	bge		_08318164
	ldr		r1, _083181a4
	add		r0, r0, r1
_08318164:
	asr		r0, r0, #0xf
	add		r1, r5, #0x0
	add		r1, #0x4e
	strh	r0, [r1, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _083181a0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	add		r1, r4, #0x0
	mul		r1, r0
	cmp		r1, #0x0
	bge		_0831818a
	ldr		r2, _083181a4
	add		r1, r1, r2
_0831818a:
	asr		r1, r1, #0xf
	add		r0, r5, #0x0
	add		r0, #0x50
	strh	r1, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08318198:	.4byte 0xFFFFC000
_0831819c:	.4byte 0x0202A9A0
_083181a0:	.4byte 0x000003FF
_083181a4:	.4byte 0x00007FFF
	thumb_func_end sub_083180c0

	thumb_func_start sub_083181a8
sub_083181a8:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	add		r4, r1, #0x0
	add		r5, r3, #0x0
	ldr		r0, [sp, #0x0+0x14]
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	ldr		r0, [r6, #0x0]
	sub		r0, r0, r4
	cmp		r0, #0x0
	bge		_083181c2
	ldr		r1, _083181f0
	add		r0, r0, r1
_083181c2:
	asr		r4, r0, #0x10
	ldr		r0, [r6, #0x4]
	sub		r1, r0, r2
	cmp		r1, #0x0
	bge		_083181d0
	ldr		r2, _083181f0
	add		r1, r1, r2
_083181d0:
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	asr		r1, r1, #0x10
	bl		sub_0830e808
	lsl		r0, r0, #0x10
	lsl		r1, r7, #0x10
	asr		r1, r1, #0x10
	asr		r0, r0, #0x10
	sub		r0, r1, r0
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	blt		_083181f8
	ldr		r2, _083181f4
	b		_083181fc

.incbin "base.gba", 0x3181EE, 0x2

_083181f0:	.4byte 0x0000FFFF
_083181f4:	.4byte 0xFFFFC000

_083181f8:
	mov		r2, #0x80
	lsl		r2, r2, #0x7
_083181fc:
	add		r0, r1, r2
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r2, #0xc0
	lsl		r2, r2, #0x1
	cmp		r5, r2
	bgt		_0831820c
	add		r5, r2, #0x0
_0831820c:
	ldr		r4, _08318270
	cmp		r5, r4
	ble		_08318216
	mov		r5, #0x80
	lsl		r5, r5, #0x3
_08318216:
	lsl		r0, r0, #0x10
	asr		r7, r0, #0x10
	ldr		r0, _08318274
	mov		r12, r0
	add		r2, r7, #0x0
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08318228
	add		r0, #0x3f
_08318228:
	asr		r3, r0, #0x6
	add		r0, r3, #0x0
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	mul		r0, r5
	cmp		r0, #0x0
	bge		_0831823e
	ldr		r1, _08318278
	add		r0, r0, r1
_0831823e:
	asr		r0, r0, #0xf
	add		r1, r6, #0x0
	add		r1, #0x4e
	strh	r0, [r1, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	mul		r0, r5
	cmp		r0, #0x0
	bge		_08318260
	ldr		r2, _08318278
	add		r0, r0, r2
_08318260:
	asr		r1, r0, #0xf
	add		r0, r6, #0x0
	add		r0, #0x50
	strh	r1, [r0, #0x0]
	add		r0, r7, #0x0
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08318270:	.4byte 0x000003FF
_08318274:	.4byte 0x0202A9A0
_08318278:	.4byte 0x00007FFF
	thumb_func_end sub_083181a8

	thumb_func_start sub_0831827c
sub_0831827c:
	add		r3, r0, #0x0
	add		r0, #0x4e
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	neg		r1, r2
	cmp		r1, #0x0
	blt		_083182a4
	cmp		r1, #0x80
	bgt		_08318292
	mov		r1, #0x80
	b		_083182b6
_08318292:
	ldr		r0, _083182a0
	cmp		r1, r0
	ble		_083182b6
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	b		_083182b6

.incbin "base.gba", 0x31829E, 0x2

_083182a0:	.4byte 0x000003FF

_083182a4:
	cmp		r2, #0x80
	bgt		_083182ae
	mov		r1, #0x80
	neg		r1, r1
	b		_083182b6
_083182ae:
	ldr		r0, _083182d4
	cmp		r2, r0
	ble		_083182b6
	ldr		r1, _083182d8
_083182b6:
	add		r0, r3, #0x0
	add		r0, #0x4e
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	neg		r1, r2
	add		r3, r0, #0x0
	cmp		r1, #0x0
	blt		_083182ec
	cmp		r1, #0x80
	bgt		_083182dc
	mov		r1, #0x80
	b		_083182fe

.incbin "base.gba", 0x3182D2, 0x2

_083182d4:	.4byte 0x000003FF
_083182d8:	.4byte 0xFFFFFC00

_083182dc:
	ldr		r0, _083182e8
	cmp		r1, r0
	ble		_083182fe
	mov		r1, #0x80
	lsl		r1, r1, #0x3
	b		_083182fe

_083182e8:	.4byte 0x000003FF

_083182ec:
	cmp		r2, #0x80
	bgt		_083182f6
	mov		r1, #0x80
	neg		r1, r1
	b		_083182fe
_083182f6:
	ldr		r0, _08318304
	cmp		r2, r0
	ble		_083182fe
	ldr		r1, _08318308
_083182fe:
	strh	r1, [r3, #0x0]
	bx		lr

.incbin "base.gba", 0x318302, 0x2

_08318304:	.4byte 0x000003FF
_08318308:	.4byte 0xFFFFFC00
	thumb_func_end sub_0831827c

	thumb_func_start sub_0831830c
sub_0831830c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x34
	add		r6, r0, #0x0
	add		r7, r1, #0x0
	ldr		r0, _08318344
	add		r0, #0x24
	mov		r9, r0
	add		r0, r6, #0x0
	add		r0, #0x58
	ldrh	r1, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x8
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08318348
	add		r2, r7, #0x0
	add		r2, #0x58
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08318358
	b		_083184be

_08318344:	.4byte 0x030031D0

_08318348:
	add		r2, r7, #0x0
	add		r2, #0x58
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08318358
	b		_08318514
_08318358:
	add		r1, r6, #0x0
	add		r1, #0x58
	ldrh	r4, [r1, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x8
	add		r0, r3, #0x0
	and		r0, r4
	add		r5, r1, #0x0
	cmp		r0, #0x0
	beq		_08318378
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08318378
	b		_0831861c
_08318378:
	mov		r3, #0x40
	add		r0, r3, #0x0
	and		r0, r4
	cmp		r0, #0x0
	bne		_08318470
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831838e
	b		_08318514
_0831838e:
	mov		r4, #0x80
	lsl		r4, r4, #0x2
	add		r0, r6, #0x0
	add		r0, #0x5a
	ldr		r1, _0831845c
	mov		r8, r1
	mov		r2, r8
	strh	r2, [r0, #0x0]
	ldr		r0, [r6, #0x48]
	mov		r3, #0x80
	lsl		r3, r3, #0x5
	mov		r10, r3
	orr		r0, r3
	str		r0, [r6, #0x48]
	mov		r5, #0x8
	strh	r5, [r6, #0x38]
	add		r0, r6, #0x0
	mov		r1, r9
	bl		sub_08317fe8
	ldr		r1, [r7, #0x0]
	ldr		r2, [r7, #0x4]
	add		r0, r7, #0x0
	add		r0, #0x7a
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	str		r0, [sp, #0x0]
	add		r0, r6, #0x0
	add		r3, r4, #0x0
	bl		sub_083181a8
	add		r4, r0, #0x0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	add		r0, r7, #0x0
	add		r0, #0x5a
	mov		r1, r8
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x48]
	mov		r2, r10
	orr		r0, r2
	str		r0, [r7, #0x48]
	strh	r5, [r7, #0x38]
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_08317fe8
	lsl		r4, r4, #0x10
	ldr		r3, _08318460
	mov		r0, #0x80
	lsl		r0, r0, #0x18
	add		r4, r4, r0
	asr		r4, r4, #0x10
	add		r1, r4, #0x0
	cmp		r4, #0x0
	bge		_08318400
	add		r1, #0x3f
_08318400:
	asr		r2, r1, #0x6
	ldr		r1, _08318464
	add		r0, r1, #0x0
	add		r1, r2, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r3
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x9
	cmp		r0, #0x0
	bge		_0831841a
	ldr		r1, _08318468
	add		r0, r0, r1
_0831841a:
	asr		r0, r0, #0xf
	add		r1, r7, #0x0
	add		r1, #0x4e
	strh	r0, [r1, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r2
	ldr		r1, _08318464
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	lsl		r0, r0, #0x9
	cmp		r0, #0x0
	bge		_0831843e
	ldr		r2, _08318468
	add		r0, r0, r2
_0831843e:
	asr		r1, r0, #0xf
	add		r0, r7, #0x0
	add		r0, #0x50
	strh	r1, [r0, #0x0]
	ldr		r4, _0831846c
	mov		r0, #0x0
	add		r1, r4, #0x0
	mov		r2, #0x0
	bl		sub_0830fbb8
	str		r6, [r0, #0x54]
	mov		r0, #0x0
	add		r1, r4, #0x0
	b		_083184f8

.incbin "base.gba", 0x31845A, 0x2

_0831845c:	.4byte 0x00008007
_08318460:	.4byte 0x0202A9A0
_08318464:	.4byte 0x000003FF
_08318468:	.4byte 0x00007FFF
_0831846c:	.4byte 0x0202C200

_08318470:
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_083184ac
	add		r1, r7, #0x0
	add		r1, #0x5a
	ldr		r0, _083184a8
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r7, #0x48]
	mov		r0, #0x8
	strh	r0, [r7, #0x38]
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_08317fe8
	ldr		r1, [r6, #0x0]
	ldr		r2, [r6, #0x4]
	add		r0, r6, #0x0
	add		r0, #0x7a
	mov		r6, #0x0
	ldrsh	r0, [r0, r6]
	b		_083184e8

.incbin "base.gba", 0x3184A6, 0x2

_083184a8:	.4byte 0x00008007

_083184ac:
	mov		r3, #0x10
	add		r0, r3, #0x0
	and		r0, r4
	cmp		r0, #0x0
	beq		_0831850c
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08318560
_083184be:
	add		r1, r7, #0x0
	add		r1, #0x5a
	ldr		r0, _08318504
	strh	r0, [r1, #0x0]
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r7, #0x48]
	mov		r0, #0x8
	strh	r0, [r7, #0x38]
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_08317fe8
	ldr		r1, [r6, #0x0]
	ldr		r2, [r6, #0x4]
	add		r0, r6, #0x0
	add		r0, #0x7a
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
_083184e8:
	str		r0, [sp, #0x0]
	add		r0, r7, #0x0
	mov		r3, #0x80
	lsl		r3, r3, #0x2
	bl		sub_083181a8
	ldr		r1, _08318508
	mov		r0, #0x0
_083184f8:
	mov		r2, #0x0
	bl		sub_0830fbb8
	str		r7, [r0, #0x54]
	b		_08318960

.incbin "base.gba", 0x318502, 0x2

_08318504:	.4byte 0x00008007
_08318508:	.4byte 0x0202C200

_0831850c:
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08318560
_08318514:
	add		r1, r6, #0x0
	add		r1, #0x5a
	ldr		r0, _08318558
	strh	r0, [r1, #0x0]
	ldr		r0, [r6, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r6, #0x48]
	mov		r0, #0x8
	strh	r0, [r6, #0x38]
	add		r0, r6, #0x0
	mov		r1, r9
	bl		sub_08317fe8
	ldr		r1, [r7, #0x0]
	ldr		r2, [r7, #0x4]
	add		r0, r7, #0x0
	add		r0, #0x7a
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	str		r0, [sp, #0x0]
	add		r0, r6, #0x0
	mov		r3, #0x80
	lsl		r3, r3, #0x2
	bl		sub_083181a8
	ldr		r1, _0831855c
	mov		r0, #0x0
	mov		r2, #0x0
	bl		sub_0830fbb8
	str		r6, [r0, #0x54]
	b		_08318960

_08318558:	.4byte 0x00008007
_0831855c:	.4byte 0x0202C200

_08318560:
	ldrh	r1, [r5, #0x0]
	mov		r3, #0x20
	add		r0, r3, #0x0
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r9, r0
	cmp		r0, #0x0
	beq		_083185c8
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r8, r0
	cmp		r0, #0x0
	bne		_0831861c
	mov		r0, #0x5a
	add		r0, r0, r7
	mov		r9, r0
	ldr		r1, _083185c4
	mov		r10, r1
	mov		r2, r10
	strh	r2, [r0, #0x0]
	ldr		r0, [r7, #0x48]
	mov		r5, #0x80
	lsl		r5, r5, #0x5
	orr		r0, r5
	str		r0, [r7, #0x48]
	mov		r4, #0x8
	strh	r4, [r7, #0x38]
	ldr		r1, [r6, #0x0]
	ldr		r2, [r6, #0x4]
	mov		r3, #0x80
	lsl		r3, r3, #0x2
	mov		r6, r8
	str		r6, [sp, #0x0]
	add		r0, r7, #0x0
	bl		sub_083180c0
	mov		r1, r10
	mov		r0, r9
	strh	r1, [r0, #0x0]
	ldr		r0, [r7, #0x48]
	orr		r0, r5
	str		r0, [r7, #0x48]
	strh	r4, [r7, #0x38]
	add		r0, r7, #0x0
	b		_08318610

.incbin "base.gba", 0x3185C2, 0x2

_083185c4:	.4byte 0x00008007

_083185c8:
	ldrh	r1, [r2, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831861c
	mov		r2, #0x5a
	add		r2, r2, r6
	mov		r8, r2
	ldr		r3, _08318618
	mov		r10, r3
	mov		r0, r10
	strh	r0, [r2, #0x0]
	ldr		r0, [r6, #0x48]
	mov		r5, #0x80
	lsl		r5, r5, #0x5
	orr		r0, r5
	str		r0, [r6, #0x48]
	mov		r4, #0x8
	strh	r4, [r6, #0x38]
	ldr		r1, [r7, #0x0]
	ldr		r2, [r7, #0x4]
	mov		r3, #0x80
	lsl		r3, r3, #0x2
	mov		r0, r9
	str		r0, [sp, #0x0]
	add		r0, r6, #0x0
	bl		sub_083180c0
	mov		r2, r10
	mov		r1, r8
	strh	r2, [r1, #0x0]
	ldr		r0, [r6, #0x48]
	orr		r0, r5
	str		r0, [r6, #0x48]
	strh	r4, [r6, #0x38]
	add		r0, r6, #0x0
_08318610:
	mov		r1, #0x3
	bl		sub_083178b8
	b		_08318960

_08318618:	.4byte 0x00008007

_0831861c:
	add		r0, r6, #0x0
	bl		sub_08317f90
	str		r0, [sp, #0x10]
	add		r0, r7, #0x0
	bl		sub_08317f90
	mov		r10, r0
	ldr		r3, [sp, #0x10]
	cmp		r3, r10
	bge		_08318640
	add		r0, r6, #0x0
	add		r1, r3, #0x0
	add		r6, r7, #0x0
	add		r7, r0, #0x0
	mov		r0, r10
	str		r0, [sp, #0x10]
	mov		r10, r1
_08318640:
	add		r0, r6, #0x0
	add		r0, #0x5a
	ldr		r3, _083186dc
	strh	r3, [r0, #0x0]
	ldr		r0, [r6, #0x48]
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	orr		r0, r2
	str		r0, [r6, #0x48]
	mov		r1, #0x8
	strh	r1, [r6, #0x38]
	add		r0, r7, #0x0
	add		r0, #0x5a
	strh	r3, [r0, #0x0]
	ldr		r0, [r7, #0x48]
	orr		r0, r2
	str		r0, [r7, #0x48]
	strh	r1, [r7, #0x38]
	add		r0, r6, #0x0
	mov		r1, #0x3
	bl		sub_083178b8
	add		r0, r7, #0x0
	mov		r1, #0x3
	bl		sub_083178b8
	add		r0, r6, #0x0
	add		r0, #0xee
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	add		r1, r7, #0x0
	add		r1, #0xee
	mov		r2, #0x0
	ldrsh	r1, [r1, r2]
	sub		r0, r0, r1
	add		r1, r6, #0x0
	add		r1, #0xf0
	mov		r3, #0x0
	ldrsh	r1, [r1, r3]
	add		r2, r7, #0x0
	add		r2, #0xf0
	mov		r3, #0x0
	ldrsh	r2, [r2, r3]
	sub		r1, r1, r2
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_0830e808
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	add		r0, r6, #0x0
	add		r0, #0x7a
	ldrh	r4, [r0, #0x0]
	ldr		r0, _083186e0
	add		r3, r4, r0
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x10
	cmp		r1, #0x0
	blt		_083186e8
	mov		r5, #0x80
	lsl		r5, r5, #0x6
	cmp		r1, r5
	bgt		_083186ce
	mov		r1, #0xc0
	lsl		r1, r1, #0x7
	add		r0, r4, r1
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_083186ce:
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	ldr		r1, _083186e4
	cmp		r0, r1
	ble		_0831870e
	add		r0, r4, r5
	b		_0831870a

_083186dc:	.4byte 0x00008007
_083186e0:	.4byte 0xFFFF8000
_083186e4:	.4byte 0x5FFF0000

_083186e8:
	ldr		r0, _08318848
	cmp		r1, r0
	blt		_083186f8
	mov		r2, #0xa0
	lsl		r2, r2, #0x8
	add		r0, r4, r2
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_083186f8:
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	ldr		r1, _0831884c
	cmp		r0, r1
	bgt		_0831870e
	mov		r3, #0xe0
	lsl		r3, r3, #0x8
	add		r0, r4, r3
_0831870a:
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_0831870e:
	lsl		r0, r2, #0x10
	asr		r4, r0, #0x10
	add		r1, r4, #0x0
	str		r0, [sp, #0x14]
	cmp		r4, #0x0
	bge		_0831871c
	add		r1, #0x3f
_0831871c:
	asr		r5, r1, #0x6
	ldr		r0, _08318850
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	and		r0, r1
	lsl		r0, r0, #0x2
	ldr		r1, _08318854
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	sub		r0, r2, r5
	ldr		r3, _08318850
	and		r0, r3
	lsl		r0, r0, #0x2
	ldr		r2, _08318854
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	mov		r12, r0
	add		r3, r6, #0x0
	add		r3, #0x4e
	mov		r2, #0x0
	ldrsh	r0, [r3, r2]
	mov		r9, r0
	mov		r0, r9
	mul		r0, r1
	str		r0, [sp, #0x28]
	add		r1, r6, #0x0
	add		r1, #0x50
	mov		r0, #0x0
	ldrsh	r2, [r1, r0]
	mov		r8, r2
	mov		r2, r12
	mov		r0, r8
	mul		r0, r2
	ldr		r2, [sp, #0x28]
	sub		r0, r2, r0
	str		r3, [sp, #0x18]
	str		r1, [sp, #0x20]
	cmp		r0, #0x0
	bge		_08318772
	ldr		r3, _08318858
	add		r0, r0, r3
_08318772:
	asr		r0, r0, #0xf
	str		r0, [sp, #0x4]
	add		r0, r5, #0x0
	ldr		r1, _08318850
	and		r0, r1
	lsl		r0, r0, #0x2
	ldr		r2, _08318854
	add		r0, r0, r2
	ldr		r5, [r0, #0x0]
	mov		r3, r12
	mov		r1, r9
	mul		r1, r3
	mov		r0, r8
	mul		r0, r5
	add		r0, r1, r0
	cmp		r0, #0x0
	bge		_08318798
	ldr		r1, _08318858
	add		r0, r0, r1
_08318798:
	asr		r0, r0, #0xf
	str		r0, [sp, #0x8]
	add		r2, r7, #0x0
	add		r2, #0x4e
	str		r2, [sp, #0x30]
	mov		r0, #0x0
	ldrsh	r3, [r2, r0]
	mov		r9, r3
	mov		r1, r9
	mul		r1, r5
	str		r1, [sp, #0x28]
	add		r1, r7, #0x0
	add		r1, #0x50
	mov		r3, #0x0
	ldrsh	r2, [r1, r3]
	mov		r8, r2
	mov		r2, r12
	mov		r0, r8
	mul		r0, r2
	ldr		r3, [sp, #0x28]
	sub		r2, r3, r0
	ldr		r0, [sp, #0x30]
	str		r0, [sp, #0x1C]
	str		r1, [sp, #0x24]
	cmp		r2, #0x0
	bge		_083187d0
	ldr		r1, _08318858
	add		r2, r2, r1
_083187d0:
	asr		r2, r2, #0xf
	str		r2, [sp, #0xC]
	mov		r2, r12
	mov		r1, r9
	mul		r1, r2
	mov		r0, r8
	mul		r0, r5
	add		r0, r1, r0
	cmp		r0, #0x0
	bge		_083187e8
	ldr		r3, _08318858
	add		r0, r0, r3
_083187e8:
	asr		r0, r0, #0xf
	mov		r9, r0
	ldr		r1, [sp, #0x10]
	mov		r2, r10
	sub		r0, r1, r2
	ldr		r3, [sp, #0x4]
	mul		r0, r3
	ldr		r2, [sp, #0xC]
	lsl		r1, r2, #0x1
	mov		r3, r10
	mul		r3, r1
	add		r1, r3, #0x0
	add		r0, r0, r1
	ldr		r4, [sp, #0x10]
	add		r4, r10
	add		r1, r4, #0x0
	bl		sub_08327340
	add		r5, r0, #0x0
	ldr		r1, [sp, #0x4]
	lsl		r0, r1, #0x1
	ldr		r2, [sp, #0x10]
	mul		r0, r2
	mov		r3, r10
	sub		r1, r3, r2
	ldr		r2, [sp, #0xC]
	mul		r1, r2
	add		r0, r0, r1
	add		r1, r4, #0x0
	bl		sub_08327340
	add		r4, r0, #0x0
	add		r0, r6, #0x0
	add		r0, #0x58
	add		r1, r7, #0x0
	add		r1, #0x58
	ldrh	r0, [r0, #0x0]
	ldrh	r1, [r1, #0x0]
	cmp		r0, r1
	beq		_08318860
	sub		r1, r5, r4
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	bgt		_08318886
	ldr		r3, _0831885c
	add		r4, r5, r3
	b		_08318886

_08318848:	.4byte 0xFFFFE000
_0831884c:	.4byte 0xFFFFA000
_08318850:	.4byte 0x000003FF
_08318854:	.4byte 0x0202A9A0
_08318858:	.4byte 0x00007FFF
_0831885c:	.4byte 0xFFFFFE00

_08318860:
	sub		r1, r5, r4
	mov		r0, #0x80
	lsl		r0, r0, #0x2
	cmp		r1, r0
	bgt		_08318886
	lsr		r0, r1, #0x1f
	add		r0, r1, r0
	asr		r0, r0, #0x1
	add		r0, r4, r0
	mov		r6, #0x80
	lsl		r6, r6, #0x1
	add		r5, r0, r6
	sub		r0, r5, r4
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	add		r0, r4, r0
	ldr		r1, _08318970
	add		r4, r0, r1
_08318886:
	ldr		r7, _08318974
	ldr		r2, [sp, #0x14]
	asr		r3, r2, #0x10
	add		r0, r3, #0x0
	cmp		r3, #0x0
	bge		_08318894
	add		r0, #0x3f
_08318894:
	asr		r2, r0, #0x6
	ldr		r6, _08318978
	add		r1, r6, #0x0
	add		r0, r2, #0x0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r2
	ldr		r6, _08318978
	mov		r10, r6
	and		r0, r6
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r7, [r0, #0x0]
	mul		r1, r5
	ldr		r6, [sp, #0x8]
	add		r0, r6, #0x0
	mul		r0, r7
	add		r0, r1, r0
	cmp		r0, #0x0
	bge		_083188c8
	ldr		r1, _0831897c
	add		r0, r0, r1
_083188c8:
	asr		r0, r0, #0xf
	mov		r8, r0
	add		r0, r2, #0x0
	mov		r2, r10
	and		r0, r2
	lsl		r0, r0, #0x2
	ldr		r6, _08318974
	add		r0, r0, r6
	ldr		r2, [r0, #0x0]
	ldr		r0, [sp, #0x8]
	add		r1, r0, #0x0
	mul		r1, r2
	add		r0, r5, #0x0
	mul		r0, r7
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_083188ee
	ldr		r1, _0831897c
	add		r0, r0, r1
_083188ee:
	asr		r6, r0, #0xf
	add		r1, r4, #0x0
	mul		r1, r2
	mov		r0, r9
	mul		r0, r7
	add		r1, r1, r0
	cmp		r1, #0x0
	bge		_08318902
	ldr		r0, _0831897c
	add		r1, r1, r0
_08318902:
	asr		r5, r1, #0xf
	mov		r1, r9
	mul		r1, r2
	add		r0, r4, #0x0
	mul		r0, r7
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_08318916
	ldr		r1, _0831897c
	add		r0, r0, r1
_08318916:
	asr		r0, r0, #0xf
	mov		r4, #0x80
	lsl		r4, r4, #0x3
	cmp		r8, r4
	ble		_08318922
	mov		r8, r4
_08318922:
	ldr		r3, _08318980
	cmp		r8, r3
	bge		_0831892a
	mov		r8, r3
_0831892a:
	cmp		r6, r4
	ble		_08318930
	add		r6, r4, #0x0
_08318930:
	cmp		r6, r3
	bge		_08318936
	add		r6, r3, #0x0
_08318936:
	cmp		r5, r4
	ble		_0831893c
	add		r5, r4, #0x0
_0831893c:
	cmp		r5, r3
	bge		_08318942
	add		r5, r3, #0x0
_08318942:
	cmp		r0, r4
	ble		_08318948
	add		r0, r4, #0x0
_08318948:
	cmp		r0, r3
	bge		_0831894e
	add		r0, r3, #0x0
_0831894e:
	mov		r3, r8
	ldr		r2, [sp, #0x18]
	strh	r3, [r2, #0x0]
	ldr		r1, [sp, #0x20]
	strh	r6, [r1, #0x0]
	ldr		r2, [sp, #0x1C]
	strh	r5, [r2, #0x0]
	ldr		r3, [sp, #0x24]
	strh	r0, [r3, #0x0]
_08318960:
	add		sp, #0x34
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08318970:	.4byte 0xFFFFFF00
_08318974:	.4byte 0x0202A9A0
_08318978:	.4byte 0x000003FF
_0831897c:	.4byte 0x00007FFF
_08318980:	.4byte 0xFFFFFC00
	thumb_func_end sub_0831830c

	thumb_func_start sub_08318984
sub_08318984:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x4
	mov		r9, r0
	mov		r10, r1
	ldrh	r0, [r0, #0x38]
	str		r0, [sp, #0x0]
	ldrh	r0, [r1, #0x38]
	ldr		r1, [sp, #0x0]
	orr		r1, r0
	str		r1, [sp, #0x0]
	cmp		r1, #0x1
	ble		_083189a6
	b		_08318b58
_083189a6:
	mov		r0, r9
	add		r0, #0x60
	mov		r1, r10
	add		r1, #0x60
	ldrh	r2, [r0, #0x0]
	ldrh	r0, [r1, #0x0]
	orr		r0, r2
	cmp		r0, #0x0
	beq		_083189ba
	b		_08318b58
_083189ba:
	mov		r0, r9
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bls		_083189c6
	b		_08318b58
_083189c6:
	mov		r0, r10
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bls		_083189d2
	b		_08318b58
_083189d2:
	mov		r2, r9
	ldr		r0, [r2, #0x8]
	ldr		r1, _08318b68
	cmp		r0, r1
	ble		_083189de
	b		_08318b58
_083189de:
	mov		r2, r10
	ldr		r0, [r2, #0x8]
	cmp		r0, r1
	ble		_083189e8
	b		_08318b58
_083189e8:
	mov		r0, r9
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_083189f6
	b		_08318b58
_083189f6:
	mov		r0, r10
	add		r0, #0x66
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	beq		_08318a04
	b		_08318b58
_08318a04:
	mov		r0, r9
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x8
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08318a16
	b		_08318b4e
_08318a16:
	mov		r0, r10
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_08318a26
	b		_08318b4e
_08318a26:
	ldr		r2, _08318b6c
	mov		r1, r9
	add		r1, #0xbc
	mov		r0, r10
	add		r0, #0xbc
	ldr		r7, [r0, #0x0]
	ldr		r1, [r1, #0x0]
	cmp		r7, r1
	bge		_08318a3a
	add		r7, r1, #0x0
_08318a3a:
	ldr		r1, _08318b70
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	cmp		r9, r0
	bne		_08318ac2
	mov		r2, r9
	ldr		r0, [r2, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08318ac2
	add		r0, r7, #0x0
	cmp		r7, #0x0
	bge		_08318a58
	neg		r0, r7
_08318a58:
	lsl		r0, r0, #0x6
	lsr		r0, r0, #0x16
	ldr		r1, _08318b74
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	add		r4, r7, #0x0
	cmp		r7, #0x0
	bge		_08318a6c
	neg		r4, r7
_08318a6c:
	asr		r4, r4, #0x14
	mov		r0, #0x3f
	and		r4, r0
	add		r4, #0xc0
	lsl		r6, r6, #0x10
	asr		r6, r6, #0x10
	mov		r0, #0x3b
	bl		sub_08325e94
	ldr		r2, _08318b78
	mov		r8, r2
	ldr		r5, _08318b7c
	mov		r0, #0xec
	lsl		r0, r0, #0x1
	add		r5, r5, r0
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_08326084
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r4, #0x0
	bl		sub_08326df4
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08326e5c
_08318ac2:
	ldr		r1, _08318b80
	mov		r2, #0xf1
	lsl		r2, r2, #0x3
	add		r0, r1, r2
	ldr		r0, [r0, #0x0]
	cmp		r10, r0
	bne		_08318b4e
	mov		r1, r10
	ldr		r0, [r1, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08318b4e
	add		r0, r7, #0x0
	cmp		r7, #0x0
	bge		_08318ae4
	neg		r0, r7
_08318ae4:
	lsl		r0, r0, #0x6
	lsr		r0, r0, #0x16
	ldr		r2, _08318b74
	add		r0, r0, r2
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	add		r0, r7, #0x0
	cmp		r0, #0x0
	bge		_08318af8
	neg		r0, r0
_08318af8:
	asr		r4, r0, #0x14
	mov		r0, #0x3f
	and		r4, r0
	add		r4, #0xc0
	lsl		r6, r6, #0x10
	asr		r6, r6, #0x10
	mov		r0, #0x3b
	bl		sub_08325e94
	ldr		r0, _08318b78
	mov		r8, r0
	ldr		r5, _08318b7c
	mov		r1, #0xec
	lsl		r1, r1, #0x1
	add		r5, r5, r1
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	bl		sub_08326084
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r4, #0x0
	bl		sub_08326df4
	ldrh	r1, [r5, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08326e5c
_08318b4e:
	mov		r0, r9
	mov		r1, r10
	ldr		r2, [sp, #0x0]
	bl		sub_0831830c
_08318b58:
	add		sp, #0x4
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08318b68:	.4byte 0x0004FFFF
_08318b6c:	.4byte 0x030031D0
_08318b70:	.4byte 0x000007AC
_08318b74:	.4byte 0xFFFFFE00
_08318b78:	.4byte 0x0202E890
_08318b7c:	.4byte 0x0202E8F0
_08318b80:	.4byte 0x030031F4
	thumb_func_end sub_08318984

	thumb_func_start sub_08318b84
sub_08318b84:
	mov		r1, #0x3
	strh	r1, [r0, #0x38]
	add		r0, #0xb4
	ldrh	r2, [r0, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x5
	add		r1, r3, #0x0
	orr		r1, r2
	strh	r1, [r0, #0x0]
	bx		lr
	thumb_func_end sub_08318b84

	thumb_func_start sub_08318b98
sub_08318b98:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	ldr		r0, _08318bc4
	add		r7, r0, #0x0
	add		r7, #0x24
	add		r4, r6, #0x0
	ldrh	r1, [r6, #0x10]
	ldr		r0, _08318bc8
	cmp		r1, r0
	bne		_08318bec
	add		r2, r5, #0x0
	add		r2, #0x4e
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	cmp		r0, r1
	ble		_08318bcc
	add		r3, r0, #0x0
	b		_08318bce

_08318bc4:	.4byte 0x030031D0
_08318bc8:	.4byte 0x00008403

_08318bcc:
	add		r3, r1, #0x0
_08318bce:
	add		r2, r5, #0x0
	add		r2, #0x50
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	cmp		r0, r1
	ble		_08318be0
	add		r1, r0, #0x0
_08318be0:
	lsl		r0, r3, #0x7
	str		r0, [r4, #0x28]
	lsl		r0, r1, #0x7
	str		r0, [r4, #0x2c]
	mov		r0, #0x8
	strh	r0, [r4, #0x38]
_08318bec:
	add		r0, r5, #0x0
	add		r1, r7, #0x0
	bl		sub_08317fe8
	ldr		r1, [r4, #0x0]
	ldr		r2, [r4, #0x4]
	add		r0, r6, #0x0
	add		r0, #0x71
	ldrb	r3, [r0, #0x0]
	lsl		r3, r3, #0x3
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	add		r0, r5, #0x0
	bl		sub_083180c0
	mov		r1, #0xf1
	lsl		r1, r1, #0x3
	add		r0, r7, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08318c60
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_08320124
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	cmp		r6, #0x0
	beq		_08318c60
	mov		r0, #0x45
	bl		sub_08325e94
	ldr		r5, _08318c68
	ldr		r4, _08318c6c
	mov		r0, #0x8a
	lsl		r0, r0, #0x2
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_08326084
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08326df4
_08318c60:
	add		sp, #0x4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08318c68:	.4byte 0x0202E890
_08318c6c:	.4byte 0x0202E8F0
	thumb_func_end sub_08318b98

	thumb_func_start sub_08318c70
sub_08318c70:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r6, _08318d24
	add		r7, r6, #0x0
	add		r7, #0x24
	add		r0, #0x60
	add		r1, #0x50
	ldrh	r2, [r0, #0x0]
	ldrh	r0, [r1, #0x0]
	orr		r0, r2
	cmp		r0, #0x0
	beq		_08318c8c
	b		_08318db8
_08318c8c:
	add		r0, r4, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bls		_08318c98
	b		_08318db8
_08318c98:
	ldr		r0, [r4, #0x8]
	ldr		r1, _08318d28
	cmp		r0, r1
	ble		_08318ca2
	b		_08318db8
_08318ca2:
	ldr		r0, [r5, #0x8]
	cmp		r0, r1
	ble		_08318caa
	b		_08318db8
_08318caa:
	add		r0, r4, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_08318cb8
	b		_08318db8
_08318cb8:
	ldrh	r3, [r5, #0x10]
	ldr		r0, _08318d2c
	cmp		r3, r0
	bne		_08318cc2
	b		_08318db8
_08318cc2:
	add		r0, r4, #0x0
	add		r0, #0x6a
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	beq		_08318d3c
	ldr		r1, _08318d30
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08318db8
	add		r0, r7, #0x0
	add		r1, r4, #0x0
	bl		sub_08320124
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	cmp		r6, #0x0
	beq		_08318db8
	mov		r0, #0x2b
	bl		sub_08325e94
	ldr		r5, _08318d34
	ldr		r4, _08318d38
	mov		r2, #0xac
	lsl		r2, r2, #0x1
	add		r4, r4, r2
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_08326084
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08326df4
	b		_08318db8

_08318d24:	.4byte 0x030031D0
_08318d28:	.4byte 0x00041FFF
_08318d2c:	.4byte 0x00008003
_08318d30:	.4byte 0x000007AC
_08318d34:	.4byte 0x0202E890
_08318d38:	.4byte 0x0202E8F0

_08318d3c:
	add		r2, r4, #0x0
	add		r2, #0x5a
	ldr		r0, _08318d6c
	strh	r0, [r2, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r4, #0x48]
	mov		r0, #0x8
	strh	r0, [r4, #0x38]
	ldr		r0, _08318d70
	cmp		r3, r0
	bne		_08318d74
	ldrh	r1, [r2, #0x0]
	sub		r0, #0x2
	and		r0, r1
	strh	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08318b84
	b		_08318db8

.incbin "base.gba", 0x318D6A, 0x2

_08318d6c:	.4byte 0x00008007
_08318d70:	.4byte 0x00008001

_08318d74:
	cmp		r3, r0
	blt		_08318db8
	ldr		r0, _08318da0
	cmp		r3, r0
	bgt		_08318db8
	sub		r0, #0x2
	cmp		r3, r0
	blt		_08318db8
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08318b98
	ldr		r1, [r5, #0x54]
	cmp		r1, r4
	beq		_08318dac
	ldr		r2, _08318da4
	add		r0, r6, r2
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bne		_08318dac
	ldr		r1, _08318da8
	b		_08318dae

_08318da0:	.4byte 0x00008403
_08318da4:	.4byte 0x000007AC
_08318da8:	.4byte 0x0202C1C0

_08318dac:
	ldr		r1, _08318dc0
_08318dae:
	mov		r0, #0x0
	mov		r2, #0x0
	bl		sub_0830fbb8
	str		r4, [r0, #0x54]
_08318db8:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x318DBE, 0x2

_08318dc0:	.4byte 0x0202C1E8
	thumb_func_end sub_08318c70

	thumb_func_start sub_08318dc4
sub_08318dc4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r6, r0, #0x0
	add		r0, #0xee
	mov		r3, #0x0
	ldrsh	r2, [r0, r3]
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bge		_08318de2
	ldr		r4, _08318e40
	add		r0, r0, r4
_08318de2:
	asr		r0, r0, #0x10
	sub		r2, r2, r0
	add		r0, r6, #0x0
	add		r0, #0xf0
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	ldr		r1, [r1, #0x4]
	cmp		r1, #0x0
	bge		_08318df8
	ldr		r4, _08318e40
	add		r1, r1, r4
_08318df8:
	asr		r1, r1, #0x10
	sub		r1, r0, r1
	lsl		r0, r2, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_0830e808
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	add		r0, r6, #0x0
	add		r0, #0x7a
	ldrh	r4, [r0, #0x0]
	ldr		r0, _08318e44
	add		r3, r4, r0
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x10
	cmp		r1, #0x0
	blt		_08318e4c
	mov		r5, #0x80
	lsl		r5, r5, #0x4
	cmp		r1, r5
	bgt		_08318e32
	mov		r1, #0xf0
	lsl		r1, r1, #0x7
	add		r0, r4, r1
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_08318e32:
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	ldr		r1, _08318e48
	cmp		r0, r1
	ble		_08318e72
	add		r0, r4, r5
	b		_08318e6e

_08318e40:	.4byte 0x0000FFFF
_08318e44:	.4byte 0xFFFF8000
_08318e48:	.4byte 0x77FF0000

_08318e4c:
	ldr		r0, _08318f78
	cmp		r1, r0
	blt		_08318e5c
	mov		r2, #0x88
	lsl		r2, r2, #0x8
	add		r0, r4, r2
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_08318e5c:
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	ldr		r1, _08318f7c
	cmp		r0, r1
	bgt		_08318e72
	mov		r3, #0xf8
	lsl		r3, r3, #0x8
	add		r0, r4, r3
_08318e6e:
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_08318e72:
	lsl		r0, r2, #0x10
	asr		r4, r0, #0x10
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_08318e7e
	add		r0, #0x3f
_08318e7e:
	asr		r5, r0, #0x6
	ldr		r0, _08318f80
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	and		r0, r1
	lsl		r0, r0, #0x2
	ldr		r1, _08318f84
	add		r0, r0, r1
	ldr		r1, [r0, #0x0]
	str		r5, [sp, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r10, r2
	sub		r0, r2, r5
	ldr		r3, _08318f80
	mov		r9, r3
	and		r0, r3
	lsl		r0, r0, #0x2
	ldr		r2, _08318f84
	add		r0, r0, r2
	ldr		r7, [r0, #0x0]
	add		r3, r6, #0x0
	add		r3, #0x4e
	mov		r2, #0x0
	ldrsh	r0, [r3, r2]
	mov		r8, r0
	mov		r2, r8
	mul		r2, r1
	add		r1, r6, #0x0
	add		r1, #0x50
	mov		r0, #0x0
	ldrsh	r6, [r1, r0]
	mov		r12, r6
	mov		r0, r12
	mul		r0, r7
	sub		r0, r2, r0
	str		r3, [sp, #0x4]
	str		r1, [sp, #0x8]
	cmp		r0, #0x0
	bge		_08318ed2
	ldr		r1, _08318f88
	add		r0, r0, r1
_08318ed2:
	asr		r2, r0, #0xf
	add		r0, r5, #0x0
	mov		r3, r9
	and		r0, r3
	lsl		r0, r0, #0x2
	ldr		r6, _08318f84
	add		r0, r0, r6
	ldr		r6, [r0, #0x0]
	mov		r1, r8
	mul		r1, r7
	mov		r0, r12
	mul		r0, r6
	add		r0, r1, r0
	cmp		r0, #0x0
	bge		_08318ef4
	ldr		r1, _08318f88
	add		r0, r0, r1
_08318ef4:
	asr		r5, r0, #0xf
	lsr		r0, r0, #0x1f
	add		r0, r5, r0
	asr		r5, r0, #0x1
	neg		r0, r2
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r2, r0, #0x1
	cmp		r2, #0xff
	bgt		_08318f0a
	mov		r2, r10
_08318f0a:
	add		r1, r2, #0x0
	mul		r1, r6
	add		r0, r5, #0x0
	mul		r0, r7
	add		r0, r1, r0
	cmp		r0, #0x0
	bge		_08318f1c
	ldr		r3, _08318f88
	add		r0, r0, r3
_08318f1c:
	asr		r3, r0, #0xf
	mov		r4, r10
	ldr		r1, [sp, #0x0]
	sub		r0, r4, r1
	mov		r4, r9
	and		r0, r4
	lsl		r0, r0, #0x2
	ldr		r1, _08318f84
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	mul		r1, r6
	mul		r0, r2
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_08318f40
	ldr		r2, _08318f88
	add		r0, r0, r2
_08318f40:
	asr		r0, r0, #0xf
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	cmp		r3, r2
	ble		_08318f4c
	add		r3, r2, #0x0
_08318f4c:
	ldr		r1, _08318f8c
	cmp		r3, r1
	bge		_08318f54
	add		r3, r1, #0x0
_08318f54:
	cmp		r0, r2
	ble		_08318f5a
	add		r0, r2, #0x0
_08318f5a:
	cmp		r0, r1
	bge		_08318f60
	add		r0, r1, #0x0
_08318f60:
	ldr		r4, [sp, #0x4]
	strh	r3, [r4, #0x0]
	ldr		r6, [sp, #0x8]
	strh	r0, [r6, #0x0]
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08318f78:	.4byte 0xFFFFF800
_08318f7c:	.4byte 0xFFFF8800
_08318f80:	.4byte 0x000003FF
_08318f84:	.4byte 0x0202A9A0
_08318f88:	.4byte 0x00007FFF
_08318f8c:	.4byte 0xFFFFFC00
	thumb_func_end sub_08318dc4

	thumb_func_start sub_08318f90
sub_08318f90:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r2, r1, #0x0
	ldr		r1, [r5, #0x0]
	ldr		r0, [r2, #0x0]
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_08318fa4
	ldr		r1, _08319034
	add		r0, r0, r1
_08318fa4:
	asr		r3, r0, #0x10
	ldr		r1, [r5, #0x4]
	ldr		r0, [r2, #0x4]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_08318fb4
	ldr		r0, _08319034
	add		r1, r1, r0
_08318fb4:
	add		r0, r3, #0x0
	asr		r1, r1, #0x10
	bl		sub_0830e808
	ldr		r6, _08319038
	lsl		r0, r0, #0x10
	asr		r2, r0, #0x10
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_08318fca
	add		r1, #0x3f
_08318fca:
	asr		r4, r1, #0x6
	ldr		r1, _0831903c
	add		r0, r1, #0x0
	add		r1, r4, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r6
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x9
	cmp		r0, #0x0
	bge		_08318fe4
	ldr		r1, _08319040
	add		r0, r0, r1
_08318fe4:
	asr		r3, r0, #0xf
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r4
	ldr		r1, _0831903c
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x9
	neg		r0, r0
	cmp		r0, #0x0
	bge		_08319002
	ldr		r1, _08319040
	add		r0, r0, r1
_08319002:
	asr		r1, r0, #0xf
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r3, r0
	ble		_0831900e
	add		r3, r0, #0x0
_0831900e:
	cmp		r1, r0
	ble		_08319014
	add		r1, r0, #0x0
_08319014:
	ldr		r0, _08319044
	cmp		r3, r0
	bge		_0831901c
	add		r3, r0, #0x0
_0831901c:
	cmp		r1, r0
	bge		_08319022
	add		r1, r0, #0x0
_08319022:
	add		r0, r5, #0x0
	add		r0, #0x4e
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x319032, 0x2

_08319034:	.4byte 0x0000FFFF
_08319038:	.4byte 0x0202A9A0
_0831903c:	.4byte 0x000003FF
_08319040:	.4byte 0x00007FFF
_08319044:	.4byte 0xFFFFFC00
	thumb_func_end sub_08318f90

	thumb_func_start sub_08319048
sub_08319048:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r1, _08319064
	add		r1, #0x24
	bl		sub_08317fe8
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08318dc4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08319064:	.4byte 0x030031D0
	thumb_func_end sub_08319048

	thumb_func_start sub_08319068
sub_08319068:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r2, r1, #0x0
	ldr		r1, [r2, #0x8]
	mov		r0, #0x80
	lsl		r0, r0, #0x9
	cmp		r1, r0
	ble		_0831907e
	ldr		r0, [r2, #0x30]
	cmp		r0, #0x0
	blt		_083190a4
_0831907e:
	add		r0, r4, #0x0
	bl		sub_0831827c
	add		r2, r4, #0x0
	add		r2, #0x4e
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	mov		r1, #0x0
	ldrsh	r0, [r2, r1]
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r0, r0, #0x1
	strh	r0, [r2, #0x0]
	b		_083190e4
_083190a4:
	add		r0, r4, #0x0
	add		r0, #0x88
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	sub		r0, #0x3a
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _083190ec
	and		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0xe0
	lsl		r0, r0, #0x7
	strh	r0, [r4, #0x38]
	add		r1, r4, #0x0
	add		r1, #0x64
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	mov		r0, #0x35
	bl		sub_08325f60
	add		r0, r4, #0x0
	mov		r1, #0x5
	bl		sub_08317658
	add		r0, r4, #0x0
	mov		r1, #0x4
	bl		sub_083178b8
_083190e4:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3190EA, 0x2

_083190ec:	.4byte 0x0000FFD3
	thumb_func_end sub_08319068

	thumb_func_start sub_083190f0
sub_083190f0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r1, _0831910c
	add		r1, #0x24
	bl		sub_08317fe8
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_08318f90
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0831910c:	.4byte 0x030031D0

.incbin "base.gba", 0x319110, 0x10
	thumb_func_end sub_083190f0

	thumb_func_start sub_08319120
sub_08319120:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r1, _0831913c
	add		r1, #0x24
	bl		sub_08317fe8
	add		r4, #0x68
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	strh	r0, [r4, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31913A, 0x2

_0831913c:	.4byte 0x030031D0
	thumb_func_end sub_08319120

	thumb_func_start sub_08319140
sub_08319140:
	push	{ r4, lr }
	add		r4, r0, #0x0
	add		r2, r1, #0x0
	ldrh	r1, [r4, #0x38]
	cmp		r1, #0x1
	ble		_0831914e
	b		_083192b4
_0831914e:
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x1
	bls		_08319158
	b		_083192b4
_08319158:
	add		r0, r4, #0x0
	add		r0, #0x66
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x0
	beq		_08319166
	b		_083192b4
_08319166:
	add		r0, r4, #0x0
	add		r0, #0x6a
	mov		r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp		r0, #0x0
	beq		_08319184
	ldr		r0, _0831917c
	ldr		r1, _08319180
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_083192b4

_0831917c:	.4byte 0x030031D0
_08319180:	.4byte 0x000007AC

_08319184:
	ldrh	r3, [r2, #0x10]
	ldr		r0, _083191b4
	cmp		r3, r0
	bne		_0831918e
	b		_083192b4
_0831918e:
	cmp		r1, #0x0
	beq		_083191bc
	add		r1, r4, #0x0
	add		r1, #0x5a
	ldr		r0, _083191b8
	strh	r0, [r1, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r4, #0x48]
	mov		r0, #0x8
	strh	r0, [r4, #0x38]
	add		r0, r4, #0x0
	add		r1, r2, #0x0
	bl		sub_08318f90
	b		_083192b4

.incbin "base.gba", 0x3191B2, 0x2

_083191b4:	.4byte 0x00001007
_083191b8:	.4byte 0x00008007

_083191bc:
	add		r1, r4, #0x0
	add		r1, #0x5a
	ldr		r0, _083191e4
	strh	r0, [r1, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r4, #0x48]
	mov		r0, #0x8
	strh	r0, [r4, #0x38]
	ldr		r1, _083191e8
	add		r0, r3, r1
	cmp		r0, #0x1d
	bhi		_083192b4
	lsl		r0, r0, #0x2
	ldr		r1, _083191ec
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_083191e4:	.4byte 0x00008007
_083191e8:	.4byte 0xFFFFF000
_083191ec:	.4byte 0x020131F0

.incbin "base.gba", 0x3191F0, 0xC4

_083192b4:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3192BA, 0x2
	thumb_func_end sub_08319140

	thumb_func_start sub_083192bc
sub_083192bc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	add		r5, r0, #0x0
	add		r0, r1, #0x0
	add		r1, r2, #0x0
	add		r3, r5, #0x0
	add		r3, #0x5a
	ldr		r2, _0831933c
	strh	r2, [r3, #0x0]
	ldr		r2, [r5, #0x48]
	mov		r3, #0x80
	lsl		r3, r3, #0x5
	orr		r2, r3
	str		r2, [r5, #0x48]
	mov		r2, #0x8
	strh	r2, [r5, #0x38]
	add		r2, r5, #0x0
	add		r2, #0xee
	mov		r3, #0x0
	ldrsh	r2, [r2, r3]
	sub		r0, r2, r0
	add		r2, r5, #0x0
	add		r2, #0xf0
	mov		r4, #0x0
	ldrsh	r2, [r2, r4]
	sub		r1, r2, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	bl		sub_0830e808
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	add		r0, r5, #0x0
	add		r0, #0x7a
	ldrh	r4, [r0, #0x0]
	ldr		r0, _08319340
	add		r3, r4, r0
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	asr		r1, r0, #0x10
	cmp		r1, #0x0
	blt		_08319348
	mov		r6, #0x80
	lsl		r6, r6, #0x4
	cmp		r1, r6
	bgt		_0831932e
	mov		r1, #0xf0
	lsl		r1, r1, #0x7
	add		r0, r4, r1
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_0831932e:
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	ldr		r1, _08319344
	cmp		r0, r1
	ble		_0831936e
	add		r0, r4, r6
	b		_0831936a

_0831933c:	.4byte 0x00008007
_08319340:	.4byte 0xFFFF8000
_08319344:	.4byte 0x77FF0000

_08319348:
	ldr		r0, _08319470
	cmp		r1, r0
	blt		_08319358
	mov		r2, #0x88
	lsl		r2, r2, #0x8
	add		r0, r4, r2
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_08319358:
	sub		r0, r3, r2
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	ldr		r1, _08319474
	cmp		r0, r1
	bgt		_0831936e
	mov		r3, #0xf8
	lsl		r3, r3, #0x8
	add		r0, r4, r3
_0831936a:
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
_0831936e:
	ldr		r4, _08319478
	mov		r10, r4
	lsl		r0, r2, #0x10
	asr		r4, r0, #0x10
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_0831937e
	add		r0, #0x3f
_0831937e:
	asr		r6, r0, #0x6
	ldr		r0, _0831947c
	add		r1, r0, #0x0
	add		r0, r6, #0x0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r10
	ldr		r1, [r0, #0x0]
	str		r6, [sp, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	mov		r9, r2
	sub		r0, r2, r6
	ldr		r3, _0831947c
	mov		r8, r3
	and		r0, r3
	lsl		r0, r0, #0x2
	add		r0, r10
	ldr		r7, [r0, #0x0]
	add		r3, r5, #0x0
	add		r3, #0x4e
	mov		r2, #0x0
	ldrsh	r0, [r3, r2]
	mov		r12, r0
	mov		r2, r12
	mul		r2, r1
	add		r1, r5, #0x0
	add		r1, #0x50
	mov		r0, #0x0
	ldrsh	r5, [r1, r0]
	add		r0, r5, #0x0
	mul		r0, r7
	sub		r0, r2, r0
	str		r3, [sp, #0x4]
	str		r1, [sp, #0x8]
	cmp		r0, #0x0
	bge		_083193cc
	ldr		r1, _08319480
	add		r0, r0, r1
_083193cc:
	asr		r2, r0, #0xf
	add		r0, r6, #0x0
	mov		r3, r8
	and		r0, r3
	lsl		r0, r0, #0x2
	add		r0, r10
	ldr		r6, [r0, #0x0]
	mov		r1, r12
	mul		r1, r7
	add		r0, r5, #0x0
	mul		r0, r6
	add		r0, r1, r0
	cmp		r0, #0x0
	bge		_083193ec
	ldr		r1, _08319480
	add		r0, r0, r1
_083193ec:
	asr		r5, r0, #0xf
	lsr		r0, r0, #0x1f
	add		r0, r5, r0
	asr		r5, r0, #0x1
	neg		r0, r2
	lsr		r1, r0, #0x1f
	add		r0, r0, r1
	asr		r2, r0, #0x1
	cmp		r2, #0xff
	bgt		_08319402
	mov		r2, r9
_08319402:
	add		r1, r2, #0x0
	mul		r1, r6
	add		r0, r5, #0x0
	mul		r0, r7
	add		r0, r1, r0
	cmp		r0, #0x0
	bge		_08319414
	ldr		r3, _08319480
	add		r0, r0, r3
_08319414:
	asr		r3, r0, #0xf
	mov		r4, r9
	ldr		r1, [sp, #0x0]
	sub		r0, r4, r1
	mov		r4, r8
	and		r0, r4
	lsl		r0, r0, #0x2
	add		r0, r10
	ldr		r0, [r0, #0x0]
	add		r1, r5, #0x0
	mul		r1, r6
	mul		r0, r2
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_08319436
	ldr		r1, _08319480
	add		r0, r0, r1
_08319436:
	asr		r0, r0, #0xf
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	cmp		r3, r2
	ble		_08319442
	add		r3, r2, #0x0
_08319442:
	ldr		r1, _08319484
	cmp		r3, r1
	bge		_0831944a
	add		r3, r1, #0x0
_0831944a:
	cmp		r0, r2
	ble		_08319450
	add		r0, r2, #0x0
_08319450:
	cmp		r0, r1
	bge		_08319456
	add		r0, r1, #0x0
_08319456:
	ldr		r2, [sp, #0x4]
	strh	r3, [r2, #0x0]
	ldr		r3, [sp, #0x8]
	strh	r0, [r3, #0x0]
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31946E, 0x2

_08319470:	.4byte 0xFFFFF800
_08319474:	.4byte 0xFFFF8800
_08319478:	.4byte 0x0202A9A0
_0831947c:	.4byte 0x000003FF
_08319480:	.4byte 0x00007FFF
_08319484:	.4byte 0xFFFFFC00
	thumb_func_end sub_083192bc

	thumb_func_start sub_08319488
sub_08319488:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r3, r1, #0x0
	add		r1, r4, #0x0
	add		r1, #0x5a
	ldr		r0, _08319544
	strh	r0, [r1, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x5
	orr		r0, r1
	str		r0, [r4, #0x48]
	mov		r0, #0x8
	strh	r0, [r4, #0x38]
	ldr		r0, [r4, #0x0]
	cmp		r0, #0x0
	bge		_083194ae
	ldr		r1, _08319548
	add		r0, r0, r1
_083194ae:
	asr		r0, r0, #0x10
	sub		r3, r0, r3
	ldr		r0, [r4, #0x4]
	cmp		r0, #0x0
	bge		_083194bc
	ldr		r1, _08319548
	add		r0, r0, r1
_083194bc:
	asr		r0, r0, #0x10
	sub		r2, r0, r2
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	lsl		r1, r2, #0x10
	asr		r1, r1, #0x10
	bl		sub_0830e808
	ldr		r6, _0831954c
	lsl		r0, r0, #0x10
	asr		r2, r0, #0x10
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_083194da
	add		r1, #0x3f
_083194da:
	asr		r5, r1, #0x6
	ldr		r1, _08319550
	add		r0, r1, #0x0
	add		r1, r5, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r6
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x9
	cmp		r0, #0x0
	bge		_083194f4
	ldr		r1, _08319554
	add		r0, r0, r1
_083194f4:
	asr		r3, r0, #0xf
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r5
	ldr		r1, _08319550
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r6
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x9
	neg		r0, r0
	cmp		r0, #0x0
	bge		_08319512
	ldr		r1, _08319554
	add		r0, r0, r1
_08319512:
	asr		r1, r0, #0xf
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	cmp		r3, r2
	ble		_0831951e
	add		r3, r2, #0x0
_0831951e:
	ldr		r0, _08319558
	cmp		r3, r0
	bge		_08319526
	add		r3, r0, #0x0
_08319526:
	cmp		r1, r2
	ble		_0831952c
	add		r1, r2, #0x0
_0831952c:
	cmp		r1, r0
	bge		_08319532
	add		r1, r0, #0x0
_08319532:
	add		r0, r4, #0x0
	add		r0, #0x4e
	strh	r3, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x319542, 0x2

_08319544:	.4byte 0x00008007
_08319548:	.4byte 0x0000FFFF
_0831954c:	.4byte 0x0202A9A0
_08319550:	.4byte 0x000003FF
_08319554:	.4byte 0x00007FFF
_08319558:	.4byte 0xFFFFFC00
	thumb_func_end sub_08319488

	thumb_func_start sub_0831955c
sub_0831955c:
	push	{ r4, lr }
	ldr		r0, _083195a4
	mov		r3, #0xe2
	lsl		r3, r3, #0x3
	add		r0, r0, r3
	ldr		r3, [r0, #0x8]
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_08319570
	add		r0, r1, #0x7
_08319570:
	asr		r1, r0, #0x3
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0831957a
	add		r0, r2, #0x7
_0831957a:
	asr		r2, r0, #0x3
	cmp		r3, #0x0
	beq		_083195b2
	ldr		r4, _083195a8
_08319582:
	ldr		r0, [r3, #0x0]
	cmp		r0, #0x0
	bge		_0831958a
	add		r0, r0, r4
_0831958a:
	asr		r0, r0, #0x13
	cmp		r0, r1
	bne		_083195ac
	ldr		r0, [r3, #0x4]
	cmp		r0, #0x0
	bge		_08319598
	add		r0, r0, r4
_08319598:
	asr		r0, r0, #0x13
	cmp		r0, r2
	bne		_083195ac
	add		r0, r3, #0x0
	b		_083195b4

.incbin "base.gba", 0x3195A2, 0x2

_083195a4:	.4byte 0x030031D0
_083195a8:	.4byte 0x0007FFFF

_083195ac:
	ldr		r3, [r3, #0x3c]
	cmp		r3, #0x0
	bne		_08319582
_083195b2:
	mov		r0, #0x0
_083195b4:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x3195BA, 0x2
	thumb_func_end sub_0831955c

	thumb_func_start sub_083195bc
sub_083195bc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r7, r2, #0x0
	ldrh	r0, [r5, #0x38]
	mov		r8, r0
	cmp		r0, #0x1
	bgt		_08319646
	add		r0, r5, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x6
	beq		_08319646
	add		r0, r5, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_08319646
	add		r0, r5, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_0831960a
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	bl		sub_0831955c
	add		r4, r0, #0x0
	ldr		r2, [r4, #0x18]
	cmp		r2, #0x0
	beq		_08319646
	add		r1, r5, #0x0
	bl		sub_0832730c
	b		_08319646
_0831960a:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	add		r2, r7, #0x0
	bl		sub_0831955c
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x60]
	cmp		r0, #0x0
	bne		_08319646
	mov		r0, r8
	cmp		r0, #0x0
	beq		_0831962e
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	add		r2, r7, #0x0
	bl		sub_08319488
	b		_08319646
_0831962e:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	add		r2, r7, #0x0
	bl		sub_083192bc
	ldr		r2, [r4, #0x18]
	cmp		r2, #0x0
	beq		_08319646
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0832730c
_08319646:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_083195bc

	thumb_func_start sub_08319650
sub_08319650:
	push	{ r4, r5, lr }
	add		r4, r1, #0x0
	ldr		r0, _08319690
	mov		r1, #0xe2
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldr		r1, [r0, #0x8]
	add		r0, r4, #0x0
	cmp		r4, #0x0
	bge		_08319666
	add		r0, r4, #0x7
_08319666:
	asr		r4, r0, #0x3
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_08319670
	add		r0, r2, #0x7
_08319670:
	asr		r2, r0, #0x3
	cmp		r1, #0x0
	beq		_083196c4
	ldr		r5, _08319694
_08319678:
	ldr		r0, [r1, #0x0]
	cmp		r0, #0x0
	bge		_08319680
	add		r0, r0, r5
_08319680:
	asr		r0, r0, #0x13
	sub		r3, r4, r0
	cmp		r3, #0x0
	blt		_08319698
	cmp		r3, #0x4
	bgt		_083196be
	b		_0831969e

.incbin "base.gba", 0x31968E, 0x2

_08319690:	.4byte 0x030031D0
_08319694:	.4byte 0x0007FFFF

_08319698:
	sub		r0, r0, r4
	cmp		r0, #0x4
	bgt		_083196be
_0831969e:
	ldr		r0, [r1, #0x4]
	cmp		r0, #0x0
	bge		_083196a6
	add		r0, r0, r5
_083196a6:
	asr		r0, r0, #0x13
	sub		r3, r2, r0
	cmp		r3, #0x0
	blt		_083196b4
	cmp		r3, #0x4
	bgt		_083196be
	b		_083196ba
_083196b4:
	sub		r0, r0, r2
	cmp		r0, #0x4
	bgt		_083196be
_083196ba:
	add		r0, r1, #0x0
	b		_083196c6
_083196be:
	ldr		r1, [r1, #0x3c]
	cmp		r1, #0x0
	bne		_08319678
_083196c4:
	mov		r0, #0x0
_083196c6:
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08319650

	thumb_func_start sub_083196cc
sub_083196cc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r4, r0, #0x0
	ldr		r0, _0831981c
	add		r0, #0x24
	mov		r8, r0
	add		r0, r4, #0x0
	add		r0, #0x58
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_083196ea
	b		_08319812
_083196ea:
	add		r0, r4, #0x0
	add		r0, #0x6a
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	beq		_083196f8
	b		_08319812
_083196f8:
	add		r0, r4, #0x0
	add		r0, #0x66
	mov		r2, #0x0
	ldrsh	r5, [r0, r2]
	cmp		r5, #0x0
	beq		_08319706
	b		_08319812
_08319706:
	ldr		r0, [r4, #0x0]
	add		r6, r0, #0x0
	ldr		r3, [r4, #0x4]
	add		r7, r3, #0x0
	add		r1, r0, #0x0
	cmp		r0, #0x0
	bge		_08319718
	ldr		r2, _08319820
	add		r1, r0, r2
_08319718:
	asr		r1, r1, #0x10
	add		r2, r3, #0x0
	cmp		r3, #0x0
	bge		_08319724
	ldr		r0, _08319820
	add		r2, r3, r0
_08319724:
	asr		r2, r2, #0x10
	add		r0, r4, #0x0
	bl		sub_08319650
	add		r3, r0, #0x0
	ldrh	r0, [r3, #0x34]
	mov		r1, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_08319812
	add		r1, r4, #0x0
	add		r1, #0x9c
	mov		r2, #0x0
	mov		r0, #0x5c
	strh	r0, [r1, #0x0]
	sub		r1, #0x24
	mov		r0, #0x8
	strb	r0, [r1, #0x0]
	sub		r1, #0x16
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x7
	orr		r0, r1
	str		r0, [r4, #0x48]
	add		r0, r4, #0x0
	add		r0, #0x88
	strh	r5, [r0, #0x0]
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	orr		r0, r1
	str		r0, [r4, #0x48]
	add		r0, r4, #0x0
	add		r0, #0x7e
	strb	r2, [r0, #0x0]
	cmp		r3, #0x0
	beq		_0831979a
	ldr		r0, [r3, #0x0]
	ldr		r1, [r3, #0x4]
	sub		r0, r0, r6
	cmp		r0, #0x0
	bge		_08319780
	ldr		r2, _08319824
	add		r0, r0, r2
_08319780:
	asr		r0, r0, #0xd
	add		r2, r4, #0x0
	add		r2, #0x4e
	strh	r0, [r2, #0x0]
	sub		r0, r1, r7
	cmp		r0, #0x0
	bge		_08319792
	ldr		r1, _08319824
	add		r0, r0, r1
_08319792:
	asr		r1, r0, #0xd
	add		r0, r4, #0x0
	add		r0, #0x50
	strh	r1, [r0, #0x0]
_0831979a:
	mov		r0, #0xf1
	lsl		r0, r0, #0x3
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08319812
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08319812
	mov		r6, #0x0
	mov		r5, #0x0
	ldr		r2, _08319828
	ldr		r3, _0831982c
	mov		r0, #0xcc
	lsl		r0, r0, #0x1
	add		r4, r3, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_083197da
	ldr		r1, [r1, #0x0]
	ldr		r0, [r4, #0x0]
	cmp		r1, r0
	bne		_083197da
	mov		r5, #0x1
_083197da:
	cmp		r5, #0x0
	beq		_08319808
	mov		r4, #0x0
	mov		r1, #0xcc
	lsl		r1, r1, #0x1
	add		r3, r3, r1
	ldrh	r0, [r3, #0x4]
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r2
	ldr		r1, [r1, #0x0]
	ldr		r0, [r1, #0x4]
	cmp		r0, #0x0
	bge		_08319802
	ldr		r1, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	bne		_08319802
	mov		r4, #0x1
_08319802:
	cmp		r4, #0x0
	bne		_08319808
	mov		r6, #0x1
_08319808:
	cmp		r6, #0x0
	bne		_08319812
	mov		r0, #0x33
	bl		sub_08325e94
_08319812:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0831981c:	.4byte 0x030031D0
_08319820:	.4byte 0x0000FFFF
_08319824:	.4byte 0x00001FFF
_08319828:	.4byte 0x0202E890
_0831982c:	.4byte 0x0202E8F0
	thumb_func_end sub_083196cc

	thumb_func_start sub_08319830
sub_08319830:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	ldr		r0, _08319874
	add		r6, r0, #0x0
	add		r6, #0x24
	add		r1, r4, #0x0
	add		r1, #0x62
	mov		r2, #0x0
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	add		r3, r4, #0x0
	add		r3, #0x9c
	ldrh	r0, [r3, #0x0]
	cmp		r0, #0x3b
	bls		_08319878
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x8
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldrh	r0, [r3, #0x0]
	sub		r0, #0x1
	strh	r0, [r3, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x82
	mov		r3, #0xc0
	lsl		r3, r3, #0x4
	add		r0, r3, #0x0
	ldrh	r3, [r1, #0x0]
	add		r0, r0, r3
	strh	r0, [r1, #0x0]
	add		r5, r2, #0x0
	b		_0831989c

_08319874:	.4byte 0x030031D0

_08319878:
	add		r5, r4, #0x0
	add		r5, #0xb4
	cmp		r0, #0x0
	beq		_083198a6
	ldrh	r1, [r5, #0x0]
	ldr		r0, _08319930
	and		r0, r1
	strh	r0, [r5, #0x0]
	ldrh	r0, [r3, #0x0]
	sub		r0, #0x1
	strh	r0, [r3, #0x0]
	add		r0, r4, #0x0
	add		r0, #0xbc
	str		r2, [r0, #0x0]
	sub		r0, #0x6e
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
_0831989c:
	add		r0, r4, #0x0
	add		r0, #0x9c
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0831992a
_083198a6:
	add		r0, r4, #0x0
	add		r0, #0x4e
	mov		r2, #0x0
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x52
	mov		r0, #0xbc
	lsl		r0, r0, #0x2
	strh	r0, [r1, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	str		r0, [r4, #0x8]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	strh	r0, [r5, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x78
	mov		r1, #0x1
	strb	r1, [r0, #0x0]
	add		r0, #0xc
	strb	r1, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x7e
	mov		r0, #0xc
	strb	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x80
	strh	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	add		r0, #0x3e
	str		r2, [r0, #0x0]
	add		r1, #0x3e
	mov		r0, #0xf8
	lsl		r0, r0, #0x11
	str		r0, [r1, #0x0]
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	bge		_083198fc
	ldr		r0, _08319934
	add		r1, r1, r0
_083198fc:
	lsr		r1, r1, #0x10
	ldr		r2, [r4, #0x4]
	cmp		r2, #0x0
	bge		_08319908
	ldr		r3, _08319934
	add		r2, r2, r3
_08319908:
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	asr		r2, r2, #0x10
	add		r0, r6, #0x0
	mov		r3, #0x0
	bl		sub_08310f34
	add		r1, r4, #0x0
	add		r1, #0x7c
	strh	r0, [r1, #0x0]
	add		r2, r4, #0x0
	add		r2, #0x7a
	strh	r0, [r2, #0x0]
	ldrh	r1, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
_0831992a:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08319930:	.4byte 0x0000FFF7
_08319934:	.4byte 0x0000FFFF
	thumb_func_end sub_08319830

	thumb_func_start sub_08319938
sub_08319938:
	mov		r12, r0
	mov		r3, r12
	add		r3, #0x92
	mov		r0, #0x0
	ldrsh	r2, [r3, r0]
	ldr		r0, _08319968
	cmp		r2, r0
	ble		_08319970
	add		r3, #0x20
	ldrh	r1, [r3, #0x0]
	ldr		r0, _0831996c
	and		r0, r1
	strh	r0, [r3, #0x0]
	mov		r2, r12
	add		r2, #0xb4
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x1
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldrh	r1, [r3, #0x0]
	mov		r0, #0x2
	orr		r0, r1
	b		_083199de

.incbin "base.gba", 0x319966, 0x2

_08319968:	.4byte 0x000005BF
_0831996c:	.4byte 0x0000FFFE

_08319970:
	ldr		r0, _0831999c
	cmp		r2, r0
	bgt		_083199c0
	mov		r2, #0x0
	ldrsh	r0, [r3, r2]
	cmp		r0, r1
	blt		_083199c0
	mov		r0, r12
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_083199a0
	mov		r0, r12
	add		r0, #0xb2
	ldrh	r2, [r0, #0x0]
	mov		r1, #0x1
	orr		r1, r2
	b		_083199aa

.incbin "base.gba", 0x31999A, 0x2

_0831999c:	.4byte 0x000003BF

_083199a0:
	mov		r0, r12
	add		r0, #0xb2
	ldrh	r2, [r0, #0x0]
	ldr		r1, _083199bc
	and		r1, r2
_083199aa:
	strh	r1, [r0, #0x0]
	add		r3, r0, #0x0
	mov		r2, r12
	add		r2, #0xb4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _083199bc
	and		r0, r1
	strh	r0, [r2, #0x0]
	b		_083199d8

_083199bc:	.4byte 0x0000FFFE

_083199c0:
	mov		r3, r12
	add		r3, #0xb2
	ldrh	r2, [r3, #0x0]
	ldr		r1, _083199e4
	add		r0, r1, #0x0
	and		r0, r2
	strh	r0, [r3, #0x0]
	mov		r2, r12
	add		r2, #0xb4
	ldrh	r0, [r2, #0x0]
	and		r1, r0
	strh	r1, [r2, #0x0]
_083199d8:
	ldrh	r1, [r3, #0x0]
	ldr		r0, _083199e8
	and		r0, r1
_083199de:
	strh	r0, [r3, #0x0]
	bx		lr

.incbin "base.gba", 0x3199E2, 0x2

_083199e4:	.4byte 0x0000FFFE
_083199e8:	.4byte 0x0000FFFD
	thumb_func_end sub_08319938

	thumb_func_start sub_083199ec
sub_083199ec:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r4, #0x0
	add		r5, #0x96
	strh	r1, [r5, #0x0]
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	bl		sub_08319938
	ldrh	r1, [r5, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08319a28
	add		r0, r4, #0x0
	add		r0, #0x98
	ldrh	r0, [r0, #0x0]
	add		r3, r4, #0x0
	add		r3, #0x92
	cmp		r0, #0x0
	bne		_08319a6c
	ldr		r1, _08319a24
	add		r0, r1, #0x0
	ldrh	r2, [r3, #0x0]
	add		r0, r0, r2
	strh	r0, [r3, #0x0]
	b		_08319a6c

_08319a24:	.4byte 0xFFFFFF00

_08319a28:
	add		r5, r4, #0x0
	add		r5, #0x98
	ldrh	r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_08319a50
	add		r0, r4, #0x0
	add		r0, #0x92
	ldrh	r1, [r0, #0x0]
	add		r1, #0x20
	strh	r1, [r0, #0x0]
	lsl		r1, r1, #0x10
	ldr		r2, _08319a4c
	add		r3, r0, #0x0
	cmp		r1, r2
	ble		_08319a7a
	ldrh	r0, [r5, #0x0]
	sub		r0, #0x1
	b		_08319a6a

_08319a4c:	.4byte 0x0FBF0000

_08319a50:
	add		r0, r4, #0x0
	add		r0, #0x92
	ldr		r2, _08319a8c
	add		r1, r2, #0x0
	ldrh	r2, [r0, #0x0]
	add		r1, r1, r2
	strh	r1, [r0, #0x0]
	lsl		r1, r1, #0x10
	ldr		r2, _08319a90
	add		r3, r0, #0x0
	cmp		r1, r2
	bgt		_08319a6c
	mov		r0, #0x0
_08319a6a:
	strh	r0, [r5, #0x0]
_08319a6c:
	mov		r0, #0x0
	ldrsh	r1, [r3, r0]
	ldr		r0, _08319a94
	cmp		r1, r0
	ble		_08319a7a
	add		r0, #0x1
	strh	r0, [r3, #0x0]
_08319a7a:
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	cmp		r0, #0x0
	bge		_08319a86
	mov		r0, #0x0
	strh	r0, [r3, #0x0]
_08319a86:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08319a8c:	.4byte 0xFFFFFE00
_08319a90:	.4byte 0x0DBF0000
_08319a94:	.4byte 0x00000FBF
	thumb_func_end sub_083199ec

	thumb_func_start sub_08319a98
sub_08319a98:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	mov		r1, #0xe0
	lsl		r1, r1, #0x1
	bl		sub_08319938
	add		r0, r4, #0x0
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_08319ad4
	add		r0, r4, #0x0
	add		r0, #0x98
	ldrh	r0, [r0, #0x0]
	add		r3, r4, #0x0
	add		r3, #0x92
	cmp		r0, #0x0
	bne		_08319b20
	ldr		r1, _08319ad0
	add		r0, r1, #0x0
	ldrh	r2, [r3, #0x0]
	add		r0, r0, r2
	strh	r0, [r3, #0x0]
	b		_08319b20

.incbin "base.gba", 0x319ACE, 0x2

_08319ad0:	.4byte 0xFFFFF800

_08319ad4:
	add		r5, r4, #0x0
	add		r5, #0x98
	ldrh	r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_08319b04
	add		r0, r4, #0x0
	add		r0, #0x92
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r1, r2, #0x0
	ldrh	r2, [r0, #0x0]
	add		r1, r1, r2
	strh	r1, [r0, #0x0]
	lsl		r1, r1, #0x10
	ldr		r2, _08319b00
	add		r3, r0, #0x0
	cmp		r1, r2
	ble		_08319b2e
	ldrh	r0, [r5, #0x0]
	sub		r0, #0x1
	b		_08319b1e

.incbin "base.gba", 0x319AFE, 0x2

_08319b00:	.4byte 0x0FBF0000

_08319b04:
	add		r0, r4, #0x0
	add		r0, #0x92
	ldr		r2, _08319b40
	add		r1, r2, #0x0
	ldrh	r2, [r0, #0x0]
	add		r1, r1, r2
	strh	r1, [r0, #0x0]
	lsl		r1, r1, #0x10
	ldr		r2, _08319b44
	add		r3, r0, #0x0
	cmp		r1, r2
	bgt		_08319b20
	mov		r0, #0x0
_08319b1e:
	strh	r0, [r5, #0x0]
_08319b20:
	mov		r0, #0x0
	ldrsh	r1, [r3, r0]
	ldr		r0, _08319b48
	cmp		r1, r0
	ble		_08319b2e
	add		r0, #0x1
	strh	r0, [r3, #0x0]
_08319b2e:
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	cmp		r0, #0x0
	bge		_08319b3a
	mov		r0, #0x0
	strh	r0, [r3, #0x0]
_08319b3a:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_08319b40:	.4byte 0xFFFFF000
_08319b44:	.4byte 0x0DBF0000
_08319b48:	.4byte 0x00000FBF
	thumb_func_end sub_08319a98

	thumb_func_start sub_08319b4c
sub_08319b4c:
	push	{ r4, r5, r6, lr }
	add		r3, r0, #0x0
	add		r0, #0x78
	ldrb	r2, [r0, #0x0]
	cmp		r2, #0x1
	bne		_08319b5a
	b		_08319ca0
_08319b5a:
	cmp		r2, #0x2
	bne		_08319b60
	b		_08319ca0
_08319b60:
	cmp		r2, #0x3
	bne		_08319b66
	b		_08319ca0
_08319b66:
	cmp		r2, #0x4
	bne		_08319b6c
	b		_08319ca0
_08319b6c:
	cmp		r2, #0x5
	bne		_08319b72
	b		_08319ca0
_08319b72:
	cmp		r2, #0x6
	bne		_08319b78
	b		_08319ca0
_08319b78:
	cmp		r2, #0x7
	bne		_08319b84
	add		r0, r3, #0x0
	bl		sub_08319a98
	b		_08319ca0
_08319b84:
	ldr		r0, _08319bd8
	ldr		r1, _08319bdc
	add		r0, r0, r1
	ldrb	r1, [r0, #0x0]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	ldr		r1, _08319be0
	add		r4, r0, r1
	cmp		r2, #0x8
	beq		_08319bba
	add		r0, r3, #0x0
	add		r0, #0x7e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xd
	beq		_08319bba
	sub		r0, #0x5
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x2
	bhi		_08319be4
	add		r0, r3, #0x0
	add		r0, #0xb8
	mov		r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp		r0, #0x0
	bne		_08319be4
_08319bba:
	add		r1, r3, #0x0
	add		r1, #0x92
	mov		r3, #0x6
	ldrsh	r0, [r4, r3]
	lsl		r0, r0, #0x3
	ldrh	r5, [r1, #0x0]
	add		r0, r0, r5
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bge		_08319ca0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	b		_08319ca0

.incbin "base.gba", 0x319BD6, 0x2

_08319bd8:	.4byte 0x030031D0
_08319bdc:	.4byte 0x00000774
_08319be0:	.4byte 0x0202C218

_08319be4:
	add		r0, r3, #0x0
	add		r0, #0x96
	ldrh	r0, [r0, #0x0]
	mov		r1, #0xc0
	lsl		r1, r1, #0x8
	and		r1, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	cmp		r1, r0
	bne		_08319c02
	add		r0, r3, #0x0
	add		r0, #0x64
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_08319c0e
_08319c02:
	add		r1, r3, #0x0
	add		r1, #0x92
	ldrh	r0, [r4, #0x4]
	ldrh	r6, [r1, #0x0]
	add		r0, r0, r6
	b		_08319c5a
_08319c0e:
	add		r0, r3, #0x0
	add		r0, #0x86
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x9
	bhi		_08319c60
	add		r0, r3, #0x0
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08319c50
	add		r0, r3, #0x0
	add		r0, #0x92
	mov		r1, #0x0
	ldrsh	r2, [r0, r1]
	mov		r3, #0x0
	ldrsh	r1, [r4, r3]
	ldr		r5, _08319c44
	add		r1, r1, r5
	add		r3, r0, #0x0
	cmp		r2, r1
	blt		_08319c48
	ldrh	r0, [r4, #0x8]
	ldrh	r6, [r3, #0x0]
	add		r0, r0, r6
	b		_08319c80

_08319c44:	.4byte 0xFFFFFE00

_08319c48:
	ldrh	r0, [r4, #0x2]
	ldrh	r1, [r3, #0x0]
	add		r0, r0, r1
	b		_08319c80
_08319c50:
	add		r1, r3, #0x0
	add		r1, #0x92
	ldrh	r0, [r4, #0x2]
	ldrh	r2, [r1, #0x0]
	add		r0, r0, r2
_08319c5a:
	strh	r0, [r1, #0x0]
	add		r3, r1, #0x0
	b		_08319c82
_08319c60:
	mov		r5, #0x0
	ldrsh	r0, [r4, r5]
	add		r3, #0x92
	cmp		r0, #0x0
	bge		_08319c6c
	add		r0, #0x3
_08319c6c:
	ldrh	r2, [r3, #0x0]
	mov		r6, #0x0
	ldrsh	r1, [r3, r6]
	asr		r0, r0, #0x2
	cmp		r1, r0
	blt		_08319c7c
	ldrh	r0, [r4, #0x6]
	b		_08319c7e
_08319c7c:
	ldrh	r0, [r4, #0x2]
_08319c7e:
	add		r0, r2, r0
_08319c80:
	strh	r0, [r3, #0x0]
_08319c82:
	add		r2, r3, #0x0
	mov		r0, #0x0
	ldrsh	r1, [r2, r0]
	ldrh	r5, [r4, #0x0]
	mov		r6, #0x0
	ldrsh	r0, [r4, r6]
	cmp		r1, r0
	blt		_08319c94
	strh	r5, [r2, #0x0]
_08319c94:
	mov		r1, #0x0
	ldrsh	r0, [r3, r1]
	cmp		r0, #0x0
	bge		_08319ca0
	mov		r0, #0x0
	strh	r0, [r3, #0x0]
_08319ca0:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x319CA6, 0x2
	thumb_func_end sub_08319b4c

	thumb_func_start sub_08319ca8
sub_08319ca8:
	push	{ r4, lr }
	add		r2, r0, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08319cbe
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	b		_08319d26
_08319cbe:
	add		r0, r2, #0x0
	add		r0, #0x92
	mov		r1, #0x0
	ldrsh	r3, [r0, r1]
	mov		r1, #0x0
	sub		r0, #0xe
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xc
	bne		_08319cd4
	mov		r1, #0x80
	lsl		r1, r1, #0x2
_08319cd4:
	cmp		r0, #0x8
	bne		_08319cde
	mov		r4, #0x80
	lsl		r4, r4, #0x2
	add		r1, r1, r4
_08319cde:
	add		r0, r2, #0x0
	add		r0, #0x68
	mov		r4, #0x0
	ldrsh	r0, [r0, r4]
	cmp		r0, #0x0
	beq		_08319cf0
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	add		r1, r1, r0
_08319cf0:
	mov		r4, #0xbc
	lsl		r4, r4, #0x1
	add		r0, r2, r4
	ldrh	r0, [r0, #0x0]
	lsl		r0, r0, #0x1
	add		r1, r1, r0
	ldr		r0, _08319d2c
	add		r2, r3, r0
	add		r0, r2, #0x0
	mul		r0, r2
	cmp		r0, #0x0
	bge		_08319d0c
	ldr		r3, _08319d30
	add		r0, r0, r3
_08319d0c:
	asr		r0, r0, #0xc
	mul		r0, r2
	cmp		r0, #0x0
	bge		_08319d18
	ldr		r4, _08319d30
	add		r0, r0, r4
_08319d18:
	asr		r0, r0, #0xc
	mov		r2, #0x80
	lsl		r2, r2, #0x5
	add		r1, r1, r2
	add		r0, r0, r1
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
_08319d26:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08319d2c:	.4byte 0xFFFFF000
_08319d30:	.4byte 0x00000FFF

.incbin "base.gba", 0x319D34, 0x74
	thumb_func_end sub_08319ca8

	thumb_func_start sub_08319da8
sub_08319da8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x18
	lsl		r1, r1, #0x10
	lsr		r3, r1, #0x10
	cmp		r1, #0x0
	bge		_08319dba
	mov		r3, #0x0
_08319dba:
	lsl		r0, r3, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0xf
	ble		_08319dc4
	mov		r3, #0xf
_08319dc4:
	ldr		r2, _08319de4
	add		r0, r4, #0x0
	add		r0, #0x4c
	ldrb	r0, [r0, #0x0]
	mov		r1, #0x7
	and		r1, r0
	lsl		r0, r3, #0x10
	asr		r0, r0, #0xe
	lsl		r1, r1, #0x6
	add		r0, r0, r1
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x319DE2, 0x2

_08319de4:	.4byte 0x0202C23C
	thumb_func_end sub_08319da8

	thumb_func_start sub_08319de8
sub_08319de8:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	mov		r8, r1
	ldr		r0, [r7, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08319e38
	mov		r0, #0xcd
	lsl		r0, r0, #0x1
	add		r4, r7, r0
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x3
	and		r0, r1
	cmp		r0, #0x0
	bne		_08319e0e
	b		_08319f86
_08319e0e:
	ldr		r2, _08319e30
	ldr		r0, _08319e34
	add		r0, #0xa8
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	bl		sub_08326664
	ldrb	r1, [r4, #0x0]
	mov		r0, #0xfc
	and		r0, r1
	strb	r0, [r4, #0x0]
	b		_08319f86

.incbin "base.gba", 0x319E2E, 0x2

_08319e30:	.4byte 0x0202E890
_08319e34:	.4byte 0x0202E8F0

_08319e38:
	mov		r0, #0xe9
	lsl		r0, r0, #0x3
	add		r0, r8
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_08319e84
	mov		r0, #0xf1
	lsl		r0, r0, #0x3
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r7, r0
	beq		_08319e56
	b		_08319f86
_08319e56:
	ldr		r2, _08319e7c
	ldr		r0, _08319e80
	add		r0, #0xa8
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	bl		sub_08326664
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r2, r7, r1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xfc
	and		r0, r1
	strb	r0, [r2, #0x0]
	b		_08319f86

_08319e7c:	.4byte 0x0202E890
_08319e80:	.4byte 0x0202E8F0

_08319e84:
	add		r0, r7, #0x0
	add		r0, #0x78
	ldrb	r1, [r0, #0x0]
	add		r5, r0, #0x0
	cmp		r1, #0x3
	beq		_08319f86
	cmp		r1, #0x5
	beq		_08319f86
	cmp		r1, #0x6
	beq		_08319f86
	add		r0, r7, #0x0
	bl		sub_08319ca8
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	add		r4, r7, #0x0
	add		r4, #0x94
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	cmp		r0, #0x0
	bgt		_08319ebc
	lsl		r1, r6, #0x10
	asr		r1, r1, #0x10
	add		r0, r7, #0x0
	bl		sub_08319da8
	lsl		r0, r0, #0x10
	b		_08319ede
_08319ebc:
	lsl		r1, r6, #0x10
	asr		r1, r1, #0x10
	add		r0, r7, #0x0
	bl		sub_08319da8
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	mov		r2, #0x0
	ldrsh	r1, [r4, r2]
	mul		r1, r0
	ldr		r0, _08319f90
	mul		r0, r1
	cmp		r0, #0x0
	bge		_08319edc
	ldr		r1, _08319f94
	add		r0, r0, r1
_08319edc:
	lsl		r0, r0, #0x1
_08319ede:
	lsr		r2, r0, #0x10
	ldr		r0, _08319f98
	add		r0, #0x24
	mov		r8, r0
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x2
	bne		_08319f0c
	add		r0, r7, #0x0
	add		r0, #0x9c
	ldrh	r0, [r0, #0x0]
	mul		r0, r2
	cmp		r0, #0x0
	bge		_08319efa
	add		r0, #0x3f
_08319efa:
	lsl		r0, r0, #0xa
	lsr		r6, r0, #0x10
	add		r2, r6, #0x0
	lsl		r0, r2, #0x10
	asr		r1, r0, #0x10
	lsr		r0, r0, #0x1f
	add		r1, r1, r0
	lsl		r1, r1, #0xf
	lsr		r6, r1, #0x10
_08319f0c:
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x4
	bne		_08319f1a
	mov		r6, #0xf0
	lsl		r6, r6, #0x8
	mov		r2, #0x80
	lsl		r2, r2, #0x1
_08319f1a:
	ldr		r5, _08319f9c
	ldr		r4, _08319fa0
	add		r4, #0xa8
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	bl		sub_08326df4
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	lsl		r2, r6, #0x10
	asr		r2, r2, #0x10
	mov		r1, #0x1
	bl		sub_08326e5c
	mov		r2, #0xcd
	lsl		r2, r2, #0x1
	add		r0, r7, r2
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	bne		_08319f86
	mov		r0, #0xf1
	lsl		r0, r0, #0x3
	add		r0, r8
	ldr		r0, [r0, #0x0]
	cmp		r7, r0
	bne		_08319f86
	ldr		r0, [r7, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08319f86
	mov		r0, #0x15
	bl		sub_08325e94
	mov		r0, #0xcd
	lsl		r0, r0, #0x1
	add		r2, r7, r0
	ldrb	r0, [r2, #0x0]
	mov		r1, #0x1
	orr		r1, r0
	mov		r0, #0xfd
	and		r1, r0
	strb	r1, [r2, #0x0]
_08319f86:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08319f90:	.4byte 0x00000155
_08319f94:	.4byte 0x00007FFF
_08319f98:	.4byte 0x030031D0
_08319f9c:	.4byte 0x0202E890
_08319fa0:	.4byte 0x0202E8F0
	thumb_func_end sub_08319de8

	thumb_func_start sub_08319fa4
sub_08319fa4:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	ldr		r2, [r4, #0x48]
	mov		r3, #0x80
	lsl		r3, r3, #0x7
	add		r0, r2, #0x0
	and		r0, r3
	cmp		r0, #0x0
	beq		_08319fba
	b		_0831a144
_08319fba:
	mov		r0, #0x20
	and		r0, r2
	cmp		r0, #0x0
	bne		_0831a07a
	add		r0, r4, #0x0
	add		r0, #0x78
	ldrb	r1, [r0, #0x0]
	add		r7, r0, #0x0
	cmp		r1, #0x4
	bne		_08319fd0
	b		_0831a144
_08319fd0:
	add		r5, r4, #0x0
	add		r5, #0x96
	ldrh	r1, [r5, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08319fe0
	b		_0831a108
_08319fe0:
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831a064
	add		r0, r4, #0x0
	add		r0, #0x7e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0xf
	bne		_0831a064
	mov		r1, #0xe9
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831a064
	mov		r0, #0xcd
	lsl		r0, r0, #0x1
	add		r2, r4, r0
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831a02a
	mov		r0, #0x10
	orr		r0, r1
	strb	r0, [r2, #0x0]
	mov		r0, #0x35
	bl		sub_08325e94
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0xb
	orr		r0, r1
	str		r0, [r4, #0x48]
_0831a02a:
	ldrh	r1, [r5, #0x0]
	mov		r0, #0xc0
	lsl		r0, r0, #0x2
	and		r0, r1
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	cmp		r0, #0x0
	beq		_0831a03c
	add		r2, #0xde
_0831a03c:
	ldr		r3, _0831a05c
	ldr		r0, _0831a060
	mov		r1, #0xd4
	lsl		r1, r1, #0x1
	add		r0, r0, r1
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	bl		sub_08326df4
	b		_0831a144

.incbin "base.gba", 0x31A05A, 0x2

_0831a05c:	.4byte 0x0202E890
_0831a060:	.4byte 0x0202E8F0

_0831a064:
	mov		r0, #0xcd
	lsl		r0, r0, #0x1
	add		r5, r4, r0
	ldrb	r1, [r5, #0x0]
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831a082
	mov		r0, #0xef
	and		r0, r1
	strb	r0, [r5, #0x0]
_0831a07a:
	mov		r0, #0x35
	bl		sub_08325f60
	b		_0831a144
_0831a082:
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	ble		_0831a092
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x0
	beq		_0831a0d4
_0831a092:
	ldr		r0, [r4, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0xb
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831a144
	ldr		r0, _0831a0c4
	ldrh	r0, [r0, #0x0]
	ldr		r2, _0831a0c8
	ldr		r1, _0831a0cc
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	bl		sub_08326664
	ldr		r0, [r4, #0x48]
	ldr		r1, _0831a0d0
	and		r0, r1
	b		_0831a0f8

.incbin "base.gba", 0x31A0C2, 0x2

_0831a0c4:	.4byte 0x0202C43C
_0831a0c8:	.4byte 0x0202E890
_0831a0cc:	.4byte 0x0202E8F0
_0831a0d0:	.4byte 0xfffbffff

_0831a0d4:
	ldr		r0, [r4, #0x48]
	mov		r6, #0x80
	lsl		r6, r6, #0xb
	and		r0, r6
	cmp		r0, #0x0
	bne		_0831a144
	ldr		r2, _0831a104
	asr		r0, r1, #0x18
	cmp		r0, #0x3
	ble		_0831a0ea
	mov		r0, #0x3
_0831a0ea:
	lsl		r0, r0, #0x1
	add		r0, r0, r2
	ldrh	r0, [r0, #0x0]
	bl		sub_08325e94
	ldr		r0, [r4, #0x48]
	orr		r0, r6
_0831a0f8:
	str		r0, [r4, #0x48]
	ldrb	r1, [r5, #0x0]
	mov		r0, #0xef
	and		r0, r1
	strb	r0, [r5, #0x0]
	b		_0831a144

_0831a104:	.4byte 0x0202C43C

_0831a108:
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	and		r2, r0
	cmp		r2, #0x0
	beq		_0831a144
	ldr		r0, _0831a14c
	ldrh	r0, [r0, #0x0]
	ldr		r2, _0831a150
	ldr		r1, _0831a154
	lsl		r0, r0, #0x3
	add		r0, r0, r1
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r0, [r0, #0x0]
	bl		sub_08326664
	ldr		r0, [r4, #0x48]
	ldr		r1, _0831a158
	and		r0, r1
	str		r0, [r4, #0x48]
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xef
	and		r0, r1
	strb	r0, [r2, #0x0]
_0831a144:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31A14A, 0x2

_0831a14c:	.4byte 0x0202C43C
_0831a150:	.4byte 0x0202E890
_0831a154:	.4byte 0x0202E8F0
_0831a158:	.4byte 0xfffbffff
	thumb_func_end sub_08319fa4

	thumb_func_start sub_0831a15c
sub_0831a15c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r5, r0, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	mov		r8, r0
	mov		r1, #0xf3
	lsl		r1, r1, #0x3
	add		r2, r5, r1
	mov		r6, #0xf1
	lsl		r6, r6, #0x3
	add		r0, r5, r6
	ldr		r0, [r0, #0x0]
	mov		r10, r0
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831a252
	ldr		r0, [r2, #0x18]
	mov		r9, r0
	ldr		r2, [r2, #0x1c]
	mov		r12, r2
	ldr		r1, _0831a20c
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0831a1ee
	ldr		r7, _0831a210
	mov		r2, #0xed
	lsl		r2, r2, #0x3
	add		r3, r5, r2
	add		r4, r0, #0x0
_0831a1a4:
	ldr		r2, [r3, #0x0]
	cmp		r2, r10
	beq		_0831a1e6
	add		r0, r2, #0x0
	add		r0, #0x6a
	mov		r6, #0x0
	ldrsh	r0, [r0, r6]
	cmp		r0, #0x0
	beq		_0831a1e6
	ldr		r0, [r2, #0x0]
	mov		r6, r9
	sub		r1, r6, r0
	cmp		r1, #0x0
	bge		_0831a1c2
	add		r1, r1, r7
_0831a1c2:
	asr		r1, r1, #0x10
	ldr		r0, [r2, #0x4]
	mov		r2, r12
	sub		r0, r2, r0
	cmp		r0, #0x0
	bge		_0831a1d0
	add		r0, r0, r7
_0831a1d0:
	asr		r0, r0, #0x10
	add		r6, r1, #0x0
	mul		r6, r1
	add		r1, r6, #0x0
	add		r2, r0, #0x0
	mul		r2, r0
	add		r0, r2, #0x0
	add		r0, r1, r0
	cmp		r0, r8
	bge		_0831a1e6
	mov		r8, r0
_0831a1e6:
	add		r3, #0x4
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0831a1a4
_0831a1ee:
	ldr		r0, _0831a214
	cmp		r8, r0
	bgt		_0831a252
	ldr		r6, _0831a218
	add		r1, r5, r6
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0831a21c
	mov		r0, #0x18
	strb	r0, [r1, #0x0]
	mov		r0, #0x42
	bl		sub_08325e94
	b		_0831a220

.incbin "base.gba", 0x31A20A, 0x2

_0831a20c:	.4byte 0x00000764
_0831a210:	.4byte 0x0000FFFF
_0831a214:	.4byte 0x00007FFF
_0831a218:	.4byte 0x00000BF6

_0831a21c:
	sub		r0, #0x1
	strb	r0, [r1, #0x0]
_0831a220:
	mov		r0, r8
	cmp		r0, #0x0
	bge		_0831a22a
	ldr		r1, _0831a260
	add		r0, r0, r1
_0831a22a:
	asr		r0, r0, #0xa
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	sub		r2, r2, r0
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	ldr		r3, _0831a264
	ldr		r0, _0831a268
	mov		r6, #0x84
	lsl		r6, r6, #0x2
	add		r0, r0, r6
	ldrh		r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	bl		sub_08326df4
_0831a252:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0831a260:	.4byte 0x000003FF
_0831a264:	.4byte 0x0202E890
_0831a268:	.4byte 0x0202E8F0
	thumb_func_end sub_0831a15c

	thumb_func_start sub_0831a26c
sub_0831a26c:
	ldr		r0, _0831a270
	bx		lr

_0831a270:	.4byte 0x030021C0

.incbin "base.gba", 0x31A274, 0x14
	thumb_func_end sub_0831a26c

	thumb_func_start sub_0831a288
sub_0831a288:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	lsl		r2, r2, #0x18
	lsr		r7, r2, #0x18
	bl		sub_0831a31c
	add		r6, r0, #0x0
	mov		r0, #0x1
	strh	r0, [r5, #0x0]
	add		r0, r4, #0x0
	bl		sub_0831a2d4
	strh	r0, [r5, #0x2]
	add		r0, r4, #0x0
	bl		sub_0831a2e4
	add		r1, r0, #0x0
	strh	r1, [r5, #0x4]
	ldr		r2, [r4, #0x4]
	ldr		r1, _0831a2d0
	cmp		r2, r1
	bhi		_0831a2c8
	add		r0, r7, #0x0
	add		r0, #0x8
	lsl		r0, r0, #0xc
	mov		r3, #0x80
	lsl		r3, r3, #0x2
	add		r1, r6, r3
	orr		r0, r1
	strh	r0, [r5, #0x6]
	add		r0, r2, r6
_0831a2c8:
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x31A2CE, 0x2

_0831a2d0:	.4byte 0x07FFFFFF
	thumb_func_end sub_0831a288

	thumb_func_start sub_0831a2d4
sub_0831a2d4:
	ldr		r1, _0831a2e0
	ldrb	r0, [r0, #0x2]
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x31A2DE, 0x2

_0831a2e0:	.4byte 0x0202C4C4
	thumb_func_end sub_0831a2d4

	thumb_func_start sub_0831a2e4
sub_0831a2e4:
	add		r3, r0, #0x0
	mov		r2, #0x0
	ldrb	r1, [r3, #0x1]
	mov		r0, #0x3f
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831a308
	cmp		r0, #0x3f
	beq		_0831a308
	mov		r0, #0x40
	and		r1, r0
	lsl		r0, r1, #0x18
	lsr		r0, r0, #0x18
	neg		r0, r0
	asr		r2, r0, #0x1f
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	and		r2, r0
_0831a308:
	ldr		r0, _0831a318
	ldrb	r1, [r3, #0x2]
	lsl		r1, r1, #0x1
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	orr		r2, r0
	add		r0, r2, #0x0
	bx		lr

_0831a318:	.4byte 0x0202C4C8
	thumb_func_end sub_0831a2e4

	thumb_func_start sub_0831a31c
sub_0831a31c:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	mov		r4, #0x0
	ldrb	r2, [r3, #0x1]
	add		r5, r2, #0x0
	ldr		r1, [r3, #0x4]
	ldr		r0, _0831a350
	cmp		r1, r0
	bls		_0831a3fa
	ldrb	r1, [r3, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831a3a8
	mov		r0, #0x3f
	and		r0, r2
	cmp		r0, #0x0
	beq		_0831a360
	cmp		r0, #0x3f
	beq		_0831a360
	ldr		r1, _0831a354
	cmp		r2, #0x3f
	bls		_0831a358
	mov		r0, #0x7f
	sub		r0, r0, r2
	b		_0831a35a

_0831a350:	.4byte 0x07FFFFFF
_0831a354:	.4byte 0x0202C444

_0831a358:
	add		r0, r2, #0x0
_0831a35a:
	add		r0, r1, r0
	ldrb	r1, [r0, #0x0]
	b		_0831a382
_0831a360:
	ldrb	r1, [r3, #0x3]
	cmp		r1, #0x0
	bne		_0831a382
	add		r0, r5, #0x0
	sub		r0, #0x3f
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x1
	bhi		_0831a37c
	ldr		r0, _0831a378
	add		r0, #0x3f
	b		_0831a37e

_0831a378:	.4byte 0x0202C444

_0831a37c:
	ldr		r0, _0831a394
_0831a37e:
	ldrb	r0, [r0, #0x0]
	add		r1, r0, #0x0
_0831a382:
	ldrb	r0, [r3, #0x2]
	cmp		r0, #0x1
	beq		_0831a398
	cmp		r0, #0x1
	ble		_0831a3d6
	cmp		r0, #0x2
	beq		_0831a3a0
	b		_0831a43c

.incbin "base.gba", 0x31A392, 0x2

_0831a394:	.4byte 0x0202C444

_0831a398:
	lsl		r0, r1, #0x9
	mov		r1, #0x88
	lsl		r1, r1, #0x9
	b		_0831a43a
_0831a3a0:
	lsl		r0, r1, #0x7
	mov		r1, #0xa4
	lsl		r1, r1, #0x9
	b		_0831a43a
_0831a3a8:
	cmp		r2, #0x0
	beq		_0831a3c2
	ldr		r1, _0831a3b8
	cmp		r2, #0x3f
	bls		_0831a3bc
	mov		r0, #0x7f
	sub		r0, r0, r2
	b		_0831a3be

_0831a3b8:	.4byte 0x0202C484

_0831a3bc:
	add		r0, r2, #0x0
_0831a3be:
	add		r0, r1, r0
	b		_0831a3ca
_0831a3c2:
	ldrb	r1, [r3, #0x3]
	cmp		r1, #0x0
	bne		_0831a3cc
	ldr		r0, _0831a3dc
_0831a3ca:
	ldrb	r1, [r0, #0x0]
_0831a3cc:
	ldrb	r0, [r3, #0x2]
	cmp		r0, #0x1
	beq		_0831a3ea
	cmp		r0, #0x1
	bgt		_0831a3e0
_0831a3d6:
	cmp		r0, #0x0
	beq		_0831a3e6
	b		_0831a43c

_0831a3dc:	.4byte 0x0202C484

_0831a3e0:
	cmp		r0, #0x2
	beq		_0831a3f2
	b		_0831a43c
_0831a3e6:
	lsl		r4, r1, #0xb
	b		_0831a43c
_0831a3ea:
	lsl		r0, r1, #0x9
	mov		r1, #0x80
	lsl		r1, r1, #0x8
	b		_0831a43a
_0831a3f2:
	lsl		r0, r1, #0x7
	mov		r1, #0xa0
	lsl		r1, r1, #0x8
	b		_0831a43a
_0831a3fa:
	ldr		r1, _0831a408
	cmp		r2, #0x3f
	bls		_0831a40c
	mov		r0, #0x7f
	sub		r0, r0, r2
	b		_0831a40e

.incbin "base.gba", 0x31A406, 0x2

_0831a408:	.4byte 0x0202C444

_0831a40c:
	add		r0, r5, #0x0
_0831a40e:
	add		r0, r1, r0
	ldrb	r1, [r0, #0x0]
	ldrb	r0, [r3, #0x2]
	cmp		r0, #0x1
	beq		_0831a42c
	cmp		r0, #0x1
	bgt		_0831a422
	cmp		r0, #0x0
	beq		_0831a428
	b		_0831a43c
_0831a422:
	cmp		r0, #0x2
	beq		_0831a434
	b		_0831a43c
_0831a428:
	lsl		r4, r1, #0x6
	b		_0831a43c
_0831a42c:
	lsl		r0, r1, #0x4
	mov		r1, #0xc0
	lsl		r1, r1, #0x1
	b		_0831a43a
_0831a434:
	lsl		r0, r1, #0x2
	mov		r1, #0xf0
	lsl		r1, r1, #0x1
_0831a43a:
	add		r4, r0, r1
_0831a43c:
	add		r0, r4, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0831a31c

	thumb_func_start sub_0831a444
sub_0831a444:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0830f1b0
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	mov		r1, #0x0
	strh	r0, [r4, #0x10]
	str		r1, [r4, #0x48]
	add		r0, r4, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	mov		r2, #0x0
	mov		r1, #0x4
	add		r0, #0x34
_0831a462:
	str		r2, [r0, #0x0]
	sub		r0, #0x4
	sub		r1, #0x1
	cmp		r1, #0x0
	bge		_0831a462
	mov		r1, #0x0
	add		r0, r4, #0x0
	add		r0, #0x4e
	strb	r1, [r0, #0x0]
	add		r0, #0x2
	mov		r2, #0x0
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	str		r1, [r4, #0x54]
	str		r1, [r4, #0x5c]
	str		r1, [r4, #0x60]
	add		r0, #0x12
	strb	r2, [r0, #0x0]
	str		r1, [r4, #0x68]
	add		r2, r4, #0x0
	add		r2, #0x58
	mov		r0, #0xc0
	strh	r0, [r2, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x5a
	strh	r1, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31A49E, 0x32
	thumb_func_end sub_0831a444

	thumb_func_start sub_0831a4d0
sub_0831a4d0:
	add		r2, r0, #0x0
	add		r2, #0x80
	mov		r1, #0xb6
	str		r1, [r2, #0x0]
	mov		r1, #0x88
	lsl		r1, r1, #0x8
	mov		r2, #0x0
	strh	r1, [r0, #0x10]
	mov		r1, #0x3
	strh	r1, [r0, #0x34]
	mov		r1, #0x1e
	strb	r1, [r0, #0xe]
	strb	r1, [r0, #0xd]
	strb	r1, [r0, #0xc]
	ldr		r1, _0831a500
	str		r1, [r0, #0x14]
	ldr		r1, _0831a504
	str		r1, [r0, #0x18]
	ldr		r1, _0831a508
	str		r1, [r0, #0x48]
	add		r0, #0x4c
	strh	r2, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x31A4FE, 0x2

_0831a500:	.4byte 0x020145F5
_0831a504:	.4byte 0x020146ED
_0831a508:	.4byte 0x02027940
	thumb_func_end sub_0831a4d0

	thumb_func_start sub_0831a50c
sub_0831a50c:
	push	{ r4, r5, r6, r7, lr }
	sub		sp, #0xc
	ldr		r0, _0831a540
	ldr		r1, _0831a544
	add		r0, r0, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831a5e6
	mov		r0, #0x1
	bl		sub_0830e6c0
	add		r6, r0, #0x0
	add		r6, #0xc8
	ldr		r0, _0831a548
	ldr		r0, [r0, #0x0]
	asr		r7, r0, #0x2
	mov		r1, #0x1f
	and		r7, r1
	add		r5, r1, #0x0
	and		r5, r0
	cmp		r5, #0xf
	bgt		_0831a54c
	lsl		r0, r5, #0x1
	b		_0831a550

_0831a540:	.4byte 0x030031D0
_0831a544:	.4byte 0x0000076C
_0831a548:	.4byte 0x030021D8

_0831a54c:
	sub		r0, r1, r5
	lsl		r0, r0, #0x1
_0831a550:
	add		r5, r0, #0x0
	mov		r1, sp
	add		r0, #0xf
	mov		r2, #0x1f
	and		r0, r2
	lsl		r0, r0, #0x5
	mov		r3, #0xf8
	lsl		r3, r3, #0x7
	add		r4, r3, #0x0
	orr		r0, r4
	strh	r0, [r1, #0x0]
	mov		r3, sp
	mov		r1, #0x37
	sub		r1, r1, r5
	and		r1, r2
	lsl		r1, r1, #0x5
	add		r0, r1, #0x0
	orr		r0, r2
	strh	r0, [r3, #0x2]
	add		r0, r5, #0x0
	and		r0, r2
	lsl		r0, r0, #0xa
	orr		r1, r0
	strh	r1, [r3, #0x4]
	sub		r1, r2, r5
	and		r1, r2
	add		r0, r1, #0x0
	orr		r0, r4
	strh	r0, [r3, #0x6]
	mov		r2, sp
	mov		r3, #0xb8
	lsl		r3, r3, #0x2
	add		r0, r3, #0x0
	orr		r1, r0
	strh	r1, [r2, #0x8]
	mov		r0, sp
	ldrh	r0, [r0, #0x0]
	strh	r0, [r6, #0x2]
	cmp		r7, #0x7
	bgt		_0831a5ac
	mov		r0, sp
	ldrh	r0, [r0, #0x8]
	strh	r0, [r6, #0x0]
	mov		r0, sp
	ldrh	r0, [r0, #0x2]
	b		_0831a5d6
_0831a5ac:
	cmp		r7, #0xf
	bgt		_0831a5bc
	mov		r0, sp
	ldrh	r0, [r0, #0x2]
	strh	r0, [r6, #0x0]
	mov		r0, sp
	ldrh	r0, [r0, #0x4]
	b		_0831a5d6
_0831a5bc:
	cmp		r7, #0x17
	bgt		_0831a5cc
	mov		r0, sp
	ldrh	r0, [r0, #0x4]
	strh	r0, [r6, #0x0]
	mov		r0, sp
	ldrh	r0, [r0, #0x6]
	b		_0831a5d6
_0831a5cc:
	mov		r0, sp
	ldrh	r0, [r0, #0x6]
	strh	r0, [r6, #0x0]
	mov		r0, sp
	ldrh	r0, [r0, #0x8]
_0831a5d6:
	strh	r0, [r6, #0x4]
	mov		r0, #0x1
	bl		sub_0830e6cc
	ldr		r1, _0831a5f0
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
_0831a5e6:
	add		sp, #0xc
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31A5EE, 0x2

_0831a5f0:	.4byte 0x030021D8

.incbin "base.gba", 0x31A5F4, 0x40
	thumb_func_end sub_0831a50c

	thumb_func_start sub_0831a634
sub_0831a634:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	ldr		r5, [r3, #0x70]
	ldr		r2, [r3, #0x74]
	ldr		r4, _0831a6a8
	cmp		r5, #0x0
	bne		_0831a652
	cmp		r2, #0x0
	bne		_0831a652
	ldr		r0, [r4, #0x0]
	str		r0, [r3, #0x48]
	ldr		r2, [r4, #0x4]
	mov		r0, #0xc0
	lsl		r0, r0, #0xc
	str		r0, [r3, #0x8]
_0831a652:
	lsl		r0, r5, #0x3
	add		r0, r0, r4
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0831a6e4
	sub		r2, #0x1
	cmp		r2, #0x0
	bne		_0831a6ce
	add		r5, #0x1
	lsl		r1, r5, #0x3
	add		r0, r4, #0x4
	add		r0, r1, r0
	ldr		r2, [r0, #0x0]
	add		r1, r1, r4
	ldr		r4, [r1, #0x0]
	cmp		r4, #0x0
	bne		_0831a6cc
	ldr		r2, _0831a6ac
	ldrh	r1, [r3, #0x34]
	ldr		r0, _0831a6b0
	and		r0, r1
	strh	r0, [r3, #0x34]
	str		r4, [r3, #0x8]
	ldr		r0, _0831a6b4
	str		r0, [r3, #0x48]
	add		r1, r3, #0x0
	add		r1, #0x80
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	str		r0, [r1, #0x0]
	ldr		r0, _0831a6b8
	add		r2, r2, r0
	ldrh	r1, [r2, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x4
	and		r0, r1
	mov		r1, #0x80
	lsl		r1, r1, #0x4
	cmp		r0, r1
	bne		_0831a6bc
	mov		r0, #0x78
	b		_0831a6be

.incbin "base.gba", 0x31A6A6, 0x2

_0831a6a8:	.4byte 0x0202C600
_0831a6ac:	.4byte 0x030031D0
_0831a6b0:	.4byte 0x0000FFFE
_0831a6b4:	.4byte 0x02027940
_0831a6b8:	.4byte 0x00000772

_0831a6bc:
	mov		r0, #0x2
_0831a6be:
	str		r0, [r3, #0x70]
	ldr		r0, _0831a6c8
	str		r0, [r3, #0x14]
	b		_0831a6e4

.incbin "base.gba", 0x31A6C6, 0x2

_0831a6c8:	.4byte 0x020147D9

_0831a6cc:
	str		r4, [r3, #0x48]
_0831a6ce:
	str		r5, [r3, #0x70]
	str		r2, [r3, #0x74]
	ldr		r0, [r3, #0x8]
	mov		r1, #0x80
	lsl		r1, r1, #0x6
	add		r0, r0, r1
	str		r0, [r3, #0x8]
	add		r1, r3, #0x0
	add		r1, #0x80
	mov		r0, #0xb6
	str		r0, [r1, #0x0]
_0831a6e4:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31A6EA, 0x586
	thumb_func_end sub_0831a634

	thumb_func_start sub_0831ac70
sub_0831ac70:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r0, r1, #0x0
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	bge		_0831ac80
	ldr		r2, _0831acb4
	add		r1, r1, r2
_0831ac80:
	asr		r1, r1, #0x10
	ldr		r2, [r4, #0x4]
	cmp		r2, #0x0
	bge		_0831ac8c
	ldr		r3, _0831acb4
	add		r2, r2, r3
_0831ac8c:
	asr		r2, r2, #0x10
	ldr		r3, [r4, #0x8]
	cmp		r3, #0x0
	bge		_0831ac98
	ldr		r5, _0831acb4
	add		r3, r3, r5
_0831ac98:
	asr		r3, r3, #0x10
	bl		sub_08310fac
	add		r1, r0, #0x0
	cmp		r1, #0x7f
	beq		_0831acae
	mov		r0, #0x7f
	and		r1, r0
	add		r0, r4, #0x0
	add		r0, #0x36
	strb	r1, [r0, #0x0]
_0831acae:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0831acb4:	.4byte 0x0000FFFF
	thumb_func_end sub_0831ac70

	thumb_func_start sub_0831acb8
sub_0831acb8:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r1, [r4, #0x0]
	ldr		r2, [r4, #0x4]
	add		r0, r5, #0x0
	mov		r3, #0x0
	bl		sub_0831196c
	cmp		r0, #0x0
	beq		_0831acd6
	add		r1, r4, #0x0
	add		r1, #0x4e
	mov		r0, #0x26
	b		_0831acfe
_0831acd6:
	ldr		r1, [r4, #0x0]
	cmp		r1, #0x0
	bge		_0831ace0
	ldr		r0, _0831ad08
	add		r1, r1, r0
_0831ace0:
	lsr		r1, r1, #0x10
	ldr		r2, [r4, #0x4]
	cmp		r2, #0x0
	bge		_0831acec
	ldr		r0, _0831ad08
	add		r2, r2, r0
_0831acec:
	lsl		r1, r1, #0x10
	asr		r1, r1, #0x10
	asr		r2, r2, #0x10
	add		r0, r5, #0x0
	mov		r3, #0x0
	bl		sub_08311014
	add		r1, r4, #0x0
	add		r1, #0x4e
_0831acfe:
	strb	r0, [r1, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31AD06, 0x2

_0831ad08:	.4byte 0x0000FFFF
	thumb_func_end sub_0831acb8

	thumb_func_start sub_0831ad0c
sub_0831ad0c:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0831acb8
	add		r4, #0x4e
	ldrb	r4, [r4, #0x0]
	mov		r0, #0x90
	and		r0, r4
	cmp		r0, #0x80
	beq		_0831ad2c
	mov		r0, #0x20
	and		r0, r4
	cmp		r0, #0x0
	bne		_0831ad2c
	mov		r0, #0x0
	b		_0831ad2e
_0831ad2c:
	mov		r0, #0x1
_0831ad2e:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_0831ad0c

	thumb_func_start sub_0831ad34
sub_0831ad34:
	add		r2, r0, #0x0
	add		r0, #0x78
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x3
	bne		_0831ad44
	ldr		r0, [r2, #0x8]
	cmp		r0, #0x0
	beq		_0831ad60
_0831ad44:
	add		r0, r2, #0x0
	add		r0, #0x78
	ldrb	r1, [r0, #0x0]
	add		r3, r0, #0x0
	cmp		r1, #0x4
	bne		_0831ad56
	ldr		r0, [r2, #0x8]
	cmp		r0, #0x0
	beq		_0831ad60
_0831ad56:
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x2
	beq		_0831ad60
	mov		r0, #0x1
	b		_0831ad62
_0831ad60:
	mov		r0, #0x0
_0831ad62:
	bx		lr
	thumb_func_end sub_0831ad34

	thumb_func_start sub_0831ad64
sub_0831ad64:
	push	{ r4, r5, r6, lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	mov		r1, #0xf1
	lsl		r1, r1, #0x3
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831adc8
	add		r0, r2, #0x0
	add		r1, r3, #0x0
	bl		sub_08320124
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_0831ad8e
	mov		r2, #0x40
_0831ad8e:
	add		r6, r2, #0x0
	cmp		r6, #0x0
	beq		_0831adc8
	mov		r0, #0x29
	bl		sub_08325e94
	ldr		r5, _0831add0
	ldr		r4, _0831add4
	mov		r0, #0xa4
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_08326084
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08326df4
_0831adc8:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31ADCE, 0x2

_0831add0:	.4byte 0x0202E890
_0831add4:	.4byte 0x0202E8F0
	thumb_func_end sub_0831ad64

	thumb_func_start sub_0831add8
sub_0831add8:
	push	{ r4, r5, r6, lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	mov		r1, #0xf1
	lsl		r1, r1, #0x3
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831ae3c
	add		r0, r2, #0x0
	add		r1, r3, #0x0
	bl		sub_08320124
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_0831ae02
	mov		r2, #0x40
_0831ae02:
	add		r6, r2, #0x0
	cmp		r6, #0x0
	beq		_0831ae3c
	mov		r0, #0x24
	bl		sub_08325e94
	ldr		r5, _0831ae44
	ldr		r4, _0831ae48
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_08326084
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08326df4
_0831ae3c:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31AE42, 0x2

_0831ae44:	.4byte 0x0202E890
_0831ae48:	.4byte 0x0202E8F0
	thumb_func_end sub_0831add8

	thumb_func_start sub_0831ae4c
sub_0831ae4c:
	push	{ r4, r5, r6, lr }
	add		r3, r0, #0x0
	add		r2, r1, #0x0
	mov		r1, #0xf1
	lsl		r1, r1, #0x3
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831aeb0
	add		r0, r2, #0x0
	add		r1, r3, #0x0
	bl		sub_08320124
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_0831ae76
	mov		r2, #0x40
_0831ae76:
	add		r6, r2, #0x0
	cmp		r6, #0x0
	beq		_0831aeb0
	mov		r0, #0x25
	bl		sub_08325e94
	ldr		r5, _0831aeb8
	ldr		r4, _0831aebc
	mov		r0, #0x94
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_08326084
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x3
	add		r2, r6, #0x0
	bl		sub_08326df4
_0831aeb0:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31AEB6, 0x2

_0831aeb8:	.4byte 0x0202E890
_0831aebc:	.4byte 0x0202E8F0
	thumb_func_end sub_0831ae4c

	thumb_func_start sub_0831aec0
sub_0831aec0:
	push	{ r4, lr }
	add		r2, r0, #0x0
	ldr		r3, _0831aef4
	ldr		r1, [r2, #0x8]
	ldr		r0, [r2, #0x30]
	add		r1, r1, r0
	str		r1, [r2, #0x8]
	ldr		r4, _0831aef8
	add		r0, r0, r4
	str		r0, [r2, #0x30]
	cmp		r1, #0x0
	bge		_0831aeec
	mov		r0, #0x0
	str		r0, [r2, #0x8]
	str		r0, [r2, #0x30]
	str		r0, [r2, #0x14]
	mov		r1, #0xe6
	lsl		r1, r1, #0x3
	add		r0, r3, r1
	add		r1, r2, #0x0
	bl		sub_08321500
_0831aeec:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31AEF2, 0x2

_0831aef4:	.4byte 0x030031D0
_0831aef8:	.4byte 0xFFFFE600
	thumb_func_end sub_0831aec0

	thumb_func_start sub_0831aefc
sub_0831aefc:
	push	{ r4, lr }
	mov		r2, #0x5a
	add		r2, r2, r0
	mov		r12, r2
	mov		r3, #0x0
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	mov		r4, r12
	strh	r2, [r4, #0x0]
	str		r1, [r0, #0x30]
	ldrh	r2, [r0, #0x34]
	ldr		r1, _0831af24
	and		r1, r2
	strh	r1, [r0, #0x34]
	str		r3, [r0, #0x18]
	ldr		r1, _0831af28
	str		r1, [r0, #0x14]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0831af24:	.4byte 0x0000FFFD
_0831af28:	.4byte 0x02014EC1
	thumb_func_end sub_0831aefc

	thumb_func_start sub_0831af2c
sub_0831af2c:
	push	{ lr }
	add		r3, r0, #0x0
	add		r0, #0x4e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x26
	beq		_0831af4c
	mov		r0, #0x0
	str		r0, [r3, #0x14]
	ldr		r1, _0831af48
	add		r0, r2, r1
	add		r1, r3, #0x0
	bl		sub_08321500
	b		_0831af52

_0831af48:	.4byte 0x0000070C

_0831af4c:
	add		r0, r3, #0x0
	bl		sub_0831aefc
_0831af52:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31AF56, 0x606
	thumb_func_end sub_0831af2c

	thumb_func_start sub_0831b55c
sub_0831b55c:
	add		r2, r1, #0x0
	ldrh	r1, [r0, #0x10]
	ldr		r0, _0831b574
	cmp		r1, r0
	beq		_0831b58c
	cmp		r1, r0
	bgt		_0831b578
	sub		r0, #0x1
	cmp		r1, r0
	beq		_0831b584
	b		_0831b5a4

.incbin "base.gba", 0x31B572, 0x2

_0831b574:	.4byte 0x00008402

_0831b578:
	ldr		r0, _0831b580
	cmp		r1, r0
	beq		_0831b594
	b		_0831b5a4

_0831b580:	.4byte 0x00008403

_0831b584:
	ldr		r1, _0831b588
	b		_0831b596

_0831b588:	.4byte 0x0202C6E8

_0831b58c:
	ldr		r1, _0831b590
	b		_0831b596

_0831b590:	.4byte 0x0202C700

_0831b594:
	ldr		r1, _0831b5a0
_0831b596:
	lsl		r0, r2, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	b		_0831b5a6

.incbin "base.gba", 0x31B59E, 0x2

_0831b5a0:	.4byte 0x0202C718

_0831b5a4:
	mov		r0, #0x0
_0831b5a6:
	bx		lr
	thumb_func_end sub_0831b55c

	thumb_func_start sub_0831b5a8
sub_0831b5a8:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r0, #0x4c
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831b5d2
	add		r6, r5, #0x0
	add		r6, #0x70
	ldrb	r4, [r6, #0x0]
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_0831b55c
	str		r0, [r5, #0x48]
	add		r4, #0x1
	cmp		r4, #0x5
	ble		_0831b5d0
	mov		r4, #0x0
_0831b5d0:
	strb	r4, [r6, #0x0]
_0831b5d2:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0831b5a8

	thumb_func_start sub_0831b5d8
sub_0831b5d8:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r3, #0x71
	ldrb	r3, [r3, #0x0]
	mov		r4, #0xea
	lsl		r4, r4, #0x3
	add		r2, r2, r4
	ldrb	r2, [r2, #0x0]
	cmp		r2, #0x0
	beq		_0831b5f2
	cmp		r2, #0x2
	beq		_0831b5f6
	b		_0831b5f8
_0831b5f2:
	sub		r1, #0x8
	b		_0831b5f8
_0831b5f6:
	add		r1, #0xa
_0831b5f8:
	cmp		r3, r1
	blt		_0831b604
	sub		r3, #0x10
	cmp		r3, r1
	bge		_0831b60c
	b		_0831b60a
_0831b604:
	add		r3, #0x4
	cmp		r3, r1
	ble		_0831b60c
_0831b60a:
	add		r3, r1, #0x0
_0831b60c:
	add		r0, #0x71
	strb	r3, [r0, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31B616, 0x14E6
	thumb_func_end sub_0831b5d8

	thumb_func_start sub_0831cafc
sub_0831cafc:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x54]
	add		r0, r5, #0x0
	bl		sub_08317960
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r1, #0x0
	mov		r12, r1
	strh	r0, [r4, #0x26]
	ldr		r6, [r5, #0x0]
	ldr		r7, _0831cb94
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0831cb20
	add		r1, #0x3f
_0831cb20:
	asr		r3, r1, #0x6
	ldr		r1, _0831cb98
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r7
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r6, r0
	str		r0, [r4, #0x0]
	ldr		r6, [r5, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _0831cb98
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r6, r0
	str		r0, [r4, #0x4]
	ldr		r0, [r5, #0x8]
	str		r0, [r4, #0x8]
	add		r0, r5, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	ldrh	r0, [r4, #0x34]
	mov		r1, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r4, #0x34]
	ldr		r0, _0831cb9c
	str		r0, [r4, #0x18]
	add		r1, r4, #0x0
	add		r1, #0x4c
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x71
	mov		r1, r12
	strb	r1, [r0, #0x0]
	ldrh	r1, [r4, #0x10]
	ldr		r0, _0831cba0
	cmp		r1, r0
	beq		_0831cbbc
	cmp		r1, r0
	bgt		_0831cba4
	sub		r0, #0x1
	cmp		r1, r0
	beq		_0831cbb0
	b		_0831cbd6

.incbin "base.gba", 0x31CB92, 0x2

_0831cb94:	.4byte 0x0202A9A0
_0831cb98:	.4byte 0x000003FF
_0831cb9c:	.4byte 0x02015091
_0831cba0:	.4byte 0x00008402

_0831cba4:
	ldr		r0, _0831cbac
	cmp		r1, r0
	beq		_0831cbcc
	b		_0831cbd6

_0831cbac:	.4byte 0x00008403

_0831cbb0:
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	b		_0831cbd4
_0831cbbc:
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	ldr		r0, _0831cbc8
	b		_0831cbd4

.incbin "base.gba", 0x31CBC6, 0x2

_0831cbc8:	.4byte 0x00001002

_0831cbcc:
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	ldr		r0, _0831cbe0
_0831cbd4:
	strh	r0, [r1, #0x0]
_0831cbd6:
	ldr		r0, _0831cbe4
	str		r0, [r4, #0x14]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0831cbe0:	.4byte 0x00001004
_0831cbe4:	.4byte 0x020169E5
	thumb_func_end sub_0831cafc

	thumb_func_start sub_0831cbe8
sub_0831cbe8:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r5, r1, #0x0
	bl		sub_0830f1b0
	mov		r4, #0x0
	mov		r6, #0x0
	strh	r5, [r7, #0x10]
	mov		r0, #0x9
	strb	r0, [r7, #0xe]
	strb	r0, [r7, #0xd]
	strb	r0, [r7, #0xc]
	add		r0, r7, #0x0
	add		r0, #0x4c
	strh	r6, [r0, #0x0]
	add		r0, #0x2
	strb	r4, [r0, #0x0]
	add		r0, #0x2
	strh	r6, [r0, #0x0]
	add		r0, #0x2
	strh	r6, [r0, #0x0]
	add		r0, #0x8
	strh	r6, [r0, #0x0]
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_0831b55c
	str		r0, [r7, #0x48]
	add		r0, r7, #0x0
	add		r0, #0x70
	strb	r4, [r0, #0x0]
	add		r0, #0x8
	strb	r4, [r0, #0x0]
	add		r0, #0x1
	strb	r4, [r0, #0x0]
	sub		r0, #0x8
	strb	r4, [r0, #0x0]
	add		r0, #0x9
	strb	r4, [r0, #0x0]
	sub		r0, #0x6
	strb	r4, [r0, #0x0]
	str		r6, [r7, #0x7c]
	add		r0, #0xc
	strb	r4, [r0, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31CC46, 0x2
	thumb_func_end sub_0831cbe8

	thumb_func_start sub_0831cc48
sub_0831cc48:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x54]
	ldr		r1, _0831ccc8
	bl		sub_0831cbe8
	add		r0, r5, #0x0
	bl		sub_08317960
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r4, #0x26]
	ldr		r6, [r5, #0x0]
	ldr		r7, _0831cccc
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0831cc6e
	add		r1, #0x3f
_0831cc6e:
	asr		r3, r1, #0x6
	ldr		r1, _0831ccd0
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r7
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r6, r0
	str		r0, [r4, #0x0]
	ldr		r6, [r5, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _0831ccd0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r6, r0
	str		r0, [r4, #0x4]
	ldr		r0, [r5, #0x8]
	str		r0, [r4, #0x8]
	add		r0, r5, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	ldr		r0, _0831ccd4
	str		r0, [r4, #0x14]
	ldr		r0, [r5, #0x48]
	ldr		r1, _0831ccd8
	and		r0, r1
	str		r0, [r5, #0x48]
	mov		r0, #0xbe
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0831ccc8:	.4byte 0x00008401
_0831cccc:	.4byte 0x0202A9A0
_0831ccd0:	.4byte 0x000003FF
_0831ccd4:	.4byte 0x02016AFD
_0831ccd8:	.4byte 0xfffeffff
	thumb_func_end sub_0831cc48

	thumb_func_start sub_0831ccdc
sub_0831ccdc:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x54]
	ldr		r1, _0831cd5c
	bl		sub_0831cbe8
	add		r0, r5, #0x0
	bl		sub_08317960
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r4, #0x26]
	ldr		r6, [r5, #0x0]
	ldr		r7, _0831cd60
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0831cd02
	add		r1, #0x3f
_0831cd02:
	asr		r3, r1, #0x6
	ldr		r1, _0831cd64
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r7
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r6, r0
	str		r0, [r4, #0x0]
	ldr		r6, [r5, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _0831cd64
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r6, r0
	str		r0, [r4, #0x4]
	ldr		r0, [r5, #0x8]
	str		r0, [r4, #0x8]
	add		r0, r5, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	ldr		r0, _0831cd68
	str		r0, [r4, #0x14]
	ldr		r0, [r5, #0x48]
	ldr		r1, _0831cd6c
	and		r0, r1
	str		r0, [r5, #0x48]
	mov		r0, #0xbe
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0831cd5c:	.4byte 0x00008402
_0831cd60:	.4byte 0x0202A9A0
_0831cd64:	.4byte 0x000003FF
_0831cd68:	.4byte 0x02016AFD
_0831cd6c:	.4byte 0xfffeffff
	thumb_func_end sub_0831ccdc

	thumb_func_start sub_0831cd70
sub_0831cd70:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x54]
	ldr		r1, _0831cdf0
	bl		sub_0831cbe8
	add		r0, r5, #0x0
	bl		sub_08317960
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r4, #0x26]
	ldr		r6, [r5, #0x0]
	ldr		r7, _0831cdf4
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0831cd96
	add		r1, #0x3f
_0831cd96:
	asr		r3, r1, #0x6
	ldr		r1, _0831cdf8
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r7
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r6, r0
	str		r0, [r4, #0x0]
	ldr		r6, [r5, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _0831cdf8
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r6, r0
	str		r0, [r4, #0x4]
	ldr		r0, [r5, #0x8]
	str		r0, [r4, #0x8]
	add		r0, r5, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	ldr		r0, _0831cdfc
	str		r0, [r4, #0x14]
	ldr		r0, [r5, #0x48]
	ldr		r1, _0831ce00
	and		r0, r1
	str		r0, [r5, #0x48]
	mov		r0, #0xbe
	lsl		r0, r0, #0x1
	add		r1, r5, r0
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0831cdf0:	.4byte 0x00008403
_0831cdf4:	.4byte 0x0202A9A0
_0831cdf8:	.4byte 0x000003FF
_0831cdfc:	.4byte 0x02016AFD
_0831ce00:	.4byte 0xfffeffff
	thumb_func_end sub_0831cd70

	thumb_func_start sub_0831ce04
sub_0831ce04:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r2, r1, #0x0
	ldr		r3, [r5, #0x54]
	ldr		r6, _0831ceb4
	add		r7, r6, #0x0
	add		r7, #0x24
	ldrh	r1, [r2, #0x10]
	mov		r4, #0xf0
	lsl		r4, r4, #0x8
	and		r4, r1
	mov		r0, #0x88
	lsl		r0, r0, #0x8
	cmp		r1, r0
	beq		_0831ceac
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	cmp		r4, r0
	beq		_0831ceac
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	cmp		r4, r0
	bne		_0831ce3e
	add		r0, r2, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0831ceac
_0831ce3e:
	ldr		r0, [r3, #0x48]
	ldr		r1, _0831ceb8
	and		r0, r1
	str		r0, [r3, #0x48]
	mov		r1, #0x9c
	lsl		r1, r1, #0x8
	add		r0, r5, #0x0
	bl		sub_0831aefc
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bne		_0831ceac
	ldr		r1, _0831cebc
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831ceac
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_08320124
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	cmp		r6, #0x0
	beq		_0831ceac
	mov		r0, #0x2b
	bl		sub_08325e94
	ldr		r5, _0831cec0
	ldr		r4, _0831cec4
	mov		r0, #0xac
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_08326084
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08326df4
_0831ceac:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31CEB2, 0x2

_0831ceb4:	.4byte 0x030031D0
_0831ceb8:	.4byte 0xfffeffff
_0831cebc:	.4byte 0x000007AC
_0831cec0:	.4byte 0x0202E890
_0831cec4:	.4byte 0x0202E8F0
	thumb_func_end sub_0831ce04

	thumb_func_start sub_0831cec8
sub_0831cec8:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r3, r1, #0x0
	ldr		r2, [r5, #0x54]
	ldr		r6, _0831cf80
	add		r7, r6, #0x0
	add		r7, #0x24
	ldrh	r1, [r3, #0x10]
	mov		r4, #0xf0
	lsl		r4, r4, #0x8
	and		r4, r1
	mov		r0, #0x88
	lsl		r0, r0, #0x8
	cmp		r1, r0
	beq		_0831cf7a
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	cmp		r4, r0
	beq		_0831cf7a
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	cmp		r4, r0
	bne		_0831cf02
	add		r0, r3, #0x0
	add		r0, #0x66
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0831cf7a
_0831cf02:
	ldr		r0, [r2, #0x48]
	ldr		r1, _0831cf84
	and		r0, r1
	str		r0, [r2, #0x48]
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r1, r2, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	mov		r1, #0x9c
	lsl		r1, r1, #0x8
	add		r0, r5, #0x0
	bl		sub_0831aefc
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	cmp		r4, r0
	bne		_0831cf7a
	ldr		r1, _0831cf88
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831cf7a
	add		r0, r7, #0x0
	add		r1, r5, #0x0
	bl		sub_08320124
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	cmp		r6, #0x0
	beq		_0831cf7a
	mov		r0, #0x2b
	bl		sub_08325e94
	ldr		r5, _0831cf8c
	ldr		r4, _0831cf90
	mov		r0, #0xac
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_08326084
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08326df4
_0831cf7a:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0831cf80:	.4byte 0x030031D0
_0831cf84:	.4byte 0xfffeffff
_0831cf88:	.4byte 0x000007AC
_0831cf8c:	.4byte 0x0202E890
_0831cf90:	.4byte 0x0202E8F0
	thumb_func_end sub_0831cec8

	thumb_func_start sub_0831cf94
sub_0831cf94:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	mov		r10, r6
	ldr		r0, [r6, #0x54]
	mov		r8, r0
	ldr		r5, _0831d094
	mov		r1, #0x24
	add		r1, r1, r5
	mov		r9, r1
	add		r1, r6, #0x0
	add		r1, #0x4c
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	mov		r4, #0x0
	strh	r0, [r1, #0x0]
	ldrh	r0, [r6, #0x38]
	cmp		r0, #0x0
	beq		_0831cfc4
	sub		r0, #0x1
	strh	r0, [r6, #0x38]
_0831cfc4:
	ldr		r0, [r6, #0x0]
	ldr		r1, [r6, #0x28]
	add		r0, r0, r1
	str		r0, [r6, #0x0]
	ldr		r0, [r6, #0x4]
	ldr		r1, [r6, #0x2c]
	add		r0, r0, r1
	str		r0, [r6, #0x4]
	ldr		r0, [r6, #0x8]
	ldr		r1, [r6, #0x30]
	add		r0, r0, r1
	str		r0, [r6, #0x8]
	ldr		r0, _0831d098
	add		r1, r1, r0
	str		r1, [r6, #0x30]
	add		r0, r6, #0x0
	mov		r1, r9
	bl		sub_0831ac70
	ldr		r0, [r6, #0x8]
	cmp		r0, #0x0
	bgt		_0831d0e8
	str		r4, [r6, #0x8]
	str		r4, [r6, #0x30]
	add		r0, r6, #0x0
	mov		r1, r9
	bl		sub_0831ac70
	str		r4, [r6, #0x14]
	ldr		r1, _0831d09c
	add		r0, r5, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831d05a
	mov		r0, r9
	add		r1, r6, #0x0
	bl		sub_08320124
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_0831d020
	mov		r2, #0x40
_0831d020:
	add		r7, r2, #0x0
	cmp		r7, #0x0
	beq		_0831d05a
	mov		r0, #0x23
	bl		sub_08325e94
	ldr		r5, _0831d0a0
	ldr		r4, _0831d0a4
	mov		r0, #0x8c
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_08326084
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r7, #0x0
	bl		sub_08326df4
_0831d05a:
	mov		r0, r10
	ldr		r1, _0831d0a8
	bl		sub_0831acb8
	mov		r2, #0x0
	add		r0, r6, #0x0
	add		r0, #0x4e
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x90
	and		r0, r1
	cmp		r0, #0x80
	bne		_0831d074
	mov		r2, #0x1
_0831d074:
	cmp		r2, #0x0
	bne		_0831d086
	mov		r0, #0x0
	add		r2, r1, #0x0
	cmp		r2, #0x26
	bne		_0831d082
	mov		r0, #0x1
_0831d082:
	cmp		r0, #0x0
	beq		_0831d0ac
_0831d086:
	mov		r1, #0x9c
	lsl		r1, r1, #0x8
	add		r0, r6, #0x0
	bl		sub_0831aefc
	b		_0831d100

.incbin "base.gba", 0x31D092, 0x2

_0831d094:	.4byte 0x030031D0
_0831d098:	.4byte 0xFFFFE600
_0831d09c:	.4byte 0x000007AC
_0831d0a0:	.4byte 0x0202E890
_0831d0a4:	.4byte 0x0202E8F0
_0831d0a8:	.4byte 0x030031F4

_0831d0ac:
	mov		r3, #0x0
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831d0c4
	mov		r0, #0x0
	cmp		r2, #0x26
	bne		_0831d0be
	mov		r0, #0x1
_0831d0be:
	cmp		r0, #0x0
	bne		_0831d0c4
	mov		r3, #0x1
_0831d0c4:
	cmp		r3, #0x0
	beq		_0831d0e8
	mov		r1, r8
	ldr		r0, [r1, #0x48]
	ldr		r1, _0831d0e0
	and		r0, r1
	mov		r1, r8
	str		r0, [r1, #0x48]
	ldr		r0, _0831d0e4
	add		r0, r9
	add		r1, r6, #0x0
	bl		sub_08321500
	b		_0831d100

_0831d0e0:	.4byte 0xfffeffff
_0831d0e4:	.4byte 0x0000070C

_0831d0e8:
	add		r0, r6, #0x0
	add		r0, #0x4c
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x10
	bne		_0831d100
	mov		r1, r8
	ldr		r0, [r1, #0x48]
	ldr		r1, _0831d110
	and		r0, r1
	mov		r1, r8
	str		r0, [r1, #0x48]
_0831d100:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31D10E, 0x2

_0831d110:	.4byte 0xfffeffff
	thumb_func_end sub_0831cf94

	thumb_func_start sub_0831d114
sub_0831d114:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	add		r5, r4, #0x0
	ldr		r6, [r4, #0x54]
	ldr		r0, _0831d218
	mov		r9, r0
	mov		r1, #0x24
	add		r1, r9
	mov		r10, r1
	mov		r1, #0xc6
	lsl		r1, r1, #0x1
	add		r0, r6, r1
	mov		r7, #0x0
	strh	r7, [r0, #0x0]
	str		r7, [r4, #0x8]
	add		r0, r6, #0x0
	bl		sub_08317978
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r4, #0x26]
	mov		r1, #0x80
	lsl		r1, r1, #0x9
	mov		r8, r1
	str		r1, [r4, #0x8]
	ldr		r1, _0831d21c
	mov		r12, r1
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0831d15c
	add		r1, #0x3f
_0831d15c:
	asr		r3, r1, #0x6
	ldr		r1, _0831d220
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r12
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	str		r0, [r4, #0x28]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _0831d220
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	neg		r0, r0
	lsl		r0, r0, #0x4
	str		r0, [r5, #0x2c]
	mov		r0, #0xd0
	lsl		r0, r0, #0x9
	str		r0, [r5, #0x30]
	add		r0, r5, #0x0
	mov		r1, r10
	bl		sub_0831ac70
	ldr		r0, _0831d224
	str		r0, [r5, #0x18]
	mov		r0, #0x8
	strh	r0, [r5, #0x38]
	add		r0, r5, #0x0
	add		r0, #0x4c
	strh	r7, [r0, #0x0]
	ldr		r0, [r6, #0x48]
	mov		r1, r8
	orr		r0, r1
	str		r0, [r6, #0x48]
	ldr		r0, _0831d228
	str		r0, [r5, #0x14]
	ldr		r0, _0831d22c
	add		r0, r9
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831d20a
	mov		r0, r10
	add		r1, r5, #0x0
	bl		sub_08320124
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_0831d1d0
	mov		r2, #0x40
_0831d1d0:
	add		r6, r2, #0x0
	cmp		r6, #0x0
	beq		_0831d20a
	mov		r0, #0x24
	bl		sub_08325e94
	ldr		r5, _0831d230
	ldr		r4, _0831d234
	mov		r0, #0x90
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_08326084
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08326df4
_0831d20a:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0831d218:	.4byte 0x030031D0
_0831d21c:	.4byte 0x0202A9A0
_0831d220:	.4byte 0x000003FF
_0831d224:	.4byte 0x02016E05
_0831d228:	.4byte 0x02016F95
_0831d22c:	.4byte 0x000007AC
_0831d230:	.4byte 0x0202E890
_0831d234:	.4byte 0x0202E8F0
	thumb_func_end sub_0831d114

	thumb_func_start sub_0831d238
sub_0831d238:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	add		r7, r4, #0x0
	ldr		r6, [r4, #0x54]
	ldr		r0, _0831d28c
	add		r0, #0x24
	mov		r8, r0
	mov		r9, r8
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, r8
	bl		sub_0831acb8
	mov		r2, #0x0
	add		r0, r4, #0x0
	add		r0, #0x4e
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x90
	and		r0, r1
	cmp		r0, #0x80
	bne		_0831d272
	mov		r2, #0x1
_0831d272:
	cmp		r2, #0x0
	beq		_0831d294
	ldr		r0, [r6, #0x48]
	ldr		r1, _0831d290
	and		r0, r1
	str		r0, [r6, #0x48]
	mov		r1, #0x9c
	lsl		r1, r1, #0x8
	add		r0, r4, #0x0
	bl		sub_0831aefc
	b		_0831d352

.incbin "base.gba", 0x31D28A, 0x2

_0831d28c:	.4byte 0x030031D0
_0831d290:	.4byte 0xfffeffff

_0831d294:
	mov		r3, #0x0
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831d2b0
	mov		r2, #0x0
	lsl		r0, r1, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x26
	bne		_0831d2aa
	mov		r2, #0x1
_0831d2aa:
	cmp		r2, #0x0
	bne		_0831d2b0
	mov		r3, #0x1
_0831d2b0:
	cmp		r3, #0x0
	bne		_0831d2c6
	mov		r5, #0x0
	add		r0, r7, #0x0
	add		r0, #0x4e
	ldrb	r0, [r0, #0x0]
	cmp		r0, #0x26
	bne		_0831d2c2
	mov		r5, #0x1
_0831d2c2:
	cmp		r5, #0x0
	beq		_0831d2e4
_0831d2c6:
	ldr		r0, [r6, #0x48]
	ldr		r1, _0831d2dc
	and		r0, r1
	str		r0, [r6, #0x48]
	ldr		r0, _0831d2e0
	add		r0, r8
	add		r1, r7, #0x0
	bl		sub_08321500
	b		_0831d352

.incbin "base.gba", 0x31D2DA, 0x2

_0831d2dc:	.4byte 0xfffeffff
_0831d2e0:	.4byte 0x0000070C

_0831d2e4:
	str		r5, [r4, #0x8]
	add		r0, r7, #0x0
	mov		r1, r9
	bl		sub_0831ac70
	ldr		r0, _0831d360
	str		r0, [r4, #0x18]
	str		r5, [r7, #0x14]
	mov		r0, #0xf1
	lsl		r0, r0, #0x3
	add		r0, r8
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831d352
	mov		r0, r8
	add		r1, r4, #0x0
	bl		sub_08320124
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	cmp		r2, #0x3f
	bgt		_0831d318
	mov		r2, #0x40
_0831d318:
	add		r6, r2, #0x0
	cmp		r6, #0x0
	beq		_0831d352
	mov		r0, #0x23
	bl		sub_08325e94
	ldr		r5, _0831d364
	ldr		r4, _0831d368
	mov		r0, #0x8c
	lsl		r0, r0, #0x1
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_08326084
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r6, #0x0
	bl		sub_08326df4
_0831d352:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31D35E, 0x2

_0831d360:	.4byte 0x02016E05
_0831d364:	.4byte 0x0202E890
_0831d368:	.4byte 0x0202E8F0
	thumb_func_end sub_0831d238

	thumb_func_start sub_0831d36c
sub_0831d36c:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x54]
	add		r7, r4, #0x0
	add		r1, r4, #0x0
	add		r1, #0x4c
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r1, _0831d398
	add		r0, r5, #0x0
	add		r0, #0x7e
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0831d39c
	add		r0, r5, #0x0
	bl		sub_08317960
	b		_0831d3aa

_0831d398:	.4byte 0x0202BE80

_0831d39c:
	add		r1, r5, #0x0
	add		r1, #0x56
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	add		r0, r2, #0x0
	ldrh	r1, [r1, #0x0]
	add		r0, r0, r1
_0831d3aa:
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r4, #0x26]
	ldr		r6, [r5, #0x0]
	ldr		r1, _0831d414
	mov		r12, r1
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0831d3c0
	add		r1, #0x3f
_0831d3c0:
	asr		r3, r1, #0x6
	ldr		r1, _0831d418
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r12
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r6, r0
	str		r0, [r4, #0x0]
	ldr		r6, [r5, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _0831d418
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r6, r0
	str		r0, [r4, #0x4]
	ldr		r0, [r5, #0x8]
	str		r0, [r4, #0x8]
	add		r0, r5, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	add		r0, r5, #0x0
	bl		sub_0831ad34
	cmp		r0, #0x0
	beq		_0831d41c
	ldrh	r0, [r7, #0x34]
	mov		r1, #0x1
	orr		r1, r0
	mov		r0, #0x2
	orr		r1, r0
	b		_0831d426

_0831d414:	.4byte 0x0202A9A0
_0831d418:	.4byte 0x000003FF

_0831d41c:
	ldrh	r0, [r7, #0x34]
	ldr		r1, _0831d448
	and		r1, r0
	ldr		r0, _0831d44c
	and		r1, r0
_0831d426:
	strh	r1, [r7, #0x34]
	add		r0, r5, #0x0
	add		r0, #0x96
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831d456
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831d450
	add		r0, r4, #0x0
	bl		sub_0831d114
	b		_0831d456

_0831d448:	.4byte 0x0000FFFE
_0831d44c:	.4byte 0x0000FFFD

_0831d450:
	add		r0, r4, #0x0
	bl		sub_0831d238
_0831d456:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0831d36c

	thumb_func_start sub_0831d45c
sub_0831d45c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_0830f1b0
	mov		r2, #0x0
	mov		r1, #0x0
	strh	r4, [r5, #0x10]
	mov		r0, #0x4
	strb	r0, [r5, #0xe]
	strb	r0, [r5, #0xd]
	strb	r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strb	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x8
	strh	r1, [r0, #0x0]
	ldr		r0, _0831d494
	str		r0, [r5, #0x48]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0831d494:	.4byte 0x02027920
	thumb_func_end sub_0831d45c

	thumb_func_start sub_0831d498
sub_0831d498:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	add		r5, r4, #0x0
	ldr		r6, [r4, #0x54]
	ldr		r1, _0831d524
	bl		sub_0831d45c
	add		r0, r6, #0x0
	bl		sub_08317960
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r4, #0x26]
	ldr		r7, [r6, #0x0]
	ldr		r1, _0831d528
	mov		r12, r1
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0831d4c2
	add		r1, #0x3f
_0831d4c2:
	asr		r3, r1, #0x6
	ldr		r1, _0831d52c
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r12
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r7, r0
	str		r0, [r4, #0x0]
	ldr		r4, [r6, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _0831d52c
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r4, r0
	str		r0, [r5, #0x4]
	ldr		r0, [r6, #0x8]
	str		r0, [r5, #0x8]
	add		r0, r6, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r5, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	ldr		r0, _0831d530
	str		r0, [r5, #0x14]
	mov		r0, #0xc6
	lsl		r0, r0, #0x1
	add		r1, r6, r0
	ldr		r0, _0831d534
	strh	r0, [r1, #0x0]
	ldrh	r0, [r5, #0x34]
	mov		r1, #0x1
	orr		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r5, #0x34]
	ldr		r0, _0831d538
	str		r0, [r5, #0x18]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0831d524:	.4byte 0x00008001
_0831d528:	.4byte 0x0202A9A0
_0831d52c:	.4byte 0x000003FF
_0831d530:	.4byte 0x0201736D
_0831d534:	.4byte 0x00001005
_0831d538:	.4byte 0x02016EC9
	thumb_func_end sub_0831d498

	thumb_func_start sub_0831d53c
sub_0831d53c:
	bx		lr

.incbin "base.gba", 0x31D53E, 0x2
	thumb_func_end sub_0831d53c

	thumb_func_start sub_0831d540
sub_0831d540:
	push	{ r4, r5, r6, r7, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x54]
	ldr		r2, _0831d5c8
	add		r1, r4, #0x0
	add		r1, #0x4c
	ldrh	r0, [r1, #0x0]
	add		r0, #0x1
	strh	r0, [r1, #0x0]
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	cmp		r0, #0x1d
	ble		_0831d56a
	mov		r0, #0x0
	str		r0, [r4, #0x14]
	mov		r1, #0xe6
	lsl		r1, r1, #0x3
	add		r0, r2, r1
	add		r1, r4, #0x0
	bl		sub_08321500
_0831d56a:
	add		r0, r5, #0x0
	bl		sub_08317960
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r4, #0x26]
	ldr		r6, [r5, #0x0]
	ldr		r7, _0831d5cc
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0831d584
	add		r1, #0x3f
_0831d584:
	asr		r3, r1, #0x6
	ldr		r1, _0831d5d0
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r1, r7
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r6, r0
	str		r0, [r4, #0x0]
	ldr		r6, [r5, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _0831d5d0
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r7
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r6, r0
	str		r0, [r4, #0x4]
	ldr		r0, [r5, #0x8]
	str		r0, [r4, #0x8]
	add		r0, r5, #0x0
	add		r0, #0x36
	ldrb	r1, [r0, #0x0]
	add		r0, r4, #0x0
	add		r0, #0x36
	strb	r1, [r0, #0x0]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0831d5c8:	.4byte 0x030031D0
_0831d5cc:	.4byte 0x0202A9A0
_0831d5d0:	.4byte 0x000003FF
	thumb_func_end sub_0831d540

	thumb_func_start sub_0831d5d4
sub_0831d5d4:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	add		r4, r1, #0x0
	bl		sub_0830f1b0
	mov		r2, #0x0
	mov		r1, #0x0
	strh	r4, [r5, #0x10]
	mov		r0, #0x8
	strb	r0, [r5, #0xe]
	strb	r0, [r5, #0xd]
	strb	r0, [r5, #0xc]
	add		r0, r5, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strb	r2, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x8
	strh	r1, [r0, #0x0]
	str		r1, [r5, #0x48]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31D60A, 0x2
	thumb_func_end sub_0831d5d4

	thumb_func_start sub_0831d60c
sub_0831d60c:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	add		r4, r5, #0x0
	ldr		r6, [r5, #0x54]
	ldr		r1, _0831d68c
	bl		sub_0831d5d4
	add		r0, r6, #0x0
	bl		sub_08317960
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	strh	r0, [r5, #0x26]
	ldr		r7, [r6, #0x0]
	ldr		r1, _0831d690
	mov		r12, r1
	add		r2, r0, #0x0
	add		r1, r2, #0x0
	cmp		r2, #0x0
	bge		_0831d636
	add		r1, #0x3f
_0831d636:
	asr		r3, r1, #0x6
	ldr		r1, _0831d694
	add		r0, r1, #0x0
	add		r1, r3, #0x0
	and		r1, r0
	lsl		r1, r1, #0x2
	add		r1, r12
	ldr		r0, [r1, #0x0]
	lsl		r0, r0, #0x4
	add		r0, r7, r0
	str		r0, [r5, #0x0]
	ldr		r5, [r6, #0x4]
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r3
	ldr		r1, _0831d694
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r12
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x4
	sub		r0, r5, r0
	str		r0, [r4, #0x4]
	ldr		r0, [r6, #0x8]
	str		r0, [r4, #0x8]
	add		r0, r6, #0x0
	add		r0, #0x36
	ldrb	r0, [r0, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x36
	strb	r0, [r1, #0x0]
	ldr		r0, _0831d698
	str		r0, [r4, #0x14]
	mov		r0, #0x0
	str		r0, [r4, #0x18]
	ldrh	r0, [r4, #0x34]
	mov		r1, #0x2
	orr		r0, r1
	strh	r0, [r4, #0x34]
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31D68A, 0x2

_0831d68c:	.4byte 0x00008003
_0831d690:	.4byte 0x0202A9A0
_0831d694:	.4byte 0x000003FF
_0831d698:	.4byte 0x02017541
	thumb_func_end sub_0831d60c

	thumb_func_start sub_0831d69c
sub_0831d69c:
	push	{ r4, lr }
	ldr		r2, [r0, #0x54]
	ldr		r1, _0831d6bc
	strh	r1, [r0, #0x10]
	add		r2, #0xb2
	ldrh	r3, [r2, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0x8
	add		r1, r4, #0x0
	orr		r1, r3
	strh	r1, [r2, #0x0]
	bl		sub_0831d60c
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_0831d6bc:	.4byte 0x00008003
	thumb_func_end sub_0831d69c

	thumb_func_start sub_0831d6c0
sub_0831d6c0:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, _0831d6ec
	ldr		r1, [r4, #0x54]
	ldr		r0, [r4, #0x70]
	sub		r0, #0x1
	str		r0, [r4, #0x70]
	cmp		r0, #0x0
	bgt		_0831d6e6
	add		r0, r1, #0x0
	mov		r1, #0x0
	bl		sub_08317a88
	mov		r1, #0xe6
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	add		r1, r4, #0x0
	bl		sub_08321500
_0831d6e6:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0831d6ec:	.4byte 0x030031D0
	thumb_func_end sub_0831d6c0

	thumb_func_start sub_0831d6f0
sub_0831d6f0:
	push	{ r4, lr }
	ldr		r2, [r0, #0x54]
	add		r2, #0xb2
	ldrh	r3, [r2, #0x0]
	mov		r4, #0x80
	lsl		r4, r4, #0x8
	add		r1, r4, #0x0
	orr		r1, r3
	strh	r1, [r2, #0x0]
	mov		r1, #0x96
	lsl		r1, r1, #0x2
	str		r1, [r0, #0x70]
	ldr		r1, _0831d714
	str		r1, [r0, #0x14]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31D712, 0x2

_0831d714:	.4byte 0x020176C1
	thumb_func_end sub_0831d6f0

	thumb_func_start sub_0831d718
sub_0831d718:
	push	{ r4, r5, lr }
	add		r1, r0, #0x0
	ldr		r0, _0831d744
	ldr		r3, [r1, #0x54]
	add		r3, #0xb2
	ldrh	r4, [r3, #0x0]
	mov		r5, #0x80
	lsl		r5, r5, #0x8
	add		r2, r5, #0x0
	mov		r5, #0x0
	orr		r2, r4
	strh	r2, [r3, #0x0]
	str		r5, [r1, #0x14]
	mov		r2, #0xe6
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	bl		sub_08321500
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31D742, 0x2

_0831d744:	.4byte 0x030031D0
	thumb_func_end sub_0831d718

	thumb_func_start sub_0831d748
sub_0831d748:
	push	{ r4, r5, lr }
	add		r1, r0, #0x0
	ldr		r0, _0831d774
	ldr		r3, [r1, #0x54]
	add		r3, #0xb2
	ldrh	r4, [r3, #0x0]
	mov		r5, #0x80
	lsl		r5, r5, #0x8
	add		r2, r5, #0x0
	mov		r5, #0x0
	orr		r2, r4
	strh	r2, [r3, #0x0]
	str		r5, [r1, #0x14]
	mov		r2, #0xe6
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	bl		sub_08321500
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31D772, 0x2

_0831d774:	.4byte 0x030031D0
	thumb_func_end sub_0831d748

	thumb_func_start sub_0831d778
sub_0831d778:
	push	{ r4, r5, lr }
	add		r1, r0, #0x0
	ldr		r0, _0831d7a4
	ldr		r3, [r1, #0x54]
	add		r3, #0xb2
	ldrh	r4, [r3, #0x0]
	mov		r5, #0x80
	lsl		r5, r5, #0x8
	add		r2, r5, #0x0
	mov		r5, #0x0
	orr		r2, r4
	strh	r2, [r3, #0x0]
	str		r5, [r1, #0x14]
	mov		r2, #0xe6
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	bl		sub_08321500
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31D7A2, 0x2

_0831d7a4:	.4byte 0x030031D0

.incbin "base.gba", 0x31D7A8, 0x38
	thumb_func_end sub_0831d778

	thumb_func_start sub_0831d7e0
sub_0831d7e0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x8
	mov		r9, r0
	ldr		r0, [r0, #0x54]
	mov		r8, r0
	ldr		r4, _0831d8fc
	ldr		r1, _0831d900
	add		r5, r4, r1
	ldr		r0, [r5, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831d810
	mov		r0, #0x4
	bl		sub_08323a50
	mov		r0, #0x27
	bl		sub_08325e94
_0831d810:
	mov		r2, r8
	add		r2, #0xb2
	ldrh	r1, [r2, #0x0]
	ldr		r0, _0831d904
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r2, _0831d908
	add		r1, r4, r2
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r6, _0831d90c
	add		r1, r4, r6
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	mov		r7, #0x0
	mov		r1, #0xf1
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	cmp		r7, r0
	bge		_0831d8d8
	mov		r10, r4
_0831d83e:
	lsl		r0, r7, #0x2
	ldr		r1, _0831d910
	add		r1, r10
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	mov		r3, r10
	cmp		r4, r8
	beq		_0831d8ca
	add		r0, r4, #0x0
	add		r0, #0x6a
	mov		r6, #0x0
	ldrsh	r2, [r0, r6]
	str		r2, [sp, #0x4]
	cmp		r2, #0x0
	bne		_0831d8ca
	add		r5, r4, #0x0
	add		r5, #0x78
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x2
	beq		_0831d8ca
	cmp		r0, #0x3
	beq		_0831d8ca
	cmp		r0, #0x5
	beq		_0831d8ca
	cmp		r0, #0x6
	beq		_0831d8ca
	cmp		r0, #0x7
	beq		_0831d8ca
	ldr		r1, _0831d914
	ldr		r0, [r1, #0x0]
	cmp		r0, r4
	bne		_0831d88e
	ldr		r0, _0831d918
	ldr		r1, _0831d91c
	mov		r2, #0x0
	str		r3, [sp, #0x0]
	bl		sub_0830fbb8
	str		r4, [r0, #0x54]
	ldr		r3, [sp, #0x0]
_0831d88e:
	add		r2, r4, #0x0
	add		r2, #0xb4
	ldrh	r0, [r2, #0x0]
	mov		r6, #0xc0
	lsl		r6, r6, #0x2
	add		r1, r6, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r1, r4, #0x0
	add		r1, #0xb6
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	strh	r0, [r1, #0x0]
	sub		r2, #0x40
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x3
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x1
	bne		_0831d8c0
	add		r0, r4, #0x0
	add		r0, #0xbc
	ldr		r1, [sp, #0x4]
	str		r1, [r0, #0x0]
_0831d8c0:
	add		r1, r4, #0x0
	add		r1, #0x68
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x0]
_0831d8ca:
	add		r7, #0x1
	mov		r2, #0xf1
	lsl		r2, r2, #0x3
	add		r0, r3, r2
	ldrb	r0, [r0, #0x0]
	cmp		r7, r0
	blt		_0831d83e
_0831d8d8:
	mov		r0, #0x0
	mov		r6, r9
	str		r0, [r6, #0x14]
	ldr		r1, _0831d920
	ldr		r2, _0831d924
	add		r0, r1, r2
	mov		r1, r9
	bl		sub_08321500
	add		sp, #0x8
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31D8FA, 0x2

_0831d8fc:	.4byte 0x030031D0
_0831d900:	.4byte 0x000007AC
_0831d904:	.4byte 0x0000FFBF
_0831d908:	.4byte 0x00000BF6
_0831d90c:	.4byte 0x00000781
_0831d910:	.4byte 0x0000078C
_0831d914:	.4byte 0x0300397C
_0831d918:	.4byte 0x020177BD
_0831d91c:	.4byte 0x0202C730
_0831d920:	.4byte 0x030031F4
_0831d924:	.4byte 0x0000070C
	thumb_func_end sub_0831d7e0

	thumb_func_start sub_0831d928
sub_0831d928:
	push	{ r4, r5, lr }
	ldr		r0, _0831d94c
	ldr		r1, _0831d950
	add		r5, r0, r1
	ldrh	r4, [r5, #0x0]
	cmp		r4, #0x0
	beq		_0831d944
	cmp		r4, #0x1
	bne		_0831d940
	mov		r0, #0x4
	bl		sub_08323b80
_0831d940:
	sub		r4, #0x1
	strh	r4, [r5, #0x0]
_0831d944:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31D94A, 0x2

_0831d94c:	.4byte 0x030031D0
_0831d950:	.4byte 0x00000BF6

.incbin "base.gba", 0x31D954, 0x98
	thumb_func_end sub_0831d928

	thumb_func_start sub_0831d9ec
sub_0831d9ec:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	ldr		r4, [r7, #0x54]
	ldr		r6, _0831da7c
	mov		r0, #0x24
	add		r0, r0, r6
	mov		r8, r0
	add		r0, r4, #0x0
	add		r0, #0xac
	mov		r5, #0x0
	strh	r5, [r0, #0x0]
	add		r2, r4, #0x0
	add		r2, #0x58
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x8
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	add		r1, r4, #0x0
	add		r1, #0x6a
	mov		r0, #0xba
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x0]
	add		r0, r4, #0x0
	mov		r1, #0x2
	bl		sub_08317870
	add		r1, r4, #0x0
	add		r1, #0x66
	mov		r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp		r0, #0x0
	beq		_0831da46
	strh	r5, [r1, #0x0]
	ldr		r3, _0831da80
	add		r0, r6, r3
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_0831da46
	mov		r0, #0x8
	bl		sub_08323b80
_0831da46:
	add		r2, r4, #0x0
	add		r2, #0xb2
	ldrh	r1, [r2, #0x0]
	mov		r3, #0x80
	lsl		r3, r3, #0x6
	add		r0, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	ldr		r0, _0831da7c
	ldr		r1, _0831da80
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_0831da68
	mov		r0, #0x10
	bl		sub_08323a50
_0831da68:
	ldr		r0, _0831da84
	add		r0, r8
	add		r1, r7, #0x0
	bl		sub_08321500
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0831da7c:	.4byte 0x030031D0
_0831da80:	.4byte 0x000007AC
_0831da84:	.4byte 0x0000070C
	thumb_func_end sub_0831d9ec

	thumb_func_start sub_0831da88
sub_0831da88:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r8, r0
	ldr		r4, _0831dafc
	mov		r0, #0x24
	add		r0, r0, r4
	mov		r9, r0
	mov		r1, r8
	ldr		r6, [r1, #0x54]
	mov		r5, #0x0
	add		r0, r6, #0x0
	mov		r1, #0x0
	bl		sub_08317a88
	add		r1, r6, #0x0
	add		r1, #0x66
	mov		r0, #0xb4
	lsl		r0, r0, #0x1
	strh	r0, [r1, #0x0]
	ldr		r1, _0831db00
	add		r0, r4, r1
	ldr		r0, [r0, #0x0]
	cmp		r6, r0
	bne		_0831dac8
	mov		r0, #0x2c
	bl		sub_08325e94
	mov		r0, #0x8
	bl		sub_08323a50
_0831dac8:
	mov		r7, #0x0
	ldr		r1, _0831db04
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	cmp		r5, r0
	bge		_0831db5c
_0831dad4:
	lsl		r1, r7, #0x18
	lsr		r1, r1, #0x18
	mov		r0, r9
	bl		sub_0831eca8
	add		r4, r0, #0x0
	cmp		r6, r4
	beq		_0831db50
	mov		r1, #0xbd
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrh	r5, [r0, #0x0]
	cmp		r5, #0x0
	blt		_0831db12
	cmp		r5, #0x2
	ble		_0831db0c
	ldr		r0, _0831db08
	cmp		r5, r0
	beq		_0831db10
	b		_0831db12

_0831dafc:	.4byte 0x030031D0
_0831db00:	.4byte 0x000007AC
_0831db04:	.4byte 0x00000789
_0831db08:	.4byte 0x0000100E

_0831db0c:
	mov		r5, #0x0
	b		_0831db50
_0831db10:
	ldr		r5, _0831db28
_0831db12:
	mov		r0, #0xf1
	lsl		r0, r0, #0x3
	add		r0, r9
	ldr		r0, [r0, #0x0]
	cmp		r6, r0
	bne		_0831db30
	add		r1, r5, #0x0
	ldr		r0, _0831db2c
	bl		sub_0832042c
	b		_0831db3c

_0831db28:	.4byte 0x00001009
_0831db2c:	.4byte 0x0000100B

_0831db30:
	cmp		r4, r0
	bne		_0831db3c
	add		r0, r5, #0x0
	mov		r1, #0x2
	bl		sub_0832042c
_0831db3c:
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_08317a88
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_08317a88
	cmp		r5, #0x0
	bne		_0831db74
_0831db50:
	add		r7, #0x1
	ldr		r0, _0831dba4
	add		r0, r9
	ldrb	r0, [r0, #0x0]
	cmp		r7, r0
	blt		_0831dad4
_0831db5c:
	cmp		r5, #0x0
	bne		_0831db74
	mov		r0, #0xf1
	lsl		r0, r0, #0x3
	add		r0, r9
	ldr		r0, [r0, #0x0]
	cmp		r6, r0
	bne		_0831db74
	ldr		r0, _0831dba8
	mov		r1, #0x0
	bl		sub_0832042c
_0831db74:
	mov		r0, r9
	mov		r1, #0x0
	bl		sub_0831eca8
	add		r4, r0, #0x0
	cmp		r6, r4
	beq		_0831dbb8
	mov		r0, r8
	str		r4, [r0, #0x54]
	ldrh	r1, [r0, #0x34]
	ldr		r0, _0831dbac
	and		r0, r1
	mov		r2, #0x0
	ldr		r1, _0831dbb0
	and		r0, r1
	mov		r1, r8
	strh	r0, [r1, #0x34]
	mov		r0, r8
	add		r0, #0x70
	strh	r2, [r0, #0x0]
	ldr		r0, _0831dbb4
	str		r0, [r1, #0x14]
	b		_0831dbc2

.incbin "base.gba", 0x31DBA2, 0x2

_0831dba4:	.4byte 0x00000765
_0831dba8:	.4byte 0x0000100B
_0831dbac:	.4byte 0x0000FFFD
_0831dbb0:	.4byte 0x0000FFFE
_0831dbb4:	.4byte 0x02017C99

_0831dbb8:
	ldr		r0, _0831dbd0
	add		r0, r9
	mov		r1, r8
	bl		sub_08321500
_0831dbc2:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31DBCE, 0x2

_0831dbd0:	.4byte 0x0000070C
	thumb_func_end sub_0831da88

	thumb_func_start sub_0831dbd4
sub_0831dbd4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r3, r0, #0x0
	ldr		r6, [r3, #0x54]
	ldr		r0, [r6, #0x0]
	mov		r12, r0
	ldr		r1, _0831dc54
	mov		r8, r1
	mov		r7, #0x26
	ldrsh	r2, [r3, r7]
	add		r0, r2, #0x0
	cmp		r2, #0x0
	bge		_0831dbf4
	add		r0, #0x3f
_0831dbf4:
	asr		r5, r0, #0x6
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	sub		r0, r0, r5
	ldr		r1, _0831dc58
	mov		r9, r1
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r1, [r0, #0x0]
	add		r4, r3, #0x0
	add		r4, #0x74
	mov		r7, #0x0
	ldrsh	r0, [r4, r7]
	mul		r1, r0
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	cmp		r0, #0x0
	bge		_0831dc1c
	add		r0, #0xf
_0831dc1c:
	asr		r0, r0, #0x4
	add		r0, r12
	str		r0, [r3, #0x0]
	ldr		r6, [r6, #0x4]
	add		r0, r5, #0x0
	mov		r1, r9
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r8
	ldr		r1, [r0, #0x0]
	mov		r2, #0x0
	ldrsh	r0, [r4, r2]
	mul		r1, r0
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	cmp		r0, #0x0
	bge		_0831dc40
	add		r0, #0xf
_0831dc40:
	asr		r0, r0, #0x4
	add		r0, r6, r0
	str		r0, [r3, #0x4]
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31DC52, 0x2

_0831dc54:	.4byte 0x0202A9A0
_0831dc58:	.4byte 0x000003FF

.incbin "base.gba", 0x31DC5C, 0x104C
	thumb_func_end sub_0831dbd4

	thumb_func_start sub_0831eca8
sub_0831eca8:
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x16
	ldr		r2, _0831ecb8
	add		r0, r0, r2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x31ECB6, 0x2

_0831ecb8:	.4byte 0x00000BAC
	thumb_func_end sub_0831eca8

	thumb_func_start sub_0831ecbc
sub_0831ecbc:
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x16
	ldr		r3, _0831eccc
	add		r0, r0, r3
	add		r0, r0, r1
	str		r2, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x31ECCA, 0x2

_0831eccc:	.4byte 0x00000BAC
	thumb_func_end sub_0831ecbc

	thumb_func_start sub_0831ecd0
sub_0831ecd0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	mov		r9, r0
	lsl		r1, r1, #0x18
	lsr		r7, r1, #0x18
	b		_0831ed22
_0831ece2:
	mov		r0, r8
	bl		sub_0831745c
	add		r4, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_0831745c
	cmp		r4, r0
	ble		_0831ed50
	ldr		r0, [r5, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0831ed50
	mov		r0, r9
	mov		r1, r10
	add		r2, r5, #0x0
	bl		sub_0831ecbc
	add		r0, r5, #0x0
	add		r0, #0xba
	strh	r7, [r0, #0x0]
	lsl		r1, r6, #0x18
	lsr		r7, r1, #0x18
	lsr		r1, r1, #0x19
	mov		r0, r9
	mov		r2, r8
	bl		sub_0831ecbc
	mov		r0, r8
	add		r0, #0xba
	strh	r7, [r0, #0x0]
_0831ed22:
	cmp		r7, #0x0
	beq		_0831ed50
	lsr		r0, r7, #0x1
	mov		r10, r0
	mov		r0, r9
	mov		r1, r10
	bl		sub_0831eca8
	mov		r8, r0
	cmp		r0, #0x0
	beq		_0831ed50
	sub		r6, r7, #0x2
	lsr		r1, r6, #0x1f
	add		r1, r6, r1
	asr		r1, r1, #0x1
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r0, r9
	bl		sub_0831eca8
	add		r5, r0, #0x0
	cmp		r5, #0x0
	bne		_0831ece2
_0831ed50:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31ED5E, 0x2
	thumb_func_end sub_0831ecd0

	thumb_func_start sub_0831ed60
sub_0831ed60:
	push	{ lr }
	add		r1, #0xba
	ldrb	r1, [r1, #0x0]
	bl		sub_0831ecd0
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31ED6E, 0x2
	thumb_func_end sub_0831ed60

	thumb_func_start sub_0831ed70
sub_0831ed70:
	push	{ r4, lr }
	mov		r4, #0xf3
	lsl		r4, r4, #0x3
	add		r0, r0, r4
	bl		sub_083108ac
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31ED82, 0x2
	thumb_func_end sub_0831ed70

	thumb_func_start sub_0831ed84
sub_0831ed84:
	push	{ lr }
	add		r0, r1, #0x0
	add		r1, r2, #0x0
	add		r2, r3, #0x0
	ldr		r3, [sp, #0x0+0x4]
	lsl		r3, r3, #0x10
	asr		r3, r3, #0x10
	bl		sub_08310b34
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x31ED9A, 0xBF6
	thumb_func_end sub_0831ed84

	thumb_func_start sub_0831f990
sub_0831f990:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r0, _0831f9e4
	mov		r1, #0x0
	strb	r1, [r0, #0x2]
	mov		r2, #0xbf
	lsl		r2, r2, #0x4
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	add		r2, #0x2
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	sub		r2, #0xa
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	add		r2, #0x2
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	add		r2, #0x2
	add		r0, r4, r2
	str		r1, [r0, #0x0]
	add		r2, #0x8
	add		r0, r4, r2
	strh	r1, [r0, #0x0]
	ldr		r0, _0831f9e8
	ldr		r5, _0831f9ec
	add		r1, r5, #0x0
	mov		r2, #0x10
	bl		sub_083272c4
	add		r0, r4, #0x0
	bl		sub_08311948
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x6
	beq		_0831fa04
	cmp		r0, #0x6
	bgt		_0831f9f0
	cmp		r0, #0x0
	beq		_0831fa10
	b		_0831fa16

_0831f9e4:	.4byte 0x03006BA0
_0831f9e8:	.4byte 0x0202C95C
_0831f9ec:	.4byte 0x03002208

_0831f9f0:
	cmp		r0, #0xa
	beq		_0831fa0a
	cmp		r0, #0xc
	bne		_0831fa16
	mov		r1, #0x17
	strh	r1, [r5, #0xc]
	mov		r0, #0x18
	strh	r0, [r5, #0xe]
	strh	r1, [r5, #0x10]
	b		_0831fa16
_0831fa04:
	mov		r0, #0x17
	strh	r0, [r5, #0x2]
	b		_0831fa16
_0831fa0a:
	mov		r0, #0x18
	strh	r0, [r5, #0x2]
	b		_0831fa16
_0831fa10:
	mov		r0, #0x1b
	strh	r0, [r5, #0x0]
	strh	r0, [r5, #0xe]
_0831fa16:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0831f990

	thumb_func_start sub_0831fa1c
sub_0831fa1c:
	mov		r0, #0x0
	bx		lr
	thumb_func_end sub_0831fa1c

	thumb_func_start sub_0831fa20
sub_0831fa20:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0x10
	add		r6, r0, #0x0
	mov		r1, #0xf1
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	mov		r2, #0xe9
	lsl		r2, r2, #0x3
	add		r0, r6, r2
	ldrb	r0, [r0, #0x0]
	mov		r7, #0xf
	add		r1, r7, #0x0
	and		r1, r0
	str		r1, [sp, #0x0]
	add		r2, #0x6
	add		r0, r6, r2
	ldrh	r0, [r0, #0x0]
	mov		r7, #0xf0
	lsl		r7, r7, #0x4
	mov		r10, r7
	mov		r1, r10
	and		r1, r0
	mov		r10, r1
	add		r0, r6, r2
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831fa68
	b		_0832010e
_0831fa68:
	mov		r2, r8
	add		r2, #0x78
	str		r2, [sp, #0x4]
	ldr		r7, [sp, #0x0]
	cmp		r7, #0x4
	bgt		_0831fb40
	cmp		r7, #0x3
	blt		_0831fb1a
	mov		r0, r8
	ldr		r1, [r0, #0x48]
	mov		r0, #0x28
	and		r0, r1
	cmp		r0, #0x28
	bne		_0831fb1a
	mov		r2, #0x0
	mov		r9, r2
	mov		r0, #0x9
	neg		r0, r0
	and		r1, r0
	mov		r7, r8
	str		r1, [r7, #0x48]
	ldr		r5, _0831fae8
	ldr		r0, _0831faec
	ldrh	r1, [r0, #0x2c]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_08326664
	mov		r4, #0x5
	ldr		r0, _0831faf0
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r4, r0
	bge		_0831fac8
	add		r7, r0, #0x0
	add		r5, #0x3c
_0831fab6:
	cmp		r4, #0x8
	beq		_0831fac0
	ldr		r0, [r5, #0x0]
	bl		sub_08326664
_0831fac0:
	add		r5, #0xc
	add		r4, #0x1
	cmp		r4, r7
	blt		_0831fab6
_0831fac8:
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	cmp		r10, r0
	bne		_0831fb0a
	mov		r0, r8
	add		r0, #0xba
	ldrh	r0, [r0, #0x0]
	lsr		r1, r0, #0x1
	ldr		r2, _0831faf4
	add		r0, r6, r2
	ldrb	r0, [r0, #0x0]
	cmp		r1, #0x0
	bne		_0831fafc
	ldr		r7, _0831faf8
	b		_0831fb08

.incbin "base.gba", 0x31FAE6, 0x2

_0831fae8:	.4byte 0x0202E890
_0831faec:	.4byte 0x0202E8F0
_0831faf0:	.4byte 0x00000008
_0831faf4:	.4byte 0x00000764
_0831faf8:	.4byte 0x0202C97C

_0831fafc:
	sub		r0, #0x1
	ldr		r2, _0831fb38
	mov		r9, r2
	cmp		r1, r0
	bge		_0831fb0a
	ldr		r7, _0831fb3c
_0831fb08:
	mov		r9, r7
_0831fb0a:
	mov		r0, r9
	cmp		r0, #0x0
	beq		_0831fb1a
	mov		r0, #0x0
	mov		r1, r9
	mov		r2, #0x0
	bl		sub_0830fbb8
_0831fb1a:
	ldr		r1, [sp, #0x0]
	cmp		r1, #0x4
	bgt		_0831fb40
	cmp		r1, #0x2
	blt		_0831fb2c
	mov		r0, r8
	add		r1, r6, #0x0
	bl		sub_08319de8
_0831fb2c:
	ldr		r2, [sp, #0x0]
	cmp		r2, #0x3
	bge		_0831fb54
	cmp		r2, #0x2
	beq		_0831fb4a
	b		_0831fe38

_0831fb38:	.4byte 0x0202C9DC
_0831fb3c:	.4byte 0x0202C99C

_0831fb40:
	ldr		r7, [sp, #0x0]
	cmp		r7, #0x5
	bne		_0831fb48
	b		_0831fe14
_0831fb48:
	b		_0831fe38
_0831fb4a:
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	cmp		r10, r0
	bne		_0831fb54
	b		_0831fe38
_0831fb54:
	mov		r0, #0x80
	lsl		r0, r0, #0x4
	cmp		r10, r0
	bne		_0831fb9c
	mov		r1, r8
	ldr		r0, [r1, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831fb9c
	ldr		r2, _0831fb90
	add		r1, r6, r2
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	bne		_0831fb74
	b		_0831fe38
_0831fb74:
	ldr		r3, _0831fb94
	ldr		r2, _0831fb98
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, [r2, #0x8]
	bl		sub_08326580
	b		_0831fe38

_0831fb90:	.4byte 0x00000BE8
_0831fb94:	.4byte 0x0202E890
_0831fb98:	.4byte 0x0202E8F0

_0831fb9c:
	mov		r7, #0xf3
	lsl		r7, r7, #0x3
	add		r0, r6, r7
	mov		r5, #0x0
	ldr		r1, [r0, #0x18]
	str		r1, [sp, #0xC]
	ldr		r0, [r0, #0x1c]
	mov		r10, r0
	mov		r3, #0x80
	lsl		r3, r3, #0x7
	mov		r4, #0x0
	ldr		r2, _0831fd18
	add		r0, r6, r2
	ldrb	r0, [r0, #0x0]
	cmp		r5, r0
	bge		_0831fc12
_0831fbbc:
	lsl		r1, r4, #0x18
	lsr		r1, r1, #0x18
	add		r0, r6, #0x0
	str		r3, [sp, #0x8]
	bl		sub_0831eca8
	add		r2, r0, #0x0
	ldr		r3, [sp, #0x8]
	cmp		r2, r8
	beq		_0831fc06
	ldr		r0, [r2, #0x0]
	ldr		r7, [sp, #0xC]
	sub		r1, r7, r0
	cmp		r1, #0x0
	bge		_0831fbde
	ldr		r0, _0831fd1c
	add		r1, r1, r0
_0831fbde:
	asr		r1, r1, #0x10
	ldr		r0, [r2, #0x4]
	mov		r7, r10
	sub		r0, r7, r0
	cmp		r0, #0x0
	bge		_0831fbee
	ldr		r7, _0831fd1c
	add		r0, r0, r7
_0831fbee:
	asr		r0, r0, #0x10
	add		r7, r1, #0x0
	mul		r7, r1
	add		r1, r7, #0x0
	add		r7, r0, #0x0
	mul		r7, r0
	add		r0, r7, #0x0
	add		r0, r1, r0
	cmp		r0, r3
	bge		_0831fc06
	add		r5, r2, #0x0
	add		r3, r0, #0x0
_0831fc06:
	add		r4, #0x1
	ldr		r1, _0831fd18
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	blt		_0831fbbc
_0831fc12:
	cmp		r5, #0x0
	bne		_0831fc18
	b		_0831fdcc
_0831fc18:
	ldr		r2, _0831fd20
	add		r1, r6, r2
	ldr		r0, [r1, #0x0]
	cmp		r5, r0
	beq		_0831fc2c
	str		r5, [r1, #0x0]
	ldr		r7, _0831fd24
	add		r1, r6, r7
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
_0831fc2c:
	ldr		r0, _0831fd28
	add		r0, r0, r6
	mov		r9, r0
	mov		r0, #0x16
	mov		r1, r9
	strh	r0, [r1, #0x0]
	ldr		r0, [r5, #0x0]
	ldr		r2, [sp, #0xC]
	sub		r1, r2, r0
	cmp		r1, #0x0
	bge		_0831fc46
	ldr		r7, _0831fd1c
	add		r1, r1, r7
_0831fc46:
	asr		r1, r1, #0x10
	ldr		r0, [r5, #0x4]
	mov		r2, r10
	sub		r0, r2, r0
	cmp		r0, #0x0
	bge		_0831fc56
	ldr		r7, _0831fd1c
	add		r0, r0, r7
_0831fc56:
	asr		r0, r0, #0x10
	add		r2, r1, #0x0
	mul		r2, r1
	add		r1, r2, #0x0
	add		r7, r0, #0x0
	mul		r7, r0
	add		r0, r7, #0x0
	add		r7, r1, r0
	ldr		r0, _0831fd2c
	cmp		r7, r0
	ble		_0831fc6e
	b		_0831fd90
_0831fc6e:
	add		r0, r5, #0x0
	bl		sub_08319ca8
	add		r4, r0, #0x0
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_0831fa1c
	add		r4, r4, r0
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	mov		r10, r4
	add		r0, r5, #0x0
	mov		r1, r10
	bl		sub_08319da8
	add		r3, r0, #0x0
	mov		r0, #0x80
	lsl		r0, r0, #0x7
	sub		r1, r0, r7
	add		r0, r1, #0x0
	cmp		r1, #0x0
	bge		_0831fca0
	ldr		r2, _0831fd30
	add		r0, r1, r2
_0831fca0:
	asr		r0, r0, #0xb
	lsl		r2, r0, #0x3
	add		r0, r1, #0x0
	cmp		r0, #0x0
	bge		_0831fcac
	add		r0, #0x7f
_0831fcac:
	asr		r1, r0, #0x7
	lsl		r0, r3, #0x10
	lsr		r0, r0, #0x10
	mul		r0, r1
	cmp		r0, #0x0
	bge		_0831fcba
	add		r0, #0xff
_0831fcba:
	asr		r0, r0, #0x8
	add		r0, r2, r0
	lsl		r0, r0, #0x10
	lsr		r7, r0, #0x10
	ldr		r1, _0831fd24
	add		r0, r6, r1
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	bne		_0831fd3c
	mov		r2, r9
	ldrh	r4, [r2, #0x0]
	add		r0, r4, #0x0
	bl		sub_08325e94
	ldr		r5, _0831fd34
	ldr		r0, _0831fd38
	lsl		r4, r4, #0x3
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_08326084
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r7, #0x0
	bl		sub_08326df4
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r2, r10
	mov		r1, #0x1
	bl		sub_08326e5c
	b		_0831fd78

_0831fd18:	.4byte 0x00000764
_0831fd1c:	.4byte 0x0000FFFF
_0831fd20:	.4byte 0x00000BEC
_0831fd24:	.4byte 0x00000BEA
_0831fd28:	.4byte 0x00000BE8
_0831fd2c:	.4byte 0x00003FFF
_0831fd30:	.4byte 0x000007FF
_0831fd34:	.4byte 0x0202E890
_0831fd38:	.4byte 0x0202E8F0

_0831fd3c:
	mov		r1, r9
	ldrh	r0, [r1, #0x0]
	ldr		r5, _0831fd84
	ldr		r4, _0831fd88
	lsl		r0, r0, #0x3
	add		r0, r0, r4
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r1, #0x1
	add		r2, r7, #0x0
	bl		sub_08326df4
	mov		r2, r9
	ldrh	r0, [r2, #0x0]
	lsl		r0, r0, #0x3
	add		r0, r0, r4
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	mov		r2, r10
	mov		r1, #0x1
	bl		sub_08326e5c
_0831fd78:
	ldr		r7, _0831fd8c
	add		r1, r6, r7
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	b		_0831fe38

.incbin "base.gba", 0x31FD82, 0x2

_0831fd84:	.4byte 0x0202E890
_0831fd88:	.4byte 0x0202E8F0
_0831fd8c:	.4byte 0x00000BEA

_0831fd90:
	ldr		r0, _0831fdc0
	add		r4, r6, r0
	ldrh	r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_0831fdb8
	mov		r1, r9
	ldrh	r0, [r1, #0x0]
	ldr		r3, _0831fdc4
	ldr		r2, _0831fdc8
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, [r2, #0x8]
	bl		sub_08326580
_0831fdb8:
	mov		r0, #0x0
	strh	r0, [r4, #0x0]
	b		_0831fe38

.incbin "base.gba", 0x31FDBE, 0x2

_0831fdc0:	.4byte 0x00000BEA
_0831fdc4:	.4byte 0x0202E890
_0831fdc8:	.4byte 0x0202E8F0

_0831fdcc:
	ldr		r2, _0831fe04
	add		r0, r6, r2
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_0831fdfa
	ldr		r7, _0831fe08
	add		r1, r6, r7
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0831fdfa
	ldr		r3, _0831fe0c
	ldr		r2, _0831fe10
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, [r2, #0x8]
	bl		sub_08326580
_0831fdfa:
	ldr		r0, _0831fe04
	add		r1, r6, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	b		_0831fe38

_0831fe04:	.4byte 0x00000BEA
_0831fe08:	.4byte 0x00000BE8
_0831fe0c:	.4byte 0x0202E890
_0831fe10:	.4byte 0x0202E8F0

_0831fe14:
	ldr		r2, _0831ff20
	add		r1, r6, r2
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_0831fe38
	ldr		r3, _0831ff24
	ldr		r2, _0831ff28
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, [r2, #0x8]
	bl		sub_08326580
_0831fe38:
	ldr		r7, [sp, #0x4]
	ldrb	r0, [r7, #0x0]
	cmp		r0, #0x4
	bne		_0831fe42
	b		_0832008c
_0831fe42:
	mov		r1, #0xe9
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831fe54
	b		_08320028
_0831fe54:
	mov		r2, r8
	ldr		r1, [r2, #0x48]
	mov		r0, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831fe62
	b		_08320028
_0831fe62:
	mov		r0, r8
	add		r0, #0xb4
	ldrh	r3, [r0, #0x0]
	ldr		r0, _0831ff2c
	and		r0, r3
	cmp		r0, #0x0
	beq		_0831fe72
	b		_08320028
_0831fe72:
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	and		r1, r0
	cmp		r1, #0x0
	beq		_0831fe96
	mov		r0, r8
	add		r0, #0xbc
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	blt		_0831fe88
	b		_08320028
_0831fe88:
	mov		r0, r8
	add		r0, #0x88
	mov		r7, #0x0
	ldrsh	r0, [r0, r7]
	cmp		r0, #0x0
	bne		_0831fe96
	b		_08320028
_0831fe96:
	mov		r0, r8
	add		r0, #0x7e
	ldrb	r2, [r0, #0x0]
	add		r0, r2, #0x0
	cmp		r0, #0xd
	bne		_0831fea4
	b		_08320028
_0831fea4:
	cmp		r0, #0x5
	bne		_0831feaa
	b		_08320028
_0831feaa:
	cmp		r0, #0x6
	bne		_0831feb0
	b		_08320028
_0831feb0:
	cmp		r0, #0x7
	bne		_0831feb6
	b		_08320028
_0831feb6:
	cmp		r0, #0x8
	bne		_0831febc
	b		_08320028
_0831febc:
	cmp		r0, #0xf
	bne		_0831fec2
	b		_08320028
_0831fec2:
	mov		r0, r8
	add		r0, #0xbc
	ldr		r1, [r0, #0x0]
	cmp		r1, #0x0
	beq		_0831feda
	sub		r0, #0x37
	ldrb	r0, [r0, #0x0]
	sub		r0, #0x50
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0xf
	bls		_0831ff00
_0831feda:
	sub		r0, r2, #0x1
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x3
	bhi		_0831feec
	mov		r0, #0x24
	and		r0, r3
	cmp		r0, #0x0
	bne		_0831ff00
_0831feec:
	cmp		r1, #0x0
	blt		_0831fef2
	b		_08320028
_0831fef2:
	mov		r0, r8
	add		r0, #0x88
	mov		r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp		r0, #0x0
	bne		_0831ff00
	b		_08320028
_0831ff00:
	mov		r0, r8
	add		r0, #0x85
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	beq		_0831ff34
	ldr		r0, _0831ff30
	lsr		r1, r1, #0x1
	mov		r2, #0xf
	and		r1, r2
	lsl		r1, r1, #0x1
	add		r1, r1, r0
	ldrh	r0, [r1, #0x0]
	b		_0831ff36

.incbin "base.gba", 0x31FF1E, 0x2

_0831ff20:	.4byte 0x00000BE8
_0831ff24:	.4byte 0x0202E890
_0831ff28:	.4byte 0x0202E8F0
_0831ff2c:	.4byte 0x00008001
_0831ff30:	.4byte 0x03002208

_0831ff34:
	mov		r0, #0x0
_0831ff36:
	add		r4, r0, #0x0
	mov		r2, #0xbf
	lsl		r2, r2, #0x4
	add		r5, r6, r2
	ldrh	r7, [r5, #0x0]
	cmp		r4, r7
	beq		_0831ffbc
	cmp		r4, #0x0
	beq		_0831ff4e
	bl		sub_08325e94
	b		_0831ff68
_0831ff4e:
	ldr		r3, _0831ffac
	ldr		r2, _0831ffb0
	add		r0, r2, #0x0
	add		r0, #0xb8
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, [r2, #0x8]
	bl		sub_08326580
_0831ff68:
	mov		r0, #0xbf
	lsl		r0, r0, #0x4
	add		r5, r6, r0
	strh	r4, [r5, #0x0]
	mov		r2, r8
	ldr		r1, [r2, #0x4]
	ldr		r0, [r2, #0x0]
	cmp		r0, #0x0
	bge		_0831ff7e
	ldr		r7, _0831ffb4
	add		r0, r0, r7
_0831ff7e:
	asr		r0, r0, #0x12
	mov		r3, #0x3f
	and		r0, r3
	lsl		r2, r0, #0xa
	add		r0, r1, #0x0
	cmp		r0, #0x0
	bge		_0831ff90
	ldr		r1, _0831ffb4
	add		r0, r0, r1
_0831ff90:
	asr		r0, r0, #0x12
	and		r0, r3
	lsl		r1, r0, #0x4
	orr		r1, r2
	ldr		r7, _0831ffb8
	add		r2, r6, r7
	strh	r1, [r2, #0x0]
	ldrh	r0, [r5, #0x0]
	cmp		r0, #0x1d
	bne		_08320002
	mov		r0, #0x6
	orr		r1, r0
	strh	r1, [r2, #0x0]
	b		_08320002

_0831ffac:	.4byte 0x0202E890
_0831ffb0:	.4byte 0x0202E8F0
_0831ffb4:	.4byte 0x0003FFFF
_0831ffb8:	.4byte 0x00000BF2

_0831ffbc:
	ldrh	r0, [r5, #0x0]
	cmp		r0, #0x1d
	bne		_08320002
	mov		r0, r8
	ldr		r1, [r0, #0x4]
	ldr		r0, [r0, #0x0]
	cmp		r0, #0x0
	bge		_0831ffd0
	ldr		r2, _0832001c
	add		r0, r0, r2
_0831ffd0:
	asr		r0, r0, #0x12
	mov		r3, #0x3f
	and		r0, r3
	lsl		r2, r0, #0xa
	add		r0, r1, #0x0
	cmp		r0, #0x0
	bge		_0831ffe2
	ldr		r7, _0832001c
	add		r0, r0, r7
_0831ffe2:
	asr		r0, r0, #0x12
	and		r0, r3
	lsl		r1, r0, #0x4
	orr		r1, r2
	ldr		r2, _08320020
	add		r0, r6, r2
	ldrh	r3, [r0, #0x0]
	mov		r2, #0xf
	and		r2, r3
	cmp		r2, #0x0
	bne		_08320010
	ldr		r0, _08320024
	and		r0, r3
	cmp		r0, r1
	beq		_08320002
	strh	r2, [r5, #0x0]
_08320002:
	ldr		r7, _08320020
	add		r0, r6, r7
	ldrh	r1, [r0, #0x0]
	mov		r0, #0xf
	and		r0, r1
	cmp		r0, #0x0
	beq		_0832008c
_08320010:
	ldr		r0, _08320020
	add		r1, r6, r0
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	b		_0832008c

_0832001c:	.4byte 0x0003FFFF
_08320020:	.4byte 0x00000BF2
_08320024:	.4byte 0x0000FFF0

_08320028:
	mov		r1, #0xbf
	lsl		r1, r1, #0x4
	add		r2, r6, r1
	ldrh	r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_0832008c
	mov		r7, r8
	ldr		r0, [r7, #0x48]
	mov		r1, #0x80
	lsl		r1, r1, #0xb
	and		r0, r1
	cmp		r0, #0x0
	bne		_0832007c
	mov		r0, r8
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	bne		_0832007c
	ldrh	r0, [r2, #0x0]
	ldr		r3, _083200f0
	ldr		r2, _083200f4
	lsl		r0, r0, #0x3
	add		r0, r0, r2
	ldrh	r1, [r0, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r0, [r0, #0x0]
	ldr		r1, [r2, #0x8]
	bl		sub_08326580
	mov		r2, #0xcd
	lsl		r2, r2, #0x1
	add		r2, r8
	ldrb	r1, [r2, #0x0]
	mov		r0, #0xef
	and		r0, r1
	strb	r0, [r2, #0x0]
_0832007c:
	mov		r1, #0xbf
	lsl		r1, r1, #0x4
	add		r0, r6, r1
	mov		r1, #0x0
	strh	r1, [r0, #0x0]
	ldr		r2, _083200f8
	add		r0, r6, r2
	strh	r1, [r0, #0x0]
_0832008c:
	mov		r0, r8
	add		r1, r6, #0x0
	bl		sub_08319fa4
	mov		r0, #0xc0
	lsl		r0, r0, #0x1
	add		r0, r8
	ldr		r2, [r0, #0x0]
	mov		r0, #0xc2
	lsl		r0, r0, #0x1
	add		r0, r8
	ldr		r1, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0x8
	and		r1, r0
	ldr		r7, [sp, #0x0]
	cmp		r7, #0x3
	bne		_08320100
	mov		r0, #0xc0
	lsl		r0, r0, #0x8
	cmp		r1, r0
	beq		_083200c0
	mov		r0, #0xe0
	lsl		r0, r0, #0x8
	cmp		r1, r0
	bne		_08320100
_083200c0:
	mov		r0, #0x22
	ldrsh	r1, [r2, r0]
	mov		r0, #0x18
	neg		r0, r0
	cmp		r1, r0
	ble		_08320100
	ldr		r1, _083200fc
	add		r4, r6, r1
	ldrh	r0, [r4, #0x0]
	cmp		r0, #0x0
	bne		_083200dc
	mov		r0, #0x12
	bl		sub_08325e94
_083200dc:
	ldrh	r0, [r4, #0x0]
	add		r0, #0x1
	strh	r0, [r4, #0x0]
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
	cmp		r0, #0x15
	bls		_08320108
	mov		r0, #0x0
	strh	r0, [r4, #0x0]
	b		_08320108

_083200f0:	.4byte 0x0202E890
_083200f4:	.4byte 0x0202E8F0
_083200f8:	.4byte 0x00000BF2
_083200fc:	.4byte 0x00000BF4

_08320100:
	ldr		r2, _08320120
	add		r1, r6, r2
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
_08320108:
	add		r0, r6, #0x0
	bl		sub_0831a15c
_0832010e:
	add		sp, #0x10
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x32011E, 0x2

_08320120:	.4byte 0x00000BF4
	thumb_func_end sub_0831fa20

	thumb_func_start sub_08320124
sub_08320124:
	push	{ r4, lr }
	add		r4, r1, #0x0
	mov		r1, #0xf3
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	add		r3, r0, #0x0
	ldr		r1, [r4, #0x0]
	ldr		r0, [r3, #0x18]
	sub		r1, r1, r0
	cmp		r1, #0x0
	bge		_0832013e
	ldr		r2, _08320168
	add		r1, r1, r2
_0832013e:
	asr		r2, r1, #0x10
	ldr		r1, [r4, #0x4]
	ldr		r0, [r3, #0x1c]
	sub		r0, r1, r0
	cmp		r0, #0x0
	bge		_0832014e
	ldr		r1, _08320168
	add		r0, r0, r1
_0832014e:
	asr		r0, r0, #0x10
	add		r1, r2, #0x0
	mul		r1, r2
	add		r2, r0, #0x0
	mul		r2, r0
	add		r0, r2, #0x0
	add		r1, r1, r0
	ldr		r0, _0832016c
	cmp		r1, r0
	ble		_08320170
	mov		r0, #0x0
	b		_08320188

.incbin "base.gba", 0x320166, 0x2

_08320168:	.4byte 0x0000FFFF
_0832016c:	.4byte 0x0003FFFF

_08320170:
	add		r0, r1, #0x0
	cmp		r0, #0x0
	bge		_0832017a
	ldr		r1, _08320190
	add		r0, r0, r1
_0832017a:
	asr		r1, r0, #0xa
	mov		r2, #0x80
	lsl		r2, r2, #0x1
	add		r0, r2, #0x0
	sub		r0, r0, r1
	lsl		r0, r0, #0x10
	lsr		r0, r0, #0x10
_08320188:
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x32018E, 0x2

_08320190:	.4byte 0x000003FF
	thumb_func_end sub_08320124

	thumb_func_start sub_08320194
sub_08320194:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	lsl		r0, r0, #0x10
	lsr		r6, r0, #0x10
	mov		r4, #0x0
	lsl		r0, r6, #0x1
	mov		r8, r0
	ldr		r7, _0832020c
	ldr		r0, _08320210
	mov		r9, r0
_083201ac:
	add		r4, #0x1
	mov		r0, #0x0
	mov		r1, #0xe
	add		r2, r4, #0x0
	bl		sub_0830e6e4
	add		r2, r0, #0x0
	add		r5, r4, #0x0
	mov		r0, r8
	add		r0, r9
	ldrh	r4, [r0, #0x0]
	mov		r3, #0x1
_083201c4:
	ldrh	r1, [r2, #0x0]
	add		r0, r7, #0x0
	and		r0, r1
	orr		r0, r4
	strh	r0, [r2, #0x0]
	add		r2, #0x2
	sub		r3, #0x1
	cmp		r3, #0x0
	bge		_083201c4
	add		r4, r5, #0x0
	cmp		r4, #0x1
	ble		_083201ac
	mov		r0, #0x1
	bl		sub_0830e730
	cmp		r6, #0xf
	bne		_083201e8
	mov		r6, #0xb
_083201e8:
	cmp		r6, #0x10
	bne		_083201ee
	mov		r6, #0xa
_083201ee:
	bl		sub_08310000
	lsl		r1, r6, #0x7
	ldr		r2, _08320214
	add		r1, r1, r2
	ldr		r2, _08320218
	ldr		r3, _0832021c
	bl		sub_0830fec4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_0832020c:	.4byte 0x00000FFF
_08320210:	.4byte 0x0202C9F4
_08320214:	.4byte 0x02026D1C
_08320218:	.4byte 0x06000E00
_0832021c:	.4byte 0x80000040
	thumb_func_end sub_08320194

	thumb_func_start sub_08320220
sub_08320220:
	push	{ lr }
	lsl		r0, r0, #0x10
	lsr		r1, r0, #0x10
	add		r2, r1, #0x0
	ldr		r0, _0832025c
	cmp		r1, r0
	bne		_08320230
	b		_08320388
_08320230:
	cmp		r1, r0
	bgt		_083202ac
	sub		r0, #0x7
	cmp		r1, r0
	bne		_0832023c
	b		_08320368
_0832023c:
	cmp		r1, r0
	bgt		_08320278
	sub		r0, #0x3
	cmp		r1, r0
	bne		_08320248
	b		_08320370
_08320248:
	cmp		r1, r0
	bgt		_08320260
	cmp		r1, #0x2
	bne		_08320252
	b		_08320388
_08320252:
	sub		r0, #0x1
	cmp		r1, r0
	bne		_0832025a
	b		_08320378
_0832025a:
	b		_083203a0

_0832025c:	.4byte 0x0000100B

_08320260:
	ldr		r0, _08320274
	cmp		r1, r0
	bne		_08320268
	b		_08320390
_08320268:
	add		r0, #0x1
	cmp		r1, r0
	bne		_08320270
	b		_08320398
_08320270:
	b		_083203a0

.incbin "base.gba", 0x320272, 0x2

_08320274:	.4byte 0x00001002

_08320278:
	ldr		r0, _08320290
	cmp		r1, r0
	beq		_08320350
	cmp		r1, r0
	bgt		_08320294
	sub		r0, #0x2
	cmp		r1, r0
	beq		_08320330
	add		r0, #0x1
	cmp		r1, r0
	beq		_08320360
	b		_083203a0

_08320290:	.4byte 0x00001007

_08320294:
	ldr		r0, _083202a8
	cmp		r1, r0
	beq		_08320358
	cmp		r1, r0
	bgt		_08320340
	mov		r0, #0x4
	bl		sub_08320194
	b		_083203a6

.incbin "base.gba", 0x3202A6, 0x2

_083202a8:	.4byte 0x00001009

_083202ac:
	ldr		r0, _083202d0
	cmp		r1, r0
	beq		_08320390
	cmp		r1, r0
	bgt		_083202f0
	ldr		r0, _083202d4
	cmp		r1, r0
	beq		_08320358
	cmp		r1, r0
	bgt		_083202d8
	sub		r0, #0x2
	cmp		r1, r0
	beq		_08320338
	add		r0, #0x1
	cmp		r1, r0
	beq		_08320380
	b		_083203a0

.incbin "base.gba", 0x3202CE, 0x2

_083202d0:	.4byte 0x00002002
_083202d4:	.4byte 0x0000100E

_083202d8:
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	cmp		r1, r0
	beq		_08320378
	cmp		r1, r0
	bgt		_08320370
	ldr		r0, _083202ec
	cmp		r1, r0
	beq		_08320348
	b		_083203a0

_083202ec:	.4byte 0x0000100F

_083202f0:
	ldr		r0, _08320308
	cmp		r1, r0
	beq		_08320330
	cmp		r1, r0
	bgt		_0832030c
	sub		r0, #0x2
	cmp		r1, r0
	beq		_08320398
	add		r0, #0x1
	cmp		r1, r0
	beq		_08320368
	b		_083203a0

_08320308:	.4byte 0x00002005

_0832030c:
	ldr		r0, _08320320
	cmp		r1, r0
	beq		_08320340
	cmp		r1, r0
	bgt		_08320324
	sub		r0, #0x3
	cmp		r1, r0
	beq		_08320350
	b		_083203a0

.incbin "base.gba", 0x32031E, 0x2

_08320320:	.4byte 0x0000200A

_08320324:
	ldr		r0, _0832032c
	cmp		r2, r0
	beq		_08320338
	b		_083203a0

_0832032c:	.4byte 0x0000200C

_08320330:
	mov		r0, #0x1
	bl		sub_08320194
	b		_083203a6
_08320338:
	mov		r0, #0x2
	bl		sub_08320194
	b		_083203a6
_08320340:
	mov		r0, #0x3
	bl		sub_08320194
	b		_083203a6
_08320348:
	mov		r0, #0x5
	bl		sub_08320194
	b		_083203a6
_08320350:
	mov		r0, #0x6
	bl		sub_08320194
	b		_083203a6
_08320358:
	mov		r0, #0x7
	bl		sub_08320194
	b		_083203a6
_08320360:
	mov		r0, #0x8
	bl		sub_08320194
	b		_083203a6
_08320368:
	mov		r0, #0x9
	bl		sub_08320194
	b		_083203a6
_08320370:
	mov		r0, #0xa
	bl		sub_08320194
	b		_083203a6
_08320378:
	mov		r0, #0xb
	bl		sub_08320194
	b		_083203a6
_08320380:
	mov		r0, #0xc
	bl		sub_08320194
	b		_083203a6
_08320388:
	mov		r0, #0xd
	bl		sub_08320194
	b		_083203a6
_08320390:
	mov		r0, #0xf
	bl		sub_08320194
	b		_083203a6
_08320398:
	mov		r0, #0x10
	bl		sub_08320194
	b		_083203a6
_083203a0:
	mov		r0, #0x0
	bl		sub_08320194
_083203a6:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3203AA, 0xE
	thumb_func_end sub_08320220

	thumb_func_start sub_083203b8
sub_083203b8:
	push	{ lr }
	ldr		r1, _083203e0
	ldr		r0, _083203e4
	add		r2, r1, r0
	mov		r0, #0x0
	strh	r0, [r2, #0x0]
	ldr		r0, _083203e8
	add		r2, r1, r0
	ldr		r0, _083203ec
	strh	r0, [r2, #0x0]
	ldr		r0, _083203f0
	add		r1, r1, r0
	mov		r0, #0x1
	neg		r0, r0
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	bl		sub_08320194
	pop		{ r0 }
	bx		r0

_083203e0:	.4byte 0x030031D0
_083203e4:	.4byte 0x00000C06
_083203e8:	.4byte 0x00000C02
_083203ec:	.4byte 0x0000FFFF
_083203f0:	.4byte 0x00000C04
	thumb_func_end sub_083203b8

	thumb_func_start sub_083203f4
sub_083203f4:
	push	{ r4, r5, lr }
	ldr		r2, _0832041c
	ldr		r1, _08320420
	add		r3, r2, r1
	ldrh	r4, [r3, #0x0]
	ldr		r5, _08320424
	add		r1, r2, r5
	strh	r4, [r1, #0x0]
	strh	r0, [r3, #0x0]
	ldr		r0, _08320428
	add		r2, r2, r0
	mov		r0, #0xa0
	strh	r0, [r2, #0x0]
	ldrh	r0, [r3, #0x0]
	bl		sub_08320220
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x32041A, 0x2

_0832041c:	.4byte 0x030031D0
_08320420:	.4byte 0x00000C02
_08320424:	.4byte 0x00000C04
_08320428:	.4byte 0x00000C06
	thumb_func_end sub_083203f4

	thumb_func_start sub_0832042c
sub_0832042c:
	push	{ r4, lr }
	ldr		r3, _08320450
	ldr		r4, _08320454
	add		r2, r3, r4
	strh	r0, [r2, #0x0]
	ldr		r0, _08320458
	add		r2, r3, r0
	strh	r1, [r2, #0x0]
	add		r4, #0x2
	add		r3, r3, r4
	mov		r0, #0xa0
	strh	r0, [r3, #0x0]
	ldrh	r0, [r2, #0x0]
	bl		sub_08320220
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08320450:	.4byte 0x030031D0
_08320454:	.4byte 0x00000C04
_08320458:	.4byte 0x00000C02
	thumb_func_end sub_0832042c

	thumb_func_start sub_0832045c
sub_0832045c:
	push	{ lr }
	ldr		r0, _08320474
	ldr		r1, _08320478
	add		r0, r0, r1
	ldrh	r1, [r0, #0x0]
	ldr		r0, _0832047c
	cmp		r1, r0
	bne		_08320480
	add		r0, #0x7
	bl		sub_083203f4
	b		_08320498

_08320474:	.4byte 0x030031D0
_08320478:	.4byte 0x00000C02
_0832047c:	.4byte 0x00001008

_08320480:
	ldr		r0, _08320490
	cmp		r1, r0
	bne		_08320494
	sub		r0, #0x8
	bl		sub_083203f4
	b		_08320498

.incbin "base.gba", 0x32048E, 0x2

_08320490:	.4byte 0x0000100F

_08320494:
	bl		sub_083203b8
_08320498:
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0832045c

	thumb_func_start sub_0832049c
sub_0832049c:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	mov		r1, #0xf1
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	ldr		r4, [r0, #0x0]
	bl		sub_083203b8
	mov		r1, #0xbd
	lsl		r1, r1, #0x1
	add		r0, r4, r1
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_083204c4
	bl		sub_083203f4
	ldr		r0, _083204cc
	add		r1, r5, r0
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
_083204c4:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3204CA, 0x2

_083204cc:	.4byte 0x00000BE2
	thumb_func_end sub_0832049c

	thumb_func_start sub_083204d0
sub_083204d0:
	push	{ r4, lr }
	ldr		r3, _08320560
	add		r4, r3, #0x0
	add		r4, #0x24
	mov		r1, #0xf1
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_083204ec
	b		_0832063a
_083204ec:
	ldr		r1, _08320564
	add		r0, r3, r1
	ldrh	r1, [r0, #0x0]
	add		r2, r1, #0x0
	cmp		r2, #0x0
	bne		_083204fa
	b		_08320628
_083204fa:
	mov		r0, #0x7
	and		r0, r1
	cmp		r0, #0x0
	beq		_08320504
	b		_08320606
_08320504:
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_083205d0
	ldr		r1, _08320568
	add		r0, r3, r1
	ldrh	r1, [r0, #0x0]
	ldr		r0, _0832056c
	cmp		r1, r0
	beq		_0832052e
	add		r0, #0x7
	cmp		r1, r0
	beq		_0832052e
	sub		r0, #0x4
	cmp		r1, r0
	beq		_0832053c
	ldr		r1, _08320570
	add		r0, r3, r1
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_083205c8
_0832052e:
	mov		r1, #0xbe
	lsl		r1, r1, #0x4
	add		r0, r4, r1
	ldrh	r1, [r0, #0x0]
	ldr		r0, _08320574
	cmp		r1, r0
	bne		_0832057c
_0832053c:
	ldr		r1, _08320578
	add		r0, r4, r1
	ldrh	r2, [r0, #0x0]
	cmp		r2, #0x2
	beq		_08320558
	mov		r1, #0xbe
	lsl		r1, r1, #0x4
	add		r0, r4, r1
	ldrh	r1, [r0, #0x0]
	ldr		r0, _08320574
	cmp		r1, r0
	bne		_0832057c
	cmp		r2, r1
	bne		_0832057c
_08320558:
	mov		r0, #0x0
	bl		sub_08320194
	b		_08320588

_08320560:	.4byte 0x030031D0
_08320564:	.4byte 0x00000C06
_08320568:	.4byte 0x00000C04
_0832056c:	.4byte 0x00001008
_08320570:	.4byte 0x00000C02
_08320574:	.4byte 0x0000100B
_08320578:	.4byte 0x00000BDE

_0832057c:
	mov		r1, #0xbe
	lsl		r1, r1, #0x4
	add		r0, r4, r1
	ldrh	r0, [r0, #0x0]
	bl		sub_08320220
_08320588:
	mov		r1, #0xbe
	lsl		r1, r1, #0x4
	add		r0, r4, r1
	ldrh	r1, [r0, #0x0]
	ldr		r0, _083205a8
	cmp		r1, r0
	bne		_083205b0
	ldr		r1, _083205ac
	add		r0, r4, r1
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x0
	beq		_083205b0
	mov		r0, #0x2d
	bl		sub_08325e94
	b		_08320606

_083205a8:	.4byte 0x0000100B
_083205ac:	.4byte 0x00000BDE

_083205b0:
	ldr		r1, _083205c4
	add		r0, r4, r1
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x2
	bne		_08320606
	mov		r0, #0x2e
	bl		sub_08325e94
	b		_08320606

.incbin "base.gba", 0x3205C2, 0x2

_083205c4:	.4byte 0x00000BDE

_083205c8:
	mov		r0, #0x0
	bl		sub_08320194
	b		_08320606
_083205d0:
	cmp		r2, #0x40
	bls		_083205fc
	ldr		r1, _08320614
	add		r0, r3, r1
	ldrh	r1, [r0, #0x0]
	ldr		r0, _08320618
	cmp		r1, r0
	beq		_083205fc
	add		r0, #0x7
	cmp		r1, r0
	beq		_083205fc
	sub		r0, #0x4
	cmp		r1, r0
	beq		_083205fc
	ldr		r1, _0832061c
	add		r0, r3, r1
	ldrh	r0, [r0, #0x0]
	cmp		r0, #0x2
	beq		_083205fc
	mov		r0, #0x11
	bl		sub_08325e94
_083205fc:
	ldr		r1, _08320620
	add		r0, r4, r1
	ldrh	r0, [r0, #0x0]
	bl		sub_08320220
_08320606:
	ldr		r0, _08320624
	add		r1, r4, r0
	ldrh	r0, [r1, #0x0]
	sub		r0, #0x1
	strh	r0, [r1, #0x0]
	b		_0832063a

.incbin "base.gba", 0x320612, 0x2

_08320614:	.4byte 0x00000C04
_08320618:	.4byte 0x00001008
_0832061c:	.4byte 0x00000C02
_08320620:	.4byte 0x00000BDE
_08320624:	.4byte 0x00000BE2

_08320628:
	ldr		r0, _08320640
	add		r1, r3, r0
	ldrh	r0, [r1, #0x0]
	cmp		r0, #0x2
	bne		_08320634
	strh	r2, [r1, #0x0]
_08320634:
	ldrh	r0, [r1, #0x0]
	bl		sub_08320220
_0832063a:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

_08320640:	.4byte 0x00000C02

.incbin "base.gba", 0x320644, 0x20
	thumb_func_end sub_083204d0

	thumb_func_start sub_08320664
sub_08320664:
	ldr		r1, _08320674
	ldrb	r2, [r1, #0xc]
	mov		r0, #0xfd
	and		r0, r2
	strb	r0, [r1, #0xc]
	ldr		r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x320672, 0x2

_08320674:	.4byte 0x03005EC0
	thumb_func_end sub_08320664

	thumb_func_start sub_08320678
sub_08320678:
	ldr		r0, _08320680
	ldr		r0, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x32067E, 0x2

_08320680:	.4byte 0x03005EC0
	thumb_func_end sub_08320678

	thumb_func_start sub_08320684
sub_08320684:
	push	{ r4, r5, lr }
	ldr		r4, _083206ac
	lsl		r2, r0, #0x1
	add		r2, r2, r4
	ldrh	r2, [r2, #0x0]
	mov		r5, #0xc0
	lsl		r5, r5, #0x8
	add		r3, r5, #0x0
	orr		r2, r3
	strh	r2, [r1, #0x0]
	add		r1, #0x40
	add		r0, #0xa
	lsl		r0, r0, #0x1
	add		r0, r0, r4
	ldrh	r0, [r0, #0x0]
	orr		r0, r3
	strh	r0, [r1, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_083206ac:	.4byte 0x0202CA16

.incbin "base.gba", 0x3206B0, 0x240
	thumb_func_end sub_08320684

	thumb_func_start sub_083208f0
sub_083208f0:
	push	{ r4, lr }
	ldr		r4, _08320920
	ldrb	r1, [r4, #0xc]
	mov		r0, #0xf7
	and		r0, r1
	strb	r0, [r4, #0xc]
	mov		r0, #0x78
	strb	r0, [r4, #0x8]
	ldr		r0, _08320924
	ldr		r1, _08320928
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	add		r1, r0, #0x0
	add		r1, #0xc6
	ldrh	r1, [r1, #0x0]
	lsr		r1, r1, #0x8
	sub		r1, #0x81
	bl		sub_083179e8
	strh	r0, [r4, #0xa]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x32091E, 0x2

_08320920:	.4byte 0x03005EC0
_08320924:	.4byte 0x030031D0
_08320928:	.4byte 0x000007AC

.incbin "base.gba", 0x32092C, 0x260
	thumb_func_end sub_083208f0

	thumb_func_start sub_08320b8c
sub_08320b8c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	mov		r2, #0x0
	ldr		r1, _08320c20
	add		r0, r5, r1
	ldr		r7, _08320c24
	ldr		r1, _08320c28
	mov		r8, r1
	ldrb	r1, [r0, #0x0]
	cmp		r2, r1
	bge		_08320bbc
	ldr		r6, _08320c2c
	mov		r4, #0xff
	add		r3, r0, #0x0
_08320bac:
	add		r1, r2, r6
	ldrb	r0, [r1, #0x0]
	orr		r0, r4
	strb	r0, [r1, #0x0]
	add		r2, #0x1
	ldrb	r0, [r3, #0x0]
	cmp		r2, r0
	blt		_08320bac
_08320bbc:
	mov		r0, #0x0
	str		r0, [r7, #0x0]
	mov		r1, r8
	str		r0, [r1, #0x0]
	mov		r2, #0xf1
	lsl		r2, r2, #0x3
	add		r0, r5, r2
	ldr		r0, [r0, #0x0]
	mov		r8, r0
	mov		r4, #0x0
	mov		r7, #0x0
	ldr		r1, _08320c20
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	bge		_08320c14
	ldr		r6, _08320c30
_08320bde:
	lsl		r0, r4, #0x2
	mov		r2, #0xed
	lsl		r2, r2, #0x3
	add		r1, r5, r2
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, r8
	beq		_08320c08
	bl		sub_08310000
	lsl		r1, r4, #0x6
	ldr		r2, _08320c34
	add		r1, r1, r2
	add		r2, r6, #0x0
	ldr		r3, _08320c38
	bl		sub_0830fec4
	add		r6, #0x40
	add		r7, #0x1
	cmp		r7, #0x2
	bgt		_08320c14
_08320c08:
	add		r4, #0x1
	ldr		r1, _08320c20
	add		r0, r5, r1
	ldrb	r0, [r0, #0x0]
	cmp		r4, r0
	blt		_08320bde
_08320c14:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x320C1E, 0x2

_08320c20:	.4byte 0x00000764
_08320c24:	.4byte 0x03002238
_08320c28:	.4byte 0x0300223C
_08320c2c:	.4byte 0x03002230
_08320c30:	.4byte 0x06012640
_08320c34:	.4byte 0x02026AFC
_08320c38:	.4byte 0x80000020

.incbin "base.gba", 0x320C3C, 0x334
	thumb_func_end sub_08320b8c

	thumb_func_start sub_08320f70
sub_08320f70:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	mov		r1, #0xe9
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x40
	and		r0, r1
	cmp		r0, #0x0
	bne		_08320fb4
	mov		r2, #0xf1
	lsl		r2, r2, #0x3
	add		r0, r4, r2
	ldr		r6, [r0, #0x0]
	mov		r5, #0x0
	b		_08320faa
_08320f90:
	lsl		r1, r5, #0x2
	mov		r2, #0xed
	lsl		r2, r2, #0x3
	add		r0, r4, r2
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		r1, #0x0
	cmp		r0, r6
	bne		_08320fa4
	mov		r1, #0x1
_08320fa4:
	bl		sub_08320fc0
	add		r5, #0x1
_08320faa:
	ldr		r1, _08320fbc
	add		r0, r4, r1
	ldrb	r0, [r0, #0x0]
	cmp		r5, r0
	blt		_08320f90
_08320fb4:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x320FBA, 0x2

_08320fbc:	.4byte 0x00000764
	thumb_func_end sub_08320f70

	thumb_func_start sub_08320fc0
sub_08320fc0:
	push	{ r4, r5, r6, lr }
	sub		sp, #0xc
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	ldr		r0, _08321070
	add		r6, r0, #0x0
	add		r6, #0x24
	add		r0, r6, #0x0
	bl		sub_08311a60
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	add		r0, #0x13
	ldr		r2, [r4, #0x0]
	asr		r2, r0
	add		r2, #0xa8
	lsl		r2, r2, #0x10
	ldr		r1, [r4, #0x4]
	asr		r1, r0
	add		r1, #0x58
	lsl		r1, r1, #0x10
	lsr		r2, r2, #0x10
	orr		r2, r1
	str		r2, [sp, #0x8]
	ldr		r3, _08321074
	cmp		r5, #0x0
	bne		_08320ff8
	ldr		r3, _08321078
_08320ff8:
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08321010
	add		r0, r4, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_08321012
_08321010:
	ldr		r3, _0832107c
_08321012:
	cmp		r5, #0x0
	beq		_08321024
	ldr		r0, _08321080
	ldr		r0, [r0, #0x0]
	mov		r1, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08321024
	ldr		r3, _08321084
_08321024:
	mov		r1, #0xf1
	lsl		r1, r1, #0x3
	add		r0, r6, r1
	ldr		r0, [r0, #0x0]
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x8
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08321048
	add		r0, r4, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08321066
_08321048:
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	str		r0, [sp, #0x4]
	add		r0, r3, #0x0
	add		r1, sp, #0x8
	mov		r2, #0x0
	mov		r3, #0x0
	bl		sub_0830f6a0
	cmp		r5, #0x0
	beq		_08321066
	ldr		r1, _08321080
	ldr		r0, [r1, #0x0]
	add		r0, #0x1
	str		r0, [r1, #0x0]
_08321066:
	add		sp, #0xc
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x32106E, 0x2

_08321070:	.4byte 0x030031D0
_08321074:	.4byte 0x0202CAAC
_08321078:	.4byte 0x0202CABC
_0832107c:	.4byte 0x0202CAC4
_08321080:	.4byte 0x03002228
_08321084:	.4byte 0x0202CAB4

.incbin "base.gba", 0x321088, 0x364
	thumb_func_end sub_08320fc0

	thumb_func_start sub_083213ec
sub_083213ec:
	push	{ r4, r5, r6, r7, lr }
	add		r3, r0, #0x0
	ldrh	r5, [r3, #0x0]
	add		r3, #0x2
	ldrh	r6, [r3, #0x0]
	add		r3, #0x2
	mov		r2, #0x0
	cmp		r2, r6
	bge		_0832142c
	mov		r0, #0x20
	sub		r0, r0, r5
	lsl		r7, r0, #0x1
_08321404:
	add		r4, r2, #0x1
	cmp		r5, #0x0
	beq		_08321424
	add		r0, r5, #0x0
_0832140c:
	ldrh	r2, [r3, #0x0]
	cmp		r2, #0x0
	beq		_0832141a
	strh	r2, [r1, #0x0]
	add		r3, #0x2
	add		r1, #0x2
	b		_0832141e
_0832141a:
	add		r1, #0x2
	add		r3, #0x2
_0832141e:
	sub		r0, #0x1
	cmp		r0, #0x0
	bne		_0832140c
_08321424:
	add		r1, r1, r7
	add		r2, r4, #0x0
	cmp		r2, r6
	blt		_08321404
_0832142c:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x321432, 0x2
	thumb_func_end sub_083213ec

	thumb_func_start sub_08321434
sub_08321434:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	bl		sub_0830e960
	add		r0, r5, #0x0
	add		r0, #0x8
	bl		sub_0830e960
	cmp		r4, #0x0
	ble		_08321464
_0832144c:
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x84
	bl		sub_0830d838
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_0830e970
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0832144c
_08321464:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x32146A, 0x3A
	thumb_func_end sub_08321434

	thumb_func_start sub_083214a4
sub_083214a4:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	bl		sub_0830ea68
	cmp		r0, #0x0
	beq		_083214e0
	ldr		r5, [r4, #0xc]
	ldr		r1, [r5, #0x6c]
	cmp		r1, #0x0
	beq		_083214be
	add		r0, r5, #0x0
	bl		sub_08327308
_083214be:
	add		r0, r4, #0x0
	bl		sub_0830ea68
	cmp		r0, #0x0
	beq		_083214d6
	ldr		r5, [r4, #0xc]
	add		r4, #0x8
	add		r0, r4, #0x0
	bl		sub_0830e9bc
	add		r0, r4, #0x0
	b		_083214ec
_083214d6:
	ldr		r5, [r4, #0x4]
	add		r0, r4, #0x0
	bl		sub_0830e9bc
	b		_083214e8
_083214e0:
	ldr		r5, [r4, #0x4]
	add		r0, r4, #0x0
	bl		sub_0830e9bc
_083214e8:
	add		r0, r4, #0x0
	add		r0, #0x8
_083214ec:
	add		r1, r5, #0x0
	bl		sub_0830e970
	add		r0, r5, #0x0
	bl		sub_0831a444
	add		r0, r5, #0x0
	pop		{ r4, r5 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_083214a4

	thumb_func_start sub_08321500
sub_08321500:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r0, #0x8
	bl		sub_0830e9d8
	add		r0, r4, #0x0
	add		r1, r5, #0x0
	bl		sub_0830e970
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x32151A, 0x2
	thumb_func_end sub_08321500

	thumb_func_start sub_0832151c
sub_0832151c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	bl		sub_0830e960
	add		r0, r5, #0x0
	add		r0, #0x8
	bl		sub_0830e960
	cmp		r4, #0x0
	ble		_0832154c
_08321534:
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x70
	bl		sub_0830d838
	add		r1, r0, #0x0
	add		r0, r5, #0x0
	bl		sub_0830e970
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08321534
_0832154c:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x321552, 0x5DE
	thumb_func_end sub_0832151c

	thumb_func_start sub_08321b30
sub_08321b30:
	push	{ r4, r5, lr }
	add		r5, r0, #0x0
	ldr		r4, [r5, #0x54]
	add		r2, r4, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08321b6c
	and		r0, r1
	mov		r3, #0x0
	ldr		r1, _08321b70
	and		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x78
	strh	r0, [r5, #0x20]
	sub		r0, #0x88
	strh	r0, [r5, #0x22]
	ldr		r0, _08321b74
	strh	r0, [r5, #0x24]
	add		r0, r5, #0x0
	add		r0, #0x4c
	strh	r3, [r0, #0x0]
	str		r3, [r5, #0x60]
	ldr		r0, _08321b78
	ldr		r1, _08321b7c
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r4, r0
	bne		_08321b84
	ldr		r0, _08321b80
	b		_08321b86

_08321b6c:	.4byte 0x0000FFDF
_08321b70:	.4byte 0x0000FBFF
_08321b74:	.4byte 0x00000105
_08321b78:	.4byte 0x030031D0
_08321b7c:	.4byte 0x000007AC
_08321b80:	.4byte 0x0202D4E4

_08321b84:
	ldr		r0, _08321b90
_08321b86:
	str		r0, [r5, #0x5c]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x321B8E, 0x2

_08321b90:	.4byte 0x0202D51C
	thumb_func_end sub_08321b30

	thumb_func_start sub_08321b94
sub_08321b94:
	push	{ lr }
	add		r2, r0, #0x0
	ldr		r3, [r2, #0x54]
	mov		r1, #0x22
	ldrsh	r0, [r2, r1]
	add		r0, #0x2
	lsl		r0, r0, #0x10
	asr		r0, r0, #0x10
	mov		r1, #0x0
	strh	r0, [r2, #0x22]
	cmp		r0, #0x57
	ble		_08321c04
	mov		r0, #0x58
	strh	r0, [r2, #0x22]
	add		r0, r2, #0x0
	add		r0, #0x4c
	strh	r1, [r0, #0x0]
	str		r1, [r2, #0x60]
	ldr		r0, _08321be0
	ldr		r1, _08321be4
	add		r0, r0, r1
	ldr		r1, [r2, #0x54]
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bne		_08321c00
	ldr		r0, _08321be8
	str		r0, [r2, #0x5c]
	add		r0, r3, #0x0
	add		r0, #0x72
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x1c
	lsr		r0, r0, #0x1c
	cmp		r0, #0xb
	beq		_08321bec
	cmp		r0, #0xd
	beq		_08321bf6
	b		_08321c04

.incbin "base.gba", 0x321BDE, 0x2

_08321be0:	.4byte 0x030031D0
_08321be4:	.4byte 0x000007AC
_08321be8:	.4byte 0x0202D3A4

_08321bec:
	add		r0, r3, #0x0
	mov		r1, #0xc
	bl		sub_08317658
	b		_08321c04
_08321bf6:
	add		r0, r3, #0x0
	mov		r1, #0xe
	bl		sub_08317658
	b		_08321c04
_08321c00:
	ldr		r0, _08321c08
	str		r0, [r2, #0x5c]
_08321c04:
	pop		{ r0 }
	bx		r0

_08321c08:	.4byte 0x0202D3E4
	thumb_func_end sub_08321b94

	thumb_func_start sub_08321c0c
sub_08321c0c:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x54]
	add		r2, r5, #0x0
	add		r2, #0xa4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08321c64
	and		r0, r1
	mov		r3, #0x0
	ldr		r1, _08321c68
	and		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x78
	strh	r0, [r4, #0x20]
	sub		r0, #0xf8
	strh	r0, [r4, #0x22]
	ldr		r0, _08321c6c
	strh	r0, [r4, #0x24]
	add		r0, r4, #0x0
	add		r0, #0x4c
	strh	r3, [r0, #0x0]
	ldr		r0, _08321c70
	str		r0, [r4, #0x60]
	ldr		r0, _08321c74
	ldr		r1, _08321c78
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	cmp		r5, r0
	bne		_08321c80
	ldr		r0, _08321c7c
	str		r0, [r4, #0x5c]
	add		r0, r5, #0x0
	add		r0, #0x72
	ldr		r0, [r0, #0x0]
	lsl		r0, r0, #0x1c
	lsr		r0, r0, #0x1c
	cmp		r0, #0xe
	bne		_08321c84
	add		r0, r5, #0x0
	mov		r1, #0x2
	bl		sub_08317870
	b		_08321c84

.incbin "base.gba", 0x321C62, 0x2

_08321c64:	.4byte 0x0000FFBF
_08321c68:	.4byte 0x0000EFFF
_08321c6c:	.4byte 0x00000105
_08321c70:	.4byte 0x0201CA81
_08321c74:	.4byte 0x030031D0
_08321c78:	.4byte 0x000007AC
_08321c7c:	.4byte 0x0202D534

_08321c80:
	ldr		r0, _08321c8c
	str		r0, [r4, #0x5c]
_08321c84:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x321C8A, 0x2

_08321c8c:	.4byte 0x0202D564

.incbin "base.gba", 0x321C90, 0x46C
	thumb_func_end sub_08321c0c

	thumb_func_start sub_083220fc
sub_083220fc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, [r4, #0x68]
	cmp		r0, #0x1c
	bls		_08322108
	b		_083225f0
_08322108:
	lsl		r0, r0, #0x2
	ldr		r1, _08322114
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x322112, 0x2

_08322114:	.4byte 0x0201C118

.incbin "base.gba", 0x322118, 0x4D8

_083225f0:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3225F6, 0x145A
	thumb_func_end sub_083220fc

	thumb_func_start sub_08323a50
sub_08323a50:
	push	{ r4, r5, r6, lr }
	lsl		r0, r0, #0x10
	lsr		r5, r0, #0x10
	ldr		r2, _08323a8c
	add		r6, r2, #0x0
	add		r6, #0x24
	ldr		r1, _08323a90
	add		r0, r2, r1
	ldr		r0, [r0, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	beq		_08323a6e
	b		_08323b76
_08323a6e:
	cmp		r5, #0x10
	bne		_08323a98
	ldr		r0, _08323a94
	add		r4, r2, r0
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x1f
	bhi		_08323a98
	mov		r0, #0xa
	bl		sub_08325e94
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x10
	orr		r0, r1
	strb	r0, [r4, #0x0]
	b		_08323b76

_08323a8c:	.4byte 0x030031D0
_08323a90:	.4byte 0x000007AC
_08323a94:	.4byte 0x00000C0A

_08323a98:
	ldr		r1, _08323ab4
	add		r0, r6, r1
	ldrb	r0, [r0, #0x0]
	cmp		r0, r5
	bcs		_08323b6a
	add		r2, r6, #0x0
	sub		r0, r5, #0x1
	cmp		r0, #0x1f
	bhi		_08323b6a
	lsl		r0, r0, #0x2
	ldr		r1, _08323ab8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

_08323ab4:	.4byte 0x00000BE6
_08323ab8:	.4byte 0x0201DABC

.incbin "base.gba", 0x323ABC, 0xAE

_08323b6a:
	ldr		r0, _08323b7c
	add		r2, r6, r0
	ldrb	r1, [r2, #0x0]
	add		r0, r5, #0x0
	orr		r0, r1
	strb	r0, [r2, #0x0]
_08323b76:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08323b7c:	.4byte 0x00000BE6
	thumb_func_end sub_08323a50

	thumb_func_start sub_08323b80
sub_08323b80:
	push	{ r4, r5, r6, lr }
	lsl		r0, r0, #0x10
	lsr		r2, r0, #0x10
	ldr		r1, _08323bbc
	add		r4, r1, #0x0
	add		r4, #0x24
	ldr		r3, _08323bc0
	add		r0, r1, r3
	ldr		r5, [r0, #0x0]
	ldr		r0, [r5, #0x48]
	mov		r3, #0x20
	and		r0, r3
	cmp		r0, #0x0
	bne		_08323c50
	ldr		r0, _08323bc4
	add		r1, r1, r0
	ldrb	r0, [r1, #0x0]
	bic		r0, r2
	strb	r0, [r1, #0x0]
	ldrb	r1, [r1, #0x0]
	cmp		r1, r2
	bcs		_08323c50
	add		r0, r1, #0x0
	and		r0, r3
	cmp		r0, #0x0
	beq		_08323bc8
	mov		r0, #0x9
	bl		sub_08325e94
	b		_08323c50

_08323bbc:	.4byte 0x030031D0
_08323bc0:	.4byte 0x000007AC
_08323bc4:	.4byte 0x00000C0A

_08323bc8:
	mov		r0, #0x10
	and		r0, r1
	cmp		r0, #0x0
	beq		_08323bd8
	mov		r0, #0xa
	bl		sub_08325e94
	b		_08323c50
_08323bd8:
	mov		r6, #0x8
	add		r0, r1, #0x0
	and		r0, r6
	cmp		r0, #0x0
	bne		_08323bfa
	mov		r0, #0x4
	and		r0, r1
	cmp		r0, #0x0
	beq		_08323bf2
	mov		r0, #0xb
	bl		sub_08325e94
	b		_08323c50
_08323bf2:
	mov		r0, #0x2
	and		r1, r0
	cmp		r1, #0x0
	beq		_08323c02
_08323bfa:
	mov		r0, #0xc
	bl		sub_08325e94
	b		_08323c50
_08323c02:
	add		r0, r4, #0x0
	bl		sub_08311954
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	ldr		r0, [r5, #0x48]
	and		r0, r6
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r6, r1, #0x0
	cmp		r0, #0x0
	beq		_08323c20
	mov		r3, #0xa0
	lsl		r3, r3, #0x1
	add		r6, r3, #0x0
_08323c20:
	add		r0, r4, #0x0
	bl		sub_08325e94
	ldr		r5, _08323c58
	ldr		r0, _08323c5c
	lsl		r4, r4, #0x3
	add		r4, r4, r0
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	bl		sub_08326084
	ldrh	r1, [r4, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r5
	ldr		r0, [r0, #0x0]
	add		r1, r6, #0x0
	bl		sub_08326dcc
_08323c50:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x323C56, 0x2

_08323c58:	.4byte 0x0202E890
_08323c5c:	.4byte 0x0202E8F0
	thumb_func_end sub_08323b80

	thumb_func_start sub_08323c60
sub_08323c60:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	mov		r8, r6
	ldr		r1, _08323c88
	add		r0, r6, r1
	ldrb	r7, [r0, #0x0]
	mov		r4, #0x0
	ldr		r2, _08323c8c
	add		r0, r6, r2
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x94
	ldr		r0, [r0, #0x0]
	mov		r5, #0x0
	cmp		r0, #0x0
	beq		_08323ca2
	add		r5, r1, r0
	b		_08323ca2

_08323c88:	.4byte 0x00000751
_08323c8c:	.4byte 0x00000574

_08323c90:
	ldrb	r1, [r5, #0x0]
	add		r0, r7, #0x0
	bl		sub_08323d9c
	ldr		r1, _08323cd4
	cmp		r0, r1
	bne		_08323ca0
	add		r4, #0x1
_08323ca0:
	add		r5, #0x4
_08323ca2:
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_08323c90
	ldr		r1, _08323cd8
	add		r0, r6, r1
	mov		r2, #0xdc
	lsl		r2, r2, #0x3
	add		r1, r6, r2
	add		r2, r4, #0x0
	bl		sub_08321434
	cmp		r4, #0x0
	ble		_08323d2a
	ldr		r0, _08323cdc
	add		r0, r8
	ldr		r1, [r0, #0x0]
	add		r0, r1, #0x0
	add		r0, #0x94
	ldr		r0, [r0, #0x0]
	mov		r5, #0x0
	cmp		r0, #0x0
	beq		_08323d24
	add		r5, r1, r0
	b		_08323d24

.incbin "base.gba", 0x323CD2, 0x2

_08323cd4:	.4byte 0xffff0000
_08323cd8:	.4byte 0x000006FC
_08323cdc:	.4byte 0x00000574

_08323ce0:
	ldrb	r1, [r5, #0x0]
	add		r0, r7, #0x0
	bl		sub_08323d9c
	ldr		r1, _08323cf4
	cmp		r0, r1
	beq		_08323cf8
	add		r5, #0x4
	b		_08323d24

.incbin "base.gba", 0x323CF2, 0x2

_08323cf4:	.4byte 0xffff0000

_08323cf8:
	add		r5, #0x1
	ldr		r1, _08323d34
	add		r0, r6, r1
	bl		sub_083214a4
	add		r4, r0, #0x0
	bl		sub_0831a4d0
	ldrb	r0, [r5, #0x0]
	lsl		r0, r0, #0x13
	add		r5, #0x1
	str		r0, [r4, #0x0]
	ldrb	r0, [r5, #0x0]
	lsl		r0, r0, #0x13
	add		r5, #0x1
	str		r0, [r4, #0x4]
	mov		r0, #0x0
	str		r0, [r4, #0x8]
	ldrb	r0, [r5, #0x0]
	add		r4, #0x36
	strb	r0, [r4, #0x0]
	add		r5, #0x1
_08323d24:
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	bne		_08323ce0
_08323d2a:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08323d34:	.4byte 0x000006FC
	thumb_func_end sub_08323c60

	thumb_func_start sub_08323d38
sub_08323d38:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r2, _08323d50
	add		r0, r1, r2
	sub		r2, #0xc
	add		r1, r1, r2
	mov		r2, #0x0
	bl		sub_0832151c
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x323D4E, 0x2

_08323d50:	.4byte 0x000006EC

.incbin "base.gba", 0x323D54, 0x4
	thumb_func_end sub_08323d38

	thumb_func_start sub_08323d58
sub_08323d58:
	push	{ r4, lr }
	add		r4, r0, #0x0
	bl		sub_0830f1b0
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	mov		r2, #0x0
	strh	r0, [r4, #0x10]
	mov		r0, #0x8
	strb	r0, [r4, #0xe]
	strb	r0, [r4, #0xd]
	strb	r0, [r4, #0xc]
	mov		r0, #0x1
	strh	r0, [r4, #0x34]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	add		r0, r4, #0x0
	add		r0, #0x56
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	str		r2, [r4, #0x5c]
	ldrh	r1, [r4, #0x34]
	ldr		r0, _08323d98
	and		r0, r1
	strh	r0, [r4, #0x34]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x323D96, 0x2

_08323d98:	.4byte 0x0000FFFD
	thumb_func_end sub_08323d58

	thumb_func_start sub_08323d9c
sub_08323d9c:
	ldr		r3, _08323dac
	ldr		r2, _08323db0
	cmp		r1, #0x7f
	bgt		_08323db4
	lsl		r0, r1, #0x2
	add		r0, r0, r3
	b		_08323dbc

.incbin "base.gba", 0x323DAA, 0x2

_08323dac:	.4byte 0x0202D8D8
_08323db0:	.4byte 0x0202D8E0

_08323db4:
	lsl		r0, r1, #0x2
	add		r0, r0, r2
	ldr		r1, _08323dc0
	add		r0, r0, r1
_08323dbc:
	ldr		r0, [r0, #0x0]
	bx		lr

_08323dc0:	.4byte 0xFFFFFE00
	thumb_func_end sub_08323d9c

	thumb_func_start sub_08323dc4
sub_08323dc4:
	push	{ r4, r5, lr }
	ldr		r4, [r0, #0x68]
	ldr		r0, _08323e00
	lsl		r4, r4, #0x2
	add		r0, r4, r0
	ldr		r5, [r0, #0x0]
	mov		r0, #0x0
	bl		sub_0830e6c0
	add		r1, r0, #0x0
	add		r1, #0x4a
	add		r0, r5, #0x0
	mov		r2, #0x9
	bl		sub_083272c4
	mov		r0, #0x0
	bl		sub_0830e6c0
	ldr		r1, _08323e04
	add		r4, r4, r1
	ldr		r1, [r4, #0x0]
	ldrh	r1, [r1, #0x0]
	strh	r1, [r0, #0x0]
	mov		r0, #0x1
	bl		sub_0830e6cc
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x323DFE, 0x2

_08323e00:	.4byte 0x0202D924
_08323e04:	.4byte 0x0202D934

.incbin "base.gba", 0x323E08, 0x260
	thumb_func_end sub_08323dc4

	thumb_func_start sub_08324068
sub_08324068:
	mov		r12, r0
	mov		r3, r12
	add		r3, #0x6e
	ldrb	r1, [r3, #0x0]
	mov		r0, #0xf
	and		r0, r1
	cmp		r0, #0x2
	beq		_083240ba
	mov		r0, #0x10
	neg		r0, r0
	and		r0, r1
	mov		r1, #0x2
	orr		r0, r1
	strb	r0, [r3, #0x0]
	ldr		r2, _083240bc
	mov		r0, r12
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r2, [r0, #0x0]
	ldrh	r1, [r3, #0x0]
	ldr		r0, _083240c0
	and		r0, r1
	strh	r0, [r3, #0x0]
	ldrb	r1, [r2, #0x1]
	lsl		r1, r1, #0x1
	ldrb	r2, [r3, #0x1]
	mov		r0, #0x1
	and		r0, r2
	orr		r0, r1
	strb	r0, [r3, #0x1]
	mov		r2, r12
	add		r2, #0x6d
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x2
	neg		r0, r0
	and		r0, r1
	strb	r0, [r2, #0x0]
_083240ba:
	bx		lr

_083240bc:	.4byte 0x0202DB70
_083240c0:	.4byte 0xFFFFFE0F
	thumb_func_end sub_08324068

	thumb_func_start sub_083240c4
sub_083240c4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r7, r0, #0x0
	lsl		r1, r1, #0x18
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	mov		r8, r2
	mov		r0, #0x6e
	add		r0, r0, r7
	mov		r12, r0
	ldr		r0, [r0, #0x0]
	lsl		r2, r0, #0x10
	lsr		r5, r2, #0x19
	lsl		r0, r0, #0x17
	lsr		r4, r0, #0x1b
	ldr		r3, _08324124
	add		r0, r7, #0x0
	add		r0, #0x4c
	ldrb	r2, [r0, #0x0]
	mov		r0, #0x7
	and		r0, r2
	lsl		r0, r0, #0x2
	add		r0, r0, r3
	ldr		r6, [r0, #0x0]
	mov		r2, #0xc1
	lsl		r2, r2, #0x18
	add		r1, r1, r2
	lsr		r1, r1, #0x18
	cmp		r1, #0x1
	bhi		_08324108
	ldr		r0, _08324128
	cmp		r8, r0
	bls		_08324130
_08324108:
	mov		r0, r12
	ldrh	r1, [r0, #0x0]
	ldr		r0, _0832412c
	and		r0, r1
	mov		r1, r12
	strh	r0, [r1, #0x0]
	ldrb	r1, [r6, #0x1]
	lsl		r1, r1, #0x1
	mov		r0, r12
	ldrb	r2, [r0, #0x1]
	mov		r0, #0x1
	and		r0, r2
	orr		r0, r1
	b		_08324146

_08324124:	.4byte 0x0202DB70
_08324128:	.4byte 0x000001FF
_0832412c:	.4byte 0xFFFFFE0F

_08324130:
	sub		r0, r5, #0x1
	lsl		r0, r0, #0x18
	lsr		r5, r0, #0x18
	cmp		r5, #0x0
	beq		_0832414c
	lsl		r2, r5, #0x1
	mov		r0, r12
	ldrb	r1, [r0, #0x1]
	mov		r0, #0x1
	and		r0, r1
	orr		r0, r2
_08324146:
	mov		r1, r12
	strb	r0, [r1, #0x1]
	b		_083241bc
_0832414c:
	add		r0, r4, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	lsl		r0, r4, #0x2
	add		r0, r0, r6
	ldrb	r3, [r0, #0x1]
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x0
	ldrsb	r2, [r0, r2]
	mov		r0, #0x1
	neg		r0, r0
	add		r5, r7, #0x0
	add		r5, #0x6c
	cmp		r2, r0
	bne		_08324182
_0832416a:
	add		r0, r4, r3
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	lsl		r0, r4, #0x2
	add		r0, r0, r6
	ldrb	r3, [r0, #0x1]
	ldrb	r1, [r0, #0x0]
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	cmp		r0, r2
	beq		_0832416a
_08324182:
	strb	r1, [r5, #0x0]
	lsl		r0, r3, #0x18
	asr		r5, r0, #0x18
	cmp		r5, #0x0
	beq		_083241b4
	add		r2, r7, #0x0
	add		r2, #0x6e
	mov		r0, #0x1f
	and		r4, r0
	lsl		r3, r4, #0x4
	ldrh	r1, [r2, #0x0]
	ldr		r0, _083241b0
	and		r0, r1
	orr		r0, r3
	strh	r0, [r2, #0x0]
	lsl		r3, r5, #0x1
	ldrb	r1, [r2, #0x1]
	mov		r0, #0x1
	and		r0, r1
	orr		r0, r3
	strb	r0, [r2, #0x1]
	b		_083241bc

.incbin "base.gba", 0x3241AE, 0x2

_083241b0:	.4byte 0xFFFFFE0F

_083241b4:
	add		r0, r7, #0x0
	mov		r1, #0x0
	bl		sub_08317870
_083241bc:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3241C6, 0x126
	thumb_func_end sub_083240c4

	thumb_func_start sub_083242ec
sub_083242ec:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r3, _08324354
	mov		r0, #0x72
	add		r0, r0, r4
	mov		r12, r0
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x10
	neg		r0, r0
	and		r0, r1
	mov		r1, #0xc
	orr		r0, r1
	mov		r1, r12
	strb	r0, [r1, #0x0]
	ldr		r0, _08324358
	ldrb	r1, [r0, #0x1]
	lsl		r1, r1, #0x1
	mov		r0, r12
	ldrb	r2, [r0, #0x1]
	mov		r0, #0x1
	and		r0, r2
	orr		r0, r1
	mov		r1, r12
	strb	r0, [r1, #0x1]
	ldrh	r1, [r1, #0x0]
	ldr		r0, _0832435c
	and		r0, r1
	mov		r1, r12
	strh	r0, [r1, #0x0]
	ldr		r0, _08324360
	add		r3, r3, r0
	ldr		r0, [r3, #0x0]
	cmp		r4, r0
	bne		_0832434c
	ldr		r0, [r4, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_0832434c
	mov		r1, #0xcd
	lsl		r1, r1, #0x1
	add		r2, r4, r1
	ldrb	r0, [r2, #0x0]
	mov		r1, #0xfc
	and		r1, r0
	mov		r0, #0xdf
	and		r1, r0
	strb	r1, [r2, #0x0]
_0832434c:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x324352, 0x2

_08324354:	.4byte 0x030031D0
_08324358:	.4byte 0x0202DBA0
_0832435c:	.4byte 0xFFFFFE0F
_08324360:	.4byte 0x000007AC
	thumb_func_end sub_083242ec

	thumb_func_start sub_08324364
sub_08324364:
	push	{ lr }
	add		r2, r0, #0x0
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0832437e
	add		r0, r2, #0x0
	mov		r1, #0x2
	bl		sub_08317870
_0832437e:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x324382, 0xAE
	thumb_func_end sub_08324364

	thumb_func_start sub_08324430
sub_08324430:
	push	{ lr }
	add		r3, r0, #0x0
	ldr		r2, _0832446c
	mov		r0, #0x72
	add		r0, r0, r3
	mov		r12, r0
	ldrb	r1, [r0, #0x0]
	mov		r0, #0x10
	neg		r0, r0
	and		r0, r1
	mov		r1, #0xe
	orr		r0, r1
	mov		r1, r12
	strb	r0, [r1, #0x0]
	ldr		r0, _08324470
	add		r2, r2, r0
	ldr		r0, [r2, #0x0]
	cmp		r3, r0
	bne		_08324466
	ldr		r0, [r3, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08324466
	add		r0, r3, #0x0
	bl		sub_083250a8
_08324466:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x32446A, 0x2

_0832446c:	.4byte 0x030031D0
_08324470:	.4byte 0x000007AC
	thumb_func_end sub_08324430

	thumb_func_start sub_08324474
sub_08324474:
	push	{ lr }
	add		r2, r0, #0x0
	add		r0, #0xb4
	ldrh	r1, [r0, #0x0]
	mov		r0, #0x80
	lsl		r0, r0, #0x8
	and		r0, r1
	cmp		r0, #0x0
	beq		_0832448e
	add		r0, r2, #0x0
	mov		r1, #0x2
	bl		sub_08317870
_0832448e:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x324492, 0x6
	thumb_func_end sub_08324474

	thumb_func_start sub_08324498
sub_08324498:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r3, _083244e4
	mov		r0, #0x6e
	add		r0, r0, r4
	mov		r12, r0
	ldrb	r0, [r0, #0x0]
	mov		r1, #0xf
	orr		r0, r1
	mov		r1, r12
	strb	r0, [r1, #0x0]
	ldr		r0, _083244e8
	ldrb	r1, [r0, #0x1]
	lsl		r1, r1, #0x1
	mov		r0, r12
	ldrb	r2, [r0, #0x1]
	mov		r0, #0x1
	and		r0, r2
	orr		r0, r1
	mov		r1, r12
	strb	r0, [r1, #0x1]
	ldrh	r1, [r1, #0x0]
	ldr		r0, _083244ec
	and		r0, r1
	mov		r1, r12
	strh	r0, [r1, #0x0]
	ldr		r0, _083244f0
	add		r3, r3, r0
	ldr		r0, [r3, #0x0]
	cmp		r4, r0
	bne		_083244dc
	add		r0, r4, #0x0
	bl		sub_08324c98
_083244dc:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3244E2, 0x2

_083244e4:	.4byte 0x030031D0
_083244e8:	.4byte 0x0202DBA8
_083244ec:	.4byte 0xFFFFFE0F
_083244f0:	.4byte 0x000007AC
	thumb_func_end sub_08324498

	thumb_func_start sub_083244f4
sub_083244f4:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r0, #0x6e
	add		r0, r0, r4
	mov		r12, r0
	ldr		r1, [r0, #0x0]
	lsl		r0, r1, #0x10
	lsr		r0, r0, #0x19
	lsl		r1, r1, #0x17
	lsr		r3, r1, #0x1b
	sub		r0, #0x1
	lsl		r0, r0, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, #0x0
	bne		_0832453a
	add		r0, r3, #0x1
	lsl		r0, r0, #0x18
	lsr		r3, r0, #0x18
	mov		r1, #0x1f
	and		r1, r3
	lsl		r1, r1, #0x4
	mov		r0, r12
	ldrh	r2, [r0, #0x0]
	ldr		r0, _0832454c
	and		r0, r2
	orr		r0, r1
	mov		r1, r12
	strh	r0, [r1, #0x0]
	ldr		r0, _08324550
	lsl		r1, r3, #0x1
	add		r0, #0x1
	add		r1, r1, r0
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x0
	beq		_08324554
_0832453a:
	lsl		r2, r0, #0x1
	mov		r0, r12
	ldrb	r1, [r0, #0x1]
	mov		r0, #0x1
	and		r0, r1
	orr		r0, r2
	mov		r1, r12
	strb	r0, [r1, #0x1]
	b		_08324568

_0832454c:	.4byte 0xFFFFFE0F
_08324550:	.4byte 0x0202DBA8

_08324554:
	add		r0, r4, #0x0
	mov		r1, #0x0
	bl		sub_08317870
	add		r0, r4, #0x0
	add		r0, #0x4c
	ldrb	r1, [r0, #0x0]
	mov		r2, #0x8
	eor		r1, r2
	strb	r1, [r0, #0x0]
_08324568:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x32456E, 0x3B2
	thumb_func_end sub_083244f4

	thumb_func_start sub_08324920
sub_08324920:
	mov		r2, #0x0
	str		r2, [r0, #0x0]
	str		r2, [r0, #0x4]
	str		r2, [r0, #0x8]
	str		r2, [r0, #0xc]
	strb	r2, [r0, #0x10]
	strh	r2, [r0, #0x14]
	strh	r2, [r0, #0x16]
	mov		r1, #0x80
	lsl		r1, r1, #0x1
	str		r1, [r0, #0x1c]
	str		r1, [r0, #0x20]
	strh	r1, [r0, #0x24]
	str		r2, [r0, #0x18]
	bx		lr

.incbin "base.gba", 0x32493E, 0x2
	thumb_func_end sub_08324920

	thumb_func_start sub_08324940
sub_08324940:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, [r1, #0xc]
	cmp		r0, #0x0
	ble		_08324952
	sub		r0, #0x1
	str		r0, [r1, #0xc]
	mov		r0, #0x1
	b		_0832497c
_08324952:
	ldr		r2, [r1, #0x8]
	ldr		r3, [r2, #0x0]
	cmp		r3, #0x0
	bne		_08324960
	ldr		r0, [r2, #0x4]
	cmp		r0, #0x0
	beq		_0832496e
_08324960:
	str		r3, [r1, #0x4]
	ldr		r0, [r2, #0x4]
	str		r0, [r1, #0xc]
	add		r2, #0x8
	str		r2, [r1, #0x8]
	mov		r0, #0x1
	b		_0832497c
_0832496e:
	ldr		r0, _08324980
	mov		r2, #0xea
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	bl		sub_08324a0c
	mov		r0, #0x0
_0832497c:
	pop		{ r1 }
	bx		r1

_08324980:	.4byte 0x030031D0
	thumb_func_end sub_08324940

	thumb_func_start sub_08324984
sub_08324984:
	push	{ lr }
	add		r1, r0, #0x0
	ldr		r0, _08324998
	mov		r2, #0xea
	lsl		r2, r2, #0x3
	add		r0, r0, r2
	bl		sub_08324a0c
	pop		{ r0 }
	bx		r0

_08324998:	.4byte 0x030031D0
	thumb_func_end sub_08324984

	thumb_func_start sub_0832499c
sub_0832499c:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	mov		r4, #0x0
_083249a4:
	add		r0, r6, #0x0
	mov		r1, #0x1
	mov		r2, #0x3c
	bl		sub_0830d838
	add		r2, r5, r4
	mov		r1, #0x0
	strb	r1, [r2, #0x0]
	lsl		r2, r4, #0x2
	add		r1, r5, #0x4
	add		r1, r1, r2
	str		r0, [r1, #0x0]
	add		r4, #0x1
	cmp		r4, #0x3
	ble		_083249a4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_0832499c

	thumb_func_start sub_083249c8
sub_083249c8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	mov		r3, #0x0
	ldrb	r1, [r4, #0x0]
	mov		r0, #0x1
	and		r0, r1
	cmp		r0, #0x0
	beq		_083249ec
	mov		r2, #0x1
_083249da:
	add		r3, #0x1
	cmp		r3, #0x2
	bgt		_083249ec
	add		r0, r4, r3
	ldrb	r1, [r0, #0x0]
	add		r0, r2, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_083249da
_083249ec:
	add		r2, r4, r3
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x0]
	lsl		r1, r3, #0x2
	add		r0, r4, #0x4
	add		r0, r0, r1
	ldr		r4, [r0, #0x0]
	add		r0, r4, #0x0
	bl		sub_08324920
	add		r0, r4, #0x0
	pop		{ r4 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_083249c8

	thumb_func_start sub_08324a0c
sub_08324a0c:
	push	{ r4, lr }
	add		r3, r0, #0x0
	add		r4, r1, #0x0
	mov		r2, #0x0
	ldr		r0, [r3, #0x4]
	cmp		r0, r4
	bne		_08324a1e
	strb	r2, [r3, #0x0]
	b		_08324a36
_08324a1e:
	add		r2, #0x1
	cmp		r2, #0x3
	bgt		_08324a36
	lsl		r0, r2, #0x2
	add		r1, r3, #0x4
	add		r1, r1, r0
	ldr		r0, [r1, #0x0]
	cmp		r0, r4
	bne		_08324a1e
	add		r1, r3, r2
	mov		r0, #0x0
	strb	r0, [r1, #0x0]
_08324a36:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08324a0c

	thumb_func_start sub_08324a3c
sub_08324a3c:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	mov		r8, r3
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	ldr		r0, _08324a90
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_083249c8
	add		r2, r0, #0x0
	strh	r4, [r2, #0x24]
	ldr		r0, _08324a94
	str		r0, [r2, #0x0]
	strh	r5, [r2, #0x14]
	strh	r6, [r2, #0x16]
	ldr		r0, _08324a98
	mov		r1, r8
	cmp		r1, #0x0
	beq		_08324a78
	ldr		r0, _08324a9c
_08324a78:
	str		r0, [r2, #0x8]
	ldrb	r1, [r2, #0x10]
	mov		r0, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x10]
	add		r0, r2, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x324A8E, 0x2

_08324a90:	.4byte 0x030031D0
_08324a94:	.4byte 0x0201E941
_08324a98:	.4byte 0x0202DC14
_08324a9c:	.4byte 0x0202DC44
	thumb_func_end sub_08324a3c

	thumb_func_start sub_08324aa0
sub_08324aa0:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	mov		r8, r3
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	ldr		r0, _08324af4
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_083249c8
	add		r2, r0, #0x0
	strh	r4, [r2, #0x24]
	ldr		r0, _08324af8
	str		r0, [r2, #0x0]
	strh	r5, [r2, #0x14]
	strh	r6, [r2, #0x16]
	ldr		r0, _08324afc
	mov		r1, r8
	cmp		r1, #0x0
	beq		_08324adc
	ldr		r0, _08324b00
_08324adc:
	str		r0, [r2, #0x8]
	ldrb	r1, [r2, #0x10]
	mov		r0, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x10]
	add		r0, r2, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x324AF2, 0x2

_08324af4:	.4byte 0x030031D0
_08324af8:	.4byte 0x0201E941
_08324afc:	.4byte 0x0202DC74
_08324b00:	.4byte 0x0202DCA4
	thumb_func_end sub_08324aa0

	thumb_func_start sub_08324b04
sub_08324b04:
	push	{ r4, r5, r6, lr }
	mov		r6, r8
	push	{ r6 }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	mov		r8, r3
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	ldr		r0, _08324b58
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_083249c8
	add		r2, r0, #0x0
	strh	r4, [r2, #0x24]
	ldr		r0, _08324b5c
	str		r0, [r2, #0x0]
	strh	r5, [r2, #0x14]
	strh	r6, [r2, #0x16]
	ldr		r0, _08324b60
	mov		r1, r8
	cmp		r1, #0x0
	beq		_08324b40
	ldr		r0, _08324b64
_08324b40:
	str		r0, [r2, #0x8]
	ldrb	r1, [r2, #0x10]
	mov		r0, #0x1
	orr		r0, r1
	strb	r0, [r2, #0x10]
	add		r0, r2, #0x0
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x324B56, 0x2

_08324b58:	.4byte 0x030031D0
_08324b5c:	.4byte 0x0201E941
_08324b60:	.4byte 0x0202DCD4
_08324b64:	.4byte 0x0202DD04
	thumb_func_end sub_08324b04

	thumb_func_start sub_08324b68
sub_08324b68:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	ldr		r0, _08324ba4
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_083249c8
	strh	r4, [r0, #0x24]
	ldr		r1, _08324ba8
	str		r1, [r0, #0x0]
	strh	r5, [r0, #0x14]
	strh	r6, [r0, #0x16]
	ldr		r1, _08324bac
	str		r1, [r0, #0x8]
	ldrb	r2, [r0, #0x10]
	mov		r1, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x10]
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08324ba4:	.4byte 0x030031D0
_08324ba8:	.4byte 0x0201E941
_08324bac:	.4byte 0x0202DD34
	thumb_func_end sub_08324b68

	thumb_func_start sub_08324bb0
sub_08324bb0:
	push	{ r4, r5, r6, lr }
	add		r5, r0, #0x0
	add		r6, r1, #0x0
	add		r4, r2, #0x0
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	ldr		r0, _08324bec
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_083249c8
	strh	r4, [r0, #0x24]
	ldr		r1, _08324bf0
	str		r1, [r0, #0x0]
	strh	r5, [r0, #0x14]
	strh	r6, [r0, #0x16]
	ldr		r1, _08324bf4
	str		r1, [r0, #0x8]
	ldrb	r2, [r0, #0x10]
	mov		r1, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x10]
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08324bec:	.4byte 0x030031D0
_08324bf0:	.4byte 0x0201E941
_08324bf4:	.4byte 0x0202DD9C
	thumb_func_end sub_08324bb0

	thumb_func_start sub_08324bf8
sub_08324bf8:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	add		r6, r0, #0x0
	add		r3, r1, #0x0
	add		r4, r2, #0x0
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	lsl		r3, r3, #0x10
	lsr		r3, r3, #0x10
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	ldr		r5, _08324c54
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r5, r1
	str		r3, [sp, #0x0]
	bl		sub_083249c8
	strh	r4, [r0, #0x24]
	ldr		r1, _08324c58
	str		r1, [r0, #0x0]
	strh	r6, [r0, #0x14]
	ldr		r3, [sp, #0x0]
	strh	r3, [r0, #0x16]
	ldr		r3, _08324c5c
	add		r5, r5, r3
	ldr		r2, [r5, #0x0]
	mov		r3, #0x24
	ldrsh	r1, [r2, r3]
	asr		r1, r1, #0x1
	str		r1, [r0, #0x1c]
	mov		r3, #0x24
	ldrsh	r1, [r2, r3]
	asr		r1, r1, #0x1
	str		r1, [r0, #0x20]
	ldr		r1, _08324c60
	str		r1, [r0, #0x8]
	ldrb	r2, [r0, #0x10]
	mov		r1, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x10]
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x324C52, 0x2

_08324c54:	.4byte 0x030031D0
_08324c58:	.4byte 0x0201E941
_08324c5c:	.4byte 0x000007AC
_08324c60:	.4byte 0x0202DDCC
	thumb_func_end sub_08324bf8

	thumb_func_start sub_08324c64
sub_08324c64:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x28]
	bl		sub_08324940
	cmp		r0, #0x0
	beq		_08324c92
	mov		r1, #0x24
	ldrsh	r0, [r5, r1]
	sub		r0, #0x1
	strh	r0, [r4, #0x24]
	mov		r1, #0x20
	ldrsh	r0, [r5, r1]
	strh	r0, [r4, #0x14]
	mov		r1, #0x22
	ldrsh	r0, [r5, r1]
	strh	r0, [r4, #0x16]
	mov		r1, #0x24
	ldrsh	r0, [r5, r1]
	str		r0, [r4, #0x1c]
	mov		r1, #0x24
	ldrsh	r0, [r5, r1]
	str		r0, [r4, #0x20]
_08324c92:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08324c64

	thumb_func_start sub_08324c98
sub_08324c98:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _08324cc0
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_083249c8
	str		r4, [r0, #0x28]
	ldr		r1, _08324cc4
	str		r1, [r0, #0x0]
	ldr		r1, _08324cc8
	str		r1, [r0, #0x8]
	ldrb	r2, [r0, #0x10]
	mov		r1, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x10]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08324cc0:	.4byte 0x030031D0
_08324cc4:	.4byte 0x0201EC65
_08324cc8:	.4byte 0x0202DDEC
	thumb_func_end sub_08324c98

	thumb_func_start sub_08324ccc
sub_08324ccc:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _08324d18
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_083249c8
	str		r4, [r0, #0x28]
	add		r2, r0, #0x0
	add		r2, #0x2c
	mov		r1, #0x0
	strb	r1, [r2, #0x0]
	ldr		r1, _08324d1c
	str		r1, [r0, #0x0]
	ldr		r1, [r4, #0x44]
	str		r1, [r0, #0x4]
	mov		r2, #0x20
	ldrsh	r1, [r4, r2]
	strh	r1, [r0, #0x14]
	mov		r2, #0x22
	ldrsh	r1, [r4, r2]
	sub		r1, #0xa
	strh	r1, [r0, #0x16]
	mov		r2, #0x24
	ldrsh	r1, [r4, r2]
	str		r1, [r0, #0x1c]
	mov		r2, #0x24
	ldrsh	r1, [r4, r2]
	lsl		r1, r1, #0x2
	str		r1, [r0, #0x20]
	ldrb	r2, [r0, #0x10]
	mov		r1, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x10]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_08324d18:	.4byte 0x030031D0
_08324d1c:	.4byte 0x0201ED21
	thumb_func_end sub_08324ccc

	thumb_func_start sub_08324d20
sub_08324d20:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r6, r0, #0x0
	ldr		r4, [r6, #0x28]
	mov		r0, #0x2c
	add		r0, r0, r6
	mov		r8, r0
	ldrb	r7, [r0, #0x0]
	add		r5, r7, #0x0
	ldr		r0, [r4, #0x44]
	str		r0, [r6, #0x4]
	mov		r1, #0x24
	ldrsh	r0, [r4, r1]
	add		r0, #0x1
	strh	r0, [r6, #0x24]
	mov		r0, #0x20
	ldrsh	r2, [r4, r0]
	ldr		r3, _08324da8
	lsl		r1, r5, #0x1
	add		r1, r1, r5
	add		r0, r1, r3
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r2, r2, r0
	strh	r2, [r6, #0x14]
	mov		r0, #0x22
	ldrsh	r2, [r4, r0]
	add		r0, r3, #0x1
	add		r0, r1, r0
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	add		r2, r2, r0
	strh	r2, [r6, #0x16]
	add		r3, #0x2
	add		r1, r1, r3
	mov		r0, #0x0
	ldrsb	r0, [r1, r0]
	lsl		r0, r0, #0x7
	str		r0, [r6, #0x18]
	mov		r1, #0x24
	ldrsh	r0, [r4, r1]
	str		r0, [r6, #0x1c]
	mov		r1, #0x24
	ldrsh	r0, [r4, r1]
	lsl		r0, r0, #0x2
	str		r0, [r6, #0x20]
	add		r0, r5, #0x1
	lsl		r0, r0, #0x18
	lsr		r7, r0, #0x18
	cmp		r5, #0xe
	bls		_08324d9a
	ldr		r0, _08324dac
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	add		r1, r6, #0x0
	bl		sub_08324a0c
_08324d9a:
	mov		r0, r8
	strb	r7, [r0, #0x0]
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08324da8:	.4byte 0x0202DE34
_08324dac:	.4byte 0x030031D0
	thumb_func_end sub_08324d20

	thumb_func_start sub_08324db0
sub_08324db0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r7, r0, #0x0
	lsl		r1, r1, #0x18
	lsr		r1, r1, #0x18
	mov		r8, r1
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r9, r2
	ldr		r4, _08324e74
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r4, r1
	bl		sub_083249c8
	add		r5, r0, #0x0
	add		r6, r7, #0x0
	ldr		r2, _08324e78
	add		r4, r4, r2
	ldr		r0, [r4, #0x0]
	ldr		r0, [r0, #0x48]
	mov		r1, #0x20
	and		r0, r1
	cmp		r0, #0x0
	bne		_08324e18
	ldr		r2, _08324e7c
	ldr		r0, _08324e80
	mov		r1, #0x82
	lsl		r1, r1, #0x2
	add		r3, r0, r1
	ldrh	r1, [r3, #0x4]
	lsl		r0, r1, #0x1
	add		r0, r0, r1
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	ldr		r1, [r0, #0x0]
	ldrh	r0, [r1, #0x4]
	cmp		r0, #0x0
	beq		_08324e12
	mov		r2, #0x0
	ldr		r1, [r1, #0x0]
	ldr		r0, [r3, #0x0]
	cmp		r1, r0
	bne		_08324e0e
	mov		r2, #0x1
_08324e0e:
	cmp		r2, #0x0
	beq		_08324e18
_08324e12:
	mov		r0, #0x41
	bl		sub_08325e94
_08324e18:
	str		r7, [r5, #0x28]
	ldr		r0, _08324e84
	str		r0, [r5, #0x0]
	ldr		r0, _08324e88
	str		r0, [r5, #0x8]
	mov		r2, #0x24
	ldrsh	r0, [r6, r2]
	sub		r0, #0x1
	strh	r0, [r5, #0x24]
	add		r0, r5, #0x0
	add		r0, #0x2c
	mov		r1, r8
	strb	r1, [r0, #0x0]
	add		r0, #0x1
	mov		r2, r9
	strb	r2, [r0, #0x0]
	mov		r0, #0x20
	ldrsh	r4, [r6, r0]
	mov		r1, r8
	lsl		r0, r1, #0x18
	asr		r0, r0, #0x10
	mov		r2, #0x24
	ldrsh	r1, [r6, r2]
	bl		sub_083272c8
	add		r4, r4, r0
	strh	r4, [r5, #0x14]
	mov		r0, #0x22
	ldrsh	r4, [r6, r0]
	mov		r1, r9
	lsl		r0, r1, #0x18
	asr		r0, r0, #0x10
	mov		r2, #0x24
	ldrsh	r1, [r6, r2]
	bl		sub_083272c8
	add		r4, r4, r0
	strh	r4, [r5, #0x16]
	add		r0, r5, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x324E72, 0x2

_08324e74:	.4byte 0x030031D0
_08324e78:	.4byte 0x000007AC
_08324e7c:	.4byte 0x0202E890
_08324e80:	.4byte 0x0202E8F0
_08324e84:	.4byte 0x0201EE8D
_08324e88:	.4byte 0x0202DE64
	thumb_func_end sub_08324db0

	thumb_func_start sub_08324e8c
sub_08324e8c:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	ldr		r7, [r5, #0x28]
	bl		sub_08324940
	cmp		r0, #0x0
	beq		_08324ef0
	mov		r1, #0x24
	ldrsh	r0, [r7, r1]
	sub		r0, #0x1
	strh	r0, [r5, #0x24]
	mov		r2, #0x20
	ldrsh	r4, [r7, r2]
	add		r0, r5, #0x0
	add		r0, #0x2c
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	lsl		r0, r0, #0x8
	mov		r2, #0x24
	ldrsh	r1, [r7, r2]
	bl		sub_083272c8
	add		r4, r4, r0
	strh	r4, [r5, #0x14]
	mov		r0, #0x22
	ldrsh	r4, [r7, r0]
	add		r6, r5, #0x0
	add		r6, #0x2d
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	lsl		r0, r0, #0x8
	mov		r2, #0x24
	ldrsh	r1, [r7, r2]
	bl		sub_083272c8
	add		r4, r4, r0
	strh	r4, [r5, #0x16]
	ldrb	r0, [r6, #0x0]
	sub		r0, #0x1
	strb	r0, [r6, #0x0]
	add		r0, r7, #0x0
	bl		sub_0831700c
	cmp		r0, #0x0
	bne		_08324ef0
	ldrb	r0, [r5, #0x10]
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r5, #0x10]
_08324ef0:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x324EF6, 0xA6
	thumb_func_end sub_08324e8c

	thumb_func_start sub_08324f9c
sub_08324f9c:
	push	{ r4, r5, r6, lr }
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6 }
	mov		r9, r0
	add		r4, r1, #0x0
	add		r5, r2, #0x0
	lsl		r4, r4, #0x18
	lsr		r4, r4, #0x18
	lsl		r5, r5, #0x18
	lsr		r5, r5, #0x18
	ldr		r0, _08325020
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_083249c8
	add		r6, r0, #0x0
	mov		r2, r9
	str		r2, [r6, #0x28]
	ldr		r0, _08325024
	str		r0, [r6, #0x0]
	ldr		r0, _08325028
	str		r0, [r6, #0x8]
	mov		r1, #0x24
	ldrsh	r0, [r2, r1]
	sub		r0, #0x1
	strh	r0, [r6, #0x24]
	add		r0, r6, #0x0
	add		r0, #0x2c
	strb	r4, [r0, #0x0]
	add		r0, #0x1
	strb	r5, [r0, #0x0]
	mov		r0, #0x20
	ldrsh	r2, [r2, r0]
	mov		r8, r2
	lsl		r4, r4, #0x18
	asr		r4, r4, #0x10
	mov		r2, r9
	mov		r0, #0x24
	ldrsh	r1, [r2, r0]
	add		r0, r4, #0x0
	bl		sub_083272c8
	add		r8, r0
	mov		r1, r8
	strh	r1, [r6, #0x14]
	mov		r2, r9
	mov		r0, #0x22
	ldrsh	r4, [r2, r0]
	lsl		r5, r5, #0x18
	asr		r5, r5, #0x10
	mov		r0, #0x24
	ldrsh	r1, [r2, r0]
	add		r0, r5, #0x0
	bl		sub_083272c8
	add		r4, r4, r0
	strh	r4, [r6, #0x16]
	add		r0, r6, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_08325020:	.4byte 0x030031D0
_08325024:	.4byte 0x0201F02D
_08325028:	.4byte 0x0202DE98
	thumb_func_end sub_08324f9c

	thumb_func_start sub_0832502c
sub_0832502c:
	push	{ r4, r5, r6, r7, lr }
	add		r5, r0, #0x0
	ldr		r7, [r5, #0x28]
	bl		sub_08324940
	cmp		r0, #0x0
	beq		_0832509c
	mov		r1, #0x24
	ldrsh	r0, [r7, r1]
	sub		r0, #0x1
	strh	r0, [r5, #0x24]
	mov		r2, #0x20
	ldrsh	r4, [r7, r2]
	add		r0, r5, #0x0
	add		r0, #0x2c
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	lsl		r0, r0, #0x8
	mov		r2, #0x24
	ldrsh	r1, [r7, r2]
	bl		sub_083272c8
	add		r4, r4, r0
	strh	r4, [r5, #0x14]
	mov		r0, #0x22
	ldrsh	r4, [r7, r0]
	add		r6, r5, #0x0
	add		r6, #0x2d
	mov		r0, #0x0
	ldrsb	r0, [r6, r0]
	lsl		r0, r0, #0x8
	mov		r2, #0x24
	ldrsh	r1, [r7, r2]
	bl		sub_083272c8
	add		r4, r4, r0
	strh	r4, [r5, #0x16]
	ldr		r2, _083250a4
	ldr		r1, [r5, #0xc]
	mov		r0, #0x8
	sub		r0, r0, r1
	add		r0, r0, r2
	ldrb	r0, [r0, #0x0]
	ldrb	r1, [r6, #0x0]
	add		r0, r0, r1
	strb	r0, [r6, #0x0]
	add		r0, r7, #0x0
	bl		sub_0831700c
	cmp		r0, #0x0
	bne		_0832509c
	ldrb	r0, [r5, #0x10]
	mov		r1, #0x1
	orr		r0, r1
	strb	r0, [r5, #0x10]
_0832509c:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3250A2, 0x2

_083250a4:	.4byte 0x0202DEB8
	thumb_func_end sub_0832502c

	thumb_func_start sub_083250a8
sub_083250a8:
	push	{ r4, lr }
	add		r4, r0, #0x0
	ldr		r0, _083250d0
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_083249c8
	str		r4, [r0, #0x28]
	ldr		r1, _083250d4
	str		r1, [r0, #0x0]
	ldr		r1, _083250d8
	str		r1, [r0, #0x8]
	add		r2, r0, #0x0
	add		r2, #0x2e
	mov		r1, #0x0
	strb	r1, [r2, #0x0]
	pop		{ r4 }
	pop		{ r1 }
	bx		r1

_083250d0:	.4byte 0x030031D0
_083250d4:	.4byte 0x0201F0DD
_083250d8:	.4byte 0x0202DEA8
	thumb_func_end sub_083250a8

	thumb_func_start sub_083250dc
sub_083250dc:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	ldr		r7, [r6, #0x28]
	bl		sub_08324940
	cmp		r0, #0x0
	beq		_08325144
	add		r5, r6, #0x0
	add		r5, #0x2e
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_083250fa
	sub		r0, #0x1
	strb	r0, [r5, #0x0]
	b		_08325128
_083250fa:
	ldr		r0, _0832514c
	ldr		r4, [r0, #0x10]
	mov		r0, #0x1f
	add		r1, r4, #0x0
	and		r1, r0
	sub		r1, #0x10
	mov		r2, #0x7
	and		r2, r4
	lsl		r2, r2, #0x19
	lsl		r1, r1, #0x18
	asr		r1, r1, #0x18
	mov		r0, #0xfc
	lsl		r0, r0, #0x18
	add		r2, r2, r0
	asr		r2, r2, #0x18
	add		r0, r7, #0x0
	bl		sub_08324f9c
	mov		r0, #0x3
	and		r4, r0
	lsl		r4, r4, #0x2
	add		r4, #0x4
	strb	r4, [r5, #0x0]
_08325128:
	add		r0, r7, #0x0
	add		r0, #0x72
	ldrb	r1, [r0, #0x0]
	mov		r0, #0xf
	and		r0, r1
	cmp		r0, #0xe
	beq		_08325144
	ldr		r0, _0832514c
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	add		r1, r6, #0x0
	bl		sub_08324a0c
_08325144:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x32514A, 0x2

_0832514c:	.4byte 0x030031D0
	thumb_func_end sub_083250dc

	thumb_func_start sub_08325150
sub_08325150:
	push	{ r4, r5, lr }
	add		r4, r0, #0x0
	ldr		r5, [r4, #0x28]
	ldr		r0, _08325178
	add		r0, r5, r0
	ldrb	r0, [r0, #0x0]
	lsl		r0, r0, #0x18
	asr		r0, r0, #0x18
	ldrh	r1, [r4, #0x16]
	add		r0, r0, r1
	strh	r0, [r4, #0x16]
	add		r0, r4, #0x0
	bl		sub_08324940
	add		r5, #0x1
	str		r5, [r4, #0x28]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x325176, 0x2

_08325178:	.4byte 0x0202DED8
	thumb_func_end sub_08325150

	thumb_func_start sub_0832517c
sub_0832517c:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r5, r1, #0x0
	add		r6, r2, #0x0
	lsl		r4, r4, #0x10
	lsr		r4, r4, #0x10
	lsl		r5, r5, #0x10
	lsr		r5, r5, #0x10
	lsl		r6, r6, #0x10
	lsr		r6, r6, #0x10
	ldr		r0, _083251c8
	mov		r1, #0xea
	lsl		r1, r1, #0x3
	add		r0, r0, r1
	bl		sub_083249c8
	mov		r3, #0x0
	strh	r6, [r0, #0x24]
	ldr		r1, _083251cc
	str		r1, [r0, #0x0]
	lsl		r4, r4, #0x10
	asr		r4, r4, #0x10
	add		r4, #0x8
	strh	r4, [r0, #0x14]
	lsl		r5, r5, #0x10
	asr		r5, r5, #0x10
	sub		r5, #0x20
	strh	r5, [r0, #0x16]
	ldr		r1, _083251d0
	str		r1, [r0, #0x8]
	ldrb	r2, [r0, #0x10]
	mov		r1, #0x1
	orr		r1, r2
	strb	r1, [r0, #0x10]
	str		r3, [r0, #0x28]
	pop		{ r4, r5, r6 }
	pop		{ r1 }
	bx		r1

_083251c8:	.4byte 0x030031D0
_083251cc:	.4byte 0x0201F151
_083251d0:	.4byte 0x0202DEC8
	thumb_func_end sub_0832517c

	thumb_func_start sub_083251d4
sub_083251d4:
.incbin "base.gba", 0x3251d4, 0x2
	bx		r2
_083251d8:
.incbin "base.gba", 0x3251D8, 0x4
.incbin "base.gba", 0x3251DC, 0x4
.incbin "base.gba", 0x3251E0, 0x4
	thumb_func_end sub_083251d4

	thumb_func_start sub_083251e4
sub_083251e4:
	ldr		r0, _08325250
	ldr		r0, [r0, #0x0]
	ldr		r2, _08325254
	ldr		r3, [r0, #0x0]
	cmp		r2, r3
	beq		_083251f2
	bx		lr
_083251f2:
	add		r3, #0x1
	str		r3, [r0, #0x0]
	push	{ r4, r5, r6, r7, lr }
	mov		r1, r8
	mov		r2, r9
	mov		r3, r10
	mov		r4, r11
	push	{ r0, r1, r2, r3, r4 }
	sub		sp, #0x18
	ldrb	r1, [r0, #0xc]
	cmp		r1, #0x0
	beq		_08325216
	ldr		r2, _0832525c
	ldrb	r2, [r2, #0x0]
	cmp		r2, #0xa0
	bcs		_08325214
	add		r2, #0xe4
_08325214:
	add		r1, r1, r2
_08325216:
	str		r1, [sp, #0x14]
	ldr		r3, [r0, #0x20]
	cmp		r3, #0x0
	beq		_08325226
	ldr		r0, [r0, #0x24]
	bl		sub_08325592
	ldr		r0, [sp, #0x18]
_08325226:
	ldr		r3, [r0, #0x28]
	bl		sub_08325592
	ldr		r0, [sp, #0x18]
	ldr		r3, [r0, #0x10]
	mov		r8, r3
	ldr		r5, _08325260
	add		r5, r5, r0
	ldrb	r4, [r0, #0x4]
	sub		r7, r4, #0x1
	bls		_08325246
	ldrb	r1, [r0, #0xb]
	sub		r1, r1, r7
	mov		r2, r8
	mul		r2, r1
	add		r5, r5, r2
_08325246:
	str		r5, [sp, #0x8]
	ldr		r6, _08325264
	ldr		r3, _08325258
	bx		r3

.incbin "base.gba", 0x32524E, 0x2

_08325250:	.4byte 0x03007FF0
_08325254:	.4byte 0x68736D53
_08325258:	.4byte 0x030029A9
_0832525c:	.4byte VerticalCounter_LY_
_08325260:	.4byte 0x00000350
_08325264:	.4byte 0x00000630

.incbin "base.gba", 0x325268, 0x32A
	thumb_func_end sub_083251e4

	non_word_aligned_thumb_func_start sub_08325592
sub_08325592:
	bx		r3

.incbin "base.gba", 0x325594, 0x1C
	thumb_func_end sub_08325592

	non_word_aligned_thumb_func_start sub_083255b0
sub_083255b0:
	ldr		r3, [r0, #0x2c]
	cmp		r3, #0x0
	beq		_083255ce
	ldr		r1, [r0, #0x34]
	ldr		r2, [r0, #0x30]
	cmp		r2, #0x0
	beq		_083255c2
	str		r1, [r2, #0x34]
	b		_083255c4
_083255c2:
	str		r1, [r3, #0x20]
_083255c4:
	cmp		r1, #0x0
	beq		_083255ca
	str		r2, [r1, #0x30]
_083255ca:
	mov		r1, #0x0
	str		r1, [r0, #0x2c]
_083255ce:
	bx		lr
	thumb_func_end sub_083255b0

	thumb_func_start sub_083255d0
sub_083255d0:
	push	{ r4, r5, lr }
	add		r5, r1, #0x0
	ldr		r4, [r5, #0x20]
	cmp		r4, #0x0
	beq		_083255f4
_083255da:
	ldrb	r1, [r4, #0x0]
	mov		r0, #0xc7
	tst		r0, r1
	beq		_083255e8
	mov		r0, #0x40
	orr		r1, r0
	strb	r1, [r4, #0x0]
_083255e8:
	add		r0, r4, #0x0
	bl		sub_083255b0
	ldr		r4, [r4, #0x34]
	cmp		r4, #0x0
	bne		_083255da
_083255f4:
	mov		r0, #0x0
	strb	r0, [r5, #0x0]
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3255FE, 0x2
	thumb_func_end sub_083255d0

	thumb_func_start sub_08325600
sub_08325600:
	mov		r12, lr
	mov		r1, #0x24
	ldr		r2, _08325630
_08325606:
	ldr		r3, [r2, #0x0]
	bl		sub_0832561a
	stmia	r0!, {  r3 }
	add		r2, #0x4
	sub		r1, #0x1
	bgt		_08325606
	bx		r12

.incbin "base.gba", 0x325616, 0x2
	thumb_func_end sub_08325600

	thumb_func_start sub_08325618
sub_08325618:
	ldrb	r3, [r2, #0x0]
	thumb_func_end sub_08325618

	non_word_aligned_thumb_func_start sub_0832561a
sub_0832561a:
	push	{ r0 }
	lsr		r0, r2, #0x19
	bne		_0832562c
	ldr		r0, _08325630
	cmp		r2, r0
	bcc		_0832562a
	lsr		r0, r2, #0xe
	beq		_0832562c
_0832562a:
	mov		r3, #0x0
_0832562c:
	pop		{ r0 }
	bx		lr

.align 2, 0
_08325630:	.4byte 0x0202DEE8
	thumb_func_end sub_0832561a

	thumb_func_start sub_08325634
sub_08325634:
	ldr		r2, [r1, #0x40]
	add		r3, r2, #0x1
	str		r3, [r1, #0x40]
	ldrb	r3, [r2, #0x0]
	b		sub_0832561a

.incbin "base.gba", 0x32563E, 0x4
_08325642:
	ldr		r2, [r1, #0x40]
	ldrb	r0, [r2, #0x3]
	lsl		r0, r0, #0x8
	ldrb	r3, [r2, #0x2]
	orr		r0, r3
	lsl		r0, r0, #0x8
	ldrb	r3, [r2, #0x1]
	orr		r0, r3
	lsl		r0, r0, #0x8
	bl		sub_08325618
	orr		r0, r3
	str		r0, [r1, #0x40]
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x325660, 0x30
	thumb_func_end sub_08325634

	thumb_func_start sub_08325690
sub_08325690:
	push	{ lr }
	ldr		r2, [r1, #0x40]
	ldrb	r3, [r2, #0x0]
	cmp		r3, #0x0
	bne		_083256a0
	add		r2, #0x1
	str		r2, [r1, #0x40]
	b		_08325642
_083256a0:
	ldrb	r3, [r1, #0x3]
	add		r3, #0x1
	strb	r3, [r1, #0x3]
	mov		r12, r3
	bl		sub_08325634
	cmp		r12, r3
	bcs		_083256b2
	b		_08325642
_083256b2:
	mov		r3, #0x0
	strb	r3, [r1, #0x3]
	add		r2, #0x5
	str		r2, [r1, #0x40]
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3256BE, 0x39A
	thumb_func_end sub_08325690

	thumb_func_start sub_08325a58
sub_08325a58:
	bx		r3

.incbin "base.gba", 0x325A5A, 0xE
	thumb_func_end sub_08325a58

	thumb_func_start sub_08325a68
sub_08325a68:
	push	{ r4, r5, r6, lr }
	add		r5, r1, #0x0
	ldrb	r1, [r5, #0x0]
	mov		r0, #0x80
	tst		r0, r1
	beq		_08325aa0
	ldr		r4, [r5, #0x20]
	cmp		r4, #0x0
	beq		_08325a9e
	mov		r6, #0x0
_08325a7c:
	ldrb	r0, [r4, #0x0]
	cmp		r0, #0x0
	beq		_08325a96
	ldrb	r0, [r4, #0x1]
	mov		r3, #0x7
	and		r0, r3
	beq		_08325a94
	ldr		r3, _08325aa8
	ldr		r3, [r3, #0x0]
	ldr		r3, [r3, #0x2c]
	bl		sub_08325a58
_08325a94:
	strb	r6, [r4, #0x0]
_08325a96:
	str		r6, [r4, #0x2c]
	ldr		r4, [r4, #0x34]
	cmp		r4, #0x0
	bne		_08325a7c
_08325a9e:
	str		r4, [r5, #0x20]
_08325aa0:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x325AA6, 0x2

_08325aa8:	.4byte 0x03007FF0
	thumb_func_end sub_08325a68

	thumb_func_start sub_08325aac
sub_08325aac:
	ldrb	r1, [r4, #0x12]
	mov		r0, #0x14
	ldrsb	r2, [r4, r0]
	mov		r3, #0x80
	add		r3, r3, r2
	mul		r3, r1
	ldrb	r0, [r5, #0x10]
	mul		r0, r3
	asr		r0, r0, #0xe
	cmp		r0, #0xff
	bls		_08325ac4
	mov		r0, #0xff
_08325ac4:
	strb	r0, [r4, #0x2]
	mov		r3, #0x7f
	sub		r3, r3, r2
	mul		r3, r1
	ldrb	r0, [r5, #0x11]
	mul		r0, r3
	asr		r0, r0, #0xe
	cmp		r0, #0xff
	bls		_08325ad8
	mov		r0, #0xff
_08325ad8:
	strb	r0, [r4, #0x3]
	bx		lr
	thumb_func_end sub_08325aac

	thumb_func_start sub_08325adc
sub_08325adc:
	push	{ r4, r5, r6, r7, lr }
	mov		r4, r8
	mov		r5, r9
	mov		r6, r10
	mov		r7, r11
	push	{ r4, r5, r6, r7 }
	sub		sp, #0x18
	str		r1, [sp, #0x0]
	add		r5, r2, #0x0
	ldr		r1, _08325cd4
	ldr		r1, [r1, #0x0]
	str		r1, [sp, #0x4]
	ldr		r1, _08325cd8
	add		r0, r0, r1
	ldrb	r0, [r0, #0x0]
	strb	r0, [r5, #0x4]
	ldr		r3, [r5, #0x40]
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x80
	bcs		_08325b22
	strb	r0, [r5, #0x5]
	add		r3, #0x1
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x80
	bcs		_08325b20
	strb	r0, [r5, #0x6]
	add		r3, #0x1
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x80
	bcs		_08325b20
	ldrb	r1, [r5, #0x4]
	add		r1, r1, r0
	strb	r1, [r5, #0x4]
	add		r3, #0x1
_08325b20:
	str		r3, [r5, #0x40]
_08325b22:
	mov		r0, #0x0
	str		r0, [sp, #0x14]
	add		r4, r5, #0x0
	add		r4, #0x24
	ldrb	r2, [r4, #0x0]
	mov		r0, #0xc0
	tst		r0, r2
	beq		_08325b74
	ldrb	r3, [r5, #0x5]
	mov		r0, #0x40
	tst		r0, r2
	beq		_08325b42
	ldr		r1, [r5, #0x2c]
	add		r1, r1, r3
	ldrb	r0, [r1, #0x0]
	b		_08325b44
_08325b42:
	add		r0, r3, #0x0
_08325b44:
	lsl		r1, r0, #0x1
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	ldr		r0, [r5, #0x28]
	add		r1, r1, r0
	mov		r9, r1
	mov		r6, r9
	ldrb	r1, [r6, #0x0]
	mov		r0, #0xc0
	tst		r0, r1
	beq		_08325b5c
	b		_08325cc2
_08325b5c:
	mov		r0, #0x80
	tst		r0, r2
	beq		_08325b78
	ldrb	r1, [r6, #0x3]
	mov		r0, #0x80
	tst		r0, r1
	beq		_08325b70
	sub		r1, #0xc0
	lsl		r1, r1, #0x1
	str		r1, [sp, #0x14]
_08325b70:
	ldrb	r3, [r6, #0x1]
	b		_08325b78
_08325b74:
	mov		r9, r4
	ldrb	r3, [r5, #0x5]
_08325b78:
	str		r3, [sp, #0x8]
	ldr		r6, [sp, #0x0]
	ldrb	r1, [r6, #0x9]
	ldrb	r0, [r5, #0x1d]
	add		r0, r0, r1
	cmp		r0, #0xff
	bls		_08325b88
	mov		r0, #0xff
_08325b88:
	str		r0, [sp, #0x10]
	mov		r6, r9
	ldrb	r0, [r6, #0x0]
	mov		r6, #0x7
	and		r6, r0
	str		r6, [sp, #0xC]
	beq		_08325bc8
	ldr		r0, [sp, #0x4]
	ldr		r4, [r0, #0x1c]
	cmp		r4, #0x0
	bne		_08325ba0
	b		_08325cc2
_08325ba0:
	sub		r6, #0x1
	lsl		r0, r6, #0x6
	add		r4, r4, r0
	ldrb	r1, [r4, #0x0]
	mov		r0, #0xc7
	tst		r0, r1
	beq		_08325c1c
	mov		r0, #0x40
	tst		r0, r1
	bne		_08325c1c
	ldrb	r1, [r4, #0x13]
	ldr		r0, [sp, #0x10]
	cmp		r1, r0
	bcc		_08325c1c
	beq		_08325bc0
	b		_08325cc2
_08325bc0:
	ldr		r0, [r4, #0x2c]
	cmp		r0, r5
	bcs		_08325c1c
	b		_08325cc2
_08325bc8:
	ldr		r6, [sp, #0x10]
	add		r7, r5, #0x0
	mov		r2, #0x0
	mov		r8, r2
	ldr		r4, [sp, #0x4]
	ldrb	r3, [r4, #0x6]
	add		r4, #0x50
_08325bd6:
	ldrb	r1, [r4, #0x0]
	mov		r0, #0xc7
	tst		r0, r1
	beq		_08325c1c
	mov		r0, #0x40
	tst		r0, r1
	beq		_08325bf0
	cmp		r2, #0x0
	bne		_08325bf4
	add		r2, #0x1
	ldrb	r6, [r4, #0x13]
	ldr		r7, [r4, #0x2c]
	b		_08325c0e
_08325bf0:
	cmp		r2, #0x0
	bne		_08325c10
_08325bf4:
	ldrb	r0, [r4, #0x13]
	cmp		r0, r6
	bcs		_08325c00
	add		r6, r0, #0x0
	ldr		r7, [r4, #0x2c]
	b		_08325c0e
_08325c00:
	bhi		_08325c10
	ldr		r0, [r4, #0x2c]
	cmp		r0, r7
	bls		_08325c0c
	add		r7, r0, #0x0
	b		_08325c0e
_08325c0c:
	bcc		_08325c10
_08325c0e:
	mov		r8, r4
_08325c10:
	add		r4, #0x40
	sub		r3, #0x1
	bgt		_08325bd6
	mov		r4, r8
	cmp		r4, #0x0
	beq		_08325cc2
_08325c1c:
	add		r0, r4, #0x0
	bl		sub_083261e8
	mov		r1, #0x0
	str		r1, [r4, #0x30]
	ldr		r3, [r5, #0x20]
	str		r3, [r4, #0x34]
	cmp		r3, #0x0
	beq		_08325c30
	str		r4, [r3, #0x30]
_08325c30:
	str		r4, [r5, #0x20]
	str		r5, [r4, #0x2c]
	ldrb	r0, [r5, #0x1b]
	strb	r0, [r5, #0x1c]
	cmp		r0, r1
	beq		_08325c42
	add		r1, r5, #0x0
	bl		sub_08325d1c
_08325c42:
	ldr		r0, [sp, #0x0]
	add		r1, r5, #0x0
	bl		sub_0832676c
	ldr		r0, [r5, #0x4]
	str		r0, [r4, #0x10]
	ldr		r0, [sp, #0x10]
	strb	r0, [r4, #0x13]
	ldr		r0, [sp, #0x8]
	strb	r0, [r4, #0x8]
	ldr		r0, [sp, #0x14]
	strb	r0, [r4, #0x14]
	mov		r6, r9
	ldrb	r0, [r6, #0x0]
	strb	r0, [r4, #0x1]
	ldr		r7, [r6, #0x4]
	str		r7, [r4, #0x24]
	ldr		r0, [r6, #0x8]
	str		r0, [r4, #0x4]
	ldrh	r0, [r5, #0x1e]
	strh	r0, [r4, #0xc]
	bl		sub_08325aac
	ldrb	r1, [r4, #0x8]
	mov		r0, #0x8
	ldrsb	r0, [r5, r0]
	add		r3, r1, r0
	bpl		_08325c7c
	mov		r3, #0x0
_08325c7c:
	ldr		r6, [sp, #0xC]
	cmp		r6, #0x0
	beq		_08325caa
	mov		r6, r9
	ldrb	r0, [r6, #0x2]
	strb	r0, [r4, #0x1e]
	ldrb	r1, [r6, #0x3]
	mov		r0, #0x80
	tst		r0, r1
	bne		_08325c96
	mov		r0, #0x70
	tst		r0, r1
	bne		_08325c98
_08325c96:
	mov		r1, #0x8
_08325c98:
	strb	r1, [r4, #0x1f]
	ldrb	r2, [r5, #0x9]
	add		r1, r3, #0x0
	ldr		r0, [sp, #0xC]
	ldr		r3, [sp, #0x4]
	ldr		r3, [r3, #0x30]
	bl		sub_08325a58
	b		_08325cb4
_08325caa:
	ldrb	r2, [r5, #0x9]
	add		r1, r3, #0x0
	add		r0, r7, #0x0
	bl		sub_08325d6c
_08325cb4:
	str		r0, [r4, #0x20]
	mov		r0, #0x80
	strb	r0, [r4, #0x0]
	ldrb	r1, [r5, #0x0]
	mov		r0, #0xf0
	and		r0, r1
	strb	r0, [r5, #0x0]
_08325cc2:
	add		sp, #0x18
	pop		{ r0, r1, r2, r3, r4, r5, r6, r7 }
	mov		r8, r0
	mov		r9, r1
	mov		r10, r2
	mov		r11, r3
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x325CD2, 0x2

_08325cd4:	.4byte 0x03007FF0
_08325cd8:	.4byte 0x0202E15C

.incbin "base.gba", 0x325CDC, 0x40
	thumb_func_end sub_08325adc

	thumb_func_start sub_08325d1c
sub_08325d1c:
	mov		r2, #0x0
	strb	r2, [r1, #0x16]
	strb	r2, [r1, #0x1a]
	ldrb	r2, [r1, #0x18]
	cmp		r2, #0x0
	bne		_08325d2c
	mov		r2, #0xc
	b		_08325d2e
_08325d2c:
	mov		r2, #0x3
_08325d2e:
	ldrb	r3, [r1, #0x0]
	orr		r3, r2
	strb	r3, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x325D36, 0x36
	thumb_func_end sub_08325d1c

	thumb_func_start sub_08325d6c
sub_08325d6c:
	push	{ r4, r5, r6, r7, lr }
	mov		r12, r0
	lsl		r1, r1, #0x18
	lsr		r6, r1, #0x18
	lsl		r7, r2, #0x18
	cmp		r6, #0xb2
	bls		_08325d80
	mov		r6, #0xb2
	mov		r7, #0xff
	lsl		r7, r7, #0x18
_08325d80:
	ldr		r3, _08325dc8
	add		r0, r6, r3
	ldrb	r5, [r0, #0x0]
	ldr		r4, _08325dcc
	mov		r2, #0xf
	add		r0, r5, #0x0
	and		r0, r2
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	lsr		r1, r5, #0x4
	ldr		r5, [r0, #0x0]
	lsr		r5, r1
	add		r0, r6, #0x1
	add		r0, r0, r3
	ldrb	r1, [r0, #0x0]
	add		r0, r1, #0x0
	and		r0, r2
	lsl		r0, r0, #0x2
	add		r0, r0, r4
	lsr		r1, r1, #0x4
	ldr		r0, [r0, #0x0]
	lsr		r0, r1
	mov		r1, r12
	ldr		r4, [r1, #0x4]
	sub		r0, r0, r5
	add		r1, r7, #0x0
	bl		sub_083251d4
	add		r1, r0, #0x0
	add		r1, r5, r1
	add		r0, r4, #0x0
	bl		sub_083251d4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

_08325dc8:	.4byte 0x0202DF78
_08325dcc:	.4byte 0x0202E02C

.incbin "base.gba", 0x325DD0, 0xB8
	thumb_func_end sub_08325d6c

	thumb_func_start sub_08325e88
sub_08325e88:
	push	{ lr }
	bl		sub_083251e4
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x325E92, 0x2
	thumb_func_end sub_08325e88

	thumb_func_start sub_08325e94
sub_08325e94:
	push	{ lr }
	lsl		r0, r0, #0x10
	ldr		r2, _08325eb8
	ldr		r1, _08325ebc
	lsr		r0, r0, #0xd
	add		r0, r0, r1
	ldrh	r3, [r0, #0x4]
	lsl		r1, r3, #0x1
	add		r1, r1, r3
	lsl		r1, r1, #0x2
	add		r1, r1, r2
	ldr		r2, [r1, #0x0]
	ldr		r1, [r0, #0x0]
	add		r0, r2, #0x0
	bl		sub_08326580
	pop		{ r0 }
	bx		r0

_08325eb8:	.4byte 0x0202E890
_08325ebc:	.4byte 0x0202E8F0

.incbin "base.gba", 0x325EC0, 0xA0
	thumb_func_end sub_08325e94

	thumb_func_start sub_08325f60
sub_08325f60:
	push	{ lr }
	lsl		r0, r0, #0x10
	ldr		r2, _08325f8c
	ldr		r1, _08325f90
	lsr		r0, r0, #0xd
	add		r0, r0, r1
	ldrh	r3, [r0, #0x4]
	lsl		r1, r3, #0x1
	add		r1, r1, r3
	lsl		r1, r1, #0x2
	add		r1, r1, r2
	ldr		r2, [r1, #0x0]
	ldr		r1, [r2, #0x0]
	ldr		r0, [r0, #0x0]
	cmp		r1, r0
	bne		_08325f86
	add		r0, r2, #0x0
	bl		sub_08326664
_08325f86:
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x325F8A, 0x2

_08325f8c:	.4byte 0x0202E890
_08325f90:	.4byte 0x0202E8F0

.incbin "base.gba", 0x325F94, 0xF0
	thumb_func_end sub_08325f60

	thumb_func_start sub_08326084
sub_08326084:
	push	{ r4, r5, r6, r7, lr }
	ldrb	r5, [r0, #0x8]
	ldr		r4, [r0, #0x2c]
	cmp		r5, #0x0
	ble		_083260c6
	mov		r7, #0x80
_08326090:
	ldrb	r1, [r4, #0x0]
	add		r0, r7, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_083260be
	mov		r6, #0x40
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_083260be
	add		r0, r4, #0x0
	bl		sub_083261fc
	strb	r7, [r4, #0x0]
	mov		r0, #0x2
	strb	r0, [r4, #0xf]
	strb	r6, [r4, #0x13]
	mov		r0, #0x16
	strb	r0, [r4, #0x19]
	add		r1, r4, #0x0
	add		r1, #0x24
	mov		r0, #0x1
	strb	r0, [r1, #0x0]
_083260be:
	sub		r5, #0x1
	add		r4, #0x50
	cmp		r5, #0x0
	bgt		_08326090
_083260c6:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08326084

	thumb_func_start sub_083260cc
sub_083260cc:
	push	{ r4, r5, r6, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	ldr		r1, _08326194
	mov		r0, #0x8f
	strh	r0, [r1, #0x0]
	ldr		r3, _08326198
	mov		r2, #0x0
	strh	r2, [r3, #0x0]
	ldr		r0, _0832619c
	mov		r1, #0x8
	strb	r1, [r0, #0x0]
	add		r0, #0x6
	strb	r1, [r0, #0x0]
	add		r0, #0x10
	strb	r1, [r0, #0x0]
	sub		r0, #0x14
	mov		r1, #0x80
	strb	r1, [r0, #0x0]
	add		r0, #0x8
	strb	r1, [r0, #0x0]
	add		r0, #0x10
	strb	r1, [r0, #0x0]
	sub		r0, #0xd
	strb	r2, [r0, #0x0]
	mov		r0, #0x77
	strb	r0, [r3, #0x0]
	ldr		r0, _083261a0
	ldr		r4, [r0, #0x0]
	ldr		r6, [r4, #0x0]
	ldr		r0, _083261a4
	cmp		r6, r0
	bne		_0832618c
	add		r0, r6, #0x1
	str		r0, [r4, #0x0]
	ldr		r1, _083261a8
	ldr		r0, _083261ac
	str		r0, [r1, #0x20]
	ldr		r0, _083261b0
	str		r0, [r1, #0x44]
	ldr		r0, _083261b4
	str		r0, [r1, #0x4c]
	ldr		r0, _083261b8
	str		r0, [r1, #0x70]
	ldr		r0, _083261bc
	str		r0, [r1, #0x74]
	ldr		r0, _083261c0
	str		r0, [r1, #0x78]
	ldr		r0, _083261c4
	str		r0, [r1, #0x7c]
	add		r2, r1, #0x0
	add		r2, #0x80
	ldr		r0, _083261c8
	str		r0, [r2, #0x0]
	add		r1, #0x84
	ldr		r0, _083261cc
	str		r0, [r1, #0x0]
	str		r5, [r4, #0x1c]
	ldr		r0, _083261d0
	str		r0, [r4, #0x28]
	ldr		r0, _083261d4
	str		r0, [r4, #0x2c]
	ldr		r0, _083261d8
	str		r0, [r4, #0x30]
	ldr		r0, _083261dc
	mov		r1, #0x0
	strb	r0, [r4, #0xc]
	str		r1, [sp, #0x0]
	ldr		r2, _083261e0
	mov		r0, sp
	add		r1, r5, #0x0
	bl		sub_083272c4
	mov		r0, #0x1
	strb	r0, [r5, #0x1]
	mov		r0, #0x11
	strb	r0, [r5, #0x1c]
	add		r1, r5, #0x0
	add		r1, #0x41
	mov		r0, #0x2
	strb	r0, [r1, #0x0]
	add		r1, #0x1b
	mov		r0, #0x22
	strb	r0, [r1, #0x0]
	add		r1, #0x25
	mov		r0, #0x3
	strb	r0, [r1, #0x0]
	add		r1, #0x1b
	mov		r0, #0x44
	strb	r0, [r1, #0x0]
	add		r1, #0x24
	mov		r0, #0x4
	strb	r0, [r1, #0x1]
	mov		r0, #0x88
	strb	r0, [r1, #0x1c]
	str		r6, [r4, #0x0]
_0832618c:
	add		sp, #0x4
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_08326194:	.4byte ControlSoundon_off_NR52_
_08326198:	.4byte ControlStereo_Volume_Enable_NR50_NR51_
_0832619c:	.4byte Channel1Duty_Length_Envelope_NR11_NR12_ + 0x1
_083261a0:	.4byte 0x03007FF0
_083261a4:	.4byte 0x68736D53
_083261a8:	.4byte 0x03006910
_083261ac:	.4byte 0x02021041
_083261b0:	.4byte 0x0201FD45
_083261b4:	.4byte 0x0201FD59
_083261b8:	.4byte 0x02021199
_083261bc:	.4byte 0x0201FCDD
_083261c0:	.4byte 0x020202DD
_083261c4:	.4byte 0x0201FA69
_083261c8:	.4byte 0x020206A5
_083261cc:	.4byte 0x0202076D
_083261d0:	.4byte 0x02020981
_083261d4:	.4byte 0x020208C9
_083261d8:	.4byte 0x02020821
_083261dc:	.4byte 0x00000040
_083261e0:	.4byte 0x05000040

.incbin "base.gba", 0x3261E4, 0x4
	thumb_func_end sub_083260cc

	thumb_func_start sub_083261e8
sub_083261e8:
	push	{ lr }
	ldr		r1, _083261f8
	ldr		r1, [r1, #0x0]
	bl		sub_08327308
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3261F6, 0x2

_083261f8:	.4byte 0x03006998
	thumb_func_end sub_083261e8

	thumb_func_start sub_083261fc
sub_083261fc:
	push	{ lr }
	ldr		r1, _0832620c
	ldr		r1, [r1, #0x0]
	bl		sub_08327308
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x32620A, 0x2

_0832620c:	.4byte 0x0300699C
	thumb_func_end sub_083261fc

	thumb_func_start sub_08326210
sub_08326210:
	push	{ r4, r5, lr }
	sub		sp, #0x4
	add		r5, r0, #0x0
	mov		r3, #0x0
	str		r3, [r5, #0x0]
	ldr		r2, _083262a8
	ldr		r0, [r2, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x12
	and		r0, r1
	cmp		r0, #0x0
	beq		_0832622c
	ldr		r0, _083262ac
	str		r0, [r2, #0x0]
_0832622c:
	ldr		r1, _083262b0
	mov		r2, #0x80
	lsl		r2, r2, #0x3
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	sub		r1, #0x42
	mov		r0, #0x8f
	strh	r0, [r1, #0x0]
	sub		r1, #0x2
	ldr		r2, _083262b4
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	ldr		r2, _083262b8
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x3f
	and		r0, r1
	mov		r1, #0x40
	orr		r0, r1
	strb	r0, [r2, #0x0]
	ldr		r1, _083262bc
	mov		r2, #0xd4
	lsl		r2, r2, #0x2
	add		r0, r5, r2
	str		r0, [r1, #0x0]
	add		r1, #0x4
	ldr		r0, _083262c0
	str		r0, [r1, #0x0]
	ldr		r0, _083262c4
	str		r5, [r0, #0x0]
	str		r3, [sp, #0x0]
	ldr		r2, _083262c8
	mov		r0, sp
	add		r1, r5, #0x0
	bl		sub_083272c4
	mov		r0, #0x8
	strb	r0, [r5, #0x6]
	mov		r0, #0xf
	strb	r0, [r5, #0x7]
	ldr		r0, _083262cc
	str		r0, [r5, #0x38]
	ldr		r0, _083262d0
	str		r0, [r5, #0x28]
	str		r0, [r5, #0x2c]
	str		r0, [r5, #0x30]
	str		r0, [r5, #0x3c]
	ldr		r4, _083262d4
	add		r0, r4, #0x0
	bl		sub_08325600
	str		r4, [r5, #0x34]
	mov		r0, #0x80
	lsl		r0, r0, #0xb
	bl		sub_083262dc
	ldr		r0, _083262d8
	str		r0, [r5, #0x0]
	add		sp, #0x4
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3262A6, 0x2

_083262a8:	.4byte DMA1WordCount
_083262ac:	.4byte 0x84400004
_083262b0:	.4byte DMA1Control
_083262b4:	.4byte 0x00000B0E
_083262b8:	.4byte SoundPWMControl + 0x1
_083262bc:	.4byte DMA1SourceAddress
_083262c0:	.4byte ChannelAFIFO_Data0_3
_083262c4:	.4byte 0x03007FF0
_083262c8:	.4byte 0x05000260
_083262cc:	.4byte 0x0201FADD
_083262d0:	.4byte 0x020212B9
_083262d4:	.4byte 0x03006910
_083262d8:	.4byte 0x68736D53
	thumb_func_end sub_08326210

	thumb_func_start sub_083262dc
sub_083262dc:
	push	{ r4, r5, r6, lr }
	add		r2, r0, #0x0
	ldr		r0, _0832635c
	ldr		r4, [r0, #0x0]
	mov		r0, #0xf0
	lsl		r0, r0, #0xc
	and		r0, r2
	lsr		r2, r0, #0x10
	mov		r6, #0x0
	strb	r2, [r4, #0x8]
	ldr		r1, _08326360
	sub		r0, r2, #0x1
	lsl		r0, r0, #0x1
	add		r0, r0, r1
	ldrh	r5, [r0, #0x0]
	str		r5, [r4, #0x10]
	mov		r0, #0xc6
	lsl		r0, r0, #0x3
	add		r1, r5, #0x0
	bl		sub_08327340
	strb	r0, [r4, #0xb]
	ldr		r0, _08326364
	mul		r0, r5
	ldr		r1, _08326368
	add		r0, r0, r1
	ldr		r1, _0832636c
	bl		sub_08327340
	add		r1, r0, #0x0
	str		r1, [r4, #0x14]
	mov		r0, #0x80
	lsl		r0, r0, #0x11
	bl		sub_08327340
	add		r0, #0x1
	asr		r0, r0, #0x1
	str		r0, [r4, #0x18]
	ldr		r0, _08326370
	strh	r6, [r0, #0x0]
	ldr		r4, _08326374
	ldr		r0, _08326378
	add		r1, r5, #0x0
	bl		sub_08327340
	neg		r0, r0
	strh	r0, [r4, #0x0]
	bl		sub_083264d0
	ldr		r1, _0832637c
_08326340:
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x9f
	beq		_08326340
	ldr		r1, _0832637c
_08326348:
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x9f
	bne		_08326348
	ldr		r1, _08326370
	mov		r0, #0x80
	strh	r0, [r1, #0x0]
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x32635A, 0x2

_0832635c:	.4byte 0x03007FF0
_08326360:	.4byte 0x0202E05C
_08326364:	.4byte 0x00091D1B
_08326368:	.4byte 0x00001388
_0832636c:	.4byte 0x00002710
_08326370:	.4byte Timer0Control
_08326374:	.4byte Timer0Counter_Reload
_08326378:	.4byte 0x00044940
_0832637c:	.4byte VerticalCounter_LY_
	thumb_func_end sub_083262dc

	thumb_func_start sub_08326380
sub_08326380:
	push	{ r4, r5, lr }
	add		r3, r0, #0x0
	ldr		r0, _0832640c
	ldr		r5, [r0, #0x0]
	ldr		r1, [r5, #0x0]
	ldr		r0, _08326410
	cmp		r1, r0
	bne		_08326406
	add		r0, r1, #0x1
	str		r0, [r5, #0x0]
	mov		r4, #0xff
	and		r4, r3
	cmp		r4, #0x0
	beq		_083263a2
	mov		r0, #0x7f
	and		r4, r0
	strb	r4, [r5, #0x5]
_083263a2:
	mov		r4, #0xf0
	lsl		r4, r4, #0x4
	and		r4, r3
	cmp		r4, #0x0
	beq		_083263c2
	lsr		r0, r4, #0x8
	strb	r0, [r5, #0x6]
	mov		r4, #0xc
	add		r0, r5, #0x0
	add		r0, #0x50
	mov		r1, #0x0
_083263b8:
	strb	r1, [r0, #0x0]
	sub		r4, #0x1
	add		r0, #0x40
	cmp		r4, #0x0
	bne		_083263b8
_083263c2:
	mov		r4, #0xf0
	lsl		r4, r4, #0x8
	and		r4, r3
	cmp		r4, #0x0
	beq		_083263d0
	lsr		r0, r4, #0xc
	strb	r0, [r5, #0x7]
_083263d0:
	mov		r4, #0xb0
	lsl		r4, r4, #0x10
	and		r4, r3
	cmp		r4, #0x0
	beq		_083263ee
	mov		r0, #0xc0
	lsl		r0, r0, #0xe
	and		r0, r4
	lsr		r4, r0, #0xe
	ldr		r2, _08326414
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x3f
	and		r0, r1
	orr		r0, r4
	strb	r0, [r2, #0x0]
_083263ee:
	mov		r4, #0xf0
	lsl		r4, r4, #0xc
	and		r4, r3
	cmp		r4, #0x0
	beq		_08326402
	bl		sub_0832646c
	add		r0, r4, #0x0
	bl		sub_083262dc
_08326402:
	ldr		r0, _08326410
	str		r0, [r5, #0x0]
_08326406:
	pop		{ r4, r5 }
	pop		{ r0 }
	bx		r0

_0832640c:	.4byte 0x03007FF0
_08326410:	.4byte 0x68736D53
_08326414:	.4byte SoundPWMControl + 0x1
	thumb_func_end sub_08326380

	thumb_func_start sub_08326418
sub_08326418:
	push	{ r4, r5, r6, r7, lr }
	ldr		r0, _08326464
	ldr		r6, [r0, #0x0]
	ldr		r1, [r6, #0x0]
	ldr		r0, _08326468
	cmp		r1, r0
	bne		_0832645e
	add		r0, r1, #0x1
	str		r0, [r6, #0x0]
	mov		r5, #0xc
	add		r4, r6, #0x0
	add		r4, #0x50
	mov		r0, #0x0
_08326432:
	strb	r0, [r4, #0x0]
	sub		r5, #0x1
	add		r4, #0x40
	cmp		r5, #0x0
	bgt		_08326432
	ldr		r4, [r6, #0x1c]
	cmp		r4, #0x0
	beq		_0832645a
	mov		r5, #0x1
	mov		r7, #0x0
_08326446:
	lsl		r0, r5, #0x18
	lsr		r0, r0, #0x18
	ldr		r1, [r6, #0x2c]
	bl		sub_08327308
	strb	r7, [r4, #0x0]
	add		r5, #0x1
	add		r4, #0x40
	cmp		r5, #0x4
	ble		_08326446
_0832645a:
	ldr		r0, _08326468
	str		r0, [r6, #0x0]
_0832645e:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08326464:	.4byte 0x03007FF0
_08326468:	.4byte 0x68736D53
	thumb_func_end sub_08326418

	thumb_func_start sub_0832646c
sub_0832646c:
	push	{ lr }
	sub		sp, #0x4
	ldr		r0, _083264b8
	ldr		r2, [r0, #0x0]
	ldr		r1, [r2, #0x0]
	ldr		r3, _083264bc
	add		r0, r1, r3
	cmp		r0, #0x1
	bhi		_083264b2
	add		r0, r1, #0x0
	add		r0, #0xa
	str		r0, [r2, #0x0]
	ldr		r3, _083264c0
	ldr		r0, [r3, #0x0]
	mov		r1, #0x80
	lsl		r1, r1, #0x12
	and		r0, r1
	cmp		r0, #0x0
	beq		_08326496
	ldr		r0, _083264c4
	str		r0, [r3, #0x0]
_08326496:
	ldr		r1, _083264c8
	mov		r3, #0x80
	lsl		r3, r3, #0x3
	add		r0, r3, #0x0
	strh	r0, [r1, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	mov		r0, #0xd4
	lsl		r0, r0, #0x2
	add		r1, r2, r0
	ldr		r2, _083264cc
	mov		r0, sp
	bl		sub_083272c4
_083264b2:
	add		sp, #0x4
	pop		{ r0 }
	bx		r0

_083264b8:	.4byte 0x03007FF0
_083264bc:	.4byte 0x978C92AD
_083264c0:	.4byte DMA1WordCount
_083264c4:	.4byte 0x84400004
_083264c8:	.4byte DMA1Control
_083264cc:	.4byte 0x0500018C
	thumb_func_end sub_0832646c

	thumb_func_start sub_083264d0
sub_083264d0:
	push	{ r4, lr }
	ldr		r0, _083264fc
	ldr		r2, [r0, #0x0]
	ldr		r3, [r2, #0x0]
	ldr		r0, _08326500
	cmp		r3, r0
	beq		_083264f4
	ldr		r1, _08326504
	mov		r4, #0xb6
	lsl		r4, r4, #0x8
	add		r0, r4, #0x0
	strh	r0, [r1, #0x0]
	ldrb	r0, [r2, #0x4]
	mov		r0, #0x0
	strb	r0, [r2, #0x4]
	add		r0, r3, #0x0
	sub		r0, #0xa
	str		r0, [r2, #0x0]
_083264f4:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3264FA, 0x2

_083264fc:	.4byte 0x03007FF0
_08326500:	.4byte 0x68736D53
_08326504:	.4byte DMA1Control
	thumb_func_end sub_083264d0

	thumb_func_start sub_08326508
sub_08326508:
	push	{ r4, r5, r6, r7, lr }
	add		r7, r0, #0x0
	add		r6, r1, #0x0
	lsl		r2, r2, #0x18
	lsr		r4, r2, #0x18
	cmp		r4, #0x0
	beq		_0832656c
	cmp		r4, #0x10
	bls		_0832651c
	mov		r4, #0x10
_0832651c:
	ldr		r0, _08326574
	ldr		r5, [r0, #0x0]
	ldr		r1, [r5, #0x0]
	ldr		r0, _08326578
	cmp		r1, r0
	bne		_0832656c
	add		r0, r1, #0x1
	str		r0, [r5, #0x0]
	add		r0, r7, #0x0
	bl		sub_083261fc
	str		r6, [r7, #0x2c]
	strb	r4, [r7, #0x8]
	mov		r0, #0x80
	lsl		r0, r0, #0x18
	str		r0, [r7, #0x4]
	cmp		r4, #0x0
	beq		_08326550
	mov		r1, #0x0
_08326542:
	strb	r1, [r6, #0x0]
	sub		r0, r4, #0x1
	lsl		r0, r0, #0x18
	lsr		r4, r0, #0x18
	add		r6, #0x50
	cmp		r4, #0x0
	bne		_08326542
_08326550:
	ldr		r0, [r5, #0x20]
	cmp		r0, #0x0
	beq		_08326560
	str		r0, [r7, #0x38]
	ldr		r0, [r5, #0x24]
	str		r0, [r7, #0x3c]
	mov		r0, #0x0
	str		r0, [r5, #0x20]
_08326560:
	str		r7, [r5, #0x24]
	ldr		r0, _0832657c
	str		r0, [r5, #0x20]
	ldr		r0, _08326578
	str		r0, [r5, #0x0]
	str		r0, [r7, #0x34]
_0832656c:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x326572, 0x2

_08326574:	.4byte 0x03007FF0
_08326578:	.4byte 0x68736D53
_0832657c:	.4byte 0x0201F801
	thumb_func_end sub_08326508

	thumb_func_start sub_08326580
sub_08326580:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	add		r5, r0, #0x0
	add		r7, r1, #0x0
	ldr		r1, [r5, #0x34]
	ldr		r0, _08326660
	cmp		r1, r0
	bne		_08326656
	ldrb	r0, [r5, #0xb]
	ldrb	r2, [r7, #0x2]
	cmp		r0, #0x0
	beq		_083265c2
	ldr		r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_083265ac
	ldr		r1, [r5, #0x2c]
	mov		r0, #0x40
	ldrb	r1, [r1, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	bne		_083265b8
_083265ac:
	ldr		r1, [r5, #0x4]
	ldrh	r0, [r5, #0x4]
	cmp		r0, #0x0
	beq		_083265c2
	cmp		r1, #0x0
	blt		_083265c2
_083265b8:
	ldrb	r0, [r7, #0x2]
	add		r2, r0, #0x0
	ldrb	r0, [r5, #0x9]
	cmp		r0, r2
	bhi		_08326656
_083265c2:
	ldr		r0, [r5, #0x34]
	add		r0, #0x1
	str		r0, [r5, #0x34]
	mov		r1, #0x0
	str		r1, [r5, #0x4]
	str		r7, [r5, #0x0]
	ldr		r0, [r7, #0x4]
	str		r0, [r5, #0x30]
	strb	r2, [r5, #0x9]
	str		r1, [r5, #0xc]
	mov		r0, #0x96
	strh	r0, [r5, #0x1c]
	strh	r0, [r5, #0x20]
	add		r0, #0x6a
	strh	r0, [r5, #0x1e]
	strh	r1, [r5, #0x22]
	strh	r1, [r5, #0x24]
	mov		r6, #0x0
	ldr		r4, [r5, #0x2c]
	ldrb	r1, [r7, #0x0]
	cmp		r6, r1
	bge		_08326622
	ldrb	r0, [r5, #0x8]
	cmp		r6, r0
	bge		_08326642
	mov		r8, r6
_083265f6:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08325a68
	mov		r0, #0xc0
	strb	r0, [r4, #0x0]
	mov		r1, r8
	str		r1, [r4, #0x20]
	lsl		r1, r6, #0x2
	add		r0, r7, #0x0
	add		r0, #0x8
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	str		r0, [r4, #0x40]
	add		r6, #0x1
	add		r4, #0x50
	ldrb	r0, [r7, #0x0]
	cmp		r6, r0
	bge		_08326622
	ldrb	r1, [r5, #0x8]
	cmp		r6, r1
	blt		_083265f6
_08326622:
	ldrb	r0, [r5, #0x8]
	cmp		r6, r0
	bge		_08326642
	mov		r1, #0x0
	mov		r8, r1
_0832662c:
	add		r0, r5, #0x0
	add		r1, r4, #0x0
	bl		sub_08325a68
	mov		r0, r8
	strb	r0, [r4, #0x0]
	add		r6, #0x1
	add		r4, #0x50
	ldrb	r1, [r5, #0x8]
	cmp		r6, r1
	blt		_0832662c
_08326642:
	mov		r0, #0x80
	ldrb	r1, [r7, #0x3]
	and		r0, r1
	cmp		r0, #0x0
	beq		_08326652
	ldrb	r0, [r7, #0x3]
	bl		sub_08326380
_08326652:
	ldr		r0, _08326660
	str		r0, [r5, #0x34]
_08326656:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08326660:	.4byte 0x68736D53
	thumb_func_end sub_08326580

	thumb_func_start sub_08326664
sub_08326664:
	push	{ r4, r5, r6, lr }
	add		r6, r0, #0x0
	ldr		r1, [r6, #0x34]
	ldr		r0, _083266a0
	cmp		r1, r0
	bne		_0832669a
	add		r0, r1, #0x1
	str		r0, [r6, #0x34]
	ldr		r0, [r6, #0x4]
	mov		r1, #0x80
	lsl		r1, r1, #0x18
	orr		r0, r1
	str		r0, [r6, #0x4]
	ldrb	r4, [r6, #0x8]
	ldr		r5, [r6, #0x2c]
	cmp		r4, #0x0
	ble		_08326696
_08326686:
	add		r0, r6, #0x0
	add		r1, r5, #0x0
	bl		sub_08325a68
	sub		r4, #0x1
	add		r5, #0x50
	cmp		r4, #0x0
	bgt		_08326686
_08326696:
	ldr		r0, _083266a0
	str		r0, [r6, #0x34]
_0832669a:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0

_083266a0:	.4byte 0x68736D53
	thumb_func_end sub_08326664

	thumb_func_start sub_083266a4
sub_083266a4:
	push	{ r4, r5, r6, r7, lr }
	add		r6, r0, #0x0
	ldrh	r1, [r6, #0x24]
	cmp		r1, #0x0
	beq		_08326766
	ldrh	r0, [r6, #0x26]
	sub		r0, #0x1
	strh	r0, [r6, #0x26]
	ldr		r3, _083266e4
	add		r2, r3, #0x0
	lsl		r0, r0, #0x10
	lsr		r3, r0, #0x10
	cmp		r3, #0x0
	bne		_08326766
	strh	r1, [r6, #0x26]
	ldrh	r1, [r6, #0x28]
	mov		r0, #0x2
	and		r0, r1
	cmp		r0, #0x0
	beq		_083266e8
	add		r0, r1, #0x0
	add		r0, #0x10
	strh	r0, [r6, #0x28]
	and		r0, r2
	cmp		r0, #0xff
	bls		_0832673a
	mov		r0, #0x80
	lsl		r0, r0, #0x1
	strh	r0, [r6, #0x28]
	strh	r3, [r6, #0x24]
	b		_0832673a

.incbin "base.gba", 0x3266E2, 0x2

_083266e4:	.4byte 0x0000FFFF

_083266e8:
	add		r0, r1, #0x0
	sub		r0, #0x10
	strh	r0, [r6, #0x28]
	and		r0, r2
	lsl		r0, r0, #0x10
	cmp		r0, #0x0
	bgt		_0832673a
	ldrb	r5, [r6, #0x8]
	ldr		r4, [r6, #0x2c]
	cmp		r5, #0x0
	ble		_0832671a
_083266fe:
	add		r0, r6, #0x0
	add		r1, r4, #0x0
	bl		sub_08325a68
	mov		r0, #0x1
	ldrh	r7, [r6, #0x28]
	and		r0, r7
	cmp		r0, #0x0
	bne		_08326712
	strb	r0, [r4, #0x0]
_08326712:
	sub		r5, #0x1
	add		r4, #0x50
	cmp		r5, #0x0
	bgt		_083266fe
_0832671a:
	mov		r0, #0x1
	ldrh	r1, [r6, #0x28]
	and		r0, r1
	cmp		r0, #0x0
	beq		_0832672e
	ldr		r0, [r6, #0x4]
	mov		r1, #0x80
	lsl		r1, r1, #0x18
	orr		r0, r1
	b		_08326732
_0832672e:
	mov		r0, #0x80
	lsl		r0, r0, #0x18
_08326732:
	str		r0, [r6, #0x4]
	mov		r0, #0x0
	strh	r0, [r6, #0x24]
	b		_08326766
_0832673a:
	ldrb	r5, [r6, #0x8]
	ldr		r4, [r6, #0x2c]
	cmp		r5, #0x0
	ble		_08326766
	mov		r3, #0x80
	mov		r7, #0x0
	mov		r2, #0x3
_08326748:
	ldrb	r1, [r4, #0x0]
	add		r0, r3, #0x0
	and		r0, r1
	cmp		r0, #0x0
	beq		_0832675e
	ldrh	r7, [r6, #0x28]
	lsr		r0, r7, #0x2
	strb	r0, [r4, #0x13]
	add		r0, r1, #0x0
	orr		r0, r2
	strb	r0, [r4, #0x0]
_0832675e:
	sub		r5, #0x1
	add		r4, #0x50
	cmp		r5, #0x0
	bgt		_08326748
_08326766:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_083266a4

	thumb_func_start sub_0832676c
sub_0832676c:
	push	{ r4, lr }
	add		r2, r1, #0x0
	mov		r0, #0x1
	ldrb	r1, [r2, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_083267d0
	ldrb	r3, [r2, #0x13]
	ldrb	r1, [r2, #0x12]
	add		r0, r3, #0x0
	mul		r0, r1
	lsr		r3, r0, #0x5
	ldrb	r4, [r2, #0x18]
	cmp		r4, #0x1
	bne		_08326794
	mov		r0, #0x16
	ldrsb	r0, [r2, r0]
	add		r0, #0x80
	mul		r0, r3
	lsr		r3, r0, #0x7
_08326794:
	mov		r0, #0x14
	ldrsb	r0, [r2, r0]
	lsl		r0, r0, #0x1
	mov		r1, #0x15
	ldrsb	r1, [r2, r1]
	add		r1, r0, r1
	cmp		r4, #0x2
	bne		_083267aa
	mov		r0, #0x16
	ldrsb	r0, [r2, r0]
	add		r1, r1, r0
_083267aa:
	mov		r0, #0x80
	neg		r0, r0
	cmp		r1, r0
	bge		_083267b6
	add		r1, r0, #0x0
	b		_083267bc
_083267b6:
	cmp		r1, #0x7f
	ble		_083267bc
	mov		r1, #0x7f
_083267bc:
	add		r0, r1, #0x0
	add		r0, #0x80
	mul		r0, r3
	lsr		r0, r0, #0x8
	strb	r0, [r2, #0x10]
	mov		r0, #0x7f
	sub		r0, r0, r1
	mul		r0, r3
	lsr		r0, r0, #0x8
	strb	r0, [r2, #0x11]
_083267d0:
	ldrb	r1, [r2, #0x0]
	mov		r0, #0x4
	and		r0, r1
	add		r3, r1, #0x0
	cmp		r0, #0x0
	beq		_08326814
	mov		r0, #0xe
	ldrsb	r0, [r2, r0]
	ldrb	r1, [r2, #0xf]
	mul		r0, r1
	mov		r1, #0xc
	ldrsb	r1, [r2, r1]
	add		r1, r1, r0
	lsl		r1, r1, #0x2
	mov		r0, #0xa
	ldrsb	r0, [r2, r0]
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	mov		r0, #0xb
	ldrsb	r0, [r2, r0]
	lsl		r0, r0, #0x8
	add		r1, r1, r0
	ldrb	r0, [r2, #0xd]
	add		r1, r0, r1
	ldrb	r0, [r2, #0x18]
	cmp		r0, #0x0
	bne		_0832680e
	mov		r0, #0x16
	ldrsb	r0, [r2, r0]
	lsl		r0, r0, #0x4
	add		r1, r1, r0
_0832680e:
	asr		r0, r1, #0x8
	strb	r0, [r2, #0x8]
	strb	r1, [r2, #0x9]
_08326814:
	mov		r0, #0xfa
	and		r0, r3
	strb	r0, [r2, #0x0]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x326820, 0x5AC
	thumb_func_end sub_0832676c

	thumb_func_start sub_08326dcc
sub_08326dcc:
	push	{ r4, lr }
	add		r2, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	ldr		r3, [r2, #0x34]
	ldr		r0, _08326df0
	cmp		r3, r0
	bne		_08326de8
	strh	r1, [r2, #0x1e]
	ldrh	r4, [r2, #0x1c]
	add		r0, r1, #0x0
	mul		r0, r4
	asr		r0, r0, #0x8
	strh	r0, [r2, #0x20]
_08326de8:
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x326DEE, 0x2

_08326df0:	.4byte 0x68736D53
	thumb_func_end sub_08326dcc

	thumb_func_start sub_08326df4
sub_08326df4:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	lsl		r6, r2, #0x10
	ldr		r3, [r4, #0x34]
	ldr		r0, _08326e58
	cmp		r3, r0
	bne		_08326e4c
	add		r0, r3, #0x1
	str		r0, [r4, #0x34]
	ldrb	r2, [r4, #0x8]
	ldr		r1, [r4, #0x2c]
	mov		r5, #0x1
	cmp		r2, #0x0
	ble		_08326e48
	mov		r0, #0x80
	mov		r8, r0
	lsr		r6, r6, #0x12
	mov		r0, #0x3
	mov		r12, r0
_08326e24:
	add		r0, r7, #0x0
	and		r0, r5
	cmp		r0, #0x0
	beq		_08326e3e
	ldrb	r3, [r1, #0x0]
	mov		r0, r8
	and		r0, r3
	cmp		r0, #0x0
	beq		_08326e3e
	strb	r6, [r1, #0x13]
	mov		r0, r12
	orr		r0, r3
	strb	r0, [r1, #0x0]
_08326e3e:
	sub		r2, #0x1
	add		r1, #0x50
	lsl		r5, r5, #0x1
	cmp		r2, #0x0
	bgt		_08326e24
_08326e48:
	ldr		r0, _08326e58
	str		r0, [r4, #0x34]
_08326e4c:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08326e58:	.4byte 0x68736D53
	thumb_func_end sub_08326df4

	thumb_func_start sub_08326e5c
sub_08326e5c:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r12, r1
	lsl		r2, r2, #0x10
	lsr		r6, r2, #0x10
	ldr		r3, [r4, #0x34]
	ldr		r0, _08326ecc
	cmp		r3, r0
	bne		_08326ebe
	add		r0, r3, #0x1
	str		r0, [r4, #0x34]
	ldrb	r2, [r4, #0x8]
	ldr		r3, [r4, #0x2c]
	mov		r5, #0x1
	cmp		r2, #0x0
	ble		_08326eba
	mov		r0, #0x80
	mov		r9, r0
	lsl		r0, r6, #0x10
	asr		r7, r0, #0x18
	mov		r0, #0xc
	mov		r8, r0
_08326e94:
	mov		r0, r12
	and		r0, r5
	cmp		r0, #0x0
	beq		_08326eb0
	ldrb	r1, [r3, #0x0]
	mov		r0, r9
	and		r0, r1
	cmp		r0, #0x0
	beq		_08326eb0
	strb	r7, [r3, #0xb]
	strb	r6, [r3, #0xd]
	mov		r0, r8
	orr		r0, r1
	strb	r0, [r3, #0x0]
_08326eb0:
	sub		r2, #0x1
	add		r3, #0x50
	lsl		r5, r5, #0x1
	cmp		r2, #0x0
	bgt		_08326e94
_08326eba:
	ldr		r0, _08326ecc
	str		r0, [r4, #0x34]
_08326ebe:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08326ecc:	.4byte 0x68736D53
	thumb_func_end sub_08326e5c

	thumb_func_start sub_08326ed0
sub_08326ed0:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	add		r4, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r7, r1, #0x10
	lsl		r2, r2, #0x18
	lsr		r6, r2, #0x18
	ldr		r3, [r4, #0x34]
	ldr		r0, _08326f34
	cmp		r3, r0
	bne		_08326f28
	add		r0, r3, #0x1
	str		r0, [r4, #0x34]
	ldrb	r2, [r4, #0x8]
	ldr		r1, [r4, #0x2c]
	mov		r5, #0x1
	cmp		r2, #0x0
	ble		_08326f24
	mov		r0, #0x80
	mov		r8, r0
	mov		r0, #0x3
	mov		r12, r0
_08326f00:
	add		r0, r7, #0x0
	and		r0, r5
	cmp		r0, #0x0
	beq		_08326f1a
	ldrb	r3, [r1, #0x0]
	mov		r0, r8
	and		r0, r3
	cmp		r0, #0x0
	beq		_08326f1a
	strb	r6, [r1, #0x15]
	mov		r0, r12
	orr		r0, r3
	strb	r0, [r1, #0x0]
_08326f1a:
	sub		r2, #0x1
	add		r1, #0x50
	lsl		r5, r5, #0x1
	cmp		r2, #0x0
	bgt		_08326f00
_08326f24:
	ldr		r0, _08326f34
	str		r0, [r4, #0x34]
_08326f28:
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

_08326f34:	.4byte 0x68736D53
	thumb_func_end sub_08326ed0

	thumb_func_start sub_08326f38
sub_08326f38:
	add		r1, r0, #0x0
	mov		r2, #0x0
	mov		r0, #0x0
	strb	r0, [r1, #0x1a]
	strb	r0, [r1, #0x16]
	ldrb	r0, [r1, #0x18]
	cmp		r0, #0x0
	bne		_08326f4c
	mov		r0, #0xc
	b		_08326f4e
_08326f4c:
	mov		r0, #0x3
_08326f4e:
	ldrb	r2, [r1, #0x0]
	orr		r0, r2
	strb	r0, [r1, #0x0]
	bx		lr

.incbin "base.gba", 0x326F56, 0x2
	thumb_func_end sub_08326f38

	thumb_func_start sub_08326f58
sub_08326f58:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r10, r1
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r8, r2
	ldr		r1, [r6, #0x34]
	ldr		r0, _08326fc8
	cmp		r1, r0
	bne		_08326fb8
	add		r0, r1, #0x1
	str		r0, [r6, #0x34]
	ldrb	r5, [r6, #0x8]
	ldr		r4, [r6, #0x2c]
	mov		r7, #0x1
	cmp		r5, #0x0
	ble		_08326fb4
	mov		r9, r8
_08326f88:
	mov		r0, r10
	and		r0, r7
	cmp		r0, #0x0
	beq		_08326faa
	mov		r0, #0x80
	ldrb	r1, [r4, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_08326faa
	mov		r0, r8
	strb	r0, [r4, #0x17]
	mov		r1, r9
	cmp		r1, #0x0
	bne		_08326faa
	add		r0, r4, #0x0
	bl		sub_08326f38
_08326faa:
	sub		r5, #0x1
	add		r4, #0x50
	lsl		r7, r7, #0x1
	cmp		r5, #0x0
	bgt		_08326f88
_08326fb4:
	ldr		r0, _08326fc8
	str		r0, [r6, #0x34]
_08326fb8:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x326FC6, 0x2

_08326fc8:	.4byte 0x68736D53
	thumb_func_end sub_08326f58

	thumb_func_start sub_08326fcc
sub_08326fcc:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	add		r6, r0, #0x0
	lsl		r1, r1, #0x10
	lsr		r1, r1, #0x10
	mov		r10, r1
	lsl		r2, r2, #0x18
	lsr		r2, r2, #0x18
	mov		r8, r2
	ldr		r1, [r6, #0x34]
	ldr		r0, _0832703c
	cmp		r1, r0
	bne		_0832702c
	add		r0, r1, #0x1
	str		r0, [r6, #0x34]
	ldrb	r5, [r6, #0x8]
	ldr		r4, [r6, #0x2c]
	mov		r7, #0x1
	cmp		r5, #0x0
	ble		_08327028
	mov		r9, r8
_08326ffc:
	mov		r0, r10
	and		r0, r7
	cmp		r0, #0x0
	beq		_0832701e
	mov		r0, #0x80
	ldrb	r1, [r4, #0x0]
	and		r0, r1
	cmp		r0, #0x0
	beq		_0832701e
	mov		r0, r8
	strb	r0, [r4, #0x19]
	mov		r1, r9
	cmp		r1, #0x0
	bne		_0832701e
	add		r0, r4, #0x0
	bl		sub_08326f38
_0832701e:
	sub		r5, #0x1
	add		r4, #0x50
	lsl		r7, r7, #0x1
	cmp		r5, #0x0
	bgt		_08326ffc
_08327028:
	ldr		r0, _0832703c
	str		r0, [r6, #0x34]
_0832702c:
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x32703A, 0x2

_0832703c:	.4byte 0x68736D53
	thumb_func_end sub_08326fcc

	thumb_func_start sub_08327040
sub_08327040:
	push	{ r4, r5, r6, lr }
	add		r4, r0, #0x0
	add		r6, r1, #0x0
	ldr		r1, [r6, #0x40]
	ldrb	r5, [r1, #0x0]
	add		r2, r1, #0x1
	str		r2, [r6, #0x40]
	ldr		r0, [r4, #0x18]
	ldrb	r1, [r1, #0x1]
	add		r3, r1, r0
	add		r0, r2, #0x1
	str		r0, [r6, #0x40]
	ldrb	r2, [r2, #0x1]
	add		r0, #0x1
	str		r0, [r6, #0x40]
	cmp		r5, #0x11
	bls		_08327064
	b		_08327192
_08327064:
	lsl		r0, r5, #0x2
	ldr		r1, _08327070
	add		r0, r0, r1
	ldr		r0, [r0, #0x0]
	mov		pc, r0

.incbin "base.gba", 0x32706E, 0x2

_08327070:	.4byte 0x02021074

.incbin "base.gba", 0x327074, 0x11E

_08327192:
	pop		{ r4, r5, r6 }
	pop		{ r0 }
	bx		r0
	thumb_func_end sub_08327040

	thumb_func_start sub_08327198
sub_08327198:
	push	{ lr }
	ldr		r2, [r1, #0x40]
	ldrb	r3, [r2, #0x0]
	add		r2, #0x1
	str		r2, [r1, #0x40]
	ldr		r2, _083271b4
	lsl		r3, r3, #0x2
	add		r3, r3, r2
	ldr		r2, [r3, #0x0]
	bl		sub_0832730c
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3271B2, 0x2

_083271b4:	.4byte 0x0202E190
	thumb_func_end sub_08327198

	thumb_func_start sub_083271b8
sub_083271b8:
	push	{ lr }
	ldr		r2, _083271c8
	ldr		r2, [r2, #0x0]
	bl		sub_0832730c
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x3271C6, 0x2

_083271c8:	.4byte 0x03006910
	thumb_func_end sub_083271b8

	thumb_func_start sub_083271cc
sub_083271cc:
	push	{ r4, lr }
	ldr		r2, [r1, #0x40]
	ldr		r0, _08327204
	and		r4, r0
	ldrb	r0, [r2, #0x0]
	orr		r4, r0
	ldrb	r0, [r2, #0x1]
	lsl		r3, r0, #0x8
	ldr		r0, _08327208
	and		r4, r0
	orr		r4, r3
	ldrb	r0, [r2, #0x2]
	lsl		r3, r0, #0x10
	ldr		r0, _0832720c
	and		r4, r0
	orr		r4, r3
	ldrb	r0, [r2, #0x3]
	lsl		r3, r0, #0x18
	ldr		r0, _08327210
	and		r4, r0
	orr		r4, r3
	str		r4, [r1, #0x28]
	add		r2, #0x4
	str		r2, [r1, #0x40]
	pop		{ r4 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x327202, 0x2

_08327204:	.4byte 0xFFFFFF00
_08327208:	.4byte 0xFFFF00FF
_0832720c:	.4byte 0xFF00FFFF
_08327210:	.4byte 0x00FFFFFF

.incbin "base.gba", 0x327214, 0xA8
	thumb_func_end sub_083271cc

	thumb_func_start sub_083272bc
sub_083272bc:
	svc		0xa
	bx		lr
	thumb_func_end sub_083272bc

	thumb_func_start sub_083272c0
sub_083272c0:
	svc		0xc
	bx		lr
	thumb_func_end sub_083272c0

	thumb_func_start sub_083272c4
sub_083272c4:
	svc		0xb
	bx		lr
	thumb_func_end sub_083272c4

	thumb_func_start sub_083272c8
sub_083272c8:
	svc		0x6
	bx		lr

.incbin "base.gba", 0x3272CC, 0x8
	thumb_func_end sub_083272c8

	thumb_func_start sub_083272d4
sub_083272d4:
	svc		0x12
	bx		lr

.incbin "base.gba", 0x3272D8, 0x4
	thumb_func_end sub_083272d4

	thumb_func_start sub_083272dc
sub_083272dc:
	mov		r1, #0x1
	svc		0x25
	bx		lr

.incbin "base.gba", 0x3272E2, 0x1A
	thumb_func_end sub_083272dc

	thumb_func_start sub_083272fc
sub_083272fc:
	mov		r2, #0x0
	svc		0x5
	bx		lr

.incbin "base.gba", 0x327302, 0x2
	thumb_func_end sub_083272fc

	thumb_func_start sub_08327304
sub_08327304:
	bx		r0

.incbin "base.gba", 0x327306, 0x2
	thumb_func_end sub_08327304

	thumb_func_start sub_08327308
sub_08327308:
	bx		r1

.incbin "base.gba", 0x32730A, 0x2
	thumb_func_end sub_08327308

	thumb_func_start sub_0832730c
sub_0832730c:
	bx		r2

.incbin "base.gba", 0x32730E, 0x12
	thumb_func_end sub_0832730c

	thumb_func_start sub_08327320
sub_08327320:
	bx		r7

.incbin "base.gba", 0x327322, 0x1E
	thumb_func_end sub_08327320

	thumb_func_start sub_08327340
sub_08327340:
	cmp		r1, #0x0
	beq		_083273c8
	push	{ r4 }
	add		r4, r0, #0x0
	eor		r4, r1
	mov		r12, r4
	mov		r3, #0x1
	mov		r2, #0x0
	cmp		r1, #0x0
	bpl		_08327356
	neg		r1, r1
_08327356:
	cmp		r0, #0x0
	bpl		_0832735c
	neg		r0, r0
_0832735c:
	cmp		r0, r1
	bcc		_083273ba
	mov		r4, #0x1
	lsl		r4, r4, #0x1c
_08327364:
	cmp		r1, r4
	bcs		_08327372
	cmp		r1, r0
	bcs		_08327372
	lsl		r1, r1, #0x4
	lsl		r3, r3, #0x4
	b		_08327364
_08327372:
	lsl		r4, r4, #0x3
_08327374:
	cmp		r1, r4
	bcs		_08327382
	cmp		r1, r0
	bcs		_08327382
	lsl		r1, r1, #0x1
	lsl		r3, r3, #0x1
	b		_08327374
_08327382:
	cmp		r0, r1
	bcc		_0832738a
	sub		r0, r0, r1
	orr		r2, r3
_0832738a:
	lsr		r4, r1, #0x1
	cmp		r0, r4
	bcc		_08327396
	sub		r0, r0, r4
	lsr		r4, r3, #0x1
	orr		r2, r4
_08327396:
	lsr		r4, r1, #0x2
	cmp		r0, r4
	bcc		_083273a2
	sub		r0, r0, r4
	lsr		r4, r3, #0x2
	orr		r2, r4
_083273a2:
	lsr		r4, r1, #0x3
	cmp		r0, r4
	bcc		_083273ae
	sub		r0, r0, r4
	lsr		r4, r3, #0x3
	orr		r2, r4
_083273ae:
	cmp		r0, #0x0
	beq		_083273ba
	lsr		r3, r3, #0x4
	beq		_083273ba
	lsr		r1, r1, #0x4
	b		_08327382
_083273ba:
	add		r0, r2, #0x0
	mov		r4, r12
	cmp		r4, #0x0
	bpl		_083273c4
	neg		r0, r0
_083273c4:
	pop		{ r4 }
	mov		pc, lr
_083273c8:
	push	{ lr }
	bl		sub_083273d4
	mov		r0, #0x0
	pop		{ pc }

.incbin "base.gba", 0x3273D2, 0x2
	thumb_func_end sub_08327340

	thumb_func_start sub_083273d4
sub_083273d4:
	mov		pc, lr

.incbin "base.gba", 0x3273D6, 0x2
	thumb_func_end sub_083273d4

	thumb_func_start sub_083273d8
sub_083273d8:
	cmp		r1, #0x0
	beq		_08327446
	mov		r3, #0x1
	mov		r2, #0x0
	push	{ r4 }
	cmp		r0, r1
	bcc		_08327440
	mov		r4, #0x1
	lsl		r4, r4, #0x1c
_083273ea:
	cmp		r1, r4
	bcs		_083273f8
	cmp		r1, r0
	bcs		_083273f8
	lsl		r1, r1, #0x4
	lsl		r3, r3, #0x4
	b		_083273ea
_083273f8:
	lsl		r4, r4, #0x3
_083273fa:
	cmp		r1, r4
	bcs		_08327408
	cmp		r1, r0
	bcs		_08327408
	lsl		r1, r1, #0x1
	lsl		r3, r3, #0x1
	b		_083273fa
_08327408:
	cmp		r0, r1
	bcc		_08327410
	sub		r0, r0, r1
	orr		r2, r3
_08327410:
	lsr		r4, r1, #0x1
	cmp		r0, r4
	bcc		_0832741c
	sub		r0, r0, r4
	lsr		r4, r3, #0x1
	orr		r2, r4
_0832741c:
	lsr		r4, r1, #0x2
	cmp		r0, r4
	bcc		_08327428
	sub		r0, r0, r4
	lsr		r4, r3, #0x2
	orr		r2, r4
_08327428:
	lsr		r4, r1, #0x3
	cmp		r0, r4
	bcc		_08327434
	sub		r0, r0, r4
	lsr		r4, r3, #0x3
	orr		r2, r4
_08327434:
	cmp		r0, #0x0
	beq		_08327440
	lsr		r3, r3, #0x4
	beq		_08327440
	lsr		r1, r1, #0x4
	b		_08327408
_08327440:
	add		r0, r2, #0x0
	pop		{ r4 }
	mov		pc, lr
_08327446:
	push	{ lr }
	bl		sub_083273d4
	mov		r0, #0x0
	pop		{ pc }
	thumb_func_end sub_083273d8

	thumb_func_start sub_08327450
sub_08327450:
	cmp		r1, #0x0
	beq		_08327506
	mov		r3, #0x1
	cmp		r0, r1
	bcs		_0832745c
	mov		pc, lr
_0832745c:
	push	{ r4 }
	mov		r4, #0x1
	lsl		r4, r4, #0x1c
_08327462:
	cmp		r1, r4
	bcs		_08327470
	cmp		r1, r0
	bcs		_08327470
	lsl		r1, r1, #0x4
	lsl		r3, r3, #0x4
	b		_08327462
_08327470:
	lsl		r4, r4, #0x3
_08327472:
	cmp		r1, r4
	bcs		_08327480
	cmp		r1, r0
	bcs		_08327480
	lsl		r1, r1, #0x1
	lsl		r3, r3, #0x1
	b		_08327472
_08327480:
	mov		r2, #0x0
	cmp		r0, r1
	bcc		_08327488
	sub		r0, r0, r1
_08327488:
	lsr		r4, r1, #0x1
	cmp		r0, r4
	bcc		_0832749a
	sub		r0, r0, r4
	mov		r12, r3
	mov		r4, #0x1
	ror		r3, r4
	orr		r2, r3
	mov		r3, r12
_0832749a:
	lsr		r4, r1, #0x2
	cmp		r0, r4
	bcc		_083274ac
	sub		r0, r0, r4
	mov		r12, r3
	mov		r4, #0x2
	ror		r3, r4
	orr		r2, r3
	mov		r3, r12
_083274ac:
	lsr		r4, r1, #0x3
	cmp		r0, r4
	bcc		_083274be
	sub		r0, r0, r4
	mov		r12, r3
	mov		r4, #0x3
	ror		r3, r4
	orr		r2, r3
	mov		r3, r12
_083274be:
	mov		r12, r3
	cmp		r0, #0x0
	beq		_083274cc
	lsr		r3, r3, #0x4
	beq		_083274cc
	lsr		r1, r1, #0x4
	b		_08327480
_083274cc:
	mov		r4, #0xe
	lsl		r4, r4, #0x1c
	and		r2, r4
	bne		_083274d8
	pop		{ r4 }
	mov		pc, lr
_083274d8:
	mov		r3, r12
	mov		r4, #0x3
	ror		r3, r4
	tst		r2, r3
	beq		_083274e6
	lsr		r4, r1, #0x3
	add		r0, r0, r4
_083274e6:
	mov		r3, r12
	mov		r4, #0x2
	ror		r3, r4
	tst		r2, r3
	beq		_083274f4
	lsr		r4, r1, #0x2
	add		r0, r0, r4
_083274f4:
	mov		r3, r12
	mov		r4, #0x1
	ror		r3, r4
	tst		r2, r3
	beq		_08327502
	lsr		r4, r1, #0x1
	add		r0, r0, r4
_08327502:
	pop		{ r4 }
	mov		pc, lr
_08327506:
	push	{ lr }
	bl		sub_083273d4
	mov		r0, #0x0
	pop		{ pc }

.incbin "base.gba", 0x327510, 0x40
	thumb_func_end sub_08327450

	thumb_func_start sub_08327550
sub_08327550:
	ldr		r2, _0832755c
	lsl		r0, r0, #0x2
	add		r0, r0, r2
	str		r1, [r0, #0x0]
	bx		lr

.incbin "base.gba", 0x32755A, 0x2

_0832755c:	.4byte 0x030051E0
	thumb_func_end sub_08327550

	thumb_func_start sub_08327560
sub_08327560:
	add		r2, r1, #0x0
	cmp		r0, #0x1
	beq		_08327590
	cmp		r0, #0x1
	bgt		_08327578
	cmp		r0, #0x0
	beq		_08327584
	ldr		r1, _08327574
	b		_083275a4

.incbin "base.gba", 0x327572, 0x2

_08327574:	.4byte 0x030027A0

_08327578:
	cmp		r0, #0x2
	beq		_0832759c
	ldr		r1, _08327580
	b		_083275a4

_08327580:	.4byte 0x030027A0

_08327584:
	ldr		r0, _0832758c
	str		r2, [r0, #0x0]
	add		r1, r0, #0x0
	b		_083275a4

_0832758c:	.4byte 0x030027A0

_08327590:
	ldr		r1, _08327598
	ldr		r0, [r1, #0x0]
	and		r0, r2
	b		_083275a2

_08327598:	.4byte 0x030027A0

_0832759c:
	ldr		r1, _083275bc
	ldr		r0, [r1, #0x0]
	orr		r0, r2
_083275a2:
	str		r0, [r1, #0x0]
_083275a4:
	ldr		r0, _083275c0
	ldr		r1, [r1, #0x0]
	strh	r1, [r0, #0x0]
	mov		r2, #0x80
	lsl		r2, r2, #0x9
	and		r2, r1
	cmp		r2, #0x0
	beq		_083275c8
	ldr		r1, _083275c4
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	b		_083275cc

_083275bc:	.4byte 0x030027A0
_083275c0:	.4byte InterruptEnableRegister
_083275c4:	.4byte InterruptMasterEnableRegister

_083275c8:
	ldr		r0, _083275d0
	strh	r2, [r0, #0x0]
_083275cc:
	bx		lr

.incbin "base.gba", 0x3275CE, 0x2

_083275d0:	.4byte InterruptMasterEnableRegister
	thumb_func_end sub_08327560

	thumb_func_start sub_083275d4
sub_083275d4:
	lsl		r2, r2, #0x10
	lsr		r2, r2, #0x10
	ldr		r3, _083275fc
	strh	r0, [r3, #0x0]
	add		r3, #0x2
	asr		r0, r0, #0x10
	strh	r0, [r3, #0x0]
	ldr		r0, _08327600
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	asr		r1, r1, #0x10
	strh	r1, [r0, #0x0]
	add		r0, #0x2
	strh	r2, [r0, #0x0]
	ldr		r1, _08327604
	mov		r2, #0x80
	lsl		r2, r2, #0x8
	add		r0, r2, #0x0
	strh	r0, [r1, #0x0]
	bx		lr

_083275fc:	.4byte DMA3SourceAddress
_08327600:	.4byte DMA3DestinationAddress
_08327604:	.4byte DMA3Control

.incbin "base.gba", 0x327608, 0x30
	thumb_func_end sub_083275d4

	thumb_func_start sub_08327638
sub_08327638:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	cmp		r3, #0x0
	ble		_0832766e
	lsl		r0, r0, #0x5
	mov		r4, #0xc0
	lsl		r4, r4, #0x13
	add		r6, r0, r4
	add		r5, r1, #0x0
	lsl		r0, r2, #0x14
	mov		r8, r0
	lsl		r7, r2, #0x5
	add		r4, r3, #0x0
_08327654:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r3, r8
	asr		r2, r3, #0x10
	bl		sub_083275d4
	mov		r0, #0x80
	lsl		r0, r0, #0x3
	add		r6, r6, r0
	add		r5, r5, r7
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_08327654
_0832766e:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7, pc }
	thumb_func_end sub_08327638

	thumb_func_start sub_08327674
sub_08327674:
	push	{ r4, lr }
	mov		r4, #0x80
	lsl		r4, r4, #0x4
	add		r0, r0, r4
	bl		sub_08327638
	pop		{ r4, pc }

.incbin "base.gba", 0x327682, 0x2
	thumb_func_end sub_08327674

	thumb_func_start sub_08327684
sub_08327684:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r8
	push	{ r7 }
	cmp		r3, #0x0
	ble		_083276b0
	add		r6, r0, #0x0
	add		r5, r1, #0x0
	lsl		r0, r2, #0x10
	mov		r8, r0
	lsl		r7, r2, #0x1
	add		r4, r3, #0x0
_0832769a:
	add		r0, r5, #0x0
	add		r1, r6, #0x0
	mov		r3, r8
	asr		r2, r3, #0x10
	bl		sub_083275d4
	add		r6, #0x40
	add		r5, r5, r7
	sub		r4, #0x1
	cmp		r4, #0x0
	bne		_0832769a
_083276b0:
	pop		{ r3 }
	mov		r8, r3
	pop		{ r4, r5, r6, r7, pc }

.incbin "base.gba", 0x3276B6, 0x1894A
	thumb_func_end sub_08327684


.incbin "base.gba", 0x340000, 0x994
	thumb_func_start sub_08340994
sub_08340994:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	sub		sp, #0x4
	add		r5, r0, #0x0
	ldr		r3, _08340a5c
	mov		r4, #0x0
	strh	r4, [r3, #0x0]
	ldr		r2, _08340a60
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08340a64
	and		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	strh	r0, [r3, #0x0]
	ldr		r0, _08340a68
	strh	r4, [r0, #0x0]
	sub		r2, #0xd8
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	str		r0, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	ldr		r3, _08340a6c
	add		r1, r3, #0x0
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x0
	str		r0, [sp, #0x0]
	ldr		r4, _08340a70
	ldr		r2, _08340a74
	mov		r0, sp
	add		r1, r4, #0x0
	bl		sub_0834131c
	strb	r5, [r4, #0x2]
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r4, #0x14]
	add		r0, r4, #0x0
	add		r0, #0x60
	str		r0, [r4, #0x28]
	add		r0, #0x10
	str		r0, [r4, #0x2C]
	mov		r3, #0x0
	add		r5, r4, #0x0
	add		r5, #0xa0
	mov		r2, #0x0
	mov		r7, #0x30
	add		r7, r7, r4
	mov		r8, r7
	mov		r0, #0x80
	add		r0, r0, r4
	mov		r12, r0
	add		r6, r4, #0x0
	add		r6, #0x90
	mov		r7, #0x40
	add		r7, r7, r4
	mov		r9, r7
_08340a0a:
	lsl		r1, r3, #0x2
	mov		r7, r12
	add		r0, r2, r7
	mov		r7, r8
	add		r7, #0x4
	mov		r8, r7
	sub		r7, #0x4
	stmia	r7!, { r0 }
	add		r0, r2, r6
	mov		r7, r9
	add		r7, #0x4
	mov		r9, r7
	sub		r7, #0x4
	stmia	r7!, { r0 }
	add		r0, r4, #0x0
	add		r0, #0x50
	add		r1, r1, r0
	str		r5, [r1, #0x0]
	add		r5, #0x30
	add		r2, #0x30
	add		r3, #0x1
	cmp		r3, #0x3
	ble		_08340a0a
	mov		r0, #0x0
	ldr		r3, _08340a5c
	strh	r0, [r3, #0x0]
	ldr		r2, _08340a60
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x80
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	strh	r0, [r3, #0x0]
	add		sp, #0x4
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x340A5A, 0x2

_08340a5c:	.4byte InterruptMasterEnableRegister
_08340a60:	.4byte InterruptEnableRegister
_08340a64:	.4byte 0x0000FF3F
_08340a68:	.4byte SIOModeSelect_GeneralPurposeData
_08340a6c:	.4byte 0x00004003
_08340a70:	.4byte 0x03000600
_08340a74:	.4byte 0x05000050
	thumb_func_end sub_08340994

	thumb_func_start sub_08340a78
sub_08340a78:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r9
	mov		r6, r8
	push	{ r6, r7 }
	mov		r9, r0
	mov		r12, r1
	mov		r8, r2
	ldr		r5, _08340a98
	ldr		r6, [r5, #0x0]
	ldr		r7, _08340a9c
	ldrb	r0, [r7, #0x1]
	cmp		r0, #0x0
	beq		_08340aa0
	cmp		r0, #0x1
	beq		_08340b0c
	b		_08340b1a

_08340a98:	.4byte SIOControlRegister
_08340a9c:	.4byte 0x03000600

_08340aa0:
	mov		r1, #0x30
	add		r0, r6, #0x0
	and		r0, r1
	cmp		r0, #0x0
	bne		_08340b06
	mov		r0, #0x88
	add		r4, r6, #0x0
	and		r4, r0
	cmp		r4, #0x8
	bne		_08340b1a
	mov		r1, #0x4
	add		r0, r6, #0x0
	and		r0, r1
	lsl		r0, r0, #0x18
	lsr		r2, r0, #0x18
	cmp		r2, #0x0
	bne		_08340b06
	ldr		r1, [r7, #0x14]
	mov		r0, #0x1
	neg		r0, r0
	cmp		r1, r0
	bne		_08340b06
	ldr		r3, _08340b4c
	strh	r2, [r3, #0x0]
	ldr		r2, _08340b50
	ldrh	r1, [r2, #0x0]
	ldr		r0, _08340b54
	and		r0, r1
	strh	r0, [r2, #0x0]
	ldrh	r0, [r2, #0x0]
	mov		r1, #0x40
	orr		r0, r1
	strh	r0, [r2, #0x0]
	mov		r0, #0x1
	strh	r0, [r3, #0x0]
	ldrb	r1, [r5, #0x1]
	mov		r0, #0x41
	neg		r0, r0
	and		r0, r1
	strb	r0, [r5, #0x1]
	ldr		r1, _08340b58
	mov		r0, #0xc0
	strh	r0, [r1, #0x0]
	sub		r1, #0xf6
	ldr		r0, _08340b5c
	str		r0, [r1, #0x0]
	strb	r4, [r7, #0x0]
	ldrb	r0, [r5, #0x0]
	mov		r1, #0x80
	orr		r0, r1
	strb	r0, [r5, #0x0]
_08340b06:
	ldr		r1, _08340b60
	mov		r0, #0x1
	strb	r0, [r1, #0x1]
_08340b0c:
	mov		r0, r12
	bl		sub_08340c64
	mov		r0, r9
	mov		r1, r8
	bl		sub_08340b94
_08340b1a:
	ldr		r1, _08340b60
	ldrb	r0, [r1, #0xB]
	add		r0, #0x1
	strb	r0, [r1, #0xB]
	ldrb	r3, [r1, #0x3]
	ldrb	r2, [r1, #0x8]
	mov		r0, #0x10
	and		r0, r2
	orr		r3, r0
	mov		r0, #0x20
	and		r0, r2
	orr		r3, r0
	mov		r0, #0x40
	and		r0, r2
	orr		r3, r0
	ldrb	r0, [r1, #0x2]
	lsl		r2, r0, #0x8
	ldrb	r0, [r1, #0x0]
	cmp		r0, #0x8
	bne		_08340b64
	mov		r0, #0x80
	orr		r0, r2
	orr		r0, r3
	b		_08340b68

.incbin "base.gba", 0x340B4A, 0x2

_08340b4c:	.4byte InterruptMasterEnableRegister
_08340b50:	.4byte InterruptEnableRegister
_08340b54:	.4byte 0x0000FF7F
_08340b58:	.4byte InterruptRequestFlags_IRQAcknowledge
_08340b5c:	.4byte 0x000092C6
_08340b60:	.4byte 0x03000600

_08340b64:
	add		r0, r3, #0x0
	orr		r0, r2
_08340b68:
	add		r2, r0, #0x0
	ldrb	r0, [r1, #0x9]
	cmp		r0, #0x0
	beq		_08340b76
	mov		r0, #0x80
	lsl		r0, r0, #0x5
	orr		r2, r0
_08340b76:
	add		r1, r2, #0x0
	lsl		r0, r6, #0x1a
	lsr		r0, r0, #0x1e
	cmp		r0, #0x3
	bls		_08340b86
	mov		r0, #0x80
	lsl		r0, r0, #0x6
	orr		r1, r0
_08340b86:
	add		r0, r1, #0x0
	pop		{ r3, r4 }
	mov		r8, r3
	mov		r9, r4
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1
	thumb_func_end sub_08340a78

	thumb_func_start sub_08340b94
sub_08340b94:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, #0x0
	ldr		r5, _08340c54
	ldr		r4, [r5, #0x28]
	mov		r2, #0x1
	and		r1, r2
	lsl		r1, r1, #0x4
	ldrb	r3, [r4, #0x1]
	mov		r2, #0x11
	neg		r2, r2
	and		r2, r3
	orr		r2, r1
	strb	r2, [r4, #0x1]
	ldr		r6, [r5, #0x28]
	ldr		r1, _08340c58
	ldrb	r1, [r1, #0x3]
	mov		r3, #0x1
	add		r2, r3, #0x0
	and		r2, r1
	lsl		r2, r2, #0x5
	ldrb	r4, [r6, #0x1]
	mov		r1, #0x21
	neg		r1, r1
	and		r1, r4
	orr		r1, r2
	strb	r1, [r6, #0x1]
	ldr		r4, [r5, #0x28]
	ldrb	r1, [r5, #0x8]
	lsl		r1, r1, #0x19
	lsr		r1, r1, #0x1f
	and		r3, r1
	lsl		r3, r3, #0x6
	ldrb	r2, [r4, #0x1]
	mov		r1, #0x41
	neg		r1, r1
	and		r1, r2
	orr		r1, r3
	strb	r1, [r4, #0x1]
	ldr		r2, [r5, #0x28]
	ldrb	r1, [r5, #0xB]
	strb	r1, [r2, #0x0]
	ldr		r4, [r5, #0x28]
	ldrb	r2, [r5, #0x2]
	ldrb	r1, [r5, #0x3]
	eor		r2, r1
	mov		r1, #0xf
	and		r2, r1
	ldrb	r3, [r4, #0x1]
	mov		r1, #0x10
	neg		r1, r1
	and		r1, r3
	orr		r1, r2
	strb	r1, [r4, #0x1]
	ldr		r1, [r5, #0x28]
	strh	r7, [r1, #0x2]
	ldr		r1, [r5, #0x28]
	add		r1, #0x4
	ldr		r2, _08340c5c
	bl		sub_0834131c
	mov		r2, #0x0
	ldr		r1, [r5, #0x28]
_08340c10:
	ldrh	r0, [r1, #0x0]
	add		r7, r7, r0
	add		r1, #0x2
	add		r2, #0x1
	cmp		r2, #0x5
	bls		_08340c10
	add		r2, r5, #0x0
	ldr		r1, [r2, #0x28]
	mvn		r0, r7
	strh	r0, [r1, #0x2]
	ldrb	r0, [r2, #0x0]
	cmp		r0, #0x0
	beq		_08340c30
	ldr		r1, _08340c60
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
_08340c30:
	mov		r0, #0x1
	neg		r0, r0
	str		r0, [r5, #0x14]
	ldrb	r0, [r5, #0x0]
	cmp		r0, #0x0
	beq		_08340c4c
	ldrb	r1, [r5, #0x8]
	mov		r0, #0x80
	and		r0, r1
	cmp		r0, #0x0
	beq		_08340c4c
	ldr		r1, _08340c60
	mov		r0, #0xc0
	strh	r0, [r1, #0x0]
_08340c4c:
	pop		{ r4, r5, r6, r7 }
	pop		{ r0 }
	bx		r0

.incbin "base.gba", 0x340C52, 0x2

_08340c54:	.4byte 0x03000600
_08340c58:	.4byte 0x03000740
_08340c5c:	.4byte Undocumented_Greenswap
_08340c60:	.4byte Timer3Control
	thumb_func_end sub_08340b94

	thumb_func_start sub_08340c64
sub_08340c64:
	push	{ r4, r5, r6, r7, lr }
	mov		r7, r10
	mov		r6, r9
	mov		r5, r8
	push	{ r5, r6, r7 }
	sub		sp, #0xc
	str		r0, [sp, #0x8]
	ldr		r1, _08340d8c
	mov		r0, #0x0
	strh	r0, [r1, #0x0]
	ldr		r6, _08340d90
	add		r3, r6, #0x4
	add		r0, sp, #0x4
	mov		r10, r0
	add		r2, r6, #0x0
	add		r2, #0x40
	mov		r5, #0x3
_08340c86:
	ldr		r1, [r2, #0x10]
	ldr		r0, [r2, #0x0]
	str		r0, [r2, #0x10]
	stmia	r2!, {  r1 }
	sub		r5, #0x1
	cmp		r5, #0x0
	bge		_08340c86
	ldr		r0, [r3, #0x0]
	str		r0, [sp, #0x0]
	mov		r2, #0x0
	str		r2, [r3, #0x0]
	ldr		r1, _08340d8c
	mov		r0, #0x1
	strh	r0, [r1, #0x0]
	sub		r0, r3, #0x4
	strb	r2, [r0, #0x3]
	mov		r5, #0x0
	add		r6, r0, #0x0
	add		r7, r6, #0x0
	mov		r1, #0x50
	add		r1, r1, r7
	mov		r9, r1
_08340cb2:
	mov		r4, #0x0
	mov		r2, #0x0
	lsl		r6, r5, #0x2
	add		r0, r5, #0x1
	mov		r8, r0
	mov		r1, sp
	add		r3, r1, r5
	mov		r1, r9
	add		r0, r6, r1
	ldr		r1, [r0, #0x0]
_08340cc6:
	ldrh	r0, [r1, #0x0]
	add		r4, r4, r0
	add		r1, #0x2
	add		r2, #0x1
	cmp		r2, #0x5
	bls		_08340cc6
	ldrb	r0, [r3, #0x0]
	cmp		r0, #0x0
	beq		_08340d24
	lsl		r0, r4, #0x10
	asr		r0, r0, #0x10
	mov		r2, #0x1
	neg		r2, r2
	cmp		r0, r2
	bne		_08340d24
	mov		r0, #0x1
	lsl		r0, r5
	ldrb	r1, [r7, #0x3]
	orr		r0, r1
	strb	r0, [r7, #0x3]
	ldrb	r2, [r7, #0x8]
	lsl		r1, r2, #0x1c
	lsr		r1, r1, #0x1c
	mov		r4, r9
	add		r3, r6, r4
	ldr		r0, [r3, #0x0]
	ldrb	r0, [r0, #0x1]
	lsl		r0, r0, #0x1a
	lsr		r0, r0, #0x1f
	lsl		r0, r5
	orr		r0, r1
	mov		r1, #0xf
	and		r0, r1
	mov		r4, #0x10
	neg		r4, r4
	add		r1, r4, #0x0
	and		r2, r1
	orr		r2, r0
	strb	r2, [r7, #0x8]
	ldr		r0, [r3, #0x0]
	add		r0, #0x4
	lsl		r1, r5, #0x3
	ldr		r2, [sp, #0x8]
	add		r1, r2, r1
	ldr		r2, _08340d94
	bl		sub_0834131c
_08340d24:
	mov		r0, #0x0
	str		r0, [sp, #0x4]
	mov		r4, r9
	add		r0, r6, r4
	ldr		r1, [r0, #0x0]
	add		r1, #0x4
	mov		r0, r10
	ldr		r2, _08340d98
	bl		sub_0834131c
	mov		r5, r8
	cmp		r5, #0x3
	ble		_08340cb2
	ldr		r0, _08340d90
	ldrb	r1, [r0, #0x2]
	ldrb	r2, [r0, #0x3]
	add		r3, r1, #0x0
	orr		r3, r2
	strb	r3, [r0, #0x2]
	mov		r1, #0x1
	and		r1, r2
	add		r6, r0, #0x0
	cmp		r1, #0x0
	beq		_08340dd8
	ldrb	r0, [r6, #0x0]
	cmp		r0, #0x8
	bne		_08340d9c
	mov		r0, #0x3
	and		r0, r2
	cmp		r0, #0x0
	beq		_08340d72
	lsl		r0, r2, #0x18
	lsr		r0, r0, #0x18
	cmp		r0, r3
	bne		_08340d72
	ldrb	r0, [r6, #0x8]
	mov		r1, #0x10
	orr		r0, r1
	strb	r0, [r6, #0x8]
_08340d72:
	ldrb	r4, [r6, #0x8]
	lsl		r2, r4, #0x1c
	lsr		r2, r2, #0x1c
	mov		r0, #0xe
	ldrb	r3, [r6, #0x2]
	add		r1, r0, #0x0
	and		r1, r2
	and		r0, r3
	cmp		r1, r0
	bne		_08340dbc
	mov		r0, #0x40
	orr		r0, r4
	b		_08340dba

_08340d8c:	.4byte InterruptMasterEnableRegister
_08340d90:	.4byte 0x03000600
_08340d94:	.4byte Undocumented_Greenswap
_08340d98:	.4byte 0x05000002

_08340d9c:
	ldrb	r2, [r6, #0x8]
	lsl		r1, r2, #0x19
	lsr		r1, r1, #0x1f
	ldr		r0, [r6, #0x50]
	ldrb	r0, [r0, #0x1]
	lsl		r0, r0, #0x19
	lsr		r0, r0, #0x1f
	orr		r1, r0
	mov		r0, #0x1
	and		r1, r0
	lsl		r1, r1, #0x6
	mov		r0, #0x41
	neg		r0, r0
	and		r0, r2
	orr		r0, r1
_08340dba:
	strb	r0, [r6, #0x8]
_08340dbc:
	ldrb	r2, [r6, #0x8]
	lsl		r1, r2, #0x1a
	lsr		r1, r1, #0x1f
	ldr		r0, [r6, #0x50]
	ldrb	r0, [r0, #0x1]
	lsl		r0, r0, #0x1b
	lsr		r0, r0, #0x1f
	orr		r0, r1
	lsl		r0, r0, #0x5
	mov		r1, #0x21
	neg		r1, r1
	and		r1, r2
	orr		r1, r0
	strb	r1, [r6, #0x8]
_08340dd8:
	ldrb	r0, [r6, #0x3]
	add		sp, #0xc
	pop		{ r3, r4, r5 }
	mov		r8, r3
	mov		r9, r4
	mov		r10, r5
	pop		{ r4, r5, r6, r7 }
	pop		{ r1 }
	bx		r1

.incbin "base.gba", 0x340DEA, 0x532
	thumb_func_end sub_08340c64

	thumb_func_start sub_0834131c
sub_0834131c:
	svc		0xb
	bx		lr

.incbin "base.gba", 0x341320, 0x32E0
	thumb_func_end sub_0834131c


.incbin "base.gba", 0x344600, 0x1C0

_083447c0:

.incbin "base.gba", 0x3447C0, 0xBB840
